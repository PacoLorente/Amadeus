# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1A 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD 2C 8E     	call Pinta_entidades
  44  AA1C CD 1E 8E     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD 4E 8E     	call Guarda_parametros_DRAW
  49  AA26 CD 59 8D     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 2A 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD 71 90     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD F0 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD 6B 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD 5A 8E     	call Recupera_parametros_DRAW
  66  AA3F CD 3C 8E     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 24 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 1A 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	12/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 65 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 145+ 85AC
 146+ 85AC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 147+ 85AE
 148+ 85AE 00           	db 0											; (Autoriza_movimiento).
 149+ 85AF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0											; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 											; (Columnas).
 156+ 85BC 00 00        	defw 0											; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 190+ 85EF
 191+ 85EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 192+ 85F1
 193+ 85F1 00           	db 0											; (Autoriza_movimiento).
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 235+ 8632
 236+ 8632 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 237+ 8634
 238+ 8634 00           	db 0											; (Autoriza_movimiento).
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 280+ 8675
 281+ 8675 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 282+ 8677
 283+ 8677 00           	db 0											; (Autoriza_movimiento).
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 325+ 86B8
 326+ 86B8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 327+ 86BA
 328+ 86BA 00           	db 0											; (Autoriza_movimiento).
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 370+ 86FB
 371+ 86FB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 372+ 86FD
 373+ 86FD 00           	db 0											; (Autoriza_movimiento).
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 415+ 873E
 416+ 873E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 417+ 8740
 418+ 8740 00           	db 0											; (Autoriza_movimiento).
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 460+ 8781
 461+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 462+ 8783
 463+ 8783 00           	db 0											; (Autoriza_movimiento).
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AA 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 493+ 879C 04           	db %00000100									; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 497+ 87A3 01           	db 1											; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 33 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 500+ 87AA
 501+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 502+ 87AC 02           	db %00000010									; (Attr).
 503+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 504+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 505+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 506+ 87B3 01           	db 1											; (Cuad_objeto).
 507+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 508+ 87B8 33 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 509+ 87BA
# file closed: Cajas_y_disparos.asm
  97  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CA 87        	defw Nivel_2
   7+ 87BE D7 87        	defw Nivel_3
   8+ 87C0 E7 87        	defw Nivel_4
   9+ 87C2 F9 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87C9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 01 02
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D5 01 02
  22+ 87D7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DC 01
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EC 01
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 02 03        	db 2,3
  31+ 87F9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FE 01
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1
  35+ 880D 01
  36+ 880E
  37+ 880E              ;---------------------------------------------------------------------------------------------------------------
  38+ 880E              ;
  39+ 880E              ;   3/9/23
  40+ 880E              ;
  41+ 880E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880E              ;	_en la caja DRAW correspondiente.
  45+ 880E              ;
  46+ 880E              ;	MODIFICA: HL,DE y A.
  47+ 880E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880E
  49+ 880E              Inicializa_Punteros_de_nivel
  50+ 880E
  51+ 880E 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8811 22 42 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8814 CD A9 8C     	call Extrae_address
  54+ 8817 7E           	ld a,(hl)
  55+ 8818 32 0E 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881B 23           	inc hl
  57+ 881C 22 44 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 881F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8820
  60+ 8820              ;---------------------------------------------------------------------------------------------------------------
  61+ 8820              ;
  62+ 8820              ;   13/5/23
  63+ 8820              ;
  64+ 8820              ;	Destruye A,BC,HL,DE
  65+ 8820
  66+ 8820              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8820              ;	_del juego.
  68+ 8820
  69+ 8820              Prepara_cajas
  70+ 8820
  71+ 8820              ; Preparamos los punteros de las cajas.
  72+ 8820
  73+ 8820 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8823 CD A9 8C     	call Extrae_address
  75+ 8826 CD 63 88     	call Avanza_caja
  76+ 8829
  77+ 8829 CD A7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882C
  79+ 882C 2A 44 89     	ld hl,(Datos_de_nivel)
  80+ 882F
  81+ 882F              ; HL está en los datos del nivel correspondiente.
  82+ 882F              ; B actuará como contador de cajas.
  83+ 882F
  84+ 882F C5           1 push bc
  85+ 8830
  86+ 8830 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8831 CD 54 88     	call PreparaBC
  88+ 8834
  89+ 8834 21 96 87     	ld hl,Indice_de_entidades
  90+ 8837 CD 5C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883A 22 14 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883D
  93+ 883D CD 6D 88     	call Datos_de_entidad_a_caja
  94+ 8840
  95+ 8840 2A 0C 89     	ld hl,(Indice_restore_caja)
  96+ 8843 CD A9 8C     	call Extrae_address
  97+ 8846 CD 63 88     	call Avanza_caja
  98+ 8849
  99+ 8849 2A 44 89     	ld hl,(Datos_de_nivel)
 100+ 884C 23           	inc hl
 101+ 884D 22 44 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8850
 103+ 8850 C1           	pop bc
 104+ 8851 10 DC        	djnz 1B
 105+ 8853 C9           	ret
 106+ 8854
 107+ 8854 CB 27        PreparaBC sla a
 108+ 8856 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8858 4F           	ld c,a
 110+ 8859 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885B C9           	ret
 112+ 885C
 113+ 885C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885D ED 4A        	adc hl,bc
 115+ 885F CD A9 8C     	call Extrae_address
 116+ 8862 C9           	ret
 117+ 8863
 118+ 8863 22 08 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8866 13           	inc de
 120+ 8867 13           	inc de
 121+ 8868 EB           	ex de,hl
 122+ 8869 22 0C 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886C C9           	ret
 124+ 886D
 125+ 886D              Datos_de_entidad_a_caja
 126+ 886D
 127+ 886D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886D
 129+ 886D
 130+ 886D ED 5B 08 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8871
 132+ 8871 01 02 00     	ld bc,2
 133+ 8874 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8876
 135+ 8876 01 07 00     	ld bc,7
 136+ 8879 CD A1 88     	call Situa_DE
 137+ 887C
 138+ 887C 01 05 00     	ld bc,5
 139+ 887F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8881
 141+ 8881 01 04 00     	ld bc,4
 142+ 8884 CD A1 88     	call Situa_DE
 143+ 8887
 144+ 8887 01 07 00     	ld bc,7
 145+ 888A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888C
 147+ 888C 01 16 00     	ld bc,22
 148+ 888F CD A1 88     	call Situa_DE
 149+ 8892
 150+ 8892 01 02 00     	ld bc,2
 151+ 8895 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8897
 153+ 8897              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8897              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8897
 156+ 8897 01 0F 00     	ld bc,15									; *****
 157+ 889A CD A1 88     	call Situa_DE
 158+ 889D
 159+ 889D 3E 03        	ld a,3
 160+ 889F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A0
 162+ 88A0 C9           	ret
 163+ 88A1
 164+ 88A1 EB           Situa_DE ex de,hl
 165+ 88A2 A7           	and a
 166+ 88A3 ED 4A        	adc hl,bc
 167+ 88A5 EB           	ex de,hl
 168+ 88A6 C9           	ret
 169+ 88A7
 170+ 88A7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A7              ;
 172+ 88A7              ;	21/5/23
 173+ 88A7              ;
 174+ 88A7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A7              ;
 177+ 88A7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A7              ;
 181+ 88A7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A7              ;	MODIFICA: A y B.
 183+ 88A7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A7
 185+ 88A7              Admin_num_entidades
 186+ 88A7
 187+ 88A7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A7
 189+ 88A7 3A 0E 89     	ld a,(Numero_de_entidades)
 190+ 88AA A7           	and a
 191+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AB              ;	jr z,$
 193+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AB
 195+ 88AB 20 03        	jr nz,3F
 196+ 88AD
 197+ 88AD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AD
 199+ 88AD CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B0
 201+ 88B0 3A 0E 89     3 ld a,(Numero_de_entidades)
 202+ 88B3 FE 07        	cp 7
 203+ 88B5 38 08        	jr c,1F
 204+ 88B7
 205+ 88B7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B7              ; Actualizamos variables.
 207+ 88B7
 208+ 88B7 3E 07        	ld a,7
 209+ 88B9 32 0F 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BC 47           	ld b,a
 211+ 88BD 18 04        	jr 2F
 212+ 88BF
 213+ 88BF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88BF              ; (Numero_de_entidades)="0".
 215+ 88BF
 216+ 88BF 32 0F 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C2 47           	ld b,a
 218+ 88C3 C9           2 ret
# file closed: Niveles.asm
  98  88C4
  99  88C4              ; ******************************************************************************************************************************************************************************************
 100  88C4              ; Constantes.
 101  88C4              ; ******************************************************************************************************************************************************************************************
 102  88C4              ;
 103  88C4              ; 10/11/23
 104  88C4
 105  88C4              ;
 106  88C4              ; Constantes generales.
 107  88C4              ;
 108  88C4
 109  88C4              Sprite_vacio equ $f000
 110  88C4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88C4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88C4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88C4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88C4
 115  88C4              Almacen_de_movimientos_masticados equ $5cd0				; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 116  88C4              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 117  88C4              ;														; 4799 bytes, 4,8Kb.
 118  88C4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 119  88C4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 120  88C4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 121  88C4              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 122  88C4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 123  88C4
 124  88C4              ;														; 55 Bytes.
 125  88C4
 126  88C4              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 127  88C4              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 128  88C4
 129  88C4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 130  88C4
 131  88C4              ; ******************************************************************************************************************************************************************************************
 132  88C4              ; Variables.
 133  88C4              ; ******************************************************************************************************************************************************************************************
 134  88C4              ;
 135  88C4              ; 12/12//23
 136  88C4              ;
 137  88C4              ; Variables de DRAW. (Motor principal).
 138  88C4              ;
 139  88C4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 140  88C4
 141  88C4 00           Filas db 0												; Filas. [DRAW]
 142  88C5 00           Columns db 0  											; Nº de columnas. [DRAW]
 143  88C6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 144  88C8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 145  88CA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 146  88CB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 147  88CC
 148  88CC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 149  88CC
 150  88CC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 151  88CD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 152  88CD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 153  88CD 00           Attr db 0												; Atributos de la entidad:
 154  88CE
 155  88CE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 156  88CE              ;
 157  88CE              ;	COLORES: 0 ..... NEGRO
 158  88CE              ;    		 1 ..... AZUL
 159  88CE              ; 			 2 ..... ROJO
 160  88CE              ;			 3 ..... MAGENTA
 161  88CE              ; 			 4 ..... VERDE
 162  88CE              ; 			 5 ..... CIAN
 163  88CE              ;			 6 ..... AMARILLO
 164  88CE              ; 			 7 ..... BLANCO
 165  88CE
 166  88CE 00 00        Indice_Sprite_der defw 0
 167  88D0 00 00        Indice_Sprite_izq defw 0
 168  88D2 00 00        Puntero_DESPLZ_der defw 0
 169  88D4 00 00        Puntero_DESPLZ_izq defw 0
 170  88D6
 171  88D6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 172  88D8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 173  88D9
 174  88D9              ; Variables de objeto. (Características).
 175  88D9
 176  88D9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 177  88DA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 178  88DB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 179  88DC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 180  88DD
 181  88DD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 182  88DE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 183  88DE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 184  88DE 00 00 00...  Variables_de_borrado ds 6
 185  88E4
 186  88E4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 187  88E6 00 00        	defw 0
 188  88E8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 189  88EA 00 00 00 00  	db 0,0,0,0
 190  88EE
 191  88EE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 192  88F0              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 193  88F0
 194  88F0 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados
 195  88F2
 196  88F2              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 197  88F2              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 198  88F2
 199  88F2              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 200  88F2
 201  88F2 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 202  88F3              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 203  88F3              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 204  88F3              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 205  88F3              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 206  88F3              ;
 207  88F3              ; 														DESCRIPCIÖN:
 208  88F3              ;
 209  88F3              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 210  88F3              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 211  88F3              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 212  88F3              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 213  88F3              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 214  88F3              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 215  88F3              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 216  88F3              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 217  88F3              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 218  88F3              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 219  88F3              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 220  88F3              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 221  88F3              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 222  88F3              ;
 223  88F3              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 224  88F3              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 225  88F3              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 226  88F3
 227  88F3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 228  88F3
 229  88F3 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 230  88F5 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 231  88F7 00 00        Puntero_indice_mov_bucle defw 0							;
 232  88F9              ;
 233  88F9              ;
 234  88F9 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 235  88FA              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 236  88FA              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 237  88FA 00           Incrementa_puntero_backup db 0
 238  88FB 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 239  88FC              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 240  88FC 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 241  88FD 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 242  88FE 00           Cola_de_desplazamiento db 0								; Este byte indica:
 243  88FF              ;
 244  88FF              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 245  88FF              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 246  88FF              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 247  88FF              ;
 248  88FF              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 249  88FF              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 250  88FF              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 251  88FF              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 252  88FF              ;
 253  88FF              ;														;	"$ff" ..... Bucle infinito de repetición.
 254  88FF              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 255  88FF              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 256  88FF
 257  88FF
 258  88FF              ; Variables de funcionamiento. [DRAW].
 259  88FF
 260  88FF 00           Columnas db 0
 261  8900 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 262  8902              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 263  8902 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 264  8903
 265  8903              ; variables de control general.
 266  8903
 267  8903 00           Ctrl_2 db 0
 268  8904              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 269  8904              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 270  8904              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 271  8904              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 272  8904              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 273  8904              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 274  8904              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 275  8904              ;
 276  8904              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 277  8904              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 278  8904              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 279  8904              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 280  8904              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 281  8904              ;														BIT 4, ???
 282  8904              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 283  8904
 284  8904 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 285  8905
 286  8905              ;! 65 Bytes por entidad.
 287  8905
 288  8905              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 289  8905              ;					         		---------;      ;---------
 290  8905
 291  8905
 292  8905              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 293  8905
 294  8905 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 295  8906
 296  8906              ;														DESCRIPCIÓN:
 297  8906              ;
 298  8906              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 299  8906              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 300  8906              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 301  8906              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 302  8906              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 303  8906              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 304  8906
 305  8906              ;														BIT 3, Recarga de nueva oleada.
 306  8906              ;														BIT 4, Recarga de nueva oleada.
 307  8906              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 308  8906              ;														BIT 6, **** Frame completo.
 309  8906              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 310  8906
 311  8906 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 312  8908              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 313  8908              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 314  8908              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 315  8908
 316  8908              ; Gestión de ENTIDADES y CAJAS.
 317  8908
 318  8908 00 00        Puntero_store_caja defw 0
 319  890A 00 00        Puntero_restore_caja defw 0
 320  890C 00 00        Indice_restore_caja defw 0
 321  890E 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 322  890F 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 323  8910 00           Entidades_en_curso db 0									; ..... ..... .....
 324  8911 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 325  8912              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 326  8912              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 327  8912              ;														; _ (Numero_de_malotes)="0".
 328  8912 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 329  8914 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 330  8916              ;														; _ puntero (Indice_entidades).
 331  8916
 332  8916
 333  8916              ;---------------------------------------------------------------------------------------------------------------
 334  8916              ;
 335  8916              ;	18/11/23
 336  8916              ;
 337  8916              ;	Álbumes.
 338  8916
 339  8916 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 340  8918              ;														; _variable para almacenar lo posición del puntero_
 341  8918              ; 														; _de pila, SP.
 342  8918 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 343  891A              ;														; La utiliza la rutina [Extrae_foto_registros].
 344  891A 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 345  891C 00 70        Stack_snapshot defw Album_de_fotos
 346  891E 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 347  8920
 348  8920              ;End_Snapshot defw Album_de_fotos
 349  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 350  8920 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 351  8922              ;														; _el snapshot de los registros del siguiente disparo.
 352  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 353  8922 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 354  8924
 355  8924 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 356  8925              ;
 357  8925              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 358  8925              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 359  8925
 360  8925              ; Gestión de Disparos.
 361  8925
 362  8925 00           Numero_de_disparotes db 0
 363  8926 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 364  8928 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 365  892A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 366  892B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 367  892B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 368  892B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 369  892D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 370  892D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 371  892D              ;														; _produzca colisión.
 372  892D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 373  892F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 374  892F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 375  8932              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 376  8932 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 377  8935              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 378  8935 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 379  8936
 380  8936              ;---------------------------------------------------------------------------------------------------------------
 381  8936
 382  8936              ; Relojes y temporizaciones.
 383  8936
 384  8936 00           Contador_de_frames db 0
 385  8937 00           Contador_de_frames_2 db 0
 386  8938
 387  8938 04           Clock_explosion db 4
 388  8939 1E           Clock_Entidades_en_curso db 30
 389  893A 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 390  893B              ;														; Repite la oleada de entidades.
 391  893B 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 392  893C 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 393  893D 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 394  893E
 395  893E 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 396  893F 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 397  8940 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 398  8941
 399  8941              ;---------------------------------------------------------------------------------------------------------------
 400  8941
 401  8941              ; Gestión de NIVELES.
 402  8941
 403  8941 00           Nivel db 0												; Nivel actual del juego.
 404  8942 00 00        Puntero_indice_NIVELES defw 0
 405  8944 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 406  8946              ; 														; _ que definen el NIVEL.
 407  8946              ; Y todo comienza aquí .....
 408  8946              ;
 409  8946              ; Rutina principal *************************************************************************************************************************************************************************
 410  8946              ;
 411  8946              ;	16/11/22
 412  8946
 413  8946              START
 414  8946
 415  8946 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 416  8949 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 417  894B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 418  894D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 419  894F F3           	DI
 420  8950
 421  8950 3E 07        	ld a,%00000111
 422  8952 CD 47 99     	call Cls
 423  8955
 424  8955 CD 82 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 425  8958
 426  8958              ; INICIALIZACIÓN.
 427  8958
 428  8958 CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 429  895B CD 20 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 430  895E CD 11 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 431  8961              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 432  8961 CD 32 8D     	call Restore_entidad
 433  8964
 434  8964 21 0F 89     	ld hl,Numero_parcial_de_entidades
 435  8967 46           	ld b,(hl)
 436  8968 04           	inc b
 437  8969 05           	dec b
 438  896A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 439  896C
 440  896C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 441  896C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 442  896C              ;	Pintamos el resto de entidades:
 443  896C
 444  896C              ;	INICIA ENTIDADES !!!!!
 445  896C
 446  896C C5           1 push bc  												; Guardo el contador de entidades.
 447  896D CD 8F 8B     	call Inicia_entidad
 448  8970 C1           	pop bc
 449  8971 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 450  8973
 451  8973              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 452  8973              ; (Esto se dá cuando se inicia una nueva oleada).
 453  8973
 454  8973 3A 05 89     	ld a,(Ctrl_1)
 455  8976 CB 5F        	bit 3,a
 456  8978 20 1B        	jr nz,5F											; Loop
 457  897A
 458  897A              ; 	INICIA AMADEUS !!!!!
 459  897A
 460  897A CD 59 8D     3 call Restore_Amadeus
 461  897D CD AF 8C     	call Inicia_Puntero_objeto
 462  8980 CD 3A 93     	call Draw
 463  8983 CD A0 7F     	call Guarda_foto_registros
 464  8986 CD D6 8D     	call Guarda_datos_de_borrado_Amadeus
 465  8989
 466  8989 11 7E 85     	ld de,Amadeus_db
 467  898C CD 6B 8D     	call Store_Amadeus
 468  898F
 469  898F              ; 	INICIA DISPAROS !!!!!
 470  898F
 471  898F CD 27 8C     	call Inicia_Puntero_Disparo_Entidades
 472  8992 CD 2E 8C     	call Inicia_Puntero_Disparo_Amadeus
 473  8995
 474  8995              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 475  8995
 476  8995 CD 11 8C     5 call Inicia_punteros_de_cajas
 477  8998 CD 32 8D     	call Restore_entidad
 478  899B
 479  899B 3A 05 89     	ld a,(Ctrl_1)
 480  899E CB 5F        	bit 3,a
 481  89A0 28 07        	jr z,6F
 482  89A2
 483  89A2              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 484  89A2
 485  89A2 21 05 89     	ld hl,Ctrl_1
 486  89A5 CB 9E        	res 3,(hl)
 487  89A7 18 07        	jr Main
 488  89A9
 489  89A9              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 490  89A9
 491  89A9 21 24 89     6 ld hl,Ctrl_3
 492  89AC CB C6        	set 0,(hl)											; Frame completo.
 493  89AE FB           	ei
 494  89AF 76           	halt
 495  89B0
 496  89B0              ; ------------------------------------
 497  89B0
 498  89B0              Main
 499  89B0              ;
 500  89B0              ;	11/12/23
 501  89B0
 502  89B0              ; Aparece nueva entidad ???
 503  89B0
 504  89B0              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 505  89B0              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 506  89B0              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 507  89B0              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 508  89B0              ;														; _un 2º bloque.
 509  89B0
 510  89B0 3A 39 89     	ld a,(Clock_Entidades_en_curso)
 511  89B3 47           	ld b,a
 512  89B4 3A 36 89     	ld a,(Contador_de_frames)
 513  89B7 B8           	cp b
 514  89B8 20 18        	jr nz,13F
 515  89BA
 516  89BA              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 517  89BA              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 518  89BA              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 519  89BA              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 520  89BA
 521  89BA              ;	inc a
 522  89BA              ;	cp b
 523  89BA              ;	jr nz,13F
 524  89BA
 525  89BA
 526  89BA              ;23 ld (Contador_de_frames),a
 527  89BA
 528  89BA              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 529  89BA              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 530  89BA
 531  89BA 3A 0F 89     21 ld a,(Numero_parcial_de_entidades)
 532  89BD 47           	ld b,a
 533  89BE 3A 10 89     	ld a,(Entidades_en_curso)
 534  89C1 B8           	cp b
 535  89C2 28 0E        	jr z,13F
 536  89C4 30 0C        	jr nc,13F
 537  89C6
 538  89C6              ; --- --- --- --- ---
 539  89C6
 540  89C6 3C           	inc a
 541  89C7 32 10 89     	ld (Entidades_en_curso),a
 542  89CA
 543  89CA              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 544  89CA
 545  89CA 3A 39 89     	ld a,(Clock_Entidades_en_curso)
 546  89CD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 547  89CD              ;! _ IMPREDECIBLE !!!!
 548  89CD C6 32        	add 50
 549  89CF 32 39 89     	ld (Clock_Entidades_en_curso),a
 550  89D2
 551  89D2              ; -------------------------------------------------------------------------------------------------------------
 552  89D2
 553  89D2              ; Habilita disparos.
 554  89D2
 555  89D2 21 3B 89     13 ld hl,Disparo_Amadeus
 556  89D5 11 3D 89     	ld de,CLOCK_repone_disparo_Amadeus
 557  89D8 CD 24 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 558  89DB
 559  89DB 21 3E 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 560  89DE 11 40 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 561  89E1 CD 24 9D     	call Habilita_disparos
 562  89E4
 563  89E4              ; COLISIONES.
 564  89E4
 565  89E4 CD 3A 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 566  89E7
 567  89E7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 568  89E7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 569  89E7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 570  89E7
 571  89E7 AF           	xor a
 572  89E8 32 2A 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 573  89EB
 574  89EB CD 11 8C     	call Inicia_punteros_de_cajas
 575  89EE CD 32 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 576  89F1              ; 														; _ en DRAW.
 577  89F1 3A C4 88     	ld a,(Filas)
 578  89F4 A7           	and a
 579  89F5 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 580  89F7 CD 44 8D     	call Incrementa_punteros_de_cajas
 581  89FA 18 F2        	jr 12B
 582  89FC
 583  89FC              ; ---------------------------------------------------------------------------------------
 584  89FC
 585  89FC 3A 0F 89     10 ld a,(Numero_parcial_de_entidades)
 586  89FF 47               ld b,a
 587  8A00 A7           	and a
 588  8A01 20 14        	jr nz,11F
 589  8A03
 590  8A03 21 05 89     	ld hl,Ctrl_1
 591  8A06 CB 66        	bit 4,(hl)
 592  8A08 C2 BB 8A     	jp nz,16F
 593  8A0B
 594  8A0B              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 595  8A0B
 596  8A0B 21 05 89     	ld hl,Ctrl_1
 597  8A0E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 598  8A10
 599  8A10 3A 36 89     	ld a,(Contador_de_frames)
 600  8A13 3C           	inc a
 601  8A14 32 3A 89     	ld (Activa_recarga_cajas),a
 602  8A17
 603  8A17              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 604  8A17
 605  8A17 3A 10 89     11 ld a,(Entidades_en_curso)
 606  8A1A A7           	and a
 607  8A1B CA BB 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 608  8A1E 47           	ld b,a												; No hay entidades que gestionar.
 609  8A1F
 610  8A1F              ; ( Código que ejecutamos con cada entidad: ).
 611  8A1F
 612  8A1F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 613  8A1F
 614  8A1F C5           15 push bc 												; Nº de entidades en curso.
 615  8A20
 616  8A20              ; Existe "Entidad_guía" ???.
 617  8A20              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 618  8A20
 619  8A20 3A 24 89     	ld a,(Ctrl_3)
 620  8A23 CB 4F        	bit 1,a
 621  8A25 20 11        	jr nz,22F
 622  8A27
 623  8A27              ; Almacén de "Movimientos_masticados" lleno ???
 624  8A27              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 625  8A27              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 626  8A27
 627  8A27 3A 24 89     	ld a,(Ctrl_3)
 628  8A2A CB 57        	bit 2,a
 629  8A2C 20 0A        	jr nz,22F
 630  8A2E
 631  8A2E              ; Activa "Entidad_guía".
 632  8A2E
 633  8A2E 21 03 89     	ld hl,Ctrl_2
 634  8A31 CB EE        	set 5,(hl)
 635  8A33 21 24 89     	ld hl,Ctrl_3
 636  8A36 CB CE        	set 1,(hl)
 637  8A38
 638  8A38              ; Impacto ???
 639  8A38
 640  8A38 3A DD 88     22 ld a,(Impacto)
 641  8A3B A7           	and a
 642  8A3C 28 31        	jr z,8F
 643  8A3E
 644  8A3E              ; Hay Impacto en esta entidad.
 645  8A3E
 646  8A3E 21 38 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 647  8A41 35           	dec (hl)
 648  8A42 C2 AE 8A     	jp nz,17F
 649  8A45
 650  8A45              ;! Velocidad de la animación de la explosión.
 651  8A45
 652  8A45 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 653  8A47              ;														; _,(velocidad de la explosión).
 654  8A47
 655  8A47              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 656  8A47
 657  8A47 CD F6 8D     	call Repone_datos_de_borrado
 658  8A4A CD 4F 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 659  8A4D
 660  8A4D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 661  8A4D
 662  8A4D 3A 03 89     	ld a,(Ctrl_2)
 663  8A50 CB 4F        	bit 1,a
 664  8A52 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 665  8A54
 666  8A54              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 667  8A54
 668  8A54 3A CC 88     	ld a,(CTRL_DESPLZ)
 669  8A57 A7           	and a
 670  8A58 20 08        	jr nz,18F
 671  8A5A
 672  8A5A 21 84 84     	ld hl,Indice_Explosion_2x2-2
 673  8A5D 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 674  8A60 18 06        	jr 19F
 675  8A62
 676  8A62 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 677  8A65 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 678  8A68
 679  8A68 21 03 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 680  8A6B CB CE        	set 1,(hl)
 681  8A6D 18 22        	jr 7F
 682  8A6F
 683  8A6F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 684  8A6F              ; _con las coordenadas de la entidad almacenada en DRAW.
 685  8A6F
 686  8A6F 3A 05 89     8 ld a,(Ctrl_1)
 687  8A72 CB 57        	bit 2,a
 688  8A74 28 1B        	jr z,7F
 689  8A76
 690  8A76 2A 2D 89     	ld hl,(Coordenadas_disparo_certero)
 691  8A79 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 692  8A7A              ;														; E contiene la coordenada_X del disparo.
 693  8A7A 2A CA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 694  8A7D              ;														; H FILA, (Coordenada_y de la entidad).
 695  8A7D A7           	and a
 696  8A7E ED 52        	sbc hl,de
 697  8A80
 698  8A80 CD 53 92     	call Determina_resultado_comparativa
 699  8A83
 700  8A83 78           	ld a,b
 701  8A84 A7           	and a
 702  8A85 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 703  8A87
 704  8A87              ; ----- ----- -----
 705  8A87
 706  8A87 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 707  8A89 32 DD 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 708  8A8C
 709  8A8C 21 05 89     	ld hl,Ctrl_1
 710  8A8F CB 96        	res 2,(hl)
 711  8A91
 712  8A91 CD 0C 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 713  8A94
 714  8A94 3A F2 88     	ld a,(Ctrl_0)
 715  8A97 CB 67        	bit 4,a
 716  8A99 20 0B        	jr nz,23F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 717  8A9B
 718  8A9B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 719  8A9B              ; [[[
 720  8A9B              ;	call Detecta_disparo_entidad
 721  8A9B              ; ]]]
 722  8A9B
 723  8A9B
 724  8A9B              ; 17/12/23
 725  8A9B
 726  8A9B              ;	NO HA HABIDO MOVIMIENTO.
 727  8A9B
 728  8A9B F3           	di
 729  8A9C 3A 24 89     	ld a,(Ctrl_3)
 730  8A9F CB 57        	bit 2,a
 731  8AA1 20 FE        	jr nz,$
 732  8AA3 FB           	ei
 733  8AA4 18 08        	jr 17F
 734  8AA6
 735  8AA6 CD EF 8B     23 call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 736  8AA9
 737  8AA9 21 F2 88     	ld hl,Ctrl_0
 738  8AAC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 739  8AAE
 740  8AAE CD F7 8C     17 call Store_Restore_cajas
 741  8AB1
 742  8AB1 C1           	pop bc
 743  8AB2
 744  8AB2 05           	dec b
 745  8AB3 C2 1F 8A     	jp nz,15B
 746  8AB6
 747  8AB6              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 748  8AB6              ; Hemos gestionado todas las unidades.
 749  8AB6              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 750  8AB6
 751  8AB6 21 05 89     	ld hl,Ctrl_1
 752  8AB9 CB 96        	res 2,(hl)
 753  8ABB
 754  8ABB 21 24 89     16 ld hl,Ctrl_3
 755  8ABE CB C6        	set 0,(hl)											; Frame completo.
 756  8AC0 AF           	xor a
 757  8AC1 D3 FE        	out ($fe),a
 758  8AC3 FB           	ei
 759  8AC4 76           	halt
 760  8AC5
 761  8AC5              ; ----------------------------------------
 762  8AC5
 763  8AC5 3A 05 89     	ld a,(Ctrl_1) 										; Existe Loop?
 764  8AC8 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 765  8ACA CA B0 89     	jp z,Main
 766  8ACD
 767  8ACD              ; RECARGA DE NUEVA OLEADA.
 768  8ACD
 769  8ACD 3A 36 89     	ld a,(Contador_de_frames)
 770  8AD0 47           	ld b,a
 771  8AD1 3A 3A 89     	ld a,(Activa_recarga_cajas)
 772  8AD4 B8           	cp b
 773  8AD5 28 08        	jr z,20F
 774  8AD7
 775  8AD7 21 05 89     	ld hl,Ctrl_1
 776  8ADA CB E6        	set 4,(hl)
 777  8ADC C3 B0 89     	jp Main
 778  8ADF
 779  8ADF 21 05 89     20 ld hl,Ctrl_1
 780  8AE2 CB A6        	res 4,(hl)
 781  8AE4
 782  8AE4 3A 36 89     	ld a,(Contador_de_frames)
 783  8AE7
 784  8AE7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 785  8AE7              ;! _ IMPREDECIBLE !!!!
 786  8AE7
 787  8AE7 C6 0A        	add 10
 788  8AE9 32 39 89     	ld (Clock_Entidades_en_curso),a
 789  8AEC
 790  8AEC C3 5B 89     	jp 4B
 791  8AEF
 792  8AEF C9           	ret
 793  8AF0
 794  8AF0              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 795  8AF0              ;
 796  8AF0              ;	16/11/23
 797  8AF0
 798  8AF0              Gestiona_Amadeus
 799  8AF0
 800  8AF0              ;! Activa/desactiva impacto con Amadeus.
 801  8AF0
 802  8AF0              ;	ld a,(Impacto)
 803  8AF0              ;	and a
 804  8AF0              ;	jr nz,2F
 805  8AF0
 806  8AF0 CD 7C 8B     	call Mov_Amadeus
 807  8AF3
 808  8AF3 3A F2 88     2 ld a,(Ctrl_0)
 809  8AF6 CB 67        	bit 4,a
 810  8AF8 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 811  8AFA
 812  8AFA CD EF 8B     	call Guarda_foto_entidad_a_pintar
 813  8AFD CD D6 8D     	call Guarda_datos_de_borrado_Amadeus
 814  8B00
 815  8B00 21 F2 88     1 ld hl,Ctrl_0
 816  8B03 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 817  8B05
 818  8B05 CD DE 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 819  8B08
 820  8B08              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 821  8B08
 822  8B08 CD 91 8C     	call Calcula_numero_de_disparotes
 823  8B0B
 824  8B0B C9           	ret
 825  8B0C
 826  8B0C              ; --------------------------------------------------------------------------------------------------------------
 827  8B0C              ;
 828  8B0C              ;	15/12/23
 829  8B0C
 830  8B0C              Mov_obj
 831  8B0C
 832  8B0C 3A 03 89     	ld a,(Ctrl_2)
 833  8B0F CB 4F        	bit 1,a
 834  8B11 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 835  8B13
 836  8B13              ; Explosión:
 837  8B13
 838  8B13 3A 04 89     	ld a,(Frames_explosion)
 839  8B16 A7           	and a
 840  8B17 20 1D        	jr nz,4F
 841  8B19
 842  8B19              ; Una alimaña menos!!!!!!!!!1
 843  8B19
 844  8B19              ; Se trataba de una Entidad_guía ???
 845  8B19
 846  8B19 3A 03 89     	ld a,(Ctrl_2)
 847  8B1C CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 848  8B1E 28 05        	jr z,5F
 849  8B20
 850  8B20 21 24 89     	ld hl,Ctrl_3
 851  8B23 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 852  8B25
 853  8B25 CD 74 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 854  8B28 21 0F 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 855  8B2B 35           	dec (hl)
 856  8B2C 21 10 89     	ld hl,Entidades_en_curso
 857  8B2F 35           	dec (hl)
 858  8B30 21 0E 89     	ld hl,Numero_de_entidades
 859  8B33 35           	dec (hl)
 860  8B34 18 45        	jr 3F
 861  8B36
 862  8B36              ; -----
 863  8B36
 864  8B36              ;	`Movemos´ la explosión.
 865  8B36
 866  8B36 2A D2 88     4 ld hl,(Puntero_DESPLZ_der)
 867  8B39 23           	inc hl
 868  8B3A 23           	inc hl
 869  8B3B 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 870  8B3E CD A9 8C     	call Extrae_address
 871  8B41 22 C8 88     	ld (Puntero_objeto),hl
 872  8B44
 873  8B44 21 04 89     	ld hl,Frames_explosion
 874  8B47 35           	dec (hl)
 875  8B48
 876  8B48 21 F2 88     	ld hl,Ctrl_0
 877  8B4B CB E6        	set 4,(hl)
 878  8B4D
 879  8B4D 18 2C        	jr 3F
 880  8B4F
 881  8B4F AF           2 xor a
 882  8B50 32 F2 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 883  8B53
 884  8B53              ; Movemos Entidades malignas.
 885  8B53              ; Se trata de una "Entidad_guía" ???
 886  8B53
 887  8B53 3A 03 89     	ld a,(Ctrl_2)
 888  8B56 CB 6F        	bit 5,a
 889  8B58 28 1B        	jr z,7F
 890  8B5A
 891  8B5A CD CF 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 892  8B5D
 893  8B5D 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 894  8B60 CB 67        	bit 4,a
 895  8B62 C8           	ret z
 896  8B63
 897  8B63              ; Ha habido desplazamiento de la entidad maligna.
 898  8B63              ; Ha llegado a zona de AMADEUS ???
 899  8B63
 900  8B63 3A CB 88     	ld a,(Coordenada_y)
 901  8B66 FE 14        	cp $14
 902  8B68 38 08        	jr c,1F
 903  8B6A
 904  8B6A              ; ---------
 905  8B6A
 906  8B6A              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 907  8B6A              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 908  8B6A
 909  8B6A F3           	di
 910  8B6B CD 03 90     	call Genera_coordenadas_X
 911  8B6E CD 3F 90     	call Compara_coordenadas_X
 912  8B71 FB           	ei
 913  8B72
 914  8B72              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 915  8B72
 916  8B72              ; ---------
 917  8B72
 918  8B72 CD F9 8B     1 call Prepara_var_pintado	 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 919  8B75 CD F6 8D     7 call Repone_datos_de_borrado 							; BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 920  8B78 CD 4F 8C     	call Limpia_Variables_de_borrado
 921  8B7B
 922  8B7B C9           3 ret
 923  8B7C
 924  8B7C              ; --------------------------------------------------------------------------------------------------------------
 925  8B7C              ;
 926  8B7C              ;	29/1/23
 927  8B7C
 928  8B7C              Mov_Amadeus
 929  8B7C
 930  8B7C CD 96 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 931  8B7F
 932  8B7F 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 933  8B82 CB 67        	bit 4,a
 934  8B84 C8           	ret z
 935  8B85
 936  8B85              ; ---------
 937  8B85
 938  8B85 CD F9 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 939  8B88 CD E6 8D     	call Repone_datos_de_borrado_Amadeus
 940  8B8B CD 4F 8C     	call Limpia_Variables_de_borrado
 941  8B8E
 942  8B8E C9           	ret
 943  8B8F
 944  8B8F              ; -----------------------------------------------------------------------------------
 945  8B8F              ;
 946  8B8F              ;	12/12/23
 947  8B8F              ;
 948  8B8F              ;	Inicia Entidades y fija "Entidad_guía".
 949  8B8F
 950  8B8F              Inicia_entidad
 951  8B8F
 952  8B8F CD C1 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 953  8B92 CD AF 8C     	call Inicia_Puntero_objeto
 954  8B95 CD 5B 99     	call Recompone_posicion_inicio
 955  8B98 CD 3A 93     	call Draw
 956  8B9B CD A6 8B     	call Guarda_movimiento_masticado
 957  8B9E CD A0 7F     	call Guarda_foto_registros
 958  8BA1 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 959  8BA2              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 960  8BA2              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 961  8BA2 CD F7 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 962  8BA5 C9           	ret
 963  8BA6
 964  8BA6
 965  8BA6              ; -----------------------------------------------------------------------------------
 966  8BA6              ;
 967  8BA6              ;	15/12/23
 968  8BA6              ;
 969  8BA6              ;	Inicia Entidades y fija "Entidad_guía".
 970  8BA6
 971  8BA6 3A 03 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 972  8BA9 CB 6F        	bit 5,a
 973  8BAB C8           	ret z
 974  8BAC ED 73 16 89  	ld (Stack),sp
 975  8BB0 ED 7B F0 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
 976  8BB4 E5           	push hl
 977  8BB5 DD E5            push ix
 978  8BB7 FD E5            push iy
 979  8BB9 ED 7B 16 89      ld sp,(Stack)
 980  8BBD CD D8 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados
 981  8BC0 C9               ret
 982  8BC1
 983  8BC1              ; --------------------------------------------------------------------------------------------------------------
 984  8BC1              ;
 985  8BC1              ;	12/12/23
 986  8BC1              ;
 987  8BC1
 988  8BC1              Inicia_entidad_guia
 989  8BC1
 990  8BC1              ; Existe "Entidad_guía" ???
 991  8BC1
 992  8BC1 3A 24 89     	ld a,(Ctrl_3)
 993  8BC4 CB 4F        	bit 1,a
 994  8BC6 C0           	ret nz
 995  8BC7
 996  8BC7              ; Inicia Entidad_guía:
 997  8BC7
 998  8BC7 21 03 89     	ld hl,Ctrl_2
 999  8BCA CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1000  8BCC 21 24 89     	ld hl,Ctrl_3
1001  8BCF CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1002  8BD1
1003  8BD1 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados+6
1004  8BD4 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1005  8BD7
1006  8BD7 C9           	ret
1007  8BD8
1008  8BD8              ; --------------------------------------------------------------------------------------------------------------
1009  8BD8              ;
1010  8BD8              ;	13/12/23
1011  8BD8              ;
1012  8BD8
1013  8BD8              Actualiza_Puntero_de_almacen_de_mov_masticados
1014  8BD8
1015  8BD8              ;	Entidad_guía ???
1016  8BD8
1017  8BD8 3A 03 89     	ld a,(Ctrl_2)
1018  8BDB CB 6F        	bit 5,a
1019  8BDD C8           	ret z
1020  8BDE
1021  8BDE E5           	push hl
1022  8BDF C5           	push bc
1023  8BE0
1024  8BE0 2A F0 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1025  8BE3 01 06 00     	ld bc,6
1026  8BE6 A7           	and a
1027  8BE7 ED 4A        	adc hl,bc
1028  8BE9 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1029  8BEC
1030  8BEC C1           	pop bc
1031  8BED E1           	pop hl
1032  8BEE
1033  8BEE C9           	ret
1034  8BEF
1035  8BEF              ; --------------------------------------------------------------------------------------------------------------
1036  8BEF              ;
1037  8BEF              ;	31/08/23
1038  8BEF              ;
1039  8BEF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1040  8BEF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1041  8BEF
1042  8BEF              Guarda_foto_entidad_a_pintar
1043  8BEF
1044  8BEF              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
1045  8BEF
1046  8BEF CD 3A 93     	call Draw
1047  8BF2
1048  8BF2 CD A6 8B     	call Guarda_movimiento_masticado
1049  8BF5
1050  8BF5 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1051  8BF8 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
1052  8BF9
1053  8BF9              ; --------------------------------------------------------------------------------------------------------------
1054  8BF9              ;
1055  8BF9              ;	19/9/23
1056  8BF9
1057  8BF9 21 C4 88     Prepara_var_pintado ld hl,Filas
1058  8BFC 11 E4 88     	ld de,Variables_de_pintado
1059  8BFF 01 08 00     	ld bc,8
1060  8C02 ED B0        	ldir
1061  8C04 C9           	ret
1062  8C05
1063  8C05              ; --------------------------------------------------------------------------------------------------------------
1064  8C05
1065  8C05 21 E4 88     Repone_pintar ld hl,Variables_de_pintado
1066  8C08 11 C4 88     	ld de,Filas
1067  8C0B 01 08 00     	ld bc,8
1068  8C0E ED B0        	ldir
1069  8C10 C9           	ret
1070  8C11
1071  8C11              ; *************************************************************************************************************************************************************
1072  8C11              ;
1073  8C11              ; 8/1/23
1074  8C11              ;
1075  8C11              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1076  8C11              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1077  8C11              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1078  8C11
1079  8C11              ; Destruye HL y DE !!!!!
1080  8C11
1081  8C11              Inicia_punteros_de_cajas
1082  8C11
1083  8C11 21 6C 85     	ld hl,Indice_de_cajas
1084  8C14 CD A9 8C         call Extrae_address
1085  8C17 22 08 89         ld (Puntero_store_caja),hl
1086  8C1A 21 6E 85     	ld hl,Indice_de_cajas+2
1087  8C1D 22 0C 89     	ld (Indice_restore_caja),hl
1088  8C20 CD A9 8C     	call Extrae_address
1089  8C23 22 0A 89     	ld (Puntero_restore_caja),hl
1090  8C26 C9               ret
1091  8C27
1092  8C27              ; *************************************************************************************************************************************************************
1093  8C27              ;
1094  8C27              ; 8/1/23
1095  8C27              ;
1096  8C27              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1097  8C27
1098  8C27 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1099  8C2A 22 26 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1100  8C2D C9           	ret
1101  8C2E 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1102  8C31 22 28 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1103  8C34 C9           	ret
1104  8C35
1105  8C35              ; -------------------------------------------------------------------------------------------------------------
1106  8C35              ;
1107  8C35              ; 21/9/23
1108  8C35              ;
1109  8C35
1110  8C35              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1111  8C35
1112  8C35              Limpia_album_Amadeus
1113  8C35
1114  8C35 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1115  8C38 7E           	ld a,(hl)
1116  8C39 A7           	and a
1117  8C3A C8           	ret z
1118  8C3B
1119  8C3B 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1120  8C3E 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1121  8C41 01 0B 00     	ld bc,11
1122  8C44 AF           	xor a
1123  8C45 77           	ld (hl),a
1124  8C46 ED B0        	ldir
1125  8C48
1126  8C48 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1127  8C4B 22 22 89     	ld (End_Snapshot_Amadeus),hl
1128  8C4E
1129  8C4E C9           	ret
1130  8C4F
1131  8C4F 21 DE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1132  8C52 11 DF 88     	ld de,Variables_de_borrado+1
1133  8C55 01 05 00     	ld bc,5
1134  8C58 AF           	xor a
1135  8C59 77           	ld (hl),a
1136  8C5A ED B0        	ldir
1137  8C5C C9           	ret
1138  8C5D
1139  8C5D              ; -------------------------------------------------------------------------------------------------------------
1140  8C5D              ;
1141  8C5D              ; 8/9/23
1142  8C5D              ;
1143  8C5D
1144  8C5D              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1145  8C5D              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1146  8C5D
1147  8C5D              Calcula_numero_de_malotes
1148  8C5D
1149  8C5D 21 00 70     	ld hl,Album_de_fotos
1150  8C60 EB           	ex de,hl
1151  8C61 2A 1C 89     	ld hl,(Stack_snapshot)
1152  8C64
1153  8C64 06 00        	ld b,0
1154  8C66 7D           	ld a,l
1155  8C67 93           	sub e
1156  8C68 28 07        	jr z,1F
1157  8C6A
1158  8C6A              ; Nº de malotes no es "0".
1159  8C6A
1160  8C6A D6 06        2 sub 6
1161  8C6C 04           	inc b
1162  8C6D A7           	and a
1163  8C6E 20 FA        	jr nz,2B
1164  8C70 78           	ld a,b
1165  8C71
1166  8C71 32 11 89     1 ld (Numero_de_malotes),a
1167  8C74 C9           	ret
1168  8C75
1169  8C75              ; -------------------------------------------------------------------------------------------------------------
1170  8C75              ;
1171  8C75              ; 8/9/23
1172  8C75              ;
1173  8C75
1174  8C75              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1175  8C75              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1176  8C75
1177  8C75              Calcula_malotes_Amadeus
1178  8C75
1179  8C75 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1180  8C78 EB           	ex de,hl
1181  8C79 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1182  8C7C
1183  8C7C 7C           	ld a,h
1184  8C7D A7           	and a
1185  8C7E 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1186  8C80
1187  8C80 06 00        	ld b,0
1188  8C82 7D           	ld a,l
1189  8C83 93           	sub e
1190  8C84 28 07        	jr z,1F
1191  8C86
1192  8C86              ; Nº de malotes no es "0".
1193  8C86
1194  8C86 D6 06        2 sub 6
1195  8C88 04           	inc b
1196  8C89 A7           	and a
1197  8C8A 20 FA        	jr nz,2B
1198  8C8C 78           	ld a,b
1199  8C8D
1200  8C8D 32 11 89     1 ld (Numero_de_malotes),a
1201  8C90 C9           	ret
1202  8C91
1203  8C91              ; -------------------------------------------------------------------------------------------------------------
1204  8C91              ;
1205  8C91              ; 28/2/23
1206  8C91              ;
1207  8C91
1208  8C91              Calcula_numero_de_disparotes
1209  8C91
1210  8C91 21 56 70     	ld hl,Album_de_fotos_disparos
1211  8C94 EB           	ex de,hl
1212  8C95 2A 20 89     	ld hl,(End_Snapshot_disparos)
1213  8C98
1214  8C98 06 00        	ld b,0
1215  8C9A 7D           	ld a,l
1216  8C9B 93           	sub e
1217  8C9C 28 07        	jr z,1F
1218  8C9E
1219  8C9E              ; Nº de malotes no es "0".
1220  8C9E
1221  8C9E D6 06        2 sub 6
1222  8CA0 04           	inc b
1223  8CA1 A7           	and a
1224  8CA2 20 FA        	jr nz,2B
1225  8CA4 78           	ld a,b
1226  8CA5
1227  8CA5 32 25 89     1 ld (Numero_de_disparotes),a
1228  8CA8 C9           	ret
1229  8CA9
1230  8CA9              ; *************************************************************************************************************************************************************
1231  8CA9              ;
1232  8CA9              ; 20/10/22
1233  8CA9              ;
1234  8CA9              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1235  8CA9              ;
1236  8CA9              ; Destruye el puntero y DE !!!!!
1237  8CA9
1238  8CA9 5E           Extrae_address ld e,(hl)
1239  8CAA 23           	inc hl
1240  8CAB 56           	ld d,(hl)
1241  8CAC 2B           	dec hl
1242  8CAD EB           	ex de,hl
1243  8CAE C9           	ret
1244  8CAF
1245  8CAF              ; *************************************************************************************************************************************************************
1246  8CAF              ;
1247  8CAF              ;	7/2/23
1248  8CAF              ;
1249  8CAF              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1250  8CAF              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1251  8CAF              ;
1252  8CAF              ;   Destruye HL y BC !!!!!,
1253  8CAF              ;
1254  8CAF              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1255  8CAF              ;					"0" ..... Izquierda.
1256  8CAF
1257  8CAF              Inicia_Puntero_objeto
1258  8CAF
1259  8CAF 3A D8 88     	ld a,(Cuad_objeto)
1260  8CB2 E6 01        	and 1
1261  8CB4 F5           	push af
1262  8CB5 CC D3 8C     	call z,Inicia_puntero_objeto_izq
1263  8CB8 F1           	pop af
1264  8CB9 28 2B        	jr z,1F
1265  8CBB CD C0 8C     	call Inicia_puntero_objeto_der
1266  8CBE 18 26        	jr 1F
1267  8CC0
1268  8CC0              ; Arrancamos desde la parte izquierda de la pantalla.
1269  8CC0              ; Iniciamos (Indice_Sprite_der).
1270  8CC0
1271  8CC0 2A CE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1272  8CC3 22 D2 88     	ld (Puntero_DESPLZ_der),hl
1273  8CC6 CD A9 8C     	call Extrae_address
1274  8CC9 22 C8 88     	ld (Puntero_objeto),hl
1275  8CCC
1276  8CCC 2A D0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1277  8CCF 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1278  8CD2 C9           	ret
1279  8CD3
1280  8CD3              ; Arrancamos desde la parte derecha de la pantalla.
1281  8CD3              ; Iniciamos (Indice_Sprite_izq).
1282  8CD3
1283  8CD3 2A D0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1284  8CD6 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1285  8CD9 CD A9 8C     	call Extrae_address
1286  8CDC 22 C8 88     	ld (Puntero_objeto),hl
1287  8CDF
1288  8CDF 2A CE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1289  8CE2 22 D2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1290  8CE5 C9           	ret
1291  8CE6
1292  8CE6              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1293  8CE6
1294  8CE6 21 40 83     1 ld hl,Amadeus
1295  8CE9 ED 4B C8 88  	ld bc,(Puntero_objeto)
1296  8CED B7 ED 42     	sub hl,bc
1297  8CF0 C0           	ret nz
1298  8CF1 21 F2 88     	ld hl,Ctrl_0
1299  8CF4 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1300  8CF6 C9           	ret 												; _de nuestra nave en los extremos.
1301  8CF7
1302  8CF7              ; *************************************************************************************************************************************************************
1303  8CF7              ;
1304  8CF7              ;	14/5/23
1305  8CF7              ;
1306  8CF7              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1307  8CF7              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1308  8CF7
1309  8CF7              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1310  8CF7              ;	_de la 2ª y 3ª entidad respectivamente.
1311  8CF7
1312  8CF7              Store_Restore_cajas
1313  8CF7
1314  8CF7 E5           	push hl
1315  8CF8 D5           	push de
1316  8CF9 C5            	push bc
1317  8CFA
1318  8CFA              ;	STORE !!!!!
1319  8CFA              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1320  8CFA
1321  8CFA 21 C4 88     	ld hl,Filas
1322  8CFD ED 5B 08 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1323  8D01 01 41 00     	ld bc,65
1324  8D04 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1325  8D06
1326  8D06              ; 	Entidad_sospechosa. 20/4/23
1327  8D06
1328  8D06 3A DD 88     	ld a,(Impacto)
1329  8D09 A7           	and a
1330  8D0A 28 0C        	jr z,1F
1331  8D0C
1332  8D0C 2A 08 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1333  8D0F 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1334  8D12 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1335  8D13 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1336  8D15 22 2B 89     	ld (Entidad_sospechosa_de_colision),hl
1337  8D18
1338  8D18              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1339  8D18
1340  8D18 2A 0A 89     1 ld hl,(Puntero_restore_caja)
1341  8D1B 7E           	ld a,(hl)
1342  8D1C A7           	and a
1343  8D1D F5           	push af
1344  8D1E 28 08        	jr z,2F
1345  8D20
1346  8D20 11 C4 88     	ld de,Filas
1347  8D23 01 41 00     	ld bc,65
1348  8D26 ED B0        	ldir
1349  8D28
1350  8D28 CD 44 8D     2 call Incrementa_punteros_de_cajas
1351  8D2B
1352  8D2B F1           	pop af
1353  8D2C 28 EA        	jr z,1B
1354  8D2E
1355  8D2E C1           	pop bc
1356  8D2F D1           	pop de
1357  8D30 E1           	pop hl
1358  8D31
1359  8D31 C9           	ret
1360  8D32
1361  8D32              ; **************************************************************************************************
1362  8D32              ;
1363  8D32              ;	12/05/23
1364  8D32              ;
1365  8D32              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1366  8D32
1367  8D32 E5           Restore_entidad push hl
1368  8D33 D5           	push de
1369  8D34 C5            	push bc
1370  8D35
1371  8D35 2A 08 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1372  8D38 11 C4 88     	ld de,Filas
1373  8D3B 01 41 00     	ld bc,65
1374  8D3E ED B0        	ldir
1375  8D40
1376  8D40 C1           	pop bc
1377  8D41 D1           	pop de
1378  8D42 E1           	pop hl
1379  8D43 C9           	ret
1380  8D44
1381  8D44              ; **************************************************************************************************
1382  8D44              ;
1383  8D44              ;	08/05/23
1384  8D44              ;
1385  8D44              ;	Incrementamos los dos punteros de entidades. (+1).
1386  8D44
1387  8D44              Incrementa_punteros_de_cajas
1388  8D44
1389  8D44 2A 0A 89     	ld hl,(Puntero_restore_caja)
1390  8D47 22 08 89     	ld (Puntero_store_caja),hl
1391  8D4A 2A 0C 89     	ld hl,(Indice_restore_caja)
1392  8D4D 23           	inc hl
1393  8D4E 23           	inc hl
1394  8D4F 22 0C 89     	ld (Indice_restore_caja),hl
1395  8D52 CD A9 8C         call Extrae_address
1396  8D55 22 0A 89         ld (Puntero_restore_caja),hl
1397  8D58 C9               ret
1398  8D59
1399  8D59              ; **************************************************************************************************
1400  8D59              ;
1401  8D59              ;	25/01/23
1402  8D59              ;
1403  8D59              ;	Restore_Amadeus
1404  8D59              ;
1405  8D59              ;	Cargamos en DRAW los parámetros de Amadeus.
1406  8D59              ;
1407  8D59
1408  8D59 E5           Restore_Amadeus	push hl
1409  8D5A D5           	push de
1410  8D5B C5            	push bc
1411  8D5C 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1412  8D5F 11 C4 88     	ld de,Filas
1413  8D62 01 41 00     	ld bc,65
1414  8D65 ED B0        	ldir
1415  8D67 C1           	pop bc
1416  8D68 D1           	pop de
1417  8D69 E1           	pop hl
1418  8D6A C9           	ret
1419  8D6B
1420  8D6B              ; *************************************************************************************************************************************************************
1421  8D6B              ;
1422  8D6B              ;	29/04/23
1423  8D6B              ;
1424  8D6B              ;	Store_Amadeus
1425  8D6B              ;
1426  8D6B              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1427  8D6B              ;
1428  8D6B              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1429  8D6B              ;
1430  8D6B              ;	DESTRUYE: HL y BC y DE.
1431  8D6B
1432  8D6B 21 C4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1433  8D6E 01 41 00     	ld bc,65
1434  8D71 ED B0        	ldir
1435  8D73 C9           	ret
1436  8D74
1437  8D74              ; -----------------------------------------------------------
1438  8D74              ;
1439  8D74              ;	27/04/23
1440  8D74              ;
1441  8D74              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1442  8D74              ;
1443  8D74              ;	Destruye: HL,BC,DE,A
1444  8D74
1445  8D74 21 C4 88     Borra_datos_entidad ld hl,Filas
1446  8D77 01 40 00     	ld bc,64
1447  8D7A AF           	xor a
1448  8D7B 77           	ld (hl),a
1449  8D7C 11 C5 88     	ld de,Filas+1
1450  8D7F ED B0        	ldir
1451  8D81 C9           	ret
1452  8D82
1453  8D82              ; -----------------------------------------------------------
1454  8D82
1455  8D82              ; Teclado.
1456  8D82
1457  8D82 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1458  8D84 DB FE        	in a,($fe)
1459  8D86 E6 01        	and $01
1460  8D88 28 02        	jr z,1f
1461  8D8A 18 F6        	jr Pulsa_ENTER
1462  8D8C C9           1 ret
1463  8D8D
1464  8D8D              ; **************************************************************************************************
1465  8D8D              ;
1466  8D8D              ; Temporización.
1467  8D8D
1468  8D8D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1469  8D8D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1470  8D8D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1471  8D8D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1472  8D8D
1473  8D8D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1474  8D8D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1475  8D8D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1476  8D8D
1477  8D8D              ; A partir de $4f61 no hace falta DELAY.
1478  8D8D
1479  8D8D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1480  8D8D
1481  8D8D 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1482  8D90 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1483  8D91 78           	LD A,B
1484  8D92 A7           	AND A
1485  8D93 20 FB        	JR NZ,wait
1486  8D95 C9           	RET
1487  8D96
1488  8D96              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1489  8D96              ;
1490  8D96              ;	5/3/23
1491  8D96              ;
1492  8D96              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1493  8D96
1494  8D96              Movimiento_Amadeus
1495  8D96
1496  8D96              ; Disparo.
1497  8D96
1498  8D96 3A 3B 89     	ld a,(Disparo_Amadeus)
1499  8D99 A7           	and a
1500  8D9A 20 02        	jr nz,1F
1501  8D9C 18 15        	jr 2F
1502  8D9E
1503  8D9E 3E F7        1 ld a,$f7													; "5" para disparar.
1504  8DA0 DB FE        	in a,($fe)
1505  8DA2 E6 10        	and $10
1506  8DA4
1507  8DA4 F5           	push af
1508  8DA5 CC 66 8E     	call z,Genera_disparo
1509  8DA8 F1           	pop af
1510  8DA9 20 08        	jr nz,2F
1511  8DAB
1512  8DAB 3A 3B 89     	ld a,(Disparo_Amadeus)
1513  8DAE EE 01        	xor 1
1514  8DB0 32 3B 89     	ld (Disparo_Amadeus),a
1515  8DB3 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1516  8DB5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1517  8DB7 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1518  8DB9 CC 2E 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1519  8DBC
1520  8DBC 3E F7        	ld a,$f7
1521  8DBE DB FE        	in a,($fe)
1522  8DC0 E6 01        	and $01
1523  8DC2 C8           	ret z
1524  8DC3
1525  8DC3 3E F7        	ld a,$f7
1526  8DC5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1527  8DC7 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1528  8DC9 CC 10 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1529  8DCC C9           	ret
1530  8DCD
1531  8DCD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1532  8DCD              ;
1533  8DCD              ;	Rutina provisional para que los malotes cagen balas.
1534  8DCD
1535  8DCD              Detecta_disparo_entidad
1536  8DCD
1537  8DCD 3A 3E 89     	ld a,(Disparo_entidad)
1538  8DD0 A7           	and a
1539  8DD1 C8           	ret z
1540  8DD2
1541  8DD2              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1542  8DD2
1543  8DD2              ;	ld a,$7f				; Detecta SPACE.
1544  8DD2              ;	in a,($fe)
1545  8DD2              ;	and 1
1546  8DD2              ;	ret nz
1547  8DD2
1548  8DD2 CD 66 8E     	call Genera_disparo
1549  8DD5 C9           	ret
1550  8DD6
1551  8DD6              ; ----------------------------------------------------------------------
1552  8DD6              ;
1553  8DD6              ;	8/9/23
1554  8DD6
1555  8DD6 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1556  8DD9 2B            	dec hl
1557  8DDA 7E           	ld a,(hl)
1558  8DDB A7           	and a
1559  8DDC C8           	ret z										; Salimos si es álbum está vacío.
1560  8DDD
1561  8DDD 11 E3 88     	ld de,Variables_de_borrado+5
1562  8DE0 01 06 00     	ld bc,6
1563  8DE3 ED B8        	lddr
1564  8DE5 C9           	ret
1565  8DE6
1566  8DE6              ; ----------------------------------------------------------------------
1567  8DE6              ;
1568  8DE6              ;	9/9/23
1569  8DE6
1570  8DE6              Repone_datos_de_borrado_Amadeus
1571  8DE6
1572  8DE6 21 DE 88     	ld hl,Variables_de_borrado
1573  8DE9 11 AC 70     	ld de,Album_de_fotos_Amadeus
1574  8DEC 01 06 00     	ld bc,6
1575  8DEF ED B0        	ldir
1576  8DF1
1577  8DF1 EB           	ex de,hl
1578  8DF2 22 22 89     	ld (End_Snapshot_Amadeus),hl
1579  8DF5
1580  8DF5 C9           	ret
1581  8DF6
1582  8DF6              ; ----------------------------------------------------------------------
1583  8DF6              ;
1584  8DF6              ;	27/10/23
1585  8DF6              ;
1586  8DF6
1587  8DF6              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1588  8DF6              ;	_ Album_de_fotos correspondiente.
1589  8DF6
1590  8DF6              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1591  8DF6              ;	_ durante el proceso de escritura.
1592  8DF6
1593  8DF6              Repone_datos_de_borrado
1594  8DF6
1595  8DF6 F3           	di
1596  8DF7 ED 5B 1C 89  	ld de,(Stack_snapshot)
1597  8DFB 21 DE 88     	ld hl,Variables_de_borrado
1598  8DFE 01 06 00     	ld bc,6
1599  8E01 ED B0        	ldir
1600  8E03 FB           	ei
1601  8E04
1602  8E04 EB           	ex de,hl
1603  8E05 22 1C 89     	ld (Stack_snapshot),hl
1604  8E08
1605  8E08 C9           	ret
1606  8E09
1607  8E09              ; ----------------------------------------------------------------------
1608  8E09              ;
1609  8E09              ;	17/12/23
1610  8E09              ;
1611  8E09
1612  8E09              Repone_movimientos_masticados
1613  8E09
1614  8E09 F3           	di
1615  8E0A
1616  8E0A 18 FE        	jr $
1617  8E0C
1618  8E0C ED 5B 1C 89  	ld de,(Stack_snapshot)
1619  8E10 21 DE 88     	ld hl,Variables_de_borrado
1620  8E13 01 06 00     	ld bc,6
1621  8E16 ED B0        	ldir
1622  8E18 FB           	ei
1623  8E19
1624  8E19 EB           	ex de,hl
1625  8E1A 22 1C 89     	ld (Stack_snapshot),hl
1626  8E1D
1627  8E1D C9           	ret
1628  8E1E
1629  8E1E              ; --------------------------------------------------------------------------------------
1630  8E1E
1631  8E1E              Pinta_Amadeus
1632  8E1E
1633  8E1E 3E 06        	ld a,6
1634  8E20 D3 FE            out ($fe),a										; Amarillo
1635  8E22
1636  8E22 CD 75 8C        	call Calcula_malotes_Amadeus
1637  8E25 CD CA 96     	call Extrae_foto_Amadeus
1638  8E28 CD 35 8C     	call Limpia_album_Amadeus
1639  8E2B
1640  8E2B C9           	ret
1641  8E2C
1642  8E2C              Pinta_entidades
1643  8E2C
1644  8E2C              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1645  8E2C
1646  8E2C 3A 24 89     	ld a,(Ctrl_3)
1647  8E2F CB 47        	bit 0,a
1648  8E31 C8           	ret z
1649  8E32
1650  8E32 CD 5D 8C     	call Calcula_numero_de_malotes
1651  8E35 CD 48 96     	call Extrae_foto_entidades
1652  8E38 CD 03 80     	call Limpia_y_reinicia_Stack_Snapshot
1653  8E3B
1654  8E3B C9           	ret
1655  8E3C
1656  8E3C              ; -----------------------------------------------------------------------------------
1657  8E3C              ;
1658  8E3C              ;	10/12/23
1659  8E3C              ;
1660  8E3C              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1661  8E3C
1662  8E3C              Actualiza_relojes
1663  8E3C
1664  8E3C 3A 24 89     	ld a,(Ctrl_3)
1665  8E3F CB 47        	bit 0,a
1666  8E41 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1667  8E42
1668  8E42 21 36 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1669  8E45 34           	inc (hl)
1670  8E46
1671  8E46 34           	inc (hl)
1672  8E47 35           	dec (hl)
1673  8E48 C0           	ret nz
1674  8E49
1675  8E49 21 37 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1676  8E4C 34           	inc (hl)
1677  8E4D C9           	ret
1678  8E4E
1679  8E4E              ; ---------------------------------------------------------------
1680  8E4E              ;
1681  8E4E              ;	27/9/23
1682  8E4E
1683  8E4E              Guarda_parametros_DRAW
1684  8E4E
1685  8E4E 21 C4 88     	ld hl,Filas
1686  8E51 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1687  8E54 01 41 00     	ld bc,65
1688  8E57 ED B0        	ldir
1689  8E59 C9           	ret
1690  8E5A
1691  8E5A              Recupera_parametros_DRAW
1692  8E5A
1693  8E5A 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1694  8E5D 11 C4 88     	ld de,Filas
1695  8E60 01 41 00     	ld bc,65
1696  8E63 ED B0        	ldir
1697  8E65 C9           	ret
1698  8E66
1699  8E66              ; ---------------------------------------------------------------
1700  8E66
1701  8E66              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E66              ; ******************************************************************************************************************************************************************************************
   2+ 8E66              ;
   3+ 8E66              ;   21/07/23
   4+ 8E66              ;
   5+ 8E66              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E66              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E66              ;
   8+ 8E66              ;
   9+ 8E66              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E66              ;
  11+ 8E66              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E66              ;               _ hacen las entidades hacia abajo.
  13+ 8E66              ;
  14+ 8E66              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E66              ;
  16+ 8E66              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E66              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E66              ;
  19+ 8E66              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E66              ;           _ la bala.
  21+ 8E66              ;
  22+ 8E66              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E66              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E66              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E66              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E66              ;           _ en el momento de generarse la bala)).
  27+ 8E66
  28+ 8E66              Genera_disparo
  29+ 8E66
  30+ 8E66              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E66              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E66              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E66              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E66              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E66              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E66              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E66
  38+ 8E66              ; Exclusiones:
  39+ 8E66
  40+ 8E66 3A DC 88         ld a,(Vel_down)
  41+ 8E69 47               ld b,a
  42+ 8E6A 3A 35 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E6D B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E6E D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E6F 3A FF 88         ld a,(Columnas)
  46+ 8E72 47               ld b,a
  47+ 8E73 3A C5 88         ld a,(Columns)
  48+ 8E76 B8               cp b
  49+ 8E77 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E78
  51+ 8E78              ; ----- ----- -----
  52+ 8E78
  53+ 8E78 3A F2 88         ld a,(Ctrl_0)
  54+ 8E7B CB 77            bit 6,a
  55+ 8E7D 20 06            jr nz,14F
  56+ 8E7F
  57+ 8E7F 3A CB 88         ld a,(Coordenada_y)
  58+ 8E82 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E84 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E85
  61+ 8E85 21 00 80     14 ld hl,Indice_disparo
  62+ 8E88 3A CC 88         ld a,(CTRL_DESPLZ)
  63+ 8E8B 4F               ld c,a
  64+ 8E8C 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E8E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E8E              ;                                            ""        ""       "f9", B="1"
  67+ 8E8E              ;                                            ""        ""       "fb", B="2"
  68+ 8E8E              ;                                            ""        ""       "fb", B="3"
  69+ 8E8E A7               and a
  70+ 8E8F 28 10            jr z,1F
  71+ 8E91 E6 01            and 1
  72+ 8E93 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E94
  74+ 8E94 79               ld a,c
  75+ 8E95 16 F9            ld d,$f9
  76+ 8E97 23           2 inc hl
  77+ 8E98 23               inc hl
  78+ 8E99 04               inc b
  79+ 8E9A BA               cp d
  80+ 8E9B 28 04            jr z,1F
  81+ 8E9D 14               inc d
  82+ 8E9E 14               inc d
  83+ 8E9F 18 F6            jr 2B
  84+ 8EA1
  85+ 8EA1 CD A9 8C     1 call Extrae_address
  86+ 8EA4 E5               push hl
  87+ 8EA5 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EA7 DD 21 10 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EAB
  90+ 8EAB              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EAB              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EAB
  93+ 8EAB 3A F2 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EAE CB 77            bit 6,a
  95+ 8EB0 20 04            jr nz,19F
  96+ 8EB2
  97+ 8EB2 AF               xor a
  98+ 8EB3 32 3E 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EB6
 100+ 8EB6 3A D8 88     19 ld a,(Cuad_objeto)
 101+ 8EB9 FE 02            cp 2
 102+ 8EBB 38 66            jr c,3F
 103+ 8EBD 28 64            jr z,3F
 104+ 8EBF
 105+ 8EBF              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EBF
 107+ 8EBF E6 01            and 1
 108+ 8EC1 28 30            jr z,4F
 109+ 8EC3
 110+ 8EC3              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EC3              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EC3              ;
 113+ 8EC3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EC3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EC3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EC3
 117+ 8EC3 2A C6 88     	ld hl,(Posicion_actual)
 118+ 8EC6
 119+ 8EC6              ;   Amadeus o entidad ???.
 120+ 8EC6
 121+ 8EC6 3A F2 88         ld a,(Ctrl_0)
 122+ 8EC9 CB 77            bit 6,a
 123+ 8ECB 28 0A            jr z,8F
 124+ 8ECD
 125+ 8ECD              ; 	Dispara Amadeus.
 126+ 8ECD
 127+ 8ECD 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8ECF CD 39 96         call PreviousScan
 129+ 8ED2 CD 39 96         call PreviousScan
 130+ 8ED5
 131+ 8ED5              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8ED5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8ED5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8ED5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8ED5
 136+ 8ED5 18 11            jr 10F
 137+ 8ED7
 138+ 8ED7              ; 	Dispara Entidad.
 139+ 8ED7
 140+ 8ED7 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EDA              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EDA
 143+ 8EDA              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EDA              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EDA
 146+ 8EDA C5               push bc
 147+ 8EDB 06 10            ld b,16
 148+ 8EDD CD 2A 96     9 call NextScan
 149+ 8EE0 10 FB            djnz 9B
 150+ 8EE2 C1               pop bc
 151+ 8EE3 CD 4D 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EE6 18 06            jr 17F
 153+ 8EE8
 154+ 8EE8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EE8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EE8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EE8
 159+ 8EE8 CD 4D 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EEB CD C2 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EEE              ;                                                      ; _al generar el disparo.
 162+ 8EEE
 163+ 8EEE              ; 	LLegados a este punto tendremos:
 164+ 8EEE              ;
 165+ 8EEE              ;       Puntero_objeto_disparo en IY.
 166+ 8EEE              ;       Rutinas_de_impresion en IX.
 167+ 8EEE              ;       Puntero_de_impresion en HL.
 168+ 8EEE              ;       Impacto/Dirección en BC.
 169+ 8EEE
 170+ 8EEE CD 55 8F     17 call Almacena_disparo
 171+ 8EF1 18 52            jr 6F                                             ; RET.
 172+ 8EF3
 173+ 8EF3              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EF3              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EF3              ;
 176+ 8EF3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EF3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EF3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EF3
 180+ 8EF3 2A C6 88     4 ld hl,(Posicion_actual)
 181+ 8EF6
 182+ 8EF6              ;   Amadeus o entidad ???.
 183+ 8EF6
 184+ 8EF6 3A F2 88         ld a,(Ctrl_0)
 185+ 8EF9 CB 77            bit 6,a
 186+ 8EFB 28 0A            jr z,11F
 187+ 8EFD
 188+ 8EFD              ; 	Dispara Amadeus.
 189+ 8EFD
 190+ 8EFD 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EFF CD 39 96         call PreviousScan
 192+ 8F02 CD 39 96         call PreviousScan
 193+ 8F05
 194+ 8F05              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F05              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F05              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F05              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F05
 199+ 8F05 18 11            jr 13F
 200+ 8F07
 201+ 8F07              ; 	Dispara Entidad.
 202+ 8F07
 203+ 8F07 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F0A              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F0A
 206+ 8F0A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F0A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F0A
 209+ 8F0A C5               push bc
 210+ 8F0B 06 10            ld b,16
 211+ 8F0D CD 2A 96     12 call NextScan
 212+ 8F10 10 FB            djnz 12B
 213+ 8F12 C1               pop bc
 214+ 8F13
 215+ 8F13 CD 46 8F         call Ajusta_disparo_parte_derecha
 216+ 8F16 18 06            jr 18F
 217+ 8F18
 218+ 8F18              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F18              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F18              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F18              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F18
 223+ 8F18 CD 46 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F1B CD C2 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F1E              ;                                                       ; _al generar el disparo.
 226+ 8F1E
 227+ 8F1E              ; LLegados a este punto tendremos:
 228+ 8F1E              ;
 229+ 8F1E              ;       Puntero_objeto_disparo en IY.
 230+ 8F1E              ;       Rutinas_de_impresion en IX.
 231+ 8F1E              ;       Puntero_de_impresion en HL.
 232+ 8F1E              ;       Impacto/Dirección en BC.
 233+ 8F1E
 234+ 8F1E CD 55 8F     18 call Almacena_disparo
 235+ 8F21 18 22            jr 6F                                               ; RET.
 236+ 8F23
 237+ 8F23              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F23
 239+ 8F23 28 11        3 jr z,5F
 240+ 8F25
 241+ 8F25              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F25              ;
 243+ 8F25              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F25              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F25              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F25              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F25
 248+ 8F25              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F25              ;	   ""        ""       "f9", B="1"
 250+ 8F25              ;	   ""        ""       "fb", B="2"
 251+ 8F25              ; 	   ""        ""       "fb", B="3"
 252+ 8F25
 253+ 8F25 2A C6 88     	ld hl,(Posicion_actual)
 254+ 8F28 CD 2A 96     	call NextScan
 255+ 8F2B
 256+ 8F2B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F2B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F2B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F2B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F2B
 261+ 8F2B CD 4D 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F2E
 263+ 8F2E              ; 	No se produce impacto. B="$80"
 264+ 8F2E              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F2E
 266+ 8F2E 01 80 80         ld bc,$8080
 267+ 8F31
 268+ 8F31              ; 	LLegados a este punto tendremos:
 269+ 8F31              ;
 270+ 8F31              ;       Puntero_objeto_disparo en IY.
 271+ 8F31              ;       Rutinas_de_impresion en IX.
 272+ 8F31              ;       Puntero_de_impresion en HL.
 273+ 8F31              ;       Impacto/Dirección en BC.
 274+ 8F31
 275+ 8F31 CD 55 8F         call Almacena_disparo
 276+ 8F34 18 0F            jr 6F                                           ; RET.
 277+ 8F36
 278+ 8F36              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F36              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F36              ;
 281+ 8F36              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F36              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F36              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F36              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F36
 286+ 8F36 2A C6 88     5 ld hl,(Posicion_actual)
 287+ 8F39 CD 2A 96     	call NextScan
 288+ 8F3C
 289+ 8F3C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F3C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F3C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F3C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F3C
 294+ 8F3C CD 46 8F         call Ajusta_disparo_parte_derecha
 295+ 8F3F
 296+ 8F3F              ; 	No se produce impacto. B="$80"
 297+ 8F3F              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F3F
 299+ 8F3F 01 80 80     15 ld bc,$8080
 300+ 8F42
 301+ 8F42              ; 	LLegados a este punto tendremos:
 302+ 8F42              ;
 303+ 8F42              ;       Puntero_objeto_disparo en IY.
 304+ 8F42              ;       Rutinas_de_impresion en IX.
 305+ 8F42              ;       Puntero_de_impresion en HL.
 306+ 8F42              ;       Impacto/Dirección en BC.
 307+ 8F42
 308+ 8F42 CD 55 8F         call Almacena_disparo
 309+ 8F45
 310+ 8F45 C9           6 ret
 311+ 8F46
 312+ 8F46              ; ----------------------------------------------------------------
 313+ 8F46              ;
 314+ 8F46              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F46              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F46              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F46
 318+ 8F46 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F47 FE 02            cp 2
 320+ 8F49 38 01            jr c,1F
 321+ 8F4B 23               inc hl
 322+ 8F4C C9           1 ret
 323+ 8F4D
 324+ 8F4D 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F4E FE 01        	cp 1
 326+ 8F50 20 01        	jr nz,1F
 327+ 8F52 2B           	dec hl
 328+ 8F53 2B           1 dec hl
 329+ 8F54 C9               ret
 330+ 8F55
 331+ 8F55              ; ----------------------------------------------------------------
 332+ 8F55              ;
 333+ 8F55              ;   25/02/23
 334+ 8F55              ;
 335+ 8F55              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F55              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F55              ;
 338+ 8F55              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F55              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F55
 341+ 8F55              Almacena_disparo
 342+ 8F55
 343+ 8F55 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F56 F1               pop af
 345+ 8F57 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F58
 347+ 8F58 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F59 E6 01            and 1
 349+ 8F5B 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F5D              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F5D              ; 	Dispara AMADEUS.
 352+ 8F5D
 353+ 8F5D              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F5D              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F5D              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F5D              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F5D
 358+ 8F5D C5               push bc
 359+ 8F5E 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F61 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F64 A7               and a
 362+ 8F65 ED 42            sbc hl,bc
 363+ 8F67 CC 2E 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F6A C1               pop bc
 365+ 8F6B 28 54            jr z,4F
 366+ 8F6D
 367+ 8F6D 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F70 23               inc hl
 369+ 8F71 23               inc hl
 370+ 8F72 22 28 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F75              ;                                                   ; _ Disparo_(+1).
 372+ 8F75 18 18            jr 2F
 373+ 8F77
 374+ 8F77              ; Dispara una entidad.
 375+ 8F77
 376+ 8F77 C5           1 push bc
 377+ 8F78 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F7B 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F7E A7               and a
 380+ 8F7F ED 42            sbc hl,bc
 381+ 8F81 CC 27 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F84 C1               pop bc
 383+ 8F85 28 3A            jr z,4F
 384+ 8F87
 385+ 8F87 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F8A 23               inc hl
 387+ 8F8B 23               inc hl
 388+ 8F8C 22 26 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F8F              ;                                                   ; _ Disparo_(+1).
 390+ 8F8F CD A9 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F92              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F92              ;
 393+ 8F92              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F92              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F92              ;                                                     Puntero_de_impresion en HL.
 396+ 8F92              ;                                                     Impacto/Dirección en BC.
 397+ 8F92
 398+ 8F92 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F93 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F94 23               inc hl                                          ; _ al siguiente.
 401+ 8F95 A7               and a
 402+ 8F96 20 C0            jr nz,3B
 403+ 8F98
 404+ 8F98 08               ex af,af
 405+ 8F99 ED 73 16 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F9D F9               ld sp,hl
 407+ 8F9E
 408+ 8F9E DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FA0 F5               push af                                         ; Puntero de impresión.
 410+ 8FA1 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FA3 C5               push bc                                         ; Control.
 412+ 8FA4
 413+ 8FA4 ED 7B 16 89      ld sp,(Stack)
 414+ 8FA8
 415+ 8FA8              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FA8
 417+ 8FA8 21 05 89     	ld hl,Ctrl_1
 418+ 8FAB CB C6        	set 0,(hl)
 419+ 8FAD
 420+ 8FAD DD E5        	push ix
 421+ 8FAF E1               pop hl
 422+ 8FB0 F5               push af
 423+ 8FB1 DD E1            pop ix
 424+ 8FB3
 425+ 8FB3 CD A0 7F     	call Guarda_foto_registros
 426+ 8FB6
 427+ 8FB6 21 05 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FB9 CB 86        	res 0,(hl)
 429+ 8FBB
 430+ 8FBB              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FBB              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FBB
 433+ 8FBB CD 2E 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FBE CD 27 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FC1
 436+ 8FC1 C9           4 ret
 437+ 8FC2
 438+ 8FC2              ; ----------------------------------------------------------------
 439+ 8FC2              ;
 440+ 8FC2              ;   4/3/23
 441+ 8FC2              ;
 442+ 8FC2              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FC2              ;   _ al generarse el disparo.
 444+ 8FC2              ;
 445+ 8FC2              ;       "$80" ..... No se produce colisión.
 446+ 8FC2              ;       "$81" ..... Se produce colisión.
 447+ 8FC2              ;
 448+ 8FC2              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FC2              ;         _ que forman el disparo.
 450+ 8FC2
 451+ 8FC2
 452+ 8FC2              Comprueba_Colision
 453+ 8FC2
 454+ 8FC2              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FC2
 456+ 8FC2 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FC4 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FC5
 459+ 8FC5 CD FB 8F         call Modifica_H_Velocidad_disparo
 460+ 8FC8
 461+ 8FC8 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FC9 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FCB 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FCD
 465+ 8FCD 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FCF CD EB 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FD2
 468+ 8FD2 7B               ld a,e
 469+ 8FD3 E6 01            and 1
 470+ 8FD5 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FD7              ;                                                  ; _ para activar IMPACTO.
 472+ 8FD7 E1               pop hl
 473+ 8FD8 E5               push hl
 474+ 8FD9 CD 2A 96         call NextScan
 475+ 8FDC
 476+ 8FDC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FDD FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FDF 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FE1              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FE1 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FE3 CD EB 8F         call Bucle_2
 482+ 8FE6
 483+ 8FE6 43           1 ld b,e
 484+ 8FE7 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FE8 FD E1            pop iy
 486+ 8FEA C9               ret
 487+ 8FEB
 488+ 8FEB              ; ---------- ----------
 489+ 8FEB
 490+ 8FEB 06 02        Bucle_2 ld b,2
 491+ 8FED FD 7E 00     2 ld a,(iy)
 492+ 8FF0 A6               and (hl)
 493+ 8FF1 28 02            jr z,1F
 494+ 8FF3 1E 81            ld e,$81
 495+ 8FF5 23           1 inc hl
 496+ 8FF6 FD 23            inc iy
 497+ 8FF8 10 F3            djnz 2B
 498+ 8FFA C9               ret
 499+ 8FFB
 500+ 8FFB              ; ---------- ----------
 501+ 8FFB              ;
 502+ 8FFB              ;   21/7/23
 503+ 8FFB
 504+ 8FFB              Modifica_H_Velocidad_disparo
 505+ 8FFB
 506+ 8FFB 3A 35 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FFE FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9000 D0               ret nc                                         ; _ incrementamos H.
 509+ 9001 24               inc h
 510+ 9002
 511+ 9002 C9               ret
 512+ 9003
 513+ 9003              ; -------------------------------------------------------------------------------------------------------------
 514+ 9003              ;
 515+ 9003              ;   04/12/23
 516+ 9003              ;
 517+ 9003              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9003              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9003              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9003              ;
 521+ 9003              ;   MODIFICA: HL,DE,B y A.
 522+ 9003
 523+ 9003              Genera_coordenadas_X
 524+ 9003
 525+ 9003              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9003              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9003
 528+ 9003              ;   Limpiamos almacenes.
 529+ 9003
 530+ 9003 CD 34 90         call Limpia_Coordenadas_X
 531+ 9006
 532+ 9006              ;   Almacenamos coordenadas X.
 533+ 9006
 534+ 9006              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9006
 536+ 9006 2A EE 88         ld hl,(Puntero_de_impresion)
 537+ 9009 11 32 89         ld de,Coordenadas_X_Entidad
 538+ 900C 06 02            ld b,2
 539+ 900E
 540+ 900E 3A CC 88         ld a,(CTRL_DESPLZ)
 541+ 9011 A7               and a
 542+ 9012 28 01            jr z,1F
 543+ 9014 04               inc b
 544+ 9015
 545+ 9015 CD 2B 90     1 call Guarda_coordenadas_X
 546+ 9018
 547+ 9018              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9018
 549+ 9018 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 901B 11 2F 89         ld de,Coordenadas_X_Amadeus
 551+ 901E 06 02            ld b,2
 552+ 9020
 553+ 9020 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 9023 A7               and a
 555+ 9024 28 01            jr z,2F
 556+ 9026 04               inc b
 557+ 9027
 558+ 9027 CD 2B 90     2 call Guarda_coordenadas_X
 559+ 902A
 560+ 902A              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 902A
 562+ 902A C9               ret
 563+ 902B
 564+ 902B              ; ----- ----- ----- ----- -----
 565+ 902B
 566+ 902B 7D           Guarda_coordenadas_X  ld a,l
 567+ 902C E6 1F            and $1f
 568+ 902E 12           1 ld (de),a
 569+ 902F 3C               inc a
 570+ 9030 13               inc de
 571+ 9031 10 FB            djnz 1B
 572+ 9033 C9               ret
 573+ 9034
 574+ 9034 AF           Limpia_Coordenadas_X xor a
 575+ 9035 06 06            ld b,6
 576+ 9037 21 2F 89         ld hl,Coordenadas_X_Amadeus
 577+ 903A 77           1 ld (hl),a
 578+ 903B 23               inc hl
 579+ 903C 10 FC            djnz 1B
 580+ 903E C9               ret
 581+ 903F
 582+ 903F              ; ----- ----- ----- ----- -----
 583+ 903F
 584+ 903F              Compara_coordenadas_X
 585+ 903F
 586+ 903F 06 03            ld b,3
 587+ 9041 11 34 89         ld de,Coordenadas_X_Entidad+2
 588+ 9044
 589+ 9044 1A               ld a,(de)
 590+ 9045 A7               and a
 591+ 9046 20 01            jr nz,2F
 592+ 9048 05               dec b
 593+ 9049
 594+ 9049 1B           2 dec de
 595+ 904A 1B               dec de
 596+ 904B 21 2F 89         ld hl,Coordenadas_X_Amadeus
 597+ 904E
 598+ 904E D5           1 push de
 599+ 904F E5               push hl
 600+ 9050 C5               push bc
 601+ 9051
 602+ 9051 CD 5B 90         call Comparando
 603+ 9054
 604+ 9054 C1               pop bc
 605+ 9055 E1               pop hl
 606+ 9056 D1               pop de
 607+ 9057
 608+ 9057 13               inc de
 609+ 9058 10 F4            djnz 1B
 610+ 905A
 611+ 905A C9               ret
 612+ 905B
 613+ 905B              ; ----- ----- ----- ----- -----
 614+ 905B              ;
 615+ 905B              ;   4/12/23
 616+ 905B              ;
 617+ 905B              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 905B
 619+ 905B 06 03        Comparando ld b,3
 620+ 905D 1A               ld a,(de)
 621+ 905E 4E           2 ld c,(hl)
 622+ 905F B9               cp c
 623+ 9060 28 04            jr z,1F
 624+ 9062 23               inc hl
 625+ 9063 10 F9            djnz 2B
 626+ 9065 C9               ret
 627+ 9066
 628+ 9066 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9068 32 DD 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 906B 21 2A 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 906E CB D6            set 2,(hl)
 632+ 9070 C9               ret
 633+ 9071
 634+ 9071              ; -----------------------------------------------------------------------
 635+ 9071              ;
 636+ 9071              ;   7/12/23
 637+ 9071              ;
 638+ 9071
 639+ 9071              Detecta_colision_nave_entidad
 640+ 9071
 641+ 9071              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9071
 643+ 9071 FD 2A C8 88      ld iy,(Puntero_objeto)
 644+ 9075 2A EE 88         ld hl,(Puntero_de_impresion)
 645+ 9078
 646+ 9078 E5               push hl
 647+ 9079
 648+ 9079              ; ----- ----- -----
 649+ 9079 1E 00            ld e,0                                         ; Indica impacto.
 650+ 907B 06 0A            ld b,10
 651+ 907D CD AD 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9080 7B               ld a,e
 653+ 9081 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9083 38 0E            jr c,3F
 655+ 9085
 656+ 9085              ; LLegados a este punto:
 657+ 9085              ;
 658+ 9085              ;   HAY COLISIÓN !!!!!.
 659+ 9085              ;
 660+ 9085              ;   .db (Impacto) de Amadeus a "1".
 661+ 9085              ;   SET el bit3 de (Impacto2).
 662+ 9085              ;
 663+ 9085              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9085
 665+ 9085 21 DD 88         ld hl,Impacto
 666+ 9088 36 01            ld (hl),1
 667+ 908A 21 2A 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 908D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 908F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9091
 671+ 9091 18 18            jr 1F
 672+ 9093
 673+ 9093              ; -----
 674+ 9093
 675+ 9093 E1           3 pop hl
 676+ 9094 CD 2A 96         call NextScan
 677+ 9097 E5               push hl
 678+ 9098 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9099 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 909B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 909D 30 0C            jr nc,1F
 682+ 909F              ;                                                  ; _ 2º scanline si esto es así.
 683+ 909F 10 DC            djnz 2B
 684+ 90A1
 685+ 90A1              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 90A1
 687+ 90A1              ; LLegados a este punto:
 688+ 90A1              ;
 689+ 90A1              ;   NO HAY COLISIÓN !!!!!.
 690+ 90A1              ;
 691+ 90A1              ;   .db (Impacto) de Amadeus a "0".
 692+ 90A1              ;   RES el bit2 de (Impacto2).
 693+ 90A1              ;
 694+ 90A1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 90A1              ;   Lo colocamos a "0".
 696+ 90A1
 697+ 90A1 21 2A 89         ld hl,Impacto2
 698+ 90A4 CB 96            res 2,(hl)
 699+ 90A6 2A 2B 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 90A9 36 00            ld (hl),0
 701+ 90AB
 702+ 90AB E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 90AC C9               ret
 704+ 90AD
 705+ 90AD               ; ---------- ----------
 706+ 90AD
 707+ 90AD C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 90AE 3A C5 88         ld a,(Columns)
 709+ 90B1 47               ld b,a
 710+ 90B2 FD 7E 00     2 ld a,(iy)
 711+ 90B5 BE               cp (hl)
 712+ 90B6 28 01            jr z,1F
 713+ 90B8
 714+ 90B8 1C               inc e
 715+ 90B9
 716+ 90B9 23           1 inc hl
 717+ 90BA FD 23            inc iy
 718+ 90BC 10 F4            djnz 2B
 719+ 90BE C1               pop bc
 720+ 90BF C9               ret
 721+ 90C0
 722+ 90C0              ; -------------------------------------------------------------------------------------------------------------
 723+ 90C0              ;
 724+ 90C0              ;   13/03/23
 725+ 90C0              ;
 726+ 90C0              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 90C0              ;
 728+ 90C0              ;   DESTRUYE: HL,BC,DE y A.
 729+ 90C0
 730+ 90C0 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 90C3 7E               ld a,(hl)
 732+ 90C4 A7               and a
 733+ 90C5 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 90C6
 735+ 90C6 44               ld b,h
 736+ 90C7 4D               ld c,l
 737+ 90C8 2A 1E 89         ld hl,(Stack_snapshot_disparos)
 738+ 90CB E5               push hl
 739+ 90CC A7               and a
 740+ 90CD ED 42            sbc hl,bc
 741+ 90CF E5               push hl
 742+ 90D0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 90D1
 744+ 90D1 E1               pop hl
 745+ 90D2 54               ld d,h
 746+ 90D3 5D               ld e,l
 747+ 90D4 1B               dec de
 748+ 90D5 ED B8            lddr                                                ; Limpiamos.
 749+ 90D7
 750+ 90D7 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 90DA 22 1E 89         ld (Stack_snapshot_disparos),hl
 752+ 90DD
 753+ 90DD C9               ret
 754+ 90DE
 755+ 90DE              ; -------------------------------------------------------------------------------------------------------------
 756+ 90DE              ;
 757+ 90DE              ;   18/07/23
 758+ 90DE              ;
 759+ 90DE
 760+ 90DE              Motor_de_disparos
 761+ 90DE
 762+ 90DE              ; Gestiona DISPAROS DE AMADEUS.
 763+ 90DE
 764+ 90DE 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 90E1 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 90E4
 767+ 90E4 CD A9 8C     2 call Extrae_address
 768+ 90E7 7E               ld a,(hl)
 769+ 90E8 A7               and a
 770+ 90E9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 90EB
 772+ 90EB              ; ----- ----- ----- ----- ----- -----
 773+ 90EB
 774+ 90EB C5               push bc
 775+ 90EC CD B0 91         call foto_disparo_a_borrar
 776+ 90EF
 777+ 90EF              ; Existe colisión con este disparo???
 778+ 90EF
 779+ 90EF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 90F0 7E               ld a,(hl)
 781+ 90F1 2B               dec hl
 782+ 90F2 E6 01            and 1
 783+ 90F4 28 1D            jr z,9F
 784+ 90F6
 785+ 90F6              ;   En este punto:
 786+ 90F6              ;
 787+ 90F6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 90F6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 90F6              ;   _con la entidad).
 790+ 90F6              ;
 791+ 90F6              ;   Disparo_2A defw 0                                ; Control.
 792+ 90F6              ;    defw 0                                          ; Puntero objeto.
 793+ 90F6              ;    defw 0                                          ; Puntero de impresión.
 794+ 90F6              ;    defw 0                                          ; Rutina de impresión.
 795+ 90F6
 796+ 90F6 E5               push hl
 797+ 90F7
 798+ 90F7 06 04            ld b,4
 799+ 90F9 23           19 inc hl
 800+ 90FA 10 FD            djnz 19B
 801+ 90FC
 802+ 90FC CD A9 8C         call Extrae_address
 803+ 90FF CD 0C 9D         call Genera_coordenadas_disparo
 804+ 9102
 805+ 9102              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9102
 807+ 9102 21 2D 89         ld hl,Coordenadas_disparo_certero
 808+ 9105 72               ld (hl),d
 809+ 9106 23               inc hl
 810+ 9107 73               ld (hl),e
 811+ 9108
 812+ 9108              ; Elimino el disparo de la base de datos.
 813+ 9108
 814+ 9108 E1               pop hl
 815+ 9109 CD 2F 92         call Elimina_disparo_de_base_de_datos
 816+ 910C 21 2A 89         ld hl,Impacto2
 817+ 910F CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9111
 819+ 9111 18 06            jr 11F
 820+ 9113
 821+ 9113 CD D9 91     9 call Mueve_disparo
 822+ 9116 CD B0 91         call foto_disparo_a_borrar
 823+ 9119
 824+ 9119 C1           11 pop bc
 825+ 911A 18 04            jr 7F
 826+ 911C
 827+ 911C              ; ----- ----- ----- ----- ----- -----
 828+ 911C
 829+ 911C ED 42        1 sbc hl,bc
 830+ 911E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9120
 832+ 9120 2A 28 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9123 23               inc hl
 834+ 9124 23               inc hl
 835+ 9125 22 28 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9128 18 BA            jr 2B
 837+ 912A
 838+ 912A CD 2E 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 912D              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 912D
 841+ 912D              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 912D
 843+ 912D 01 6A 85         ld bc,Disparo_11
 844+ 9130 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9133
 846+ 9133 CD A9 8C     5 call Extrae_address
 847+ 9136 7E               ld a,(hl)
 848+ 9137 A7               and a
 849+ 9138 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 913A
 851+ 913A              ; ----- ----- ----- ----- ----- -----
 852+ 913A
 853+ 913A C5               push bc
 854+ 913B CD B0 91         call foto_disparo_a_borrar
 855+ 913E
 856+ 913E              ; Existe colisión con este disparo???
 857+ 913E
 858+ 913E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 913F 7E               ld a,(hl)
 860+ 9140 2B               dec hl
 861+ 9141 E6 01            and 1
 862+ 9143 28 4D            jr z,10F
 863+ 9145
 864+ 9145              ;! La colisión se produce con Amadeus???
 865+ 9145              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9145
 867+ 9145 E5               push hl
 868+ 9146
 869+ 9146 06 04            ld b,4
 870+ 9148 23           16 inc hl
 871+ 9149 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 914B
 873+ 914B CD A9 8C         call Extrae_address
 874+ 914E CD 0C 9D         call Genera_coordenadas_disparo
 875+ 9151
 876+ 9151 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9152 FE 16            cp $16
 878+ 9154 38 2A            jr c,15F
 879+ 9156
 880+ 9156
 881+ 9156              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9156
 883+ 9156 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9157
 885+ 9157              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9157
 887+ 9157 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 915A
 889+ 915A              ; Coordenada X de Amadeus en D.
 890+ 915A
 891+ 915A 7D               ld a,l
 892+ 915B E6 1F            and $1F
 893+ 915D 57               ld d,a
 894+ 915E
 895+ 915E 21 86 85         ld hl,Amadeus_db+8
 896+ 9161 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9162
 898+ 9162 21 2F 89         ld hl,Coordenadas_X_Amadeus
 899+ 9165 CD 2B 90         call Guarda_coordenadas_X
 900+ 9168
 901+ 9168 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9169
 903+ 9169              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9169
 905+ 9169 06 02            ld b,2
 906+ 916B C5           20 push bc
 907+ 916C
 908+ 916C 06 03            ld b,3
 909+ 916E 21 2F 89         ld hl,Coordenadas_X_Amadeus
 910+ 9171 7E           18 ld a,(hl)
 911+ 9172 BA               cp d
 912+ 9173 20 04            jr nz,17F
 913+ 9175
 914+ 9175              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9175
 916+ 9175 C1               pop bc
 917+ 9176 E1               pop hl
 918+ 9177 18 0D            jr 14F
 919+ 9179
 920+ 9179 23           17 inc hl
 921+ 917A 10 F5            djnz 18B
 922+ 917C
 923+ 917C 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 917D
 925+ 917D C1               pop bc
 926+ 917E 10 EB            djnz 20B
 927+ 9180
 928+ 9180
 929+ 9180              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9180              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9180
 932+ 9180 E1           15 pop hl
 933+ 9181 23               inc hl
 934+ 9182 35               dec (hl)
 935+ 9183 2B               dec hl
 936+ 9184 18 0C            jr 10F
 937+ 9186
 938+ 9186              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9186              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9186
 941+ 9186 E5           14 push hl
 942+ 9187 CD 2F 92         call Elimina_disparo_de_base_de_datos
 943+ 918A 21 2A 89         ld hl,Impacto2
 944+ 918D CB CE            set 1,(hl)
 945+ 918F E1               pop hl
 946+ 9190 18 06            jr 12F
 947+ 9192
 948+ 9192              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9192
 950+ 9192 CD D9 91     10 call Mueve_disparo
 951+ 9195 CD B0 91         call foto_disparo_a_borrar
 952+ 9198 C1           12 pop bc
 953+ 9199
 954+ 9199 18 04            jr 8F
 955+ 919B
 956+ 919B              ; ----- ----- ----- ----- ----- -----
 957+ 919B
 958+ 919B ED 42        4 sbc hl,bc
 959+ 919D 28 0A            jr z,6F
 960+ 919F
 961+ 919F 2A 26 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 91A2 23               inc hl
 963+ 91A3 23               inc hl
 964+ 91A4 22 26 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 91A7 18 8A            jr 5B
 966+ 91A9
 967+ 91A9 CD 27 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 91AC CD 34 90         call Limpia_Coordenadas_X
 969+ 91AF C9               ret
 970+ 91B0
 971+ 91B0              ; ------------------------------------------------------------------
 972+ 91B0
 973+ 91B0              foto_disparo_a_borrar
 974+ 91B0
 975+ 91B0 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 91B1 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 91B2 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 91B3
 979+ 91B3 E5               push hl
 980+ 91B4 23               inc hl
 981+ 91B5 23               inc hl
 982+ 91B6 ED 73 16 89      ld (Stack),sp
 983+ 91BA F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 91BB FD E1            pop iy
 985+ 91BD DD E1            pop ix
 986+ 91BF E1               pop hl
 987+ 91C0 ED 7B 16 89      ld sp,(Stack)
 988+ 91C4 3A 05 89         ld a,(Ctrl_1)
 989+ 91C7 CB C7            set 0,a
 990+ 91C9 32 05 89         ld (Ctrl_1),a
 991+ 91CC CD A0 7F         call Guarda_foto_registros
 992+ 91CF 3A 05 89         ld a,(Ctrl_1)
 993+ 91D2 CB 87            res 0,a
 994+ 91D4 32 05 89         ld (Ctrl_1),a
 995+ 91D7 E1               pop hl
 996+ 91D8 C9               ret
 997+ 91D9
 998+ 91D9              ;---------------------------------------------------
 999+ 91D9              ;
1000+ 91D9              ;   18/07/23
1001+ 91D9              ;
1002+ 91D9
1003+ 91D9              Mueve_disparo
1004+ 91D9
1005+ 91D9              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 91D9              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 91D9              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 91D9
1009+ 91D9 E5               push hl
1010+ 91DA
1011+ 91DA 7E               ld a,(hl)
1012+ 91DB
1013+ 91DB 06 04            ld b,4
1014+ 91DD 23           1 inc hl
1015+ 91DE 10 FD            djnz 1B
1016+ 91E0
1017+ 91E0              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 91E0
1019+ 91E0 CD A9 8C         call Extrae_address
1020+ 91E3
1021+ 91E3 E6 01            and 1
1022+ 91E5 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 91E7
1024+ 91E7              ; Disparo hacia arriba, (Amadeus).
1025+ 91E7
1026+ 91E7              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 91E7              ; _ de la dificultad.
1028+ 91E7
1029+ 91E7 CD 39 96         call PreviousScan
1030+ 91EA CD 39 96         call PreviousScan
1031+ 91ED CD 39 96         call PreviousScan
1032+ 91F0 CD 39 96         call PreviousScan
1033+ 91F3
1034+ 91F3              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 91F3
1036+ 91F3 7C               ld a,h
1037+ 91F4 FE 40            cp $40
1038+ 91F6 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 91F8
1040+ 91F8              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 91F8
1042+ 91F8 EB               ex de,hl
1043+ 91F9 06 04            ld b,4
1044+ 91FB 2B           6 dec hl
1045+ 91FC 10 FD            djnz 6B
1046+ 91FE
1047+ 91FE CD 2F 92         call Elimina_disparo_de_base_de_datos
1048+ 9201 E1               pop hl
1049+ 9202 18 10            jr 7F
1050+ 9204
1051+ 9204              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9204              ; HL contiene el puntero de impresión del disparo.
1053+ 9204              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9204
1055+ 9204 D5           3 push de
1056+ 9205 C5               push bc
1057+ 9206
1058+ 9206 CD C2 8F         call Comprueba_Colision
1059+ 9209
1060+ 9209              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9209
1062+ 9209 78               ld a,b
1063+ 920A
1064+ 920A C1               pop bc
1065+ 920B D1               pop de
1066+ 920C
1067+ 920C EB               ex de,hl
1068+ 920D
1069+ 920D 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 920E 23               inc hl                                      ; _ movimiento.
1071+ 920F 72               ld (hl),d
1072+ 9210
1073+ 9210 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9211
1075+ 9211 23               inc hl                                      ; _ en curso.
1076+ 9212 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9213 2B               dec hl
1078+ 9214
1079+ 9214 C9           7 ret
1080+ 9215
1081+ 9215              ; Disparo hacia abajo, (Entidad).
1082+ 9215
1083+ 9215 3A 35 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9218 47               ld b,a
1085+ 9219
1086+ 9219 CD 2A 96     4 call NextScan
1087+ 921C 10 FB            djnz 4B
1088+ 921E
1089+ 921E              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 921E
1091+ 921E 7C               ld a,h
1092+ 921F FE 58            cp $58
1093+ 9221 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9223
1095+ 9223 EB               ex de,hl
1096+ 9224 06 04            ld b,4
1097+ 9226 2B           5 dec hl
1098+ 9227 10 FD            djnz 5B
1099+ 9229
1100+ 9229 CD 2F 92         call Elimina_disparo_de_base_de_datos
1101+ 922C E1               pop hl
1102+ 922D 18 E5            jr 7B
1103+ 922F
1104+ 922F              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 922F
1106+ 922F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9232 AF               xor a
1108+ 9233 77               ld (hl),a
1109+ 9234 54               ld d,h
1110+ 9235 5D               ld e,l
1111+ 9236 13               inc de
1112+ 9237 ED B0            ldir
1113+ 9239 C9               ret
1114+ 923A
1115+ 923A              ; -----------------------------------------------------------------
1116+ 923A              ;
1117+ 923A              ;   7/12/23
1118+ 923A              ;
1119+ 923A
1120+ 923A 3A 2A 89     Selector_de_impactos ld a,(Impacto2)
1121+ 923D A7               and a
1122+ 923E C8               ret z
1123+ 923F
1124+ 923F              ; Analizamos si hay impacto por disparos.
1125+ 923F
1126+ 923F              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 923F
1128+ 923F CB 4F            bit 1,a
1129+ 9241 28 07            jr z,1F
1130+ 9243
1131+ 9243 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9246 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9248 18 08            jr 2F
1134+ 924A
1135+ 924A CB 47        1 bit 0,a
1136+ 924C C8               ret z
1137+ 924D
1138+ 924D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 924D
1140+ 924D 21 05 89         ld hl,Ctrl_1
1141+ 9250 CB D6            set 2,(hl)
1142+ 9252
1143+ 9252 C9           2 ret
1144+ 9253
1145+ 9253              ; -----------------------------------------------------------------
1146+ 9253              ;
1147+ 9253              ;   25/04/23
1148+ 9253              ;
1149+ 9253
1150+ 9253              Determina_resultado_comparativa
1151+ 9253
1152+ 9253              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9253              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9253              ;
1155+ 9253              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9253              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9253              ;
1158+ 9253              ;   SBC HL,DE
1159+ 9253
1160+ 9253              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9253              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9253
1163+ 9253              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9253              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9253
1166+ 9253
1167+ 9253 3A D8 88         ld a,(Cuad_objeto)
1168+ 9256 FE 02            cp 2
1169+ 9258 28 26            jr z,2F
1170+ 925A 38 24            jr c,2F
1171+ 925C
1172+ 925C              ; Cuadrantes 3º y 4º
1173+ 925C
1174+ 925C E6 01            and 1
1175+ 925E 28 10            jr z,4F
1176+ 9260
1177+ 9260              ; Cuadrante 3º
1178+ 9260
1179+ 9260 7C               ld a,h
1180+ 9261 06 00            ld b,0
1181+ 9263
1182+ 9263 CD EE 92         call Compara_cositas_H3
1183+ 9266
1184+ 9266 04               inc b
1185+ 9267 05               dec b
1186+ 9268 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9269
1188+ 9269 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 926A 06 00            ld b,0
1190+ 926C
1191+ 926C CD 00 93         call Compara_cositas_L3
1192+ 926F C9               ret
1193+ 9270
1194+ 9270              ; Cuadrante 4º
1195+ 9270
1196+ 9270 7C           4 ld a,h
1197+ 9271 06 00            ld b,0
1198+ 9273
1199+ 9273 CD 12 93         call Compara_cositas_H4
1200+ 9276
1201+ 9276 04               inc b
1202+ 9277 05               dec b
1203+ 9278 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9279
1205+ 9279 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 927A 06 00            ld b,0
1207+ 927C
1208+ 927C CD 28 93         call Compara_cositas_L4
1209+ 927F C9               ret
1210+ 9280
1211+ 9280              ; Cuadrantes 1º y 2º.
1212+ 9280
1213+ 9280 28 10        2 jr z,3F
1214+ 9282
1215+ 9282              ; 1er Cuadrante
1216+ 9282
1217+ 9282 7C               ld a,h
1218+ 9283 06 00            ld b,0
1219+ 9285
1220+ 9285 CD C6 92         call Compara_cositas_H1
1221+ 9288
1222+ 9288 04               inc b
1223+ 9289 05               dec b
1224+ 928A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 928B
1226+ 928B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 928C 06 00            ld b,0
1228+ 928E
1229+ 928E CD DC 92         call Compara_cositas_L1
1230+ 9291 C9               ret
1231+ 9292
1232+ 9292
1233+ 9292              ; 2º Cuadrante
1234+ 9292
1235+ 9292 7C           3 ld a,h
1236+ 9293 06 00            ld b,0
1237+ 9295
1238+ 9295 CD A2 92         call Compara_cositas_H2
1239+ 9298
1240+ 9298 04               inc b
1241+ 9299 05               dec b
1242+ 929A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 929B
1244+ 929B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 929C 06 00            ld b,0
1246+ 929E
1247+ 929E CD B4 92         call Compara_cositas_L2
1248+ 92A1 C9               ret
1249+ 92A2
1250+ 92A2 A7           Compara_cositas_H2 and a
1251+ 92A3 28 0D            jr z,1F
1252+ 92A5              ;    cp $fd
1253+ 92A5              ;    jr z,1F
1254+ 92A5              ;    cp $fe
1255+ 92A5              ;    jr z,1F
1256+ 92A5 FE FF            cp $ff
1257+ 92A7 28 09            jr z,1F
1258+ 92A9 FE 01            cp $01
1259+ 92AB 28 05            jr z,1F
1260+ 92AD FE 02            cp $02
1261+ 92AF 28 01            jr z,1F
1262+ 92B1 C0               ret nz
1263+ 92B2 04           1 inc b
1264+ 92B3 C9               ret
1265+ 92B4
1266+ 92B4 A7           Compara_cositas_L2 and a
1267+ 92B5 28 0D            jr z,1F
1268+ 92B7              ;    cp $fd
1269+ 92B7              ;    jr z,1F
1270+ 92B7 FE FE            cp $fe
1271+ 92B9 28 09            jr z,1F
1272+ 92BB FE FF            cp $ff
1273+ 92BD 28 05            jr z,1F
1274+ 92BF FE 01            cp $01
1275+ 92C1 28 01            jr z,1F
1276+ 92C3              ;    cp $02
1277+ 92C3              ;    jr z,1F
1278+ 92C3 C0               ret nz
1279+ 92C4 04           1 inc b
1280+ 92C5 C9               ret
1281+ 92C6
1282+ 92C6 A7           Compara_cositas_H1 and a
1283+ 92C7 28 11            jr z,1F
1284+ 92C9              ;    cp $fd
1285+ 92C9              ;    jr z,1F
1286+ 92C9              ;    cp $fe
1287+ 92C9              ;    jr z,1F
1288+ 92C9 FE FF            cp $ff
1289+ 92CB 28 0D            jr z,1F
1290+ 92CD FE 01            cp $01
1291+ 92CF 28 09            jr z,1F
1292+ 92D1 FE 02            cp $02
1293+ 92D3 28 05            jr z,1F
1294+ 92D5 FE 03            cp $03
1295+ 92D7 28 01            jr z,1F
1296+ 92D9 C0               ret nz
1297+ 92DA 04           1 inc b
1298+ 92DB C9               ret
1299+ 92DC
1300+ 92DC A7           Compara_cositas_L1 and a
1301+ 92DD 28 0D            jr z,1F
1302+ 92DF              ;    cp $fd
1303+ 92DF              ;    jr z,1F
1304+ 92DF              ;    cp $fe
1305+ 92DF              ;    jr z,1F
1306+ 92DF              ;    cp $ff
1307+ 92DF              ;    jr z,1F
1308+ 92DF FE 01            cp $01
1309+ 92E1 28 09            jr z,1F
1310+ 92E3 FE 02            cp $02
1311+ 92E5 28 05            jr z,1F
1312+ 92E7 FE 03            cp $03
1313+ 92E9 28 01            jr z,1F
1314+ 92EB C0               ret nz
1315+ 92EC 04           1 inc b
1316+ 92ED C9               ret
1317+ 92EE
1318+ 92EE A7           Compara_cositas_H3 and a
1319+ 92EF 28 0D            jr z,1F
1320+ 92F1              ;    cp $fd
1321+ 92F1              ;    jr z,1F
1322+ 92F1 FE FE            cp $fe
1323+ 92F3 28 09            jr z,1F
1324+ 92F5 FE FF            cp $ff
1325+ 92F7 28 05            jr z,1F
1326+ 92F9 FE 01            cp $01
1327+ 92FB 28 01            jr z,1F
1328+ 92FD              ;    cp $02
1329+ 92FD              ;    jr z,1F
1330+ 92FD              ;    cp $03
1331+ 92FD              ;    jr z,1F
1332+ 92FD C0               ret nz
1333+ 92FE 04           1 inc b
1334+ 92FF C9               ret
1335+ 9300
1336+ 9300 A7           Compara_cositas_L3 and a
1337+ 9301 28 0D            jr z,1F
1338+ 9303              ;    cp $fd
1339+ 9303              ;    jr z,1F
1340+ 9303              ;    cp $fe
1341+ 9303              ;    jr z,1F
1342+ 9303              ;    cp $ff
1343+ 9303              ;    jr z,1F
1344+ 9303 FE 01            cp $01
1345+ 9305 28 09            jr z,1F
1346+ 9307 FE 02            cp $02
1347+ 9309 28 05            jr z,1F
1348+ 930B FE 03            cp $03
1349+ 930D 28 01            jr z,1F
1350+ 930F C0               ret nz
1351+ 9310 04           1 inc b
1352+ 9311 C9               ret
1353+ 9312
1354+ 9312 A7           Compara_cositas_H4 and a
1355+ 9313 28 11            jr z,1F
1356+ 9315 FE FD            cp $fd
1357+ 9317 28 0D            jr z,1F
1358+ 9319 FE FE            cp $fe
1359+ 931B 28 09            jr z,1F
1360+ 931D FE FF            cp $ff
1361+ 931F 28 05            jr z,1F
1362+ 9321 FE 01            cp $01
1363+ 9323 28 01            jr z,1F
1364+ 9325              ;    cp $02
1365+ 9325              ;    jr z,1F
1366+ 9325              ;    cp $03
1367+ 9325              ;    jr z,1F
1368+ 9325 C0               ret nz
1369+ 9326 04           1 inc b
1370+ 9327 C9               ret
1371+ 9328
1372+ 9328 A7           Compara_cositas_L4 and a
1373+ 9329 28 0D            jr z,1F
1374+ 932B              ;    cp $fd
1375+ 932B              ;    jr z,1F
1376+ 932B FE FE            cp $fe
1377+ 932D 28 09            jr z,1F
1378+ 932F FE FF            cp $ff
1379+ 9331 28 05            jr z,1F
1380+ 9333 FE 01            cp $01
1381+ 9335 28 01            jr z,1F
1382+ 9337              ;    cp $02
1383+ 9337              ;    jr z,1F
1384+ 9337              ;    cp $03
1385+ 9337              ;    jr z,1F
1386+ 9337 C0               ret nz
1387+ 9338 04           1 inc b
1388+ 9339 C9               ret
# file closed: Disparo.asm
1702  933A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 933A              ; ******************************************************************************************************************************************************************************************
   2+ 933A              ;
   3+ 933A              ; 26/06/23
   4+ 933A              ;
   5+ 933A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 933A
   7+ 933A CD 1E 96     Draw call Prepara_draw
   8+ 933D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 933E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 933F 28 05        	jr z,2F
  11+ 9341
  12+ 9341 3A D8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9344 18 0C        	jr 1F
  14+ 9346
  15+ 9346 2A D6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9349 22 C6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 934C CD DB 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 934F              ;													; _la esquina superior izquierda de la pantalla.
  19+ 934F CD 97 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9352
  21+ 9352 3A F2 88     1 ld a,(Ctrl_0)
  22+ 9355 CB 6F        	bit 5,a
  23+ 9357 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9359
  25+ 9359 CD 71 93     	call Comprueba_limite_horizontal
  26+ 935C CD 01 94     	call Comprueba_limite_vertical
  27+ 935F
  28+ 935F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 935F              ; -----------------------
  30+ 935F              ; -----------------------
  31+ 935F              ; -----------------------
  32+ 935F
  33+ 935F CD 4E 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9362 CD 85 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9365 CD E4 95     	call Define_rutina_de_impresion
  36+ 9368
  37+ 9368 3A F2 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 936B CB AF        	res 5,a											; _a ser de utilidad.
  39+ 936D 32 F2 88     	ld (Ctrl_0),a
  40+ 9370
  41+ 9370 C9           	ret
  42+ 9371
  43+ 9371              ; *******************************************************************************************************************************************************************************************
  44+ 9371              ;	21/01/23
  45+ 9371              ;
  46+ 9371              ; 	Comprueba_limite_horizontal.
  47+ 9371              ;
  48+ 9371              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9371              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9371              ;
  51+ 9371              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9371              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9371              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9371              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9371
  56+ 9371
  57+ 9371
  58+ 9371 3A F2 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9374 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9376 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9378 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 937A 32 F2 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 937D 18 09            jr 6F
  64+ 937F CB 5F        1 bit 3,a
  65+ 9381 28 0A            jr z,2F
  66+ 9383 E6 F7            and $f7
  67+ 9385 32 F2 88         ld (Ctrl_0),a
  68+ 9388 CD DB 94     6 call Inicializacion
  69+ 938B 18 5B            jr 5F
  70+ 938D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 938E
  72+ 938E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 938E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 938E
  75+ 938E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 938F 2A 00 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9392 CD 3D 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9395 67           	ld h,a
  79+ 9396 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9397 CD 3D 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 939A 67           	ld h,a
  82+ 939B A7           	and a
  83+ 939C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 939E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 939F 3A D8 88     	ld a,(Cuad_objeto)
  86+ 93A2 FE 02        	cp 2
  87+ 93A4 38 1E        	jr c,3F
  88+ 93A6 28 1C        	jr z,3F
  89+ 93A8 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93A9 28 23            jr z,7F
  91+ 93AB 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93AD 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93AF E1           	pop hl
  94+ 93B0
  95+ 93B0              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93B0              ; _para indicar con E="2" en caso necesario.
  97+ 93B0
  98+ 93B0 E5               push hl
  99+ 93B1 C5               push bc
 100+ 93B2 CD 3D 99     	call calcula_tercio
 101+ 93B5 FE 01        	cp 1
 102+ 93B7 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93B9 CD E9 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93BC 28 26            jr z,9F
 105+ 93BE 38 24            jr c,9F
 106+ 93C0 1E 00        11 ld e,0
 107+ 93C2 18 22            jr 8F
 108+ 93C4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93C5 28 07        	jr z, 7F
 110+ 93C7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93C9 1E 00         	ld e,0
 112+ 93CB E1           	pop hl
 113+ 93CC 18 04        	jr 4F
 114+ 93CE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93D0 18 15            jr 10F
 116+ 93D2
 117+ 93D2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93D2              ; _para indicar con E="2" en caso necesario.
 119+ 93D2
 120+ 93D2 E5           4 push hl
 121+ 93D3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93D4 CD 3D 99     	call calcula_tercio
 123+ 93D7 FE 01        	cp 1
 124+ 93D9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93DB CD E9 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93DE 28 04            jr z,9F
 127+ 93E0 30 02            jr nc,9F
 128+ 93E2 18 02        	jr 8F
 129+ 93E4 1E 02        9 ld e,2
 130+ 93E6 C1           8 pop bc
 131+ 93E7 E1           10 pop hl
 132+ 93E8 C9           5 ret
 133+ 93E9
 134+ 93E9              ; --------------------
 135+ 93E9              ;
 136+ 93E9              ; 25/08/22
 137+ 93E9
 138+ 93E9 CD 3D 99     Comprueba_centro call calcula_tercio
 139+ 93EC 67               ld h,a
 140+ 93ED 08           	ex af,af
 141+ 93EE FE 02        	cp 2
 142+ 93F0 38 07        	jr c,1F
 143+ 93F2 28 05        	jr z,1F
 144+ 93F4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93F7 18 03        	jr 2F
 146+ 93F9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93FC 08           2 ex af,af
 148+ 93FD A7               and a
 149+ 93FE ED 42            sbc hl,bc
 150+ 9400 C9               ret
 151+ 9401
 152+ 9401              ; *********************************************************************************************************************************************************************************************
 153+ 9401              ;
 154+ 9401              ;   16/8/22
 155+ 9401              ;
 156+ 9401              ;	Comprueba_limite_vertical
 157+ 9401              ;
 158+ 9401              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9401              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9401              ;
 161+ 9401
 162+ 9401 2A C6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9404 7D           	ld a,l
 164+ 9405 E6 1F        	and $1F
 165+ 9407 57           	ld d,a
 166+ 9408 3A 02 89     	ld a,(Limite_vertical)
 167+ 940B BA           	cp d 											; Límite - Posición.
 168+ 940C 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 940D 3A D8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9410 CB 47        	bit 0,a
 171+ 9412 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9414
 173+ 9414              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9414
 175+ 9414 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9415 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9417
 178+ 9417              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9417              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9417
 181+ 9417 3A CA 88         ld a,(Coordenada_X)
 182+ 941A 16 0F            ld d,Centro_izquierda
 183+ 941C A7               and a
 184+ 941D 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 941E 28 1E            jr z,3F
 186+ 9420 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9422              ;                                                    ; _salimos sin modificar nada.
 188+ 9422 18 0E            jr 2F
 189+ 9424 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9425 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9427
 192+ 9427              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9427              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9427
 195+ 9427 3A CA 88         ld a,(Coordenada_X)
 196+ 942A 16 10            ld d,Centro_derecha
 197+ 942C A7               and a
 198+ 942D 92               sub d
 199+ 942E 28 0E            jr z,3F
 200+ 9430 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9432              ;                                                    ; _salimos sin modificar nada.
 202+ 9432 CB 43        2 bit 0,e
 203+ 9434 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9436 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9437 CD CB 94         call Modificaccionne
 206+ 943A C1           	pop bc
 207+ 943B CD DB 94         call Inicializacion
 208+ 943E C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 943F
 210+ 943F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 943F
 212+ 943F C5           4 push bc
 213+ 9440 01 C5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9443 0A           	ld a,(bc)
 215+ 9444 3D           	dec a
 216+ 9445 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9446 7D           	ld a,l
 218+ 9447 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9448 CB 47        	bit 0,a
 220+ 944A 28 03        	jr z,5F
 221+ 944C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 944D 18 2E        	jr 7F
 223+ 944F
 224+ 944F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 944F
 226+ 944F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9450 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9451 3A F2 88     	ld a,(Ctrl_0)
 229+ 9454 CB 4F        	bit 1,a
 230+ 9456 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9458 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9459
 233+ 9459              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9459
 235+ 9459 1C               inc e
 236+ 945A 1D               dec e
 237+ 945B 20 07            jr nz,12F
 238+ 945D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 945E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 945F 22 C6 88     	ld (Posicion_actual),hl
 241+ 9462 18 44        13 jr 9F
 242+ 9464 CB 43        12 bit 0,e
 243+ 9466 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9468              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9468 C1           	pop bc
 246+ 9469 18 D3        	jr 3B
 247+ 946B 80           14 add b
 248+ 946C 6F               ld l,a
 249+ 946D 22 C6 88     	ld (Posicion_actual),hl
 250+ 9470 CD CB 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9473 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9475 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9477 32 F2 88         ld (Ctrl_0),a
 254+ 947A F1           	pop af
 255+ 947B 18 2B        	jr 9F
 256+ 947D
 257+ 947D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 947D
 259+ 947D F5           7 push af
 260+ 947E 3A F2 88     	ld a,(Ctrl_0)
 261+ 9481 CB 47        	bit 0,a
 262+ 9483 20 1D        	jr nz,8F
 263+ 9485 F1           	pop af
 264+ 9486
 265+ 9486              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9486
 267+ 9486 1C           	inc e
 268+ 9487 1D               dec e
 269+ 9488 20 07            jr nz,10F
 270+ 948A 90           	sub b
 271+ 948B 6F               ld l,a
 272+ 948C 22 C6 88     	ld (Posicion_actual),hl
 273+ 948F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9491              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9491 CB 43        10 bit 0,e
 276+ 9493 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9495              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9495 C1           	pop bc
 279+ 9496 18 A6        	jr 3B
 280+ 9498 90           16 sub b
 281+ 9499 6F               ld l,a
 282+ 949A 22 C6 88     	ld (Posicion_actual),hl
 283+ 949D CD CB 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94A0 18 06            jr 9F
 285+ 94A2 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94A4 32 F2 88         ld (Ctrl_0),a
 287+ 94A7 F1           	pop af
 288+ 94A8 C1           9 pop bc
 289+ 94A9 1E 00        	ld e,0
 290+ 94AB CD DB 94         call Inicializacion
 291+ 94AE F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94AF 08           	ex af,af
 293+ 94B0 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94B1 18 8B            jr 3B
 295+ 94B3
 296+ 94B3              ; --------------------
 297+ 94B3
 298+ 94B3 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94B5 CD 39 96     1 call PreviousScan
 300+ 94B8 10 FB            djnz 1B
 301+ 94BA 22 C6 88     	ld (Posicion_actual),hl
 302+ 94BD AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94BE C9           	ret
 304+ 94BF
 305+ 94BF              ; --------------------
 306+ 94BF
 307+ 94BF 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94C1 CD 2A 96     1 call NextScan
 309+ 94C4 10 FB            djnz 1B
 310+ 94C6 22 C6 88     	ld (Posicion_actual),hl
 311+ 94C9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94CA C9           	ret
 313+ 94CB
 314+ 94CB              ; --------------------
 315+ 94CB              ;
 316+ 94CB              ;	22/01/23
 317+ 94CB              ;
 318+ 94CB              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94CB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94CB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94CB
 322+ 94CB
 323+ 94CB              Modificaccionne
 324+ 94CB
 325+ 94CB 3A D8 88     	ld a,(Cuad_objeto)
 326+ 94CE FE 02        	cp 2
 327+ 94D0 CC B3 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94D3 DC B3 94         call c,Modifica_Pos_actual
 329+ 94D6 C8           	ret z
 330+ 94D7 CD BF 94         call Modifica_Pos_actual2
 331+ 94DA C9               ret
 332+ 94DB
 333+ 94DB              ; *************************************************************************************************************************************************************************************************
 334+ 94DB              ;
 335+ 94DB              ;	13/8/22
 336+ 94DB              ;
 337+ 94DB              ;	Inicializacion
 338+ 94DB              ;
 339+ 94DB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94DB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94DB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94DB              ;
 343+ 94DB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94DB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94DB              ;	_ desaparece/aparece.
 346+ 94DB
 347+ 94DB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94DB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94DB              ;
 350+ 94DB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94DB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94DB              ; 		   [E] ="0"
 353+ 94DB
 354+ 94DB              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94DB
 356+ 94DB CD 3D 99     Inicializacion call calcula_tercio
 357+ 94DE 28 36        	jr z,primit
 358+ 94E0 E6 02        	and 2
 359+ 94E2 20 07        	jr nz,segmit
 360+ 94E4 7D           	ld a,l
 361+ 94E5 FE 7F        	cp $7f
 362+ 94E7 38 2D        	jr c,primit
 363+ 94E9 28 2B        	jr z,primit
 364+ 94EB CD 48 95     segmit call column
 365+ 94EE 38 13        	jr c,tercuad
 366+ 94F0 3E 04        cuarcuad ld a,4
 367+ 94F2 32 D8 88     	ld (Cuad_objeto),a
 368+ 94F5 21 20 48     	ld hl,$4820
 369+ 94F8 22 00 89     	ld (Limite_horizontal),hl
 370+ 94FB 21 02 89     	ld hl,Limite_vertical
 371+ 94FE 36 0D        	ld (hl),$0d
 372+ 9500 08           	ex af,af
 373+ 9501 18 3C        	jr 1F
 374+ 9503              tercuad
 375+ 9503 3E 03        	ld a,3
 376+ 9505 32 D8 88     	ld (Cuad_objeto),a
 377+ 9508 21 20 48     	ld hl,$4820
 378+ 950B 22 00 89     	ld (Limite_horizontal),hl
 379+ 950E 21 02 89     	ld hl,Limite_vertical
 380+ 9511 36 12        	ld (hl),$12
 381+ 9513 08           	ex af,af
 382+ 9514 18 29        	jr 1F
 383+ 9516 CD 48 95     primit call column
 384+ 9519 38 13        	jr c, primcuad
 385+ 951B              segcuad
 386+ 951B 3E 02        	ld a,2
 387+ 951D 32 D8 88     	ld (Cuad_objeto),a
 388+ 9520 21 C0 4F     	ld hl,$4fc0
 389+ 9523 22 00 89     	ld (Limite_horizontal),hl
 390+ 9526 21 02 89     	ld hl,Limite_vertical
 391+ 9529 36 0D        	ld (hl),$0d
 392+ 952B 08           	ex af,af
 393+ 952C 18 11        	jr 1F
 394+ 952E              primcuad
 395+ 952E 3E 01        	ld a,1
 396+ 9530 32 D8 88     	ld (Cuad_objeto),a
 397+ 9533 21 C0 4F     	ld hl,$4fc0
 398+ 9536 22 00 89     	ld (Limite_horizontal),hl
 399+ 9539 21 02 89     	ld hl,Limite_vertical
 400+ 953C 36 12        	ld (hl),$12
 401+ 953E 08           	ex af,af
 402+ 953F CD E1 9C     1 call Genera_coordenadas
 403+ 9542 21 F2 88     	ld hl,Ctrl_0
 404+ 9545 CB EE        	set 5,(hl)
 405+ 9547 C9           	ret
 406+ 9548
 407+ 9548              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9548
 409+ 9548              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9548              ;
 411+ 9548              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9548
 413+ 9548 7D           column ld a,l
 414+ 9549 E6 1F        	and $1f
 415+ 954B FE 10         	cp $10
 416+ 954D C9            	ret
 417+ 954E
 418+ 954E              ; --------------------------------------------------------------------------------------------------------------------
 419+ 954E              ;
 420+ 954E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 954E              ;
 422+ 954E              ; 14/12/22
 423+ 954E              ;
 424+ 954E              ;	Modifica: A y BC.
 425+ 954E
 426+ 954E 3A D8 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9551 E6 01        	and 1
 428+ 9553 28 17        	jr z,1F
 429+ 9555
 430+ 9555              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9555
 432+ 9555 3A CA 88     	ld a,(Coordenada_X)
 433+ 9558 47           	ld b,a
 434+ 9559 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 955A 79           	ld a,c
 436+ 955B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 955C 38 08        	jr c,2F
 438+ 955E 47           	ld b,a
 439+ 955F 79           	ld a,c
 440+ 9560 90           	sub b
 441+ 9561 32 FF 88     	ld (Columnas),a
 442+ 9564 18 1B        	jr 4F
 443+ 9566 79           2 ld a,c
 444+ 9567 32 FF 88     	ld (Columnas),a
 445+ 956A 18 15        	jr 4F
 446+ 956C
 447+ 956C              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 956C
 449+ 956C 3A CA 88     1 ld a,(Coordenada_X)
 450+ 956F 81           	add c
 451+ 9570 3D           	dec a
 452+ 9571 D6 1F        	sub $1f
 453+ 9573 38 08        	jr c,3F
 454+ 9575 47           	ld b,a
 455+ 9576 79           	ld a,c
 456+ 9577 90           	sub b
 457+ 9578 32 FF 88     	ld (Columnas),a
 458+ 957B 18 04        	jr 4F
 459+ 957D 79           3 ld a,c
 460+ 957E 32 FF 88     	ld (Columnas),a
 461+ 9581 D9           4 exx
 462+ 9582 4F           	ld c,a
 463+ 9583 D9           	exx
 464+ 9584 C9            ret
 465+ 9585
 466+ 9585              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9585              ;
 468+ 9585              ;   19/7/23
 469+ 9585              ;
 470+ 9585              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9585              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9585              ;
 473+ 9585              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9585              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9585              ;
 476+ 9585              ;	DESTRUYE: HL,B Y A.
 477+ 9585
 478+ 9585 3A D8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9588 FE 02        	cp 2
 480+ 958A 38 18        	jr c,1F
 481+ 958C 28 16        	jr z,1F
 482+ 958E E6 01        	and 1
 483+ 9590 28 0D        	jr z,3F
 484+ 9592
 485+ 9592              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9592
 487+ 9592 CD D8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9595
 489+ 9595 7D           9 ld a,l
 490+ 9596 E6 1F        	and $1f
 491+ 9598 28 2A        	jr z,7F
 492+ 959A 2B           	dec hl
 493+ 959B 10 F8        	djnz 9B
 494+ 959D 18 25        	jr 7F
 495+ 959F
 496+ 959F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 959F
 498+ 959F 2A C6 88     3 ld hl,(Posicion_actual)
 499+ 95A2 18 20        	jr 7F
 500+ 95A4
 501+ 95A4 28 14        1 jr z,2F
 502+ 95A6
 503+ 95A6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95A6
 505+ 95A6 CD D8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95A9
 507+ 95A9 7D           4 ld a,l
 508+ 95AA E6 1F        	and $1f
 509+ 95AC 28 03        	jr z,6F
 510+ 95AE 2B           	dec hl
 511+ 95AF 10 F8        	djnz 4B
 512+ 95B1 06 0F        6 ld b,15
 513+ 95B3 CD 39 96     5 call PreviousScan
 514+ 95B6 10 FB        	djnz 5B
 515+ 95B8 18 0A        	jr 7F
 516+ 95BA
 517+ 95BA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95BA
 519+ 95BA CD D8 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95BD 06 0F        	ld b,15
 521+ 95BF CD 39 96     8 call PreviousScan
 522+ 95C2 10 FB        	djnz 8B
 523+ 95C4
 524+ 95C4 E5           7 push hl
 525+ 95C5 DD E1        	pop ix
 526+ 95C7
 527+ 95C7 2A C8 88     	ld hl,(Puntero_objeto)
 528+ 95CA E5           	push hl
 529+ 95CB FD E1        	pop iy
 530+ 95CD
 531+ 95CD              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95CD
 533+ 95CD 3A F2 88     	ld a,(Ctrl_0)
 534+ 95D0 CB 77        	bit 6,a
 535+ 95D2 C8           	ret z
 536+ 95D3
 537+ 95D3              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95D3              ; _ entidad / Amadeus´.
 539+ 95D3
 540+ 95D3 DD 22 A8 85  	ld (p.imp.amadeus),ix
 541+ 95D7
 542+ 95D7 C9           	ret
 543+ 95D8
 544+ 95D8              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95D8              ;
 546+ 95D8              ;	2/1/23
 547+ 95D8              ;
 548+ 95D8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95D8              ;
 550+ 95D8              ;	Tras esta rutina tenemos:
 551+ 95D8              ;
 552+ 95D8              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95D8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95D8              ;
 555+ 95D8              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95D8
 557+ 95D8 2A C6 88     Operandos ld hl,(Posicion_actual)
 558+ 95DB 3A FF 88     	ld a,(Columnas)
 559+ 95DE 3D           	dec a
 560+ 95DF 20 01        	jr nz,1F
 561+ 95E1 3C           	inc a
 562+ 95E2 47           1 ld b,a
 563+ 95E3 C9           	ret
 564+ 95E4
 565+ 95E4              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95E4              ;
 567+ 95E4              ;	3/1/23
 568+ 95E4              ;
 569+ 95E4              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95E4              ;
 571+ 95E4              ;	Destruye: A,B,HL y DE.
 572+ 95E4
 573+ 95E4              Define_rutina_de_impresion
 574+ 95E4
 575+ 95E4 3A C5 88     	ld a,(Columns)
 576+ 95E7 47           	ld b,a
 577+ 95E8 3A FF 88     	ld a,(Columnas)
 578+ 95EB B8           	cp b
 579+ 95EC 20 0D        	jr nz,2f
 580+ 95EE
 581+ 95EE              ;	La entidad se imprime entera.
 582+ 95EE
 583+ 95EE 21 0D 97     	ld hl, Indice_entidades_completas
 584+ 95F1 E6 01        	and 1
 585+ 95F3 28 02        	jr z,1F
 586+ 95F5
 587+ 95F5 23           	inc hl
 588+ 95F6 23           	inc hl
 589+ 95F7
 590+ 95F7 CD A9 8C     1 call Extrae_address
 591+ 95FA C9           	ret		;	ret
 592+ 95FB
 593+ 95FB              ;	La entidad no se imprime entera en pantalla.
 594+ 95FB
 595+ 95FB 3A D8 88     2 ld a,(Cuad_objeto)
 596+ 95FE E6 01        	and 1
 597+ 9600 28 17        	jr z,3F
 598+ 9602
 599+ 9602              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9602
 601+ 9602 21 11 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9605 3A C5 88     4 ld a,(Columns)
 603+ 9608 E6 01        	and 1
 604+ 960A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 960C
 606+ 960C 23           	inc hl
 607+ 960D 23           	inc hl
 608+ 960E
 609+ 960E 3A FF 88     	ld a,(Columnas)
 610+ 9611 E6 01        	and 1
 611+ 9613 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9615
 613+ 9615 23           	inc hl
 614+ 9616 23           	inc hl
 615+ 9617
 616+ 9617 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9619
 618+ 9619 21 17 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 961C 18 E7        	jr 4B
 620+ 961E
 621+ 961E              ; --------------------------------------------------------------------------------------------------------------------
 622+ 961E              ;
 623+ 961E              ;	Prepara_draw
 624+ 961E              ;
 625+ 961E              ;	Es una rutina de carga.
 626+ 961E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 961E              ;
 628+ 961E              ;	FUNCIONAMIENTO:
 629+ 961E              ;
 630+ 961E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 961E              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 961E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 961E              ;
 634+ 961E              ;	DESTRUYE:
 635+ 961E              ;
 636+ 961E              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 961E
 638+ 961E 21 C4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9621 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9622 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9623 4E           	ld c,(hl)
 642+ 9624 2A C6 88     	ld hl,(Posicion_actual)
 643+ 9627 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9629 C9           	ret
 645+ 962A
 646+ 962A              ;----------------------------------------------------------------------------------------------------------------
 647+ 962A              ;
 648+ 962A              ;	5/08/22
 649+ 962A              ;
 650+ 962A              ;   NextScan.
 651+ 962A              ;
 652+ 962A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 962A              ;
 654+ 962A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 962A              ;
 656+ 962A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 962A              ;
 658+ 962A              ;       DESTRUIDOS: AF y HL !!!
 659+ 962A              ;
 660+ 962A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 962A              ;
 662+ 962A
 663+ 962A 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 962B 7C               ld a,h
 665+ 962C E6 07            and 7
 666+ 962E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 962F
 668+ 962F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9630 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9632 6F               ld l,a
 671+ 9633 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9634
 673+ 9634 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9635 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9637 67               ld h,a
 676+ 9638 C9               ret
 677+ 9639
 678+ 9639              ;----------------------------------------------------------------------------------------------------------------
 679+ 9639              ;
 680+ 9639              ;	5/08/22
 681+ 9639              ;
 682+ 9639              ;   PreviousScan.
 683+ 9639              ;
 684+ 9639              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9639              ;
 686+ 9639              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9639              ;
 688+ 9639              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9639              ;
 690+ 9639              ;       DESTRUIDOS: AF y HL !!!
 691+ 9639              ;
 692+ 9639              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9639              ;
 694+ 9639
 695+ 9639 7C           PreviousScan ld a,h
 696+ 963A 25               dec h               ; Dec H.
 697+ 963B E6 07            and 7
 698+ 963D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 963E
 700+ 963E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 963F D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9641 6F               ld l,a
 703+ 9642 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9643
 705+ 9643 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9644 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9646 67               ld h,a
 708+ 9647 C9               ret
 709+ 9648
 710+ 9648              ; -----------------------------------------------------------------------------------
 711+ 9648              ;
 712+ 9648              ;	31/7/23
 713+ 9648              ;
 714+ 9648              ;	Rutina principal de pintado de entidades.
 715+ 9648              ;	Extrae la foto del frame, (entidades).
 716+ 9648
 717+ 9648              Extrae_foto_entidades
 718+ 9648
 719+ 9648 21 01 70     	ld hl,Album_de_fotos+1
 720+ 964B 7E           	ld a,(hl)
 721+ 964C A7           	and a
 722+ 964D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 964E
 724+ 964E              ;	No hay datos, (entidades para pintar en este frame).
 725+ 964E
 726+ 964E 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9651 A7           	and a
 728+ 9652 C8           	ret z
 729+ 9653
 730+ 9653              ; -----------------------------------
 731+ 9653
 732+ 9653 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9657 31 00 70     	ld sp,Album_de_fotos
 734+ 965A
 735+ 965A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 965C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 965D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 965E
 739+ 965E ED 73 18 89  	ld (Stack_2),sp
 740+ 9662 ED 7B 16 89  	ld sp,(Stack)
 741+ 9666
 742+ 9666              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9666
 744+ 9666 3E CD        	ld a,$cd
 745+ 9668 32 70 96     	ld (Imprime),a
 746+ 966B EB           	ex de,hl
 747+ 966C 22 71 96     	ld (Imprime+1),hl
 748+ 966F EB           	ex de,hl
 749+ 9670
 750+ 9670              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9670
 752+ 9670 00 00 00     Imprime db 0,0,0
 753+ 9673
 754+ 9673 ED 73 16 89  	ld (Stack),sp
 755+ 9677
 756+ 9677 3A 11 89     	ld a,(Numero_de_malotes)
 757+ 967A 3D           	dec a
 758+ 967B 28 09        	jr z,1F
 759+ 967D 32 11 89      	ld (Numero_de_malotes),a
 760+ 9680
 761+ 9680 ED 7B 18 89  	ld sp,(Stack_2)
 762+ 9684 18 D4        	jr 2B
 763+ 9686
 764+ 9686 AF           1 xor a
 765+ 9687 32 18 89     	ld (Stack_2),a
 766+ 968A
 767+ 968A C9           	ret
 768+ 968B
 769+ 968B              ; -----------------------------------------------------------------------------------
 770+ 968B              ;
 771+ 968B              ;	28/2/23
 772+ 968B              ;
 773+ 968B              ;	Pinta los disparos generados.
 774+ 968B
 775+ 968B              Extrae_foto_disparos
 776+ 968B
 777+ 968B 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 968E 7E               ld a,(hl)
 779+ 968F A7               and a
 780+ 9690 C8               ret z
 781+ 9691
 782+ 9691 3A 25 89     	ld a,(Numero_de_disparotes)
 783+ 9694 A7           	and a
 784+ 9695 C8           	ret z
 785+ 9696 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 969A 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 969D
 788+ 969D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 969F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 96A0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 96A1
 792+ 96A1 ED 73 18 89  	ld (Stack_2),sp
 793+ 96A5 ED 7B 16 89  	ld sp,(Stack)
 794+ 96A9
 795+ 96A9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96A9
 797+ 96A9 3E CD        	ld a,$cd
 798+ 96AB 32 B3 96     	ld (Imprime2),a
 799+ 96AE EB           	ex de,hl
 800+ 96AF 22 B4 96     	ld (Imprime2+1),hl
 801+ 96B2 EB           	ex de,hl
 802+ 96B3
 803+ 96B3              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96B3
 805+ 96B3 00 00 00     Imprime2 db 0,0,0
 806+ 96B6
 807+ 96B6 3A 25 89     	ld a,(Numero_de_disparotes)
 808+ 96B9 3D           	dec a
 809+ 96BA 28 09        	jr z,1F
 810+ 96BC 32 25 89      	ld (Numero_de_disparotes),a
 811+ 96BF
 812+ 96BF ED 7B 18 89  	ld sp,(Stack_2)
 813+ 96C3 18 D8        	jr 2B
 814+ 96C5
 815+ 96C5 AF           1 xor a
 816+ 96C6 32 18 89     	ld (Stack_2),a
 817+ 96C9 C9           	ret
 818+ 96CA
 819+ 96CA              ; -----------------------------------------------------------------------------------
 820+ 96CA              ;
 821+ 96CA              ;	4/9/23
 822+ 96CA              ;
 823+ 96CA              ;	Rutina principal de pintado de Amadeus.
 824+ 96CA              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96CA
 826+ 96CA 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96CD 7E           	ld a,(hl)
 828+ 96CE A7           	and a
 829+ 96CF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96D0
 831+ 96D0 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96D3 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96D4 C8           	ret z
 834+ 96D5
 835+ 96D5              ; -----------------------------------
 836+ 96D5
 837+ 96D5 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96D9 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 96DC
 840+ 96DC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96DE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96DF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96E0
 844+ 96E0 ED 73 18 89  	ld (Stack_2),sp
 845+ 96E4 ED 7B 16 89  	ld sp,(Stack)
 846+ 96E8
 847+ 96E8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96E8
 849+ 96E8 3E CD        	ld a,$cd
 850+ 96EA 32 F2 96     	ld (Imprime_Amadeus),a
 851+ 96ED EB           	ex de,hl
 852+ 96EE 22 F3 96     	ld (Imprime_Amadeus+1),hl
 853+ 96F1 EB           	ex de,hl
 854+ 96F2
 855+ 96F2              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96F2
 857+ 96F2 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96F5
 859+ 96F5 ED 73 16 89  	ld (Stack),sp
 860+ 96F9
 861+ 96F9 3A 11 89     	ld a,(Numero_de_malotes)
 862+ 96FC 3D           	dec a
 863+ 96FD 28 09        	jr z,1F
 864+ 96FF 32 11 89      	ld (Numero_de_malotes),a
 865+ 9702
 866+ 9702 ED 7B 18 89  	ld sp,(Stack_2)
 867+ 9706 18 D4        	jr 2B
 868+ 9708
 869+ 9708 AF           1 xor a
 870+ 9709 32 18 89     	ld (Stack_2),a
 871+ 970C
 872+ 970C C9           	ret
# file closed: Draw_XOR.asm
1703  970D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 970D              ;   índices de Rutinas de impresión.
   2+ 970D
   3+ 970D 1D 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 970F 4A 97            defw Pinta_Amadeus_3x2
   5+ 9711
   6+ 9711 A0 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9713 40 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9715 F4 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9717
  10+ 9717 CA 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9719 CE 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 971B 82 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 971D
  14+ 971D
  15+ 971D              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 971D              ;
  17+ 971D              ;   12/12/22
  18+ 971D              ;
  19+ 971D              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 971D              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 971D              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 971D              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 971D              ;
  24+ 971D              ;   Modifica: DE y HL.
  25+ 971D
  26+ 971D ED 73 16 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9721 FD F9        	ld sp,iy
  28+ 9723 06 10            ld b,16
  29+ 9725 D1           1 pop de
  30+ 9726 7B               ld a,e
  31+ 9727 AE               xor (hl)
  32+ 9728 77           	ld (hl),a
  33+ 9729 23           	inc hl
  34+ 972A 7A               ld a,d
  35+ 972B AE               xor (hl)
  36+ 972C 77           	ld (hl),a
  37+ 972D 2B           	dec hl
  38+ 972E 24           	inc h
  39+ 972F 7C               ld a,h
  40+ 9730 E6 07            and 7
  41+ 9732 20 0A            jr nz,2F
  42+ 9734 7D               ld a,l
  43+ 9735 C6 20            add a,$20
  44+ 9737 6F               ld l,a
  45+ 9738 38 04            jr c,2F
  46+ 973A 7C               ld a,h
  47+ 973B D6 08            sub 8
  48+ 973D 67               ld h,a
  49+ 973E 7C           2 ld a,h
  50+ 973F FE 58            cp $58
  51+ 9741 28 02            jr z,3F
  52+ 9743 10 E0            djnz 1B
  53+ 9745 ED 7B 16 89  3 ld sp,(Stack)
  54+ 9749 C9           	ret
  55+ 974A
  56+ 974A ED 73 16 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 974E FD F9        	ld sp,iy
  58+ 9750 06 08            ld b,8
  59+ 9752 D1           1 pop de
  60+ 9753 7B               ld a,e
  61+ 9754 AE               xor (hl)
  62+ 9755 77           	ld (hl),a
  63+ 9756 23           	inc hl
  64+ 9757 7A               ld a,d
  65+ 9758 AE               xor (hl)
  66+ 9759 77           	ld (hl),a
  67+ 975A 23           	inc hl
  68+ 975B D1           	pop de
  69+ 975C 7B               ld a,e
  70+ 975D AE               xor (hl)
  71+ 975E 77           	ld (hl),a
  72+ 975F 2B           	dec hl
  73+ 9760 2B           	dec hl
  74+ 9761 24           	inc h
  75+ 9762 7C               ld a,h
  76+ 9763 E6 07            and 7
  77+ 9765 20 0A            jr nz,2F
  78+ 9767 7D               ld a,l
  79+ 9768 C6 20            add a,$20
  80+ 976A 6F               ld l,a
  81+ 976B 38 04            jr c,2F
  82+ 976D 7C               ld a,h
  83+ 976E D6 08            sub 8
  84+ 9770 67               ld h,a
  85+ 9771 7C           2 ld a,h
  86+ 9772 FE 58            cp $58
  87+ 9774 28 25            jr z,4F
  88+ 9776 7A               ld a,d
  89+ 9777 AE               xor (hl)
  90+ 9778 77               ld (hl),a
  91+ 9779 D1           	pop de
  92+ 977A 23           	inc hl
  93+ 977B 7B               ld a,e
  94+ 977C AE               xor (hl)
  95+ 977D 77           	ld (hl),a
  96+ 977E 23           	inc hl
  97+ 977F 7A               ld a,d
  98+ 9780 AE               xor (hl)
  99+ 9781 77           	ld (hl),a
 100+ 9782 2B           	dec hl
 101+ 9783 2B           	dec hl
 102+ 9784 24           	inc h
 103+ 9785 7C               ld a,h
 104+ 9786 E6 07            and 7
 105+ 9788 20 0A            jr nz,3F
 106+ 978A 7D               ld a,l
 107+ 978B C6 20            add a,$20
 108+ 978D 6F               ld l,a
 109+ 978E 38 04            jr c,3F
 110+ 9790 7C               ld a,h
 111+ 9791 D6 08            sub 8
 112+ 9793 67               ld h,a
 113+ 9794 7C           3 ld a,h
 114+ 9795 FE 58            cp $58
 115+ 9797 28 02            jr z,4F
 116+ 9799 10 B7            djnz 1B
 117+ 979B ED 7B 16 89  4 ld sp,(Stack)
 118+ 979F C9           	ret
 119+ 97A0
 120+ 97A0              ; ---------------------------------------------------
 121+ 97A0
 122+ 97A0 ED 73 16 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97A4 FD F9        	ld sp,iy
 124+ 97A6
 125+ 97A6              ; >>>
 126+ 97A6
 127+ 97A6 06 10            ld b,16
 128+ 97A8 D1           1 pop de
 129+ 97A9 7A           	ld a,d
 130+ 97AA AE           	xor (hl)
 131+ 97AB 77           	ld (hl),a
 132+ 97AC 24           	inc h
 133+ 97AD 7C               ld a,h
 134+ 97AE E6 07            and 7
 135+ 97B0 20 0C            jr nz,2F
 136+ 97B2 7D               ld a,l
 137+ 97B3 C6 20            add a,$20
 138+ 97B5 6F               ld l,a
 139+ 97B6 38 06            jr c,2F
 140+ 97B8 7C               ld a,h
 141+ 97B9 D6 08            sub 8
 142+ 97BB 67               ld h,a
 143+ 97BC 18 00            jr 2F
 144+ 97BE 7C           2 ld a,h
 145+ 97BF FE 58            cp $58
 146+ 97C1 28 02            jr z,3F
 147+ 97C3 10 E3            djnz 1B
 148+ 97C5 ED 7B 16 89  3 ld sp,(Stack)
 149+ 97C9 C9           	ret
 150+ 97CA
 151+ 97CA ED 73 16 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97CE FD F9        	ld sp,iy
 153+ 97D0
 154+ 97D0              ; >>>
 155+ 97D0
 156+ 97D0 06 10            ld b,16
 157+ 97D2 D1           1 pop de
 158+ 97D3 7B           	ld a,e
 159+ 97D4 AE           	xor (hl)
 160+ 97D5 77           	ld (hl),a
 161+ 97D6 24           	inc h
 162+ 97D7 7C               ld a,h
 163+ 97D8 E6 07            and 7
 164+ 97DA 20 0C            jr nz,2F
 165+ 97DC 7D               ld a,l
 166+ 97DD C6 20            add a,$20
 167+ 97DF 6F               ld l,a
 168+ 97E0 38 06            jr c,2F
 169+ 97E2 7C               ld a,h
 170+ 97E3 D6 08            sub 8
 171+ 97E5 67               ld h,a
 172+ 97E6 18 00            jr 2F
 173+ 97E8 7C           2 ld a,h
 174+ 97E9 FE 58            cp $58
 175+ 97EB 28 02            jr z,3F
 176+ 97ED 10 E3            djnz 1B
 177+ 97EF ED 7B 16 89  3 ld sp,(Stack)
 178+ 97F3 C9           	ret
 179+ 97F4
 180+ 97F4              ; ---------------------------------------------------
 181+ 97F4
 182+ 97F4 ED 73 16 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97F8 FD F9        	ld sp,iy
 184+ 97FA 06 08            ld b,8
 185+ 97FC D1           1 pop de
 186+ 97FD 7A           	ld a,d
 187+ 97FE AE           	xor (hl)
 188+ 97FF 77           	ld (hl),a
 189+ 9800 23           	inc hl
 190+ 9801 D1           	pop de
 191+ 9802 7B           	ld a,e
 192+ 9803 AE           	xor (hl)
 193+ 9804 77           	ld (hl),a
 194+ 9805 2B           	dec hl
 195+ 9806 24            	inc h
 196+ 9807 7C               ld a,h
 197+ 9808 E6 07            and 7
 198+ 980A 20 0A            jr nz,2F
 199+ 980C 7D               ld a,l
 200+ 980D C6 20            add a,$20
 201+ 980F 6F               ld l,a
 202+ 9810 38 04            jr c,2F
 203+ 9812 7C               ld a,h
 204+ 9813 D6 08            sub 8
 205+ 9815 67               ld h,a
 206+ 9816 7C           2 ld a,h
 207+ 9817 FE 58            cp $58
 208+ 9819 28 20            jr z,4F
 209+ 981B D1               pop de
 210+ 981C 7B           	ld a,e
 211+ 981D AE           	xor (hl)
 212+ 981E 77           	ld (hl),a
 213+ 981F 23           	inc hl
 214+ 9820 7A           	ld a,d
 215+ 9821 AE           	xor (hl)
 216+ 9822 77           	ld (hl),a
 217+ 9823 2B           	dec hl
 218+ 9824 24           	inc h
 219+ 9825 7C               ld a,h
 220+ 9826 E6 07            and 7
 221+ 9828 20 0A            jr nz,3F
 222+ 982A 7D               ld a,l
 223+ 982B C6 20            add a,$20
 224+ 982D 6F               ld l,a
 225+ 982E 38 04            jr c,3F
 226+ 9830 7C               ld a,h
 227+ 9831 D6 08            sub 8
 228+ 9833 67               ld h,a
 229+ 9834 7C           3 ld a,h
 230+ 9835 FE 58            cp $58
 231+ 9837 28 02            jr z,4F
 232+ 9839 10 C1            djnz 1B
 233+ 983B ED 7B 16 89  4 ld sp,(Stack)
 234+ 983F C9           	ret
 235+ 9840
 236+ 9840 ED 73 16 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9844 FD F9        	ld sp,iy
 238+ 9846 06 08            ld b,8
 239+ 9848 D1           1 pop de
 240+ 9849 D1           	pop de
 241+ 984A 7B           	ld a,e
 242+ 984B AE           	xor (hl)
 243+ 984C 77           	ld (hl),a
 244+ 984D 24            	inc h
 245+ 984E 7C               ld a,h
 246+ 984F E6 07            and 7
 247+ 9851 20 0A            jr nz,2F
 248+ 9853 7D               ld a,l
 249+ 9854 C6 20            add a,$20
 250+ 9856 6F               ld l,a
 251+ 9857 38 04            jr c,2F
 252+ 9859 7C               ld a,h
 253+ 985A D6 08            sub 8
 254+ 985C 67               ld h,a
 255+ 985D 7C           2 ld a,h
 256+ 985E FE 58            cp $58
 257+ 9860 28 1B            jr z,4F
 258+ 9862 D1               pop de
 259+ 9863 7A           	ld a,d
 260+ 9864 AE           	xor (hl)
 261+ 9865 77           	ld (hl),a
 262+ 9866 24           	inc h
 263+ 9867 7C               ld a,h
 264+ 9868 E6 07            and 7
 265+ 986A 20 0A            jr nz,3F
 266+ 986C 7D               ld a,l
 267+ 986D C6 20            add a,$20
 268+ 986F 6F               ld l,a
 269+ 9870 38 04            jr c,3F
 270+ 9872 7C               ld a,h
 271+ 9873 D6 08            sub 8
 272+ 9875 67               ld h,a
 273+ 9876 7C           3 ld a,h
 274+ 9877 FE 58            cp $58
 275+ 9879 28 02            jr z,4F
 276+ 987B 10 CB            djnz 1B
 277+ 987D ED 7B 16 89  4 ld sp,(Stack)
 278+ 9881 C9           	ret
 279+ 9882
 280+ 9882 ED 73 16 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9886 FD F9        	ld sp,iy
 282+ 9888 06 08            ld b,8
 283+ 988A D1           1 pop de
 284+ 988B 7B           	ld a,e
 285+ 988C AE           	xor (hl)
 286+ 988D 77           	ld (hl),a
 287+ 988E 23           	inc hl
 288+ 988F 7A           	ld a,d
 289+ 9890 AE           	xor (hl)
 290+ 9891 77           	ld (hl),a
 291+ 9892 2B           	dec hl
 292+ 9893 24             	inc h
 293+ 9894 7C               ld a,h
 294+ 9895 E6 07            and 7
 295+ 9897 20 0A            jr nz,2F
 296+ 9899 7D               ld a,l
 297+ 989A C6 20            add a,$20
 298+ 989C 6F               ld l,a
 299+ 989D 38 04            jr c,2F
 300+ 989F 7C               ld a,h
 301+ 98A0 D6 08            sub 8
 302+ 98A2 67               ld h,a
 303+ 98A3 7C           2 ld a,h
 304+ 98A4 FE 58            cp $58
 305+ 98A6 28 21            jr z,4F
 306+ 98A8 D1               pop de
 307+ 98A9 7A           	ld a,d
 308+ 98AA AE           	xor (hl)
 309+ 98AB 77           	ld (hl),a
 310+ 98AC 23           	inc hl
 311+ 98AD D1               pop de
 312+ 98AE 7B           	ld a,e
 313+ 98AF AE           	xor (hl)
 314+ 98B0 77           	ld (hl),a
 315+ 98B1 2B           	dec hl
 316+ 98B2 24           	inc h
 317+ 98B3 7C               ld a,h
 318+ 98B4 E6 07            and 7
 319+ 98B6 20 0A            jr nz,3F
 320+ 98B8 7D               ld a,l
 321+ 98B9 C6 20            add a,$20
 322+ 98BB 6F               ld l,a
 323+ 98BC 38 04            jr c,3F
 324+ 98BE 7C               ld a,h
 325+ 98BF D6 08            sub 8
 326+ 98C1 67               ld h,a
 327+ 98C2 7C           3 ld a,h
 328+ 98C3 FE 58            cp $58
 329+ 98C5 28 02            jr z,4F
 330+ 98C7 10 C1            djnz 1B
 331+ 98C9 ED 7B 16 89  4 ld sp,(Stack)
 332+ 98CD C9           	ret
 333+ 98CE
 334+ 98CE ED 73 16 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98D2 FD F9        	ld sp,iy
 336+ 98D4 06 08            ld b,8
 337+ 98D6 D1           1 pop de
 338+ 98D7 7B           	ld a,e
 339+ 98D8 AE           	xor (hl)
 340+ 98D9 77           	ld (hl),a
 341+ 98DA 24            	inc h
 342+ 98DB 7C               ld a,h
 343+ 98DC E6 07            and 7
 344+ 98DE 20 0A            jr nz,2F
 345+ 98E0 7D               ld a,l
 346+ 98E1 C6 20            add a,$20
 347+ 98E3 6F               ld l,a
 348+ 98E4 38 04            jr c,2F
 349+ 98E6 7C               ld a,h
 350+ 98E7 D6 08            sub 8
 351+ 98E9 67               ld h,a
 352+ 98EA 7C           2 ld a,h
 353+ 98EB FE 58            cp $58
 354+ 98ED 28 1C            jr z,4F
 355+ 98EF D1               pop de
 356+ 98F0 7A           	ld a,d
 357+ 98F1 AE           	xor (hl)
 358+ 98F2 77           	ld (hl),a
 359+ 98F3 24           	inc h
 360+ 98F4 7C               ld a,h
 361+ 98F5 E6 07            and 7
 362+ 98F7 20 0A            jr nz,3F
 363+ 98F9 7D               ld a,l
 364+ 98FA C6 20            add a,$20
 365+ 98FC 6F               ld l,a
 366+ 98FD 38 04            jr c,3F
 367+ 98FF 7C               ld a,h
 368+ 9900 D6 08            sub 8
 369+ 9902 67               ld h,a
 370+ 9903 7C           3 ld a,h
 371+ 9904 FE 58            cp $58
 372+ 9906 28 03            jr z,4F
 373+ 9908 D1               pop de
 374+ 9909 10 CB            djnz 1B
 375+ 990B ED 7B 16 89  4 ld sp,(Stack)
 376+ 990F C9           	ret
 377+ 9910
 378+ 9910              ; ---------------------------------------------------
 379+ 9910              ;
 380+ 9910              ;   27/02/23
 381+ 9910              ;
 382+ 9910              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9910              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9910              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9910
 386+ 9910 ED 73 16 89  Pinta_Disparo ld (Stack),sp
 387+ 9914 FD F9            ld sp,iy
 388+ 9916 06 03            ld b,3
 389+ 9918 D1           1 pop de
 390+ 9919 7B               ld a,e
 391+ 991A AE               xor (hl)
 392+ 991B 77               ld (hl),a
 393+ 991C 23               inc hl
 394+ 991D 7A               ld a,d
 395+ 991E AE               xor (hl)
 396+ 991F 77               ld (hl),a
 397+ 9920 2B               dec hl
 398+ 9921
 399+ 9921 24               inc h
 400+ 9922 7C               ld a,h
 401+ 9923 E6 07            and 7
 402+ 9925 20 0A            jr nz,2F
 403+ 9927 7D               ld a,l
 404+ 9928 C6 20            add a,$20
 405+ 992A 6F               ld l,a
 406+ 992B 38 04            jr c,2F
 407+ 992D 7C               ld a,h
 408+ 992E D6 08            sub 8
 409+ 9930 67               ld h,a
 410+ 9931 7C           2 ld a,h
 411+ 9932 FE 58            cp $58
 412+ 9934 28 02            jr z,3F
 413+ 9936
 414+ 9936 10 E0            djnz 1B
 415+ 9938 ED 7B 16 89  3 ld sp,(Stack)
 416+ 993C C9               ret
 417+ 993D
# file closed: Rutinas_de_impresion_sprites.asm
1704  993D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 993D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 993D              ;
   3+ 993D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 993D              ;
   5+ 993D              ; *****************************************************************************************************************************************************************************************
   6+ 993D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 993D
   8+ 993D 7C           calcula_tercio ld a,h
   9+ 993E E6 18        	and $18
  10+ 9940 CB 2F        	sra a
  11+ 9942 CB 2F        	sra a
  12+ 9944 CB 2F        	sra a
  13+ 9946 C9           	ret
  14+ 9947
# file closed: calcula_tercio.asm
1705  9947              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9947              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9947              ;
   3+ 9947              ;
   4+ 9947              ;	CLS.
   5+ 9947              ;
   6+ 9947              ;	Limpia la pantalla y define sus atributos.
   7+ 9947              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9947              ;
   9+ 9947              ;	COLORES: 0 ..... NEGRO
  10+ 9947              ;    		 1 ..... AZUL
  11+ 9947              ; 			 2 ..... ROJO
  12+ 9947              ;			 3 ..... MAGENTA
  13+ 9947              ; 			 4 ..... VERDE
  14+ 9947              ; 			 5 ..... CIAN
  15+ 9947              ;			 6 ..... AMARILLO
  16+ 9947              ; 			 7 ..... BLANCO
  17+ 9947              ;
  18+ 9947              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9947              ;
  20+ 9947              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9947
  22+ 9947
  23+ 9947 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 994A 11 01 40     	LD DE,$4001
  25+ 994D 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9950 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9952 ED B0        	LDIR
  28+ 9954 01 FF 02     	LD BC,767
  29+ 9957 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9958 ED B0        	LDIR
  31+ 995A C9           	ret
  32+ 995B
# file closed: Cls.asm
1706  995B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 995B              ; ******************************************************************************************************************************************************************************************
   2+ 995B              ;
   3+ 995B              ;   20/05/23
   4+ 995B              ;
   5+ 995B              ;	Recompone_posicion_inicio
   6+ 995B              ;
   7+ 995B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 995B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 995B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 995B              ;	_ a una u otra rutina.
  11+ 995B
  12+ 995B              Recompone_posicion_inicio
  13+ 995B
  14+ 995B 2A D6 88     	ld hl,(Posicion_inicio)
  15+ 995E 7D           	ld a,l
  16+ 995F E6 1F        	and $1f
  17+ 9961 28 16        	jr z,1F
  18+ 9963
  19+ 9963 FE 1F        	cp $1f
  20+ 9965 28 0D        	jr z,3F
  21+ 9967
  22+ 9967 21 03 89     	ld hl,Ctrl_2
  23+ 996A CB C6        	set 0,(hl)
  24+ 996C 2A C8 88     	ld hl,(Puntero_objeto)
  25+ 996F 22 06 89     	ld (Repone_puntero_objeto),hl
  26+ 9972 18 08        	jr 2F
  27+ 9974
  28+ 9974 CD 2E 9B     3 call Mov_left
  29+ 9977 18 03        	jr 2F
  30+ 9979
  31+ 9979 CD 10 9A     1 call Mov_right
  32+ 997C 21 00 F0     2 ld hl,Sprite_vacio
  33+ 997F 22 C8 88     	ld (Puntero_objeto),hl
  34+ 9982 C9           	ret
  35+ 9983
  36+ 9983              ; ******************************************************************************************************************************************************************************************
  37+ 9983              ;
  38+ 9983              ;   27/05/23
  39+ 9983              ;
  40+ 9983              ;	Mov_down
  41+ 9983              ;
  42+ 9983              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9983              ;
  44+ 9983              ;
  45+ 9983              Mov_down
  46+ 9983
  47+ 9983 CD FE 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9986              ;																	; _ repone (Puntero_objeto).
  49+ 9986 21 F2 88     	ld hl,Ctrl_0
  50+ 9989 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 998B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 998B              ; 																	; _ en el caso de que no lo haya.
  53+ 998B 3A DC 88     	ld a,(Vel_down)
  54+ 998E 47           	ld b,a
  55+ 998F 2A C6 88         ld hl,(Posicion_actual)
  56+ 9992 CD 3D 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9995 E6 02        	and 2
  58+ 9997 28 28        	jr z,1F
  59+ 9999
  60+ 9999              ; Nos encontramos en el último tercio de pantalla.
  61+ 9999              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9999
  63+ 9999 7C           	ld a,h
  64+ 999A FE 57        	cp $57
  65+ 999C 20 23        	jr nz,1F
  66+ 999E
  67+ 999E 7D           	ld a,l
  68+ 999F C6 20        	add $20
  69+ 99A1 30 1E        	jr nc,1F
  70+ 99A3
  71+ 99A3              ; ------------------------------
  72+ 99A3              ;
  73+ 99A3              ;	17/12/15
  74+ 99A3
  75+ 99A3              ;	call Reaparece_arriba
  76+ 99A3 CD BB 9C     	call Reinicio
  77+ 99A6
  78+ 99A6              ;	Homos generado todos los movimientos posibles de esta entidad.
  79+ 99A6              ;	Si se trata de una Entidad_guía dejará de serlo.
  80+ 99A6
  81+ 99A6 3A 03 89     	ld a,(Ctrl_2)
  82+ 99A9 CB 6F        	bit 5,a
  83+ 99AB 28 1C        	jr z,3F
  84+ 99AD
  85+ 99AD CB AF        	res 5,a
  86+ 99AF 32 03 89     	ld (Ctrl_2),a
  87+ 99B2 21 24 89     	ld hl,Ctrl_3
  88+ 99B5 CB 8E        	res 1,(hl)
  89+ 99B7 CB D6        	set 2,(hl)												; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  90+ 99B9              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  91+ 99B9              ;															; _a la siguiente entidad como "Entidad_guía".
  92+ 99B9              ;	Reinicializa (Puntero_de_almacen_de_mov_masticados).
  93+ 99B9
  94+ 99B9 21 D0 5C     	ld hl,Almacen_de_movimientos_masticados
  95+ 99BC 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl 			; Reinicializa (Puntero_de_almacen_de_mov_masticados). Sitúa el puntero_
  96+ 99BF              ;															; _ al principio del almacén, (a partir de ahora ejecutaremos "movimientos masticados").
  97+ 99BF              ;															; Ya no somos "Entidad_guía".
  98+ 99BF              ; ------------------------------
  99+ 99BF
 100+ 99BF 18 08        	jr 3F
 101+ 99C1 CD 2A 96     1 call NextScan
 102+ 99C4 22 C6 88     	ld (Posicion_actual),hl
 103+ 99C7 10 C9            djnz 2B
 104+ 99C9 CD E1 9C     3 call Genera_coordenadas
 105+ 99CC C9           	ret
 106+ 99CD
 107+ 99CD              ; ******************************************************************************************************************************************************************************************
 108+ 99CD              ;
 109+ 99CD              ;   27/05/23
 110+ 99CD              ;
 111+ 99CD              ;	Mov_up
 112+ 99CD              ;
 113+ 99CD              ; 	Mueve el Sprite hacia arriba.
 114+ 99CD              ;
 115+ 99CD              ;
 116+ 99CD              Mov_up
 117+ 99CD
 118+ 99CD CD FE 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 119+ 99D0              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 120+ 99D0 21 F2 88     	ld hl,Ctrl_0
 121+ 99D3 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 122+ 99D5              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 123+ 99D5              ; 																		; _ en el caso de que no lo haya.
 124+ 99D5 3A DB 88     	ld a,(Vel_up)
 125+ 99D8 47           	ld b,a
 126+ 99D9 2A C6 88     	ld hl,(Posicion_actual)
 127+ 99DC CD 3D 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 128+ 99DF A7           	and a
 129+ 99E0 20 10        	jr nz,1F
 130+ 99E2
 131+ 99E2              ; Nos encontramos en el 1er tercio de pantalla.
 132+ 99E2              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 133+ 99E2
 134+ 99E2 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 135+ 99E3 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 136+ 99E5 20 0B            jr nz,1F
 137+ 99E7 7D               ld a,l
 138+ 99E8 D6 20            sub $20
 139+ 99EA 30 06            jr nc,1F
 140+ 99EC 25               dec h
 141+ 99ED
 142+ 99ED              ; -----------------------------
 143+ 99ED CD 9C 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 144+ 99F0              ;	call Reinicio
 145+ 99F0              ; -----------------------------
 146+ 99F0
 147+ 99F0 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 148+ 99F2 CD 39 96     1 call PreviousScan
 149+ 99F5 22 C6 88     	ld (Posicion_actual),hl
 150+ 99F8 10 E2            djnz 3B
 151+ 99FA CD E1 9C     2 call Genera_coordenadas
 152+ 99FD C9           	ret
 153+ 99FE
 154+ 99FE              ; -----------------------------
 155+ 99FE              ;
 156+ 99FE              ;	27/5/23
 157+ 99FE              ;
 158+ 99FE              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 159+ 99FE              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 160+ 99FE              ;
 161+ 99FE              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 162+ 99FE              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 163+ 99FE              ;
 164+ 99FE              ;	Modifica: A y (Puntero_objeto).
 165+ 99FE
 166+ 99FE 3A 03 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 167+ 9A01 CB 47        	bit 0,a
 168+ 9A03 C8           	ret z
 169+ 9A04 CB 87        	res 0,a
 170+ 9A06 32 03 89     	ld (Ctrl_2),a
 171+ 9A09 2A 06 89     	ld hl,(Repone_puntero_objeto)
 172+ 9A0C 22 C8 88     	ld (Puntero_objeto),hl
 173+ 9A0F C9           	ret
 174+ 9A10
 175+ 9A10              ; ******************************************************************************************************************************************************************************************
 176+ 9A10              ;
 177+ 9A10              ;	19/10/22
 178+ 9A10              ;
 179+ 9A10              ;	Mov_right.
 180+ 9A10              ;
 181+ 9A10              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 182+ 9A10              ;
 183+ 9A10
 184+ 9A10 21 F2 88     Mov_right ld hl,Ctrl_0
 185+ 9A13 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A15              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A15              ; 																	; _ en el caso de que no lo haya.
 188+ 9A15 3A F2 88     	ld a,(Ctrl_0)
 189+ 9A18 CB 77        	bit 6,a
 190+ 9A1A 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 191+ 9A1C
 192+ 9A1C CD 4A 9C     	call Stop_Amadeus_right
 193+ 9A1F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 194+ 9A20 18 4D        	jr 8F
 195+ 9A22
 196+ 9A22 3A CA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 197+ 9A25 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 198+ 9A27 20 46        	jr nz,8F
 199+ 9A29
 200+ 9A29 3A CC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 201+ 9A2C A7           	and a 															; _[3] para continuar con el DESPLZ.
 202+ 9A2D 28 40        	jr z,8F
 203+ 9A2F
 204+ 9A2F              ; ---------- ---------- ----------
 205+ 9A2F              ;
 206+ 9A2F              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 207+ 9A2F
 208+ 9A2F 3A DA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 209+ 9A32 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 210+ 9A34 28 11        	jr z,1F
 211+ 9A36 38 06        	jr c,6F
 212+ 9A38 FE 04        	cp 4
 213+ 9A3A 28 14        	jr z,7F
 214+ 9A3C 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 215+ 9A3E
 216+ 9A3E              ; ---------- ---------- ----------
 217+ 9A3E              ;
 218+ 9A3E              ; Perfiles de velocidad
 219+ 9A3E              ;
 220+ 9A3E
 221+ 9A3E 3A CC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 222+ 9A41 FE FE        	cp $fe
 223+ 9A43 20 2A        	jr nz,8F
 224+ 9A45 18 10        	jr 3F
 225+ 9A47 3A CC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 226+ 9A4A FE FD        	cp $fd
 227+ 9A4C 20 21        	jr nz,8F
 228+ 9A4E 18 07        	jr 3F
 229+ 9A50 3A CC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 230+ 9A53 FE FB        	cp $fb
 231+ 9A55 20 18        	jr nz,8F
 232+ 9A57
 233+ 9A57              ; ---------- ---------- ----------
 234+ 9A57
 235+ 9A57              3
 236+ 9A57 CD 8A 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 237+ 9A5A              ;	call Reinicio
 238+ 9A5A
 239+ 9A5A              ; ---------- ---------- ----------
 240+ 9A5A              ;
 241+ 9A5A              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 242+ 9A5A
 243+ 9A5A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 244+ 9A5C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 245+ 9A5D CD 76 9A     	call DESPLZ_DER
 246+ 9A60 C1           	pop bc
 247+ 9A61 10 F9        	djnz 5B
 248+ 9A63 2A C6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 249+ 9A66 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 250+ 9A67 22 C6 88     	ld (Posicion_actual),hl
 251+ 9A6A CD E1 9C     	call Genera_coordenadas
 252+ 9A6D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 253+ 9A6F
 254+ 9A6F              ; ---------- ---------- ----------
 255+ 9A6F
 256+ 9A6F 2A C6 88     8 ld hl,(Posicion_actual)
 257+ 9A72 CD 76 9A     	call DESPLZ_DER
 258+ 9A75 C9           2 ret
 259+ 9A76
 260+ 9A76              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 261+ 9A76              ;
 262+ 9A76              ;	22/9/22
 263+ 9A76              ;
 264+ 9A76
 265+ 9A76 CD 85 9A     DESPLZ_DER call Desplaza_derecha
 266+ 9A79 CD D1 9A         call modifica_parametros_1er_DESPLZ_2
 267+ 9A7C CD FA 9A         call Ciclo_completo
 268+ 9A7F 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 269+ 9A82 CB FE        	set 7,(hl)
 270+ 9A84 C9           	ret
 271+ 9A85
 272+ 9A85              ; ******************************************************************************************************************************************************************************************
 273+ 9A85              ;	15/02/23
 274+ 9A85              ;
 275+ 9A85
 276+ 9A85 3A DA 88     Desplaza_derecha ld a,(Vel_right)
 277+ 9A88 47           	ld b,a
 278+ 9A89 2A D2 88     	ld hl,(Puntero_DESPLZ_der)
 279+ 9A8C 23           1 inc hl
 280+ 9A8D 23           	inc hl
 281+ 9A8E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 282+ 9A90 22 D2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 283+ 9A93 CD A9 8C     	call Extrae_address
 284+ 9A96 22 C8 88     	ld (Puntero_objeto),hl
 285+ 9A99
 286+ 9A99              ; Modifica (Puntero_DESPLZ_izq).
 287+ 9A99
 288+ 9A99              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 289+ 9A99              ; Cuántos movimientos hemos hecho ??
 290+ 9A99              ; DE contiene (Puntero_DESPLZ_der).
 291+ 9A99
 292+ 9A99 2A CE 88     7 ld hl,(Indice_Sprite_der)
 293+ 9A9C EB           	ex de,hl
 294+ 9A9D A7           	and a
 295+ 9A9E ED 52        	sbc hl,de
 296+ 9AA0 CB 3D        	srl l
 297+ 9AA2 3E 08        6 ld a,8
 298+ 9AA4 95           	sub l
 299+ 9AA5 30 1E        	jr nc,3F
 300+ 9AA7
 301+ 9AA7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 302+ 9AA7              ; B="0".
 303+ 9AA7
 304+ 9AA7 04           4 inc b
 305+ 9AA8 3C           	inc a
 306+ 9AA9 20 FC        	jr nz,4B
 307+ 9AAB 78           	ld a,b
 308+ 9AAC 08           	ex af,af
 309+ 9AAD 2A CE 88     	ld hl,(Indice_Sprite_der)
 310+ 9AB0 23           5 inc hl
 311+ 9AB1 23           	inc hl
 312+ 9AB2 10 FC        	djnz 5B
 313+ 9AB4 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 314+ 9AB7 CD A9 8C     	call Extrae_address
 315+ 9ABA 22 C8 88     	ld (Puntero_objeto),hl
 316+ 9ABD
 317+ 9ABD              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 318+ 9ABD              ; _(Posicion_actual).
 319+ 9ABD
 320+ 9ABD 21 C6 88     	ld hl,Posicion_actual
 321+ 9AC0 34           	inc (hl)
 322+ 9AC1 08               ex af,af
 323+ 9AC2 6F           	ld l,a
 324+ 9AC3 18 DD        	jr 6B
 325+ 9AC5
 326+ 9AC5              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 327+ 9AC5
 328+ 9AC5 47           3 ld b,a
 329+ 9AC6 2A D0 88     	ld hl,(Indice_Sprite_izq)
 330+ 9AC9 23           2 inc hl
 331+ 9ACA 23           	inc hl
 332+ 9ACB 10 FC        	djnz 2B
 333+ 9ACD 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 334+ 9AD0 C9           8 ret
 335+ 9AD1
 336+ 9AD1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 337+ 9AD1              ;
 338+ 9AD1              ;	24/7/22
 339+ 9AD1              ;
 340+ 9AD1              ;	modifica_parametros_1er_DESPLZ_2
 341+ 9AD1              ;
 342+ 9AD1              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 343+ 9AD1              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 344+ 9AD1              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 345+ 9AD1
 346+ 9AD1 3A CC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 347+ 9AD4 A7           	and a
 348+ 9AD5 20 1F        	jr nz,1F
 349+ 9AD7 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 350+ 9AD9 32 CC 88         ld (CTRL_DESPLZ),a
 351+ 9ADC
 352+ 9ADC 21 C5 88     	ld hl,Columns
 353+ 9ADF 34           	inc (hl)
 354+ 9AE0 3A D8 88     	ld a,(Cuad_objeto)
 355+ 9AE3 E6 01        	and 1
 356+ 9AE5 28 0F        	jr z,1F
 357+ 9AE7 2A C6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 358+ 9AEA 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 359+ 9AEB 22 C6 88     	ld (Posicion_actual),hl
 360+ 9AEE CD E1 9C     	call Genera_coordenadas
 361+ 9AF1 CD 56 9C     	call Inc_CTRL_DESPLZ
 362+ 9AF4 18 03        	jr 2F
 363+ 9AF6 CD 56 9C     1 call Inc_CTRL_DESPLZ
 364+ 9AF9 C9           2 ret
 365+ 9AFA
 366+ 9AFA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 367+ 9AFA              ;
 368+ 9AFA              ;	24/7/22
 369+ 9AFA              ;
 370+ 9AFA              ;	Ciclo_completo.
 371+ 9AFA              ;
 372+ 9AFA              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 373+ 9AFA              ;
 374+ 9AFA              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 375+ 9AFA              ; 	Decrementamos (Columns).
 376+ 9AFA              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 377+ 9AFA              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 378+ 9AFA
 379+ 9AFA
 380+ 9AFA 3A CC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 381+ 9AFD FE FF        	cp $ff
 382+ 9AFF 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 383+ 9B01 E6 F0        	and $f0
 384+ 9B03 20 28        	jr nz,3F
 385+ 9B05
 386+ 9B05              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 387+ 9B05
 388+ 9B05 3A CC 88     	ld a,(CTRL_DESPLZ)
 389+ 9B08 47           	ld b,a
 390+ 9B09 3E F8        	ld a,$f8
 391+ 9B0B 80           	add b
 392+ 9B0C 32 CC 88     	ld (CTRL_DESPLZ),a
 393+ 9B0F 18 1C        	jr 3F
 394+ 9B11 21 C5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 395+ 9B14 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 396+ 9B15 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 397+ 9B16 32 CC 88     	ld (CTRL_DESPLZ),a
 398+ 9B19 3A D8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 399+ 9B1C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 400+ 9B1E 20 0A        	jr nz,2F
 401+ 9B20 2A C6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 402+ 9B23 23           	inc hl
 403+ 9B24 22 C6 88     	ld (Posicion_actual),hl
 404+ 9B27 CD E1 9C     	call Genera_coordenadas
 405+ 9B2A
 406+ 9B2A              ; Inicia el puntero de Sprite.
 407+ 9B2A
 408+ 9B2A CD C0 8C     2 call Inicia_puntero_objeto_der
 409+ 9B2D C9           3 ret
 410+ 9B2E
 411+ 9B2E              ; ******************************************************************************************************************************************************************************************
 412+ 9B2E              ;
 413+ 9B2E              ;	15/02/23
 414+ 9B2E              ;
 415+ 9B2E              ;	Mov_left.
 416+ 9B2E              ;
 417+ 9B2E              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 418+ 9B2E              ;
 419+ 9B2E              Mov_left
 420+ 9B2E
 421+ 9B2E 21 F2 88     	ld hl,Ctrl_0
 422+ 9B31 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 423+ 9B33              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 424+ 9B33              ; 																	; _ en el caso de que no lo haya.
 425+ 9B33 3A F2 88     	ld a,(Ctrl_0)
 426+ 9B36 CB 77        	bit 6,a
 427+ 9B38 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 428+ 9B3A
 429+ 9B3A CD 50 9C     	call Stop_Amadeus_left
 430+ 9B3D C8           	ret z
 431+ 9B3E 20 4A        	jr nz,8F
 432+ 9B40
 433+ 9B40 3A CA 88     11 ld a,(Coordenada_X)
 434+ 9B43 A7           	and a
 435+ 9B44 20 44        	jr nz,8F
 436+ 9B46
 437+ 9B46 3A CC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 438+ 9B49 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 439+ 9B4A 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 440+ 9B4C
 441+ 9B4C              ; ---------- ---------- ----------
 442+ 9B4C
 443+ 9B4C 3A D9 88     	ld a,(Vel_left)
 444+ 9B4F FE 02        	cp 2
 445+ 9B51 28 0F        	jr z,1F
 446+ 9B53 38 04        	jr c,6F
 447+ 9B55 FE 04        	cp 4
 448+ 9B57 28 12        	jr z,7F
 449+ 9B59
 450+ 9B59              ; ---------- ---------- ----------
 451+ 9B59
 452+ 9B59 3A CC 88     6 ld a,(CTRL_DESPLZ)
 453+ 9B5C FE F8        	cp $f8
 454+ 9B5E 20 2A        	jr nz,8F
 455+ 9B60 18 10        	jr 4F
 456+ 9B62 3A CC 88     1 ld a,(CTRL_DESPLZ)
 457+ 9B65 FE F9        	cp $f9
 458+ 9B67 20 21        	jr nz,8F
 459+ 9B69 18 07        	jr 4F
 460+ 9B6B 3A CC 88     7 ld a,(CTRL_DESPLZ)
 461+ 9B6E FE FB        	cp $fb
 462+ 9B70 20 18        	jr nz,8F
 463+ 9B72
 464+ 9B72              ; ---------- ---------- ----------
 465+ 9B72
 466+ 9B72              4
 467+ 9B72 CD 78 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 468+ 9B75              ;	call Reinicio
 469+ 9B75
 470+ 9B75              ; ---------- ---------- ----------
 471+ 9B75
 472+ 9B75 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 473+ 9B77 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 474+ 9B78
 475+ 9B78              ;	ld hl,(Indice_Sprite_izq)
 476+ 9B78              ;	ld (Puntero_DESPLZ_izq),hl
 477+ 9B78
 478+ 9B78 CD 91 9B     	call DESPLZ_IZQ
 479+ 9B7B C1           	pop bc
 480+ 9B7C 10 F9        	djnz 5B
 481+ 9B7E 2A C6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 482+ 9B81 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 483+ 9B82 22 C6 88     	ld (Posicion_actual),hl
 484+ 9B85 CD E1 9C     	call Genera_coordenadas
 485+ 9B88 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 486+ 9B8A
 487+ 9B8A              ; ---------- ---------- ----------
 488+ 9B8A
 489+ 9B8A              ; Movemos, no hay recolocación.
 490+ 9B8A
 491+ 9B8A 2A C6 88     8 ld hl,(Posicion_actual)
 492+ 9B8D CD 91 9B     	call DESPLZ_IZQ
 493+ 9B90 C9           2 ret
 494+ 9B91
 495+ 9B91              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 496+ 9B91              ;
 497+ 9B91              ;	22/9/22
 498+ 9B91
 499+ 9B91              DESPLZ_IZQ
 500+ 9B91
 501+ 9B91 CD A0 9B     	call Desplaza_izquierda
 502+ 9B94 CD EC 9B         call modifica_parametros_1er_DESPLZ
 503+ 9B97 CD 14 9C     	call Ciclo_completo_2
 504+ 9B9A 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 505+ 9B9D CB BE        	res 7,(hl)
 506+ 9B9F C9           	ret
 507+ 9BA0
 508+ 9BA0              Desplaza_izquierda
 509+ 9BA0
 510+ 9BA0 3A D9 88     	ld a,(Vel_left)
 511+ 9BA3 47           	ld b,a
 512+ 9BA4 2A D4 88     	ld hl,(Puntero_DESPLZ_izq)
 513+ 9BA7 23           1 inc hl
 514+ 9BA8 23           	inc hl
 515+ 9BA9 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 516+ 9BAB 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 517+ 9BAE CD A9 8C     	call Extrae_address
 518+ 9BB1 22 C8 88     	ld (Puntero_objeto),hl
 519+ 9BB4
 520+ 9BB4              ; Modifica (Puntero_DESPLZ_der).
 521+ 9BB4
 522+ 9BB4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 523+ 9BB4              ; Cuántos movimientos hemos hecho ??
 524+ 9BB4              ; DE contiene (Puntero_DESPLZ_izq).
 525+ 9BB4
 526+ 9BB4 2A D0 88     7 ld hl,(Indice_Sprite_izq)
 527+ 9BB7 EB           	ex de,hl
 528+ 9BB8 A7           	and a
 529+ 9BB9 ED 52        	sbc hl,de
 530+ 9BBB CB 3D        	srl l
 531+ 9BBD 3E 08        6 ld a,8
 532+ 9BBF 95           	sub l
 533+ 9BC0 30 1E        	jr nc,3F
 534+ 9BC2
 535+ 9BC2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 536+ 9BC2              ; B="0".
 537+ 9BC2
 538+ 9BC2 04           4 inc b
 539+ 9BC3 3C           	inc a
 540+ 9BC4 20 FC        	jr nz,4B
 541+ 9BC6 78           	ld a,b
 542+ 9BC7 08           	ex af,af
 543+ 9BC8 2A D0 88     	ld hl,(Indice_Sprite_izq)
 544+ 9BCB 23           5 inc hl
 545+ 9BCC 23           	inc hl
 546+ 9BCD 10 FC        	djnz 5B
 547+ 9BCF 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 548+ 9BD2 CD A9 8C     	call Extrae_address
 549+ 9BD5 22 C8 88     	ld (Puntero_objeto),hl
 550+ 9BD8
 551+ 9BD8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 552+ 9BD8              ; _(Posicion_actual).
 553+ 9BD8
 554+ 9BD8 21 C6 88     	ld hl,Posicion_actual
 555+ 9BDB 35           	dec (hl)
 556+ 9BDC 08           	ex af,af
 557+ 9BDD 6F           	ld l,a
 558+ 9BDE 18 DD        	jr 6B
 559+ 9BE0
 560+ 9BE0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 561+ 9BE0
 562+ 9BE0 47           3 ld b,a
 563+ 9BE1 2A CE 88     	ld hl,(Indice_Sprite_der)
 564+ 9BE4 23           2 inc hl
 565+ 9BE5 23           	inc hl
 566+ 9BE6 10 FC        	djnz 2B
 567+ 9BE8 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 568+ 9BEB C9           8 ret
 569+ 9BEC
 570+ 9BEC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9BEC              ;
 572+ 9BEC              ;	modifica_parametros_1er_DESPLZ
 573+ 9BEC              ;
 574+ 9BEC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 575+ 9BEC              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 576+ 9BEC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 577+ 9BEC
 578+ 9BEC 3A CC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 579+ 9BEF A7           	and a
 580+ 9BF0 20 1E        	jr nz,1F
 581+ 9BF2 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 582+ 9BF3 32 CC 88         ld (CTRL_DESPLZ),a
 583+ 9BF6 21 C5 88     	ld hl,Columns
 584+ 9BF9 34           	inc (hl)
 585+ 9BFA 3A D8 88     	ld a,(Cuad_objeto)
 586+ 9BFD E6 01        	and 1
 587+ 9BFF 20 0F        	jr nz,1F
 588+ 9C01 2A C6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 589+ 9C04 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 590+ 9C05 22 C6 88     	ld (Posicion_actual),hl
 591+ 9C08 CD E1 9C     	call Genera_coordenadas
 592+ 9C0B CD 67 9C     	call Dec_CTRL_DESPLZ
 593+ 9C0E 18 03        	jr 2F
 594+ 9C10 CD 67 9C     1 call Dec_CTRL_DESPLZ
 595+ 9C13 C9           2 ret
 596+ 9C14
 597+ 9C14              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 598+ 9C14
 599+ 9C14 3A CC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 600+ 9C17 FE F7        	cp $f7
 601+ 9C19 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 602+ 9C1B 30 2C        	jr nc,3F
 603+ 9C1D
 604+ 9C1D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 605+ 9C1D
 606+ 9C1D 06 00        	ld b,0
 607+ 9C1F 04           4 inc b
 608+ 9C20 3C           	inc a
 609+ 9C21 FE F7        	cp $f7
 610+ 9C23 20 FA        	jr nz,4B
 611+ 9C25 3E FF        	ld a,$ff
 612+ 9C27 90           	sub b
 613+ 9C28 32 CC 88     	ld (CTRL_DESPLZ),a
 614+ 9C2B 18 1C        	jr 3F
 615+ 9C2D
 616+ 9C2D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 617+ 9C2D
 618+ 9C2D 21 C5 88     1 ld hl,Columns
 619+ 9C30 35           	dec (hl)
 620+ 9C31 AF           	xor a
 621+ 9C32 32 CC 88     	ld (CTRL_DESPLZ),a
 622+ 9C35 3A D8 88     	ld a,(Cuad_objeto)
 623+ 9C38 E6 01        	and 1
 624+ 9C3A 28 0A        	jr z,2F
 625+ 9C3C 2A C6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 626+ 9C3F 2B           	dec hl
 627+ 9C40 22 C6 88     	ld (Posicion_actual),hl
 628+ 9C43 CD E1 9C     	call Genera_coordenadas
 629+ 9C46
 630+ 9C46              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 631+ 9C46
 632+ 9C46 CD D3 8C     2 call Inicia_puntero_objeto_izq
 633+ 9C49 C9           3 ret
 634+ 9C4A
 635+ 9C4A              ; ---------- ---------- ---------- ---------- ---------- ----------
 636+ 9C4A              ;
 637+ 9C4A              ;	19/10/22
 638+ 9C4A              ;
 639+ 9C4A              ;	(cp 29) para un Amadeus de 3 Columns.
 640+ 9C4A              ;	(cp 30)   ""  ""    ""     2 Columns.
 641+ 9C4A
 642+ 9C4A 3A CA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 643+ 9C4D FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 644+ 9C4F C9           	ret
 645+ 9C50
 646+ 9C50              ; ---------- ---------- ---------- ---------- ---------- ----------
 647+ 9C50              ;
 648+ 9C50              ;	19/10/22
 649+ 9C50              ;
 650+ 9C50              ;	(cp 2) para un Amadeus de 3 Columns.
 651+ 9C50              ;	(cp 1)   ""  ""    ""     2 Columns.
 652+ 9C50
 653+ 9C50 3A CA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 654+ 9C53 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 655+ 9C55 C9           	ret
 656+ 9C56
 657+ 9C56              ; ---------- ---------- ---------- ---------- ---------- ----------
 658+ 9C56              ;
 659+ 9C56              ;	24/7/22
 660+ 9C56              ;
 661+ 9C56              ;	Inc_CTRL_DESPLZ
 662+ 9C56              ;
 663+ 9C56              ;
 664+ 9C56              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 665+ 9C56
 666+ 9C56 21 CC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 667+ 9C59 3A DA 88     	ld a,(Vel_right)
 668+ 9C5C A7           	and a
 669+ 9C5D 28 06        	jr z,1F
 670+ 9C5F 47           	ld b,a
 671+ 9C60 34           3 inc (hl)
 672+ 9C61 10 FD        	djnz 3B
 673+ 9C63 18 01        	jr 2F
 674+ 9C65 34           1 inc (hl)
 675+ 9C66 C9           2 ret
 676+ 9C67
 677+ 9C67              ; ---------- ---------- ---------- ---------- ---------- ----------
 678+ 9C67              ;
 679+ 9C67              ;	5/2/23
 680+ 9C67              ;
 681+ 9C67              ;	Dec_CTRL_DESPLZ
 682+ 9C67              ;
 683+ 9C67              ;
 684+ 9C67              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 685+ 9C67
 686+ 9C67 21 CC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 687+ 9C6A 3A D9 88     	ld a,(Vel_left)
 688+ 9C6D A7           	and a
 689+ 9C6E 28 06        	jr z,1F
 690+ 9C70 47           	ld b,a
 691+ 9C71 35           3 dec (hl)
 692+ 9C72 10 FD        	djnz 3B
 693+ 9C74 18 01        	jr 2F
 694+ 9C76 35           1 dec (hl)
 695+ 9C77 C9           2 ret
 696+ 9C78
 697+ 9C78              ; ---------- ---------- ---------- ---------- ---------- ----------
 698+ 9C78
 699+ 9C78 2A C6 88     Reaparece_derecha ld hl,(Posicion_actual)
 700+ 9C7B 01 1F 00     	ld bc,31
 701+ 9C7E A7           	and a
 702+ 9C7F ED 4A        	adc hl,bc
 703+ 9C81 22 C6 88     	ld (Posicion_actual),hl
 704+ 9C84 21 F2 88     	ld hl,Ctrl_0														; $xxx1
 705+ 9C87 CB C6        	set 0,(hl)
 706+ 9C89 C9           	ret
 707+ 9C8A
 708+ 9C8A              ; ---------- ---------- ---------- ---------- ---------- ----------
 709+ 9C8A
 710+ 9C8A 2A C6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 711+ 9C8D 01 1F 00     	ld bc,31
 712+ 9C90 A7           	and a
 713+ 9C91 ED 42        	sbc hl,bc
 714+ 9C93 22 C6 88     	ld (Posicion_actual),hl 											; $xx1x
 715+ 9C96 21 F2 88     	ld hl,Ctrl_0
 716+ 9C99 CB CE        	set 1,(hl)
 717+ 9C9B C9           	ret
 718+ 9C9C
 719+ 9C9C              ; ---------- ---------- ---------- ---------- ---------- ----------
 720+ 9C9C
 721+ 9C9C 24           Reaparece_abajo inc h
 722+ 9C9D 01 E0 17     	ld bc,$17e0
 723+ 9CA0 A7           	and a
 724+ 9CA1 ED 4A        	adc hl,bc
 725+ 9CA3 22 C6 88     	ld (Posicion_actual),hl
 726+ 9CA6 21 F2 88     	ld hl,Ctrl_0
 727+ 9CA9 CB D6        	set 2,(hl)
 728+ 9CAB C9           	ret
 729+ 9CAC
 730+ 9CAC              ; ---------- ---------- ---------- ---------- ---------- ----------
 731+ 9CAC
 732+ 9CAC 01 E0 17     Reaparece_arriba ld bc,$17e0
 733+ 9CAF A7           	and a
 734+ 9CB0 ED 42        	sbc hl,bc
 735+ 9CB2 22 C6 88     	ld (Posicion_actual),hl
 736+ 9CB5 21 F2 88     	ld hl,Ctrl_0
 737+ 9CB8 CB DE        	set 3,(hl)
 738+ 9CBA C9           	ret
 739+ 9CBB
 740+ 9CBB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 741+ 9CBB              ;
 742+ 9CBB              ;	15/07/23
 743+ 9CBB
 744+ 9CBB              Reinicio
 745+ 9CBB
 746+ 9CBB              ; Vamos a reiniciar los punteros y variables de movimiento.
 747+ 9CBB
 748+ 9CBB AF           	xor a
 749+ 9CBC 21 F7 88     	ld hl,Puntero_indice_mov_bucle
 750+ 9CBF CD DD 9C     	call Limpia_contenido_hl
 751+ 9CC2
 752+ 9CC2 21 C6 88     	ld hl,Posicion_actual
 753+ 9CC5 CD DD 9C     	call Limpia_contenido_hl
 754+ 9CC8
 755+ 9CC8 CD 0D A0     	call Inicializa_Puntero_indice_mov
 756+ 9CCB CD 97 9F     	call Inicia_Puntero_mov
 757+ 9CCE
 758+ 9CCE 21 F9 88     	ld hl,Incrementa_puntero
 759+ 9CD1 06 05        	ld b,5
 760+ 9CD3 77           1 ld (hl),a
 761+ 9CD4 23           	inc hl
 762+ 9CD5 10 FC        	djnz 1B
 763+ 9CD7
 764+ 9CD7 21 03 89     	ld hl,Ctrl_2
 765+ 9CDA CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 766+ 9CDC
 767+ 9CDC C9           	ret
 768+ 9CDD
 769+ 9CDD 77           Limpia_contenido_hl	ld (hl),a
 770+ 9CDE 23           	inc hl
 771+ 9CDF 77           	ld (hl),a
 772+ 9CE0 C9           	ret
 773+ 9CE1
 774+ 9CE1
# file closed: Direcciones.asm
1707  9CE1              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CE1              ; ------------------------------------------------------------------------
   2+ 9CE1              ;
   3+ 9CE1              ;	02/04/23
   4+ 9CE1              ;
   5+ 9CE1              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CE1              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CE1              ;
   8+ 9CE1              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CE1              ;
  10+ 9CE1              ;	Modifica: A,BC y DE.
  11+ 9CE1
  12+ 9CE1 C5           Genera_coordenadas push bc
  13+ 9CE2 E5           	push hl
  14+ 9CE3 D5           	push de
  15+ 9CE4
  16+ 9CE4 2A C6 88     	ld hl,(Posicion_actual)
  17+ 9CE7
  18+ 9CE7 7D           	ld a,l
  19+ 9CE8 E6 1F        	and $1f
  20+ 9CEA 32 CA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CED
  22+ 9CED CD 3D 99     	call calcula_tercio
  23+ 9CF0 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CF1
  25+ 9CF1 1E 00        	ld e,0
  26+ 9CF3 7D           	ld a,l
  27+ 9CF4 E6 E0        	and $e0
  28+ 9CF6 28 01        	jr z,1F
  29+ 9CF8 04           	inc b
  30+ 9CF9
  31+ 9CF9 04           1 inc b
  32+ 9CFA 05           	dec b
  33+ 9CFB 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CFD              ;														; _ , salimos.
  35+ 9CFD 1C           3 inc e
  36+ 9CFE D6 20        	sub 32
  37+ 9D00 20 FB        	jr nz,3B
  38+ 9D02 10 F5        	djnz 1B
  39+ 9D04
  40+ 9D04 7B           2 ld a,e
  41+ 9D05 32 CB 88     	ld (Coordenada_y),a
  42+ 9D08
  43+ 9D08 D1           	pop de
  44+ 9D09 E1           	pop hl
  45+ 9D0A C1           	pop bc
  46+ 9D0B
  47+ 9D0B C9           	ret
  48+ 9D0C
  49+ 9D0C              ; ------------------------------------------------------------------------
  50+ 9D0C              ;	28/05/23
  51+ 9D0C              ;
  52+ 9D0C              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D0C              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D0C              ;
  55+ 9D0C              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D0C              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D0C              ;
  58+ 9D0C              ;		DE="$120d"
  59+ 9D0C              ;
  60+ 9D0C              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D0C              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D0C              ;
  63+ 9D0C              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D0C
  65+ 9D0C              ;	Modifica: A,BC y DE.
  66+ 9D0C
  67+ 9D0C
  68+ 9D0C              Genera_coordenadas_disparo
  69+ 9D0C
  70+ 9D0C              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D0C
  72+ 9D0C 7D           	ld a,l
  73+ 9D0D E6 1F        	and $1f
  74+ 9D0F 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D10 CD 3D 99     	call calcula_tercio
  76+ 9D13 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D14 1E 00        	ld e,0
  78+ 9D16 7D           	ld a,l
  79+ 9D17 E6 E0        	and $e0
  80+ 9D19 28 01        	jr z,1F
  81+ 9D1B 04           	inc b
  82+ 9D1C 1C           1 inc e
  83+ 9D1D D6 20        	sub 32
  84+ 9D1F 20 FB        	jr nz,1B
  85+ 9D21 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D23 C9           	ret
  87+ 9D24
# file closed: Genera_coordenadas.asm
1708  9D24              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D24              ; Relojes y temporizaciones.
   2+ 9D24
   3+ 9D24              ; ------------------------------------------------------
   4+ 9D24              ;
   5+ 9D24              ;	16/7/23
   6+ 9D24              ;
   7+ 9D24              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D24              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D24              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D24              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D24              ;
  12+ 9D24              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D24              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D24
  15+ 9D24              ; Disparo_entidad db 1
  16+ 9D24              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D24              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D24
  19+ 9D24              Habilita_disparos
  20+ 9D24
  21+ 9D24 7E           	ld a,(hl)
  22+ 9D25 A7           	and a
  23+ 9D26 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D27
  25+ 9D27 EB           	ex de,hl
  26+ 9D28
  27+ 9D28 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D29 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D2A
  30+ 9D2A              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D2A
  32+ 9D2A 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D2B 7E           	ld a,(hl)
  34+ 9D2C 23           	inc hl
  35+ 9D2D 77           	ld (hl),a
  36+ 9D2E
  37+ 9D2E EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D2F 3E 01        	ld a,1
  39+ 9D31 77           	ld (hl),a
  40+ 9D32 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1709  9D33              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D33
   2+ 9D33
   3+ 9D33              ;   07/07/23
   4+ 9D33              ;
   5+ 9D33              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D33              ;
   7+ 9D33              ;   Codificación:
   8+ 9D33              ;
   9+ 9D33              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D33              ;
  11+ 9D33              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D33              ;
  13+ 9D33              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D33              ;
  15+ 9D33              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D33              ;
  17+ 9D33              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D33              ;                               ..... %01000010 Vel_up 4
  19+ 9D33              ;                                               Vel_down 2
  20+ 9D33              ;                               ..... $42
  21+ 9D33              ;
  22+ 9D33              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D33              ;
  24+ 9D33              ;                               ..... %01000010 Vel_left 4
  25+ 9D33              ;                                               Vel_right 2
  26+ 9D33              ;                               ..... $42
  27+ 9D33              ;
  28+ 9D33              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D33              ;
  30+ 9D33              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D33              ;
  32+ 9D33              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D33              ;
  34+ 9D33              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D33              ;                                     $53
  36+ 9D33              ;
  37+ 9D33              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D33              ;
  39+ 9D33              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D33              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D33              ;
  42+ 9D33              ;                       Arriba ..... $81
  43+ 9D33              ;                       Arriba - izquierda ..... $a1
  44+ 9D33              ;                       Arriba - derecha ..... $91
  45+ 9D33              ;
  46+ 9D33              ;                       Abajo ..... $41
  47+ 9D33              ;                       Abajo - izquierda ..... $61
  48+ 9D33              ;                       Abajo - derecha ..... $51
  49+ 9D33              ;
  50+ 9D33              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D33              ;
  52+ 9D33              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D33              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D33              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D33              ;
  56+ 9D33              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D33              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D33              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D33              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D33              ;
  61+ 9D33              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D33              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D33              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D33              ;
  65+ 9D33              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D33              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D33              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D33              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D33
  70+ 9D33              ; ----- ----- ----- ----- -----
  71+ 9D33
  72+ 9D33 5F 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D35 67 9D            defw F_1
  74+ 9D37 71 9D            defw F_2
  75+ 9D39 7B 9D            defw Codo_abajo_derecha
  76+ 9D3B AF 9D            defw Derecha_y_subiendo
  77+ 9D3D B9 9D            defw Derecha_y_subiendo_1
  78+ 9D3F C3 9D            defw F_3
  79+ 9D41 CD 9D            defw F_4
  80+ 9D43 D7 9D            defw Derecha_y_bajando
  81+ 9D45 E1 9D            defw Derecha_y_bajando_1
  82+ 9D47 EB 9D            defw Derecha_y_bajando_2
  83+ 9D49 F5 9D            defw Codo_derecha_abajo
  84+ 9D4B 25 9E            defw Codo_abajo_izq.
  85+ 9D4D 59 9E            defw Izquierda_y_subiendo
  86+ 9D4F 63 9E            defw Izquierda_y_subiendo_1
  87+ 9D51 6D 9E            defw F_5
  88+ 9D53 77 9E            defw F_6
  89+ 9D55 81 9E            defw Izquierda_y_bajando
  90+ 9D57 8B 9E            defw Izquierda_y_bajando_1
  91+ 9D59 95 9E            defw Izquierda_y_bajando_2
  92+ 9D5B 9F 9E            defw Codo_izquierda_abajo
  93+ 9D5D 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D5F
  95+ 9D5F 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D63 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D67
  98+ 9D67 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D6B 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D6F 08 00
 100+ 9D71 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D75 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D79 0F FE
 102+ 9D7B
 103+ 9D7B 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D7F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D83 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D87 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D8B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D8F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D93 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D97 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D9B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D9F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DA3 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DA7 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DAB 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DAF
 117+ 9DAF 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DB3 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DB7 06 00
 119+ 9DB9
 120+ 9DB9 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DBD 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DC1 02 00
 122+ 9DC3
 123+ 9DC3 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DC7 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DCB 04 00
 125+ 9DCD 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DD1 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DD5 08 00
 127+ 9DD7
 128+ 9DD7 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DDB 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DDF 02 00
 130+ 9DE1
 131+ 9DE1 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DE5 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DE9 06 00
 133+ 9DEB
 134+ 9DEB 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DEF 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DF3 06 00
 136+ 9DF5
 137+ 9DF5              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DF5
 139+ 9DF5 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DF9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DFD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E01 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E05 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E09 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E0D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E11 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E15 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E19 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E1D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E21 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E25
 152+ 9E25 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E29 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E2D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E31 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E35 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E39 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E3D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E41 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E45 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E49 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E4D 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E51 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E55 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E59
 166+ 9E59 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E5D 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E61 06 00
 168+ 9E63
 169+ 9E63 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E67 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E6B 02 00
 171+ 9E6D
 172+ 9E6D 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E71 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E75 04 00
 174+ 9E77 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E7B 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E7F 08 00
 176+ 9E81
 177+ 9E81 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E85 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E89 02 00
 179+ 9E8B
 180+ 9E8B 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E8F 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E93 06 00
 182+ 9E95
 183+ 9E95 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E99 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E9D 06 00
 185+ 9E9F
 186+ 9E9F 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EA3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EA7 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EAB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EAF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EB3 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EB7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EBB 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EBF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EC3 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EC7 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9ECB 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9ECF
 199+ 9ECF              ; ----- ----- ----- ----- -----
 200+ 9ECF              ;
 201+ 9ECF              ;   27/06/23
 202+ 9ECF
 203+ 9ECF              Movimiento
 204+ 9ECF
 205+ 9ECF              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9ECF
 207+ 9ECF              ;    ld hl,(Posicion_actual)
 208+ 9ECF
 209+ 9ECF 3A 03 89         ld a,(Ctrl_2)
 210+ 9ED2 CB 57            bit 2,a
 211+ 9ED4 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9ED6
 213+ 9ED6 2A F5 88         ld hl,(Puntero_mov)
 214+ 9ED9 7E               ld a,(hl)
 215+ 9EDA
 216+ 9EDA              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EDA
 218+ 9EDA              Inicia_desplazamiento.
 219+ 9EDA
 220+ 9EDA              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EDA
 222+ 9EDA CD CE 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EDD
 224+ 9EDD              ; Iniciamos (Repetimos_mov).
 225+ 9EDD
 226+ 9EDD 7E               ld a,(hl)
 227+ 9EDE E6 0F            and $0f
 228+ 9EE0 32 FB 88         ld (Repetimos_desplazamiento),a
 229+ 9EE3 32 FC 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EE6
 231+ 9EE6              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EE6
 233+ 9EE6 23               inc hl
 234+ 9EE7 7E               ld a,(hl)
 235+ 9EE8 32 FE 88         ld (Cola_de_desplazamiento),a
 236+ 9EEB 2B               dec hl
 237+ 9EEC
 238+ 9EEC 21 03 89         ld hl,Ctrl_2
 239+ 9EEF CB D6            set 2,(hl)
 240+ 9EF1
 241+ 9EF1              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EF1              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EF1
 244+ 9EF1              Desplazamiento_iniciado
 245+ 9EF1
 246+ 9EF1 CD A2 9F         call Aplica_desplazamiento
 247+ 9EF4
 248+ 9EF4 3A 03 89         ld a,(Ctrl_2)
 249+ 9EF7 CB 67            bit 4,a
 250+ 9EF9 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EFA
 252+ 9EFA 21 FB 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EFD 35               dec (hl)
 254+ 9EFE C0               ret nz
 255+ 9EFF
 256+ 9EFF              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EFF              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EFF              ; Analiza (Cola_de_desplazamiento).
 259+ 9EFF
 260+ 9EFF 3A FE 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F02 A7               and a
 262+ 9F03 CC F7 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F06 28 30            jr z,Reinicia_el_movimiento
 264+ 9F08
 265+ 9F08 FE FF            cp $ff
 266+ 9F0A 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F0C
 268+ 9F0C FE FE            cp $fe
 269+ 9F0E CC 7B 9F         call z,Fijamos_bucle
 270+ 9F11 28 25            jr z,Reinicia_el_movimiento
 271+ 9F13
 272+ 9F13 FE FD            cp $fd
 273+ 9F15 20 11            jr nz,1F
 274+ 9F17
 275+ 9F17              ; ---
 276+ 9F17              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F17
 278+ 9F17 3A 03 89         ld a,(Ctrl_2)
 279+ 9F1A CB 5F            bit 3,a
 280+ 9F1C 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F1E
 282+ 9F1E              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F1E
 284+ 9F1E 21 03 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F21 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F23
 287+ 9F23 CD 8C 9F         call Inicia_Repetimos_movimiento
 288+ 9F26 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F28              ; ---
 290+ 9F28
 291+ 9F28 FE 01        1 cp 1
 292+ 9F2A CA 65 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F2D
 294+ 9F2D 3D               dec a
 295+ 9F2E 32 FE 88         ld (Cola_de_desplazamiento),a
 296+ 9F31
 297+ 9F31 3A FC 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F34 32 FB 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F37              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F37 C9               ret
 301+ 9F38
 302+ 9F38              Reinicia_el_movimiento
 303+ 9F38
 304+ 9F38 3A 03 89         ld a,(Ctrl_2)
 305+ 9F3B CB 5F            bit 3,a
 306+ 9F3D 28 1B            jr z,2F
 307+ 9F3F
 308+ 9F3F              ; (Cola_de_desplazamiento)="254".
 309+ 9F3F
 310+ 9F3F 21 FD 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F42 35               dec (hl)
 312+ 9F43 20 15            jr nz,2F
 313+ 9F45
 314+ 9F45              ; Fin de las repeticiones del último movimiento.
 315+ 9F45
 316+ 9F45 21 03 89         ld hl,Ctrl_2
 317+ 9F48 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F4A
 319+ 9F4A 2A F5 88         ld hl,(Puntero_mov)
 320+ 9F4D 23               inc hl
 321+ 9F4E 23               inc hl
 322+ 9F4F 23               inc hl
 323+ 9F50 22 F5 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F53              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F53 7E               ld a,(hl)
 326+ 9F54 32 FE 88         ld (Cola_de_desplazamiento),a
 327+ 9F57
 328+ 9F57 C3 FF 9E         jp Cola
 329+ 9F5A
 330+ 9F5A CD 97 9F     2 call Inicia_Puntero_mov
 331+ 9F5D
 332+ 9F5D 21 03 89         ld hl,Ctrl_2
 333+ 9F60 CB 96            res 2,(hl)
 334+ 9F62
 335+ 9F62 C3 CF 9E         jp Movimiento
 336+ 9F65
 337+ 9F65              Siguiente_desplazamiento
 338+ 9F65
 339+ 9F65              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F65              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F65
 342+ 9F65 21 03 89         ld hl,Ctrl_2
 343+ 9F68 CB 96            res 2,(hl)
 344+ 9F6A
 345+ 9F6A 2A F5 88         ld hl,(Puntero_mov)
 346+ 9F6D 23               inc hl
 347+ 9F6E 23               inc hl
 348+ 9F6F 22 F5 88         ld (Puntero_mov),hl
 349+ 9F72
 350+ 9F72 7E               ld a,(hl)
 351+ 9F73 A7               and a
 352+ 9F74 CC F7 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F77 CA 38 9F         jp z,Reinicia_el_movimiento
 354+ 9F7A
 355+ 9F7A C9               ret
 356+ 9F7B
 357+ 9F7B              ; Subrutinas -----------------------------------------
 358+ 9F7B              ; ---------- --------- --------- ---------- ----------
 359+ 9F7B              ;
 360+ 9F7B              ;   24/07/23
 361+ 9F7B              ;
 362+ 9F7B              ;   Fijamos_bucle
 363+ 9F7B              ;
 364+ 9F7B              ;
 365+ 9F7B
 366+ 9F7B              Fijamos_bucle
 367+ 9F7B
 368+ 9F7B 3A F9 88         ld a,(Incrementa_puntero)
 369+ 9F7E 3C               inc a
 370+ 9F7F 32 FA 88         ld (Incrementa_puntero_backup),a
 371+ 9F82
 372+ 9F82 CD F7 9F         call Incrementa_Puntero_indice_mov
 373+ 9F85 2A F3 88         ld hl,(Puntero_indice_mov)
 374+ 9F88 22 F7 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9F8B C9               ret
 376+ 9F8C
 377+ 9F8C              ; ---------- --------- --------- ---------- ----------
 378+ 9F8C              ;
 379+ 9F8C              ;   07/7/23
 380+ 9F8C              ;
 381+ 9F8C              ;   Inicia_Repetimos_movimiento
 382+ 9F8C              ;
 383+ 9F8C              ;
 384+ 9F8C
 385+ 9F8C              Inicia_Repetimos_movimiento
 386+ 9F8C
 387+ 9F8C              ; Iniciamos (Repetimos_movimiento).
 388+ 9F8C
 389+ 9F8C DD 2A F5 88      ld ix,(Puntero_mov)
 390+ 9F90 DD 7E 02         ld a,(ix+2)
 391+ 9F93 32 FD 88         ld (Repetimos_movimiento),a
 392+ 9F96
 393+ 9F96 C9               ret
 394+ 9F97
 395+ 9F97              ; ---------- --------- --------- ---------- ----------
 396+ 9F97              ;
 397+ 9F97              ;   26/6/23
 398+ 9F97              ;
 399+ 9F97              ;   Inicia_Puntero_mov
 400+ 9F97              ;
 401+ 9F97              ;
 402+ 9F97
 403+ 9F97 2A F3 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F9A 5E               ld e,(hl)
 405+ 9F9B 23               inc hl
 406+ 9F9C 56               ld d,(hl)
 407+ 9F9D EB               ex de,hl
 408+ 9F9E 22 F5 88         ld (Puntero_mov),hl
 409+ 9FA1 C9               ret
 410+ 9FA2
 411+ 9FA2              ; ---------- --------- --------- ---------- ----------
 412+ 9FA2              ;
 413+ 9FA2              ;   27/06/23
 414+ 9FA2              ;
 415+ 9FA2              ;   Aplica_movimiento.
 416+ 9FA2
 417+ 9FA2              Aplica_desplazamiento
 418+ 9FA2
 419+ 9FA2              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9FA2
 421+ 9FA2 2A F5 88         ld hl, (Puntero_mov)
 422+ 9FA5
 423+ 9FA5 7E               ld a,(hl)
 424+ 9FA6 E6 F0            and $f0
 425+ 9FA8 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9FA9
 427+ 9FA9 CB 7E            bit 7,(hl)
 428+ 9FAB 28 03            jr z,1F
 429+ 9FAD CD CD 99         call Mov_up
 430+ 9FB0 2A F5 88     1 ld hl, (Puntero_mov)
 431+ 9FB3 CB 76            bit 6,(hl)
 432+ 9FB5 28 03            jr z,2F
 433+ 9FB7 CD 83 99         call Mov_down
 434+ 9FBA 2A F5 88     2 ld hl, (Puntero_mov)
 435+ 9FBD CB 6E            bit 5,(hl)
 436+ 9FBF 28 03            jr z,3F
 437+ 9FC1 CD 2E 9B         call Mov_left
 438+ 9FC4 2A F5 88     3 ld hl, (Puntero_mov)
 439+ 9FC7 CB 66            bit 4,(hl)
 440+ 9FC9 C8               ret z
 441+ 9FCA CD 10 9A         call Mov_right
 442+ 9FCD C9               ret
 443+ 9FCE
 444+ 9FCE              ; ---------- --------- --------- ---------- ----------
 445+ 9FCE              ;
 446+ 9FCE              ;   26/06/23
 447+ 9FCE              ;
 448+ 9FCE              ;   Ajusta_velocidad_desplazamiento.
 449+ 9FCE
 450+ 9FCE              Ajusta_velocidad_desplazamiento
 451+ 9FCE
 452+ 9FCE              ; 1er byte de la cadena de movimiento.
 453+ 9FCE              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9FCE
 455+ 9FCE CD EC 9F         call Extrae_nibble_alto
 456+ 9FD1
 457+ 9FD1 32 DB 88         ld (Vel_up),a
 458+ 9FD4 79               ld a,c
 459+ 9FD5 E6 0F            and $0f
 460+ 9FD7 32 DC 88         ld (Vel_down),a
 461+ 9FDA
 462+ 9FDA              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9FDA              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9FDA
 465+ 9FDA 23               inc hl
 466+ 9FDB CD EC 9F         call Extrae_nibble_alto
 467+ 9FDE
 468+ 9FDE 32 D9 88         ld (Vel_left),a
 469+ 9FE1 79               ld a,c
 470+ 9FE2 E6 0F            and $0f
 471+ 9FE4 32 DA 88         ld (Vel_right),a
 472+ 9FE7
 473+ 9FE7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9FE7
 475+ 9FE7 23               inc hl
 476+ 9FE8 22 F5 88         ld (Puntero_mov),hl
 477+ 9FEB C9               ret
 478+ 9FEC
 479+ 9FEC 06 04        Extrae_nibble_alto ld b,4
 480+ 9FEE 7E               ld a,(hl)
 481+ 9FEF 4F               ld c,a
 482+ 9FF0 E6 F0            and $f0
 483+ 9FF2 CB 3F        1 srl a
 484+ 9FF4 10 FC            djnz 1B
 485+ 9FF6 C9               ret
 486+ 9FF7
 487+ 9FF7              ; ---------- --------- --------- ---------- ----------
 488+ 9FF7              ;
 489+ 9FF7              ;   5/7/23
 490+ 9FF7              ;
 491+ 9FF7              ;   Incrementa_Puntero_indice_mov
 492+ 9FF7
 493+ 9FF7              Incrementa_Puntero_indice_mov
 494+ 9FF7
 495+ 9FF7 21 F9 88         ld hl,Incrementa_puntero
 496+ 9FFA 34               inc (hl)
 497+ 9FFB
 498+ 9FFB 2A F3 88         ld hl,(Puntero_indice_mov)
 499+ 9FFE 01 02 00         ld bc,2
 500+ A001 A7               and a
 501+ A002 09               add hl,bc
 502+ A003 22 F3 88         ld (Puntero_indice_mov),hl
 503+ A006
 504+ A006 7E               ld a,(hl)
 505+ A007 A7               and a
 506+ A008
 507+ A008              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A008
 509+ A008              ;    jr z,$
 510+ A008
 511+ A008              ;! Reinicia el Patrón de movimiento.
 512+ A008
 513+ A008 CC 0D A0         call z,Inicializa_Puntero_indice_mov
 514+ A00B
 515+ A00B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A00C
 517+ A00C C9               ret
 518+ A00D
 519+ A00D
 520+ A00D              ; ---------- --------- --------- ---------- ----------
 521+ A00D              ;
 522+ A00D              ;   24/07/23
 523+ A00D              ;
 524+ A00D              ;   Inicializa_Puntero_indice_mov
 525+ A00D
 526+ A00D              Inicializa_Puntero_indice_mov
 527+ A00D
 528+ A00D              ; Existe etiqueta de bucle principal???
 529+ A00D
 530+ A00D 2A F7 88         ld hl,(Puntero_indice_mov_bucle)
 531+ A010 24               inc h
 532+ A011 25               dec h
 533+ A012 28 05            jr z,2F
 534+ A014
 535+ A014 22 F3 88         ld (Puntero_indice_mov),hl
 536+ A017 18 14            jr 3F
 537+ A019
 538+ A019              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A019
 540+ A019 3A F9 88     2 ld a,(Incrementa_puntero)
 541+ A01C 47               ld b,a
 542+ A01D
 543+ A01D 2A F3 88         ld hl,(Puntero_indice_mov)
 544+ A020 2B           1 dec hl
 545+ A021 2B               dec hl
 546+ A022 10 FC            djnz 1B
 547+ A024 22 F3 88         ld (Puntero_indice_mov),hl
 548+ A027
 549+ A027 AF               xor a
 550+ A028 32 F9 88         ld (Incrementa_puntero),a
 551+ A02B 18 06            jr 4F
 552+ A02D
 553+ A02D 3A FA 88     3 ld a,(Incrementa_puntero_backup)
 554+ A030 32 F9 88         ld (Incrementa_puntero),a
 555+ A033 C9           4 ret
 556+ A034
 557+ A034
 558+ A034
# file closed: Patrones_de_mov.asm
1710  A034              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A034              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A034              ;
   3+ A034              ;	12/12/23
   4+ A034              ;
   5+ A034              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A034
   7+ A034              ;	ADC HL,SP	LD (addr),SP
   8+ A034              ;	ADD HL,SP	LD SP,(addr)
   9+ A034              ;	ADD IX,SP	LD SP,nn
  10+ A034              ; 	ADD IY,SP	LD SP,HL
  11+ A034              ;				LD SP,IX
  12+ A034              ;	DEC SP		LD SP,IY
  13+ A034
  14+ A034              ;	EX (SP),HL
  15+ A034              ;	EX (SP),IX
  16+ A034              ;	EX (SP),IY
  17+ A034
  18+ A034              ;	INC SP
  19+ A034
  20+ A034                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 16 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E4 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 F0 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7FB0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7FB2              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7FB2
  50+ 7FB2 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 7FB5
  52+ 7FB5 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 7FB6 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 7FB8 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7FBA
  56+ 7FBA              ; Disparo o entidad?
  57+ 7FBA
  58+ 7FBA 3A 05 89         ld a,(Ctrl_1)
  59+ 7FBD CB 47            bit 0,a
  60+ 7FBF 28 05            jr z,2F
  61+ 7FC1
  62+ 7FC1 2A 1E 89         ld hl,(Stack_snapshot_disparos)
  63+ 7FC4 18 0F            jr 4F
  64+ 7FC6
  65+ 7FC6              ; No es disparo. Entidad/Amadeus ????
  66+ 7FC6
  67+ 7FC6 3A F2 88     2 ld a,(Ctrl_0)
  68+ 7FC9 CB 77            bit 6,a
  69+ 7FCB 28 05            jr z,7F
  70+ 7FCD
  71+ 7FCD              ; Guardamos foto de Amadeus.
  72+ 7FCD
  73+ 7FCD 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7FD0 18 03            jr 4F
  75+ 7FD2
  76+ 7FD2 2A 1C 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 7FD5
  78+ 7FD5 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 7FD7
  80+ 7FD7 D1           1 pop de
  81+ 7FD8 73               ld (hl),e
  82+ 7FD9 23               inc hl
  83+ 7FDA 72               ld (hl),d
  84+ 7FDB 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7FDC 10 F9            djnz 1B
  86+ 7FDE
  87+ 7FDE              ; Disparo o entidad ?
  88+ 7FDE
  89+ 7FDE 3A 05 89         ld a,(Ctrl_1)
  90+ 7FE1 CB 47            bit 0,a
  91+ 7FE3 28 05            jr z,5F
  92+ 7FE5
  93+ 7FE5 22 1E 89         ld (Stack_snapshot_disparos),hl
  94+ 7FE8 18 13            jr 6F
  95+ 7FEA
  96+ 7FEA              ; Entidad o Amadeus ?
  97+ 7FEA
  98+ 7FEA 3A F2 88     5 ld a,(Ctrl_0)
  99+ 7FED CB 77            bit 6,a
 100+ 7FEF 28 09            jr z,8F
 101+ 7FF1
 102+ 7FF1 22 22 89         ld (End_Snapshot_Amadeus),hl
 103+ 7FF4 ED 7B 16 89      ld sp,(Stack)
 104+ 7FF8 FB               ei
 105+ 7FF9 C9               ret
 106+ 7FFA
 107+ 7FFA 22 1C 89     8 ld (Stack_snapshot),hl
 108+ 7FFD ED 7B 16 89  6 ld sp,(Stack)
 109+ 8001
 110+ 8001 FB               ei
 111+ 8002 C9               ret
 112+ 8003
 113+ 8003              ; -----------------------------------------------------------------------------
 114+ 8003              ;
 115+ 8003              ;   21/11/23
 116+ 8003
 117+ 8003              Limpia_y_reinicia_Stack_Snapshot
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos.
 120+ 8003
 121+ 8003 2A 1C 89         ld hl,(Stack_snapshot)
 122+ 8006 7D               ld a,l
 123+ 8007 A7               and a
 124+ 8008 C8               ret z   ;   Salimos si el álbum está vacío.
 125+ 8009
 126+ 8009 47               ld b,a
 127+ 800A 04               inc b
 128+ 800B
 129+ 800B 36 00        1 ld (hl),0
 130+ 800D 2D               dec l
 131+ 800E 10 FB            djnz 1B
 132+ 8010
 133+ 8010              ;   Reinicializa (Stack_snapshot).
 134+ 8010
 135+ 8010 AF               xor a
 136+ 8011 32 1C 89         ld (Stack_snapshot),a
 137+ 8014
 138+ 8014 C9               ret
# file closed: Guarda_foto_registros.asm
1711  8015
1712  8015              	SAVESNA "Pruebas.sna", START
1713  8015
1714  8015
1715  8015
1716  8015
# file closed: Banco_de_pruebas.asm
