# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD FD 87     	call Frame
  15  A104
  16  A104 3A 2B 87     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Caja_1
  98+ 846A F0 84        	defw Caja_2
  99+ 846C 2D 85        	defw Caja_3
 100+ 846E 6A 85        	defw Caja_4
 101+ 8470 A7 85        	defw Caja_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 8484
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 848F
 128+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8490
 130+ 8490 00 00        	db 0,0											; Variables_de_borrado
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00        	defw 0											;	" " " " " " "
 133+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 849A
 135+ 849A 00 00        	db 0,0											; Variables_de_pintado
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00        	defw 0											;	" " " " " " "
 138+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 139+ 84A4
 140+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 141+ 84A7
 142+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 143+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 144+ 84AE
 145+ 84AE 00           	db 0 											; (Columnas).
 146+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 147+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 148+ 84B3
 149+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 150+ 84B3
 151+ 84B3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 152+ 84B5 00 00        	defw 0											; (Posicion_actual).
 153+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 154+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 155+ 84BC
 156+ 84BC 00           	db %00000000 									; (Attr).
 157+ 84BD
 158+ 84BD 00 00        	defw 0											; (Indice_Sprite_der).
 159+ 84BF 00 00        	defw 0											; (Indice_Sprite_izq).
 160+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 161+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 162+ 84C5
 163+ 84C5 00 00        	defw 0											; (Posicion_inicio).
 164+ 84C7 00           	db 0											; (Cuad_objeto).
 165+ 84C8
 166+ 84C8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 167+ 84CC
 168+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 169+ 84CD
 170+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 171+ 84CF 00 00        	defw 0											;	" " " " " " "
 172+ 84D1 00 00        	defw 0											;	" " " " " " "
 173+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 174+ 84D7
 175+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 176+ 84D9 00 00        	defw 0											;	" " " " " " "
 177+ 84DB 00 00        	defw 0											;	" " " " " " "
 178+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 179+ 84E1
 180+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 181+ 84E4
 182+ 84E4 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 183+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 184+ 84EB
 185+ 84EB 00           	db 0 											; (Columnas).
 186+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 187+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 188+ 84F0
 189+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 190+ 84F0
 191+ 84F0 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 84F2 00 00        	defw 0											; (Posicion_actual).
 193+ 84F4 00 00        	defw 0 											; (Puntero_objeto).
 194+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 84F9
 196+ 84F9 00           	db %00000000 									; (Attr).
 197+ 84FA
 198+ 84FA 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 84FC 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 8502
 203+ 8502 00 00        	defw 0											; (Posicion_inicio).
 204+ 8504 00           	db 0											; (Cuad_objeto).
 205+ 8505
 206+ 8505 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8509
 208+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 850A
 210+ 850A 00 00        	db 0,0										    ; Variables_de_borrado
 211+ 850C 00 00        	defw 0											;	" " " " " " "
 212+ 850E 00 00        	defw 0											;	" " " " " " "
 213+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 214+ 8514
 215+ 8514 00 00        	db 0,0											; Variables_de_pintado
 216+ 8516 00 00        	defw 0											;	" " " " " " "
 217+ 8518 00 00        	defw 0											;	" " " " " " "
 218+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 219+ 851E
 220+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 221+ 8521
 222+ 8521 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 223+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8528
 225+ 8528 00           	db 0 											; (Columnas).
 226+ 8529 00 00        	defw 0											; (Limite_horizontal).
 227+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 228+ 852D
 229+ 852D              ; ---------- ---------- ---------- ---------- ----------
 230+ 852D
 231+ 852D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 232+ 852F 00 00        	defw 0											; (Posicion_actual).
 233+ 8531 00 00        	defw 0 											; (Puntero_objeto).
 234+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 8536
 236+ 8536 00           	db %00000000 									; (Attr).
 237+ 8537
 238+ 8537 00 00        	defw 0											; (Indice_Sprite_der).
 239+ 8539 00 00        	defw 0											; (Indice_Sprite_izq).
 240+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 241+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 242+ 853F
 243+ 853F 00 00        	defw 0											; (Posicion_inicio).
 244+ 8541 00           	db 0											; (Cuad_objeto).
 245+ 8542
 246+ 8542 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 247+ 8546
 248+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 249+ 8547
 250+ 8547 00 00        	db 0,0										    ; Variables_de_borrado
 251+ 8549 00 00        	defw 0											;	" " " " " " "
 252+ 854B 00 00        	defw 0											;	" " " " " " "
 253+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 254+ 8551
 255+ 8551 00 00        	db 0,0											; Variables_de_pintado
 256+ 8553 00 00        	defw 0											;	" " " " " " "
 257+ 8555 00 00        	defw 0											;	" " " " " " "
 258+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 855B
 260+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 261+ 855E
 262+ 855E 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 263+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 264+ 8565
 265+ 8565 00           	db 0 											; (Columnas).
 266+ 8566 00 00        	defw 0											; (Limite_horizontal).
 267+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 268+ 856A
 269+ 856A              ; ---------- ---------- ---------- ---------- ----------
 270+ 856A
 271+ 856A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 272+ 856C 00 00        	defw 0											; (Posicion_actual).
 273+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 274+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 275+ 8573
 276+ 8573 00           	db %00000000 									; (Attr).
 277+ 8574
 278+ 8574 00 00        	defw 0											; (Indice_Sprite_der).
 279+ 8576 00 00        	defw 0											; (Indice_Sprite_izq).
 280+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 281+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 282+ 857C
 283+ 857C 00 00        	defw 0											; (Posicion_inicio).
 284+ 857E 00           	db 0											; (Cuad_objeto).
 285+ 857F
 286+ 857F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 287+ 8583
 288+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 289+ 8584
 290+ 8584 00 00        	db 0,0										    ; Variables_de_borrado
 291+ 8586 00 00        	defw 0											;	" " " " " " "
 292+ 8588 00 00        	defw 0											;	" " " " " " "
 293+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 294+ 858E
 295+ 858E 00 00        	db 0,0											; Variables_de_pintado
 296+ 8590 00 00        	defw 0											;	" " " " " " "
 297+ 8592 00 00        	defw 0											;	" " " " " " "
 298+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 299+ 8598
 300+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 301+ 859B
 302+ 859B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 303+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 304+ 85A2
 305+ 85A2 00           	db 0 											; (Columnas).
 306+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 307+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 308+ 85A7
 309+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 310+ 85A7
 311+ 85A7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 312+ 85A9 00 00        	defw 0											; (Posicion_actual).
 313+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 314+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 315+ 85B0
 316+ 85B0 00           	db %00000000 									; (Attr).
 317+ 85B1
 318+ 85B1 00 00        	defw 0											; (Indice_Sprite_der).
 319+ 85B3 00 00        	defw 0											; (Indice_Sprite_izq).
 320+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 321+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 322+ 85B9
 323+ 85B9 00 00        	defw 0											; (Posicion_inicio).
 324+ 85BB 00           	db 0											; (Cuad_objeto).
 325+ 85BC
 326+ 85BC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 327+ 85C0
 328+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 329+ 85C1
 330+ 85C1 00 00        	db 0,0										    ; Variables_de_borrado
 331+ 85C3 00 00        	defw 0											;	" " " " " " "
 332+ 85C5 00 00        	defw 0											;	" " " " " " "
 333+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 334+ 85CB
 335+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 336+ 85CD 00 00        	defw 0											;	" " " " " " "
 337+ 85CF 00 00        	defw 0											;	" " " " " " "
 338+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 85D5
 340+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 341+ 85D8
 342+ 85D8 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 343+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 344+ 85DF
 345+ 85DF 00           	db 0 											; (Columnas).
 346+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 347+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 348+ 85E4
 349+ 85E4              	; -------------------------------------------------------------------------------------
 350+ 85E4              ;
 351+ 85E4              ;	20/05/23
 352+ 85E4              ;
 353+ 85E4              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 354+ 85E4              ;
 355+ 85E4              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 356+ 85E4              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 357+ 85E4              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 358+ 85E4              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 359+ 85E4
 360+ 85E4              Indice_de_entidades
 361+ 85E4
 362+ 85E4 EE 85        	defw Entidad_1
 363+ 85E6 FE 85        	defw Entidad_2
 364+ 85E8 0E 86        	defw Entidad_3
 365+ 85EA 1E 86        	defw Entidad_4
 366+ 85EC 2E 86        	defw Entidad_5
 367+ 85EE
 368+ 85EE              ;	BADSAT, (Satélite malvado).
 369+ 85EE
 370+ 85EE 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 371+ 85F0 04           	db %00000100									; (Attr).
 372+ 85F1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 373+ 85F3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 374+ 85F5 80 47        	defw $4780	                             	    ; (Posicion_inicio).
 375+ 85F7 01           	db 1											; (Cuad_objeto).
 376+ 85F8 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 377+ 85FC 14 99        	defw Indice_mov_Escaloncitos_derecha_abajo  	; (Puntero_indice_mov)
 378+ 85FE
 379+ 85FE 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 380+ 8600 02           	db %00000010									; (Attr).
 381+ 8601 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 382+ 8603 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 383+ 8605 5E 48        	defw $485e                                      ; (Posicion_inicio).
 384+ 8607 01           	db 1											; (Cuad_objeto).
 385+ 8608 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 386+ 860C 18 99        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 387+ 860E
 388+ 860E 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 389+ 8610 04           	db %00000100									; (Attr).
 390+ 8611 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 391+ 8613 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 392+ 8615 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 393+ 8617 01           	db 1											; (Cuad_objeto).
 394+ 8618 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 395+ 861C 0C 99        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 396+ 861E
 397+ 861E 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 398+ 8620 01           	db %00000001									; (Attr).
 399+ 8621 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 400+ 8623 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 401+ 8625 BE 47        	defw $47be                                      ; (Posicion_inicio).
 402+ 8627 01           	db 1											; (Cuad_objeto).
 403+ 8628 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 404+ 862C 18 99        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 405+ 862E
 406+ 862E 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 407+ 8630 01           	db %00000001									; (Attr).
 408+ 8631 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 409+ 8633 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 410+ 8635 0A 40        	defw $400a                                      ; (Posicion_inicio).
 411+ 8637 01           	db 1											; (Cuad_objeto).
 412+ 8638 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 413+ 863C 0E 99        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  863E              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 863E              ; 13/05/23
   2+ 863E
   3+ 863E              Indice_de_niveles
   4+ 863E
   5+ 863E 4C 86        	defw Nivel_1
   6+ 8640 51 86        	defw Nivel_2
   7+ 8642 56 86        	defw Nivel_3
   8+ 8644 5B 86        	defw Nivel_4
   9+ 8646 60 86        	defw Nivel_5
  10+ 8648
  11+ 8648              ;	...
  12+ 8648              ;	...
  13+ 8648              ;	+ Niveles ...
  14+ 8648
  15+ 8648 00 00        	defw 0
  16+ 864A 00 00        	defw 0
  17+ 864C
  18+ 864C 01 02 03 04  Nivel_1 db 1,2,3,4,5 							; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  18+ 8650 05
  19+ 8651
  20+ 8651 02 01 01 01  Nivel_2 db 2,1,1,1,1
  20+ 8655 01
  21+ 8656
  22+ 8656 03 01 01 01  Nivel_3 db 3,1,1,1,1
  22+ 865A 01
  23+ 865B
  24+ 865B 04 01 01 01  Nivel_4 db 4,1,1,1,1
  24+ 865F 01
  25+ 8660
  26+ 8660 05 01 01 01  Nivel_5 db 5,1,1,1,1
  26+ 8664 01
  27+ 8665
  28+ 8665              ;---------------------------------------------------------------------------------------------------------------
  29+ 8665              ;
  30+ 8665              ;   13/5/23
  31+ 8665              ;
  32+ 8665              ;	Destruye A,BC,HL,DE
  33+ 8665
  34+ 8665              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_1
  35+ 8665              ;	_del juego.
  36+ 8665
  37+ 8665              Prepara_cajas
  38+ 8665
  39+ 8665              ; Preparamos los punteros de las cajas.
  40+ 8665
  41+ 8665 21 68 84     	ld hl,Indice_de_cajas
  42+ 8668 CD E7 89     	call Extrae_address
  43+ 866B CD B3 86     	call Avanza_caja
  44+ 866E
  45+ 866E 3A 5C 87     	ld a,(Nivel)
  46+ 8671 CD A4 86     	call PreparaBC
  47+ 8674
  48+ 8674 21 3E 86     	ld hl,Indice_de_niveles
  49+ 8677 CD AC 86     	call SBC_HL_con_BC_y_Extrae
  50+ 867A 22 5F 87     	ld (Datos_de_nivel),hl						; HL está en los datos del nivel correspondiente.
  51+ 867D
  52+ 867D 06 05        	ld b,5										; B actuará como contador de cajas.
  53+ 867F C5           1	push bc
  54+ 8680
  55+ 8680 7E           	ld a,(hl)										; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  56+ 8681 CD A4 86     	call PreparaBC
  57+ 8684
  58+ 8684 21 E4 85     	ld hl,Indice_de_entidades
  59+ 8687 CD AC 86     	call SBC_HL_con_BC_y_Extrae
  60+ 868A 22 36 87         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  61+ 868D
  62+ 868D CD BD 86     	call Datos_de_entidad_a_caja
  63+ 8690
  64+ 8690 2A 30 87     	ld hl,(Indice_restore_caja)
  65+ 8693 CD E7 89     	call Extrae_address
  66+ 8696 CD B3 86     	call Avanza_caja
  67+ 8699
  68+ 8699 2A 5F 87     	ld hl,(Datos_de_nivel)
  69+ 869C 23           	inc hl
  70+ 869D 22 5F 87     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
  71+ 86A0
  72+ 86A0 C1           	pop bc
  73+ 86A1 10 DC        	djnz 1B
  74+ 86A3 C9           	ret
  75+ 86A4
  76+ 86A4 CB 27        PreparaBC sla a
  77+ 86A6 D6 02        	sub 2										; [(Nivel)*2]-2.
  78+ 86A8 4F           	ld c,a
  79+ 86A9 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
  80+ 86AB C9           	ret
  81+ 86AC
  82+ 86AC A7           SBC_HL_con_BC_y_Extrae and a
  83+ 86AD ED 4A        	adc hl,bc
  84+ 86AF CD E7 89     	call Extrae_address
  85+ 86B2 C9           	ret
  86+ 86B3
  87+ 86B3 22 2C 87     Avanza_caja	ld (Puntero_store_caja),hl
  88+ 86B6 13           	inc de
  89+ 86B7 13           	inc de
  90+ 86B8 EB           	ex de,hl
  91+ 86B9 22 30 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
  92+ 86BC C9           	ret
  93+ 86BD
  94+ 86BD              Datos_de_entidad_a_caja
  95+ 86BD
  96+ 86BD              ;		; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar Entidad_
  97+ 86BD              ;		; _ la 1ª caja.
  98+ 86BD
  99+ 86BD ED 5B 2C 87  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 100+ 86C1
 101+ 86C1 01 02 00     	ld bc,2
 102+ 86C4 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 103+ 86C6
 104+ 86C6 01 07 00     	ld bc,7
 105+ 86C9 CD E8 86     	call Situa_DE
 106+ 86CC
 107+ 86CC 01 05 00     	ld bc,5
 108+ 86CF ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 109+ 86D1
 110+ 86D1 01 04 00     	ld bc,4
 111+ 86D4 CD E8 86     	call Situa_DE
 112+ 86D7
 113+ 86D7 01 07 00     	ld bc,7
 114+ 86DA ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 115+ 86DC
 116+ 86DC 01 18 00     	ld bc,24
 117+ 86DF CD E8 86     	call Situa_DE
 118+ 86E2
 119+ 86E2 01 02 00     	ld bc,2
 120+ 86E5 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 121+ 86E7
 122+ 86E7 C9           	ret
 123+ 86E8
 124+ 86E8 EB           Situa_DE ex de,hl
 125+ 86E9 A7           	and a
 126+ 86EA ED 4A        	adc hl,bc
 127+ 86EC EB           	ex de,hl
 128+ 86ED C9           	ret
 129+ 86EE
 130+ 86EE              ;---------------------------------------------------------------------------------------------------------------
# file closed: Niveles.asm
  25  86EE
  26  86EE              ; ******************************************************************************************************************************************************************************************
  27  86EE              ; Constantes.
  28  86EE              ; ******************************************************************************************************************************************************************************************
  29  86EE              ;
  30  86EE              ; 8/11/22
  31  86EE              ;
  32  86EE              ; Constantes generales.
  33  86EE              ;
  34  86EE
  35  86EE              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  36  86EE              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  37  86EE              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  38  86EE              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  39  86EE
  40  86EE              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  41  86EE              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  42  86EE              ;                               				        ; De momento situamos este almacén en $7000.
  43  86EE              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  44  86EE              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  45  86EE              ;                               				        ; De momento situamos este almacén en $7060.
  46  86EE
  47  86EE              ; ******************************************************************************************************************************************************************************************
  48  86EE              ; Variables.
  49  86EE              ; ******************************************************************************************************************************************************************************************
  50  86EE              ;
  51  86EE              ; 10/11/22
  52  86EE              ;
  53  86EE              ; Variables de DRAW. (Motor principal).
  54  86EE              ;
  55  86EE              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  56  86EE
  57  86EE 00           Filas db 0												; Filas. [DRAW]
  58  86EF 00           Columns db 0  											; Nº de columnas. [DRAW]
  59  86F0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  60  86F2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  61  86F4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  62  86F5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  63  86F6
  64  86F6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  65  86F6
  66  86F6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  67  86F7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  68  86F7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  69  86F7 00           Attr db 0												; Atributos de la entidad:
  70  86F8
  71  86F8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  72  86F8              ;
  73  86F8              ;	COLORES: 0 ..... NEGRO
  74  86F8              ;    		 1 ..... AZUL
  75  86F8              ; 			 2 ..... ROJO
  76  86F8              ;			 3 ..... MAGENTA
  77  86F8              ; 			 4 ..... VERDE
  78  86F8              ; 			 5 ..... CIAN
  79  86F8              ;			 6 ..... AMARILLO
  80  86F8              ; 			 7 ..... BLANCO
  81  86F8
  82  86F8 00 00        Indice_Sprite_der defw 0
  83  86FA 00 00        Indice_Sprite_izq defw 0
  84  86FC 00 00        Puntero_DESPLZ_der defw 0
  85  86FE 00 00        Puntero_DESPLZ_izq defw 0
  86  8700
  87  8700 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  88  8702 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  89  8703
  90  8703              ; Variables de objeto. (Características).
  91  8703
  92  8703 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  93  8704 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  94  8705 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  95  8706 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  96  8707
  97  8707 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  98  8708              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  99  8708              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 100  8708 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 101  870A 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 102  870C 00 00        	defw 0
 103  870E 00 00 00 00  	db 0,0,0,0
 104  8712
 105  8712 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 106  8714 00 00        	defw 0
 107  8716 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  8718 00 00 00 00  	db 0,0,0,0
 109  871C
 110  871C              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 111  871C
 112  871C 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 113  871D              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 114  871D              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 115  871D              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 116  871D              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 117  871D              ;
 118  871D              ; 														DESCRIPCIÖN:
 119  871D              ;
 120  871D              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 121  871D              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 122  871D              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 123  871D              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 124  871D              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 125  871D              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 126  871D              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 127  871D              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 128  871D              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 129  871D              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 130  871D              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 131  871D              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 132  871D              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 133  871D              ;
 134  871D              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 135  871D              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 136  871D              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 137  871D
 138  871D 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 139  871E
 140  871E              ; Movimiento.
 141  871E
 142  871E 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 143  871F 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 144  8721 00 00        Puntero_mov defw 0
 145  8723 00           Contador_db_mov db 0
 146  8724 00           Incrementa_puntero db 0
 147  8725 00           Repetimos_db db 0
 148  8726
 149  8726              ; Variables de funcionamiento. [DRAW].
 150  8726
 151  8726 00           Columnas db 0
 152  8727 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 153  8729              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 154  8729 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  872A
 156  872A              ; variables de control general.
 157  872A
 158  872A 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 159  872B
 160  872B              ; 61 Bytes por entidad.
 161  872B              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 162  872B              ;					         		---------;      ;---------
 163  872B
 164  872B
 165  872B              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 166  872B
 167  872B 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 168  872C
 169  872C              ;														DESCRIPCIÓN:
 170  872C              ;
 171  872C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 172  872C              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 173  872C              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 174  872C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 175  872C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 176  872C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 177  872C              ;														BIT 3, .............
 178  872C              ;														BIT 4, .............
 179  872C
 180  872C              ; Gestión de ENTIDADES y CAJAS.
 181  872C
 182  872C              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 183  872C 00 00        Puntero_store_caja defw 0
 184  872E 00 00        Puntero_restore_caja defw 0
 185  8730 00 00        Indice_restore_caja defw 0
 186  8732 01           Numero_de_entidades db 1								; Nº de entidades en pantalla, (contando con Amadeus).
 187  8733 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 188  8734              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 189  8734              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 190  8734              ;														; _ (Numero_de_malotes)="0".
 191  8734 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 192  8736 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 193  8738              ;														; _ puntero (Indice_entidades).
 194  8738
 195  8738
 196  8738              ;---------------------------------------------------------------------------------------------------------------
 197  8738              ;
 198  8738              ; Sirven para PINTAR.
 199  8738
 200  8738 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 201  873A              ;														; _variable para almacenar lo posición del puntero_
 202  873A              ; 														; _de pila, SP.
 203  873A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 204  873C              ;														; La utiliza la rutina [Extrae_foto_registros].
 205  873C 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 206  873E              ;														; _el snapshot de los registros de la siguiente entidad.
 207  873E              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 208  873E 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 209  8740              ;														; _el snapshot de los registros del siguiente disparo.
 210  8740              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 211  8740
 212  8740              ;---------------------------------------------------------------------------------------------------------------
 213  8740
 214  8740              ; Gestión de Disparos.
 215  8740
 216  8740 00           Numero_de_disparotes db 0
 217  8741 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 218  8743 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 219  8745 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 220  8746              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 221  8746              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 222  8746 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 223  8748              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 224  8748              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 225  8748              ;														; _produzca colisión.
 226  8748 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 227  874A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 228  874A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 229  874D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 230  874D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 231  8750              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 232  8750
 233  8750              ;---------------------------------------------------------------------------------------------------------------
 234  8750
 235  8750              ; Relojes y temporizaciones.
 236  8750
 237  8750 00           Contador_de_frames db 0
 238  8751 00           Secundero db 0
 239  8752 00           Activa_loop db 0										; Esta señal espera (Secundero)+X para habilitar el Loop.
 240  8753              ;														; Repite la oleada de entidades.
 241  8753 01           Habilita_disparo_Amadeus db 1
 242  8754 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 243  8755 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 244  8756
 245  8756 01           Habilita_disparo_entidad db 1
 246  8757 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 247  8758 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 248  8759
 249  8759              ;---------------------------------------------------------------------------------------------------------------
 250  8759
 251  8759              ; Gestión de FRAMES.
 252  8759
 253  8759 00           Switch db 0
 254  875A
 255  875A              ; Variables de Raster y localización en pantalla.
 256  875A
 257  875A 00 FF        Temp_Raster defw $ff00
 258  875C
 259  875C              ;---------------------------------------------------------------------------------------------------------------
 260  875C
 261  875C              ; Gestión de NIVELES.
 262  875C
 263  875C 01           Nivel db 1												 ; Nivel actual del juego.
 264  875D 00 00        Puntero_indice_NIVELES defw 0
 265  875F 00 00        Datos_de_nivel defw 0
 266  8761
 267  8761
 268  8761              ; Y todo comienza aquí .....
 269  8761              ;
 270  8761              ; Rutina principal *************************************************************************************************************************************************************************
 271  8761              ;
 272  8761              ;	14/11/22
 273  8761
 274  8761              START
 275  8761
 276  8761 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 277  8764 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 278  8766 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 279  8768 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 280  876A F3           	DI
 281  876B
 282  876B 3E 07        	ld a,%00000111
 283  876D CD 1A 95     	call Cls
 284  8770
 285  8770              ;	call Pinta_FILAS
 286  8770
 287  8770 CD C0 8A     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 288  8773
 289  8773 CD 65 86     4 call Prepara_cajas
 290  8776
 291  8776 CD 93 89     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 292  8779              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 293  8779 CD 70 8A     	call Restore_entidad
 294  877C
 295  877C 21 32 87     	ld hl,Numero_de_entidades
 296  877F 46           	ld b,(hl)
 297  8780 04           	inc b
 298  8781 05           	dec b
 299  8782 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 300  8784
 301  8784              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 302  8784              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 303  8784              ;	Pintamos el resto de entidades:
 304  8784
 305  8784              ;	INICIA ENTIDADES !!!!!
 306  8784
 307  8784 C5           1 push bc  												; Guardo el contador de entidades.
 308  8785 CD ED 89      	call Inicia_Puntero_objeto
 309  8788 CD 2E 95     	call Recompone_posicion_inicio
 310  878B CD 6A 8F     	call Draw
 311  878E CD A0 7F     	call Guarda_foto_registros
 312  8791 CD 35 8A     6 call Store_Restore_cajas	 					    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 313  8794 C1           	pop bc
 314  8795 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 315  8797
 316  8797 3A 2B 87     	ld a,(Ctrl_1)
 317  879A CB 5F        	bit 3,a
 318  879C 20 18        	jr nz,5F											; Loop
 319  879E
 320  879E              ; 	INICIA AMADEUS !!!!!
 321  879E
 322  879E CD 97 8A     3 call Restore_Amadeus
 323  87A1 CD ED 89     	call Inicia_Puntero_objeto
 324  87A4
 325  87A4 CD 6A 8F     	call Draw
 326  87A7 CD A0 7F     	call Guarda_foto_registros
 327  87AA
 328  87AA 11 76 84     	ld de,Amadeus_db
 329  87AD CD A9 8A     	call Store_Amadeus
 330  87B0
 331  87B0              ; 	INICIA DISPAROS !!!!!
 332  87B0
 333  87B0 CD A9 89     	call Inicia_Puntero_Disparo_Entidades
 334  87B3 CD B0 89     	call Inicia_Puntero_Disparo_Amadeus
 335  87B6
 336  87B6              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 337  87B6
 338  87B6 CD 93 89     5 call Inicia_punteros_de_cajas
 339  87B9 CD 70 8A     	call Restore_entidad
 340  87BC
 341  87BC 3A 2B 87     	ld a,(Ctrl_1)
 342  87BF CB 5F        	bit 3,a
 343  87C1 28 0F        	jr z,6F
 344  87C3
 345  87C3              ; Looop:
 346  87C3
 347  87C3 21 2B 87     	ld hl,Ctrl_1
 348  87C6 CB 9E        	res 3,(hl)
 349  87C8 3E 01        	ld a,1
 350  87CA 32 32 87     	ld (Numero_de_entidades),a
 351  87CD CD B7 89     	call Calcula_numero_de_malotes
 352  87D0 18 07        	jr 7F
 353  87D2
 354  87D2              ; ----------
 355  87D2
 356  87D2 3A 32 87     6 ld a,(Numero_de_entidades)
 357  87D5 3C           	inc a
 358  87D6 32 33 87     	ld (Numero_de_malotes),a
 359  87D9
 360  87D9 AF           7 xor a
 361  87DA
 362  87DA FB           2 ei
 363  87DB 28 FD        	jr z,2B
 364  87DD
 365  87DD 3A 51 87     	ld a,(Secundero)
 366  87E0 47           	ld b,a
 367  87E1 3A 52 87     	ld a,(Activa_loop)
 368  87E4 B8           	cp b
 369  87E5 28 08        	jr z,8F
 370  87E7
 371  87E7 21 2B 87     	ld hl,Ctrl_1
 372  87EA CB E6        	set 4,(hl)
 373  87EC AF           	xor a
 374  87ED 18 EB        	jr 2B
 375  87EF
 376  87EF 3E 01        8 ld a,1
 377  87F1 32 32 87     	ld (Numero_de_entidades),a
 378  87F4 21 2B 87     	ld hl,Ctrl_1
 379  87F7 CB A6        	res 4,(hl)
 380  87F9 F3           	di
 381  87FA
 382  87FA C3 73 87     	jp 4B
 383  87FD
 384  87FD              ; -----------------------------------------------------------------------------------
 385  87FD
 386  87FD              Frame
 387  87FD
 388  87FD              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 389  87FD              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 390  87FD
 391  87FD              ; PINTAMOS.
 392  87FD
 393  87FD 3E 02            ld a,2
 394  87FF D3 FE            out ($fe),a
 395  8801 CD 6E 92     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 396  8804 CD A7 92     	call Extrae_foto_disparos
 397  8807 3E 01            ld a,1
 398  8809 D3 FE            out ($fe),a
 399  880B
 400  880B              ;	jr $
 401  880B              ; ----------------------------------------------------------------------
 402  880B
 403  880B              ; RELOJES.
 404  880B
 405  880B 21 50 87     	ld hl,Contador_de_frames
 406  880E 34           	inc (hl)
 407  880F 3E 3C        	ld a,60
 408  8811 BE           	cp (hl)
 409  8812 20 0D        	jr nz,13F
 410  8814
 411  8814 36 00        	ld (hl),0
 412  8816
 413  8816 21 51 87     	ld hl,Secundero
 414  8819 34           	inc (hl)
 415  881A 3E 3C        	ld a,60
 416  881C BE           	cp (hl)
 417  881D 20 02        	jr nz,13F
 418  881F
 419  881F 36 00        	ld (hl),0
 420  8821
 421  8821 21 53 87     13 ld hl,Habilita_disparo_Amadeus
 422  8824 11 55 87     	ld de,Temporiza_disparo_Amadeus
 423  8827 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 424  882A
 425  882A 21 56 87     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 426  882D 11 58 87     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 427  8830 CD D5 7F     	call Habilita_disparos
 428  8833
 429  8833              ; COLISIONES.
 430  8833
 431  8833 CD 04 8F     	call Selector_de_impactos
 432  8836
 433  8836              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 434  8836              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 435  8836              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 436  8836
 437  8836 AF           	xor a
 438  8837 32 45 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 439  883A
 440  883A CD 93 89     	call Inicia_punteros_de_cajas
 441  883D CD 70 8A     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 442  8840              ; 														; _ en DRAW.
 443  8840 3A EE 86     	ld a,(Filas)
 444  8843 A7           	and a
 445  8844 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 446  8846 CD 82 8A     	call Incrementa_punteros_de_cajas
 447  8849 18 F2        	jr 12B
 448  884B
 449  884B              ; ---------------------------------------------------------------------------------------
 450  884B
 451  884B CD 82 8D     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 452  884E 21 00 70     	ld hl,Album_de_fotos
 453  8851 22 3C 87         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 454  8854              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 455  8854 3A 32 87     	ld a,(Numero_de_entidades)
 456  8857 47               ld b,a
 457  8858 A7           	and a
 458  8859 20 16        	jr nz,2F
 459  885B
 460  885B 21 2B 87     	ld hl,Ctrl_1
 461  885E CB 66        	bit 4,(hl)
 462  8860 20 66        	jr nz,4F
 463  8862
 464  8862 21 2B 87     	ld hl,Ctrl_1
 465  8865 CB DE        	set 3,(hl)											; Señal de Loop activada.
 466  8867
 467  8867 3A 51 87     	ld a,(Secundero)
 468  886A 3C           	inc a
 469  886B 3C           	inc a
 470  886C 32 52 87     	ld (Activa_loop),a									; A los 2 seg. se repite la oleada de entidades.
 471  886F
 472  886F 18 57        	jr 4F
 473  8871
 474  8871              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 475  8871
 476  8871              ; Código que ejecutamos con cada entidad:
 477  8871
 478  8871              ; Impacto ???
 479  8871
 480  8871 C5           2 push bc 												; Nº de entidades.
 481  8872
 482  8872 3A 07 87     	ld a,(Impacto)
 483  8875 A7           	and a
 484  8876 28 0A        	jr z,8F
 485  8878
 486  8878              ; Hay Impacto en esta entidad.
 487  8878
 488  8878 CD 4A 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 489  887B CD B2 8A     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 490  887E 21 32 87     	ld hl,Numero_de_entidades							; Una alimaña menos.
 491  8881 35           	dec (hl)
 492  8882
 493  8882              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 494  8882              ; _con las coordenadas de la entidad almacenada en DRAW.
 495  8882
 496  8882 3A 2B 87     8 ld a,(Ctrl_1)
 497  8885 CB 57        	bit 2,a
 498  8887 28 20        	jr z,7F
 499  8889
 500  8889 2A 48 87     	ld hl,(Coordenadas_disparo_certero)
 501  888C EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 502  888D              ;														; E contiene la coordenada_X del disparo.
 503  888D 2A F4 86     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 504  8890              ;														; H Coordenado_y de la entidad.
 505  8890 A7           	and a
 506  8891 ED 52        	sbc hl,de
 507  8893
 508  8893 CD 3B 8F     	call Determina_resultado_comparativa
 509  8896 04           	inc b
 510  8897 05           	dec b
 511  8898
 512  8898              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 513  8898              ;	jr z,$
 514  8898              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 515  8898
 516  8898 28 0F        	jr z,7F
 517  889A
 518  889A              ; ----- ----- -----
 519  889A
 520  889A 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 521  889C 32 07 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 522  889F 21 2B 87     	ld hl,Ctrl_1
 523  88A2 CB 96        	res 2,(hl)
 524  88A4 21 48 87     	ld hl,Coordenadas_disparo_certero
 525  88A7 36 00        	ld (hl),0
 526  88A9
 527  88A9
 528  88A9 CD FB 88     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 529  88AC
 530  88AC 3A 1C 87     	ld a,(Ctrl_0)
 531  88AF CB 67        	bit 4,a
 532  88B1 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 533  88B3
 534  88B3              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 535  88B3              ; [[[
 536  88B3 CD 0B 8B     	call Detecta_disparo_entidad
 537  88B6              ; ]]]
 538  88B6 CD 5A 89     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 539  88B9
 540  88B9 21 1C 87     	ld hl,Ctrl_0
 541  88BC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 542  88BE AF           	xor a
 543  88BF 32 1D 87     	ld (Obj_dibujado),a
 544  88C2
 545  88C2 CD 35 8A     6 call Store_Restore_cajas
 546  88C5
 547  88C5 C1           	pop bc
 548  88C6 10 A9        	djnz 2B
 549  88C8
 550  88C8              ; Tras la gestión de las entidades, ... AMADEUS.
 551  88C8
 552  88C8 CD 97 8A     4 call Restore_Amadeus
 553  88CB
 554  88CB 3A 07 87     	ld a,(Impacto)
 555  88CE A7           	and a
 556  88CF 20 FE        	jr nz,$
 557  88D1
 558  88D1              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 559  88D1
 560  88D1 CD 2B 89     	call Mov_Amadeus
 561  88D4
 562  88D4 3A 1C 87     	ld a,(Ctrl_0)
 563  88D7 CB 67        	bit 4,a
 564  88D9 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 565  88DB
 566  88DB CD 5A 89     	call Guarda_foto_entidad_a_pintar
 567  88DE
 568  88DE 21 1C 87     3 ld hl,Ctrl_0
 569  88E1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 570  88E3 AF           	xor a
 571  88E4 32 1D 87     	ld (Obj_dibujado),a
 572  88E7
 573  88E7 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 574  88EA CD A9 8A     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 575  88ED
 576  88ED CD A0 8D     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 577  88F0
 578  88F0              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 579  88F0
 580  88F0 CD CF 89     	call Calcula_numero_de_disparotes
 581  88F3 CD B7 89     9 call Calcula_numero_de_malotes
 582  88F6
 583  88F6 3E 04        	ld a,4
 584  88F8 D3 FE        	out ($fe),a
 585  88FA
 586  88FA C9           	ret
 587  88FB
 588  88FB              ; --------------------------------------------------------------------------------------------------------------
 589  88FB              ;
 590  88FB              ;	27/03/23
 591  88FB
 592  88FB              Mov_obj
 593  88FB
 594  88FB              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 595  88FB
 596  88FB AF           	xor a
 597  88FC 32 1D 87     	ld (Obj_dibujado),a
 598  88FF 32 1C 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 599  8902              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 600  8902              ; 														; _de la entidad.
 601  8902 CD 64 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 602  8905              ;														; Obj_dibujado="0".
 603  8905              ; Movemos Entidades malignas.
 604  8905
 605  8905 21 1F 87     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 606  8908 34           	inc (hl)
 607  8909 35           	dec (hl)                                            ; Salimos de la rutina.
 608  890A C8           	ret z
 609  890B
 610  890B CD 1C 99     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 611  890E
 612  890E 3A 1C 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 613  8911 CB 67        	bit 4,a
 614  8913 C8           	ret z
 615  8914
 616  8914              ; Ha habido desplazamiento de la entidad maligna.
 617  8914              ; Ha llegado a zona de AMADEUS ???
 618  8914
 619  8914 3A F5 86     	ld a,(Coordenada_y)
 620  8917 FE 14        	cp $14
 621  8919 D4 D1 8C     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 622  891C              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 623  891C              ; ---------
 624  891C
 625  891C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 626  891E 32 1D 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 627  8921 CD 64 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 628  8924 CD 7B 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 629  8927 CD 4A 89     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 630  892A C9           	ret													; _de la misma.
 631  892B
 632  892B              ; --------------------------------------------------------------------------------------------------------------
 633  892B              ;
 634  892B              ;	29/1/23
 635  892B
 636  892B              Mov_Amadeus
 637  892B
 638  892B AF           	xor a
 639  892C 32 1D 87     	ld (Obj_dibujado),a
 640  892F CD 64 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 641  8932              ;														; Obj_dibujado="0".
 642  8932              ; Movemos Amadeus.
 643  8932
 644  8932 CD D4 8A     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 645  8935 3A 1C 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 646  8938 CB 67        	bit 4,a
 647  893A C8           	ret z
 648  893B
 649  893B              ; ---------
 650  893B
 651  893B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 652  893D 32 1D 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 653  8940 CD 64 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 654  8943 CD 7B 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 655  8946 CD 4A 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 656  8949 C9           	ret													; _de la nave.
 657  894A
 658  894A              ; --------------------------------------------------------------------------------------------------------------
 659  894A              ;
 660  894A              ;	31/01/23
 661  894A              ;
 662  894A              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 663  894A
 664  894A              Guarda_foto_entidad_a_borrar
 665  894A
 666  894A CD 44 92     	call Prepara_draw
 667  894D CD 7E 91     	call calcula_CColumnass
 668  8950 CD B5 91     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 669  8953 CD 0A 92     	call Define_rutina_de_impresion
 670  8956 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 671  8959 C9           	ret
 672  895A
 673  895A              ; --------------------------------------------------------------------------------------------------------------
 674  895A              ;
 675  895A              ;	31/01/23
 676  895A              ;
 677  895A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 678  895A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 679  895A
 680  895A              Guarda_foto_entidad_a_pintar
 681  895A
 682  895A CD 87 89     	call Repone_pintar
 683  895D CD 6A 8F     	call Draw
 684  8960 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 685  8963 C9           	ret
 686  8964
 687  8964              ; --------------------------------------------------------------------------------------------------------------
 688  8964              ;
 689  8964              ;
 690  8964
 691  8964 21 EE 86     Prepara_var_pintado_borrado	ld hl,Filas
 692  8967 3A 1D 87     	ld a,(Obj_dibujado)
 693  896A A7           	and a
 694  896B 28 05        	jr z,1F
 695  896D 11 12 87     	ld de,Variables_de_pintado
 696  8970 18 03        	jr 2F
 697  8972 11 08 87     1 ld de,Variables_de_borrado
 698  8975 01 08 00     2 ld bc,8
 699  8978 ED B0        	ldir
 700  897A C9           	ret
 701  897B
 702  897B              ; --------------------------------------------------------------------------------------------------------------
 703  897B
 704  897B 21 08 87     Repone_borrar ld hl,Variables_de_borrado
 705  897E 11 EE 86     	ld de,Filas
 706  8981 01 08 00     	ld bc,8
 707  8984 ED B0        	ldir
 708  8986 C9           	ret
 709  8987
 710  8987 21 12 87     Repone_pintar ld hl,Variables_de_pintado
 711  898A 11 EE 86     	ld de,Filas
 712  898D 01 08 00     	ld bc,8
 713  8990 ED B0        	ldir
 714  8992 C9           	ret
 715  8993
 716  8993              ; *************************************************************************************************************************************************************
 717  8993              ;
 718  8993              ; 8/1/23
 719  8993              ;
 720  8993              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 721  8993              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 722  8993              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 723  8993
 724  8993              ; Destruye HL y DE !!!!!
 725  8993
 726  8993              Inicia_punteros_de_cajas
 727  8993
 728  8993 21 68 84     	ld hl,Indice_de_cajas
 729  8996 CD E7 89         call Extrae_address
 730  8999 22 2C 87         ld (Puntero_store_caja),hl
 731  899C 21 6A 84     	ld hl,Indice_de_cajas+2
 732  899F 22 30 87     	ld (Indice_restore_caja),hl
 733  89A2 CD E7 89     	call Extrae_address
 734  89A5 22 2E 87     	ld (Puntero_restore_caja),hl
 735  89A8 C9               ret
 736  89A9
 737  89A9              ; *************************************************************************************************************************************************************
 738  89A9              ;
 739  89A9              ; 8/1/23
 740  89A9              ;
 741  89A9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 742  89A9
 743  89A9 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 744  89AC 22 41 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 745  89AF C9           	ret
 746  89B0 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 747  89B3 22 43 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 748  89B6 C9           	ret
 749  89B7
 750  89B7              ; -------------------------------------------------------------------------------------------------------------
 751  89B7              ;
 752  89B7              ; 28/2/23
 753  89B7              ;
 754  89B7
 755  89B7              Calcula_numero_de_malotes
 756  89B7
 757  89B7 21 00 70     	ld hl,Album_de_fotos
 758  89BA EB           	ex de,hl
 759  89BB 2A 3C 87     	ld hl,(Stack_snapshot)
 760  89BE
 761  89BE 06 00        	ld b,0
 762  89C0 7D           	ld a,l
 763  89C1 93           	sub e
 764  89C2 28 07        	jr z,1F
 765  89C4
 766  89C4              ; Nº de malotes no es "0".
 767  89C4
 768  89C4 D6 06        2 sub 6
 769  89C6 04           	inc b
 770  89C7 A7           	and a
 771  89C8 20 FA        	jr nz,2B
 772  89CA 78           	ld a,b
 773  89CB
 774  89CB 32 33 87     1 ld (Numero_de_malotes),a
 775  89CE C9           	ret
 776  89CF
 777  89CF              ; -------------------------------------------------------------------------------------------------------------
 778  89CF              ;
 779  89CF              ; 28/2/23
 780  89CF              ;
 781  89CF
 782  89CF              Calcula_numero_de_disparotes
 783  89CF
 784  89CF 21 60 70     	ld hl,Album_de_fotos_disparos
 785  89D2 EB           	ex de,hl
 786  89D3 2A 3E 87     	ld hl,(Stack_snapshot_disparos)
 787  89D6
 788  89D6 06 00        	ld b,0
 789  89D8 7D           	ld a,l
 790  89D9 93           	sub e
 791  89DA 28 07        	jr z,1F
 792  89DC
 793  89DC              ; Nº de malotes no es "0".
 794  89DC
 795  89DC D6 06        2 sub 6
 796  89DE 04           	inc b
 797  89DF A7           	and a
 798  89E0 20 FA        	jr nz,2B
 799  89E2 78           	ld a,b
 800  89E3
 801  89E3 32 40 87     1 ld (Numero_de_disparotes),a
 802  89E6 C9           	ret
 803  89E7              ; *************************************************************************************************************************************************************
 804  89E7              ;
 805  89E7              ; 20/10/22
 806  89E7              ;
 807  89E7              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 808  89E7              ;
 809  89E7              ; Destruye el puntero y DE !!!!!
 810  89E7
 811  89E7 5E           Extrae_address ld e,(hl)
 812  89E8 23           	inc hl
 813  89E9 56           	ld d,(hl)
 814  89EA 2B           	dec hl
 815  89EB EB           	ex de,hl
 816  89EC C9           	ret
 817  89ED
 818  89ED              ; *************************************************************************************************************************************************************
 819  89ED              ;
 820  89ED              ;	7/2/23
 821  89ED              ;
 822  89ED              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 823  89ED              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 824  89ED              ;
 825  89ED              ;   Destruye HL y BC !!!!!,
 826  89ED              ;
 827  89ED              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 828  89ED              ;					"0" ..... Izquierda.
 829  89ED
 830  89ED              Inicia_Puntero_objeto
 831  89ED
 832  89ED 3A 02 87     	ld a,(Cuad_objeto)
 833  89F0 E6 01        	and 1
 834  89F2 F5           	push af
 835  89F3 CC 11 8A     	call z,Inicia_puntero_objeto_izq
 836  89F6 F1           	pop af
 837  89F7 28 2B        	jr z,1F
 838  89F9 CD FE 89     	call Inicia_puntero_objeto_der
 839  89FC 18 26        	jr 1F
 840  89FE
 841  89FE              ; Arrancamos desde la parte izquierda de la pantalla.
 842  89FE              ; Iniciamos (Indice_Sprite_der).
 843  89FE
 844  89FE 2A F8 86     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 845  8A01 22 FC 86     	ld (Puntero_DESPLZ_der),hl
 846  8A04 CD E7 89     	call Extrae_address
 847  8A07 22 F2 86     	ld (Puntero_objeto),hl
 848  8A0A
 849  8A0A 2A FA 86     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 850  8A0D 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 851  8A10 C9           	ret
 852  8A11
 853  8A11              ; Arrancamos desde la parte derecha de la pantalla.
 854  8A11              ; Iniciamos (Indice_Sprite_izq).
 855  8A11
 856  8A11 2A FA 86     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 857  8A14 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 858  8A17 CD E7 89     	call Extrae_address
 859  8A1A 22 F2 86     	ld (Puntero_objeto),hl
 860  8A1D
 861  8A1D 2A F8 86     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 862  8A20 22 FC 86     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 863  8A23 C9           	ret
 864  8A24
 865  8A24              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 866  8A24
 867  8A24 21 38 83     1 ld hl,Amadeus
 868  8A27 ED 4B F2 86  	ld bc,(Puntero_objeto)
 869  8A2B B7 ED 42     	sub hl,bc
 870  8A2E C0           	ret nz
 871  8A2F 21 1C 87     	ld hl,Ctrl_0
 872  8A32 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 873  8A34 C9           	ret 												; _de nuestra nave en los extremos.
 874  8A35
 875  8A35              ; *************************************************************************************************************************************************************
 876  8A35              ;
 877  8A35              ;	14/5/23
 878  8A35              ;
 879  8A35              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 880  8A35              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 881  8A35
 882  8A35              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 883  8A35              ;	_de la 2ª y 3ª entidad respectivamente.
 884  8A35
 885  8A35              Store_Restore_cajas
 886  8A35
 887  8A35 E5           	push hl
 888  8A36 D5           	push de
 889  8A37 C5            	push bc
 890  8A38
 891  8A38              ;	STORE !!!!!
 892  8A38              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 893  8A38
 894  8A38 21 EE 86     	ld hl,Filas
 895  8A3B ED 5B 2C 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 896  8A3F 01 3D 00     	ld bc,61
 897  8A42 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 898  8A44
 899  8A44              ; 	Entidad_sospechosa. 20/4/23
 900  8A44
 901  8A44 3A 07 87     	ld a,(Impacto)
 902  8A47 A7           	and a
 903  8A48 28 0C        	jr z,1F
 904  8A4A
 905  8A4A 2A 2C 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 906  8A4D 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 907  8A50 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 908  8A51 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 909  8A53 22 46 87     	ld (Entidad_sospechosa_de_colision),hl
 910  8A56
 911  8A56              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 912  8A56
 913  8A56 2A 2E 87     1 ld hl,(Puntero_restore_caja)
 914  8A59 7E           	ld a,(hl)
 915  8A5A A7           	and a
 916  8A5B F5           	push af
 917  8A5C 28 08        	jr z,2F
 918  8A5E
 919  8A5E 11 EE 86     	ld de,Filas
 920  8A61 01 3D 00     	ld bc,61
 921  8A64 ED B0        	ldir
 922  8A66
 923  8A66 CD 82 8A     2 call Incrementa_punteros_de_cajas
 924  8A69 F1           	pop af
 925  8A6A 28 EA        	jr z,1B
 926  8A6C
 927  8A6C C1           	pop bc
 928  8A6D D1           	pop de
 929  8A6E E1           	pop hl
 930  8A6F
 931  8A6F C9           	ret
 932  8A70
 933  8A70              ; **************************************************************************************************
 934  8A70              ;
 935  8A70              ;	12/05/23
 936  8A70              ;
 937  8A70              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 938  8A70
 939  8A70 E5           Restore_entidad push hl
 940  8A71 D5           	push de
 941  8A72 C5            	push bc
 942  8A73
 943  8A73 2A 2C 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 944  8A76 11 EE 86     	ld de,Filas
 945  8A79 01 3D 00     	ld bc,61
 946  8A7C ED B0        	ldir
 947  8A7E
 948  8A7E C1           	pop bc
 949  8A7F D1           	pop de
 950  8A80 E1           	pop hl
 951  8A81 C9           	ret
 952  8A82
 953  8A82
 954  8A82              ; **************************************************************************************************
 955  8A82              ;
 956  8A82              ;	08/05/23
 957  8A82              ;
 958  8A82              ;	Incrementamos los dos punteros de entidades. (+1).
 959  8A82
 960  8A82 2A 2E 87     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 961  8A85 22 2C 87     	ld (Puntero_store_caja),hl
 962  8A88 2A 30 87     	ld hl,(Indice_restore_caja)
 963  8A8B 23           	inc hl
 964  8A8C 23           	inc hl
 965  8A8D 22 30 87     	ld (Indice_restore_caja),hl
 966  8A90 CD E7 89         call Extrae_address
 967  8A93 22 2E 87         ld (Puntero_restore_caja),hl
 968  8A96 C9               ret
 969  8A97
 970  8A97              ; **************************************************************************************************
 971  8A97              ;
 972  8A97              ;	25/01/23
 973  8A97              ;
 974  8A97              ;	Restore_Amadeus
 975  8A97              ;
 976  8A97              ;	Cargamos en DRAW los parámetros de Amadeus.
 977  8A97              ;
 978  8A97
 979  8A97 E5           Restore_Amadeus	push hl
 980  8A98 D5           	push de
 981  8A99 C5            	push bc
 982  8A9A 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 983  8A9D 11 EE 86     	ld de,Filas
 984  8AA0 01 3D 00     	ld bc,61
 985  8AA3 ED B0        	ldir
 986  8AA5 C1           	pop bc
 987  8AA6 D1           	pop de
 988  8AA7 E1           	pop hl
 989  8AA8 C9           	ret
 990  8AA9
 991  8AA9              ; *************************************************************************************************************************************************************
 992  8AA9              ;
 993  8AA9              ;	29/04/23
 994  8AA9              ;
 995  8AA9              ;	Store_Amadeus
 996  8AA9              ;
 997  8AA9              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 998  8AA9              ;
 999  8AA9              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1000  8AA9              ;
1001  8AA9              ;	DESTRUYE: HL y BC y DE.
1002  8AA9
1003  8AA9 21 EE 86     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1004  8AAC 01 3D 00     	ld bc,61
1005  8AAF ED B0        	ldir
1006  8AB1 C9           	ret
1007  8AB2
1008  8AB2              ; -----------------------------------------------------------
1009  8AB2              ;
1010  8AB2              ;	27/04/23
1011  8AB2              ;
1012  8AB2              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1013  8AB2              ;
1014  8AB2              ;	Destruye: HL,BC,DE,A
1015  8AB2
1016  8AB2 21 EE 86     Borra_datos_entidad ld hl,Filas
1017  8AB5 01 3C 00     	ld bc,60
1018  8AB8 AF           	xor a
1019  8AB9 77           	ld (hl),a
1020  8ABA 11 EF 86     	ld de,Filas+1
1021  8ABD ED B0        	ldir
1022  8ABF C9           	ret
1023  8AC0
1024  8AC0              ; -----------------------------------------------------------
1025  8AC0
1026  8AC0              ; Teclado.
1027  8AC0
1028  8AC0 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1029  8AC2 DB FE        	in a,($fe)
1030  8AC4 E6 01        	and $01
1031  8AC6 28 02        	jr z,1f
1032  8AC8 18 F6        	jr Pulsa_ENTER
1033  8ACA C9           1 ret
1034  8ACB
1035  8ACB              ; **************************************************************************************************
1036  8ACB              ;
1037  8ACB              ; Temporización.
1038  8ACB
1039  8ACB              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1040  8ACB              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1041  8ACB              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1042  8ACB              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1043  8ACB
1044  8ACB              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1045  8ACB              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1046  8ACB              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1047  8ACB
1048  8ACB              ; A partir de $4f61 no hace falta DELAY.
1049  8ACB
1050  8ACB              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1051  8ACB
1052  8ACB 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1053  8ACE 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1054  8ACF 78           	LD A,B
1055  8AD0 A7           	AND A
1056  8AD1 20 FB        	JR NZ,wait
1057  8AD3 C9           	RET
1058  8AD4
1059  8AD4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1060  8AD4              ;
1061  8AD4              ;	5/3/23
1062  8AD4              ;
1063  8AD4              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1064  8AD4
1065  8AD4              Movimiento_Amadeus
1066  8AD4
1067  8AD4              ; Disparo.
1068  8AD4
1069  8AD4 3A 53 87     	ld a,(Habilita_disparo_Amadeus)
1070  8AD7 A7           	and a
1071  8AD8 20 02        	jr nz,1F
1072  8ADA 18 15        	jr 2F
1073  8ADC
1074  8ADC 3E F7        1 ld a,$f7													; "5" para disparar.
1075  8ADE DB FE        	in a,($fe)
1076  8AE0 E6 10        	and $10
1077  8AE2
1078  8AE2 F5           	push af
1079  8AE3 CC 4D 8B     	call z,Genera_disparo
1080  8AE6 F1           	pop af
1081  8AE7 20 08        	jr nz,2F
1082  8AE9
1083  8AE9 3A 53 87     	ld a,(Habilita_disparo_Amadeus)
1084  8AEC EE 01        	xor 1
1085  8AEE 32 53 87     	ld (Habilita_disparo_Amadeus),a
1086  8AF1
1087  8AF1 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1088  8AF3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1089  8AF5 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1090  8AF7 CC BC 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1091  8AFA 3E F7        	ld a,$f7
1092  8AFC DB FE        	in a,($fe)
1093  8AFE E6 01        	and $01
1094  8B00 C8           	ret z
1095  8B01
1096  8B01 3E F7        	ld a,$f7
1097  8B03 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1098  8B05 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1099  8B07 CC 9E 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1100  8B0A C9           	ret
1101  8B0B
1102  8B0B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1103  8B0B              ;
1104  8B0B              ;	Rutina provisional para que los malotes cagen balas.
1105  8B0B
1106  8B0B              Detecta_disparo_entidad
1107  8B0B
1108  8B0B 3A 56 87     	ld a,(Habilita_disparo_entidad)
1109  8B0E A7           	and a
1110  8B0F C8           	ret z
1111  8B10 3E 7F        	ld a,$7f
1112  8B12 DB FE        	in a,($fe)
1113  8B14 E6 01        	and 1
1114  8B16 C0           	ret nz
1115  8B17 CD 4D 8B     	call Genera_disparo
1116  8B1A C9           	ret
1117  8B1B
1118  8B1B              ; Pinta indicadores de FILAS. ------------------------------------------------------
1119  8B1B
1120  8B1B 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1121  8B1E
1122  8B1E              ; ----------
1123  8B1E 06 20        	ld b,32
1124  8B20 E5           2 push hl
1125  8B21 C5           	push bc
1126  8B22              ; ----------
1127  8B22
1128  8B22 06 BF        	ld b,$bf
1129  8B24 36 80        1 ld (hl),%10000000
1130  8B26 CD 50 92     	call NextScan
1131  8B29 10 F9        	djnz 1B
1132  8B2B
1133  8B2B              ; ----------
1134  8B2B C1           	pop bc
1135  8B2C E1           	pop hl
1136  8B2D 2C           	inc l
1137  8B2E 10 F0        	djnz 2B
1138  8B30              ; ----------
1139  8B30
1140  8B30 06 03        	ld b,3
1141  8B32 21 00 47         ld hl,$4700
1142  8B35 CD 3B 8B     3 call Bucle_1
1143  8B38 10 FB            djnz 3B
1144  8B3A C9               ret
1145  8B3B
1146  8B3B C5           Bucle_1 push bc
1147  8B3C E5                   push hl
1148  8B3D D1                   pop de
1149  8B3E 13                   inc de
1150  8B3F 01 FF 00             ld bc,255
1151  8B42 36 FF                ld (hl),255
1152  8B44 ED B0                ldir
1153  8B46 23                   inc hl
1154  8B47 3E 07                ld a,7
1155  8B49 84                   add a,h
1156  8B4A 67                   ld h,a
1157  8B4B C1                   pop bc
1158  8B4C C9                   ret
1159  8B4D
1160  8B4D              ; ---------------------------------------------------------------
1161  8B4D
1162  8B4D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8B4D              ; ******************************************************************************************************************************************************************************************
   2+ 8B4D              ;
   3+ 8B4D              ;   17/04/23
   4+ 8B4D              ;
   5+ 8B4D              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8B4D              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8B4D              ;
   8+ 8B4D              ;
   9+ 8B4D              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8B4D              ;
  11+ 8B4D              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8B4D              ;               _ hacen las entidades hacia abajo.
  13+ 8B4D              ;
  14+ 8B4D              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8B4D              ;
  16+ 8B4D              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8B4D              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8B4D              ;
  19+ 8B4D              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8B4D              ;           _ la bala.
  21+ 8B4D              ;
  22+ 8B4D              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8B4D              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8B4D              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8B4D              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8B4D              ;           _ en el momento de generarse la bala)).
  27+ 8B4D
  28+ 8B4D              Genera_disparo
  29+ 8B4D
  30+ 8B4D              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8B4D              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8B4D              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8B4D              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8B4D              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8B4D              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8B4D              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8B4D
  38+ 8B4D              ; Exclusiones:
  39+ 8B4D
  40+ 8B4D 3A 26 87         ld a,(Columnas)
  41+ 8B50 47               ld b,a
  42+ 8B51 3A EF 86         ld a,(Columns)
  43+ 8B54 B8               cp b
  44+ 8B55 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8B56
  46+ 8B56              ; ----- ----- -----
  47+ 8B56
  48+ 8B56 3A 1C 87         ld a,(Ctrl_0)
  49+ 8B59 CB 77            bit 6,a
  50+ 8B5B 20 06            jr nz,14F
  51+ 8B5D
  52+ 8B5D 3A F5 86         ld a,(Coordenada_y)
  53+ 8B60 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8B62 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8B63
  56+ 8B63 21 00 80     14 ld hl,Indice_disparo
  57+ 8B66 3A F6 86         ld a,(CTRL_DESPLZ)
  58+ 8B69 4F               ld c,a
  59+ 8B6A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8B6C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8B6C              ;                                            ""        ""       "f9", B="1"
  62+ 8B6C              ;                                            ""        ""       "fb", B="2"
  63+ 8B6C              ;                                            ""        ""       "fb", B="3"
  64+ 8B6C A7               and a
  65+ 8B6D 28 10            jr z,1F
  66+ 8B6F E6 01            and 1
  67+ 8B71 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8B72
  69+ 8B72 79               ld a,c
  70+ 8B73 16 F9            ld d,$f9
  71+ 8B75 23           2 inc hl
  72+ 8B76 23               inc hl
  73+ 8B77 04               inc b
  74+ 8B78 BA               cp d
  75+ 8B79 28 04            jr z,1F
  76+ 8B7B 14               inc d
  77+ 8B7C 14               inc d
  78+ 8B7D 18 F6            jr 2B
  79+ 8B7F
  80+ 8B7F CD E7 89     1 call Extrae_address
  81+ 8B82 E5               push hl
  82+ 8B83 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8B85 DD 21 E3 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8B89
  85+ 8B89              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8B89              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8B89
  88+ 8B89 3A 1C 87         ld a,(Ctrl_0)
  89+ 8B8C CB 77            bit 6,a
  90+ 8B8E 20 04            jr nz,19F
  91+ 8B90
  92+ 8B90 AF               xor a
  93+ 8B91 32 56 87         ld (Habilita_disparo_entidad),a
  94+ 8B94
  95+ 8B94 3A 02 87     19 ld a,(Cuad_objeto)
  96+ 8B97 FE 02            cp 2
  97+ 8B99 38 66            jr c,3F
  98+ 8B9B 28 64            jr z,3F
  99+ 8B9D
 100+ 8B9D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8B9D
 102+ 8B9D E6 01            and 1
 103+ 8B9F 28 30            jr z,4F
 104+ 8BA1
 105+ 8BA1              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8BA1              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8BA1              ;
 108+ 8BA1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8BA1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8BA1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8BA1
 112+ 8BA1 2A F0 86     	ld hl,(Posicion_actual)
 113+ 8BA4
 114+ 8BA4              ;   Amadeus o entidad ???.
 115+ 8BA4
 116+ 8BA4 3A 1C 87         ld a,(Ctrl_0)
 117+ 8BA7 CB 77            bit 6,a
 118+ 8BA9 28 0A            jr z,8F
 119+ 8BAB
 120+ 8BAB              ; 	Dispara Amadeus.
 121+ 8BAB
 122+ 8BAB 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8BAD CD 5F 92         call PreviousScan
 124+ 8BB0 CD 5F 92         call PreviousScan
 125+ 8BB3
 126+ 8BB3              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8BB3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8BB3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8BB3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8BB3
 131+ 8BB3 18 11            jr 10F
 132+ 8BB5
 133+ 8BB5              ; 	Dispara Entidad.
 134+ 8BB5
 135+ 8BB5 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8BB8              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8BB8
 138+ 8BB8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8BB8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8BB8
 141+ 8BB8 C5               push bc
 142+ 8BB9 06 10            ld b,16
 143+ 8BBB CD 50 92     9 call NextScan
 144+ 8BBE 10 FB            djnz 9B
 145+ 8BC0 C1               pop bc
 146+ 8BC1 CD 2B 8C         call Ajusta_disparo_parte_izquierda
 147+ 8BC4 18 06            jr 17F
 148+ 8BC6
 149+ 8BC6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8BC6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8BC6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8BC6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8BC6
 154+ 8BC6 CD 2B 8C     10 call Ajusta_disparo_parte_izquierda
 155+ 8BC9 CD A0 8C         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8BCC              ;                                                      ; _al generar el disparo.
 157+ 8BCC
 158+ 8BCC              ; 	LLegados a este punto tendremos:
 159+ 8BCC              ;
 160+ 8BCC              ;       Puntero_objeto_disparo en IY.
 161+ 8BCC              ;       Rutinas_de_impresion en IX.
 162+ 8BCC              ;       Puntero_de_impresion en HL.
 163+ 8BCC              ;       Impacto/Dirección en BC.
 164+ 8BCC
 165+ 8BCC CD 33 8C     17 call Almacena_disparo
 166+ 8BCF 18 52            jr 6F                                             ; RET.
 167+ 8BD1
 168+ 8BD1              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8BD1              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8BD1              ;
 171+ 8BD1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8BD1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8BD1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8BD1
 175+ 8BD1 2A F0 86     4 ld hl,(Posicion_actual)
 176+ 8BD4
 177+ 8BD4              ;   Amadeus o entidad ???.
 178+ 8BD4
 179+ 8BD4 3A 1C 87         ld a,(Ctrl_0)
 180+ 8BD7 CB 77            bit 6,a
 181+ 8BD9 28 0A            jr z,11F
 182+ 8BDB
 183+ 8BDB              ; 	Dispara Amadeus.
 184+ 8BDB
 185+ 8BDB 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8BDD CD 5F 92         call PreviousScan
 187+ 8BE0 CD 5F 92         call PreviousScan
 188+ 8BE3
 189+ 8BE3              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8BE3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8BE3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8BE3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8BE3
 194+ 8BE3 18 11            jr 13F
 195+ 8BE5
 196+ 8BE5              ; 	Dispara Entidad.
 197+ 8BE5
 198+ 8BE5 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8BE8              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8BE8
 201+ 8BE8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8BE8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8BE8
 204+ 8BE8 C5               push bc
 205+ 8BE9 06 10            ld b,16
 206+ 8BEB CD 50 92     12 call NextScan
 207+ 8BEE 10 FB            djnz 12B
 208+ 8BF0 C1               pop bc
 209+ 8BF1
 210+ 8BF1 CD 24 8C         call Ajusta_disparo_parte_derecha
 211+ 8BF4 18 06            jr 18F
 212+ 8BF6
 213+ 8BF6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8BF6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8BF6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8BF6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8BF6
 218+ 8BF6 CD 24 8C     13 call Ajusta_disparo_parte_derecha
 219+ 8BF9 CD A0 8C         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8BFC              ;                                                       ; _al generar el disparo.
 221+ 8BFC
 222+ 8BFC              ; LLegados a este punto tendremos:
 223+ 8BFC              ;
 224+ 8BFC              ;       Puntero_objeto_disparo en IY.
 225+ 8BFC              ;       Rutinas_de_impresion en IX.
 226+ 8BFC              ;       Puntero_de_impresion en HL.
 227+ 8BFC              ;       Impacto/Dirección en BC.
 228+ 8BFC
 229+ 8BFC CD 33 8C     18 call Almacena_disparo
 230+ 8BFF 18 22            jr 6F                                               ; RET.
 231+ 8C01
 232+ 8C01              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8C01
 234+ 8C01 28 11        3 jr z,5F
 235+ 8C03
 236+ 8C03              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8C03              ;
 238+ 8C03              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8C03              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8C03              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8C03              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8C03
 243+ 8C03              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8C03              ;	   ""        ""       "f9", B="1"
 245+ 8C03              ;	   ""        ""       "fb", B="2"
 246+ 8C03              ; 	   ""        ""       "fb", B="3"
 247+ 8C03
 248+ 8C03 2A F0 86     	ld hl,(Posicion_actual)
 249+ 8C06 CD 50 92     	call NextScan
 250+ 8C09
 251+ 8C09              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8C09              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8C09              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8C09              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8C09
 256+ 8C09 CD 2B 8C         call Ajusta_disparo_parte_izquierda
 257+ 8C0C
 258+ 8C0C              ; 	No se produce impacto. B="$80"
 259+ 8C0C              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8C0C
 261+ 8C0C 01 80 80         ld bc,$8080
 262+ 8C0F
 263+ 8C0F              ; 	LLegados a este punto tendremos:
 264+ 8C0F              ;
 265+ 8C0F              ;       Puntero_objeto_disparo en IY.
 266+ 8C0F              ;       Rutinas_de_impresion en IX.
 267+ 8C0F              ;       Puntero_de_impresion en HL.
 268+ 8C0F              ;       Impacto/Dirección en BC.
 269+ 8C0F
 270+ 8C0F CD 33 8C         call Almacena_disparo
 271+ 8C12 18 0F            jr 6F                                           ; RET.
 272+ 8C14
 273+ 8C14              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8C14              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8C14              ;
 276+ 8C14              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8C14              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8C14              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8C14              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8C14
 281+ 8C14 2A F0 86     5 ld hl,(Posicion_actual)
 282+ 8C17 CD 50 92     	call NextScan
 283+ 8C1A
 284+ 8C1A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8C1A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8C1A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8C1A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8C1A
 289+ 8C1A CD 24 8C         call Ajusta_disparo_parte_derecha
 290+ 8C1D
 291+ 8C1D              ; 	No se produce impacto. B="$80"
 292+ 8C1D              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8C1D
 294+ 8C1D 01 80 80     15 ld bc,$8080
 295+ 8C20
 296+ 8C20              ; 	LLegados a este punto tendremos:
 297+ 8C20              ;
 298+ 8C20              ;       Puntero_objeto_disparo en IY.
 299+ 8C20              ;       Rutinas_de_impresion en IX.
 300+ 8C20              ;       Puntero_de_impresion en HL.
 301+ 8C20              ;       Impacto/Dirección en BC.
 302+ 8C20
 303+ 8C20 CD 33 8C         call Almacena_disparo
 304+ 8C23
 305+ 8C23 C9           6 ret
 306+ 8C24
 307+ 8C24              ; ----------------------------------------------------------------
 308+ 8C24              ;
 309+ 8C24              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8C24              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8C24              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8C24
 313+ 8C24 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8C25 FE 02            cp 2
 315+ 8C27 38 01            jr c,1F
 316+ 8C29 23               inc hl
 317+ 8C2A C9           1 ret
 318+ 8C2B
 319+ 8C2B 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8C2C FE 01        	cp 1
 321+ 8C2E 20 01        	jr nz,1F
 322+ 8C30 2B           	dec hl
 323+ 8C31 2B           1 dec hl
 324+ 8C32 C9               ret
 325+ 8C33
 326+ 8C33              ; ----------------------------------------------------------------
 327+ 8C33              ;
 328+ 8C33              ;   25/02/23
 329+ 8C33              ;
 330+ 8C33              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8C33              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8C33              ;
 333+ 8C33              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8C33              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8C33
 336+ 8C33              Almacena_disparo
 337+ 8C33
 338+ 8C33 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8C34 F1               pop af
 340+ 8C35 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8C36
 342+ 8C36 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8C37 E6 01            and 1
 344+ 8C39 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8C3B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8C3B              ; 	Dispara AMADEUS.
 347+ 8C3B
 348+ 8C3B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8C3B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8C3B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8C3B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8C3B
 353+ 8C3B C5               push bc
 354+ 8C3C 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8C3F 2A 43 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8C42 A7               and a
 357+ 8C43 ED 42            sbc hl,bc
 358+ 8C45 CC B0 89         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8C48 C1               pop bc
 360+ 8C49 28 54            jr z,4F
 361+ 8C4B
 362+ 8C4B 2A 43 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8C4E 23               inc hl
 364+ 8C4F 23               inc hl
 365+ 8C50 22 43 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8C53              ;                                                   ; _ Disparo_(+1).
 367+ 8C53 18 18            jr 2F
 368+ 8C55
 369+ 8C55              ; Dispara una entidad.
 370+ 8C55
 371+ 8C55 C5           1 push bc
 372+ 8C56 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8C59 2A 41 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8C5C A7               and a
 375+ 8C5D ED 42            sbc hl,bc
 376+ 8C5F CC A9 89         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8C62 C1               pop bc
 378+ 8C63 28 3A            jr z,4F
 379+ 8C65
 380+ 8C65 2A 41 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8C68 23               inc hl
 382+ 8C69 23               inc hl
 383+ 8C6A 22 41 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8C6D              ;                                                   ; _ Disparo_(+1).
 385+ 8C6D CD E7 89     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8C70              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8C70              ;
 388+ 8C70              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8C70              ;                                                     Rutinas_de_impresion en IX.
 390+ 8C70              ;                                                     Puntero_de_impresion en HL.
 391+ 8C70              ;                                                     Impacto/Dirección en BC.
 392+ 8C70
 393+ 8C70 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8C71 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8C72 23               inc hl                                          ; _ al siguiente.
 396+ 8C73 A7               and a
 397+ 8C74 20 C0            jr nz,3B
 398+ 8C76
 399+ 8C76 08               ex af,af
 400+ 8C77 ED 73 38 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8C7B F9               ld sp,hl
 402+ 8C7C
 403+ 8C7C DD E5            push ix                                         ; Rutina de impresión.
 404+ 8C7E F5               push af                                         ; Puntero de impresión.
 405+ 8C7F FD E5            push iy                                         ; Puntero objeto.
 406+ 8C81 C5               push bc                                         ; Control.
 407+ 8C82
 408+ 8C82 ED 7B 38 87      ld sp,(Stack)
 409+ 8C86
 410+ 8C86              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8C86
 412+ 8C86 21 2B 87     	ld hl,Ctrl_1
 413+ 8C89 CB C6        	set 0,(hl)
 414+ 8C8B
 415+ 8C8B DD E5        	push ix
 416+ 8C8D E1               pop hl
 417+ 8C8E F5               push af
 418+ 8C8F DD E1            pop ix
 419+ 8C91
 420+ 8C91 CD A0 7F     	call Guarda_foto_registros
 421+ 8C94
 422+ 8C94 21 2B 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8C97 CB 86        	res 0,(hl)
 424+ 8C99
 425+ 8C99              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8C99              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8C99
 428+ 8C99 CD B0 89         call Inicia_Puntero_Disparo_Amadeus
 429+ 8C9C CD A9 89         call Inicia_Puntero_Disparo_Entidades
 430+ 8C9F
 431+ 8C9F C9           4 ret
 432+ 8CA0
 433+ 8CA0              ; ----------------------------------------------------------------
 434+ 8CA0              ;
 435+ 8CA0              ;   4/3/23
 436+ 8CA0              ;
 437+ 8CA0              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8CA0              ;   _ al generarse el disparo.
 439+ 8CA0              ;
 440+ 8CA0              ;       "$80" ..... No se produce colisión.
 441+ 8CA0              ;       "$81" ..... Se produce colisión.
 442+ 8CA0
 443+ 8CA0              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8CA0              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8CA0
 446+ 8CA0
 447+ 8CA0 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8CA2 E5               push hl                                        ; Puntero de impresión.
 449+ 8CA3
 450+ 8CA3 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8CA5 CD C1 8C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8CA8
 453+ 8CA8 7B               ld a,e
 454+ 8CA9 E6 01            and 1
 455+ 8CAB 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8CAD
 457+ 8CAD E1               pop hl
 458+ 8CAE E5               push hl
 459+ 8CAF CD 50 92         call NextScan
 460+ 8CB2
 461+ 8CB2 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8CB3 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8CB5 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8CB7              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8CB7 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8CB9 CD C1 8C         call Bucle_2
 467+ 8CBC
 468+ 8CBC 43           2 ld b,e
 469+ 8CBD E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8CBE FD E1            pop iy
 471+ 8CC0 C9               ret
 472+ 8CC1
 473+ 8CC1               ; ---------- ----------
 474+ 8CC1
 475+ 8CC1 06 02        Bucle_2 ld b,2
 476+ 8CC3 FD 7E 00     2 ld a,(iy)
 477+ 8CC6 A6               and (hl)
 478+ 8CC7 28 02            jr z,1F
 479+ 8CC9 1E 81            ld e,$81
 480+ 8CCB 23           1 inc hl
 481+ 8CCC FD 23            inc iy
 482+ 8CCE 10 F3            djnz 2B
 483+ 8CD0 C9               ret
 484+ 8CD1
 485+ 8CD1              ; -------------------------------------------------------------------------------------------------------------
 486+ 8CD1              ;
 487+ 8CD1              ;   11/04/23
 488+ 8CD1              ;
 489+ 8CD1              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8CD1              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8CD1              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8CD1              ;
 493+ 8CD1              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8CD1
 495+ 8CD1              Compara_coordenadas_X
 496+ 8CD1
 497+ 8CD1              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8CD1              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8CD1
 500+ 8CD1              ; Preparamos registros:
 501+ 8CD1
 502+ 8CD1 21 F4 86         ld hl,Filas+6
 503+ 8CD4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8CD5 23               inc hl
 505+ 8CD6 23               inc hl
 506+ 8CD7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8CD8 43               ld b,e
 508+ 8CD9 21 02 87         ld hl,Filas+20
 509+ 8CDC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8CDD 21 4D 87         ld hl,Coordenadas_X_Entidad
 511+ 8CE0 CD F1 8E         call Guarda_coordenadas_X
 512+ 8CE3
 513+ 8CE3              ; Preparamos registros:
 514+ 8CE3
 515+ 8CE3 21 7C 84         ld hl,Amadeus_db+6
 516+ 8CE6 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8CE7 23               inc hl
 518+ 8CE8 23               inc hl
 519+ 8CE9 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8CEA 7B               ld a,e
 521+ 8CEB 08               ex af,af'
 522+ 8CEC 21 8A 84         ld hl,Amadeus_db+20
 523+ 8CEF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8CF0 21 4A 87         ld hl,Coordenadas_X_Amadeus
 525+ 8CF3 CD F1 8E         call Guarda_coordenadas_X
 526+ 8CF6
 527+ 8CF6              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8CF6              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8CF6
 530+ 8CF6 04               inc b
 531+ 8CF7 05               dec b
 532+ 8CF8 28 04            jr z,1F
 533+ 8CFA 06 03            ld b,3
 534+ 8CFC 18 02            jr 2F
 535+ 8CFE 06 02        1 ld b,2
 536+ 8D00 08           2 ex af,af'
 537+ 8D01 3C               inc a
 538+ 8D02 3D               dec a
 539+ 8D03 28 04            jr z,5F
 540+ 8D05 0E 03            ld c,3
 541+ 8D07 18 02            jr 6F
 542+ 8D09 0E 02        5 ld c,2
 543+ 8D0B 79           6 ld a,c
 544+ 8D0C 08               ex af,af'
 545+ 8D0D 11 4D 87         ld de,Coordenadas_X_Entidad
 546+ 8D10 1A           4 ld a,(de)
 547+ 8D11 21 4A 87         ld hl,Coordenadas_X_Amadeus
 548+ 8D14 BE           3 cp (hl)
 549+ 8D15 28 0E            jr z,7F
 550+ 8D17 23               inc hl
 551+ 8D18 0D               dec c
 552+ 8D19 20 F9            jr nz,3B
 553+ 8D1B 13               inc de
 554+ 8D1C 08               ex af,af'
 555+ 8D1D 4F               ld c,a
 556+ 8D1E 08               ex af,af'
 557+ 8D1F 10 EF            djnz 4B
 558+ 8D21
 559+ 8D21              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8D21
 561+ 8D21 CD 30 8F     8 call Limpia_Coordenadas_X
 562+ 8D24 C9               ret
 563+ 8D25
 564+ 8D25              7
 565+ 8D25 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8D27 32 07 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8D2A 21 45 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8D2D CB D6            set 2,(hl)
 569+ 8D2F 18 F0            jr 8B
 570+ 8D31
 571+ 8D31              ; -----------------------------------------------------------------------
 572+ 8D31              ;
 573+ 8D31              ;   17/04/23
 574+ 8D31              ;
 575+ 8D31
 576+ 8D31              Detecta_colision_nave_entidad
 577+ 8D31
 578+ 8D31              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8D31
 580+ 8D31 2A F0 86         ld hl,(Posicion_actual)
 581+ 8D34 CD B5 91         call Calcula_puntero_de_impresion
 582+ 8D37
 583+ 8D37              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8D37              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8D37
 586+ 8D37 DD E5            push ix
 587+ 8D39 E1               pop hl
 588+ 8D3A E5               push hl
 589+ 8D3B
 590+ 8D3B              ; ----- ----- -----
 591+ 8D3B 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8D3D 06 0A            ld b,10
 593+ 8D3F CD 6F 8D     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8D42 7B               ld a,e
 595+ 8D43 FE 05            cp 5
 596+ 8D45 38 0E            jr c,3F
 597+ 8D47
 598+ 8D47              ; LLegados a este punto:
 599+ 8D47              ;
 600+ 8D47              ;   HAY COLISIÓN !!!!!.
 601+ 8D47              ;
 602+ 8D47              ;   .db (Impacto) de Amadeus a "1".
 603+ 8D47              ;   SET el bit3 de (Impacto2).
 604+ 8D47              ;
 605+ 8D47              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8D47
 607+ 8D47 21 8F 84         ld hl,Amadeus_db+25
 608+ 8D4A 36 01            ld (hl),1
 609+ 8D4C 21 45 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8D4F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8D51 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8D53 18 18            jr 1F
 613+ 8D55
 614+ 8D55              ; -----
 615+ 8D55
 616+ 8D55 E1           3 pop hl
 617+ 8D56 CD 50 92         call NextScan
 618+ 8D59 E5               push hl
 619+ 8D5A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8D5B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8D5D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8D5F 30 0C            jr nc,1F
 623+ 8D61              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8D61 10 DC            djnz 2B
 625+ 8D63
 626+ 8D63              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8D63
 628+ 8D63              ; LLegados a este punto:
 629+ 8D63              ;
 630+ 8D63              ;   NO HAY COLISIÓN !!!!!.
 631+ 8D63              ;
 632+ 8D63              ;   .db (Impacto) de Amadeus a "0".
 633+ 8D63              ;   RES el bit2 de (Impacto2).
 634+ 8D63              ;
 635+ 8D63              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8D63              ;   Lo colocamos a "0".
 637+ 8D63
 638+ 8D63 21 45 87         ld hl,Impacto2
 639+ 8D66 CB 96            res 2,(hl)
 640+ 8D68 2A 46 87         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8D6B 36 00            ld (hl),0
 642+ 8D6D
 643+ 8D6D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8D6E C9               ret
 645+ 8D6F
 646+ 8D6F               ; ---------- ----------
 647+ 8D6F
 648+ 8D6F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8D70 3A EF 86         ld a,(Columns)
 650+ 8D73 47               ld b,a
 651+ 8D74 FD 7E 00     2 ld a,(iy)
 652+ 8D77 BE               cp (hl)
 653+ 8D78 28 01            jr z,1F
 654+ 8D7A
 655+ 8D7A 1C               inc e
 656+ 8D7B
 657+ 8D7B 23           1 inc hl
 658+ 8D7C FD 23            inc iy
 659+ 8D7E 10 F4            djnz 2B
 660+ 8D80 C1               pop bc
 661+ 8D81 C9               ret
 662+ 8D82
 663+ 8D82              ; -------------------------------------------------------------------------------------------------------------
 664+ 8D82              ;
 665+ 8D82              ;   13/03/23
 666+ 8D82              ;
 667+ 8D82              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8D82              ;
 669+ 8D82              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8D82
 671+ 8D82 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8D85 7E               ld a,(hl)
 673+ 8D86 A7               and a
 674+ 8D87 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8D88
 676+ 8D88 44               ld b,h
 677+ 8D89 4D               ld c,l
 678+ 8D8A 2A 3E 87         ld hl,(Stack_snapshot_disparos)
 679+ 8D8D E5               push hl
 680+ 8D8E A7               and a
 681+ 8D8F ED 42            sbc hl,bc
 682+ 8D91 E5               push hl
 683+ 8D92 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8D93
 685+ 8D93 E1               pop hl
 686+ 8D94 54               ld d,h
 687+ 8D95 5D               ld e,l
 688+ 8D96 1B               dec de
 689+ 8D97 ED B8            lddr                                                ; Limpiamos.
 690+ 8D99
 691+ 8D99 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8D9C 22 3E 87         ld (Stack_snapshot_disparos),hl
 693+ 8D9F
 694+ 8D9F C9               ret
 695+ 8DA0
 696+ 8DA0              ; -------------------------------------------------------------------------------------------------------------
 697+ 8DA0              ;
 698+ 8DA0              ;   28/03/23
 699+ 8DA0              ;
 700+ 8DA0
 701+ 8DA0 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8DA3 2A 43 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8DA6
 704+ 8DA6 CD E7 89     2 call Extrae_address
 705+ 8DA9 7E               ld a,(hl)
 706+ 8DAA A7               and a
 707+ 8DAB 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8DAD
 709+ 8DAD              ; ----- ----- ----- ----- ----- -----
 710+ 8DAD
 711+ 8DAD C5               push bc
 712+ 8DAE CD 6A 8E         call foto_disparo_a_borrar
 713+ 8DB1
 714+ 8DB1              ; Existe colisión con este disparo???
 715+ 8DB1
 716+ 8DB1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8DB2 7E               ld a,(hl)
 718+ 8DB3 2B               dec hl
 719+ 8DB4 E6 01            and 1
 720+ 8DB6 28 1D            jr z,9F
 721+ 8DB8
 722+ 8DB8              ;   En este punto:
 723+ 8DB8              ;
 724+ 8DB8              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8DB8              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8DB8              ;   _con la entidad).
 727+ 8DB8              ;
 728+ 8DB8              ;   Disparo_2A defw 0                                ; Control.
 729+ 8DB8              ;    defw 0                                          ; Puntero objeto.
 730+ 8DB8              ;    defw 0                                          ; Puntero de impresión.
 731+ 8DB8              ;    defw 0                                          ; Rutina de impresión.
 732+ 8DB8
 733+ 8DB8 E5               push hl
 734+ 8DB9
 735+ 8DB9 06 04            ld b,4
 736+ 8DBB 23           19 inc hl
 737+ 8DBC 10 FD            djnz 19B
 738+ 8DBE
 739+ 8DBE CD E7 89         call Extrae_address
 740+ 8DC1 CD 7B 98         call Genera_coordenadas_disparo
 741+ 8DC4
 742+ 8DC4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8DC4
 744+ 8DC4 21 48 87         ld hl,Coordenadas_disparo_certero
 745+ 8DC7 72               ld (hl),d
 746+ 8DC8 23               inc hl
 747+ 8DC9 73               ld (hl),e
 748+ 8DCA
 749+ 8DCA              ; Elimino el disparo de la base de datos.
 750+ 8DCA
 751+ 8DCA E1               pop hl
 752+ 8DCB CD E6 8E         call Elimina_disparo_de_base_de_datos
 753+ 8DCE 21 45 87         ld hl,Impacto2
 754+ 8DD1 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8DD3
 756+ 8DD3 18 06            jr 11F
 757+ 8DD5
 758+ 8DD5 CD 93 8E     9 call Mueve_disparo
 759+ 8DD8 CD 6A 8E         call foto_disparo_a_borrar
 760+ 8DDB
 761+ 8DDB C1           11 pop bc
 762+ 8DDC 18 04            jr 7F
 763+ 8DDE
 764+ 8DDE              ; ----- ----- ----- ----- ----- -----
 765+ 8DDE
 766+ 8DDE ED 42        1 sbc hl,bc
 767+ 8DE0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8DE2 2A 43 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8DE5 23               inc hl
 770+ 8DE6 23               inc hl
 771+ 8DE7 22 43 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8DEA 18 BA            jr 2B
 773+ 8DEC CD B0 89     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8DEF
 775+ 8DEF 01 66 84         ld bc,Disparo_11
 776+ 8DF2 2A 41 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8DF5
 778+ 8DF5 CD E7 89     5 call Extrae_address
 779+ 8DF8 7E               ld a,(hl)
 780+ 8DF9 A7               and a
 781+ 8DFA 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8DFC
 783+ 8DFC              ; ----- ----- ----- ----- ----- -----
 784+ 8DFC
 785+ 8DFC C5               push bc
 786+ 8DFD CD 6A 8E         call foto_disparo_a_borrar
 787+ 8E00
 788+ 8E00              ; Existe colisión con este disparo???
 789+ 8E00
 790+ 8E00 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8E01 7E               ld a,(hl)
 792+ 8E02 2B               dec hl
 793+ 8E03 E6 01            and 1
 794+ 8E05 28 48            jr z,10F
 795+ 8E07
 796+ 8E07              ; La colisión se produce con Amadeus???
 797+ 8E07              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8E07
 799+ 8E07 E5               push hl
 800+ 8E08
 801+ 8E08 06 04            ld b,4
 802+ 8E0A 23           16 inc hl
 803+ 8E0B 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8E0D CD E7 89         call Extrae_address
 805+ 8E10 CD 7B 98         call Genera_coordenadas_disparo
 806+ 8E13
 807+ 8E13 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8E14 FE 16            cp $16
 809+ 8E16 38 22            jr c,15F
 810+ 8E18
 811+ 8E18              ; (Colisiones en filas 16 y 17).
 812+ 8E18
 813+ 8E18 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8E19
 815+ 8E19              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8E19
 817+ 8E19 21 7C 84         ld hl,Amadeus_db+6
 818+ 8E1C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8E1D 23               inc hl
 820+ 8E1E 23               inc hl
 821+ 8E1F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8E20 21 8A 84         ld hl,Amadeus_db+20
 823+ 8E23 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8E24 21 4A 87         ld hl,Coordenadas_X_Amadeus
 825+ 8E27 CD F1 8E         call Guarda_coordenadas_X
 826+ 8E2A
 827+ 8E2A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8E2B
 829+ 8E2B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8E2B
 831+ 8E2B 06 03            ld b,3
 832+ 8E2D 21 4A 87         ld hl,Coordenadas_X_Amadeus
 833+ 8E30 7E           18 ld a,(hl)
 834+ 8E31 BA               cp d
 835+ 8E32 20 03            jr nz,17F
 836+ 8E34
 837+ 8E34              ; Colisión Amadeus !!!!!!!!!!
 838+ 8E34
 839+ 8E34 E1               pop hl
 840+ 8E35 18 09            jr 14F
 841+ 8E37
 842+ 8E37 23           17 inc hl
 843+ 8E38 10 F6            djnz 18B
 844+ 8E3A
 845+ 8E3A              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8E3A              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8E3A
 848+ 8E3A E1           15 pop hl
 849+ 8E3B 23               inc hl
 850+ 8E3C 35               dec (hl)
 851+ 8E3D 2B               dec hl
 852+ 8E3E 18 0F            jr 10F
 853+ 8E40
 854+ 8E40              ; -----------------------debug
 855+ 8E40
 856+ 8E40              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8E40              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8E40
 859+ 8E40 E5           14 push hl
 860+ 8E41 CD E6 8E         call Elimina_disparo_de_base_de_datos
 861+ 8E44 21 45 87         ld hl,Impacto2
 862+ 8E47 CB CE            set 1,(hl)
 863+ 8E49 CD 30 8F         call Limpia_Coordenadas_X
 864+ 8E4C
 865+ 8E4C E1               pop hl
 866+ 8E4D 18 06            jr 12F
 867+ 8E4F
 868+ 8E4F CD 93 8E     10 call Mueve_disparo
 869+ 8E52 CD 6A 8E         call foto_disparo_a_borrar
 870+ 8E55 C1           12 pop bc
 871+ 8E56
 872+ 8E56 18 04            jr 8F
 873+ 8E58
 874+ 8E58              ; ----- ----- ----- ----- ----- -----
 875+ 8E58
 876+ 8E58 ED 42        4 sbc hl,bc
 877+ 8E5A 28 0A            jr z,6F
 878+ 8E5C
 879+ 8E5C 2A 41 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8E5F 23               inc hl
 881+ 8E60 23               inc hl
 882+ 8E61 22 41 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8E64 18 8F            jr 5B
 884+ 8E66
 885+ 8E66 CD A9 89     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8E69 C9               ret
 887+ 8E6A
 888+ 8E6A              ; ------------------------------------------------------------------
 889+ 8E6A
 890+ 8E6A              foto_disparo_a_borrar
 891+ 8E6A
 892+ 8E6A 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8E6B A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8E6C C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8E6D
 896+ 8E6D E5               push hl
 897+ 8E6E 23               inc hl
 898+ 8E6F 23               inc hl
 899+ 8E70 ED 73 38 87      ld (Stack),sp
 900+ 8E74 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8E75 FD E1            pop iy
 902+ 8E77 DD E1            pop ix
 903+ 8E79 E1               pop hl
 904+ 8E7A ED 7B 38 87      ld sp,(Stack)
 905+ 8E7E 3A 2B 87         ld a,(Ctrl_1)
 906+ 8E81 CB C7            set 0,a
 907+ 8E83 32 2B 87         ld (Ctrl_1),a
 908+ 8E86 CD A0 7F         call Guarda_foto_registros
 909+ 8E89 3A 2B 87         ld a,(Ctrl_1)
 910+ 8E8C CB 87            res 0,a
 911+ 8E8E 32 2B 87         ld (Ctrl_1),a
 912+ 8E91 E1               pop hl
 913+ 8E92 C9               ret
 914+ 8E93
 915+ 8E93 E5           Mueve_disparo push hl
 916+ 8E94 7E               ld a,(hl)
 917+ 8E95 06 04            ld b,4
 918+ 8E97 23           1 inc hl
 919+ 8E98 10 FD            djnz 1B
 920+ 8E9A
 921+ 8E9A              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8E9A
 923+ 8E9A CD E7 89         call Extrae_address
 924+ 8E9D
 925+ 8E9D E6 01            and 1
 926+ 8E9F 28 2B            jr z,2F
 927+ 8EA1
 928+ 8EA1              ; Disparo hacia arriba, (Amadeus).
 929+ 8EA1
 930+ 8EA1              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8EA1              ; _ de la dificultad.
 932+ 8EA1
 933+ 8EA1 CD 5F 92         call PreviousScan
 934+ 8EA4 CD 5F 92         call PreviousScan
 935+ 8EA7 CD 5F 92         call PreviousScan
 936+ 8EAA
 937+ 8EAA              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8EAA
 939+ 8EAA 7C               ld a,h
 940+ 8EAB FE 40            cp $40
 941+ 8EAD 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8EAF
 943+ 8EAF              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8EAF
 945+ 8EAF EB               ex de,hl
 946+ 8EB0 06 04            ld b,4
 947+ 8EB2 2B           6 dec hl
 948+ 8EB3 10 FD            djnz 6B
 949+ 8EB5
 950+ 8EB5 CD E6 8E         call Elimina_disparo_de_base_de_datos
 951+ 8EB8 E1               pop hl
 952+ 8EB9 18 10            jr 7F
 953+ 8EBB
 954+ 8EBB              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8EBB
 956+ 8EBB D5           3 push de
 957+ 8EBC C5               push bc
 958+ 8EBD
 959+ 8EBD CD A0 8C         call Comprueba_Colision
 960+ 8EC0
 961+ 8EC0              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8EC0
 963+ 8EC0 78               ld a,b
 964+ 8EC1
 965+ 8EC1 C1               pop bc
 966+ 8EC2 D1               pop de
 967+ 8EC3
 968+ 8EC3 EB               ex de,hl
 969+ 8EC4
 970+ 8EC4 73               ld (hl),e
 971+ 8EC5 23               inc hl
 972+ 8EC6 72               ld (hl),d
 973+ 8EC7
 974+ 8EC7 E1           4 pop hl
 975+ 8EC8 23               inc hl
 976+ 8EC9 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8ECA 2B               dec hl
 978+ 8ECB C9           7 ret
 979+ 8ECC
 980+ 8ECC              ; Disparo hacia abajo, (Entidad).
 981+ 8ECC
 982+ 8ECC              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8ECC              ; _ de la dificultad.
 984+ 8ECC
 985+ 8ECC CD 50 92     2 call NextScan
 986+ 8ECF CD 50 92         call NextScan
 987+ 8ED2 CD 50 92         call NextScan
 988+ 8ED5
 989+ 8ED5              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8ED5
 991+ 8ED5 7C               ld a,h
 992+ 8ED6 FE 58            cp $58
 993+ 8ED8 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8EDA
 995+ 8EDA EB               ex de,hl
 996+ 8EDB 06 04            ld b,4
 997+ 8EDD 2B           5 dec hl
 998+ 8EDE 10 FD            djnz 5B
 999+ 8EE0
1000+ 8EE0 CD E6 8E         call Elimina_disparo_de_base_de_datos
1001+ 8EE3 E1               pop hl
1002+ 8EE4 18 E5            jr 7B
1003+ 8EE6
1004+ 8EE6              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8EE6
1006+ 8EE6 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8EE9 AF               xor a
1008+ 8EEA 77               ld (hl),a
1009+ 8EEB 54               ld d,h
1010+ 8EEC 5D               ld e,l
1011+ 8EED 13               inc de
1012+ 8EEE ED B0            ldir
1013+ 8EF0 C9               ret
1014+ 8EF1
1015+ 8EF1              ; -----------------------------------------------------------------
1016+ 8EF1              ;
1017+ 8EF1              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8EF1              ;
1019+ 8EF1              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8EF1              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8EF1              ;
1022+ 8EF1              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8EF1              ;
1024+ 8EF1              ;   INPUTS:
1025+ 8EF1              ;
1026+ 8EF1              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8EF1              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8EF1              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8EF1
1030+ 8EF1              ;   MODIFICA: A, HL, DE y C
1031+ 8EF1
1032+ 8EF1 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8EF2 79               ld a,c
1034+ 8EF3 E6 01            and 1
1035+ 8EF5 20 03            jr nz,1F
1036+ 8EF7 14               inc d
1037+ 8EF8 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8EFA
1039+ 8EFA              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8EFA              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8EFA
1042+ 8EFA 15           1 dec d
1043+ 8EFB 23           2 inc hl
1044+ 8EFC 72               ld (hl),d
1045+ 8EFD
1046+ 8EFD 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8EFE A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8EFF C8               ret z
1049+ 8F00
1050+ 8F00 AF               xor a
1051+ 8F01 5F               ld e,a
1052+ 8F02 18 ED            jr Guarda_coordenadas_X
1053+ 8F04
1054+ 8F04              ; -----------------------------------------------------------------
1055+ 8F04              ;
1056+ 8F04              ;   12/04/23
1057+ 8F04              ;
1058+ 8F04
1059+ 8F04 3A 45 87     Selector_de_impactos ld a,(Impacto2)
1060+ 8F07 A7               and a
1061+ 8F08 C8               ret z
1062+ 8F09
1063+ 8F09 FE 04            cp 4
1064+ 8F0B 20 09            jr nz,1F
1065+ 8F0D
1066+ 8F0D
1067+ 8F0D              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8F0D
1069+ 8F0D CD 31 8D         call Detecta_colision_nave_entidad
1070+ 8F10
1071+ 8F10 21 45 87         ld hl,Impacto2
1072+ 8F13 CB 5E            bit 3,(hl)
1073+ 8F15 C0               ret nz                                               ; Existe colisión, RET.
1074+ 8F16
1075+ 8F16              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8F16              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8F16
1078+ 8F16 21 45 87     1 ld hl,Impacto2
1079+ 8F19 CB 4E            bit 1,(hl)
1080+ 8F1B 28 07            jr z,2F
1081+ 8F1D
1082+ 8F1D 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8F20 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8F22 18 0B            jr 3F
1085+ 8F24
1086+ 8F24 21 45 87     2 ld hl,Impacto2
1087+ 8F27 CB 46            bit 0,(hl)
1088+ 8F29 C8               ret z
1089+ 8F2A
1090+ 8F2A              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8F2A
1092+ 8F2A 21 2B 87         ld hl,Ctrl_1
1093+ 8F2D CB D6            set 2,(hl)
1094+ 8F2F
1095+ 8F2F C9           3 ret
1096+ 8F30
1097+ 8F30              ; -----------------------------------------------------------------
1098+ 8F30              ;
1099+ 8F30              ;   16/04/23
1100+ 8F30              ;
1101+ 8F30
1102+ 8F30 AF           Limpia_Coordenadas_X xor a
1103+ 8F31 06 06            ld b,6
1104+ 8F33 21 4A 87         ld hl,Coordenadas_X_Amadeus
1105+ 8F36 77           1 ld (hl),a
1106+ 8F37 23               inc hl
1107+ 8F38 10 FC            djnz 1B
1108+ 8F3A C9               ret
1109+ 8F3B
1110+ 8F3B              ; -----------------------------------------------------------------
1111+ 8F3B              ;
1112+ 8F3B              ;   25/04/23
1113+ 8F3B              ;
1114+ 8F3B
1115+ 8F3B              Determina_resultado_comparativa
1116+ 8F3B
1117+ 8F3B              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8F3B              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8F3B              ;
1120+ 8F3B              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8F3B              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8F3B              ;
1123+ 8F3B              ;   SBC HL,DE
1124+ 8F3B
1125+ 8F3B 7C               ld a,h
1126+ 8F3C 06 00            ld b,0
1127+ 8F3E
1128+ 8F3E CD 4E 8F         call Compara_cositas
1129+ 8F41
1130+ 8F41 04               inc b
1131+ 8F42 05               dec b
1132+ 8F43 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8F44
1134+ 8F44 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8F45 06 00            ld b,0
1136+ 8F47
1137+ 8F47 CD 4E 8F         call Compara_cositas
1138+ 8F4A 18 01            jr 2F
1139+ 8F4C
1140+ 8F4C 04           1 inc b
1141+ 8F4D C9           2 ret
1142+ 8F4E
1143+ 8F4E A7           Compara_cositas and a
1144+ 8F4F 28 17            jr z,1F
1145+ 8F51
1146+ 8F51 FE FD            cp $fd
1147+ 8F53 28 13            jr z,1F
1148+ 8F55 FE FE            cp $fe
1149+ 8F57 28 0F            jr z,1F
1150+ 8F59 FE FF            cp $ff
1151+ 8F5B 28 0B            jr z,1F
1152+ 8F5D FE 01            cp $01
1153+ 8F5F 28 07            jr z,1F
1154+ 8F61 FE 02            cp $02
1155+ 8F63 28 03            jr z,1F
1156+ 8F65 FE 03            cp $03
1157+ 8F67 C0               ret nz
1158+ 8F68
1159+ 8F68 04           1 inc b
1160+ 8F69 C9               ret
1161+ 8F6A
# file closed: Disparo.asm
1163  8F6A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F6A              ; ******************************************************************************************************************************************************************************************
   2+ 8F6A              ;
   3+ 8F6A              ; 01/23
   4+ 8F6A              ;
   5+ 8F6A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F6A
   7+ 8F6A CD 44 92     Draw call Prepara_draw
   8+ 8F6D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8F6E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8F6F 28 05        	jr z,2F
  11+ 8F71
  12+ 8F71 3A 02 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8F74 18 0C        	jr 1F
  14+ 8F76 2A 00 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8F79 22 F0 86     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8F7C CD 0B 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8F7F              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8F7F CD 9E 99     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8F82 3A 1C 87     1 ld a,(Ctrl_0)
  20+ 8F85 CB 6F        	bit 5,a
  21+ 8F87 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8F89
  23+ 8F89 CD A1 8F     	call Comprueba_limite_horizontal
  24+ 8F8C CD 31 90     	call Comprueba_limite_vertical
  25+ 8F8F
  26+ 8F8F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8F8F
  28+ 8F8F CD 7E 91     3 call calcula_CColumnass
  29+ 8F92 CD B5 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8F95 CD 0A 92     	call Define_rutina_de_impresion
  31+ 8F98
  32+ 8F98 3A 1C 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8F9B CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8F9D 32 1C 87     	ld (Ctrl_0),a
  35+ 8FA0
  36+ 8FA0 C9           	ret
  37+ 8FA1
  38+ 8FA1              ; *******************************************************************************************************************************************************************************************
  39+ 8FA1              ;	21/01/23
  40+ 8FA1              ;
  41+ 8FA1              ; 	Comprueba_limite_horizontal.
  42+ 8FA1              ;
  43+ 8FA1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8FA1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8FA1              ;
  46+ 8FA1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8FA1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8FA1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8FA1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8FA1
  51+ 8FA1
  52+ 8FA1
  53+ 8FA1 3A 1C 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8FA4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8FA6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8FA8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8FAA 32 1C 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8FAD 18 09            jr 6F
  59+ 8FAF CB 5F        1 bit 3,a
  60+ 8FB1 28 0A            jr z,2F
  61+ 8FB3 E6 F7            and $f7
  62+ 8FB5 32 1C 87         ld (Ctrl_0),a
  63+ 8FB8 CD 0B 91     6 call Inicializacion
  64+ 8FBB 18 5B            jr 5F
  65+ 8FBD E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8FBE
  67+ 8FBE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8FBE              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8FBE
  70+ 8FBE EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8FBF 2A 27 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8FC2 CD 10 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8FC5 67           	ld h,a
  74+ 8FC6 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8FC7 CD 10 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8FCA 67           	ld h,a
  77+ 8FCB A7           	and a
  78+ 8FCC ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8FCE 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8FCF 3A 02 87     	ld a,(Cuad_objeto)
  81+ 8FD2 FE 02        	cp 2
  82+ 8FD4 38 1E        	jr c,3F
  83+ 8FD6 28 1C        	jr z,3F
  84+ 8FD8 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8FD9 28 23            jr z,7F
  86+ 8FDB 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8FDD 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8FDF E1           	pop hl
  89+ 8FE0
  90+ 8FE0              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8FE0              ; _para indicar con E="2" en caso necesario.
  92+ 8FE0
  93+ 8FE0 E5               push hl
  94+ 8FE1 C5               push bc
  95+ 8FE2 CD 10 95     	call calcula_tercio
  96+ 8FE5 FE 01        	cp 1
  97+ 8FE7 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8FE9 CD 19 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8FEC 28 26            jr z,9F
 100+ 8FEE 38 24            jr c,9F
 101+ 8FF0 1E 00        11 ld e,0
 102+ 8FF2 18 22            jr 8F
 103+ 8FF4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8FF5 28 07        	jr z, 7F
 105+ 8FF7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8FF9 1E 00         	ld e,0
 107+ 8FFB E1           	pop hl
 108+ 8FFC 18 04        	jr 4F
 109+ 8FFE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9000 18 15            jr 10F
 111+ 9002
 112+ 9002              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9002              ; _para indicar con E="2" en caso necesario.
 114+ 9002
 115+ 9002 E5           4 push hl
 116+ 9003 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9004 CD 10 95     	call calcula_tercio
 118+ 9007 FE 01        	cp 1
 119+ 9009 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 900B CD 19 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 900E 28 04            jr z,9F
 122+ 9010 30 02            jr nc,9F
 123+ 9012 18 02        	jr 8F
 124+ 9014 1E 02        9 ld e,2
 125+ 9016 C1           8 pop bc
 126+ 9017 E1           10 pop hl
 127+ 9018 C9           5 ret
 128+ 9019
 129+ 9019              ; --------------------
 130+ 9019              ;
 131+ 9019              ; 25/08/22
 132+ 9019
 133+ 9019 CD 10 95     Comprueba_centro call calcula_tercio
 134+ 901C 67               ld h,a
 135+ 901D 08           	ex af,af
 136+ 901E FE 02        	cp 2
 137+ 9020 38 07        	jr c,1F
 138+ 9022 28 05        	jr z,1F
 139+ 9024 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 9027 18 03        	jr 2F
 141+ 9029 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 902C 08           2 ex af,af
 143+ 902D A7               and a
 144+ 902E ED 42            sbc hl,bc
 145+ 9030 C9               ret
 146+ 9031
 147+ 9031              ; *********************************************************************************************************************************************************************************************
 148+ 9031              ;
 149+ 9031              ;   16/8/22
 150+ 9031              ;
 151+ 9031              ;	Comprueba_limite_vertical
 152+ 9031              ;
 153+ 9031              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 9031              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 9031              ;
 156+ 9031
 157+ 9031 2A F0 86     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9034 7D           	ld a,l
 159+ 9035 E6 1F        	and $1F
 160+ 9037 57           	ld d,a
 161+ 9038 3A 29 87     	ld a,(Limite_vertical)
 162+ 903B BA           	cp d 											; Límite - Posición.
 163+ 903C 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 903D 3A 02 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9040 CB 47        	bit 0,a
 166+ 9042 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9044
 168+ 9044              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9044
 170+ 9044 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9045 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9047
 173+ 9047              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9047              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9047
 176+ 9047 3A F4 86         ld a,(Coordenada_X)
 177+ 904A 16 0F            ld d,Centro_izquierda
 178+ 904C A7               and a
 179+ 904D 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 904E 28 1E            jr z,3F
 181+ 9050 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9052              ;                                                    ; _salimos sin modificar nada.
 183+ 9052 18 0E            jr 2F
 184+ 9054 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9055 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9057
 187+ 9057              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9057              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9057
 190+ 9057 3A F4 86         ld a,(Coordenada_X)
 191+ 905A 16 10            ld d,Centro_derecha
 192+ 905C A7               and a
 193+ 905D 92               sub d
 194+ 905E 28 0E            jr z,3F
 195+ 9060 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9062              ;                                                    ; _salimos sin modificar nada.
 197+ 9062 CB 43        2 bit 0,e
 198+ 9064 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9066 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9067 CD FB 90         call Modificaccionne
 201+ 906A C1           	pop bc
 202+ 906B CD 0B 91         call Inicializacion
 203+ 906E C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 906F
 205+ 906F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 906F
 207+ 906F C5           4 push bc
 208+ 9070 01 EF 86     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9073 0A           	ld a,(bc)
 210+ 9074 3D           	dec a
 211+ 9075 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9076 7D           	ld a,l
 213+ 9077 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9078 CB 47        	bit 0,a
 215+ 907A 28 03        	jr z,5F
 216+ 907C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 907D 18 2E        	jr 7F
 218+ 907F
 219+ 907F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 907F
 221+ 907F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9080 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9081 3A 1C 87     	ld a,(Ctrl_0)
 224+ 9084 CB 4F        	bit 1,a
 225+ 9086 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9088 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9089
 228+ 9089              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9089
 230+ 9089 1C               inc e
 231+ 908A 1D               dec e
 232+ 908B 20 07            jr nz,12F
 233+ 908D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 908E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 908F 22 F0 86     	ld (Posicion_actual),hl
 236+ 9092 18 44        13 jr 9F
 237+ 9094 CB 43        12 bit 0,e
 238+ 9096 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9098              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9098 C1           	pop bc
 241+ 9099 18 D3        	jr 3B
 242+ 909B 80           14 add b
 243+ 909C 6F               ld l,a
 244+ 909D 22 F0 86     	ld (Posicion_actual),hl
 245+ 90A0 CD FB 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 90A3 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 90A5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 90A7 32 1C 87         ld (Ctrl_0),a
 249+ 90AA F1           	pop af
 250+ 90AB 18 2B        	jr 9F
 251+ 90AD
 252+ 90AD              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 90AD
 254+ 90AD F5           7 push af
 255+ 90AE 3A 1C 87     	ld a,(Ctrl_0)
 256+ 90B1 CB 47        	bit 0,a
 257+ 90B3 20 1D        	jr nz,8F
 258+ 90B5 F1           	pop af
 259+ 90B6
 260+ 90B6              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 90B6
 262+ 90B6 1C           	inc e
 263+ 90B7 1D               dec e
 264+ 90B8 20 07            jr nz,10F
 265+ 90BA 90           	sub b
 266+ 90BB 6F               ld l,a
 267+ 90BC 22 F0 86     	ld (Posicion_actual),hl
 268+ 90BF 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 90C1              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 90C1 CB 43        10 bit 0,e
 271+ 90C3 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 90C5              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 90C5 C1           	pop bc
 274+ 90C6 18 A6        	jr 3B
 275+ 90C8 90           16 sub b
 276+ 90C9 6F               ld l,a
 277+ 90CA 22 F0 86     	ld (Posicion_actual),hl
 278+ 90CD CD FB 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 90D0 18 06            jr 9F
 280+ 90D2 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 90D4 32 1C 87         ld (Ctrl_0),a
 282+ 90D7 F1           	pop af
 283+ 90D8 C1           9 pop bc
 284+ 90D9 1E 00        	ld e,0
 285+ 90DB CD 0B 91         call Inicializacion
 286+ 90DE F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 90DF 08           	ex af,af
 288+ 90E0 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 90E1 18 8B            jr 3B
 290+ 90E3
 291+ 90E3              ; --------------------
 292+ 90E3
 293+ 90E3 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 90E5 CD 5F 92     1 call PreviousScan
 295+ 90E8 10 FB            djnz 1B
 296+ 90EA 22 F0 86     	ld (Posicion_actual),hl
 297+ 90ED AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 90EE C9           	ret
 299+ 90EF
 300+ 90EF              ; --------------------
 301+ 90EF
 302+ 90EF 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 90F1 CD 50 92     1 call NextScan
 304+ 90F4 10 FB            djnz 1B
 305+ 90F6 22 F0 86     	ld (Posicion_actual),hl
 306+ 90F9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 90FA C9           	ret
 308+ 90FB
 309+ 90FB              ; --------------------
 310+ 90FB              ;
 311+ 90FB              ;	22/01/23
 312+ 90FB              ;
 313+ 90FB              ;	E="1". Hemos cambiado de cuadrante.
 314+ 90FB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 90FB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 90FB
 317+ 90FB
 318+ 90FB              Modificaccionne
 319+ 90FB
 320+ 90FB 3A 02 87     	ld a,(Cuad_objeto)
 321+ 90FE FE 02        	cp 2
 322+ 9100 CC E3 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9103 DC E3 90         call c,Modifica_Pos_actual
 324+ 9106 C8           	ret z
 325+ 9107 CD EF 90         call Modifica_Pos_actual2
 326+ 910A C9               ret
 327+ 910B
 328+ 910B              ; *************************************************************************************************************************************************************************************************
 329+ 910B              ;
 330+ 910B              ;	13/8/22
 331+ 910B              ;
 332+ 910B              ;	Inicializacion
 333+ 910B              ;
 334+ 910B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 910B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 910B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 910B              ;
 338+ 910B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 910B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 910B              ;	_ desaparece/aparece.
 341+ 910B
 342+ 910B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 910B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 910B              ;
 345+ 910B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 910B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 910B              ; 		   [E] ="0"
 348+ 910B
 349+ 910B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 910B
 351+ 910B CD 10 95     Inicializacion call calcula_tercio
 352+ 910E 28 36        	jr z,primit
 353+ 9110 E6 02        	and 2
 354+ 9112 20 07        	jr nz,segmit
 355+ 9114 7D           	ld a,l
 356+ 9115 FE 7F        	cp $7f
 357+ 9117 38 2D        	jr c,primit
 358+ 9119 28 2B        	jr z,primit
 359+ 911B CD 78 91     segmit call column
 360+ 911E 38 13        	jr c,tercuad
 361+ 9120 3E 04        cuarcuad ld a,4
 362+ 9122 32 02 87     	ld (Cuad_objeto),a
 363+ 9125 21 20 48     	ld hl,$4820
 364+ 9128 22 27 87     	ld (Limite_horizontal),hl
 365+ 912B 21 29 87     	ld hl,Limite_vertical
 366+ 912E 36 0D        	ld (hl),$0d
 367+ 9130 08           	ex af,af
 368+ 9131 18 3C        	jr 1F
 369+ 9133              tercuad
 370+ 9133 3E 03        	ld a,3
 371+ 9135 32 02 87     	ld (Cuad_objeto),a
 372+ 9138 21 20 48     	ld hl,$4820
 373+ 913B 22 27 87     	ld (Limite_horizontal),hl
 374+ 913E 21 29 87     	ld hl,Limite_vertical
 375+ 9141 36 12        	ld (hl),$12
 376+ 9143 08           	ex af,af
 377+ 9144 18 29        	jr 1F
 378+ 9146 CD 78 91     primit call column
 379+ 9149 38 13        	jr c, primcuad
 380+ 914B              segcuad
 381+ 914B 3E 02        	ld a,2
 382+ 914D 32 02 87     	ld (Cuad_objeto),a
 383+ 9150 21 C0 4F     	ld hl,$4fc0
 384+ 9153 22 27 87     	ld (Limite_horizontal),hl
 385+ 9156 21 29 87     	ld hl,Limite_vertical
 386+ 9159 36 0D        	ld (hl),$0d
 387+ 915B 08           	ex af,af
 388+ 915C 18 11        	jr 1F
 389+ 915E              primcuad
 390+ 915E 3E 01        	ld a,1
 391+ 9160 32 02 87     	ld (Cuad_objeto),a
 392+ 9163 21 C0 4F     	ld hl,$4fc0
 393+ 9166 22 27 87     	ld (Limite_horizontal),hl
 394+ 9169 21 29 87     	ld hl,Limite_vertical
 395+ 916C 36 12        	ld (hl),$12
 396+ 916E 08           	ex af,af
 397+ 916F CD 50 98     1 call Genera_coordenadas
 398+ 9172 21 1C 87     	ld hl,Ctrl_0
 399+ 9175 CB EE        	set 5,(hl)
 400+ 9177 C9           	ret
 401+ 9178
 402+ 9178              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9178
 404+ 9178              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9178              ;
 406+ 9178              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9178
 408+ 9178 7D           column ld a,l
 409+ 9179 E6 1F        	and $1f
 410+ 917B FE 10         	cp $10
 411+ 917D C9            	ret
 412+ 917E
 413+ 917E              ; --------------------------------------------------------------------------------------------------------------------
 414+ 917E              ;
 415+ 917E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 917E              ;
 417+ 917E              ; 14/12/22
 418+ 917E              ;
 419+ 917E              ;	Modifica: A y BC.
 420+ 917E
 421+ 917E 3A 02 87     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9181 E6 01        	and 1
 423+ 9183 28 17        	jr z,1F
 424+ 9185
 425+ 9185              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9185
 427+ 9185 3A F4 86     	ld a,(Coordenada_X)
 428+ 9188 47           	ld b,a
 429+ 9189 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 918A 79           	ld a,c
 431+ 918B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 918C 38 08        	jr c,2F
 433+ 918E 47           	ld b,a
 434+ 918F 79           	ld a,c
 435+ 9190 90           	sub b
 436+ 9191 32 26 87     	ld (Columnas),a
 437+ 9194 18 1B        	jr 4F
 438+ 9196 79           2 ld a,c
 439+ 9197 32 26 87     	ld (Columnas),a
 440+ 919A 18 15        	jr 4F
 441+ 919C
 442+ 919C              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 919C
 444+ 919C 3A F4 86     1 ld a,(Coordenada_X)
 445+ 919F 81           	add c
 446+ 91A0 3D           	dec a
 447+ 91A1 D6 1F        	sub $1f
 448+ 91A3 38 08        	jr c,3F
 449+ 91A5 47           	ld b,a
 450+ 91A6 79           	ld a,c
 451+ 91A7 90           	sub b
 452+ 91A8 32 26 87     	ld (Columnas),a
 453+ 91AB 18 04        	jr 4F
 454+ 91AD 79           3 ld a,c
 455+ 91AE 32 26 87     	ld (Columnas),a
 456+ 91B1 D9           4 exx
 457+ 91B2 4F           	ld c,a
 458+ 91B3 D9           	exx
 459+ 91B4 C9            ret
 460+ 91B5
 461+ 91B5              ; --------------------------------------------------------------------------------------------------------------------
 462+ 91B5              ;
 463+ 91B5              ; 7/1/23
 464+ 91B5              ;
 465+ 91B5              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 91B5              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 91B5              ;
 468+ 91B5              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 91B5              ;	DESTRUYE: HL,B Y A.
 470+ 91B5
 471+ 91B5 3A 02 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 91B8 FE 02        	cp 2
 473+ 91BA 38 18        	jr c,1F
 474+ 91BC 28 16        	jr z,1F
 475+ 91BE E6 01        	and 1
 476+ 91C0 28 0D        	jr z,3F
 477+ 91C2
 478+ 91C2              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 91C2
 480+ 91C2 CD FE 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 91C5
 482+ 91C5 7D           9 ld a,l
 483+ 91C6 E6 1F        	and $1f
 484+ 91C8 28 2A        	jr z,7F
 485+ 91CA 2B           	dec hl
 486+ 91CB 10 F8        	djnz 9B
 487+ 91CD 18 25        	jr 7F
 488+ 91CF
 489+ 91CF              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 91CF
 491+ 91CF 2A F0 86     3 ld hl,(Posicion_actual)
 492+ 91D2 18 20        	jr 7F
 493+ 91D4
 494+ 91D4 28 14        1 jr z,2F
 495+ 91D6
 496+ 91D6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 91D6
 498+ 91D6 CD FE 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 91D9 7D           4 ld a,l
 500+ 91DA E6 1F        	and $1f
 501+ 91DC 28 03        	jr z,6F
 502+ 91DE 2B           	dec hl
 503+ 91DF 10 F8        	djnz 4B
 504+ 91E1 06 0F        6 ld b,15
 505+ 91E3 CD 5F 92     5 call PreviousScan
 506+ 91E6 10 FB        	djnz 5B
 507+ 91E8 18 0A        	jr 7F
 508+ 91EA
 509+ 91EA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 91EA
 511+ 91EA CD FE 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 91ED 06 0F        	ld b,15
 513+ 91EF CD 5F 92     8 call PreviousScan
 514+ 91F2 10 FB        	djnz 8B
 515+ 91F4
 516+ 91F4 E5           7 push hl
 517+ 91F5 DD E1        	pop ix
 518+ 91F7
 519+ 91F7 2A F2 86     	ld hl,(Puntero_objeto)
 520+ 91FA E5           	push hl
 521+ 91FB FD E1        	pop iy
 522+ 91FD
 523+ 91FD C9           	ret
 524+ 91FE
 525+ 91FE              ; --------------------------------------------------------------------------------------------------------------------
 526+ 91FE              ;
 527+ 91FE              ;	2/1/23
 528+ 91FE              ;
 529+ 91FE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 91FE              ;
 531+ 91FE              ;	Tras esta rutina tenemos:
 532+ 91FE              ;
 533+ 91FE              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 91FE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 91FE              ;
 536+ 91FE              ;	DESTRUYE!!!!! HL,B y A.
 537+ 91FE
 538+ 91FE 2A F0 86     Operandos ld hl,(Posicion_actual)
 539+ 9201 3A 26 87     	ld a,(Columnas)
 540+ 9204 3D           	dec a
 541+ 9205 20 01        	jr nz,1F
 542+ 9207 3C           	inc a
 543+ 9208 47           1 ld b,a
 544+ 9209 C9           	ret
 545+ 920A
 546+ 920A              ; --------------------------------------------------------------------------------------------------------------------
 547+ 920A              ;
 548+ 920A              ;	3/1/23
 549+ 920A              ;
 550+ 920A              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 920A              ;
 552+ 920A              ;	Destruye: A,B,HL y DE.
 553+ 920A
 554+ 920A              Define_rutina_de_impresion
 555+ 920A
 556+ 920A 3A EF 86     	ld a,(Columns)
 557+ 920D 47           	ld b,a
 558+ 920E 3A 26 87     	ld a,(Columnas)
 559+ 9211 B8           	cp b
 560+ 9212 20 0D        	jr nz,2f
 561+ 9214
 562+ 9214              ;	La entidad se imprime entera.
 563+ 9214
 564+ 9214 21 E0 92     	ld hl, Indice_entidades_completas
 565+ 9217 E6 01        	and 1
 566+ 9219 28 02        	jr z,1F
 567+ 921B
 568+ 921B 23           	inc hl
 569+ 921C 23           	inc hl
 570+ 921D
 571+ 921D CD E7 89     1 call Extrae_address
 572+ 9220 C9           	ret		;	ret
 573+ 9221
 574+ 9221              ;	La entidad no se imprime entera en pantalla.
 575+ 9221
 576+ 9221 3A 02 87     2 ld a,(Cuad_objeto)
 577+ 9224 E6 01        	and 1
 578+ 9226 28 17        	jr z,3F
 579+ 9228
 580+ 9228              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9228
 582+ 9228 21 E4 92     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 922B 3A EF 86     4 ld a,(Columns)
 584+ 922E E6 01        	and 1
 585+ 9230 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9232
 587+ 9232 23           	inc hl
 588+ 9233 23           	inc hl
 589+ 9234
 590+ 9234 3A 26 87     	ld a,(Columnas)
 591+ 9237 E6 01        	and 1
 592+ 9239 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 923B
 594+ 923B 23           	inc hl
 595+ 923C 23           	inc hl
 596+ 923D
 597+ 923D 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 923F
 599+ 923F 21 EA 92     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9242 18 E7        	jr 4B
 601+ 9244
 602+ 9244              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9244              ;
 604+ 9244              ;	Prepara_draw
 605+ 9244              ;
 606+ 9244              ;	Es una rutina de carga.
 607+ 9244              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9244              ;
 609+ 9244              ;	FUNCIONAMIENTO:
 610+ 9244              ;
 611+ 9244              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9244              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9244              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9244              ;
 615+ 9244              ;	DESTRUYE:
 616+ 9244              ;
 617+ 9244              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9244
 619+ 9244 21 EE 86     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9247 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9248 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9249 4E           	ld c,(hl)
 623+ 924A 2A F0 86     	ld hl,(Posicion_actual)
 624+ 924D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 924F C9           	ret
 626+ 9250
 627+ 9250              ;----------------------------------------------------------------------------------------------------------------
 628+ 9250              ;
 629+ 9250              ;	5/08/22
 630+ 9250              ;
 631+ 9250              ;   NextScan.
 632+ 9250              ;
 633+ 9250              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9250              ;
 635+ 9250              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9250              ;
 637+ 9250              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9250              ;
 639+ 9250              ;       DESTRUIDOS: AF y HL !!!
 640+ 9250              ;
 641+ 9250              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9250              ;
 643+ 9250
 644+ 9250 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9251 7C               ld a,h
 646+ 9252 E6 07            and 7
 647+ 9254 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9255
 649+ 9255 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9256 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9258 6F               ld l,a
 652+ 9259 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 925A
 654+ 925A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 925B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 925D 67               ld h,a
 657+ 925E C9               ret
 658+ 925F
 659+ 925F              ;----------------------------------------------------------------------------------------------------------------
 660+ 925F              ;
 661+ 925F              ;	5/08/22
 662+ 925F              ;
 663+ 925F              ;   PreviousScan.
 664+ 925F              ;
 665+ 925F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 925F              ;
 667+ 925F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 925F              ;
 669+ 925F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 925F              ;
 671+ 925F              ;       DESTRUIDOS: AF y HL !!!
 672+ 925F              ;
 673+ 925F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 925F              ;
 675+ 925F
 676+ 925F 7C           PreviousScan ld a,h
 677+ 9260 25               dec h               ; Dec H.
 678+ 9261 E6 07            and 7
 679+ 9263 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9264
 681+ 9264 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9265 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9267 6F               ld l,a
 684+ 9268 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9269
 686+ 9269 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 926A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 926C 67               ld h,a
 689+ 926D C9               ret
 690+ 926E
 691+ 926E              ; -----------------------------------------------------------------------------------
 692+ 926E              ;
 693+ 926E              ;	28/2/23
 694+ 926E              ;
 695+ 926E              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 926E              ;	Extrae fotos de Album_de_fotos.
 697+ 926E
 698+ 926E              Extrae_foto_entidades
 699+ 926E
 700+ 926E 3A 33 87     	ld a,(Numero_de_malotes)
 701+ 9271 A7           	and a
 702+ 9272 C8           	ret z
 703+ 9273 ED 73 38 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 9277 31 00 70     	ld sp,Album_de_fotos
 705+ 927A
 706+ 927A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 927C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 927D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 927E
 710+ 927E ED 73 3A 87  	ld (Stack_2),sp
 711+ 9282 ED 7B 38 87  	ld sp,(Stack)
 712+ 9286
 713+ 9286              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 9286
 715+ 9286 3E CD        	ld a,$cd
 716+ 9288 32 90 92     	ld (Imprime),a
 717+ 928B EB           	ex de,hl
 718+ 928C 22 91 92     	ld (Imprime+1),hl
 719+ 928F EB           	ex de,hl
 720+ 9290
 721+ 9290              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 9290
 723+ 9290 00 00 00     Imprime db 0,0,0
 724+ 9293
 725+ 9293 3A 33 87     	ld a,(Numero_de_malotes)
 726+ 9296 3D           	dec a
 727+ 9297 28 09        	jr z,1F
 728+ 9299 32 33 87      	ld (Numero_de_malotes),a
 729+ 929C
 730+ 929C ED 7B 3A 87   	ld sp,(Stack_2)
 731+ 92A0 18 D8        	jr 2B
 732+ 92A2
 733+ 92A2 AF           1 xor a
 734+ 92A3 32 3A 87     	ld (Stack_2),a
 735+ 92A6 C9           	ret
 736+ 92A7
 737+ 92A7              ; -----------------------------------------------------------------------------------
 738+ 92A7              ;
 739+ 92A7              ;	28/2/23
 740+ 92A7              ;
 741+ 92A7              ;	Pinta los disparos generados.
 742+ 92A7
 743+ 92A7              Extrae_foto_disparos
 744+ 92A7
 745+ 92A7 3A 40 87     	ld a,(Numero_de_disparotes)
 746+ 92AA A7           	and a
 747+ 92AB C8           	ret z
 748+ 92AC ED 73 38 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 92B0 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 92B3
 751+ 92B3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 92B5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 92B6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 92B7
 755+ 92B7 ED 73 3A 87  	ld (Stack_2),sp
 756+ 92BB ED 7B 38 87  	ld sp,(Stack)
 757+ 92BF
 758+ 92BF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 92BF
 760+ 92BF 3E CD        	ld a,$cd
 761+ 92C1 32 C9 92     	ld (Imprime2),a
 762+ 92C4 EB           	ex de,hl
 763+ 92C5 22 CA 92     	ld (Imprime2+1),hl
 764+ 92C8 EB           	ex de,hl
 765+ 92C9
 766+ 92C9              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 92C9
 768+ 92C9 00 00 00     Imprime2 db 0,0,0
 769+ 92CC
 770+ 92CC 3A 40 87     	ld a,(Numero_de_disparotes)
 771+ 92CF 3D           	dec a
 772+ 92D0 28 09        	jr z,1F
 773+ 92D2 32 40 87      	ld (Numero_de_disparotes),a
 774+ 92D5
 775+ 92D5 ED 7B 3A 87  	ld sp,(Stack_2)
 776+ 92D9 18 D8        	jr 2B
 777+ 92DB
 778+ 92DB AF           1 xor a
 779+ 92DC 32 3A 87     	ld (Stack_2),a
 780+ 92DF C9           	ret
 781+ 92E0
# file closed: Draw_XOR.asm
1164  92E0              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92E0              ;   índices de Rutinas de impresión.
   2+ 92E0
   3+ 92E0 F0 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92E2 1D 93            defw Pinta_Amadeus_3x2
   5+ 92E4
   6+ 92E4 73 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92E6 13 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92E8 C7 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92EA
  10+ 92EA 9D 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92EC A1 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92EE 55 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92F0
  14+ 92F0
  15+ 92F0              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92F0              ;
  17+ 92F0              ;   12/12/22
  18+ 92F0              ;
  19+ 92F0              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92F0              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92F0              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92F0              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92F0              ;
  24+ 92F0              ;   Modifica: DE y HL.
  25+ 92F0
  26+ 92F0 ED 73 38 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92F4 FD F9        	ld sp,iy
  28+ 92F6 06 10            ld b,16
  29+ 92F8 D1           1 pop de
  30+ 92F9 7B               ld a,e
  31+ 92FA AE               xor (hl)
  32+ 92FB 77           	ld (hl),a
  33+ 92FC 23           	inc hl
  34+ 92FD 7A               ld a,d
  35+ 92FE AE               xor (hl)
  36+ 92FF 77           	ld (hl),a
  37+ 9300 2B           	dec hl
  38+ 9301 24           	inc h
  39+ 9302 7C               ld a,h
  40+ 9303 E6 07            and 7
  41+ 9305 20 0A            jr nz,2F
  42+ 9307 7D               ld a,l
  43+ 9308 C6 20            add a,$20
  44+ 930A 6F               ld l,a
  45+ 930B 38 04            jr c,2F
  46+ 930D 7C               ld a,h
  47+ 930E D6 08            sub 8
  48+ 9310 67               ld h,a
  49+ 9311 7C           2 ld a,h
  50+ 9312 FE 58            cp $58
  51+ 9314 28 02            jr z,3F
  52+ 9316 10 E0            djnz 1B
  53+ 9318 ED 7B 38 87  3 ld sp,(Stack)
  54+ 931C C9           	ret
  55+ 931D
  56+ 931D ED 73 38 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9321 FD F9        	ld sp,iy
  58+ 9323 06 08            ld b,8
  59+ 9325 D1           1 pop de
  60+ 9326 7B               ld a,e
  61+ 9327 AE               xor (hl)
  62+ 9328 77           	ld (hl),a
  63+ 9329 23           	inc hl
  64+ 932A 7A               ld a,d
  65+ 932B AE               xor (hl)
  66+ 932C 77           	ld (hl),a
  67+ 932D 23           	inc hl
  68+ 932E D1           	pop de
  69+ 932F 7B               ld a,e
  70+ 9330 AE               xor (hl)
  71+ 9331 77           	ld (hl),a
  72+ 9332 2B           	dec hl
  73+ 9333 2B           	dec hl
  74+ 9334 24           	inc h
  75+ 9335 7C               ld a,h
  76+ 9336 E6 07            and 7
  77+ 9338 20 0A            jr nz,2F
  78+ 933A 7D               ld a,l
  79+ 933B C6 20            add a,$20
  80+ 933D 6F               ld l,a
  81+ 933E 38 04            jr c,2F
  82+ 9340 7C               ld a,h
  83+ 9341 D6 08            sub 8
  84+ 9343 67               ld h,a
  85+ 9344 7C           2 ld a,h
  86+ 9345 FE 58            cp $58
  87+ 9347 28 25            jr z,4F
  88+ 9349 7A               ld a,d
  89+ 934A AE               xor (hl)
  90+ 934B 77               ld (hl),a
  91+ 934C D1           	pop de
  92+ 934D 23           	inc hl
  93+ 934E 7B               ld a,e
  94+ 934F AE               xor (hl)
  95+ 9350 77           	ld (hl),a
  96+ 9351 23           	inc hl
  97+ 9352 7A               ld a,d
  98+ 9353 AE               xor (hl)
  99+ 9354 77           	ld (hl),a
 100+ 9355 2B           	dec hl
 101+ 9356 2B           	dec hl
 102+ 9357 24           	inc h
 103+ 9358 7C               ld a,h
 104+ 9359 E6 07            and 7
 105+ 935B 20 0A            jr nz,3F
 106+ 935D 7D               ld a,l
 107+ 935E C6 20            add a,$20
 108+ 9360 6F               ld l,a
 109+ 9361 38 04            jr c,3F
 110+ 9363 7C               ld a,h
 111+ 9364 D6 08            sub 8
 112+ 9366 67               ld h,a
 113+ 9367 7C           3 ld a,h
 114+ 9368 FE 58            cp $58
 115+ 936A 28 02            jr z,4F
 116+ 936C 10 B7            djnz 1B
 117+ 936E ED 7B 38 87  4 ld sp,(Stack)
 118+ 9372 C9           	ret
 119+ 9373
 120+ 9373              ; ---------------------------------------------------
 121+ 9373
 122+ 9373 ED 73 38 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9377 FD F9        	ld sp,iy
 124+ 9379
 125+ 9379              ; >>>
 126+ 9379
 127+ 9379 06 10            ld b,16
 128+ 937B D1           1 pop de
 129+ 937C 7A           	ld a,d
 130+ 937D AE           	xor (hl)
 131+ 937E 77           	ld (hl),a
 132+ 937F 24           	inc h
 133+ 9380 7C               ld a,h
 134+ 9381 E6 07            and 7
 135+ 9383 20 0C            jr nz,2F
 136+ 9385 7D               ld a,l
 137+ 9386 C6 20            add a,$20
 138+ 9388 6F               ld l,a
 139+ 9389 38 06            jr c,2F
 140+ 938B 7C               ld a,h
 141+ 938C D6 08            sub 8
 142+ 938E 67               ld h,a
 143+ 938F 18 00            jr 2F
 144+ 9391 7C           2 ld a,h
 145+ 9392 FE 58            cp $58
 146+ 9394 28 02            jr z,3F
 147+ 9396 10 E3            djnz 1B
 148+ 9398 ED 7B 38 87  3 ld sp,(Stack)
 149+ 939C C9           	ret
 150+ 939D
 151+ 939D ED 73 38 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 93A1 FD F9        	ld sp,iy
 153+ 93A3
 154+ 93A3              ; >>>
 155+ 93A3
 156+ 93A3 06 10            ld b,16
 157+ 93A5 D1           1 pop de
 158+ 93A6 7B           	ld a,e
 159+ 93A7 AE           	xor (hl)
 160+ 93A8 77           	ld (hl),a
 161+ 93A9 24           	inc h
 162+ 93AA 7C               ld a,h
 163+ 93AB E6 07            and 7
 164+ 93AD 20 0C            jr nz,2F
 165+ 93AF 7D               ld a,l
 166+ 93B0 C6 20            add a,$20
 167+ 93B2 6F               ld l,a
 168+ 93B3 38 06            jr c,2F
 169+ 93B5 7C               ld a,h
 170+ 93B6 D6 08            sub 8
 171+ 93B8 67               ld h,a
 172+ 93B9 18 00            jr 2F
 173+ 93BB 7C           2 ld a,h
 174+ 93BC FE 58            cp $58
 175+ 93BE 28 02            jr z,3F
 176+ 93C0 10 E3            djnz 1B
 177+ 93C2 ED 7B 38 87  3 ld sp,(Stack)
 178+ 93C6 C9           	ret
 179+ 93C7
 180+ 93C7              ; ---------------------------------------------------
 181+ 93C7
 182+ 93C7 ED 73 38 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 93CB FD F9        	ld sp,iy
 184+ 93CD 06 08            ld b,8
 185+ 93CF D1           1 pop de
 186+ 93D0 7A           	ld a,d
 187+ 93D1 AE           	xor (hl)
 188+ 93D2 77           	ld (hl),a
 189+ 93D3 23           	inc hl
 190+ 93D4 D1           	pop de
 191+ 93D5 7B           	ld a,e
 192+ 93D6 AE           	xor (hl)
 193+ 93D7 77           	ld (hl),a
 194+ 93D8 2B           	dec hl
 195+ 93D9 24            	inc h
 196+ 93DA 7C               ld a,h
 197+ 93DB E6 07            and 7
 198+ 93DD 20 0A            jr nz,2F
 199+ 93DF 7D               ld a,l
 200+ 93E0 C6 20            add a,$20
 201+ 93E2 6F               ld l,a
 202+ 93E3 38 04            jr c,2F
 203+ 93E5 7C               ld a,h
 204+ 93E6 D6 08            sub 8
 205+ 93E8 67               ld h,a
 206+ 93E9 7C           2 ld a,h
 207+ 93EA FE 58            cp $58
 208+ 93EC 28 20            jr z,4F
 209+ 93EE D1               pop de
 210+ 93EF 7B           	ld a,e
 211+ 93F0 AE           	xor (hl)
 212+ 93F1 77           	ld (hl),a
 213+ 93F2 23           	inc hl
 214+ 93F3 7A           	ld a,d
 215+ 93F4 AE           	xor (hl)
 216+ 93F5 77           	ld (hl),a
 217+ 93F6 2B           	dec hl
 218+ 93F7 24           	inc h
 219+ 93F8 7C               ld a,h
 220+ 93F9 E6 07            and 7
 221+ 93FB 20 0A            jr nz,3F
 222+ 93FD 7D               ld a,l
 223+ 93FE C6 20            add a,$20
 224+ 9400 6F               ld l,a
 225+ 9401 38 04            jr c,3F
 226+ 9403 7C               ld a,h
 227+ 9404 D6 08            sub 8
 228+ 9406 67               ld h,a
 229+ 9407 7C           3 ld a,h
 230+ 9408 FE 58            cp $58
 231+ 940A 28 02            jr z,4F
 232+ 940C 10 C1            djnz 1B
 233+ 940E ED 7B 38 87  4 ld sp,(Stack)
 234+ 9412 C9           	ret
 235+ 9413
 236+ 9413 ED 73 38 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9417 FD F9        	ld sp,iy
 238+ 9419 06 08            ld b,8
 239+ 941B D1           1 pop de
 240+ 941C D1           	pop de
 241+ 941D 7B           	ld a,e
 242+ 941E AE           	xor (hl)
 243+ 941F 77           	ld (hl),a
 244+ 9420 24            	inc h
 245+ 9421 7C               ld a,h
 246+ 9422 E6 07            and 7
 247+ 9424 20 0A            jr nz,2F
 248+ 9426 7D               ld a,l
 249+ 9427 C6 20            add a,$20
 250+ 9429 6F               ld l,a
 251+ 942A 38 04            jr c,2F
 252+ 942C 7C               ld a,h
 253+ 942D D6 08            sub 8
 254+ 942F 67               ld h,a
 255+ 9430 7C           2 ld a,h
 256+ 9431 FE 58            cp $58
 257+ 9433 28 1B            jr z,4F
 258+ 9435 D1               pop de
 259+ 9436 7A           	ld a,d
 260+ 9437 AE           	xor (hl)
 261+ 9438 77           	ld (hl),a
 262+ 9439 24           	inc h
 263+ 943A 7C               ld a,h
 264+ 943B E6 07            and 7
 265+ 943D 20 0A            jr nz,3F
 266+ 943F 7D               ld a,l
 267+ 9440 C6 20            add a,$20
 268+ 9442 6F               ld l,a
 269+ 9443 38 04            jr c,3F
 270+ 9445 7C               ld a,h
 271+ 9446 D6 08            sub 8
 272+ 9448 67               ld h,a
 273+ 9449 7C           3 ld a,h
 274+ 944A FE 58            cp $58
 275+ 944C 28 02            jr z,4F
 276+ 944E 10 CB            djnz 1B
 277+ 9450 ED 7B 38 87  4 ld sp,(Stack)
 278+ 9454 C9           	ret
 279+ 9455
 280+ 9455 ED 73 38 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9459 FD F9        	ld sp,iy
 282+ 945B 06 08            ld b,8
 283+ 945D D1           1 pop de
 284+ 945E 7B           	ld a,e
 285+ 945F AE           	xor (hl)
 286+ 9460 77           	ld (hl),a
 287+ 9461 23           	inc hl
 288+ 9462 7A           	ld a,d
 289+ 9463 AE           	xor (hl)
 290+ 9464 77           	ld (hl),a
 291+ 9465 2B           	dec hl
 292+ 9466 24             	inc h
 293+ 9467 7C               ld a,h
 294+ 9468 E6 07            and 7
 295+ 946A 20 0A            jr nz,2F
 296+ 946C 7D               ld a,l
 297+ 946D C6 20            add a,$20
 298+ 946F 6F               ld l,a
 299+ 9470 38 04            jr c,2F
 300+ 9472 7C               ld a,h
 301+ 9473 D6 08            sub 8
 302+ 9475 67               ld h,a
 303+ 9476 7C           2 ld a,h
 304+ 9477 FE 58            cp $58
 305+ 9479 28 21            jr z,4F
 306+ 947B D1               pop de
 307+ 947C 7A           	ld a,d
 308+ 947D AE           	xor (hl)
 309+ 947E 77           	ld (hl),a
 310+ 947F 23           	inc hl
 311+ 9480 D1               pop de
 312+ 9481 7B           	ld a,e
 313+ 9482 AE           	xor (hl)
 314+ 9483 77           	ld (hl),a
 315+ 9484 2B           	dec hl
 316+ 9485 24           	inc h
 317+ 9486 7C               ld a,h
 318+ 9487 E6 07            and 7
 319+ 9489 20 0A            jr nz,3F
 320+ 948B 7D               ld a,l
 321+ 948C C6 20            add a,$20
 322+ 948E 6F               ld l,a
 323+ 948F 38 04            jr c,3F
 324+ 9491 7C               ld a,h
 325+ 9492 D6 08            sub 8
 326+ 9494 67               ld h,a
 327+ 9495 7C           3 ld a,h
 328+ 9496 FE 58            cp $58
 329+ 9498 28 02            jr z,4F
 330+ 949A 10 C1            djnz 1B
 331+ 949C ED 7B 38 87  4 ld sp,(Stack)
 332+ 94A0 C9           	ret
 333+ 94A1
 334+ 94A1 ED 73 38 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 94A5 FD F9        	ld sp,iy
 336+ 94A7 06 08            ld b,8
 337+ 94A9 D1           1 pop de
 338+ 94AA 7B           	ld a,e
 339+ 94AB AE           	xor (hl)
 340+ 94AC 77           	ld (hl),a
 341+ 94AD 24            	inc h
 342+ 94AE 7C               ld a,h
 343+ 94AF E6 07            and 7
 344+ 94B1 20 0A            jr nz,2F
 345+ 94B3 7D               ld a,l
 346+ 94B4 C6 20            add a,$20
 347+ 94B6 6F               ld l,a
 348+ 94B7 38 04            jr c,2F
 349+ 94B9 7C               ld a,h
 350+ 94BA D6 08            sub 8
 351+ 94BC 67               ld h,a
 352+ 94BD 7C           2 ld a,h
 353+ 94BE FE 58            cp $58
 354+ 94C0 28 1C            jr z,4F
 355+ 94C2 D1               pop de
 356+ 94C3 7A           	ld a,d
 357+ 94C4 AE           	xor (hl)
 358+ 94C5 77           	ld (hl),a
 359+ 94C6 24           	inc h
 360+ 94C7 7C               ld a,h
 361+ 94C8 E6 07            and 7
 362+ 94CA 20 0A            jr nz,3F
 363+ 94CC 7D               ld a,l
 364+ 94CD C6 20            add a,$20
 365+ 94CF 6F               ld l,a
 366+ 94D0 38 04            jr c,3F
 367+ 94D2 7C               ld a,h
 368+ 94D3 D6 08            sub 8
 369+ 94D5 67               ld h,a
 370+ 94D6 7C           3 ld a,h
 371+ 94D7 FE 58            cp $58
 372+ 94D9 28 03            jr z,4F
 373+ 94DB D1               pop de
 374+ 94DC 10 CB            djnz 1B
 375+ 94DE ED 7B 38 87  4 ld sp,(Stack)
 376+ 94E2 C9           	ret
 377+ 94E3
 378+ 94E3              ; ---------------------------------------------------
 379+ 94E3              ;
 380+ 94E3              ;   27/02/23
 381+ 94E3              ;
 382+ 94E3              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 94E3              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 94E3              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 94E3
 386+ 94E3 ED 73 38 87  Pinta_Disparo ld (Stack),sp
 387+ 94E7 FD F9            ld sp,iy
 388+ 94E9 06 02            ld b,2
 389+ 94EB D1           1 pop de
 390+ 94EC 7B               ld a,e
 391+ 94ED AE               xor (hl)
 392+ 94EE 77               ld (hl),a
 393+ 94EF 23               inc hl
 394+ 94F0 7A               ld a,d
 395+ 94F1 AE               xor (hl)
 396+ 94F2 77               ld (hl),a
 397+ 94F3 2B               dec hl
 398+ 94F4
 399+ 94F4 24               inc h
 400+ 94F5 7C               ld a,h
 401+ 94F6 E6 07            and 7
 402+ 94F8 20 0A            jr nz,2F
 403+ 94FA 7D               ld a,l
 404+ 94FB C6 20            add a,$20
 405+ 94FD 6F               ld l,a
 406+ 94FE 38 04            jr c,2F
 407+ 9500 7C               ld a,h
 408+ 9501 D6 08            sub 8
 409+ 9503 67               ld h,a
 410+ 9504 7C           2 ld a,h
 411+ 9505 FE 58            cp $58
 412+ 9507 28 02            jr z,3F
 413+ 9509
 414+ 9509 10 E0            djnz 1B
 415+ 950B ED 7B 38 87  3 ld sp,(Stack)
 416+ 950F C9               ret
 417+ 9510
# file closed: Rutinas_de_impresion_sprites.asm
1165  9510              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9510              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9510              ;
   3+ 9510              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9510              ;
   5+ 9510              ; *****************************************************************************************************************************************************************************************
   6+ 9510              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9510
   8+ 9510 7C           calcula_tercio ld a,h
   9+ 9511 E6 18        	and $18
  10+ 9513 CB 2F        	sra a
  11+ 9515 CB 2F        	sra a
  12+ 9517 CB 2F        	sra a
  13+ 9519 C9           	ret
  14+ 951A
# file closed: calcula_tercio.asm
1166  951A              	include "Cls.asm"
# file opened: Cls.asm
   1+ 951A              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 951A              ;
   3+ 951A              ;
   4+ 951A              ;	CLS.
   5+ 951A              ;
   6+ 951A              ;	Limpia la pantalla y define sus atributos.
   7+ 951A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 951A              ;
   9+ 951A              ;	COLORES: 0 ..... NEGRO
  10+ 951A              ;    		 1 ..... AZUL
  11+ 951A              ; 			 2 ..... ROJO
  12+ 951A              ;			 3 ..... MAGENTA
  13+ 951A              ; 			 4 ..... VERDE
  14+ 951A              ; 			 5 ..... CIAN
  15+ 951A              ;			 6 ..... AMARILLO
  16+ 951A              ; 			 7 ..... BLANCO
  17+ 951A              ;
  18+ 951A              ;	INPUT: A contiene los atributos de pantalla.
  19+ 951A              ;
  20+ 951A              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 951A
  22+ 951A
  23+ 951A 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 951D 11 01 40     	LD DE,$4001
  25+ 9520 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9523 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9525 ED B0        	LDIR
  28+ 9527 01 FF 02     	LD BC,767
  29+ 952A 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 952B ED B0        	LDIR
  31+ 952D C9           	ret
  32+ 952E
# file closed: Cls.asm
1167  952E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 952E              ; ******************************************************************************************************************************************************************************************
   2+ 952E              ;
   3+ 952E              ;   20/05/23
   4+ 952E              ;
   5+ 952E              ;	Recompone_posicion_inicio
   6+ 952E              ;
   7+ 952E              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 952E              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 952E              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 952E              ;	_ a una u otra rutina.
  11+ 952E
  12+ 952E              Recompone_posicion_inicio
  13+ 952E
  14+ 952E 2A 00 87     	ld hl,(Posicion_inicio)
  15+ 9531 7D           	ld a,l
  16+ 9532 E6 1F        	and $1f
  17+ 9534 28 08        	jr z,1F
  18+ 9536
  19+ 9536 FE 1F        	cp $1f
  20+ 9538 C0           	ret nz
  21+ 9539
  22+ 9539 CD BC 96     	call Mov_left
  23+ 953C 18 03        	jr 2F
  24+ 953E
  25+ 953E CD 9E 95     1 call Mov_right
  26+ 9541
  27+ 9541 C9           2 ret
  28+ 9542
  29+ 9542
  30+ 9542              ; ******************************************************************************************************************************************************************************************
  31+ 9542              ;
  32+ 9542              ;   22/01/23
  33+ 9542              ;
  34+ 9542              ;	Mov_down
  35+ 9542              ;
  36+ 9542              ; 	Mueve el Sprite X px hacia abajo.
  37+ 9542              ;
  38+ 9542              ;
  39+ 9542 21 1C 87     Mov_down ld hl,Ctrl_0
  40+ 9545 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  41+ 9547              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  42+ 9547              ; 																	; _ en el caso de que no lo haya.
  43+ 9547 3A 06 87     	ld a,(Vel_down)
  44+ 954A 47           	ld b,a
  45+ 954B 2A F0 86         ld hl,(Posicion_actual)
  46+ 954E CD 10 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  47+ 9551 E6 02        	and 2
  48+ 9553 28 0F        	jr z,1F
  49+ 9555
  50+ 9555              ; Nos encontramos en el último tercio de pantalla.
  51+ 9555              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  52+ 9555
  53+ 9555 7C           	ld a,h
  54+ 9556 FE 57        	cp $57
  55+ 9558 20 0A        	jr nz,1F
  56+ 955A 7D           	ld a,l
  57+ 955B C6 20        	add $20
  58+ 955D 30 05        	jr nc,1F
  59+ 955F
  60+ 955F              ; ------------------------------
  61+ 955F CD 3A 98     	call Reaparece_arriba
  62+ 9562              ;	call Reinicio
  63+ 9562              ; ------------------------------
  64+ 9562
  65+ 9562 18 08        	jr 3F
  66+ 9564 CD 50 92     1 call NextScan
  67+ 9567 22 F0 86     	ld (Posicion_actual),hl
  68+ 956A 10 E2            djnz 2B
  69+ 956C CD 50 98     3 call Genera_coordenadas
  70+ 956F C9           	ret
  71+ 9570
  72+ 9570              ; ******************************************************************************************************************************************************************************************
  73+ 9570              ;
  74+ 9570              ;   22/01/23
  75+ 9570              ;
  76+ 9570              ;	Mov_up
  77+ 9570              ;
  78+ 9570              ; 	Mueve el Sprite hacia arriba.
  79+ 9570              ;
  80+ 9570              ;
  81+ 9570 21 1C 87     Mov_up ld hl,Ctrl_0
  82+ 9573 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  83+ 9575              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  84+ 9575              ; 																		; _ en el caso de que no lo haya.
  85+ 9575 3A 05 87     	ld a,(Vel_up)
  86+ 9578 47           	ld b,a
  87+ 9579 2A F0 86     	ld hl,(Posicion_actual)
  88+ 957C CD 10 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  89+ 957F A7           	and a
  90+ 9580 20 10        	jr nz,1F
  91+ 9582
  92+ 9582              ; Nos encontramos en el 1er tercio de pantalla.
  93+ 9582              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  94+ 9582
  95+ 9582 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  96+ 9583 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  97+ 9585 20 0B            jr nz,1F
  98+ 9587 7D               ld a,l
  99+ 9588 D6 20            sub $20
 100+ 958A 30 06            jr nc,1F
 101+ 958C 25               dec h
 102+ 958D
 103+ 958D              ; -----------------------------
 104+ 958D CD 2A 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 105+ 9590              ;	call Reinicio
 106+ 9590              ; -----------------------------
 107+ 9590
 108+ 9590 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 109+ 9592 CD 5F 92     1 call PreviousScan
 110+ 9595 22 F0 86     	ld (Posicion_actual),hl
 111+ 9598 10 E2            djnz 3B
 112+ 959A CD 50 98     2 call Genera_coordenadas
 113+ 959D C9           	ret
 114+ 959E
 115+ 959E              ; ******************************************************************************************************************************************************************************************
 116+ 959E              ;
 117+ 959E              ;	19/10/22
 118+ 959E              ;
 119+ 959E              ;	Mov_right.
 120+ 959E              ;
 121+ 959E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 122+ 959E              ;
 123+ 959E
 124+ 959E 21 1C 87     Mov_right ld hl,Ctrl_0
 125+ 95A1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 126+ 95A3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 127+ 95A3              ; 																	; _ en el caso de que no lo haya.
 128+ 95A3 3A 1C 87     	ld a,(Ctrl_0)
 129+ 95A6 CB 77        	bit 6,a
 130+ 95A8 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 131+ 95AA
 132+ 95AA CD D8 97     	call Stop_Amadeus_right
 133+ 95AD C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 134+ 95AE 18 4D        	jr 8F
 135+ 95B0
 136+ 95B0 3A F4 86     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 137+ 95B3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 138+ 95B5 20 46        	jr nz,8F
 139+ 95B7
 140+ 95B7 3A F6 86     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 141+ 95BA A7           	and a 															; _[3] para continuar con el DESPLZ.
 142+ 95BB 28 40        	jr z,8F
 143+ 95BD
 144+ 95BD              ; ---------- ---------- ----------
 145+ 95BD              ;
 146+ 95BD              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 147+ 95BD
 148+ 95BD 3A 04 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 149+ 95C0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 150+ 95C2 28 11        	jr z,1F
 151+ 95C4 38 06        	jr c,6F
 152+ 95C6 FE 04        	cp 4
 153+ 95C8 28 14        	jr z,7F
 154+ 95CA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 155+ 95CC
 156+ 95CC              ; ---------- ---------- ----------
 157+ 95CC              ;
 158+ 95CC              ; Perfiles de velocidad
 159+ 95CC              ;
 160+ 95CC
 161+ 95CC 3A F6 86     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 162+ 95CF FE FE        	cp $fe
 163+ 95D1 20 2A        	jr nz,8F
 164+ 95D3 18 10        	jr 3F
 165+ 95D5 3A F6 86     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 166+ 95D8 FE FD        	cp $fd
 167+ 95DA 20 21        	jr nz,8F
 168+ 95DC 18 07        	jr 3F
 169+ 95DE 3A F6 86     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 170+ 95E1 FE FB        	cp $fb
 171+ 95E3 20 18        	jr nz,8F
 172+ 95E5
 173+ 95E5              ; ---------- ---------- ----------
 174+ 95E5
 175+ 95E5              3
 176+ 95E5 CD 18 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 177+ 95E8              ;	call Reinicio
 178+ 95E8
 179+ 95E8              ; ---------- ---------- ----------
 180+ 95E8              ;
 181+ 95E8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 182+ 95E8
 183+ 95E8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 184+ 95EA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 185+ 95EB CD 04 96     	call DESPLZ_DER
 186+ 95EE C1           	pop bc
 187+ 95EF 10 F9        	djnz 5B
 188+ 95F1 2A F0 86     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 189+ 95F4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 190+ 95F5 22 F0 86     	ld (Posicion_actual),hl
 191+ 95F8 CD 50 98     	call Genera_coordenadas
 192+ 95FB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 193+ 95FD
 194+ 95FD              ; ---------- ---------- ----------
 195+ 95FD
 196+ 95FD 2A F0 86     8 ld hl,(Posicion_actual)
 197+ 9600 CD 04 96     	call DESPLZ_DER
 198+ 9603 C9           2 ret
 199+ 9604
 200+ 9604              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 201+ 9604              ;
 202+ 9604              ;	22/9/22
 203+ 9604              ;
 204+ 9604
 205+ 9604 CD 13 96     DESPLZ_DER call Desplaza_derecha
 206+ 9607 CD 5F 96         call modifica_parametros_1er_DESPLZ_2
 207+ 960A CD 88 96         call Ciclo_completo
 208+ 960D 21 1C 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 209+ 9610 CB FE        	set 7,(hl)
 210+ 9612 C9           	ret
 211+ 9613
 212+ 9613              ; ******************************************************************************************************************************************************************************************
 213+ 9613              ;	15/02/23
 214+ 9613              ;
 215+ 9613
 216+ 9613 3A 04 87     Desplaza_derecha ld a,(Vel_right)
 217+ 9616 47           	ld b,a
 218+ 9617 2A FC 86     	ld hl,(Puntero_DESPLZ_der)
 219+ 961A 23           1 inc hl
 220+ 961B 23           	inc hl
 221+ 961C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 222+ 961E 22 FC 86     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 223+ 9621 CD E7 89     	call Extrae_address
 224+ 9624 22 F2 86     	ld (Puntero_objeto),hl
 225+ 9627
 226+ 9627              ; Modifica (Puntero_DESPLZ_izq).
 227+ 9627
 228+ 9627              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 229+ 9627              ; Cuántos movimientos hemos hecho ??
 230+ 9627              ; DE contiene (Puntero_DESPLZ_der).
 231+ 9627
 232+ 9627 2A F8 86     7 ld hl,(Indice_Sprite_der)
 233+ 962A EB           	ex de,hl
 234+ 962B A7           	and a
 235+ 962C ED 52        	sbc hl,de
 236+ 962E CB 3D        	srl l
 237+ 9630 3E 08        6 ld a,8
 238+ 9632 95           	sub l
 239+ 9633 30 1E        	jr nc,3F
 240+ 9635
 241+ 9635              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 242+ 9635              ; B="0".
 243+ 9635
 244+ 9635 04           4 inc b
 245+ 9636 3C           	inc a
 246+ 9637 20 FC        	jr nz,4B
 247+ 9639 78           	ld a,b
 248+ 963A 08           	ex af,af
 249+ 963B 2A F8 86     	ld hl,(Indice_Sprite_der)
 250+ 963E 23           5 inc hl
 251+ 963F 23           	inc hl
 252+ 9640 10 FC        	djnz 5B
 253+ 9642 22 FC 86     	ld (Puntero_DESPLZ_der),hl
 254+ 9645 CD E7 89     	call Extrae_address
 255+ 9648 22 F2 86     	ld (Puntero_objeto),hl
 256+ 964B
 257+ 964B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 258+ 964B              ; _(Posicion_actual).
 259+ 964B
 260+ 964B 21 F0 86     	ld hl,Posicion_actual
 261+ 964E 34           	inc (hl)
 262+ 964F 08               ex af,af
 263+ 9650 6F           	ld l,a
 264+ 9651 18 DD        	jr 6B
 265+ 9653
 266+ 9653              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 267+ 9653
 268+ 9653 47           3 ld b,a
 269+ 9654 2A FA 86     	ld hl,(Indice_Sprite_izq)
 270+ 9657 23           2 inc hl
 271+ 9658 23           	inc hl
 272+ 9659 10 FC        	djnz 2B
 273+ 965B 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 274+ 965E C9           8 ret
 275+ 965F
 276+ 965F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 277+ 965F              ;
 278+ 965F              ;	24/7/22
 279+ 965F              ;
 280+ 965F              ;	modifica_parametros_1er_DESPLZ_2
 281+ 965F              ;
 282+ 965F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 283+ 965F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 284+ 965F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 285+ 965F
 286+ 965F 3A F6 86     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 287+ 9662 A7           	and a
 288+ 9663 20 1F        	jr nz,1F
 289+ 9665 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 290+ 9667 32 F6 86         ld (CTRL_DESPLZ),a
 291+ 966A
 292+ 966A 21 EF 86     	ld hl,Columns
 293+ 966D 34           	inc (hl)
 294+ 966E 3A 02 87     	ld a,(Cuad_objeto)
 295+ 9671 E6 01        	and 1
 296+ 9673 28 0F        	jr z,1F
 297+ 9675 2A F0 86     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 298+ 9678 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 299+ 9679 22 F0 86     	ld (Posicion_actual),hl
 300+ 967C CD 50 98     	call Genera_coordenadas
 301+ 967F CD E4 97     	call Inc_CTRL_DESPLZ
 302+ 9682 18 03        	jr 2F
 303+ 9684 CD E4 97     1 call Inc_CTRL_DESPLZ
 304+ 9687 C9           2 ret
 305+ 9688
 306+ 9688              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 307+ 9688              ;
 308+ 9688              ;	24/7/22
 309+ 9688              ;
 310+ 9688              ;	Ciclo_completo.
 311+ 9688              ;
 312+ 9688              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 313+ 9688              ;
 314+ 9688              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 315+ 9688              ; 	Decrementamos (Columns).
 316+ 9688              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 317+ 9688              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 318+ 9688
 319+ 9688
 320+ 9688 3A F6 86     Ciclo_completo ld a,(CTRL_DESPLZ)
 321+ 968B FE FF        	cp $ff
 322+ 968D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 323+ 968F E6 F0        	and $f0
 324+ 9691 20 28        	jr nz,3F
 325+ 9693
 326+ 9693              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 327+ 9693
 328+ 9693 3A F6 86     	ld a,(CTRL_DESPLZ)
 329+ 9696 47           	ld b,a
 330+ 9697 3E F8        	ld a,$f8
 331+ 9699 80           	add b
 332+ 969A 32 F6 86     	ld (CTRL_DESPLZ),a
 333+ 969D 18 1C        	jr 3F
 334+ 969F 21 EF 86     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 335+ 96A2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 336+ 96A3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 337+ 96A4 32 F6 86     	ld (CTRL_DESPLZ),a
 338+ 96A7 3A 02 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 339+ 96AA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 340+ 96AC 20 0A        	jr nz,2F
 341+ 96AE 2A F0 86     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 342+ 96B1 23           	inc hl
 343+ 96B2 22 F0 86     	ld (Posicion_actual),hl
 344+ 96B5 CD 50 98     	call Genera_coordenadas
 345+ 96B8
 346+ 96B8              ; Inicia el puntero de Sprite.
 347+ 96B8
 348+ 96B8 CD FE 89     2 call Inicia_puntero_objeto_der
 349+ 96BB C9           3 ret
 350+ 96BC
 351+ 96BC              ; ******************************************************************************************************************************************************************************************
 352+ 96BC              ;
 353+ 96BC              ;	15/02/23
 354+ 96BC              ;
 355+ 96BC              ;	Mov_left.
 356+ 96BC              ;
 357+ 96BC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 358+ 96BC              ;
 359+ 96BC 21 1C 87     Mov_left ld hl,Ctrl_0
 360+ 96BF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 361+ 96C1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 362+ 96C1              ; 																	; _ en el caso de que no lo haya.
 363+ 96C1 3A 1C 87     	ld a,(Ctrl_0)
 364+ 96C4 CB 77        	bit 6,a
 365+ 96C6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 366+ 96C8
 367+ 96C8 CD DE 97     	call Stop_Amadeus_left
 368+ 96CB C8           	ret z
 369+ 96CC 20 4A        	jr nz,8F
 370+ 96CE
 371+ 96CE 3A F4 86     11 ld a,(Coordenada_X)
 372+ 96D1 A7           	and a
 373+ 96D2 20 44        	jr nz,8F
 374+ 96D4
 375+ 96D4 3A F6 86     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 376+ 96D7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 377+ 96D8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 378+ 96DA
 379+ 96DA              ; ---------- ---------- ----------
 380+ 96DA
 381+ 96DA 3A 03 87     	ld a,(Vel_left)
 382+ 96DD FE 02        	cp 2
 383+ 96DF 28 0F        	jr z,1F
 384+ 96E1 38 04        	jr c,6F
 385+ 96E3 FE 04        	cp 4
 386+ 96E5 28 12        	jr z,7F
 387+ 96E7
 388+ 96E7              ; ---------- ---------- ----------
 389+ 96E7
 390+ 96E7 3A F6 86     6 ld a,(CTRL_DESPLZ)
 391+ 96EA FE F8        	cp $f8
 392+ 96EC 20 2A        	jr nz,8F
 393+ 96EE 18 10        	jr 4F
 394+ 96F0 3A F6 86     1 ld a,(CTRL_DESPLZ)
 395+ 96F3 FE F9        	cp $f9
 396+ 96F5 20 21        	jr nz,8F
 397+ 96F7 18 07        	jr 4F
 398+ 96F9 3A F6 86     7 ld a,(CTRL_DESPLZ)
 399+ 96FC FE FB        	cp $fb
 400+ 96FE 20 18        	jr nz,8F
 401+ 9700
 402+ 9700              ; ---------- ---------- ----------
 403+ 9700
 404+ 9700              4
 405+ 9700 CD 06 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 406+ 9703              ;	call Reinicio
 407+ 9703
 408+ 9703              ; ---------- ---------- ----------
 409+ 9703
 410+ 9703 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 411+ 9705 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 412+ 9706
 413+ 9706              ;	ld hl,(Indice_Sprite_izq)
 414+ 9706              ;	ld (Puntero_DESPLZ_izq),hl
 415+ 9706
 416+ 9706 CD 1F 97     	call DESPLZ_IZQ
 417+ 9709 C1           	pop bc
 418+ 970A 10 F9        	djnz 5B
 419+ 970C 2A F0 86     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 420+ 970F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 421+ 9710 22 F0 86     	ld (Posicion_actual),hl
 422+ 9713 CD 50 98     	call Genera_coordenadas
 423+ 9716 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 424+ 9718
 425+ 9718              ; ---------- ---------- ----------
 426+ 9718
 427+ 9718              ; Movemos, no hay recolocación.
 428+ 9718
 429+ 9718 2A F0 86     8 ld hl,(Posicion_actual)
 430+ 971B CD 1F 97     	call DESPLZ_IZQ
 431+ 971E C9           2 ret
 432+ 971F
 433+ 971F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 434+ 971F              ;
 435+ 971F              ;	22/9/22
 436+ 971F
 437+ 971F              DESPLZ_IZQ
 438+ 971F
 439+ 971F CD 2E 97     	call Desplaza_izquierda
 440+ 9722 CD 7A 97         call modifica_parametros_1er_DESPLZ
 441+ 9725 CD A2 97     	call Ciclo_completo_2
 442+ 9728 21 1C 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 443+ 972B CB BE        	res 7,(hl)
 444+ 972D C9           	ret
 445+ 972E
 446+ 972E              Desplaza_izquierda
 447+ 972E
 448+ 972E 3A 03 87     	ld a,(Vel_left)
 449+ 9731 47           	ld b,a
 450+ 9732 2A FE 86     	ld hl,(Puntero_DESPLZ_izq)
 451+ 9735 23           1 inc hl
 452+ 9736 23           	inc hl
 453+ 9737 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 454+ 9739 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 455+ 973C CD E7 89     	call Extrae_address
 456+ 973F 22 F2 86     	ld (Puntero_objeto),hl
 457+ 9742
 458+ 9742              ; Modifica (Puntero_DESPLZ_der).
 459+ 9742
 460+ 9742              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 461+ 9742              ; Cuántos movimientos hemos hecho ??
 462+ 9742              ; DE contiene (Puntero_DESPLZ_izq).
 463+ 9742
 464+ 9742 2A FA 86     7 ld hl,(Indice_Sprite_izq)
 465+ 9745 EB           	ex de,hl
 466+ 9746 A7           	and a
 467+ 9747 ED 52        	sbc hl,de
 468+ 9749 CB 3D        	srl l
 469+ 974B 3E 08        6 ld a,8
 470+ 974D 95           	sub l
 471+ 974E 30 1E        	jr nc,3F
 472+ 9750
 473+ 9750              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 474+ 9750              ; B="0".
 475+ 9750
 476+ 9750 04           4 inc b
 477+ 9751 3C           	inc a
 478+ 9752 20 FC        	jr nz,4B
 479+ 9754 78           	ld a,b
 480+ 9755 08           	ex af,af
 481+ 9756 2A FA 86     	ld hl,(Indice_Sprite_izq)
 482+ 9759 23           5 inc hl
 483+ 975A 23           	inc hl
 484+ 975B 10 FC        	djnz 5B
 485+ 975D 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 486+ 9760 CD E7 89     	call Extrae_address
 487+ 9763 22 F2 86     	ld (Puntero_objeto),hl
 488+ 9766
 489+ 9766              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 490+ 9766              ; _(Posicion_actual).
 491+ 9766
 492+ 9766 21 F0 86     	ld hl,Posicion_actual
 493+ 9769 35           	dec (hl)
 494+ 976A 08           	ex af,af
 495+ 976B 6F           	ld l,a
 496+ 976C 18 DD        	jr 6B
 497+ 976E
 498+ 976E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 499+ 976E
 500+ 976E 47           3 ld b,a
 501+ 976F 2A F8 86     	ld hl,(Indice_Sprite_der)
 502+ 9772 23           2 inc hl
 503+ 9773 23           	inc hl
 504+ 9774 10 FC        	djnz 2B
 505+ 9776 22 FC 86     	ld (Puntero_DESPLZ_der),hl
 506+ 9779 C9           8 ret
 507+ 977A
 508+ 977A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 977A              ;
 510+ 977A              ;	modifica_parametros_1er_DESPLZ
 511+ 977A              ;
 512+ 977A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 513+ 977A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 514+ 977A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 515+ 977A
 516+ 977A 3A F6 86     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 517+ 977D A7           	and a
 518+ 977E 20 1E        	jr nz,1F
 519+ 9780 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 520+ 9781 32 F6 86         ld (CTRL_DESPLZ),a
 521+ 9784 21 EF 86     	ld hl,Columns
 522+ 9787 34           	inc (hl)
 523+ 9788 3A 02 87     	ld a,(Cuad_objeto)
 524+ 978B E6 01        	and 1
 525+ 978D 20 0F        	jr nz,1F
 526+ 978F 2A F0 86     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 527+ 9792 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 528+ 9793 22 F0 86     	ld (Posicion_actual),hl
 529+ 9796 CD 50 98     	call Genera_coordenadas
 530+ 9799 CD F5 97     	call Dec_CTRL_DESPLZ
 531+ 979C 18 03        	jr 2F
 532+ 979E CD F5 97     1 call Dec_CTRL_DESPLZ
 533+ 97A1 C9           2 ret
 534+ 97A2
 535+ 97A2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 536+ 97A2
 537+ 97A2 3A F6 86     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 538+ 97A5 FE F7        	cp $f7
 539+ 97A7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 540+ 97A9 30 2C        	jr nc,3F
 541+ 97AB
 542+ 97AB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 543+ 97AB
 544+ 97AB 06 00        	ld b,0
 545+ 97AD 04           4 inc b
 546+ 97AE 3C           	inc a
 547+ 97AF FE F7        	cp $f7
 548+ 97B1 20 FA        	jr nz,4B
 549+ 97B3 3E FF        	ld a,$ff
 550+ 97B5 90           	sub b
 551+ 97B6 32 F6 86     	ld (CTRL_DESPLZ),a
 552+ 97B9 18 1C        	jr 3F
 553+ 97BB
 554+ 97BB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 555+ 97BB
 556+ 97BB 21 EF 86     1 ld hl,Columns
 557+ 97BE 35           	dec (hl)
 558+ 97BF AF           	xor a
 559+ 97C0 32 F6 86     	ld (CTRL_DESPLZ),a
 560+ 97C3 3A 02 87     	ld a,(Cuad_objeto)
 561+ 97C6 E6 01        	and 1
 562+ 97C8 28 0A        	jr z,2F
 563+ 97CA 2A F0 86     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 564+ 97CD 2B           	dec hl
 565+ 97CE 22 F0 86     	ld (Posicion_actual),hl
 566+ 97D1 CD 50 98     	call Genera_coordenadas
 567+ 97D4
 568+ 97D4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 569+ 97D4
 570+ 97D4 CD 11 8A     2 call Inicia_puntero_objeto_izq
 571+ 97D7 C9           3 ret
 572+ 97D8
 573+ 97D8              ; ---------- ---------- ---------- ---------- ---------- ----------
 574+ 97D8              ;
 575+ 97D8              ;	19/10/22
 576+ 97D8              ;
 577+ 97D8              ;	(cp 29) para un Amadeus de 3 Columns.
 578+ 97D8              ;	(cp 30)   ""  ""    ""     2 Columns.
 579+ 97D8
 580+ 97D8 3A F4 86     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 581+ 97DB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 582+ 97DD C9           	ret
 583+ 97DE
 584+ 97DE              ; ---------- ---------- ---------- ---------- ---------- ----------
 585+ 97DE              ;
 586+ 97DE              ;	19/10/22
 587+ 97DE              ;
 588+ 97DE              ;	(cp 2) para un Amadeus de 3 Columns.
 589+ 97DE              ;	(cp 1)   ""  ""    ""     2 Columns.
 590+ 97DE
 591+ 97DE 3A F4 86     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 592+ 97E1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 593+ 97E3 C9           	ret
 594+ 97E4
 595+ 97E4              ; ---------- ---------- ---------- ---------- ---------- ----------
 596+ 97E4              ;
 597+ 97E4              ;	24/7/22
 598+ 97E4              ;
 599+ 97E4              ;	Inc_CTRL_DESPLZ
 600+ 97E4              ;
 601+ 97E4              ;
 602+ 97E4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 603+ 97E4
 604+ 97E4 21 F6 86     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 605+ 97E7 3A 04 87     	ld a,(Vel_right)
 606+ 97EA A7           	and a
 607+ 97EB 28 06        	jr z,1F
 608+ 97ED 47           	ld b,a
 609+ 97EE 34           3 inc (hl)
 610+ 97EF 10 FD        	djnz 3B
 611+ 97F1 18 01        	jr 2F
 612+ 97F3 34           1 inc (hl)
 613+ 97F4 C9           2 ret
 614+ 97F5
 615+ 97F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 616+ 97F5              ;
 617+ 97F5              ;	5/2/23
 618+ 97F5              ;
 619+ 97F5              ;	Dec_CTRL_DESPLZ
 620+ 97F5              ;
 621+ 97F5              ;
 622+ 97F5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 623+ 97F5
 624+ 97F5 21 F6 86     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 625+ 97F8 3A 03 87     	ld a,(Vel_left)
 626+ 97FB A7           	and a
 627+ 97FC 28 06        	jr z,1F
 628+ 97FE 47           	ld b,a
 629+ 97FF 35           3 dec (hl)
 630+ 9800 10 FD        	djnz 3B
 631+ 9802 18 01        	jr 2F
 632+ 9804 35           1 dec (hl)
 633+ 9805 C9           2 ret
 634+ 9806
 635+ 9806              ; ---------- ---------- ---------- ---------- ---------- ----------
 636+ 9806
 637+ 9806 2A F0 86     Reaparece_derecha ld hl,(Posicion_actual)
 638+ 9809 01 1F 00     	ld bc,31
 639+ 980C A7           	and a
 640+ 980D ED 4A        	adc hl,bc
 641+ 980F 22 F0 86     	ld (Posicion_actual),hl
 642+ 9812 21 1C 87     	ld hl,Ctrl_0														; $xxx1
 643+ 9815 CB C6        	set 0,(hl)
 644+ 9817 C9           	ret
 645+ 9818
 646+ 9818              ; ---------- ---------- ---------- ---------- ---------- ----------
 647+ 9818
 648+ 9818 2A F0 86     Reaparece_izquierda ld hl,(Posicion_actual)
 649+ 981B 01 1F 00     	ld bc,31
 650+ 981E A7           	and a
 651+ 981F ED 42        	sbc hl,bc
 652+ 9821 22 F0 86     	ld (Posicion_actual),hl 											; $xx1x
 653+ 9824 21 1C 87     	ld hl,Ctrl_0
 654+ 9827 CB CE        	set 1,(hl)
 655+ 9829 C9           	ret
 656+ 982A
 657+ 982A              ; ---------- ---------- ---------- ---------- ---------- ----------
 658+ 982A
 659+ 982A 24           Reaparece_abajo inc h
 660+ 982B 01 E0 17     	ld bc,$17e0
 661+ 982E A7           	and a
 662+ 982F ED 4A        	adc hl,bc
 663+ 9831 22 F0 86     	ld (Posicion_actual),hl
 664+ 9834 21 1C 87     	ld hl,Ctrl_0
 665+ 9837 CB D6        	set 2,(hl)
 666+ 9839 C9           	ret
 667+ 983A
 668+ 983A              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 983A
 670+ 983A 01 E0 17     Reaparece_arriba ld bc,$17e0
 671+ 983D A7           	and a
 672+ 983E ED 42        	sbc hl,bc
 673+ 9840 22 F0 86     	ld (Posicion_actual),hl
 674+ 9843 21 1C 87     	ld hl,Ctrl_0
 675+ 9846 CB DE        	set 3,(hl)
 676+ 9848 C9           	ret
 677+ 9849
 678+ 9849              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 679+ 9849
 680+ 9849 2A 00 87     Reinicio ld hl,(Posicion_inicio)
 681+ 984C 22 F0 86     	ld (Posicion_actual),hl
 682+ 984F C9           	ret
# file closed: Direcciones.asm
1168  9850              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9850              ; ------------------------------------------------------------------------
   2+ 9850              ;
   3+ 9850              ;	02/04/23
   4+ 9850              ;
   5+ 9850              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9850              ;	Fila superior "0", Columna izquierda "0".
   7+ 9850              ;
   8+ 9850              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9850              ;
  10+ 9850              ;	Modifica: A,BC y DE.
  11+ 9850
  12+ 9850 C5           Genera_coordenadas push bc
  13+ 9851 E5           	push hl
  14+ 9852 D5           	push de
  15+ 9853
  16+ 9853 2A F0 86     	ld hl,(Posicion_actual)
  17+ 9856
  18+ 9856 7D           	ld a,l
  19+ 9857 E6 1F        	and $1f
  20+ 9859 32 F4 86     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 985C
  22+ 985C CD 10 95     	call calcula_tercio
  23+ 985F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9860
  25+ 9860 1E 00        	ld e,0
  26+ 9862 7D           	ld a,l
  27+ 9863 E6 E0        	and $e0
  28+ 9865 28 01        	jr z,1F
  29+ 9867 04           	inc b
  30+ 9868
  31+ 9868 04           1 inc b
  32+ 9869 05           	dec b
  33+ 986A 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 986C              ;														; _ , salimos.
  35+ 986C 1C           3 inc e
  36+ 986D D6 20        	sub 32
  37+ 986F 20 FB        	jr nz,3B
  38+ 9871 10 F5        	djnz 1B
  39+ 9873
  40+ 9873 7B           2 ld a,e
  41+ 9874 32 F5 86     	ld (Coordenada_y),a
  42+ 9877
  43+ 9877 D1           	pop de
  44+ 9878 E1           	pop hl
  45+ 9879 C1           	pop bc
  46+ 987A
  47+ 987A C9           	ret
  48+ 987B
  49+ 987B              ; ------------------------------------------------------------------------
  50+ 987B              ;	28/03/23
  51+ 987B              ;
  52+ 987B              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 987B              ;	Fila superior "0", Columna izquierda "0".
  54+ 987B              ;
  55+ 987B              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 987B              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 987B              ;
  58+ 987B              ;		DE="$120d"
  59+ 987B              ;
  60+ 987B              ;		D, (Coordenada_X), Columnas, $12
  61+ 987B              ;		E, (Coordenada_y), Filas, $0d
  62+ 987B              ;
  63+ 987B              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 987B
  65+ 987B              ;	Modifica: A,BC y DE.
  66+ 987B
  67+ 987B
  68+ 987B              Genera_coordenadas_disparo
  69+ 987B
  70+ 987B              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 987B
  72+ 987B 7D           	ld a,l
  73+ 987C E6 1F        	and $1f
  74+ 987E 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 987F CD 10 95     	call calcula_tercio
  76+ 9882 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9883 1E 00        	ld e,0
  78+ 9885 7D           	ld a,l
  79+ 9886 E6 E0        	and $e0
  80+ 9888 28 01        	jr z,1F
  81+ 988A 04           	inc b
  82+ 988B 1C           1 inc e
  83+ 988C D6 20        	sub 32
  84+ 988E 20 FB        	jr nz,1B
  85+ 9890 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9892 C9           	ret
  87+ 9893
# file closed: Genera_coordenadas.asm
1169  9893              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9893
   2+ 9893
   3+ 9893              ;   11/8/22
   4+ 9893              ;
   5+ 9893              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9893              ;
   7+ 9893              ;   Mov_obj.asm
   8+ 9893              ;
   9+ 9893              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9893              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9893              ;
  12+ 9893              ;   Codificación:
  13+ 9893              ;
  14+ 9893              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9893
  16+ 9893              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9893
  18+ 9893 02 40 00     Arriba db 2,%01000000,0
  19+ 9896 02 80 00     Abajo db 2,%10000000,0
  20+ 9899 02 20 00     Derecha db 2,%00100000,0
  21+ 989C 02 10 00     Izquierda db 2,%00010000,0
  22+ 989F 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 98A3 60 42 60 40
  22+ 98A7 63
  23+ 98A8 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 98AC 22 A3 80 A0
  24+ 98B0 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 98B4 84 A0 83 A0
  25+ 98B8 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 98BC 80 A3 22 A0
  26+ 98C0 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 98C4 40 60 42 60
  27+ 98C8 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 98CC
  29+ 98CC 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 98D0 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 98D4 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 98D8 84 00
  32+ 98DA 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 98DE 84 00
  33+ 98E0 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 98E4 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 98E8 1F 1F 1F 1F
  35+ 98EC 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 98F0 1F 1F 1F 1F
  35+ 98F4 1F
  36+ 98F5 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 98F9 2F 2F 2F 2F
  36+ 98FD 2F 2F
  37+ 98FF 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9903 2F 2F 00
  38+ 9906
  39+ 9906              ; ----- ----- ----- ----- -----
  40+ 9906
  41+ 9906 E4 98        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9908 E0 98        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 990A 9C 98        Indice_mov_Izquierda defw Izquierda
  44+ 990C 99 98        Indice_mov_Derecha defw Derecha
  45+ 990E 96 98        Indice_mov_Abajo defw Abajo
  46+ 9910 93 98        Indice_mov_Arriba defw Arriba
  47+ 9912 D0 98        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9914 D4 98        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9916 CC 98        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9918 DA 98        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 991A 9F 98        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 991C              ; ----- ----- ----- ----- -----
  53+ 991C
  54+ 991C 3A 23 87     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 991F A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9920 28 02            jr z,1F
  57+ 9922 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9924 3A 24 87     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9927 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9929 32 24 87         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 992C              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 992C 2A 21 87         ld hl,(Puntero_mov)
  63+ 992F 7E               ld a,(hl)
  64+ 9930 32 23 87         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9933 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9934 22 21 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9937
  68+ 9937 3A 25 87     Decoder ld a,(Repetimos_db)
  69+ 993A A7               and a
  70+ 993B 20 0C            jr nz,12F
  71+ 993D 2A 21 87         ld hl,(Puntero_mov)
  72+ 9940 7E               ld a,(hl)
  73+ 9941 A7               and a
  74+ 9942 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9944 E6 0F            and $0f
  76+ 9946 32 25 87         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9949              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9949 2A 21 87     12 ld hl,(Puntero_mov)
  79+ 994C CB 7E            bit 7,(hl)
  80+ 994E 28 03            jr z,2F
  81+ 9950 CD 42 95         call Mov_down
  82+ 9953 2A 21 87     2 ld hl, (Puntero_mov)
  83+ 9956 CB 76            bit 6,(hl)
  84+ 9958 28 03            jr z,3F
  85+ 995A CD 70 95         call Mov_up
  86+ 995D 2A 21 87     3 ld hl, (Puntero_mov)
  87+ 9960 CB 6E            bit 5,(hl)
  88+ 9962 28 03            jr z,4F
  89+ 9964 CD 9E 95         call Mov_right
  90+ 9967 2A 21 87     4 ld hl, (Puntero_mov)
  91+ 996A CB 66            bit 4,(hl)
  92+ 996C 28 03            jr z,5F
  93+ 996E CD BC 96         call Mov_left
  94+ 9971
  95+ 9971              ; ---------- --------- --------- ---------- ----------
  96+ 9971
  97+ 9971 3A 25 87     5 ld a,(Repetimos_db)
  98+ 9974 A7               and a
  99+ 9975 28 07            jr z,6F
 100+ 9977 3D               dec a
 101+ 9978 32 25 87         ld (Repetimos_db),a
 102+ 997B 28 01            jr z,6f
 103+ 997D C9           11 ret
 104+ 997E 21 23 87     6 ld hl,Contador_db_mov
 105+ 9981 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9982 2A 21 87         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9985 23               inc hl
 108+ 9986 22 21 87         ld (Puntero_mov),hl
 109+ 9989 18 F2            jr 11B
 110+ 998B 2A 1F 87     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 998E 3A 24 87         ld a,(Incrementa_puntero)
 112+ 9991 47               ld b,a
 113+ 9992 23           8 inc hl
 114+ 9993 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9995 5E               ld e,(hl)
 116+ 9996 23               inc hl
 117+ 9997 56               ld d,(hl)
 118+ 9998 EB               ex de,hl
 119+ 9999 22 21 87         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 999C 18 DF            jr 11B
 121+ 999E
 122+ 999E              ; ---------- --------- --------- ---------- ----------
 123+ 999E              ;
 124+ 999E              ;   11/8/22
 125+ 999E              ;
 126+ 999E              ;   Prepara_Puntero_mov
 127+ 999E
 128+ 999E E5           Prepara_Puntero_mov push hl
 129+ 999F D5               push de
 130+ 99A0 2A 1F 87         ld hl,(Puntero_indice_mov)
 131+ 99A3 5E               ld e,(hl)
 132+ 99A4 23               inc hl
 133+ 99A5 56               ld d,(hl)
 134+ 99A6 EB               ex de,hl
 135+ 99A7 22 21 87         ld (Puntero_mov),hl
 136+ 99AA D1               pop de
 137+ 99AB E1               pop hl
 138+ 99AC C9               ret
 139+ 99AD
 140+ 99AD              ; ---------- --------- --------- ---------- ----------
 141+ 99AD              ;
 142+ 99AD              ;   11/8/22
 143+ 99AD              ;
 144+ 99AD              ;   Reinicia_el_movimiento
 145+ 99AD
 146+ 99AD CD 9E 99     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 99B0 AF               xor a
 148+ 99B1 32 23 87         ld (Contador_db_mov),a
 149+ 99B4 32 24 87         ld (Incrementa_puntero),a
 150+ 99B7 C3 1C 99         jp Movimiento
 151+ 99BA C9               ret
 152+ 99BB              ; ---------- --------- --------- ---------- ----------
 153+ 99BB
 154+ 99BB
 155+ 99BB
 156+ 99BB
 157+ 99BB
 158+ 99BB
 159+ 99BB
 160+ 99BB
 161+ 99BB
 162+ 99BB
 163+ 99BB
 164+ 99BB
 165+ 99BB
 166+ 99BB
 167+ 99BB
 168+ 99BB
 169+ 99BB
 170+ 99BB
# file closed: Patrones_de_mov.asm
1170  99BB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 99BB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 99BB              ;
   3+ 99BB              ;	3/1/23
   4+ 99BB              ;
   5+ 99BB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 99BB
   7+ 99BB              ;	ADC HL,SP	LD (addr),SP
   8+ 99BB              ;	ADD HL,SP	LD SP,(addr)
   9+ 99BB              ;	ADD IX,SP	LD SP,nn
  10+ 99BB              ; 	ADD IY,SP	LD SP,HL
  11+ 99BB              ;				LD SP,IX
  12+ 99BB              ;	DEC SP		LD SP,IY
  13+ 99BB
  14+ 99BB              ;	EX (SP),HL
  15+ 99BB              ;	EX (SP),IX
  16+ 99BB              ;	EX (SP),IY
  17+ 99BB
  18+ 99BB              ;	INC SP
  19+ 99BB
  20+ 99BB
  21+ 99BB                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 38 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 2B 87         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 3E 87         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 3C 87     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 3E 87         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 3C 87     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 38 87  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1171  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1172  7FE6
1173  7FE6              	SAVESNA "Pruebas.sna", START
1174  7FE6
1175  7FE6
1176  7FE6
# file closed: Banco_de_pruebas.asm
