# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E0 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD 5C 8E     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD 6C 8E     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 EA 88     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B E0 88  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 15/01/24
   6+ 84EC
   7+ 84EC 57 9D        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	9/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades						; ! 56 Bytes por entidad.
 107+ 8570
 108+ 8570 C6 85        	defw Caja_1
 109+ 8572 FE 85        	defw Caja_2
 110+ 8574 36 86        	defw Caja_3
 111+ 8576 6E 86        	defw Caja_4
 112+ 8578 A6 86        	defw Caja_5
 113+ 857A DE 86        	defw Caja_6
 114+ 857C 16 87        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C
 128+ 858C 05           	db %00000101										; (Attr).
 129+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 130+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 131+ 8591
 132+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 133+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 134+ 8595
 135+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 136+ 8597 04           	db 4 												; (Cuad_objeto).
 137+ 8598 02 02 00 00  	db 2,2,0,0											; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 138+ 859C
 139+ 859C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 140+ 859D
 141+ 859D 00 00 00...  	ds 6												; Variables_de_borrado
 142+ 85A3
 143+ 85A3 00 00        	db 0,0												; Variables_de_pintado
 144+ 85A5 00 00        	defw 0												;	" " " " " " "
 145+ 85A7 00 00        	defw 0												;	" " " " " " "
 146+ 85A9 00 00 00 00  	db 0,0,0,0											;	" " " " " " "
 147+ 85AD
 148+ 85AD 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 149+ 85AF
 150+ 85AF 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 151+ 85B1 00 00        	defw 0 												; Contador_de_mov_masticados
 152+ 85B3
 153+ 85B3 40           	db $40												; (Ctrl_0).
 154+ 85B4
 155+ 85B4 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 155+ 85B8 00 00
 156+ 85BA 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 157+ 85BD
 158+ 85BD 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 159+ 85BF 00           	db 0												; (Cola_de_desplazamiento).
 160+ 85C0
 161+ 85C0 00           	db 0 												; (Columnas).
 162+ 85C1 00 00        	defw 0												; (Limite_horizontal).
 163+ 85C3 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 164+ 85C6
 165+ 85C6              ; ---------- ---------- ---------- ---------- ----------
 166+ 85C6
 167+ 85C6 00 00 00     Caja_1 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 168+ 85C9 00 00        	defw 0											; (Posicion_actual).
 169+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 170+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 171+ 85D0
 172+ 85D0 00           	db %00000000 									; (Attr).
 173+ 85D1
 174+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 175+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 176+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 177+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 178+ 85D9
 179+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 180+ 85DB 00           	db 0											; (Cuad_objeto).
 181+ 85DC
 182+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 183+ 85E0
 184+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 185+ 85E1
 186+ 85E1 00 00 00...  	ds 6											; Variables_de_borrado
 187+ 85E7
 188+ 85E7 00 00        	db 0,0											; Variables_de_pintado
 189+ 85E9 00 00        	defw 0											;	" " " " " " "
 190+ 85EB 00 00        	defw 0											;	" " " " " " "
 191+ 85ED 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 192+ 85F1
 193+ 85F1 00 00        	defw 0 											; Puntero_de_impresion.
 194+ 85F3
 195+ 85F3 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 196+ 85F5 00 00        	defw 0 											; Contador_de_mov_masticados
 197+ 85F7
 198+ 85F7 00           	db 0											; (Ctrl_0).
 199+ 85F8
 200+ 85F8 00           	db 0 											; (Columnas).
 201+ 85F9 00 00        	defw 0											; (Limite_horizontal).
 202+ 85FB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 85FE
 204+ 85FE              ; ---------- ---------- ---------- ---------- ----------
 205+ 85FE
 206+ 85FE 00 00 00     Caja_2 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 207+ 8601 00 00        	defw 0											; (Posicion_actual).
 208+ 8603 00 00        	defw 0 											; (Puntero_objeto).
 209+ 8605 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 8608
 211+ 8608 00           	db %00000000 									; (Attr).
 212+ 8609
 213+ 8609 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 860B 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 860D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 860F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8611
 218+ 8611 00 00        	defw 0											; (Posicion_inicio).
 219+ 8613 00           	db 0											; (Cuad_objeto).
 220+ 8614
 221+ 8614 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 8618
 223+ 8618 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 8619
 225+ 8619 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 861F
 227+ 861F 00 00        	db 0,0											; Variables_de_pintado
 228+ 8621 00 00        	defw 0											;	" " " " " " "
 229+ 8623 00 00        	defw 0											;	" " " " " " "
 230+ 8625 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 8629
 232+ 8629 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 862B
 234+ 862B 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 235+ 862D 00 00        	defw 0 											; Contador_de_mov_masticados
 236+ 862F
 237+ 862F 00           	db 0											; (Ctrl_0).
 238+ 8630
 239+ 8630 00           	db 0 											; (Columnas).
 240+ 8631 00 00        	defw 0											; (Limite_horizontal).
 241+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 242+ 8636
 243+ 8636              ; ---------- ---------- ---------- ---------- ----------
 244+ 8636
 245+ 8636 00 00 00     Caja_3 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 246+ 8639 00 00        	defw 0											; (Posicion_actual).
 247+ 863B 00 00        	defw 0 											; (Puntero_objeto).
 248+ 863D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 249+ 8640
 250+ 8640 00           	db %00000000 									; (Attr).
 251+ 8641
 252+ 8641 00 00        	defw 0											; (Indice_Sprite_der).
 253+ 8643 00 00        	defw 0											; (Indice_Sprite_izq).
 254+ 8645 00 00        	defw 0											; (Puntero_DESPLZ_der).
 255+ 8647 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 256+ 8649
 257+ 8649 00 00        	defw 0											; (Posicion_inicio).
 258+ 864B 00           	db 0											; (Cuad_objeto).
 259+ 864C
 260+ 864C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 261+ 8650
 262+ 8650 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 263+ 8651
 264+ 8651 00 00 00...  	ds 6											; Variables_de_borrado
 265+ 8657
 266+ 8657 00 00        	db 0,0											; Variables_de_pintado
 267+ 8659 00 00        	defw 0											;	" " " " " " "
 268+ 865B 00 00        	defw 0											;	" " " " " " "
 269+ 865D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 270+ 8661
 271+ 8661 00 00        	defw 0 											; Puntero_de_impresion.
 272+ 8663
 273+ 8663 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 274+ 8665 00 00        	defw 0 											; Contador_de_mov_masticados
 275+ 8667
 276+ 8667 00           	db 0											; (Ctrl_0).
 277+ 8668
 278+ 8668 00           	db 0 											; (Columnas).
 279+ 8669 00 00        	defw 0											; (Limite_horizontal).
 280+ 866B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 281+ 866E
 282+ 866E              ; ---------- ---------- ---------- ---------- ----------
 283+ 866E
 284+ 866E 00 00 00     Caja_4 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 285+ 8671 00 00        	defw 0											; (Posicion_actual).
 286+ 8673 00 00        	defw 0 											; (Puntero_objeto).
 287+ 8675 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 288+ 8678
 289+ 8678 00           	db %00000000 									; (Attr).
 290+ 8679
 291+ 8679 00 00        	defw 0											; (Indice_Sprite_der).
 292+ 867B 00 00        	defw 0											; (Indice_Sprite_izq).
 293+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 294+ 867F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 295+ 8681
 296+ 8681 00 00        	defw 0											; (Posicion_inicio).
 297+ 8683 00           	db 0											; (Cuad_objeto).
 298+ 8684
 299+ 8684 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 300+ 8688
 301+ 8688 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 302+ 8689
 303+ 8689 00 00 00...  	ds 6											; Variables_de_borrado
 304+ 868F
 305+ 868F 00 00        	db 0,0											; Variables_de_pintado
 306+ 8691 00 00        	defw 0											;	" " " " " " "
 307+ 8693 00 00        	defw 0											;	" " " " " " "
 308+ 8695 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 309+ 8699
 310+ 8699 00 00        	defw 0 											; Puntero_de_impresion.
 311+ 869B
 312+ 869B 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 313+ 869D 00 00        	defw 0 											; Contador_de_mov_masticados
 314+ 869F
 315+ 869F 00           	db 0											; (Ctrl_0).
 316+ 86A0
 317+ 86A0 00           	db 0 											; (Columnas).
 318+ 86A1 00 00        	defw 0											; (Limite_horizontal).
 319+ 86A3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 320+ 86A6
 321+ 86A6              ; ---------- ---------- ---------- ---------- ----------
 322+ 86A6
 323+ 86A6 00 00 00     Caja_5 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 324+ 86A9 00 00        	defw 0											; (Posicion_actual).
 325+ 86AB 00 00        	defw 0 											; (Puntero_objeto).
 326+ 86AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 327+ 86B0
 328+ 86B0 00           	db %00000000 									; (Attr).
 329+ 86B1
 330+ 86B1 00 00        	defw 0											; (Indice_Sprite_der).
 331+ 86B3 00 00        	defw 0											; (Indice_Sprite_izq).
 332+ 86B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 333+ 86B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 334+ 86B9
 335+ 86B9 00 00        	defw 0											; (Posicion_inicio).
 336+ 86BB 00           	db 0											; (Cuad_objeto).
 337+ 86BC
 338+ 86BC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 339+ 86C0
 340+ 86C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 341+ 86C1
 342+ 86C1 00 00 00...  	ds 6											; Variables_de_borrado
 343+ 86C7
 344+ 86C7 00 00        	db 0,0											; Variables_de_pintado
 345+ 86C9 00 00        	defw 0											;	" " " " " " "
 346+ 86CB 00 00        	defw 0											;	" " " " " " "
 347+ 86CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 348+ 86D1
 349+ 86D1 00 00        	defw 0 											; Puntero_de_impresion.
 350+ 86D3
 351+ 86D3 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 352+ 86D5 00 00        	defw 0 											; Contador_de_mov_masticados
 353+ 86D7
 354+ 86D7 00           	db 0											; (Ctrl_0).
 355+ 86D8
 356+ 86D8 00           	db 0 											; (Columnas).
 357+ 86D9 00 00        	defw 0											; (Limite_horizontal).
 358+ 86DB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 359+ 86DE
 360+ 86DE              ; ---------- ---------- ---------- ---------- ----------
 361+ 86DE
 362+ 86DE 00 00 00     Caja_6 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 363+ 86E1 00 00        	defw 0											; (Posicion_actual).
 364+ 86E3 00 00        	defw 0 											; (Puntero_objeto).
 365+ 86E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 366+ 86E8
 367+ 86E8 00           	db %00000000 									; (Attr).
 368+ 86E9
 369+ 86E9 00 00        	defw 0											; (Indice_Sprite_der).
 370+ 86EB 00 00        	defw 0											; (Indice_Sprite_izq).
 371+ 86ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 372+ 86EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 373+ 86F1
 374+ 86F1 00 00        	defw 0											; (Posicion_inicio).
 375+ 86F3 00           	db 0											; (Cuad_objeto).
 376+ 86F4
 377+ 86F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 378+ 86F8
 379+ 86F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 380+ 86F9
 381+ 86F9 00 00 00...  	ds 6											; Variables_de_borrado
 382+ 86FF
 383+ 86FF 00 00        	db 0,0											; Variables_de_pintado
 384+ 8701 00 00        	defw 0											;	" " " " " " "
 385+ 8703 00 00        	defw 0											;	" " " " " " "
 386+ 8705 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 387+ 8709
 388+ 8709 00 00        	defw 0 											; Puntero_de_impresion.
 389+ 870B
 390+ 870B 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 391+ 870D 00 00        	defw 0 											; Contador_de_mov_masticados
 392+ 870F
 393+ 870F 00           	db 0											; (Ctrl_0).
 394+ 8710
 395+ 8710 00           	db 0 											; (Columnas).
 396+ 8711 00 00        	defw 0											; (Limite_horizontal).
 397+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 398+ 8716
 399+ 8716              ; ---------- ---------- ---------- ---------- ----------
 400+ 8716
 401+ 8716 00 00 00     Caja_7 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 402+ 8719 00 00        	defw 0											; (Posicion_actual).
 403+ 871B 00 00        	defw 0 											; (Puntero_objeto).
 404+ 871D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 405+ 8720
 406+ 8720 00           	db %00000000 									; (Attr).
 407+ 8721
 408+ 8721 00 00        	defw 0											; (Indice_Sprite_der).
 409+ 8723 00 00        	defw 0											; (Indice_Sprite_izq).
 410+ 8725 00 00        	defw 0											; (Puntero_DESPLZ_der).
 411+ 8727 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 412+ 8729
 413+ 8729 00 00        	defw 0											; (Posicion_inicio).
 414+ 872B 00           	db 0											; (Cuad_objeto).
 415+ 872C
 416+ 872C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 417+ 8730
 418+ 8730 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 419+ 8731
 420+ 8731 00 00 00...  	ds 6											; Variables_de_borrado
 421+ 8737
 422+ 8737 00 00        	db 0,0											; Variables_de_pintado
 423+ 8739 00 00        	defw 0											;	" " " " " " "
 424+ 873B 00 00        	defw 0											;	" " " " " " "
 425+ 873D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 426+ 8741
 427+ 8741 00 00        	defw 0 											; Puntero_de_impresion.
 428+ 8743
 429+ 8743 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 430+ 8745 00 00        	defw 0 											; Contador_de_mov_masticados
 431+ 8747
 432+ 8747 00           	db 0											; (Ctrl_0).
 433+ 8748
 434+ 8748 00           	db 0 											; (Columnas).
 435+ 8749 00 00        	defw 0											; (Limite_horizontal).
 436+ 874B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 437+ 874E
 438+ 874E              ; -------------------------------------------------------------------------------------
 439+ 874E              ;
 440+ 874E              ;	11/1/24
 441+ 874E              ;
 442+ 874E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 443+ 874E              ;
 444+ 874E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 445+ 874E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 446+ 874E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 447+ 874E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 448+ 874E
 449+ 874E              Indice_de_entidades
 450+ 874E
 451+ 874E 52 87        	defw Entidad_1
 452+ 8750 64 87        	defw Entidad_2
 453+ 8752
 454+ 8752              ;	BADSAT, (Satélite malvado).
 455+ 8752
 456+ 8752 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 457+ 8755 04           	db %00000100										; (Attr).
 458+ 8756 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 459+ 8758 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 460+ 875A 03 40        	defw $4003	                             	    	; (Posicion_inicio).
 461+ 875C 01           	db 1												; (Cuad_objeto).
 462+ 875D 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 463+ 8761 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 464+ 8763 03           	db 3												; (Frames_explosion).
 465+ 8764
 466+ 8764 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 467+ 8767 02           	db %00000010										; (Attr).
 468+ 8768 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 469+ 876A 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 470+ 876C 40 50        	defw $5040                                      	; (Posicion_inicio).
 471+ 876E 01           	db 1												; (Cuad_objeto).
 472+ 876F 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 473+ 8773 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 474+ 8775 03           	db 3												; (Frames_explosion).
# file closed: Cajas_y_disparos.asm
 105  8776              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8776              ; 13/05/23
   2+ 8776
   3+ 8776              Indice_de_niveles
   4+ 8776
   5+ 8776 84 87        	defw Nivel_1
   6+ 8778 86 87        	defw Nivel_2
   7+ 877A 93 87        	defw Nivel_3
   8+ 877C A3 87        	defw Nivel_4
   9+ 877E B5 87        	defw Nivel_5
  10+ 8780              ;	...
  11+ 8780              ;	...
  12+ 8780              ;	+ Niveles ...
  13+ 8780
  14+ 8780 00 00        	defw 0
  15+ 8782 00 00        	defw 0
  16+ 8784
  17+ 8784 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 8785 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8786 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8787 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 878B 01 02
  21+ 878D 02 01 01 01  	db 2,1,1,1,1,2
  21+ 8791 01 02
  22+ 8793 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 8794 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 8798 01
  24+ 8799 03 01 01 01  	db 3,1,1,1,1
  24+ 879D 01
  25+ 879E 03 01 01 01  	db 3,1,1,1,1
  25+ 87A2 01
  26+ 87A3 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87A4 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87A8 01
  28+ 87A9 04 01 01 01  	db 4,1,1,1,1
  28+ 87AD 01
  29+ 87AE 04 01 01 01  	db 4,1,1,1,1
  29+ 87B2 01
  30+ 87B3 02 03        	db 2,3
  31+ 87B5 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87B6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87BA 01
  33+ 87BB 05 01 01 01  	db 5,1,1,1,1
  33+ 87BF 01
  34+ 87C0 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87C4 01
  35+ 87C5 05 01 01 01  	db 5,1,1,1,1
  35+ 87C9 01
  36+ 87CA
  37+ 87CA              ;---------------------------------------------------------------------------------------------------------------
  38+ 87CA              ;
  39+ 87CA              ;   5/1/24
  40+ 87CA              ;
  41+ 87CA              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87CA              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87CA              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87CA              ;	_en la caja DRAW correspondiente.
  45+ 87CA              ;
  46+ 87CA              ;	MODIFICA: HL,DE y A.
  47+ 87CA              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87CA
  49+ 87CA              Inicializa_Punteros_de_nivel
  50+ 87CA
  51+ 87CA 21 76 87     	ld hl,Indice_de_niveles
  52+ 87CD 22 09 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 87D0 CD EE 8C     	call Extrae_address
  54+ 87D3 7E           	ld a,(hl)
  55+ 87D4 32 D4 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 87D7 23           	inc hl
  57+ 87D8 22 0B 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 87DB C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 87DC
  60+ 87DC              ;---------------------------------------------------------------------------------------------------------------
  61+ 87DC              ;
  62+ 87DC              ;   5/1/24
  63+ 87DC              ;
  64+ 87DC              ;	Destruye A,BC,HL,DE
  65+ 87DC
  66+ 87DC              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 87DC              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 87DC
  69+ 87DC              Prepara_cajas_de_entidades
  70+ 87DC
  71+ 87DC              ; Preparamos los punteros de las cajas de entidades:
  72+ 87DC
  73+ 87DC 21 70 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 87DF CD EE 8C     	call Extrae_address
  75+ 87E2 CD 1F 88     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 87E5              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 87E5
  78+ 87E5 CD 62 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 87E8
  80+ 87E8 2A 0B 89     	ld hl,(Datos_de_nivel)
  81+ 87EB
  82+ 87EB              ; En este punto:
  83+ 87EB              ;
  84+ 87EB              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  85+ 87EB              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  86+ 87EB
  87+ 87EB C5           1 push bc 										; Guardo el nº de cajas a rellenar.
  88+ 87EC
  89+ 87EC 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  90+ 87ED CD 0D 88     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
  91+ 87F0
  92+ 87F0 21 4E 87     	ld hl,Indice_de_entidades
  93+ 87F3 CD 15 88     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
  94+ 87F6              ;												; Actualiza (Datos_de_entidad) con esa dirección.
  95+ 87F6
  96+ 87F6 CD 29 88     	call Datos_de_entidad_a_caja				; Vuelca los datos de la entidad en la caja.
  97+ 87F9
  98+ 87F9 2A D2 88     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
  99+ 87FC CD EE 8C     	call Extrae_address
 100+ 87FF CD 1F 88     	call Avanza_caja_de_entidades
 101+ 8802
 102+ 8802 2A 0B 89     	ld hl,(Datos_de_nivel)
 103+ 8805 23           	inc hl
 104+ 8806 22 0B 89     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 105+ 8809
 106+ 8809 C1           	pop bc
 107+ 880A 10 DF        	djnz 1B
 108+ 880C
 109+ 880C C9           	ret
 110+ 880D
 111+ 880D              ;	------------------------------------------------------------------------------------
 112+ 880D              ;
 113+ 880D              ;	12/01/24
 114+ 880D              ;
 115+ 880D              ;	INPUTS:	A contiene el (Tipo) de entidad.
 116+ 880D              ;
 117+ 880D              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 118+ 880D              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 119+ 880D
 120+ 880D CB 27        Calcula_salto_en_BC sla a
 121+ 880F D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 122+ 8811 4F           	ld c,a
 123+ 8812 06 00        	ld b,0
 124+ 8814 C9           	ret
 125+ 8815
 126+ 8815              ; ------------------------------------------------------------------
 127+ 8815              ;
 128+ 8815              ;	5/1/24
 129+ 8815              ;
 130+ 8815              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 131+ 8815              ;	Actualiza (Datos_de_entidad) con esa dirección.
 132+ 8815
 133+ 8815 A7           Situa_en_datos_de_entidad and a
 134+ 8816 ED 4A        	adc hl,bc
 135+ 8818 CD EE 8C     	call Extrae_address
 136+ 881B 22 DA 88         ld (Datos_de_entidad),hl
 137+ 881E C9           	ret
 138+ 881F
 139+ 881F              ; ------------------------------------------------------------------
 140+ 881F
 141+ 881F 22 CE 88     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 142+ 8822 13           	inc de
 143+ 8823 13           	inc de
 144+ 8824 EB           	ex de,hl
 145+ 8825 22 D2 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 146+ 8828 C9           	ret
 147+ 8829
 148+ 8829              ; ----------------------------------------------------------------------------------------------------------
 149+ 8829              ;
 150+ 8829              ;	11/1/24
 151+ 8829              ;
 152+ 8829              ;	Vuelca los .db significativos del tipo de entidad a la caja de entidades.
 153+ 8829
 154+ 8829              Datos_de_entidad_a_caja
 155+ 8829
 156+ 8829              ; En este punto:
 157+ 8829              ; HL apunta al 1er .db de DATOS de la entidad que tenemos que volcar en la caja DRAW.
 158+ 8829
 159+ 8829 ED 5B CE 88  	ld de,(Puntero_store_caja) 					; DE apunta al 1er .db de la caja de entidades vacía.
 160+ 882D
 161+ 882D 01 03 00     	ld bc,3
 162+ 8830 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 163+ 8832              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 164+ 8832 01 07 00     	ld bc,7
 165+ 8835 CD 5C 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 166+ 8838
 167+ 8838 01 05 00     	ld bc,5
 168+ 883B ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 169+ 883D              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 170+ 883D 01 04 00     	ld bc,4
 171+ 8840 CD 5C 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 172+ 8843
 173+ 8843 01 07 00     	ld bc,7
 174+ 8846 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 175+ 8848              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 176+ 8848
 177+ 8848 01 13 00     	ld bc,19
 178+ 884B CD 5C 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 179+ 884E
 180+ 884E 01 02 00     	ld bc,2
 181+ 8851 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 182+ 8853              ;												; HL, (origen), apunta ahora al .db (Frames_explosion), hay que situar DE.
 183+ 8853
 184+ 8853 01 08 00     	ld bc,8
 185+ 8856 CD 5C 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 186+ 8859
 187+ 8859 7E           	ld a,(hl)
 188+ 885A 12           	ld (de),a 									; Vuelco (Frames_explosion).
 189+ 885B
 190+ 885B C9           	ret
 191+ 885C
 192+ 885C              ; ---------- -------------- ----------------
 193+ 885C
 194+ 885C EB           Situa_DE ex de,hl
 195+ 885D A7           	and a
 196+ 885E ED 4A        	adc hl,bc
 197+ 8860 EB           	ex de,hl
 198+ 8861 C9           	ret
 199+ 8862
 200+ 8862              ;---------------------------------------------------------------------------------------------------------------
 201+ 8862              ;
 202+ 8862              ;	5/1/24
 203+ 8862              ;
 204+ 8862              ;	INICIALIZA (Numero_parcial_de_entidades).
 205+ 8862              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 206+ 8862              ;
 207+ 8862              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 208+ 8862              ;
 209+ 8862              ;	(Numero_parcial_de_entidades)="7".
 210+ 8862              ;
 211+ 8862              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 212+ 8862              ;
 213+ 8862              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 214+ 8862              ;
 215+ 8862              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 216+ 8862              ;	MODIFICA: A y B.
 217+ 8862              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 218+ 8862
 219+ 8862              Inicializa_Numero_parcial_de_entidades
 220+ 8862
 221+ 8862              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 222+ 8862
 223+ 8862 3A D4 88     	ld a,(Numero_de_entidades)
 224+ 8865 A7           	and a
 225+ 8866
 226+ 8866              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 227+ 8866              ;	jr z,$
 228+ 8866              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 229+ 8866
 230+ 8866 20 03        	jr nz,3F
 231+ 8868
 232+ 8868              ; ---------- ---------- ----------
 233+ 8868
 234+ 8868              ;! RESET para pruebas. Omitir esta línea en modo normal.
 235+ 8868              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 236+ 8868
 237+ 8868 CD CA 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 238+ 886B
 239+ 886B              ; ---------- ---------- ----------
 240+ 886B
 241+ 886B 3A D4 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 242+ 886E FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 243+ 8870 38 08        	jr c,1F
 244+ 8872
 245+ 8872              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 246+ 8872              ; Actualizamos variables.
 247+ 8872
 248+ 8872 3E 07        	ld a,7
 249+ 8874 32 D5 88     	ld (Numero_parcial_de_entidades),a
 250+ 8877 47           	ld b,a
 251+ 8878 18 04        	jr 2F
 252+ 887A
 253+ 887A              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 254+ 887A              ; (Numero_de_entidades)="0".
 255+ 887A
 256+ 887A 32 D5 88     1 ld (Numero_parcial_de_entidades),a
 257+ 887D 47           	ld b,a
 258+ 887E C9           2 ret
# file closed: Niveles.asm
 106  887F
 107  887F              ; ******************************************************************************************************************************************************************************************
 108  887F              ; Constantes.
 109  887F              ; ******************************************************************************************************************************************************************************************
 110  887F              ;
 111  887F              ; 25/12/23
 112  887F
 113  887F              ;
 114  887F              ; Constantes.
 115  887F              ;
 116  887F
 117  887F              Sprite_vacio equ $f000
 118  887F              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  887F              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  887F              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  887F              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  887F
 123  887F              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  887F              ;														;
 125  887F              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  887F
 127  887F              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  887F              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  887F              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  887F              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  887F              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  887F
 133  887F              ;														; 55 Bytes.
 134  887F              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  887F              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  887F
 137  887F              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  887F
 139  887F              ; ******************************************************************************************************************************************************************************************
 140  887F              ; Variables.
 141  887F              ; ******************************************************************************************************************************************************************************************
 142  887F              ;
 143  887F              ; 12/01/24
 144  887F              ;
 145  887F              ; Variables de DRAW. (Motor principal).
 146  887F              ;
 147  887F              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 148  887F
 149  887F              Variables_DRAW
 150  887F
 151  887F 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  8880              ;															- Patrón de movimiento.
 153  8880              ;															- Aspecto
 154  8880 00           Filas db 0												; Filas. [DRAW]
 155  8881 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  8882 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8884 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8886 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8887 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8888
 161  8888              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8888
 163  8888 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8889              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8889              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8889 00           Attr db 0												; Atributos de la entidad:
 167  888A
 168  888A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  888A              ;
 170  888A              ;	COLORES: 0 ..... NEGRO
 171  888A              ;    		 1 ..... AZUL
 172  888A              ; 			 2 ..... ROJO
 173  888A              ;			 3 ..... MAGENTA
 174  888A              ; 			 4 ..... VERDE
 175  888A              ; 			 5 ..... CIAN
 176  888A              ;			 6 ..... AMARILLO
 177  888A              ; 			 7 ..... BLANCO
 178  888A
 179  888A 00 00        Indice_Sprite_der defw 0
 180  888C 00 00        Indice_Sprite_izq defw 0
 181  888E 00 00        Puntero_DESPLZ_der defw 0
 182  8890 00 00        Puntero_DESPLZ_izq defw 0
 183  8892
 184  8892 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8894 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8895
 187  8895              ; Variables de objeto. (Características).
 188  8895
 189  8895 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 190  8896 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 191  8897 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 192  8898 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 193  8899
 194  8899 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 195  889A              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 196  889A              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 197  889A 00 00 00...  Variables_de_borrado ds 6
 198  88A0
 199  88A0 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 200  88A2 00 00        	defw 0
 201  88A4 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 202  88A6 00 00 00 00  	db 0,0,0,0
 203  88AA
 204  88AA 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 205  88AC              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 206  88AC
 207  88AC 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 208  88AE
 209  88AE              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 210  88AE              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 211  88AE
 212  88AE 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 213  88B0              ;														; _palabras que componen el "movimiento_masticado".
 214  88B0
 215  88B0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 216  88B0
 217  88B0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  88B1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  88B1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  88B1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  88B1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  88B1              ;
 223  88B1              ; 														DESCRIPCIÖN:
 224  88B1              ;
 225  88B1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  88B1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  88B1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  88B1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  88B1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  88B1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  88B1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  88B1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  88B1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  88B1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  88B1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  88B1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  88B1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  88B1              ;
 239  88B1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  88B1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  88B1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  88B1
 243  88B1              ; Variables de funcionamiento. [DRAW].
 244  88B1
 245  88B1 00           Columnas db 0
 246  88B2 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 247  88B4              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 248  88B4 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 249  88B5
 250  88B5              ; variables de control general.
 251  88B5
 252  88B5 00           Ctrl_2 db 0
 253  88B6              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 254  88B6              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 255  88B6              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 256  88B6              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 257  88B6              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 258  88B6              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 259  88B6              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 260  88B6              ;
 261  88B6              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 262  88B6              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 263  88B6              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 264  88B6              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 265  88B6              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 266  88B6              ;														BIT 4, ???
 267  88B6              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 268  88B6
 269  88B6 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 270  88B7
 271  88B7              ;! 56 Bytes por entidad.
 272  88B7
 273  88B7              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 274  88B7              ;					         		---------;      ;---------
 275  88B7
 276  88B7
 277  88B7              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 278  88B7
 279  88B7              ; Contadores de 16 bits.
 280  88B7
 281  88B7 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0  	; 8 Bytes.
 282  88B9 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 283  88BB 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 284  88BD 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 285  88BF
 286  88BF              ; Movimiento. ------------------------------------------------------------------------------------------------------
 287  88BF
 288  88BF 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 289  88C1 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 290  88C3 00 00        Puntero_indice_mov_bucle defw 0							;
 291  88C5              ;
 292  88C5              ;
 293  88C5 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 294  88C6              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 295  88C6              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 296  88C6 00           Incrementa_puntero_backup db 0
 297  88C7 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 298  88C8              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 299  88C8 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 300  88C9 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 301  88CA 00           Cola_de_desplazamiento db 0								; Este byte indica:
 302  88CB              ;
 303  88CB              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 304  88CB              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 305  88CB              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 306  88CB              ;
 307  88CB              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 308  88CB              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 309  88CB              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 310  88CB              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 311  88CB              ;
 312  88CB              ;														;	"$ff" ..... Bucle infinito de repetición.
 313  88CB              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 314  88CB              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 315  88CB              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 316  88CB
 317  88CB 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 318  88CC
 319  88CC              ;														DESCRIPCIÓN:
 320  88CC              ;
 321  88CC              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 322  88CC              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 323  88CC              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 324  88CC              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 325  88CC              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 326  88CC              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 327  88CC
 328  88CC              ;														BIT 3, Recarga de nueva oleada.
 329  88CC              ;														BIT 4, Recarga de nueva oleada.
 330  88CC              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 331  88CC              ;														BIT 6, **** Frame completo.
 332  88CC              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 333  88CC
 334  88CC 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 335  88CE              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 336  88CE              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 337  88CE              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 338  88CE
 339  88CE              ; Gestión de ENTIDADES y CAJAS.
 340  88CE
 341  88CE 00 00        Puntero_store_caja defw 0
 342  88D0 00 00        Puntero_restore_caja defw 0
 343  88D2 00 00        Indice_restore_caja defw 0
 344  88D4 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 345  88D5 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 346  88D6 00           Entidades_en_curso db 0									; ..... ..... .....
 347  88D7 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 348  88D8              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 349  88D8              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 350  88D8              ;														; _ (Numero_de_malotes)="0".
 351  88D8 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 352  88DA 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 353  88DC              ;														; _ puntero (Indice_entidades).
 354  88DC
 355  88DC              ;---------------------------------------------------------------------------------------------------------------
 356  88DC              ;
 357  88DC              ;	11/01/24
 358  88DC              ;
 359  88DC              ;	Álbumes.
 360  88DC
 361  88DC 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 362  88DE              ;														; _variable para almacenar lo posición del puntero_
 363  88DE              ; 														; _de pila, SP.
 364  88DE 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 365  88E0              ;														; La utiliza la rutina [Extrae_foto_registros].
 366  88E0 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 367  88E2 00 70        Stack_snapshot defw Album_de_fotos
 368  88E4 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 369  88E6
 370  88E6              ;End_Snapshot defw Album_de_fotos
 371  88E6              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 372  88E6 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 373  88E8              ;														; _el snapshot de los registros del siguiente disparo.
 374  88E8              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 375  88E8 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 376  88EA
 377  88EA 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 378  88EB              ;
 379  88EB              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 380  88EB              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 381  88EB              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 382  88EB
 383  88EB 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 384  88EC              ;
 385  88EC              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 386  88EC
 387  88EC              ; Gestión de Disparos.
 388  88EC
 389  88EC 00           Numero_de_disparotes db 0
 390  88ED 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 391  88EF 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 392  88F1 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 393  88F2              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 394  88F2              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 395  88F2 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 396  88F4              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 397  88F4              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 398  88F4              ;														; _produzca colisión.
 399  88F4 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 400  88F6              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 401  88F6 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 402  88F9              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 403  88F9 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 404  88FC              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 405  88FC 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 406  88FD
 407  88FD              ;---------------------------------------------------------------------------------------------------------------
 408  88FD
 409  88FD              ; Relojes y temporizaciones.
 410  88FD
 411  88FD 00           Contador_de_frames db 0
 412  88FE 00           Contador_de_frames_2 db 0
 413  88FF
 414  88FF 04           Clock_explosion db 4
 415  8900 14           Clock_Entidades_en_curso db 20
 416  8901 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 417  8902              ;														; Repite la oleada de entidades.
 418  8902 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 419  8903 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 420  8904 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 421  8905
 422  8905 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 423  8906 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 424  8907 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 425  8908
 426  8908              ;---------------------------------------------------------------------------------------------------------------
 427  8908
 428  8908              ; Gestión de NIVELES.
 429  8908
 430  8908 00           Nivel db 0												; Nivel actual del juego.
 431  8909 00 00        Puntero_indice_NIVELES defw 0
 432  890B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 433  890D              ; 														; _ que definen el NIVEL.
 434  890D              ; Y todo comienza aquí .....
 435  890D              ;
 436  890D              ; 	INICIO  *************************************************************************************************************************************************************************
 437  890D              ;
 438  890D              ;	5/1/24
 439  890D
 440  890D              START
 441  890D
 442  890D 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 443  8910 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 444  8912 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 445  8914 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 446  8916 F3           	DI
 447  8917
 448  8917 3E 07        	ld a,%00000111
 449  8919 CD 77 99     	call Cls
 450  891C
 451  891C CD CB 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 452  891F
 453  891F              ; INICIALIZACIÓN.
 454  891F
 455  891F CD CA 87     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 456  8922              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 457  8922              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 458  8922              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 459  8922 CD DC 87     4 call Prepara_cajas_de_entidades
 460  8925
 461  8925 CD 56 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 462  8928              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 463  8928 CD 7B 8D     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 464  892B
 465  892B 21 D5 88     	ld hl,Numero_parcial_de_entidades
 466  892E 46           	ld b,(hl)
 467  892F              ;	inc b
 468  892F              ;	dec b
 469  892F              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 470  892F
 471  892F              ;	INICIA ENTIDADES !!!!!
 472  892F
 473  892F C5           1 push bc  												; Guardo el contador de entidades.
 474  8930 CD 32 8B     	call Inicia_entidad
 475  8933
 476  8933
 477  8933 18 FE        	jr $
 478  8935
 479  8935
 480  8935 C1           	pop bc
 481  8936 10 F7        	djnz 1B  											; Decremento el contador de entidades.
 482  8938
 483  8938              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 484  8938              ; (Esto se dá cuando se inicia una nueva oleada).
 485  8938
 486  8938              ;	ld a,(Ctrl_1)
 487  8938              ;	bit 3,a
 488  8938              ;	jr nz,5F											; Loop
 489  8938
 490  8938              ; 	INICIA AMADEUS !!!!!
 491  8938
 492  8938              ;3 call Restore_Amadeus
 493  8938              ;	call Inicia_Puntero_objeto
 494  8938              ;	call Draw
 495  8938
 496  8938              ;	call Guarda_movimiento_masticado	;! Provisional
 497  8938
 498  8938              ;	call Guarda_foto_registros
 499  8938              ;	call Guarda_datos_de_borrado_Amadeus
 500  8938
 501  8938              ;	ld de,Amadeus_db
 502  8938              ;	call Store_Amadeus
 503  8938
 504  8938              ; 	INICIA DISPAROS !!!!!
 505  8938
 506  8938              ;	call Inicia_Puntero_Disparo_Entidades
 507  8938              ;	call Inicia_Puntero_Disparo_Amadeus
 508  8938
 509  8938              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 510  8938
 511  8938 CD 56 8C     5 call Inicia_punteros_de_cajas
 512  893B CD 7B 8D     	call Restore_entidad
 513  893E
 514  893E 3A CB 88     	ld a,(Ctrl_1)
 515  8941 CB 5F        	bit 3,a
 516  8943 28 07        	jr z,6F
 517  8945
 518  8945              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 519  8945
 520  8945 21 CB 88     	ld hl,Ctrl_1
 521  8948 CB 9E        	res 3,(hl)
 522  894A 18 07        	jr Main
 523  894C
 524  894C              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 525  894C
 526  894C 21 EA 88     6 ld hl,Ctrl_3
 527  894F CB C6        	set 0,(hl)											; Frame completo.
 528  8951 FB           	ei
 529  8952 76           	halt
 530  8953
 531  8953              ; ------------------------------------
 532  8953
 533  8953              Main
 534  8953              ;
 535  8953              ;	11/12/23
 536  8953
 537  8953              ; Aparece nueva entidad ???
 538  8953
 539  8953              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 540  8953              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 541  8953              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 542  8953              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 543  8953              ;														; _un 2º bloque.
 544  8953
 545  8953 3E 01        	ld a,1
 546  8955 D3 FE        	out ($fe),a
 547  8957
 548  8957 3A 00 89     	ld a,(Clock_Entidades_en_curso)
 549  895A 47           	ld b,a
 550  895B 3A FD 88     	ld a,(Contador_de_frames)
 551  895E B8           	cp b
 552  895F 20 18        	jr nz,13F
 553  8961
 554  8961              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 555  8961              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 556  8961
 557  8961 3A D5 88     21 ld a,(Numero_parcial_de_entidades)
 558  8964 47           	ld b,a
 559  8965 3A D6 88     	ld a,(Entidades_en_curso)
 560  8968 B8           	cp b
 561  8969 28 0E        	jr z,13F
 562  896B 30 0C        	jr nc,13F
 563  896D
 564  896D 3C           	inc a
 565  896E 32 D6 88     	ld (Entidades_en_curso),a
 566  8971
 567  8971              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 568  8971
 569  8971 3A 00 89     	ld a,(Clock_Entidades_en_curso)
 570  8974              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 571  8974              ;! _ IMPREDECIBLE !!!!
 572  8974 C6 64        	add 100
 573  8976 32 00 89     	ld (Clock_Entidades_en_curso),a
 574  8979
 575  8979              ; -------------------------------------------------------------------------------------------------------------
 576  8979
 577  8979              ; Habilita disparos.
 578  8979
 579  8979 21 02 89     13 ld hl,Disparo_Amadeus
 580  897C 11 04 89     	ld de,CLOCK_repone_disparo_Amadeus
 581  897F CD 48 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 582  8982
 583  8982 21 05 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 584  8985 11 07 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 585  8988 CD 48 9D     	call Habilita_disparos
 586  898B
 587  898B              ; COLISIONES.
 588  898B
 589  898B CD 6A 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 590  898E
 591  898E              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 592  898E              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 593  898E              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 594  898E
 595  898E AF           	xor a
 596  898F 32 F1 88     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 597  8992
 598  8992 CD 56 8C     	call Inicia_punteros_de_cajas
 599  8995 CD 7B 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 600  8998              ; 														; _ en DRAW.
 601  8998 3A 80 88     	ld a,(Filas)
 602  899B A7           	and a
 603  899C 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 604  899E CD 8D 8D     	call Incrementa_punteros_de_cajas
 605  89A1 18 F2        	jr 12B
 606  89A3
 607  89A3              ; ---------------------------------------------------------------------------------------
 608  89A3
 609  89A3 3A D5 88     10 ld a,(Numero_parcial_de_entidades)
 610  89A6 47               ld b,a
 611  89A7 A7           	and a
 612  89A8 20 14        	jr nz,11F
 613  89AA
 614  89AA 21 CB 88     	ld hl,Ctrl_1
 615  89AD CB 66        	bit 4,(hl)
 616  89AF C2 57 8A     	jp nz,16F
 617  89B2
 618  89B2              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 619  89B2
 620  89B2 21 CB 88     	ld hl,Ctrl_1
 621  89B5 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 622  89B7
 623  89B7 3A FD 88     	ld a,(Contador_de_frames)
 624  89BA 3C           	inc a
 625  89BB 32 01 89     	ld (Activa_recarga_cajas),a
 626  89BE
 627  89BE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 628  89BE
 629  89BE 3A D6 88     11 ld a,(Entidades_en_curso)
 630  89C1 A7           	and a
 631  89C2 CA 57 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 632  89C5 47           	ld b,a												; No hay entidades que gestionar.
 633  89C6
 634  89C6              ; ( Código que ejecutamos con cada entidad: ).
 635  89C6
 636  89C6              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 637  89C6
 638  89C6 C5           15 push bc 												; Nº de entidades en curso.
 639  89C7
 640  89C7              ; Existe "Entidad_guía" ???.
 641  89C7              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 642  89C7
 643  89C7 3A EA 88     	ld a,(Ctrl_3)
 644  89CA CB 4F        	bit 1,a
 645  89CC 20 11        	jr nz,22F
 646  89CE
 647  89CE              ; Almacén de "Movimientos_masticados" lleno ???
 648  89CE              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 649  89CE              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 650  89CE
 651  89CE 3A EA 88     	ld a,(Ctrl_3)
 652  89D1 CB 5F        	bit 3,a
 653  89D3 20 0A        	jr nz,22F
 654  89D5
 655  89D5              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 656  89D5
 657  89D5 21 B5 88     	ld hl,Ctrl_2
 658  89D8 CB EE        	set 5,(hl)
 659  89DA 21 EA 88     	ld hl,Ctrl_3
 660  89DD CB CE        	set 1,(hl)
 661  89DF
 662  89DF              ; Impacto ???
 663  89DF
 664  89DF 3A 99 88     22 ld a,(Impacto)
 665  89E2 A7           	and a
 666  89E3 28 31        	jr z,8F
 667  89E5
 668  89E5              ; Hay Impacto en esta entidad.
 669  89E5
 670  89E5 21 FF 88     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 671  89E8 35           	dec (hl)
 672  89E9 C2 4A 8A     	jp nz,17F
 673  89EC
 674  89EC              ;! Velocidad de la animación de la explosión.
 675  89EC
 676  89EC 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 677  89EE              ;														; _,(velocidad de la explosión).
 678  89EE              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 679  89EE
 680  89EE CD 3F 8E     	call Repone_datos_de_borrado
 681  89F1 CD 94 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 682  89F4
 683  89F4              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 684  89F4
 685  89F4 3A B5 88     	ld a,(Ctrl_2)
 686  89F7 CB 4F        	bit 1,a
 687  89F9 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 688  89FB
 689  89FB              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 690  89FB
 691  89FB 3A 88 88     	ld a,(CTRL_DESPLZ)
 692  89FE A7           	and a
 693  89FF 20 08        	jr nz,18F
 694  8A01
 695  8A01 21 84 84     	ld hl,Indice_Explosion_2x2-2
 696  8A04 22 8E 88     	ld (Puntero_DESPLZ_der),hl
 697  8A07 18 06        	jr 19F
 698  8A09
 699  8A09 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 700  8A0C 22 8E 88     	ld (Puntero_DESPLZ_der),hl
 701  8A0F
 702  8A0F 21 B5 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 703  8A12 CB CE        	set 1,(hl)
 704  8A14 18 22        	jr 7F
 705  8A16
 706  8A16              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 707  8A16              ; _con las coordenadas de la entidad almacenada en DRAW.
 708  8A16
 709  8A16 3A CB 88     8 ld a,(Ctrl_1)
 710  8A19 CB 57        	bit 2,a
 711  8A1B 28 1B        	jr z,7F
 712  8A1D
 713  8A1D 2A F4 88     	ld hl,(Coordenadas_disparo_certero)
 714  8A20 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 715  8A21              ;														; E contiene la coordenada_X del disparo.
 716  8A21 2A 86 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 717  8A24              ;														; H FILA, (Coordenada_y de la entidad).
 718  8A24 A7           	and a
 719  8A25 ED 52        	sbc hl,de
 720  8A27
 721  8A27 CD 83 92     	call Determina_resultado_comparativa
 722  8A2A
 723  8A2A 78           	ld a,b
 724  8A2B A7           	and a
 725  8A2C 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 726  8A2E
 727  8A2E              ; ----- ----- -----
 728  8A2E
 729  8A2E 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 730  8A30 32 99 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 731  8A33
 732  8A33 21 CB 88     	ld hl,Ctrl_1
 733  8A36 CB 96        	res 2,(hl)
 734  8A38
 735  8A38 CD A8 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 736  8A3B
 737  8A3B 3A B0 88     	ld a,(Ctrl_0)
 738  8A3E CB 67        	bit 4,a
 739  8A40 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 740  8A42
 741  8A42              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 742  8A42              ; [[[
 743  8A42              ;	call Detecta_disparo_entidad
 744  8A42              ; ]]]
 745  8A42
 746  8A42 CD BF 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 747  8A45
 748  8A45 21 B0 88     	ld hl,Ctrl_0
 749  8A48 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 750  8A4A
 751  8A4A CD 3C 8D     17 call Store_Restore_cajas
 752  8A4D
 753  8A4D C1           	pop bc
 754  8A4E
 755  8A4E 05           	dec b
 756  8A4F C2 C6 89     	jp nz,15B
 757  8A52
 758  8A52              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 759  8A52              ; Hemos gestionado todas las unidades.
 760  8A52              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 761  8A52
 762  8A52 21 CB 88     	ld hl,Ctrl_1
 763  8A55 CB 96        	res 2,(hl)
 764  8A57
 765  8A57 21 EA 88     16 ld hl,Ctrl_3
 766  8A5A CB C6        	set 0,(hl)											; Frame completo.
 767  8A5C
 768  8A5C AF           	xor a
 769  8A5D D3 FE        	out ($fe),a
 770  8A5F
 771  8A5F FB           	ei
 772  8A60 76           	halt
 773  8A61
 774  8A61              ; ----------------------------------------
 775  8A61
 776  8A61 3A CB 88     	ld a,(Ctrl_1) 										; Existe Loop?
 777  8A64 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 778  8A66 CA 53 89     	jp z,Main
 779  8A69
 780  8A69              ; RECARGA DE NUEVA OLEADA.
 781  8A69
 782  8A69 3A FD 88     	ld a,(Contador_de_frames)
 783  8A6C 47           	ld b,a
 784  8A6D 3A 01 89     	ld a,(Activa_recarga_cajas)
 785  8A70 B8           	cp b
 786  8A71 28 08        	jr z,20F
 787  8A73
 788  8A73 21 CB 88     	ld hl,Ctrl_1
 789  8A76 CB E6        	set 4,(hl)
 790  8A78 C3 53 89     	jp Main
 791  8A7B
 792  8A7B 21 CB 88     20 ld hl,Ctrl_1
 793  8A7E CB A6        	res 4,(hl)
 794  8A80
 795  8A80 3A FD 88     	ld a,(Contador_de_frames)
 796  8A83
 797  8A83              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 798  8A83              ;! _ IMPREDECIBLE !!!!
 799  8A83
 800  8A83 C6 0A        	add 10
 801  8A85 32 00 89     	ld (Clock_Entidades_en_curso),a
 802  8A88
 803  8A88 C3 22 89     	jp 4B
 804  8A8B
 805  8A8B C9           	ret
 806  8A8C
 807  8A8C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 808  8A8C              ;
 809  8A8C              ;	16/11/23
 810  8A8C
 811  8A8C              Gestiona_Amadeus
 812  8A8C
 813  8A8C              ;! Activa/desactiva impacto con Amadeus.
 814  8A8C
 815  8A8C              ;	ld a,(Impacto)
 816  8A8C              ;	and a
 817  8A8C              ;	jr nz,2F
 818  8A8C
 819  8A8C CD 1F 8B     	call Mov_Amadeus
 820  8A8F
 821  8A8F 3A B0 88     2 ld a,(Ctrl_0)
 822  8A92 CB 67        	bit 4,a
 823  8A94 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 824  8A96
 825  8A96 CD BF 8B     	call Guarda_foto_entidad_a_pintar
 826  8A99 CD 1F 8E     	call Guarda_datos_de_borrado_Amadeus
 827  8A9C
 828  8A9C 21 B0 88     1 ld hl,Ctrl_0
 829  8A9F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 830  8AA1
 831  8AA1 CD 0E 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 832  8AA4
 833  8AA4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 834  8AA4
 835  8AA4 CD D6 8C     	call Calcula_numero_de_disparotes
 836  8AA7
 837  8AA7 C9           	ret
 838  8AA8
 839  8AA8              ; --------------------------------------------------------------------------------------------------------------
 840  8AA8              ;
 841  8AA8              ;	15/12/23
 842  8AA8
 843  8AA8              Mov_obj
 844  8AA8
 845  8AA8 3A B5 88     	ld a,(Ctrl_2)
 846  8AAB CB 4F        	bit 1,a
 847  8AAD 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 848  8AAF
 849  8AAF              ; Explosión:
 850  8AAF
 851  8AAF 3A B6 88     	ld a,(Frames_explosion)
 852  8AB2 A7           	and a
 853  8AB3 20 1D        	jr nz,4F
 854  8AB5
 855  8AB5              ;!  Una alimaña menos!!!!!!!!!1
 856  8AB5
 857  8AB5              ; Se trataba de una Entidad_guía ???
 858  8AB5
 859  8AB5 3A B5 88     	ld a,(Ctrl_2)
 860  8AB8 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 861  8ABA 28 05        	jr z,5F
 862  8ABC
 863  8ABC 21 EA 88     	ld hl,Ctrl_3
 864  8ABF CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 865  8AC1
 866  8AC1              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 867  8AC1              ;!! _generado puede ser distinto, (aletoriedad).
 868  8AC1
 869  8AC1 CD BD 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 870  8AC4 21 D5 88     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 871  8AC7 35           	dec (hl)
 872  8AC8 21 D6 88     	ld hl,Entidades_en_curso
 873  8ACB 35           	dec (hl)
 874  8ACC 21 D4 88     	ld hl,Numero_de_entidades
 875  8ACF 35           	dec (hl)
 876  8AD0 18 4C        	jr 3F
 877  8AD2
 878  8AD2              ; -----
 879  8AD2
 880  8AD2              ;	`Movemos´ la explosión.
 881  8AD2
 882  8AD2 2A 8E 88     4 ld hl,(Puntero_DESPLZ_der)
 883  8AD5 23           	inc hl
 884  8AD6 23           	inc hl
 885  8AD7 22 8E 88     	ld (Puntero_DESPLZ_der),hl
 886  8ADA CD EE 8C     	call Extrae_address
 887  8ADD 22 84 88     	ld (Puntero_objeto),hl
 888  8AE0
 889  8AE0 21 B6 88     	ld hl,Frames_explosion
 890  8AE3 35           	dec (hl)
 891  8AE4
 892  8AE4 21 B0 88     	ld hl,Ctrl_0
 893  8AE7 CB E6        	set 4,(hl)
 894  8AE9
 895  8AE9 18 33        	jr 3F
 896  8AEB
 897  8AEB              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 898  8AEB
 899  8AEB AF           2 xor a
 900  8AEC 32 B0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 901  8AEF
 902  8AEF              ; Movemos Entidades malignas.
 903  8AEF              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 904  8AEF
 905  8AEF 3A B5 88     	ld a,(Ctrl_2)
 906  8AF2 CB 6F        	bit 5,a
 907  8AF4 20 07        	jr nz,8F
 908  8AF6
 909  8AF6 21 B0 88     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 910  8AF9 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 911  8AFB 18 09        	jr 7F
 912  8AFD
 913  8AFD CD F3 9E     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 914  8B00
 915  8B00 3A B0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 916  8B03 CB 67        	bit 4,a
 917  8B05 C8           	ret z
 918  8B06
 919  8B06              ; Ha habido desplazamiento de la entidad maligna.
 920  8B06              ; Ha llegado a zona de AMADEUS ???
 921  8B06
 922  8B06 3A 87 88     7 ld a,(Coordenada_y)
 923  8B09 FE 14        	cp $14
 924  8B0B 38 08        	jr c,1F
 925  8B0D
 926  8B0D              ; ---------
 927  8B0D
 928  8B0D              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 929  8B0D              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 930  8B0D
 931  8B0D F3           	di
 932  8B0E CD 33 90     	call Genera_coordenadas_X
 933  8B11 CD 6F 90     	call Compara_coordenadas_X
 934  8B14 FB           	ei
 935  8B15
 936  8B15              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 937  8B15
 938  8B15              ; ---------
 939  8B15
 940  8B15 CD 3E 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 941  8B18 CD 3F 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 942  8B1B CD 94 8C     	call Limpia_Variables_de_borrado
 943  8B1E
 944  8B1E C9           3 ret
 945  8B1F
 946  8B1F              ; --------------------------------------------------------------------------------------------------------------
 947  8B1F              ;
 948  8B1F              ;	29/1/23
 949  8B1F
 950  8B1F              Mov_Amadeus
 951  8B1F
 952  8B1F              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 953  8B1F
 954  8B1F CD 2F 9A     	call Mov_right
 955  8B22
 956  8B22 3A B0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 957  8B25 CB 67        	bit 4,a
 958  8B27 C8           	ret z
 959  8B28
 960  8B28              ; ---------
 961  8B28
 962  8B28 CD 3E 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 963  8B2B CD 2F 8E     	call Repone_datos_de_borrado_Amadeus
 964  8B2E CD 94 8C     	call Limpia_Variables_de_borrado
 965  8B31
 966  8B31 C9           	ret
 967  8B32
 968  8B32              ; -----------------------------------------------------------------------------------
 969  8B32              ;
 970  8B32              ;	12/12/23
 971  8B32              ;
 972  8B32              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 973  8B32
 974  8B32              Inicia_entidad
 975  8B32
 976  8B32              ; Averiguamos el tipo de entidad.
 977  8B32
 978  8B32 3A 7F 88     	ld a,(Tipo)
 979  8B35 3D           	dec a
 980  8B36 28 02        	jr z,Entidad_tipo_1
 981  8B38 18 FE        	jr $
 982  8B3A
 983  8B3A              Entidad_tipo_1
 984  8B3A
 985  8B3A 21 EB 88     	ld hl,Ctrl_4
 986  8B3D CB 46        	bit 0,(hl)
 987  8B3F 20 FE        	jr nz,$
 988  8B41
 989  8B41 CB E6        	set 4,(hl)											; Activa FLAG. Indica que el Almacen_de_mov_masticados de la Entidad_1 está completo.
 990  8B43
 991  8B43              ; Inicializa el puntero (Puntero_indice_mov).
 992  8B43
 993  8B43 CD 64 A0     	call Inicializa_Puntero_indice_mov
 994  8B46
 995  8B46              ; Construimos los movimientos masticados de este tipo de entidad.
 996  8B46
 997  8B46 CD 54 8B     	call Construye_movimientos_masticados_entidad
 998  8B49
 999  8B49              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
1000  8B49              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
1001  8B49              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
1002  8B49              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
1003  8B49
1004  8B49 CD A9 8B     	call Cargamos_registros_con_mov_masticado
1005  8B4C CD 16 71     	call Guarda_foto_registros
1006  8B4F
1007  8B4F F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
1008  8B50              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
1009  8B50              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
1010  8B50 CD 3C 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
1011  8B53 C9           	ret
1012  8B54
1013  8B54              ; -----------------------------------------------------------------------------------
1014  8B54              ;
1015  8B54              ;	10/01/24
1016  8B54              ;
1017  8B54              ;
1018  8B54
1019  8B54              Construye_movimientos_masticados_entidad
1020  8B54
1021  8B54 2A AC 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1022  8B57 E5           	push hl
1023  8B58
1024  8B58 CD 9C 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1025  8B5B              ;															; _ el (Contador_de_mov_masticados).
1026  8B5B CD F4 8C     	call Inicia_Puntero_objeto
1027  8B5E CD 8B 99     	call Recompone_posicion_inicio
1028  8B61 CD 6A 93     1 call Draw
1029  8B64 CD 80 8B     	call Guarda_movimiento_masticado
1030  8B67 CD F3 9E     	call Movimiento
1031  8B6A
1032  8B6A 3A EA 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1033  8B6D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1034  8B6F 28 F0        	jr z,1B
1035  8B71
1036  8B71              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1037  8B71              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1038  8B71
1039  8B71 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1040  8B72 22 AC 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1041  8B75
1042  8B75
1043  8B75              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1044  8B75
1045  8B75 CD 77 A0     	call Situa_en_Contador_general_de_mov_masticados
1046  8B78
1047  8B78              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1048  8B78              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1049  8B78
1050  8B78 ED 4B AE 88  	ld bc,(Contador_de_mov_masticados)
1051  8B7C 71           	ld (hl),c
1052  8B7D 23           	inc hl
1053  8B7E 70           	ld (hl),b
1054  8B7F
1055  8B7F C9           	ret
1056  8B80
1057  8B80              ; -----------------------------------------------------------------------------------
1058  8B80              ;
1059  8B80              ;	28/12/23
1060  8B80              ;
1061  8B80              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1062  8B80              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1063  8B80
1064  8B80              Guarda_movimiento_masticado
1065  8B80
1066  8B80 ED 73 DC 88  	ld (Stack),sp
1067  8B84 ED 7B AC 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1068  8B88
1069  8B88 E5           	push hl
1070  8B89 DD E5            push ix
1071  8B8B FD E5            push iy
1072  8B8D
1073  8B8D ED 7B DC 88      ld sp,(Stack)
1074  8B91
1075  8B91              ;    push hl
1076  8B91
1077  8B91 2A AE 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1078  8B94 23           	inc hl
1079  8B95 22 AE 88     	ld (Contador_de_mov_masticados),hl
1080  8B98
1081  8B98              ;	pop hl
1082  8B98
1083  8B98 CD 9C 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1084  8B9B              ;															; _ el (Contador_de_mov_masticados).
1085  8B9B C9               ret
1086  8B9C
1087  8B9C              ; --------------------------------------------------------------------------------------------------------------
1088  8B9C              ;
1089  8B9C              ;	12/1/24
1090  8B9C              ;
1091  8B9C              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1092  8B9C
1093  8B9C              Actualiza_Puntero_de_almacen_de_mov_masticados
1094  8B9C
1095  8B9C              ;	push hl
1096  8B9C              ;	push bc
1097  8B9C
1098  8B9C 2A AC 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1099  8B9F 01 06 00     	ld bc,6
1100  8BA2 A7           	and a
1101  8BA3 ED 4A        	adc hl,bc
1102  8BA5 22 AC 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1103  8BA8
1104  8BA8              ;	pop bc
1105  8BA8              ;	pop hl
1106  8BA8
1107  8BA8 C9           	ret
1108  8BA9
1109  8BA9              ; --------------------------------------------------------------------------------------------------------------
1110  8BA9              ;
1111  8BA9              ;	15/01/24
1112  8BA9              ;
1113  8BA9              ;	Cargamos los registros_
1114  8BA9              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1115  8BA9              ;
1116  8BA9              ;	HL contiene la dirección de la rutina de impresión.
1117  8BA9              ;	IX contiene el puntero de impresión.
1118  8BA9              ;	IY contiene (Puntero_objeto).
1119  8BA9
1120  8BA9
1121  8BA9 ED 73 DC 88  Cargamos_registros_con_mov_masticado ld (Stack),sp
1122  8BAD ED 7B AC 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1123  8BB1
1124  8BB1 FD E1        	pop iy
1125  8BB3 DD E1        	pop ix
1126  8BB5 E1           	pop hl
1127  8BB6
1128  8BB6 ED 73 AC 88  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1129  8BBA
1130  8BBA ED 7B DC 88  	ld sp,(Stack)
1131  8BBE
1132  8BBE C9           	ret
1133  8BBF
1134  8BBF              ; --------------------------------------------------------------------------------------------------------------
1135  8BBF              ;
1136  8BBF              ;	28/12/23
1137  8BBF              ;
1138  8BBF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1139  8BBF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1140  8BBF
1141  8BBF              Guarda_foto_entidad_a_pintar
1142  8BBF
1143  8BBF 3A B0 88     	ld a,(Ctrl_0)
1144  8BC2 CB 77        	bit 6,a
1145  8BC4 28 0A        	jr z,5F
1146  8BC6
1147  8BC6              ; Guarda la foto de Amadeus.
1148  8BC6
1149  8BC6 CD 6A 93     	call Draw
1150  8BC9
1151  8BC9 CD 80 8B     	call Guarda_movimiento_masticado	;! Provisional
1152  8BCC
1153  8BCC CD 16 71     	call Guarda_foto_registros
1154  8BCF
1155  8BCF              ;	di
1156  8BCF              ;	jr $
1157  8BCF              ;	ei
1158  8BCF
1159  8BCF C9           	ret
1160  8BD0
1161  8BD0              ; ENTIDADES!
1162  8BD0              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1163  8BD0
1164  8BD0 3A EA 88     5 ld a,(Ctrl_3)
1165  8BD3 CB 5F        	bit 3,a
1166  8BD5 28 04        	jr z,1F
1167  8BD7
1168  8BD7              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1169  8BD7
1170  8BD7 CD 12 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1171  8BDA C9           	ret
1172  8BDB
1173  8BDB              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1174  8BDB
1175  8BDB 3A EA 88     1 ld a,(Ctrl_3)
1176  8BDE CB 57        	bit 2,a
1177  8BE0 20 10        	jr nz,6F
1178  8BE2
1179  8BE2              ; Entidad guía o fantasma ???
1180  8BE2
1181  8BE2 3A B5 88     	ld a,(Ctrl_2)
1182  8BE5 CB 6F        	bit 5,a
1183  8BE7 20 10        	jr nz,3F
1184  8BE9
1185  8BE9              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1186  8BE9
1187  8BE9 18 EC        	jr 4B
1188  8BEB
1189  8BEB              ; ENTIDAD_GUÍA:
1190  8BEB              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1191  8BEB              ; _guardando "movimientos_masticados".
1192  8BEB
1193  8BEB 3A EA 88     2 ld a,(Ctrl_3)
1194  8BEE CB 57        	bit 2,a
1195  8BF0 28 07        	jr z,3F
1196  8BF2
1197  8BF2              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1198  8BF2              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1199  8BF2
1200  8BF2 CB 97        6 res 2,a
1201  8BF4 CB DF        	set 3,a
1202  8BF6 32 EA 88     	ld (Ctrl_3),a
1203  8BF9
1204  8BF9
1205  8BF9              ;	Esto sólo lo ejecuta una entidad guía.
1206  8BF9
1207  8BF9 CD 6A 93     3 	call Draw
1208  8BFC CD 80 8B     	call Guarda_movimiento_masticado
1209  8BFF CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1210  8C02
1211  8C02              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1212  8C02              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1213  8C02
1214  8C02 CD 06 8C     	call Convierte_guia_en_fantasma
1215  8C05 C9           	ret
1216  8C06
1217  8C06              ; --------------------------------------------------------------------------------------------------------------
1218  8C06              ;
1219  8C06              ;	28/12/23
1220  8C06              ;
1221  8C06
1222  8C06 3A EA 88     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1223  8C09 CB 5F        	bit 3,a
1224  8C0B C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1225  8C0C
1226  8C0C              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1227  8C0C
1228  8C0C 21 B5 88     	ld hl,Ctrl_2
1229  8C0F CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1230  8C11
1231  8C11 C9           	ret
1232  8C12
1233  8C12              ; --------------------------------------------------------------------------------------------------------------
1234  8C12              ;
1235  8C12              ;	21/12/23
1236  8C12              ;
1237  8C12              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1238  8C12              ;
1239  8C12              ;		IY contiene (Puntero_objeto).
1240  8C12              ;		IX contiene el puntero de impresión.
1241  8C12              ;		HL contiene la dirección de la rutina de impresión.
1242  8C12              ;
1243  8C12              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1244  8C12              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1245  8C12              ;	Decrementa el (Contador_de_mov_masticados)
1246  8C12              ;
1247  8C12              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1248  8C12              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1249  8C12              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1250  8C12
1251  8C12
1252  8C12 ED 73 DC 88  Prepara_registros_con_mov_masticados ld (Stack),sp
1253  8C16 ED 7B AC 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1254  8C1A
1255  8C1A FD E1        	pop iy
1256  8C1C DD E1        	pop ix
1257  8C1E E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1258  8C1F
1259  8C1F ED 73 AC 88  	ld (Puntero_de_almacen_de_mov_masticados),sp
1260  8C23 ED 7B DC 88  	ld sp,(Stack)
1261  8C27
1262  8C27 CD 16 71     	call Guarda_foto_registros
1263  8C2A
1264  8C2A E5           	push hl
1265  8C2B
1266  8C2B 2A AE 88     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1267  8C2E 23           	inc hl
1268  8C2F 22 AE 88     	ld (Contador_de_mov_masticados),hl
1269  8C32
1270  8C32              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1271  8C32
1272  8C32 ED 4B B7 88  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1273  8C36 A7           	and a
1274  8C37 ED 42        	sbc hl,bc
1275  8C39 CC 06 8C     	call z,Convierte_guia_en_fantasma
1276  8C3C
1277  8C3C E1           	pop hl
1278  8C3D
1279  8C3D C9           	ret
1280  8C3E
1281  8C3E              ; --------------------------------------------------------------------------------------------------------------
1282  8C3E              ;
1283  8C3E              ;	19/9/23
1284  8C3E
1285  8C3E              Prepara_var_pintado
1286  8C3E
1287  8C3E 21 80 88     	ld hl,Filas
1288  8C41 11 A0 88     	ld de,Variables_de_pintado
1289  8C44 01 08 00     	ld bc,8
1290  8C47 ED B0        	ldir
1291  8C49 C9           	ret
1292  8C4A
1293  8C4A              ; --------------------------------------------------------------------------------------------------------------
1294  8C4A
1295  8C4A              Repone_pintar
1296  8C4A
1297  8C4A 21 A0 88     	ld hl,Variables_de_pintado
1298  8C4D 11 80 88     	ld de,Filas
1299  8C50 01 08 00     	ld bc,8
1300  8C53 ED B0        	ldir
1301  8C55 C9           	ret
1302  8C56
1303  8C56              ; *************************************************************************************************************************************************************
1304  8C56              ;
1305  8C56              ; 8/1/23
1306  8C56              ;
1307  8C56              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1308  8C56              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1309  8C56              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1310  8C56
1311  8C56              ; Destruye HL y DE !!!!!
1312  8C56
1313  8C56              Inicia_punteros_de_cajas
1314  8C56
1315  8C56 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1316  8C59 CD EE 8C         call Extrae_address
1317  8C5C 22 CE 88         ld (Puntero_store_caja),hl
1318  8C5F 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1319  8C62 22 D2 88     	ld (Indice_restore_caja),hl
1320  8C65 CD EE 8C     	call Extrae_address
1321  8C68 22 D0 88     	ld (Puntero_restore_caja),hl
1322  8C6B C9               ret
1323  8C6C
1324  8C6C              ; *************************************************************************************************************************************************************
1325  8C6C              ;
1326  8C6C              ; 8/1/23
1327  8C6C              ;
1328  8C6C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1329  8C6C
1330  8C6C 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1331  8C6F 22 ED 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1332  8C72 C9           	ret
1333  8C73 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1334  8C76 22 EF 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1335  8C79 C9           	ret
1336  8C7A
1337  8C7A              ; -------------------------------------------------------------------------------------------------------------
1338  8C7A              ;
1339  8C7A              ; 21/9/23
1340  8C7A              ;
1341  8C7A
1342  8C7A              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1343  8C7A
1344  8C7A              Limpia_album_Amadeus
1345  8C7A
1346  8C7A 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1347  8C7D 7E           	ld a,(hl)
1348  8C7E A7           	and a
1349  8C7F C8           	ret z
1350  8C80
1351  8C80 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1352  8C83 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1353  8C86 01 0B 00     	ld bc,11
1354  8C89 AF           	xor a
1355  8C8A 77           	ld (hl),a
1356  8C8B ED B0        	ldir
1357  8C8D
1358  8C8D 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1359  8C90 22 E8 88     	ld (End_Snapshot_Amadeus),hl
1360  8C93
1361  8C93 C9           	ret
1362  8C94
1363  8C94 21 9A 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1364  8C97 11 9B 88     	ld de,Variables_de_borrado+1
1365  8C9A 01 05 00     	ld bc,5
1366  8C9D AF           	xor a
1367  8C9E 77           	ld (hl),a
1368  8C9F ED B0        	ldir
1369  8CA1 C9           	ret
1370  8CA2
1371  8CA2              ; -------------------------------------------------------------------------------------------------------------
1372  8CA2              ;
1373  8CA2              ; 8/9/23
1374  8CA2              ;
1375  8CA2
1376  8CA2              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1377  8CA2              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1378  8CA2
1379  8CA2              Calcula_numero_de_malotes
1380  8CA2
1381  8CA2 21 00 70     	ld hl,Album_de_fotos
1382  8CA5 EB           	ex de,hl
1383  8CA6 2A E2 88     	ld hl,(Stack_snapshot)
1384  8CA9
1385  8CA9 06 00        	ld b,0
1386  8CAB 7D           	ld a,l
1387  8CAC 93           	sub e
1388  8CAD 28 07        	jr z,1F
1389  8CAF
1390  8CAF              ; Nº de malotes no es "0".
1391  8CAF
1392  8CAF D6 06        2 sub 6
1393  8CB1 04           	inc b
1394  8CB2 A7           	and a
1395  8CB3 20 FA        	jr nz,2B
1396  8CB5 78           	ld a,b
1397  8CB6
1398  8CB6 32 D7 88     1 ld (Numero_de_malotes),a
1399  8CB9 C9           	ret
1400  8CBA
1401  8CBA              ; -------------------------------------------------------------------------------------------------------------
1402  8CBA              ;
1403  8CBA              ; 8/9/23
1404  8CBA              ;
1405  8CBA
1406  8CBA              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1407  8CBA              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1408  8CBA
1409  8CBA              Calcula_malotes_Amadeus
1410  8CBA
1411  8CBA 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1412  8CBD EB           	ex de,hl
1413  8CBE 2A E8 88     	ld hl,(End_Snapshot_Amadeus)
1414  8CC1
1415  8CC1 7C           	ld a,h
1416  8CC2 A7           	and a
1417  8CC3 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1418  8CC5
1419  8CC5 06 00        	ld b,0
1420  8CC7 7D           	ld a,l
1421  8CC8 93           	sub e
1422  8CC9 28 07        	jr z,1F
1423  8CCB
1424  8CCB              ; Nº de malotes no es "0".
1425  8CCB
1426  8CCB D6 06        2 sub 6
1427  8CCD 04           	inc b
1428  8CCE A7           	and a
1429  8CCF 20 FA        	jr nz,2B
1430  8CD1 78           	ld a,b
1431  8CD2
1432  8CD2 32 D7 88     1 ld (Numero_de_malotes),a
1433  8CD5 C9           	ret
1434  8CD6
1435  8CD6              ; -------------------------------------------------------------------------------------------------------------
1436  8CD6              ;
1437  8CD6              ; 28/2/23
1438  8CD6              ;
1439  8CD6
1440  8CD6              Calcula_numero_de_disparotes
1441  8CD6
1442  8CD6 21 56 70     	ld hl,Album_de_fotos_disparos
1443  8CD9 EB           	ex de,hl
1444  8CDA 2A E6 88     	ld hl,(End_Snapshot_disparos)
1445  8CDD
1446  8CDD 06 00        	ld b,0
1447  8CDF 7D           	ld a,l
1448  8CE0 93           	sub e
1449  8CE1 28 07        	jr z,1F
1450  8CE3
1451  8CE3              ; Nº de malotes no es "0".
1452  8CE3
1453  8CE3 D6 06        2 sub 6
1454  8CE5 04           	inc b
1455  8CE6 A7           	and a
1456  8CE7 20 FA        	jr nz,2B
1457  8CE9 78           	ld a,b
1458  8CEA
1459  8CEA 32 EC 88     1 ld (Numero_de_disparotes),a
1460  8CED C9           	ret
1461  8CEE
1462  8CEE              ; *************************************************************************************************************************************************************
1463  8CEE              ;
1464  8CEE              ; 20/10/22
1465  8CEE              ;
1466  8CEE              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1467  8CEE              ;
1468  8CEE              ; Destruye el puntero y DE !!!!!
1469  8CEE
1470  8CEE 5E           Extrae_address ld e,(hl)
1471  8CEF 23           	inc hl
1472  8CF0 56           	ld d,(hl)
1473  8CF1 2B           	dec hl
1474  8CF2 EB           	ex de,hl
1475  8CF3 C9           	ret
1476  8CF4
1477  8CF4              ; *************************************************************************************************************************************************************
1478  8CF4              ;
1479  8CF4              ;	7/2/23
1480  8CF4              ;
1481  8CF4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1482  8CF4              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1483  8CF4              ;
1484  8CF4              ;   Destruye HL y BC !!!!!,
1485  8CF4              ;
1486  8CF4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1487  8CF4              ;					"0" ..... Izquierda.
1488  8CF4
1489  8CF4              Inicia_Puntero_objeto
1490  8CF4
1491  8CF4 3A 94 88     	ld a,(Cuad_objeto)
1492  8CF7 E6 01        	and 1
1493  8CF9 F5           	push af
1494  8CFA CC 18 8D     	call z,Inicia_puntero_objeto_izq
1495  8CFD F1           	pop af
1496  8CFE 28 2B        	jr z,1F
1497  8D00 CD 05 8D     	call Inicia_puntero_objeto_der
1498  8D03 18 26        	jr 1F
1499  8D05
1500  8D05              ; Arrancamos desde la parte izquierda de la pantalla.
1501  8D05              ; Iniciamos (Indice_Sprite_der).
1502  8D05
1503  8D05 2A 8A 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1504  8D08 22 8E 88     	ld (Puntero_DESPLZ_der),hl
1505  8D0B CD EE 8C     	call Extrae_address
1506  8D0E 22 84 88     	ld (Puntero_objeto),hl
1507  8D11
1508  8D11 2A 8C 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1509  8D14 22 90 88     	ld (Puntero_DESPLZ_izq),hl
1510  8D17 C9           	ret
1511  8D18
1512  8D18              ; Arrancamos desde la parte derecha de la pantalla.
1513  8D18              ; Iniciamos (Indice_Sprite_izq).
1514  8D18
1515  8D18 2A 8C 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1516  8D1B 22 90 88     	ld (Puntero_DESPLZ_izq),hl
1517  8D1E CD EE 8C     	call Extrae_address
1518  8D21 22 84 88     	ld (Puntero_objeto),hl
1519  8D24
1520  8D24 2A 8A 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1521  8D27 22 8E 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1522  8D2A C9           	ret
1523  8D2B
1524  8D2B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1525  8D2B
1526  8D2B 21 40 83     1 ld hl,Amadeus
1527  8D2E ED 4B 84 88  	ld bc,(Puntero_objeto)
1528  8D32 B7 ED 42     	sub hl,bc
1529  8D35 C0           	ret nz
1530  8D36 21 B0 88     	ld hl,Ctrl_0
1531  8D39 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1532  8D3B C9           	ret 												; _de nuestra nave en los extremos.
1533  8D3C
1534  8D3C              ; *************************************************************************************************************************************************************
1535  8D3C              ;
1536  8D3C              ;	21/12/23
1537  8D3C              ;
1538  8D3C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1539  8D3C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1540  8D3C
1541  8D3C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1542  8D3C              ;	_de la 2ª y 3ª entidad respectivamente.
1543  8D3C
1544  8D3C              Store_Restore_cajas
1545  8D3C
1546  8D3C E5           	push hl
1547  8D3D D5           	push de
1548  8D3E C5            	push bc
1549  8D3F
1550  8D3F              ;	STORE !!!!!
1551  8D3F              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1552  8D3F
1553  8D3F F3           	di
1554  8D40 21 80 88     	ld hl,Filas
1555  8D43 ED 5B CE 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1556  8D47 01 38 00     	ld bc,56
1557  8D4A ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1558  8D4C FB           	ei
1559  8D4D
1560  8D4D              ; 	Entidad_sospechosa. 20/4/23
1561  8D4D
1562  8D4D 3A 99 88     	ld a,(Impacto)
1563  8D50 A7           	and a
1564  8D51 28 0C        	jr z,1F
1565  8D53
1566  8D53 2A CE 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1567  8D56 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1568  8D59 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1569  8D5A ED 4A        	adc hl,bc 											; _ "0" más adelante.
1570  8D5C 22 F2 88     	ld (Entidad_sospechosa_de_colision),hl
1571  8D5F
1572  8D5F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1573  8D5F
1574  8D5F 2A D0 88     1 ld hl,(Puntero_restore_caja)
1575  8D62 7E           	ld a,(hl)
1576  8D63 A7           	and a
1577  8D64 F5           	push af
1578  8D65 28 0A        	jr z,2F
1579  8D67
1580  8D67 F3           	di
1581  8D68 11 80 88     	ld de,Filas
1582  8D6B 01 38 00     	ld bc,56
1583  8D6E ED B0        	ldir
1584  8D70 FB           	ei
1585  8D71
1586  8D71 CD 8D 8D     2 call Incrementa_punteros_de_cajas
1587  8D74
1588  8D74 F1           	pop af
1589  8D75 28 E8        	jr z,1B
1590  8D77
1591  8D77 C1           	pop bc
1592  8D78 D1           	pop de
1593  8D79 E1           	pop hl
1594  8D7A
1595  8D7A C9           	ret
1596  8D7B
1597  8D7B              ; **************************************************************************************************
1598  8D7B              ;
1599  8D7B              ;	21/12/23
1600  8D7B              ;
1601  8D7B              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1602  8D7B
1603  8D7B E5           Restore_entidad push hl
1604  8D7C D5           	push de
1605  8D7D C5            	push bc
1606  8D7E
1607  8D7E 2A CE 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1608  8D81 11 7F 88     	ld de,Variables_DRAW
1609  8D84 01 38 00     	ld bc,56
1610  8D87 ED B0        	ldir
1611  8D89
1612  8D89 C1           	pop bc
1613  8D8A D1           	pop de
1614  8D8B E1           	pop hl
1615  8D8C C9           	ret
1616  8D8D
1617  8D8D              ; **************************************************************************************************
1618  8D8D              ;
1619  8D8D              ;	08/05/23
1620  8D8D              ;
1621  8D8D              ;	Incrementamos los dos punteros de entidades. (+1).
1622  8D8D
1623  8D8D              Incrementa_punteros_de_cajas
1624  8D8D
1625  8D8D 2A D0 88     	ld hl,(Puntero_restore_caja)
1626  8D90 22 CE 88     	ld (Puntero_store_caja),hl
1627  8D93 2A D2 88     	ld hl,(Indice_restore_caja)
1628  8D96 23           	inc hl
1629  8D97 23           	inc hl
1630  8D98 22 D2 88     	ld (Indice_restore_caja),hl
1631  8D9B CD EE 8C         call Extrae_address
1632  8D9E 22 D0 88         ld (Puntero_restore_caja),hl
1633  8DA1 C9               ret
1634  8DA2
1635  8DA2              ; **************************************************************************************************
1636  8DA2              ;
1637  8DA2              ;	21/12/23
1638  8DA2              ;
1639  8DA2              ;	Restore_Amadeus
1640  8DA2              ;
1641  8DA2              ;	Cargamos en DRAW los parámetros de Amadeus.
1642  8DA2              ;
1643  8DA2
1644  8DA2 E5           Restore_Amadeus	push hl
1645  8DA3 D5           	push de
1646  8DA4 C5            	push bc
1647  8DA5 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1648  8DA8 11 80 88     	ld de,Filas
1649  8DAB 01 38 00     	ld bc,56
1650  8DAE ED B0        	ldir
1651  8DB0 C1           	pop bc
1652  8DB1 D1           	pop de
1653  8DB2 E1           	pop hl
1654  8DB3 C9           	ret
1655  8DB4
1656  8DB4              ; *************************************************************************************************************************************************************
1657  8DB4              ;
1658  8DB4              ;	21/12/23
1659  8DB4              ;
1660  8DB4              ;	Store_Amadeus
1661  8DB4              ;
1662  8DB4              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1663  8DB4              ;
1664  8DB4              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1665  8DB4              ;
1666  8DB4              ;	DESTRUYE: HL y BC y DE.
1667  8DB4
1668  8DB4 21 80 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1669  8DB7 01 38 00     	ld bc,56
1670  8DBA ED B0        	ldir
1671  8DBC C9           	ret
1672  8DBD
1673  8DBD              ; -----------------------------------------------------------
1674  8DBD              ;
1675  8DBD              ;	21/12/23
1676  8DBD              ;
1677  8DBD              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1678  8DBD              ;
1679  8DBD              ;	Destruye: HL,BC,DE,A
1680  8DBD
1681  8DBD 21 80 88     Borra_datos_entidad ld hl,Filas
1682  8DC0 01 37 00     	ld bc,55
1683  8DC3 AF           	xor a
1684  8DC4 77           	ld (hl),a
1685  8DC5 11 81 88     	ld de,Filas+1
1686  8DC8 ED B0        	ldir
1687  8DCA C9           	ret
1688  8DCB
1689  8DCB              ; -----------------------------------------------------------
1690  8DCB
1691  8DCB              ; Teclado.
1692  8DCB
1693  8DCB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1694  8DCD DB FE        	in a,($fe)
1695  8DCF E6 01        	and $01
1696  8DD1 28 02        	jr z,1f
1697  8DD3 18 F6        	jr Pulsa_ENTER
1698  8DD5 C9           1 ret
1699  8DD6
1700  8DD6              ; **************************************************************************************************
1701  8DD6              ;
1702  8DD6              ; Temporización.
1703  8DD6
1704  8DD6              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1705  8DD6              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1706  8DD6              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1707  8DD6              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1708  8DD6
1709  8DD6              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1710  8DD6              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1711  8DD6              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1712  8DD6
1713  8DD6              ; A partir de $4f61 no hace falta DELAY.
1714  8DD6
1715  8DD6              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1716  8DD6
1717  8DD6 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1718  8DD9 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1719  8DDA 78           	LD A,B
1720  8DDB A7           	AND A
1721  8DDC 20 FB        	JR NZ,wait
1722  8DDE C9           	RET
1723  8DDF
1724  8DDF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1725  8DDF              ;
1726  8DDF              ;	5/3/23
1727  8DDF              ;
1728  8DDF              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1729  8DDF
1730  8DDF              Movimiento_Amadeus
1731  8DDF
1732  8DDF              ; Disparo.
1733  8DDF
1734  8DDF 3A 02 89     	ld a,(Disparo_Amadeus)
1735  8DE2 A7           	and a
1736  8DE3 20 02        	jr nz,1F
1737  8DE5 18 15        	jr 2F
1738  8DE7
1739  8DE7 3E F7        1 ld a,$f7													; "5" para disparar.
1740  8DE9 DB FE        	in a,($fe)
1741  8DEB E6 10        	and $10
1742  8DED
1743  8DED F5           	push af
1744  8DEE CC 96 8E     	call z,Genera_disparo
1745  8DF1 F1           	pop af
1746  8DF2 20 08        	jr nz,2F
1747  8DF4
1748  8DF4 3A 02 89     	ld a,(Disparo_Amadeus)
1749  8DF7 EE 01        	xor 1
1750  8DF9 32 02 89     	ld (Disparo_Amadeus),a
1751  8DFC 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1752  8DFE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1753  8E00 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1754  8E02 CC 52 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1755  8E05
1756  8E05 3E F7        	ld a,$f7
1757  8E07 DB FE        	in a,($fe)
1758  8E09 E6 01        	and $01
1759  8E0B C8           	ret z
1760  8E0C
1761  8E0C 3E F7        	ld a,$f7
1762  8E0E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1763  8E10 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1764  8E12 CC 2F 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1765  8E15 C9           	ret
1766  8E16
1767  8E16              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1768  8E16              ;
1769  8E16              ;	Rutina provisional para que los malotes cagen balas.
1770  8E16
1771  8E16              Detecta_disparo_entidad
1772  8E16
1773  8E16 3A 05 89     	ld a,(Disparo_entidad)
1774  8E19 A7           	and a
1775  8E1A C8           	ret z
1776  8E1B
1777  8E1B              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1778  8E1B
1779  8E1B              ;	ld a,$7f				; Detecta SPACE.
1780  8E1B              ;	in a,($fe)
1781  8E1B              ;	and 1
1782  8E1B              ;	ret nz
1783  8E1B
1784  8E1B CD 96 8E     	call Genera_disparo
1785  8E1E C9           	ret
1786  8E1F
1787  8E1F              ; ----------------------------------------------------------------------
1788  8E1F              ;
1789  8E1F              ;	8/9/23
1790  8E1F
1791  8E1F 2A E8 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1792  8E22 2B            	dec hl
1793  8E23 7E           	ld a,(hl)
1794  8E24 A7           	and a
1795  8E25 C8           	ret z										; Salimos si es álbum está vacío.
1796  8E26
1797  8E26 11 9F 88     	ld de,Variables_de_borrado+5
1798  8E29 01 06 00     	ld bc,6
1799  8E2C ED B8        	lddr
1800  8E2E C9           	ret
1801  8E2F
1802  8E2F              ; ----------------------------------------------------------------------
1803  8E2F              ;
1804  8E2F              ;	9/9/23
1805  8E2F
1806  8E2F              Repone_datos_de_borrado_Amadeus
1807  8E2F
1808  8E2F 21 9A 88     	ld hl,Variables_de_borrado
1809  8E32 11 AC 70     	ld de,Album_de_fotos_Amadeus
1810  8E35 01 06 00     	ld bc,6
1811  8E38 ED B0        	ldir
1812  8E3A
1813  8E3A EB           	ex de,hl
1814  8E3B 22 E8 88     	ld (End_Snapshot_Amadeus),hl
1815  8E3E
1816  8E3E C9           	ret
1817  8E3F
1818  8E3F              ; ----------------------------------------------------------------------
1819  8E3F              ;
1820  8E3F              ;	27/10/23
1821  8E3F              ;
1822  8E3F
1823  8E3F              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1824  8E3F              ;	_ Album_de_fotos correspondiente.
1825  8E3F
1826  8E3F              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1827  8E3F              ;	_ durante el proceso de escritura.
1828  8E3F
1829  8E3F              Repone_datos_de_borrado
1830  8E3F
1831  8E3F F3           	di
1832  8E40 ED 5B E2 88  	ld de,(Stack_snapshot)
1833  8E44 21 9A 88     	ld hl,Variables_de_borrado
1834  8E47 01 06 00     	ld bc,6
1835  8E4A ED B0        	ldir
1836  8E4C FB           	ei
1837  8E4D
1838  8E4D EB           	ex de,hl
1839  8E4E 22 E2 88     	ld (Stack_snapshot),hl
1840  8E51
1841  8E51 C9           	ret
1842  8E52
1843  8E52              ; --------------------------------------------------------------------------------------
1844  8E52
1845  8E52              Pinta_Amadeus
1846  8E52
1847  8E52 CD BA 8C        	call Calcula_malotes_Amadeus
1848  8E55 CD FA 96     	call Extrae_foto_Amadeus
1849  8E58 CD 7A 8C     	call Limpia_album_Amadeus
1850  8E5B
1851  8E5B C9           	ret
1852  8E5C
1853  8E5C              Pinta_entidades
1854  8E5C
1855  8E5C              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1856  8E5C
1857  8E5C 3A EA 88     	ld a,(Ctrl_3)
1858  8E5F CB 47        	bit 0,a
1859  8E61 C8           	ret z
1860  8E62
1861  8E62 CD A2 8C     	call Calcula_numero_de_malotes
1862  8E65 CD 78 96     	call Extrae_foto_entidades
1863  8E68 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1864  8E6B
1865  8E6B C9           	ret
1866  8E6C
1867  8E6C              ; -----------------------------------------------------------------------------------
1868  8E6C              ;
1869  8E6C              ;	10/12/23
1870  8E6C              ;
1871  8E6C              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1872  8E6C
1873  8E6C              Actualiza_relojes
1874  8E6C
1875  8E6C 3A EA 88     	ld a,(Ctrl_3)
1876  8E6F CB 47        	bit 0,a
1877  8E71 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1878  8E72
1879  8E72 21 FD 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1880  8E75 34           	inc (hl)
1881  8E76
1882  8E76 34           	inc (hl)
1883  8E77 35           	dec (hl)
1884  8E78 C0           	ret nz
1885  8E79
1886  8E79 21 FE 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1887  8E7C 34           	inc (hl)
1888  8E7D C9           	ret
1889  8E7E
1890  8E7E              ; ---------------------------------------------------------------
1891  8E7E              ;
1892  8E7E              ;	21/12/23
1893  8E7E
1894  8E7E              Guarda_parametros_DRAW
1895  8E7E
1896  8E7E 21 80 88     	ld hl,Filas
1897  8E81 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1898  8E84 01 38 00     	ld bc,56
1899  8E87 ED B0        	ldir
1900  8E89 C9           	ret
1901  8E8A
1902  8E8A              Recupera_parametros_DRAW
1903  8E8A
1904  8E8A 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1905  8E8D 11 80 88     	ld de,Filas
1906  8E90 01 38 00     	ld bc,56
1907  8E93 ED B0        	ldir
1908  8E95 C9           	ret
1909  8E96
1910  8E96              ; ---------------------------------------------------------------
1911  8E96
1912  8E96              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E96              ; ******************************************************************************************************************************************************************************************
   2+ 8E96              ;
   3+ 8E96              ;   21/07/23
   4+ 8E96              ;
   5+ 8E96              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E96              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E96              ;
   8+ 8E96              ;
   9+ 8E96              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E96              ;
  11+ 8E96              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E96              ;               _ hacen las entidades hacia abajo.
  13+ 8E96              ;
  14+ 8E96              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E96              ;
  16+ 8E96              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E96              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E96              ;
  19+ 8E96              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E96              ;           _ la bala.
  21+ 8E96              ;
  22+ 8E96              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E96              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E96              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E96              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E96              ;           _ en el momento de generarse la bala)).
  27+ 8E96
  28+ 8E96              Genera_disparo
  29+ 8E96
  30+ 8E96              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E96              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E96              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E96              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E96              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E96              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E96              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E96
  38+ 8E96              ; Exclusiones:
  39+ 8E96
  40+ 8E96 3A 98 88         ld a,(Vel_down)
  41+ 8E99 47               ld b,a
  42+ 8E9A 3A FC 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E9D B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E9E D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E9F 3A B1 88         ld a,(Columnas)
  46+ 8EA2 47               ld b,a
  47+ 8EA3 3A 81 88         ld a,(Columns)
  48+ 8EA6 B8               cp b
  49+ 8EA7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EA8
  51+ 8EA8              ; ----- ----- -----
  52+ 8EA8
  53+ 8EA8 3A B0 88         ld a,(Ctrl_0)
  54+ 8EAB CB 77            bit 6,a
  55+ 8EAD 20 06            jr nz,14F
  56+ 8EAF
  57+ 8EAF 3A 87 88         ld a,(Coordenada_y)
  58+ 8EB2 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EB4 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EB5
  61+ 8EB5 21 00 80     14 ld hl,Indice_disparo
  62+ 8EB8 3A 88 88         ld a,(CTRL_DESPLZ)
  63+ 8EBB 4F               ld c,a
  64+ 8EBC 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EBE              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EBE              ;                                            ""        ""       "f9", B="1"
  67+ 8EBE              ;                                            ""        ""       "fb", B="2"
  68+ 8EBE              ;                                            ""        ""       "fb", B="3"
  69+ 8EBE A7               and a
  70+ 8EBF 28 10            jr z,1F
  71+ 8EC1 E6 01            and 1
  72+ 8EC3 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EC4
  74+ 8EC4 79               ld a,c
  75+ 8EC5 16 F9            ld d,$f9
  76+ 8EC7 23           2 inc hl
  77+ 8EC8 23               inc hl
  78+ 8EC9 04               inc b
  79+ 8ECA BA               cp d
  80+ 8ECB 28 04            jr z,1F
  81+ 8ECD 14               inc d
  82+ 8ECE 14               inc d
  83+ 8ECF 18 F6            jr 2B
  84+ 8ED1
  85+ 8ED1 CD EE 8C     1 call Extrae_address
  86+ 8ED4 E5               push hl
  87+ 8ED5 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8ED7 DD 21 40 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EDB
  90+ 8EDB              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EDB              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EDB
  93+ 8EDB 3A B0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EDE CB 77            bit 6,a
  95+ 8EE0 20 04            jr nz,19F
  96+ 8EE2
  97+ 8EE2 AF               xor a
  98+ 8EE3 32 05 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EE6
 100+ 8EE6 3A 94 88     19 ld a,(Cuad_objeto)
 101+ 8EE9 FE 02            cp 2
 102+ 8EEB 38 66            jr c,3F
 103+ 8EED 28 64            jr z,3F
 104+ 8EEF
 105+ 8EEF              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EEF
 107+ 8EEF E6 01            and 1
 108+ 8EF1 28 30            jr z,4F
 109+ 8EF3
 110+ 8EF3              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EF3              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EF3              ;
 113+ 8EF3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EF3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EF3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EF3
 117+ 8EF3 2A 82 88     	ld hl,(Posicion_actual)
 118+ 8EF6
 119+ 8EF6              ;   Amadeus o entidad ???.
 120+ 8EF6
 121+ 8EF6 3A B0 88         ld a,(Ctrl_0)
 122+ 8EF9 CB 77            bit 6,a
 123+ 8EFB 28 0A            jr z,8F
 124+ 8EFD
 125+ 8EFD              ; 	Dispara Amadeus.
 126+ 8EFD
 127+ 8EFD 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EFF CD 69 96         call PreviousScan
 129+ 8F02 CD 69 96         call PreviousScan
 130+ 8F05
 131+ 8F05              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F05              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F05              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F05              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F05
 136+ 8F05 18 11            jr 10F
 137+ 8F07
 138+ 8F07              ; 	Dispara Entidad.
 139+ 8F07
 140+ 8F07 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F0A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F0A
 143+ 8F0A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F0A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F0A
 146+ 8F0A C5               push bc
 147+ 8F0B 06 10            ld b,16
 148+ 8F0D CD 5A 96     9 call NextScan
 149+ 8F10 10 FB            djnz 9B
 150+ 8F12 C1               pop bc
 151+ 8F13 CD 7D 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F16 18 06            jr 17F
 153+ 8F18
 154+ 8F18              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F18              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F18              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F18              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F18
 159+ 8F18 CD 7D 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F1B CD F2 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F1E              ;                                                      ; _al generar el disparo.
 162+ 8F1E
 163+ 8F1E              ; 	LLegados a este punto tendremos:
 164+ 8F1E              ;
 165+ 8F1E              ;       Puntero_objeto_disparo en IY.
 166+ 8F1E              ;       Rutinas_de_impresion en IX.
 167+ 8F1E              ;       Puntero_de_impresion en HL.
 168+ 8F1E              ;       Impacto/Dirección en BC.
 169+ 8F1E
 170+ 8F1E CD 85 8F     17 call Almacena_disparo
 171+ 8F21 18 52            jr 6F                                             ; RET.
 172+ 8F23
 173+ 8F23              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F23              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F23              ;
 176+ 8F23              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F23              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F23              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F23
 180+ 8F23 2A 82 88     4 ld hl,(Posicion_actual)
 181+ 8F26
 182+ 8F26              ;   Amadeus o entidad ???.
 183+ 8F26
 184+ 8F26 3A B0 88         ld a,(Ctrl_0)
 185+ 8F29 CB 77            bit 6,a
 186+ 8F2B 28 0A            jr z,11F
 187+ 8F2D
 188+ 8F2D              ; 	Dispara Amadeus.
 189+ 8F2D
 190+ 8F2D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F2F CD 69 96         call PreviousScan
 192+ 8F32 CD 69 96         call PreviousScan
 193+ 8F35
 194+ 8F35              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F35              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F35              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F35              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F35
 199+ 8F35 18 11            jr 13F
 200+ 8F37
 201+ 8F37              ; 	Dispara Entidad.
 202+ 8F37
 203+ 8F37 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F3A              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F3A
 206+ 8F3A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F3A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F3A
 209+ 8F3A C5               push bc
 210+ 8F3B 06 10            ld b,16
 211+ 8F3D CD 5A 96     12 call NextScan
 212+ 8F40 10 FB            djnz 12B
 213+ 8F42 C1               pop bc
 214+ 8F43
 215+ 8F43 CD 76 8F         call Ajusta_disparo_parte_derecha
 216+ 8F46 18 06            jr 18F
 217+ 8F48
 218+ 8F48              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F48              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F48              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F48              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F48
 223+ 8F48 CD 76 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F4B CD F2 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F4E              ;                                                       ; _al generar el disparo.
 226+ 8F4E
 227+ 8F4E              ; LLegados a este punto tendremos:
 228+ 8F4E              ;
 229+ 8F4E              ;       Puntero_objeto_disparo en IY.
 230+ 8F4E              ;       Rutinas_de_impresion en IX.
 231+ 8F4E              ;       Puntero_de_impresion en HL.
 232+ 8F4E              ;       Impacto/Dirección en BC.
 233+ 8F4E
 234+ 8F4E CD 85 8F     18 call Almacena_disparo
 235+ 8F51 18 22            jr 6F                                               ; RET.
 236+ 8F53
 237+ 8F53              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F53
 239+ 8F53 28 11        3 jr z,5F
 240+ 8F55
 241+ 8F55              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F55              ;
 243+ 8F55              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F55              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F55              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F55              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F55
 248+ 8F55              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F55              ;	   ""        ""       "f9", B="1"
 250+ 8F55              ;	   ""        ""       "fb", B="2"
 251+ 8F55              ; 	   ""        ""       "fb", B="3"
 252+ 8F55
 253+ 8F55 2A 82 88     	ld hl,(Posicion_actual)
 254+ 8F58 CD 5A 96     	call NextScan
 255+ 8F5B
 256+ 8F5B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F5B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F5B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F5B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F5B
 261+ 8F5B CD 7D 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F5E
 263+ 8F5E              ; 	No se produce impacto. B="$80"
 264+ 8F5E              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F5E
 266+ 8F5E 01 80 80         ld bc,$8080
 267+ 8F61
 268+ 8F61              ; 	LLegados a este punto tendremos:
 269+ 8F61              ;
 270+ 8F61              ;       Puntero_objeto_disparo en IY.
 271+ 8F61              ;       Rutinas_de_impresion en IX.
 272+ 8F61              ;       Puntero_de_impresion en HL.
 273+ 8F61              ;       Impacto/Dirección en BC.
 274+ 8F61
 275+ 8F61 CD 85 8F         call Almacena_disparo
 276+ 8F64 18 0F            jr 6F                                           ; RET.
 277+ 8F66
 278+ 8F66              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F66              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F66              ;
 281+ 8F66              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F66              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F66              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F66              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F66
 286+ 8F66 2A 82 88     5 ld hl,(Posicion_actual)
 287+ 8F69 CD 5A 96     	call NextScan
 288+ 8F6C
 289+ 8F6C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F6C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F6C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F6C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F6C
 294+ 8F6C CD 76 8F         call Ajusta_disparo_parte_derecha
 295+ 8F6F
 296+ 8F6F              ; 	No se produce impacto. B="$80"
 297+ 8F6F              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F6F
 299+ 8F6F 01 80 80     15 ld bc,$8080
 300+ 8F72
 301+ 8F72              ; 	LLegados a este punto tendremos:
 302+ 8F72              ;
 303+ 8F72              ;       Puntero_objeto_disparo en IY.
 304+ 8F72              ;       Rutinas_de_impresion en IX.
 305+ 8F72              ;       Puntero_de_impresion en HL.
 306+ 8F72              ;       Impacto/Dirección en BC.
 307+ 8F72
 308+ 8F72 CD 85 8F         call Almacena_disparo
 309+ 8F75
 310+ 8F75 C9           6 ret
 311+ 8F76
 312+ 8F76              ; ----------------------------------------------------------------
 313+ 8F76              ;
 314+ 8F76              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F76              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F76              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F76
 318+ 8F76 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F77 FE 02            cp 2
 320+ 8F79 38 01            jr c,1F
 321+ 8F7B 23               inc hl
 322+ 8F7C C9           1 ret
 323+ 8F7D
 324+ 8F7D 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F7E FE 01        	cp 1
 326+ 8F80 20 01        	jr nz,1F
 327+ 8F82 2B           	dec hl
 328+ 8F83 2B           1 dec hl
 329+ 8F84 C9               ret
 330+ 8F85
 331+ 8F85              ; ----------------------------------------------------------------
 332+ 8F85              ;
 333+ 8F85              ;   25/02/23
 334+ 8F85              ;
 335+ 8F85              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F85              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F85              ;
 338+ 8F85              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F85              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F85
 341+ 8F85              Almacena_disparo
 342+ 8F85
 343+ 8F85 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F86 F1               pop af
 345+ 8F87 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F88
 347+ 8F88 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F89 E6 01            and 1
 349+ 8F8B 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F8D              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F8D              ; 	Dispara AMADEUS.
 352+ 8F8D
 353+ 8F8D              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F8D              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F8D              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F8D              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F8D
 358+ 8F8D C5               push bc
 359+ 8F8E 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F91 2A EF 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F94 A7               and a
 362+ 8F95 ED 42            sbc hl,bc
 363+ 8F97 CC 73 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F9A C1               pop bc
 365+ 8F9B 28 54            jr z,4F
 366+ 8F9D
 367+ 8F9D 2A EF 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FA0 23               inc hl
 369+ 8FA1 23               inc hl
 370+ 8FA2 22 EF 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FA5              ;                                                   ; _ Disparo_(+1).
 372+ 8FA5 18 18            jr 2F
 373+ 8FA7
 374+ 8FA7              ; Dispara una entidad.
 375+ 8FA7
 376+ 8FA7 C5           1 push bc
 377+ 8FA8 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FAB 2A ED 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FAE A7               and a
 380+ 8FAF ED 42            sbc hl,bc
 381+ 8FB1 CC 6C 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FB4 C1               pop bc
 383+ 8FB5 28 3A            jr z,4F
 384+ 8FB7
 385+ 8FB7 2A ED 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FBA 23               inc hl
 387+ 8FBB 23               inc hl
 388+ 8FBC 22 ED 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FBF              ;                                                   ; _ Disparo_(+1).
 390+ 8FBF CD EE 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FC2              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FC2              ;
 393+ 8FC2              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FC2              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FC2              ;                                                     Puntero_de_impresion en HL.
 396+ 8FC2              ;                                                     Impacto/Dirección en BC.
 397+ 8FC2
 398+ 8FC2 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FC3 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FC4 23               inc hl                                          ; _ al siguiente.
 401+ 8FC5 A7               and a
 402+ 8FC6 20 C0            jr nz,3B
 403+ 8FC8
 404+ 8FC8 08               ex af,af
 405+ 8FC9 ED 73 DC 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FCD F9               ld sp,hl
 407+ 8FCE
 408+ 8FCE DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FD0 F5               push af                                         ; Puntero de impresión.
 410+ 8FD1 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FD3 C5               push bc                                         ; Control.
 412+ 8FD4
 413+ 8FD4 ED 7B DC 88      ld sp,(Stack)
 414+ 8FD8
 415+ 8FD8              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FD8
 417+ 8FD8 21 CB 88     	ld hl,Ctrl_1
 418+ 8FDB CB C6        	set 0,(hl)
 419+ 8FDD
 420+ 8FDD DD E5        	push ix
 421+ 8FDF E1               pop hl
 422+ 8FE0 F5               push af
 423+ 8FE1 DD E1            pop ix
 424+ 8FE3
 425+ 8FE3 CD 16 71     	call Guarda_foto_registros
 426+ 8FE6
 427+ 8FE6 21 CB 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FE9 CB 86        	res 0,(hl)
 429+ 8FEB
 430+ 8FEB              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FEB              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FEB
 433+ 8FEB CD 73 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FEE CD 6C 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FF1
 436+ 8FF1 C9           4 ret
 437+ 8FF2
 438+ 8FF2              ; ----------------------------------------------------------------
 439+ 8FF2              ;
 440+ 8FF2              ;   4/3/23
 441+ 8FF2              ;
 442+ 8FF2              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FF2              ;   _ al generarse el disparo.
 444+ 8FF2              ;
 445+ 8FF2              ;       "$80" ..... No se produce colisión.
 446+ 8FF2              ;       "$81" ..... Se produce colisión.
 447+ 8FF2              ;
 448+ 8FF2              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FF2              ;         _ que forman el disparo.
 450+ 8FF2
 451+ 8FF2
 452+ 8FF2              Comprueba_Colision
 453+ 8FF2
 454+ 8FF2              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FF2
 456+ 8FF2 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FF4 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FF5
 459+ 8FF5 CD 2B 90         call Modifica_H_Velocidad_disparo
 460+ 8FF8
 461+ 8FF8 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FF9 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FFB 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FFD
 465+ 8FFD 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FFF CD 1B 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9002
 468+ 9002 7B               ld a,e
 469+ 9003 E6 01            and 1
 470+ 9005 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9007              ;                                                  ; _ para activar IMPACTO.
 472+ 9007 E1               pop hl
 473+ 9008 E5               push hl
 474+ 9009 CD 5A 96         call NextScan
 475+ 900C
 476+ 900C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 900D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 900F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9011              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9011 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9013 CD 1B 90         call Bucle_2
 482+ 9016
 483+ 9016 43           1 ld b,e
 484+ 9017 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9018 FD E1            pop iy
 486+ 901A C9               ret
 487+ 901B
 488+ 901B              ; ---------- ----------
 489+ 901B
 490+ 901B 06 02        Bucle_2 ld b,2
 491+ 901D FD 7E 00     2 ld a,(iy)
 492+ 9020 A6               and (hl)
 493+ 9021 28 02            jr z,1F
 494+ 9023 1E 81            ld e,$81
 495+ 9025 23           1 inc hl
 496+ 9026 FD 23            inc iy
 497+ 9028 10 F3            djnz 2B
 498+ 902A C9               ret
 499+ 902B
 500+ 902B              ; ---------- ----------
 501+ 902B              ;
 502+ 902B              ;   21/7/23
 503+ 902B
 504+ 902B              Modifica_H_Velocidad_disparo
 505+ 902B
 506+ 902B 3A FC 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 902E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9030 D0               ret nc                                         ; _ incrementamos H.
 509+ 9031 24               inc h
 510+ 9032
 511+ 9032 C9               ret
 512+ 9033
 513+ 9033              ; -------------------------------------------------------------------------------------------------------------
 514+ 9033              ;
 515+ 9033              ;   04/12/23
 516+ 9033              ;
 517+ 9033              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9033              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9033              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9033              ;
 521+ 9033              ;   MODIFICA: HL,DE,B y A.
 522+ 9033
 523+ 9033              Genera_coordenadas_X
 524+ 9033
 525+ 9033              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9033              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9033
 528+ 9033              ;   Limpiamos almacenes.
 529+ 9033
 530+ 9033 CD 64 90         call Limpia_Coordenadas_X
 531+ 9036
 532+ 9036              ;   Almacenamos coordenadas X.
 533+ 9036
 534+ 9036              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9036
 536+ 9036 2A AA 88         ld hl,(Puntero_de_impresion)
 537+ 9039 11 F9 88         ld de,Coordenadas_X_Entidad
 538+ 903C 06 02            ld b,2
 539+ 903E
 540+ 903E 3A 88 88         ld a,(CTRL_DESPLZ)
 541+ 9041 A7               and a
 542+ 9042 28 01            jr z,1F
 543+ 9044 04               inc b
 544+ 9045
 545+ 9045 CD 5B 90     1 call Guarda_coordenadas_X
 546+ 9048
 547+ 9048              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9048
 549+ 9048 2A AD 85         ld hl,(p.imp.amadeus)
 550+ 904B 11 F6 88         ld de,Coordenadas_X_Amadeus
 551+ 904E 06 02            ld b,2
 552+ 9050
 553+ 9050 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 9053 A7               and a
 555+ 9054 28 01            jr z,2F
 556+ 9056 04               inc b
 557+ 9057
 558+ 9057 CD 5B 90     2 call Guarda_coordenadas_X
 559+ 905A
 560+ 905A              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 905A
 562+ 905A C9               ret
 563+ 905B
 564+ 905B              ; ----- ----- ----- ----- -----
 565+ 905B
 566+ 905B 7D           Guarda_coordenadas_X  ld a,l
 567+ 905C E6 1F            and $1f
 568+ 905E 12           1 ld (de),a
 569+ 905F 3C               inc a
 570+ 9060 13               inc de
 571+ 9061 10 FB            djnz 1B
 572+ 9063 C9               ret
 573+ 9064
 574+ 9064 AF           Limpia_Coordenadas_X xor a
 575+ 9065 06 06            ld b,6
 576+ 9067 21 F6 88         ld hl,Coordenadas_X_Amadeus
 577+ 906A 77           1 ld (hl),a
 578+ 906B 23               inc hl
 579+ 906C 10 FC            djnz 1B
 580+ 906E C9               ret
 581+ 906F
 582+ 906F              ; ----- ----- ----- ----- -----
 583+ 906F
 584+ 906F              Compara_coordenadas_X
 585+ 906F
 586+ 906F 06 03            ld b,3
 587+ 9071 11 FB 88         ld de,Coordenadas_X_Entidad+2
 588+ 9074
 589+ 9074 1A               ld a,(de)
 590+ 9075 A7               and a
 591+ 9076 20 01            jr nz,2F
 592+ 9078 05               dec b
 593+ 9079
 594+ 9079 1B           2 dec de
 595+ 907A 1B               dec de
 596+ 907B 21 F6 88         ld hl,Coordenadas_X_Amadeus
 597+ 907E
 598+ 907E D5           1 push de
 599+ 907F E5               push hl
 600+ 9080 C5               push bc
 601+ 9081
 602+ 9081 CD 8B 90         call Comparando
 603+ 9084
 604+ 9084 C1               pop bc
 605+ 9085 E1               pop hl
 606+ 9086 D1               pop de
 607+ 9087
 608+ 9087 13               inc de
 609+ 9088 10 F4            djnz 1B
 610+ 908A
 611+ 908A C9               ret
 612+ 908B
 613+ 908B              ; ----- ----- ----- ----- -----
 614+ 908B              ;
 615+ 908B              ;   4/12/23
 616+ 908B              ;
 617+ 908B              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 908B
 619+ 908B 06 03        Comparando ld b,3
 620+ 908D 1A               ld a,(de)
 621+ 908E 4E           2 ld c,(hl)
 622+ 908F B9               cp c
 623+ 9090 28 04            jr z,1F
 624+ 9092 23               inc hl
 625+ 9093 10 F9            djnz 2B
 626+ 9095 C9               ret
 627+ 9096
 628+ 9096 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9098 32 99 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 909B 21 F1 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 909E CB D6            set 2,(hl)
 632+ 90A0 C9               ret
 633+ 90A1
 634+ 90A1              ; -----------------------------------------------------------------------
 635+ 90A1              ;
 636+ 90A1              ;   7/12/23
 637+ 90A1              ;
 638+ 90A1
 639+ 90A1              Detecta_colision_nave_entidad
 640+ 90A1
 641+ 90A1              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90A1
 643+ 90A1 FD 2A 84 88      ld iy,(Puntero_objeto)
 644+ 90A5 2A AA 88         ld hl,(Puntero_de_impresion)
 645+ 90A8
 646+ 90A8 E5               push hl
 647+ 90A9
 648+ 90A9              ; ----- ----- -----
 649+ 90A9 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90AB 06 0A            ld b,10
 651+ 90AD CD DD 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90B0 7B               ld a,e
 653+ 90B1 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 90B3 38 0E            jr c,3F
 655+ 90B5
 656+ 90B5              ; LLegados a este punto:
 657+ 90B5              ;
 658+ 90B5              ;   HAY COLISIÓN !!!!!.
 659+ 90B5              ;
 660+ 90B5              ;   .db (Impacto) de Amadeus a "1".
 661+ 90B5              ;   SET el bit3 de (Impacto2).
 662+ 90B5              ;
 663+ 90B5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90B5
 665+ 90B5 21 99 88         ld hl,Impacto
 666+ 90B8 36 01            ld (hl),1
 667+ 90BA 21 F1 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 90BD CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 90BF CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 90C1
 671+ 90C1 18 18            jr 1F
 672+ 90C3
 673+ 90C3              ; -----
 674+ 90C3
 675+ 90C3 E1           3 pop hl
 676+ 90C4 CD 5A 96         call NextScan
 677+ 90C7 E5               push hl
 678+ 90C8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 90C9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 90CB 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 90CD 30 0C            jr nc,1F
 682+ 90CF              ;                                                  ; _ 2º scanline si esto es así.
 683+ 90CF 10 DC            djnz 2B
 684+ 90D1
 685+ 90D1              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 90D1
 687+ 90D1              ; LLegados a este punto:
 688+ 90D1              ;
 689+ 90D1              ;   NO HAY COLISIÓN !!!!!.
 690+ 90D1              ;
 691+ 90D1              ;   .db (Impacto) de Amadeus a "0".
 692+ 90D1              ;   RES el bit2 de (Impacto2).
 693+ 90D1              ;
 694+ 90D1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 90D1              ;   Lo colocamos a "0".
 696+ 90D1
 697+ 90D1 21 F1 88         ld hl,Impacto2
 698+ 90D4 CB 96            res 2,(hl)
 699+ 90D6 2A F2 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 90D9 36 00            ld (hl),0
 701+ 90DB
 702+ 90DB E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 90DC C9               ret
 704+ 90DD
 705+ 90DD               ; ---------- ----------
 706+ 90DD
 707+ 90DD C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 90DE 3A 81 88         ld a,(Columns)
 709+ 90E1 47               ld b,a
 710+ 90E2 FD 7E 00     2 ld a,(iy)
 711+ 90E5 BE               cp (hl)
 712+ 90E6 28 01            jr z,1F
 713+ 90E8
 714+ 90E8 1C               inc e
 715+ 90E9
 716+ 90E9 23           1 inc hl
 717+ 90EA FD 23            inc iy
 718+ 90EC 10 F4            djnz 2B
 719+ 90EE C1               pop bc
 720+ 90EF C9               ret
 721+ 90F0
 722+ 90F0              ; -------------------------------------------------------------------------------------------------------------
 723+ 90F0              ;
 724+ 90F0              ;   13/03/23
 725+ 90F0              ;
 726+ 90F0              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 90F0              ;
 728+ 90F0              ;   DESTRUYE: HL,BC,DE y A.
 729+ 90F0
 730+ 90F0 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 90F3 7E               ld a,(hl)
 732+ 90F4 A7               and a
 733+ 90F5 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 90F6
 735+ 90F6 44               ld b,h
 736+ 90F7 4D               ld c,l
 737+ 90F8 2A E4 88         ld hl,(Stack_snapshot_disparos)
 738+ 90FB E5               push hl
 739+ 90FC A7               and a
 740+ 90FD ED 42            sbc hl,bc
 741+ 90FF E5               push hl
 742+ 9100 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9101
 744+ 9101 E1               pop hl
 745+ 9102 54               ld d,h
 746+ 9103 5D               ld e,l
 747+ 9104 1B               dec de
 748+ 9105 ED B8            lddr                                                ; Limpiamos.
 749+ 9107
 750+ 9107 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 910A 22 E4 88         ld (Stack_snapshot_disparos),hl
 752+ 910D
 753+ 910D C9               ret
 754+ 910E
 755+ 910E              ; -------------------------------------------------------------------------------------------------------------
 756+ 910E              ;
 757+ 910E              ;   18/07/23
 758+ 910E              ;
 759+ 910E
 760+ 910E              Motor_de_disparos
 761+ 910E
 762+ 910E              ; Gestiona DISPAROS DE AMADEUS.
 763+ 910E
 764+ 910E 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9111 2A EF 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9114
 767+ 9114 CD EE 8C     2 call Extrae_address
 768+ 9117 7E               ld a,(hl)
 769+ 9118 A7               and a
 770+ 9119 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 911B
 772+ 911B              ; ----- ----- ----- ----- ----- -----
 773+ 911B
 774+ 911B C5               push bc
 775+ 911C CD E0 91         call foto_disparo_a_borrar
 776+ 911F
 777+ 911F              ; Existe colisión con este disparo???
 778+ 911F
 779+ 911F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9120 7E               ld a,(hl)
 781+ 9121 2B               dec hl
 782+ 9122 E6 01            and 1
 783+ 9124 28 1D            jr z,9F
 784+ 9126
 785+ 9126              ;   En este punto:
 786+ 9126              ;
 787+ 9126              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9126              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9126              ;   _con la entidad).
 790+ 9126              ;
 791+ 9126              ;   Disparo_2A defw 0                                ; Control.
 792+ 9126              ;    defw 0                                          ; Puntero objeto.
 793+ 9126              ;    defw 0                                          ; Puntero de impresión.
 794+ 9126              ;    defw 0                                          ; Rutina de impresión.
 795+ 9126
 796+ 9126 E5               push hl
 797+ 9127
 798+ 9127 06 04            ld b,4
 799+ 9129 23           19 inc hl
 800+ 912A 10 FD            djnz 19B
 801+ 912C
 802+ 912C CD EE 8C         call Extrae_address
 803+ 912F CD 30 9D         call Genera_coordenadas_disparo
 804+ 9132
 805+ 9132              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9132
 807+ 9132 21 F4 88         ld hl,Coordenadas_disparo_certero
 808+ 9135 72               ld (hl),d
 809+ 9136 23               inc hl
 810+ 9137 73               ld (hl),e
 811+ 9138
 812+ 9138              ; Elimino el disparo de la base de datos.
 813+ 9138
 814+ 9138 E1               pop hl
 815+ 9139 CD 5F 92         call Elimina_disparo_de_base_de_datos
 816+ 913C 21 F1 88         ld hl,Impacto2
 817+ 913F CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9141
 819+ 9141 18 06            jr 11F
 820+ 9143
 821+ 9143 CD 09 92     9 call Mueve_disparo
 822+ 9146 CD E0 91         call foto_disparo_a_borrar
 823+ 9149
 824+ 9149 C1           11 pop bc
 825+ 914A 18 04            jr 7F
 826+ 914C
 827+ 914C              ; ----- ----- ----- ----- ----- -----
 828+ 914C
 829+ 914C ED 42        1 sbc hl,bc
 830+ 914E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9150
 832+ 9150 2A EF 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9153 23               inc hl
 834+ 9154 23               inc hl
 835+ 9155 22 EF 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9158 18 BA            jr 2B
 837+ 915A
 838+ 915A CD 73 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 915D              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 915D
 841+ 915D              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 915D
 843+ 915D 01 6E 85         ld bc,Disparo_11
 844+ 9160 2A ED 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9163
 846+ 9163 CD EE 8C     5 call Extrae_address
 847+ 9166 7E               ld a,(hl)
 848+ 9167 A7               and a
 849+ 9168 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 916A
 851+ 916A              ; ----- ----- ----- ----- ----- -----
 852+ 916A
 853+ 916A C5               push bc
 854+ 916B CD E0 91         call foto_disparo_a_borrar
 855+ 916E
 856+ 916E              ; Existe colisión con este disparo???
 857+ 916E
 858+ 916E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 916F 7E               ld a,(hl)
 860+ 9170 2B               dec hl
 861+ 9171 E6 01            and 1
 862+ 9173 28 4D            jr z,10F
 863+ 9175
 864+ 9175              ;! La colisión se produce con Amadeus???
 865+ 9175              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9175
 867+ 9175 E5               push hl
 868+ 9176
 869+ 9176 06 04            ld b,4
 870+ 9178 23           16 inc hl
 871+ 9179 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 917B
 873+ 917B CD EE 8C         call Extrae_address
 874+ 917E CD 30 9D         call Genera_coordenadas_disparo
 875+ 9181
 876+ 9181 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9182 FE 16            cp $16
 878+ 9184 38 2A            jr c,15F
 879+ 9186
 880+ 9186
 881+ 9186              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9186
 883+ 9186 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9187
 885+ 9187              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9187
 887+ 9187 2A AD 85         ld hl,(p.imp.amadeus)
 888+ 918A
 889+ 918A              ; Coordenada X de Amadeus en D.
 890+ 918A
 891+ 918A 7D               ld a,l
 892+ 918B E6 1F            and $1F
 893+ 918D 57               ld d,a
 894+ 918E
 895+ 918E 21 8A 85         ld hl,Amadeus_db+8
 896+ 9191 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9192
 898+ 9192 21 F6 88         ld hl,Coordenadas_X_Amadeus
 899+ 9195 CD 5B 90         call Guarda_coordenadas_X
 900+ 9198
 901+ 9198 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9199
 903+ 9199              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9199
 905+ 9199 06 02            ld b,2
 906+ 919B C5           20 push bc
 907+ 919C
 908+ 919C 06 03            ld b,3
 909+ 919E 21 F6 88         ld hl,Coordenadas_X_Amadeus
 910+ 91A1 7E           18 ld a,(hl)
 911+ 91A2 BA               cp d
 912+ 91A3 20 04            jr nz,17F
 913+ 91A5
 914+ 91A5              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91A5
 916+ 91A5 C1               pop bc
 917+ 91A6 E1               pop hl
 918+ 91A7 18 0D            jr 14F
 919+ 91A9
 920+ 91A9 23           17 inc hl
 921+ 91AA 10 F5            djnz 18B
 922+ 91AC
 923+ 91AC 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91AD
 925+ 91AD C1               pop bc
 926+ 91AE 10 EB            djnz 20B
 927+ 91B0
 928+ 91B0
 929+ 91B0              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91B0              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91B0
 932+ 91B0 E1           15 pop hl
 933+ 91B1 23               inc hl
 934+ 91B2 35               dec (hl)
 935+ 91B3 2B               dec hl
 936+ 91B4 18 0C            jr 10F
 937+ 91B6
 938+ 91B6              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 91B6              ; _ almacén de coordenadas_X de Amadeus.
 940+ 91B6
 941+ 91B6 E5           14 push hl
 942+ 91B7 CD 5F 92         call Elimina_disparo_de_base_de_datos
 943+ 91BA 21 F1 88         ld hl,Impacto2
 944+ 91BD CB CE            set 1,(hl)
 945+ 91BF E1               pop hl
 946+ 91C0 18 06            jr 12F
 947+ 91C2
 948+ 91C2              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 91C2
 950+ 91C2 CD 09 92     10 call Mueve_disparo
 951+ 91C5 CD E0 91         call foto_disparo_a_borrar
 952+ 91C8 C1           12 pop bc
 953+ 91C9
 954+ 91C9 18 04            jr 8F
 955+ 91CB
 956+ 91CB              ; ----- ----- ----- ----- ----- -----
 957+ 91CB
 958+ 91CB ED 42        4 sbc hl,bc
 959+ 91CD 28 0A            jr z,6F
 960+ 91CF
 961+ 91CF 2A ED 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 91D2 23               inc hl
 963+ 91D3 23               inc hl
 964+ 91D4 22 ED 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 91D7 18 8A            jr 5B
 966+ 91D9
 967+ 91D9 CD 6C 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 91DC CD 64 90         call Limpia_Coordenadas_X
 969+ 91DF C9               ret
 970+ 91E0
 971+ 91E0              ; ------------------------------------------------------------------
 972+ 91E0
 973+ 91E0              foto_disparo_a_borrar
 974+ 91E0
 975+ 91E0 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 91E1 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 91E2 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 91E3
 979+ 91E3 E5               push hl
 980+ 91E4 23               inc hl
 981+ 91E5 23               inc hl
 982+ 91E6 ED 73 DC 88      ld (Stack),sp
 983+ 91EA F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 91EB FD E1            pop iy
 985+ 91ED DD E1            pop ix
 986+ 91EF E1               pop hl
 987+ 91F0 ED 7B DC 88      ld sp,(Stack)
 988+ 91F4 3A CB 88         ld a,(Ctrl_1)
 989+ 91F7 CB C7            set 0,a
 990+ 91F9 32 CB 88         ld (Ctrl_1),a
 991+ 91FC CD 16 71         call Guarda_foto_registros
 992+ 91FF 3A CB 88         ld a,(Ctrl_1)
 993+ 9202 CB 87            res 0,a
 994+ 9204 32 CB 88         ld (Ctrl_1),a
 995+ 9207 E1               pop hl
 996+ 9208 C9               ret
 997+ 9209
 998+ 9209              ;---------------------------------------------------
 999+ 9209              ;
1000+ 9209              ;   18/07/23
1001+ 9209              ;
1002+ 9209
1003+ 9209              Mueve_disparo
1004+ 9209
1005+ 9209              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9209              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9209              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9209
1009+ 9209 E5               push hl
1010+ 920A
1011+ 920A 7E               ld a,(hl)
1012+ 920B
1013+ 920B 06 04            ld b,4
1014+ 920D 23           1 inc hl
1015+ 920E 10 FD            djnz 1B
1016+ 9210
1017+ 9210              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9210
1019+ 9210 CD EE 8C         call Extrae_address
1020+ 9213
1021+ 9213 E6 01            and 1
1022+ 9215 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9217
1024+ 9217              ; Disparo hacia arriba, (Amadeus).
1025+ 9217
1026+ 9217              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9217              ; _ de la dificultad.
1028+ 9217
1029+ 9217 CD 69 96         call PreviousScan
1030+ 921A CD 69 96         call PreviousScan
1031+ 921D CD 69 96         call PreviousScan
1032+ 9220 CD 69 96         call PreviousScan
1033+ 9223
1034+ 9223              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9223
1036+ 9223 7C               ld a,h
1037+ 9224 FE 40            cp $40
1038+ 9226 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9228
1040+ 9228              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9228
1042+ 9228 EB               ex de,hl
1043+ 9229 06 04            ld b,4
1044+ 922B 2B           6 dec hl
1045+ 922C 10 FD            djnz 6B
1046+ 922E
1047+ 922E CD 5F 92         call Elimina_disparo_de_base_de_datos
1048+ 9231 E1               pop hl
1049+ 9232 18 10            jr 7F
1050+ 9234
1051+ 9234              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9234              ; HL contiene el puntero de impresión del disparo.
1053+ 9234              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9234
1055+ 9234 D5           3 push de
1056+ 9235 C5               push bc
1057+ 9236
1058+ 9236 CD F2 8F         call Comprueba_Colision
1059+ 9239
1060+ 9239              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9239
1062+ 9239 78               ld a,b
1063+ 923A
1064+ 923A C1               pop bc
1065+ 923B D1               pop de
1066+ 923C
1067+ 923C EB               ex de,hl
1068+ 923D
1069+ 923D 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 923E 23               inc hl                                      ; _ movimiento.
1071+ 923F 72               ld (hl),d
1072+ 9240
1073+ 9240 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9241
1075+ 9241 23               inc hl                                      ; _ en curso.
1076+ 9242 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9243 2B               dec hl
1078+ 9244
1079+ 9244 C9           7 ret
1080+ 9245
1081+ 9245              ; Disparo hacia abajo, (Entidad).
1082+ 9245
1083+ 9245 3A FC 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 9248 47               ld b,a
1085+ 9249
1086+ 9249 CD 5A 96     4 call NextScan
1087+ 924C 10 FB            djnz 4B
1088+ 924E
1089+ 924E              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 924E
1091+ 924E 7C               ld a,h
1092+ 924F FE 58            cp $58
1093+ 9251 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9253
1095+ 9253 EB               ex de,hl
1096+ 9254 06 04            ld b,4
1097+ 9256 2B           5 dec hl
1098+ 9257 10 FD            djnz 5B
1099+ 9259
1100+ 9259 CD 5F 92         call Elimina_disparo_de_base_de_datos
1101+ 925C E1               pop hl
1102+ 925D 18 E5            jr 7B
1103+ 925F
1104+ 925F              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 925F
1106+ 925F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9262 AF               xor a
1108+ 9263 77               ld (hl),a
1109+ 9264 54               ld d,h
1110+ 9265 5D               ld e,l
1111+ 9266 13               inc de
1112+ 9267 ED B0            ldir
1113+ 9269 C9               ret
1114+ 926A
1115+ 926A              ; -----------------------------------------------------------------
1116+ 926A              ;
1117+ 926A              ;   7/12/23
1118+ 926A              ;
1119+ 926A
1120+ 926A 3A F1 88     Selector_de_impactos ld a,(Impacto2)
1121+ 926D A7               and a
1122+ 926E C8               ret z
1123+ 926F
1124+ 926F              ; Analizamos si hay impacto por disparos.
1125+ 926F
1126+ 926F              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 926F
1128+ 926F CB 4F            bit 1,a
1129+ 9271 28 07            jr z,1F
1130+ 9273
1131+ 9273 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9276 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9278 18 08            jr 2F
1134+ 927A
1135+ 927A CB 47        1 bit 0,a
1136+ 927C C8               ret z
1137+ 927D
1138+ 927D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 927D
1140+ 927D 21 CB 88         ld hl,Ctrl_1
1141+ 9280 CB D6            set 2,(hl)
1142+ 9282
1143+ 9282 C9           2 ret
1144+ 9283
1145+ 9283              ; -----------------------------------------------------------------
1146+ 9283              ;
1147+ 9283              ;   25/04/23
1148+ 9283              ;
1149+ 9283
1150+ 9283              Determina_resultado_comparativa
1151+ 9283
1152+ 9283              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9283              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9283              ;
1155+ 9283              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9283              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9283              ;
1158+ 9283              ;   SBC HL,DE
1159+ 9283
1160+ 9283              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9283              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9283
1163+ 9283              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9283              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9283
1166+ 9283
1167+ 9283 3A 94 88         ld a,(Cuad_objeto)
1168+ 9286 FE 02            cp 2
1169+ 9288 28 26            jr z,2F
1170+ 928A 38 24            jr c,2F
1171+ 928C
1172+ 928C              ; Cuadrantes 3º y 4º
1173+ 928C
1174+ 928C E6 01            and 1
1175+ 928E 28 10            jr z,4F
1176+ 9290
1177+ 9290              ; Cuadrante 3º
1178+ 9290
1179+ 9290 7C               ld a,h
1180+ 9291 06 00            ld b,0
1181+ 9293
1182+ 9293 CD 1E 93         call Compara_cositas_H3
1183+ 9296
1184+ 9296 04               inc b
1185+ 9297 05               dec b
1186+ 9298 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9299
1188+ 9299 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 929A 06 00            ld b,0
1190+ 929C
1191+ 929C CD 30 93         call Compara_cositas_L3
1192+ 929F C9               ret
1193+ 92A0
1194+ 92A0              ; Cuadrante 4º
1195+ 92A0
1196+ 92A0 7C           4 ld a,h
1197+ 92A1 06 00            ld b,0
1198+ 92A3
1199+ 92A3 CD 42 93         call Compara_cositas_H4
1200+ 92A6
1201+ 92A6 04               inc b
1202+ 92A7 05               dec b
1203+ 92A8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92A9
1205+ 92A9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92AA 06 00            ld b,0
1207+ 92AC
1208+ 92AC CD 58 93         call Compara_cositas_L4
1209+ 92AF C9               ret
1210+ 92B0
1211+ 92B0              ; Cuadrantes 1º y 2º.
1212+ 92B0
1213+ 92B0 28 10        2 jr z,3F
1214+ 92B2
1215+ 92B2              ; 1er Cuadrante
1216+ 92B2
1217+ 92B2 7C               ld a,h
1218+ 92B3 06 00            ld b,0
1219+ 92B5
1220+ 92B5 CD F6 92         call Compara_cositas_H1
1221+ 92B8
1222+ 92B8 04               inc b
1223+ 92B9 05               dec b
1224+ 92BA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 92BB
1226+ 92BB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 92BC 06 00            ld b,0
1228+ 92BE
1229+ 92BE CD 0C 93         call Compara_cositas_L1
1230+ 92C1 C9               ret
1231+ 92C2
1232+ 92C2
1233+ 92C2              ; 2º Cuadrante
1234+ 92C2
1235+ 92C2 7C           3 ld a,h
1236+ 92C3 06 00            ld b,0
1237+ 92C5
1238+ 92C5 CD D2 92         call Compara_cositas_H2
1239+ 92C8
1240+ 92C8 04               inc b
1241+ 92C9 05               dec b
1242+ 92CA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 92CB
1244+ 92CB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 92CC 06 00            ld b,0
1246+ 92CE
1247+ 92CE CD E4 92         call Compara_cositas_L2
1248+ 92D1 C9               ret
1249+ 92D2
1250+ 92D2 A7           Compara_cositas_H2 and a
1251+ 92D3 28 0D            jr z,1F
1252+ 92D5              ;    cp $fd
1253+ 92D5              ;    jr z,1F
1254+ 92D5              ;    cp $fe
1255+ 92D5              ;    jr z,1F
1256+ 92D5 FE FF            cp $ff
1257+ 92D7 28 09            jr z,1F
1258+ 92D9 FE 01            cp $01
1259+ 92DB 28 05            jr z,1F
1260+ 92DD FE 02            cp $02
1261+ 92DF 28 01            jr z,1F
1262+ 92E1 C0               ret nz
1263+ 92E2 04           1 inc b
1264+ 92E3 C9               ret
1265+ 92E4
1266+ 92E4 A7           Compara_cositas_L2 and a
1267+ 92E5 28 0D            jr z,1F
1268+ 92E7              ;    cp $fd
1269+ 92E7              ;    jr z,1F
1270+ 92E7 FE FE            cp $fe
1271+ 92E9 28 09            jr z,1F
1272+ 92EB FE FF            cp $ff
1273+ 92ED 28 05            jr z,1F
1274+ 92EF FE 01            cp $01
1275+ 92F1 28 01            jr z,1F
1276+ 92F3              ;    cp $02
1277+ 92F3              ;    jr z,1F
1278+ 92F3 C0               ret nz
1279+ 92F4 04           1 inc b
1280+ 92F5 C9               ret
1281+ 92F6
1282+ 92F6 A7           Compara_cositas_H1 and a
1283+ 92F7 28 11            jr z,1F
1284+ 92F9              ;    cp $fd
1285+ 92F9              ;    jr z,1F
1286+ 92F9              ;    cp $fe
1287+ 92F9              ;    jr z,1F
1288+ 92F9 FE FF            cp $ff
1289+ 92FB 28 0D            jr z,1F
1290+ 92FD FE 01            cp $01
1291+ 92FF 28 09            jr z,1F
1292+ 9301 FE 02            cp $02
1293+ 9303 28 05            jr z,1F
1294+ 9305 FE 03            cp $03
1295+ 9307 28 01            jr z,1F
1296+ 9309 C0               ret nz
1297+ 930A 04           1 inc b
1298+ 930B C9               ret
1299+ 930C
1300+ 930C A7           Compara_cositas_L1 and a
1301+ 930D 28 0D            jr z,1F
1302+ 930F              ;    cp $fd
1303+ 930F              ;    jr z,1F
1304+ 930F              ;    cp $fe
1305+ 930F              ;    jr z,1F
1306+ 930F              ;    cp $ff
1307+ 930F              ;    jr z,1F
1308+ 930F FE 01            cp $01
1309+ 9311 28 09            jr z,1F
1310+ 9313 FE 02            cp $02
1311+ 9315 28 05            jr z,1F
1312+ 9317 FE 03            cp $03
1313+ 9319 28 01            jr z,1F
1314+ 931B C0               ret nz
1315+ 931C 04           1 inc b
1316+ 931D C9               ret
1317+ 931E
1318+ 931E A7           Compara_cositas_H3 and a
1319+ 931F 28 0D            jr z,1F
1320+ 9321              ;    cp $fd
1321+ 9321              ;    jr z,1F
1322+ 9321 FE FE            cp $fe
1323+ 9323 28 09            jr z,1F
1324+ 9325 FE FF            cp $ff
1325+ 9327 28 05            jr z,1F
1326+ 9329 FE 01            cp $01
1327+ 932B 28 01            jr z,1F
1328+ 932D              ;    cp $02
1329+ 932D              ;    jr z,1F
1330+ 932D              ;    cp $03
1331+ 932D              ;    jr z,1F
1332+ 932D C0               ret nz
1333+ 932E 04           1 inc b
1334+ 932F C9               ret
1335+ 9330
1336+ 9330 A7           Compara_cositas_L3 and a
1337+ 9331 28 0D            jr z,1F
1338+ 9333              ;    cp $fd
1339+ 9333              ;    jr z,1F
1340+ 9333              ;    cp $fe
1341+ 9333              ;    jr z,1F
1342+ 9333              ;    cp $ff
1343+ 9333              ;    jr z,1F
1344+ 9333 FE 01            cp $01
1345+ 9335 28 09            jr z,1F
1346+ 9337 FE 02            cp $02
1347+ 9339 28 05            jr z,1F
1348+ 933B FE 03            cp $03
1349+ 933D 28 01            jr z,1F
1350+ 933F C0               ret nz
1351+ 9340 04           1 inc b
1352+ 9341 C9               ret
1353+ 9342
1354+ 9342 A7           Compara_cositas_H4 and a
1355+ 9343 28 11            jr z,1F
1356+ 9345 FE FD            cp $fd
1357+ 9347 28 0D            jr z,1F
1358+ 9349 FE FE            cp $fe
1359+ 934B 28 09            jr z,1F
1360+ 934D FE FF            cp $ff
1361+ 934F 28 05            jr z,1F
1362+ 9351 FE 01            cp $01
1363+ 9353 28 01            jr z,1F
1364+ 9355              ;    cp $02
1365+ 9355              ;    jr z,1F
1366+ 9355              ;    cp $03
1367+ 9355              ;    jr z,1F
1368+ 9355 C0               ret nz
1369+ 9356 04           1 inc b
1370+ 9357 C9               ret
1371+ 9358
1372+ 9358 A7           Compara_cositas_L4 and a
1373+ 9359 28 0D            jr z,1F
1374+ 935B              ;    cp $fd
1375+ 935B              ;    jr z,1F
1376+ 935B FE FE            cp $fe
1377+ 935D 28 09            jr z,1F
1378+ 935F FE FF            cp $ff
1379+ 9361 28 05            jr z,1F
1380+ 9363 FE 01            cp $01
1381+ 9365 28 01            jr z,1F
1382+ 9367              ;    cp $02
1383+ 9367              ;    jr z,1F
1384+ 9367              ;    cp $03
1385+ 9367              ;    jr z,1F
1386+ 9367 C0               ret nz
1387+ 9368 04           1 inc b
1388+ 9369 C9               ret
# file closed: Disparo.asm
1913  936A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 936A              ; ******************************************************************************************************************************************************************************************
   2+ 936A              ;
   3+ 936A              ; 26/06/23
   4+ 936A              ;
   5+ 936A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 936A
   7+ 936A              Draw
   8+ 936A
   9+ 936A CD 4E 96     	call Prepara_draw
  10+ 936D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 936E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 936F 28 05        	jr z,2F
  13+ 9371
  14+ 9371 3A 94 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9374 18 0C        	jr 1F
  16+ 9376
  17+ 9376 2A 92 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9379 22 82 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 937C CD 0B 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 937F              ;													; _la esquina superior izquierda de la pantalla.
  21+ 937F CD C1 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 9382
  23+ 9382 3A B0 88     1 ld a,(Ctrl_0)
  24+ 9385 CB 6F        	bit 5,a
  25+ 9387 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 9389
  27+ 9389 CD A1 93     	call Comprueba_limite_horizontal
  28+ 938C CD 31 94     	call Comprueba_limite_vertical
  29+ 938F
  30+ 938F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 938F              ; -----------------------
  32+ 938F              ; -----------------------
  33+ 938F              ; -----------------------
  34+ 938F
  35+ 938F CD 7E 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 9392 CD B5 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 9395 CD 14 96     	call Define_rutina_de_impresion
  38+ 9398
  39+ 9398 3A B0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 939B CB AF        	res 5,a											; _a ser de utilidad.
  41+ 939D 32 B0 88     	ld (Ctrl_0),a
  42+ 93A0
  43+ 93A0 C9           	ret
  44+ 93A1
  45+ 93A1              ; *******************************************************************************************************************************************************************************************
  46+ 93A1              ;	21/01/23
  47+ 93A1              ;
  48+ 93A1              ; 	Comprueba_limite_horizontal.
  49+ 93A1              ;
  50+ 93A1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93A1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93A1              ;
  53+ 93A1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93A1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93A1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93A1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93A1
  58+ 93A1
  59+ 93A1
  60+ 93A1 3A B0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 93A4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 93A6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 93A8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 93AA 32 B0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 93AD 18 09            jr 6F
  66+ 93AF CB 5F        1 bit 3,a
  67+ 93B1 28 0A            jr z,2F
  68+ 93B3 E6 F7            and $f7
  69+ 93B5 32 B0 88         ld (Ctrl_0),a
  70+ 93B8 CD 0B 95     6 call Inicializacion
  71+ 93BB 18 5B            jr 5F
  72+ 93BD E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 93BE
  74+ 93BE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 93BE              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 93BE
  77+ 93BE EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 93BF 2A B2 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 93C2 CD 6D 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 93C5 67           	ld h,a
  81+ 93C6 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 93C7 CD 6D 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 93CA 67           	ld h,a
  84+ 93CB A7           	and a
  85+ 93CC ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 93CE 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 93CF 3A 94 88     	ld a,(Cuad_objeto)
  88+ 93D2 FE 02        	cp 2
  89+ 93D4 38 1E        	jr c,3F
  90+ 93D6 28 1C        	jr z,3F
  91+ 93D8 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 93D9 28 23            jr z,7F
  93+ 93DB 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 93DD 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 93DF E1           	pop hl
  96+ 93E0
  97+ 93E0              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 93E0              ; _para indicar con E="2" en caso necesario.
  99+ 93E0
 100+ 93E0 E5               push hl
 101+ 93E1 C5               push bc
 102+ 93E2 CD 6D 99     	call calcula_tercio
 103+ 93E5 FE 01        	cp 1
 104+ 93E7 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 93E9 CD 19 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 93EC 28 26            jr z,9F
 107+ 93EE 38 24            jr c,9F
 108+ 93F0 1E 00        11 ld e,0
 109+ 93F2 18 22            jr 8F
 110+ 93F4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 93F5 28 07        	jr z, 7F
 112+ 93F7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 93F9 1E 00         	ld e,0
 114+ 93FB E1           	pop hl
 115+ 93FC 18 04        	jr 4F
 116+ 93FE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9400 18 15            jr 10F
 118+ 9402
 119+ 9402              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9402              ; _para indicar con E="2" en caso necesario.
 121+ 9402
 122+ 9402 E5           4 push hl
 123+ 9403 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9404 CD 6D 99     	call calcula_tercio
 125+ 9407 FE 01        	cp 1
 126+ 9409 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 940B CD 19 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 940E 28 04            jr z,9F
 129+ 9410 30 02            jr nc,9F
 130+ 9412 18 02        	jr 8F
 131+ 9414 1E 02        9 ld e,2
 132+ 9416 C1           8 pop bc
 133+ 9417 E1           10 pop hl
 134+ 9418 C9           5 ret
 135+ 9419
 136+ 9419              ; --------------------
 137+ 9419              ;
 138+ 9419              ; 25/08/22
 139+ 9419
 140+ 9419 CD 6D 99     Comprueba_centro call calcula_tercio
 141+ 941C 67               ld h,a
 142+ 941D 08           	ex af,af
 143+ 941E FE 02        	cp 2
 144+ 9420 38 07        	jr c,1F
 145+ 9422 28 05        	jr z,1F
 146+ 9424 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9427 18 03        	jr 2F
 148+ 9429 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 942C 08           2 ex af,af
 150+ 942D A7               and a
 151+ 942E ED 42            sbc hl,bc
 152+ 9430 C9               ret
 153+ 9431
 154+ 9431              ; *********************************************************************************************************************************************************************************************
 155+ 9431              ;
 156+ 9431              ;   16/8/22
 157+ 9431              ;
 158+ 9431              ;	Comprueba_limite_vertical
 159+ 9431              ;
 160+ 9431              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9431              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9431              ;
 163+ 9431
 164+ 9431 2A 82 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9434 7D           	ld a,l
 166+ 9435 E6 1F        	and $1F
 167+ 9437 57           	ld d,a
 168+ 9438 3A B4 88     	ld a,(Limite_vertical)
 169+ 943B BA           	cp d 											; Límite - Posición.
 170+ 943C 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 943D 3A 94 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9440 CB 47        	bit 0,a
 173+ 9442 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9444
 175+ 9444              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9444
 177+ 9444 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9445 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9447
 180+ 9447              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9447              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9447
 183+ 9447 3A 86 88         ld a,(Coordenada_X)
 184+ 944A 16 0F            ld d,Centro_izquierda
 185+ 944C A7               and a
 186+ 944D 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 944E 28 1E            jr z,3F
 188+ 9450 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9452              ;                                                    ; _salimos sin modificar nada.
 190+ 9452 18 0E            jr 2F
 191+ 9454 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9455 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9457
 194+ 9457              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9457              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9457
 197+ 9457 3A 86 88         ld a,(Coordenada_X)
 198+ 945A 16 10            ld d,Centro_derecha
 199+ 945C A7               and a
 200+ 945D 92               sub d
 201+ 945E 28 0E            jr z,3F
 202+ 9460 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9462              ;                                                    ; _salimos sin modificar nada.
 204+ 9462 CB 43        2 bit 0,e
 205+ 9464 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9466 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9467 CD FB 94         call Modificaccionne
 208+ 946A C1           	pop bc
 209+ 946B CD 0B 95         call Inicializacion
 210+ 946E C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 946F
 212+ 946F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 946F
 214+ 946F C5           4 push bc
 215+ 9470 01 81 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9473 0A           	ld a,(bc)
 217+ 9474 3D           	dec a
 218+ 9475 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9476 7D           	ld a,l
 220+ 9477 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9478 CB 47        	bit 0,a
 222+ 947A 28 03        	jr z,5F
 223+ 947C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 947D 18 2E        	jr 7F
 225+ 947F
 226+ 947F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 947F
 228+ 947F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9480 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9481 3A B0 88     	ld a,(Ctrl_0)
 231+ 9484 CB 4F        	bit 1,a
 232+ 9486 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9488 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9489
 235+ 9489              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9489
 237+ 9489 1C               inc e
 238+ 948A 1D               dec e
 239+ 948B 20 07            jr nz,12F
 240+ 948D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 948E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 948F 22 82 88     	ld (Posicion_actual),hl
 243+ 9492 18 44        13 jr 9F
 244+ 9494 CB 43        12 bit 0,e
 245+ 9496 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9498              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9498 C1           	pop bc
 248+ 9499 18 D3        	jr 3B
 249+ 949B 80           14 add b
 250+ 949C 6F               ld l,a
 251+ 949D 22 82 88     	ld (Posicion_actual),hl
 252+ 94A0 CD FB 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 94A3 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 94A5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 94A7 32 B0 88         ld (Ctrl_0),a
 256+ 94AA F1           	pop af
 257+ 94AB 18 2B        	jr 9F
 258+ 94AD
 259+ 94AD              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 94AD
 261+ 94AD F5           7 push af
 262+ 94AE 3A B0 88     	ld a,(Ctrl_0)
 263+ 94B1 CB 47        	bit 0,a
 264+ 94B3 20 1D        	jr nz,8F
 265+ 94B5 F1           	pop af
 266+ 94B6
 267+ 94B6              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 94B6
 269+ 94B6 1C           	inc e
 270+ 94B7 1D               dec e
 271+ 94B8 20 07            jr nz,10F
 272+ 94BA 90           	sub b
 273+ 94BB 6F               ld l,a
 274+ 94BC 22 82 88     	ld (Posicion_actual),hl
 275+ 94BF 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 94C1              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 94C1 CB 43        10 bit 0,e
 278+ 94C3 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 94C5              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 94C5 C1           	pop bc
 281+ 94C6 18 A6        	jr 3B
 282+ 94C8 90           16 sub b
 283+ 94C9 6F               ld l,a
 284+ 94CA 22 82 88     	ld (Posicion_actual),hl
 285+ 94CD CD FB 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 94D0 18 06            jr 9F
 287+ 94D2 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 94D4 32 B0 88         ld (Ctrl_0),a
 289+ 94D7 F1           	pop af
 290+ 94D8 C1           9 pop bc
 291+ 94D9 1E 00        	ld e,0
 292+ 94DB CD 0B 95         call Inicializacion
 293+ 94DE F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 94DF 08           	ex af,af
 295+ 94E0 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 94E1 18 8B            jr 3B
 297+ 94E3
 298+ 94E3              ; --------------------
 299+ 94E3
 300+ 94E3 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 94E5 CD 69 96     1 call PreviousScan
 302+ 94E8 10 FB            djnz 1B
 303+ 94EA 22 82 88     	ld (Posicion_actual),hl
 304+ 94ED AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 94EE C9           	ret
 306+ 94EF
 307+ 94EF              ; --------------------
 308+ 94EF
 309+ 94EF 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 94F1 CD 5A 96     1 call NextScan
 311+ 94F4 10 FB            djnz 1B
 312+ 94F6 22 82 88     	ld (Posicion_actual),hl
 313+ 94F9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 94FA C9           	ret
 315+ 94FB
 316+ 94FB              ; --------------------
 317+ 94FB              ;
 318+ 94FB              ;	22/01/23
 319+ 94FB              ;
 320+ 94FB              ;	E="1". Hemos cambiado de cuadrante.
 321+ 94FB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 94FB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 94FB
 324+ 94FB
 325+ 94FB              Modificaccionne
 326+ 94FB
 327+ 94FB 3A 94 88     	ld a,(Cuad_objeto)
 328+ 94FE FE 02        	cp 2
 329+ 9500 CC E3 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9503 DC E3 94         call c,Modifica_Pos_actual
 331+ 9506 C8           	ret z
 332+ 9507 CD EF 94         call Modifica_Pos_actual2
 333+ 950A C9               ret
 334+ 950B
 335+ 950B              ; *************************************************************************************************************************************************************************************************
 336+ 950B              ;
 337+ 950B              ;	13/8/22
 338+ 950B              ;
 339+ 950B              ;	Inicializacion
 340+ 950B              ;
 341+ 950B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 950B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 950B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 950B              ;
 345+ 950B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 950B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 950B              ;	_ desaparece/aparece.
 348+ 950B
 349+ 950B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 950B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 950B              ;
 352+ 950B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 950B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 950B              ; 		   [E] ="0"
 355+ 950B
 356+ 950B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 950B
 358+ 950B CD 6D 99     Inicializacion call calcula_tercio
 359+ 950E 28 36        	jr z,primit
 360+ 9510 E6 02        	and 2
 361+ 9512 20 07        	jr nz,segmit
 362+ 9514 7D           	ld a,l
 363+ 9515 FE 7F        	cp $7f
 364+ 9517 38 2D        	jr c,primit
 365+ 9519 28 2B        	jr z,primit
 366+ 951B CD 78 95     segmit call column
 367+ 951E 38 13        	jr c,tercuad
 368+ 9520 3E 04        cuarcuad ld a,4
 369+ 9522 32 94 88     	ld (Cuad_objeto),a
 370+ 9525 21 20 48     	ld hl,$4820
 371+ 9528 22 B2 88     	ld (Limite_horizontal),hl
 372+ 952B 21 B4 88     	ld hl,Limite_vertical
 373+ 952E 36 0D        	ld (hl),$0d
 374+ 9530 08           	ex af,af
 375+ 9531 18 3C        	jr 1F
 376+ 9533              tercuad
 377+ 9533 3E 03        	ld a,3
 378+ 9535 32 94 88     	ld (Cuad_objeto),a
 379+ 9538 21 20 48     	ld hl,$4820
 380+ 953B 22 B2 88     	ld (Limite_horizontal),hl
 381+ 953E 21 B4 88     	ld hl,Limite_vertical
 382+ 9541 36 12        	ld (hl),$12
 383+ 9543 08           	ex af,af
 384+ 9544 18 29        	jr 1F
 385+ 9546 CD 78 95     primit call column
 386+ 9549 38 13        	jr c, primcuad
 387+ 954B              segcuad
 388+ 954B 3E 02        	ld a,2
 389+ 954D 32 94 88     	ld (Cuad_objeto),a
 390+ 9550 21 C0 4F     	ld hl,$4fc0
 391+ 9553 22 B2 88     	ld (Limite_horizontal),hl
 392+ 9556 21 B4 88     	ld hl,Limite_vertical
 393+ 9559 36 0D        	ld (hl),$0d
 394+ 955B 08           	ex af,af
 395+ 955C 18 11        	jr 1F
 396+ 955E              primcuad
 397+ 955E 3E 01        	ld a,1
 398+ 9560 32 94 88     	ld (Cuad_objeto),a
 399+ 9563 21 C0 4F     	ld hl,$4fc0
 400+ 9566 22 B2 88     	ld (Limite_horizontal),hl
 401+ 9569 21 B4 88     	ld hl,Limite_vertical
 402+ 956C 36 12        	ld (hl),$12
 403+ 956E 08           	ex af,af
 404+ 956F CD 05 9D     1 call Genera_coordenadas
 405+ 9572 21 B0 88     	ld hl,Ctrl_0
 406+ 9575 CB EE        	set 5,(hl)
 407+ 9577 C9           	ret
 408+ 9578
 409+ 9578              ; ------------------------------------------------------------------------------------------------------------------
 410+ 9578
 411+ 9578              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 9578              ;
 413+ 9578              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 9578
 415+ 9578 7D           column ld a,l
 416+ 9579 E6 1F        	and $1f
 417+ 957B FE 10         	cp $10
 418+ 957D C9            	ret
 419+ 957E
 420+ 957E              ; --------------------------------------------------------------------------------------------------------------------
 421+ 957E              ;
 422+ 957E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 957E              ;
 424+ 957E              ; 14/12/22
 425+ 957E              ;
 426+ 957E              ;	Modifica: A y BC.
 427+ 957E
 428+ 957E 3A 94 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 9581 E6 01        	and 1
 430+ 9583 28 17        	jr z,1F
 431+ 9585
 432+ 9585              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 9585
 434+ 9585 3A 86 88     	ld a,(Coordenada_X)
 435+ 9588 47           	ld b,a
 436+ 9589 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 958A 79           	ld a,c
 438+ 958B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 958C 38 08        	jr c,2F
 440+ 958E 47           	ld b,a
 441+ 958F 79           	ld a,c
 442+ 9590 90           	sub b
 443+ 9591 32 B1 88     	ld (Columnas),a
 444+ 9594 18 1B        	jr 4F
 445+ 9596 79           2 ld a,c
 446+ 9597 32 B1 88     	ld (Columnas),a
 447+ 959A 18 15        	jr 4F
 448+ 959C
 449+ 959C              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 959C
 451+ 959C 3A 86 88     1 ld a,(Coordenada_X)
 452+ 959F 81           	add c
 453+ 95A0 3D           	dec a
 454+ 95A1 D6 1F        	sub $1f
 455+ 95A3 38 08        	jr c,3F
 456+ 95A5 47           	ld b,a
 457+ 95A6 79           	ld a,c
 458+ 95A7 90           	sub b
 459+ 95A8 32 B1 88     	ld (Columnas),a
 460+ 95AB 18 04        	jr 4F
 461+ 95AD 79           3 ld a,c
 462+ 95AE 32 B1 88     	ld (Columnas),a
 463+ 95B1 D9           4 exx
 464+ 95B2 4F           	ld c,a
 465+ 95B3 D9           	exx
 466+ 95B4 C9            ret
 467+ 95B5
 468+ 95B5              ; --------------------------------------------------------------------------------------------------------------------
 469+ 95B5              ;
 470+ 95B5              ;   19/7/23
 471+ 95B5              ;
 472+ 95B5              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 95B5              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 95B5              ;
 475+ 95B5              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 95B5              ;			HL e IY Contienen (Puntero_objeto).
 477+ 95B5              ;
 478+ 95B5              ;	DESTRUYE: HL,B Y A.
 479+ 95B5
 480+ 95B5 3A 94 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 95B8 FE 02        	cp 2
 482+ 95BA 38 18        	jr c,1F
 483+ 95BC 28 16        	jr z,1F
 484+ 95BE E6 01        	and 1
 485+ 95C0 28 0D        	jr z,3F
 486+ 95C2
 487+ 95C2              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 95C2
 489+ 95C2 CD 08 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 95C5
 491+ 95C5 7D           9 ld a,l
 492+ 95C6 E6 1F        	and $1f
 493+ 95C8 28 2A        	jr z,7F
 494+ 95CA 2B           	dec hl
 495+ 95CB 10 F8        	djnz 9B
 496+ 95CD 18 25        	jr 7F
 497+ 95CF
 498+ 95CF              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 95CF
 500+ 95CF 2A 82 88     3 ld hl,(Posicion_actual)
 501+ 95D2 18 20        	jr 7F
 502+ 95D4
 503+ 95D4 28 14        1 jr z,2F
 504+ 95D6
 505+ 95D6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 95D6
 507+ 95D6 CD 08 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 95D9
 509+ 95D9 7D           4 ld a,l
 510+ 95DA E6 1F        	and $1f
 511+ 95DC 28 03        	jr z,6F
 512+ 95DE 2B           	dec hl
 513+ 95DF 10 F8        	djnz 4B
 514+ 95E1 06 0F        6 ld b,15
 515+ 95E3 CD 69 96     5 call PreviousScan
 516+ 95E6 10 FB        	djnz 5B
 517+ 95E8 18 0A        	jr 7F
 518+ 95EA
 519+ 95EA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 95EA
 521+ 95EA CD 08 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 95ED 06 0F        	ld b,15
 523+ 95EF CD 69 96     8 call PreviousScan
 524+ 95F2 10 FB        	djnz 8B
 525+ 95F4
 526+ 95F4 E5           7 push hl
 527+ 95F5 DD E1        	pop ix
 528+ 95F7
 529+ 95F7 2A 84 88     	ld hl,(Puntero_objeto)
 530+ 95FA E5           	push hl
 531+ 95FB FD E1        	pop iy
 532+ 95FD
 533+ 95FD              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 95FD
 535+ 95FD 3A B0 88     	ld a,(Ctrl_0)
 536+ 9600 CB 77        	bit 6,a
 537+ 9602 C8           	ret z
 538+ 9603
 539+ 9603              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9603              ; _ entidad / Amadeus´.
 541+ 9603
 542+ 9603 DD 22 AD 85  	ld (p.imp.amadeus),ix
 543+ 9607
 544+ 9607 C9           	ret
 545+ 9608
 546+ 9608              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9608              ;
 548+ 9608              ;	2/1/23
 549+ 9608              ;
 550+ 9608              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9608              ;
 552+ 9608              ;	Tras esta rutina tenemos:
 553+ 9608              ;
 554+ 9608              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9608              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9608              ;
 557+ 9608              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9608
 559+ 9608 2A 82 88     Operandos ld hl,(Posicion_actual)
 560+ 960B 3A B1 88     	ld a,(Columnas)
 561+ 960E 3D           	dec a
 562+ 960F 20 01        	jr nz,1F
 563+ 9611 3C           	inc a
 564+ 9612 47           1 ld b,a
 565+ 9613 C9           	ret
 566+ 9614
 567+ 9614              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9614              ;
 569+ 9614              ;	3/1/23
 570+ 9614              ;
 571+ 9614              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9614              ;
 573+ 9614              ;	Destruye: A,B,HL y DE.
 574+ 9614
 575+ 9614              Define_rutina_de_impresion
 576+ 9614
 577+ 9614 3A 81 88     	ld a,(Columns)
 578+ 9617 47           	ld b,a
 579+ 9618 3A B1 88     	ld a,(Columnas)
 580+ 961B B8           	cp b
 581+ 961C 20 0D        	jr nz,2f
 582+ 961E
 583+ 961E              ;	La entidad se imprime entera.
 584+ 961E
 585+ 961E 21 3D 97     	ld hl, Indice_entidades_completas
 586+ 9621 E6 01        	and 1
 587+ 9623 28 02        	jr z,1F
 588+ 9625
 589+ 9625 23           	inc hl
 590+ 9626 23           	inc hl
 591+ 9627
 592+ 9627 CD EE 8C     1 call Extrae_address
 593+ 962A C9           	ret		;	ret
 594+ 962B
 595+ 962B              ;	La entidad no se imprime entera en pantalla.
 596+ 962B
 597+ 962B 3A 94 88     2 ld a,(Cuad_objeto)
 598+ 962E E6 01        	and 1
 599+ 9630 28 17        	jr z,3F
 600+ 9632
 601+ 9632              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 9632
 603+ 9632 21 41 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9635 3A 81 88     4 ld a,(Columns)
 605+ 9638 E6 01        	and 1
 606+ 963A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 963C
 608+ 963C 23           	inc hl
 609+ 963D 23           	inc hl
 610+ 963E
 611+ 963E 3A B1 88     	ld a,(Columnas)
 612+ 9641 E6 01        	and 1
 613+ 9643 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9645
 615+ 9645 23           	inc hl
 616+ 9646 23           	inc hl
 617+ 9647
 618+ 9647 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9649
 620+ 9649 21 47 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 964C 18 E7        	jr 4B
 622+ 964E
 623+ 964E              ; --------------------------------------------------------------------------------------------------------------------
 624+ 964E              ;
 625+ 964E              ;	Prepara_draw
 626+ 964E              ;
 627+ 964E              ;	Es una rutina de carga.
 628+ 964E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 964E              ;
 630+ 964E              ;	FUNCIONAMIENTO:
 631+ 964E              ;
 632+ 964E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 964E              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 964E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 964E              ;
 636+ 964E              ;	DESTRUYE:
 637+ 964E              ;
 638+ 964E              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 964E
 640+ 964E 21 80 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 9651 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 9652 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 9653 4E           	ld c,(hl)
 644+ 9654 2A 82 88     	ld hl,(Posicion_actual)
 645+ 9657 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 9659 C9           	ret
 647+ 965A
 648+ 965A              ;----------------------------------------------------------------------------------------------------------------
 649+ 965A              ;
 650+ 965A              ;	5/08/22
 651+ 965A              ;
 652+ 965A              ;   NextScan.
 653+ 965A              ;
 654+ 965A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 965A              ;
 656+ 965A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 965A              ;
 658+ 965A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 965A              ;
 660+ 965A              ;       DESTRUIDOS: AF y HL !!!
 661+ 965A              ;
 662+ 965A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 965A              ;
 664+ 965A
 665+ 965A 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 965B 7C               ld a,h
 667+ 965C E6 07            and 7
 668+ 965E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 965F
 670+ 965F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 9660 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 9662 6F               ld l,a
 673+ 9663 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 9664
 675+ 9664 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 9665 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 9667 67               ld h,a
 678+ 9668 C9               ret
 679+ 9669
 680+ 9669              ;----------------------------------------------------------------------------------------------------------------
 681+ 9669              ;
 682+ 9669              ;	5/08/22
 683+ 9669              ;
 684+ 9669              ;   PreviousScan.
 685+ 9669              ;
 686+ 9669              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 9669              ;
 688+ 9669              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 9669              ;
 690+ 9669              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 9669              ;
 692+ 9669              ;       DESTRUIDOS: AF y HL !!!
 693+ 9669              ;
 694+ 9669              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 9669              ;
 696+ 9669
 697+ 9669 7C           PreviousScan ld a,h
 698+ 966A 25               dec h               ; Dec H.
 699+ 966B E6 07            and 7
 700+ 966D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 966E
 702+ 966E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 966F D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 9671 6F               ld l,a
 705+ 9672 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 9673
 707+ 9673 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 9674 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 9676 67               ld h,a
 710+ 9677 C9               ret
 711+ 9678
 712+ 9678              ; -----------------------------------------------------------------------------------
 713+ 9678              ;
 714+ 9678              ;	31/7/23
 715+ 9678              ;
 716+ 9678              ;	Rutina principal de pintado de entidades.
 717+ 9678              ;	Extrae la foto del frame, (entidades).
 718+ 9678
 719+ 9678              Extrae_foto_entidades
 720+ 9678
 721+ 9678 21 01 70     	ld hl,Album_de_fotos+1
 722+ 967B 7E           	ld a,(hl)
 723+ 967C A7           	and a
 724+ 967D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 967E
 726+ 967E              ;	No hay datos, (entidades para pintar en este frame).
 727+ 967E
 728+ 967E 3A D7 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 9681 A7           	and a
 730+ 9682 C8           	ret z
 731+ 9683
 732+ 9683              ; -----------------------------------
 733+ 9683
 734+ 9683 ED 73 DC 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9687 31 00 70     	ld sp,Album_de_fotos
 736+ 968A
 737+ 968A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 968C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 968D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 968E
 741+ 968E ED 73 DE 88  	ld (Stack_2),sp
 742+ 9692 ED 7B DC 88  	ld sp,(Stack)
 743+ 9696
 744+ 9696              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9696
 746+ 9696 3E CD        	ld a,$cd
 747+ 9698 32 A0 96     	ld (Imprime),a
 748+ 969B EB           	ex de,hl
 749+ 969C 22 A1 96     	ld (Imprime+1),hl
 750+ 969F EB           	ex de,hl
 751+ 96A0
 752+ 96A0              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96A0
 754+ 96A0 00 00 00     Imprime db 0,0,0
 755+ 96A3
 756+ 96A3 ED 73 DC 88  	ld (Stack),sp
 757+ 96A7
 758+ 96A7 3A D7 88     	ld a,(Numero_de_malotes)
 759+ 96AA 3D           	dec a
 760+ 96AB 28 09        	jr z,1F
 761+ 96AD 32 D7 88      	ld (Numero_de_malotes),a
 762+ 96B0
 763+ 96B0 ED 7B DE 88  	ld sp,(Stack_2)
 764+ 96B4 18 D4        	jr 2B
 765+ 96B6
 766+ 96B6 AF           1 xor a
 767+ 96B7 32 DE 88     	ld (Stack_2),a
 768+ 96BA
 769+ 96BA C9           	ret
 770+ 96BB
 771+ 96BB              ; -----------------------------------------------------------------------------------
 772+ 96BB              ;
 773+ 96BB              ;	28/2/23
 774+ 96BB              ;
 775+ 96BB              ;	Pinta los disparos generados.
 776+ 96BB
 777+ 96BB              Extrae_foto_disparos
 778+ 96BB
 779+ 96BB 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 96BE 7E               ld a,(hl)
 781+ 96BF A7               and a
 782+ 96C0 C8               ret z
 783+ 96C1
 784+ 96C1 3A EC 88     	ld a,(Numero_de_disparotes)
 785+ 96C4 A7           	and a
 786+ 96C5 C8           	ret z
 787+ 96C6 ED 73 DC 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 96CA 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 96CD
 790+ 96CD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 96CF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 96D0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 96D1
 794+ 96D1 ED 73 DE 88  	ld (Stack_2),sp
 795+ 96D5 ED 7B DC 88  	ld sp,(Stack)
 796+ 96D9
 797+ 96D9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 96D9
 799+ 96D9 3E CD        	ld a,$cd
 800+ 96DB 32 E3 96     	ld (Imprime2),a
 801+ 96DE EB           	ex de,hl
 802+ 96DF 22 E4 96     	ld (Imprime2+1),hl
 803+ 96E2 EB           	ex de,hl
 804+ 96E3
 805+ 96E3              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 96E3
 807+ 96E3 00 00 00     Imprime2 db 0,0,0
 808+ 96E6
 809+ 96E6 3A EC 88     	ld a,(Numero_de_disparotes)
 810+ 96E9 3D           	dec a
 811+ 96EA 28 09        	jr z,1F
 812+ 96EC 32 EC 88      	ld (Numero_de_disparotes),a
 813+ 96EF
 814+ 96EF ED 7B DE 88  	ld sp,(Stack_2)
 815+ 96F3 18 D8        	jr 2B
 816+ 96F5
 817+ 96F5 AF           1 xor a
 818+ 96F6 32 DE 88     	ld (Stack_2),a
 819+ 96F9 C9           	ret
 820+ 96FA
 821+ 96FA              ; -----------------------------------------------------------------------------------
 822+ 96FA              ;
 823+ 96FA              ;	4/9/23
 824+ 96FA              ;
 825+ 96FA              ;	Rutina principal de pintado de Amadeus.
 826+ 96FA              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 96FA
 828+ 96FA 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 96FD 7E           	ld a,(hl)
 830+ 96FE A7           	and a
 831+ 96FF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 9700
 833+ 9700 3A D7 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9703 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9704 C8           	ret z
 836+ 9705
 837+ 9705              ; -----------------------------------
 838+ 9705
 839+ 9705 ED 73 DC 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9709 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 970C
 842+ 970C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 970E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 970F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 9710
 846+ 9710 ED 73 DE 88  	ld (Stack_2),sp
 847+ 9714 ED 7B DC 88  	ld sp,(Stack)
 848+ 9718
 849+ 9718              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9718
 851+ 9718 3E CD        	ld a,$cd
 852+ 971A 32 22 97     	ld (Imprime_Amadeus),a
 853+ 971D EB           	ex de,hl
 854+ 971E 22 23 97     	ld (Imprime_Amadeus+1),hl
 855+ 9721 EB           	ex de,hl
 856+ 9722
 857+ 9722              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9722
 859+ 9722 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9725
 861+ 9725 ED 73 DC 88  	ld (Stack),sp
 862+ 9729
 863+ 9729 3A D7 88     	ld a,(Numero_de_malotes)
 864+ 972C 3D           	dec a
 865+ 972D 28 09        	jr z,1F
 866+ 972F 32 D7 88      	ld (Numero_de_malotes),a
 867+ 9732
 868+ 9732 ED 7B DE 88  	ld sp,(Stack_2)
 869+ 9736 18 D4        	jr 2B
 870+ 9738
 871+ 9738 AF           1 xor a
 872+ 9739 32 DE 88     	ld (Stack_2),a
 873+ 973C
 874+ 973C C9           	ret
# file closed: Draw_XOR.asm
1914  973D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 973D              ;   índices de Rutinas de impresión.
   2+ 973D
   3+ 973D 4D 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 973F 7A 97            defw Pinta_Amadeus_3x2
   5+ 9741
   6+ 9741 D0 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9743 70 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9745 24 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9747
  10+ 9747 FA 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9749 FE 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 974B B2 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 974D
  14+ 974D
  15+ 974D              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 974D              ;
  17+ 974D              ;   12/12/22
  18+ 974D              ;
  19+ 974D              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 974D              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 974D              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 974D              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 974D              ;
  24+ 974D              ;   Modifica: DE y HL.
  25+ 974D
  26+ 974D ED 73 DC 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9751 FD F9        	ld sp,iy
  28+ 9753 06 10            ld b,16
  29+ 9755 D1           1 pop de
  30+ 9756 7B               ld a,e
  31+ 9757 AE               xor (hl)
  32+ 9758 77           	ld (hl),a
  33+ 9759 23           	inc hl
  34+ 975A 7A               ld a,d
  35+ 975B AE               xor (hl)
  36+ 975C 77           	ld (hl),a
  37+ 975D 2B           	dec hl
  38+ 975E 24           	inc h
  39+ 975F 7C               ld a,h
  40+ 9760 E6 07            and 7
  41+ 9762 20 0A            jr nz,2F
  42+ 9764 7D               ld a,l
  43+ 9765 C6 20            add a,$20
  44+ 9767 6F               ld l,a
  45+ 9768 38 04            jr c,2F
  46+ 976A 7C               ld a,h
  47+ 976B D6 08            sub 8
  48+ 976D 67               ld h,a
  49+ 976E 7C           2 ld a,h
  50+ 976F FE 58            cp $58
  51+ 9771 28 02            jr z,3F
  52+ 9773 10 E0            djnz 1B
  53+ 9775 ED 7B DC 88  3 ld sp,(Stack)
  54+ 9779 C9           	ret
  55+ 977A
  56+ 977A ED 73 DC 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 977E FD F9        	ld sp,iy
  58+ 9780 06 08            ld b,8
  59+ 9782 D1           1 pop de
  60+ 9783 7B               ld a,e
  61+ 9784 AE               xor (hl)
  62+ 9785 77           	ld (hl),a
  63+ 9786 23           	inc hl
  64+ 9787 7A               ld a,d
  65+ 9788 AE               xor (hl)
  66+ 9789 77           	ld (hl),a
  67+ 978A 23           	inc hl
  68+ 978B D1           	pop de
  69+ 978C 7B               ld a,e
  70+ 978D AE               xor (hl)
  71+ 978E 77           	ld (hl),a
  72+ 978F 2B           	dec hl
  73+ 9790 2B           	dec hl
  74+ 9791 24           	inc h
  75+ 9792 7C               ld a,h
  76+ 9793 E6 07            and 7
  77+ 9795 20 0A            jr nz,2F
  78+ 9797 7D               ld a,l
  79+ 9798 C6 20            add a,$20
  80+ 979A 6F               ld l,a
  81+ 979B 38 04            jr c,2F
  82+ 979D 7C               ld a,h
  83+ 979E D6 08            sub 8
  84+ 97A0 67               ld h,a
  85+ 97A1 7C           2 ld a,h
  86+ 97A2 FE 58            cp $58
  87+ 97A4 28 25            jr z,4F
  88+ 97A6 7A               ld a,d
  89+ 97A7 AE               xor (hl)
  90+ 97A8 77               ld (hl),a
  91+ 97A9 D1           	pop de
  92+ 97AA 23           	inc hl
  93+ 97AB 7B               ld a,e
  94+ 97AC AE               xor (hl)
  95+ 97AD 77           	ld (hl),a
  96+ 97AE 23           	inc hl
  97+ 97AF 7A               ld a,d
  98+ 97B0 AE               xor (hl)
  99+ 97B1 77           	ld (hl),a
 100+ 97B2 2B           	dec hl
 101+ 97B3 2B           	dec hl
 102+ 97B4 24           	inc h
 103+ 97B5 7C               ld a,h
 104+ 97B6 E6 07            and 7
 105+ 97B8 20 0A            jr nz,3F
 106+ 97BA 7D               ld a,l
 107+ 97BB C6 20            add a,$20
 108+ 97BD 6F               ld l,a
 109+ 97BE 38 04            jr c,3F
 110+ 97C0 7C               ld a,h
 111+ 97C1 D6 08            sub 8
 112+ 97C3 67               ld h,a
 113+ 97C4 7C           3 ld a,h
 114+ 97C5 FE 58            cp $58
 115+ 97C7 28 02            jr z,4F
 116+ 97C9 10 B7            djnz 1B
 117+ 97CB ED 7B DC 88  4 ld sp,(Stack)
 118+ 97CF C9           	ret
 119+ 97D0
 120+ 97D0              ; ---------------------------------------------------
 121+ 97D0
 122+ 97D0 ED 73 DC 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97D4 FD F9        	ld sp,iy
 124+ 97D6
 125+ 97D6              ; >>>
 126+ 97D6
 127+ 97D6 06 10            ld b,16
 128+ 97D8 D1           1 pop de
 129+ 97D9 7A           	ld a,d
 130+ 97DA AE           	xor (hl)
 131+ 97DB 77           	ld (hl),a
 132+ 97DC 24           	inc h
 133+ 97DD 7C               ld a,h
 134+ 97DE E6 07            and 7
 135+ 97E0 20 0C            jr nz,2F
 136+ 97E2 7D               ld a,l
 137+ 97E3 C6 20            add a,$20
 138+ 97E5 6F               ld l,a
 139+ 97E6 38 06            jr c,2F
 140+ 97E8 7C               ld a,h
 141+ 97E9 D6 08            sub 8
 142+ 97EB 67               ld h,a
 143+ 97EC 18 00            jr 2F
 144+ 97EE 7C           2 ld a,h
 145+ 97EF FE 58            cp $58
 146+ 97F1 28 02            jr z,3F
 147+ 97F3 10 E3            djnz 1B
 148+ 97F5 ED 7B DC 88  3 ld sp,(Stack)
 149+ 97F9 C9           	ret
 150+ 97FA
 151+ 97FA ED 73 DC 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97FE FD F9        	ld sp,iy
 153+ 9800
 154+ 9800              ; >>>
 155+ 9800
 156+ 9800 06 10            ld b,16
 157+ 9802 D1           1 pop de
 158+ 9803 7B           	ld a,e
 159+ 9804 AE           	xor (hl)
 160+ 9805 77           	ld (hl),a
 161+ 9806 24           	inc h
 162+ 9807 7C               ld a,h
 163+ 9808 E6 07            and 7
 164+ 980A 20 0C            jr nz,2F
 165+ 980C 7D               ld a,l
 166+ 980D C6 20            add a,$20
 167+ 980F 6F               ld l,a
 168+ 9810 38 06            jr c,2F
 169+ 9812 7C               ld a,h
 170+ 9813 D6 08            sub 8
 171+ 9815 67               ld h,a
 172+ 9816 18 00            jr 2F
 173+ 9818 7C           2 ld a,h
 174+ 9819 FE 58            cp $58
 175+ 981B 28 02            jr z,3F
 176+ 981D 10 E3            djnz 1B
 177+ 981F ED 7B DC 88  3 ld sp,(Stack)
 178+ 9823 C9           	ret
 179+ 9824
 180+ 9824              ; ---------------------------------------------------
 181+ 9824
 182+ 9824 ED 73 DC 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9828 FD F9        	ld sp,iy
 184+ 982A 06 08            ld b,8
 185+ 982C D1           1 pop de
 186+ 982D 7A           	ld a,d
 187+ 982E AE           	xor (hl)
 188+ 982F 77           	ld (hl),a
 189+ 9830 23           	inc hl
 190+ 9831 D1           	pop de
 191+ 9832 7B           	ld a,e
 192+ 9833 AE           	xor (hl)
 193+ 9834 77           	ld (hl),a
 194+ 9835 2B           	dec hl
 195+ 9836 24            	inc h
 196+ 9837 7C               ld a,h
 197+ 9838 E6 07            and 7
 198+ 983A 20 0A            jr nz,2F
 199+ 983C 7D               ld a,l
 200+ 983D C6 20            add a,$20
 201+ 983F 6F               ld l,a
 202+ 9840 38 04            jr c,2F
 203+ 9842 7C               ld a,h
 204+ 9843 D6 08            sub 8
 205+ 9845 67               ld h,a
 206+ 9846 7C           2 ld a,h
 207+ 9847 FE 58            cp $58
 208+ 9849 28 20            jr z,4F
 209+ 984B D1               pop de
 210+ 984C 7B           	ld a,e
 211+ 984D AE           	xor (hl)
 212+ 984E 77           	ld (hl),a
 213+ 984F 23           	inc hl
 214+ 9850 7A           	ld a,d
 215+ 9851 AE           	xor (hl)
 216+ 9852 77           	ld (hl),a
 217+ 9853 2B           	dec hl
 218+ 9854 24           	inc h
 219+ 9855 7C               ld a,h
 220+ 9856 E6 07            and 7
 221+ 9858 20 0A            jr nz,3F
 222+ 985A 7D               ld a,l
 223+ 985B C6 20            add a,$20
 224+ 985D 6F               ld l,a
 225+ 985E 38 04            jr c,3F
 226+ 9860 7C               ld a,h
 227+ 9861 D6 08            sub 8
 228+ 9863 67               ld h,a
 229+ 9864 7C           3 ld a,h
 230+ 9865 FE 58            cp $58
 231+ 9867 28 02            jr z,4F
 232+ 9869 10 C1            djnz 1B
 233+ 986B ED 7B DC 88  4 ld sp,(Stack)
 234+ 986F C9           	ret
 235+ 9870
 236+ 9870 ED 73 DC 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9874 FD F9        	ld sp,iy
 238+ 9876 06 08            ld b,8
 239+ 9878 D1           1 pop de
 240+ 9879 D1           	pop de
 241+ 987A 7B           	ld a,e
 242+ 987B AE           	xor (hl)
 243+ 987C 77           	ld (hl),a
 244+ 987D 24            	inc h
 245+ 987E 7C               ld a,h
 246+ 987F E6 07            and 7
 247+ 9881 20 0A            jr nz,2F
 248+ 9883 7D               ld a,l
 249+ 9884 C6 20            add a,$20
 250+ 9886 6F               ld l,a
 251+ 9887 38 04            jr c,2F
 252+ 9889 7C               ld a,h
 253+ 988A D6 08            sub 8
 254+ 988C 67               ld h,a
 255+ 988D 7C           2 ld a,h
 256+ 988E FE 58            cp $58
 257+ 9890 28 1B            jr z,4F
 258+ 9892 D1               pop de
 259+ 9893 7A           	ld a,d
 260+ 9894 AE           	xor (hl)
 261+ 9895 77           	ld (hl),a
 262+ 9896 24           	inc h
 263+ 9897 7C               ld a,h
 264+ 9898 E6 07            and 7
 265+ 989A 20 0A            jr nz,3F
 266+ 989C 7D               ld a,l
 267+ 989D C6 20            add a,$20
 268+ 989F 6F               ld l,a
 269+ 98A0 38 04            jr c,3F
 270+ 98A2 7C               ld a,h
 271+ 98A3 D6 08            sub 8
 272+ 98A5 67               ld h,a
 273+ 98A6 7C           3 ld a,h
 274+ 98A7 FE 58            cp $58
 275+ 98A9 28 02            jr z,4F
 276+ 98AB 10 CB            djnz 1B
 277+ 98AD ED 7B DC 88  4 ld sp,(Stack)
 278+ 98B1 C9           	ret
 279+ 98B2
 280+ 98B2 ED 73 DC 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98B6 FD F9        	ld sp,iy
 282+ 98B8 06 08            ld b,8
 283+ 98BA D1           1 pop de
 284+ 98BB 7B           	ld a,e
 285+ 98BC AE           	xor (hl)
 286+ 98BD 77           	ld (hl),a
 287+ 98BE 23           	inc hl
 288+ 98BF 7A           	ld a,d
 289+ 98C0 AE           	xor (hl)
 290+ 98C1 77           	ld (hl),a
 291+ 98C2 2B           	dec hl
 292+ 98C3 24             	inc h
 293+ 98C4 7C               ld a,h
 294+ 98C5 E6 07            and 7
 295+ 98C7 20 0A            jr nz,2F
 296+ 98C9 7D               ld a,l
 297+ 98CA C6 20            add a,$20
 298+ 98CC 6F               ld l,a
 299+ 98CD 38 04            jr c,2F
 300+ 98CF 7C               ld a,h
 301+ 98D0 D6 08            sub 8
 302+ 98D2 67               ld h,a
 303+ 98D3 7C           2 ld a,h
 304+ 98D4 FE 58            cp $58
 305+ 98D6 28 21            jr z,4F
 306+ 98D8 D1               pop de
 307+ 98D9 7A           	ld a,d
 308+ 98DA AE           	xor (hl)
 309+ 98DB 77           	ld (hl),a
 310+ 98DC 23           	inc hl
 311+ 98DD D1               pop de
 312+ 98DE 7B           	ld a,e
 313+ 98DF AE           	xor (hl)
 314+ 98E0 77           	ld (hl),a
 315+ 98E1 2B           	dec hl
 316+ 98E2 24           	inc h
 317+ 98E3 7C               ld a,h
 318+ 98E4 E6 07            and 7
 319+ 98E6 20 0A            jr nz,3F
 320+ 98E8 7D               ld a,l
 321+ 98E9 C6 20            add a,$20
 322+ 98EB 6F               ld l,a
 323+ 98EC 38 04            jr c,3F
 324+ 98EE 7C               ld a,h
 325+ 98EF D6 08            sub 8
 326+ 98F1 67               ld h,a
 327+ 98F2 7C           3 ld a,h
 328+ 98F3 FE 58            cp $58
 329+ 98F5 28 02            jr z,4F
 330+ 98F7 10 C1            djnz 1B
 331+ 98F9 ED 7B DC 88  4 ld sp,(Stack)
 332+ 98FD C9           	ret
 333+ 98FE
 334+ 98FE ED 73 DC 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9902 FD F9        	ld sp,iy
 336+ 9904 06 08            ld b,8
 337+ 9906 D1           1 pop de
 338+ 9907 7B           	ld a,e
 339+ 9908 AE           	xor (hl)
 340+ 9909 77           	ld (hl),a
 341+ 990A 24            	inc h
 342+ 990B 7C               ld a,h
 343+ 990C E6 07            and 7
 344+ 990E 20 0A            jr nz,2F
 345+ 9910 7D               ld a,l
 346+ 9911 C6 20            add a,$20
 347+ 9913 6F               ld l,a
 348+ 9914 38 04            jr c,2F
 349+ 9916 7C               ld a,h
 350+ 9917 D6 08            sub 8
 351+ 9919 67               ld h,a
 352+ 991A 7C           2 ld a,h
 353+ 991B FE 58            cp $58
 354+ 991D 28 1C            jr z,4F
 355+ 991F D1               pop de
 356+ 9920 7A           	ld a,d
 357+ 9921 AE           	xor (hl)
 358+ 9922 77           	ld (hl),a
 359+ 9923 24           	inc h
 360+ 9924 7C               ld a,h
 361+ 9925 E6 07            and 7
 362+ 9927 20 0A            jr nz,3F
 363+ 9929 7D               ld a,l
 364+ 992A C6 20            add a,$20
 365+ 992C 6F               ld l,a
 366+ 992D 38 04            jr c,3F
 367+ 992F 7C               ld a,h
 368+ 9930 D6 08            sub 8
 369+ 9932 67               ld h,a
 370+ 9933 7C           3 ld a,h
 371+ 9934 FE 58            cp $58
 372+ 9936 28 03            jr z,4F
 373+ 9938 D1               pop de
 374+ 9939 10 CB            djnz 1B
 375+ 993B ED 7B DC 88  4 ld sp,(Stack)
 376+ 993F C9           	ret
 377+ 9940
 378+ 9940              ; ---------------------------------------------------
 379+ 9940              ;
 380+ 9940              ;   27/02/23
 381+ 9940              ;
 382+ 9940              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9940              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9940              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9940
 386+ 9940 ED 73 DC 88  Pinta_Disparo ld (Stack),sp
 387+ 9944 FD F9            ld sp,iy
 388+ 9946 06 03            ld b,3
 389+ 9948 D1           1 pop de
 390+ 9949 7B               ld a,e
 391+ 994A AE               xor (hl)
 392+ 994B 77               ld (hl),a
 393+ 994C 23               inc hl
 394+ 994D 7A               ld a,d
 395+ 994E AE               xor (hl)
 396+ 994F 77               ld (hl),a
 397+ 9950 2B               dec hl
 398+ 9951
 399+ 9951 24               inc h
 400+ 9952 7C               ld a,h
 401+ 9953 E6 07            and 7
 402+ 9955 20 0A            jr nz,2F
 403+ 9957 7D               ld a,l
 404+ 9958 C6 20            add a,$20
 405+ 995A 6F               ld l,a
 406+ 995B 38 04            jr c,2F
 407+ 995D 7C               ld a,h
 408+ 995E D6 08            sub 8
 409+ 9960 67               ld h,a
 410+ 9961 7C           2 ld a,h
 411+ 9962 FE 58            cp $58
 412+ 9964 28 02            jr z,3F
 413+ 9966
 414+ 9966 10 E0            djnz 1B
 415+ 9968 ED 7B DC 88  3 ld sp,(Stack)
 416+ 996C C9               ret
 417+ 996D
# file closed: Rutinas_de_impresion_sprites.asm
1915  996D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 996D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 996D              ;
   3+ 996D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 996D              ;
   5+ 996D              ; *****************************************************************************************************************************************************************************************
   6+ 996D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 996D
   8+ 996D 7C           calcula_tercio ld a,h
   9+ 996E E6 18        	and $18
  10+ 9970 CB 2F        	sra a
  11+ 9972 CB 2F        	sra a
  12+ 9974 CB 2F        	sra a
  13+ 9976 C9           	ret
  14+ 9977
# file closed: calcula_tercio.asm
1916  9977              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9977              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9977              ;
   3+ 9977              ;
   4+ 9977              ;	CLS.
   5+ 9977              ;
   6+ 9977              ;	Limpia la pantalla y define sus atributos.
   7+ 9977              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9977              ;
   9+ 9977              ;	COLORES: 0 ..... NEGRO
  10+ 9977              ;    		 1 ..... AZUL
  11+ 9977              ; 			 2 ..... ROJO
  12+ 9977              ;			 3 ..... MAGENTA
  13+ 9977              ; 			 4 ..... VERDE
  14+ 9977              ; 			 5 ..... CIAN
  15+ 9977              ;			 6 ..... AMARILLO
  16+ 9977              ; 			 7 ..... BLANCO
  17+ 9977              ;
  18+ 9977              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9977              ;
  20+ 9977              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9977
  22+ 9977
  23+ 9977 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 997A 11 01 40     	LD DE,$4001
  25+ 997D 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9980 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9982 ED B0        	LDIR
  28+ 9984 01 FF 02     	LD BC,767
  29+ 9987 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9988 ED B0        	LDIR
  31+ 998A C9           	ret
  32+ 998B
# file closed: Cls.asm
1917  998B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 998B              ; ******************************************************************************************************************************************************************************************
   2+ 998B              ;
   3+ 998B              ;   20/05/23
   4+ 998B              ;
   5+ 998B              ;	Recompone_posicion_inicio
   6+ 998B              ;
   7+ 998B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 998B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 998B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 998B              ;	_ a una u otra rutina.
  11+ 998B
  12+ 998B              Recompone_posicion_inicio
  13+ 998B
  14+ 998B 2A 92 88     	ld hl,(Posicion_inicio)
  15+ 998E 7D           	ld a,l
  16+ 998F E6 1F        	and $1f
  17+ 9991 28 16        	jr z,1F
  18+ 9993
  19+ 9993 FE 1F        	cp $1f
  20+ 9995 28 0D        	jr z,3F
  21+ 9997
  22+ 9997 21 B5 88     	ld hl,Ctrl_2
  23+ 999A CB C6        	set 0,(hl)
  24+ 999C 2A 84 88     	ld hl,(Puntero_objeto)
  25+ 999F 22 CC 88     	ld (Repone_puntero_objeto),hl
  26+ 99A2 18 08        	jr 2F
  27+ 99A4
  28+ 99A4 CD 52 9B     3 call Mov_left
  29+ 99A7 18 03        	jr 2F
  30+ 99A9
  31+ 99A9 CD 2F 9A     1 call Mov_right
  32+ 99AC 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99AF 22 84 88     	ld (Puntero_objeto),hl
  34+ 99B2 C9           	ret
  35+ 99B3
  36+ 99B3              ; ******************************************************************************************************************************************************************************************
  37+ 99B3              ;
  38+ 99B3              ;   27/05/23
  39+ 99B3              ;
  40+ 99B3              ;	Mov_down
  41+ 99B3              ;
  42+ 99B3              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99B3              ;
  44+ 99B3              ;
  45+ 99B3              Mov_down
  46+ 99B3
  47+ 99B3 CD 1D 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99B6              ;																	; _ repone (Puntero_objeto).
  49+ 99B6 21 B0 88     	ld hl,Ctrl_0
  50+ 99B9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99BB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99BB              ; 																	; _ en el caso de que no lo haya.
  53+ 99BB 3A 98 88     	ld a,(Vel_down)
  54+ 99BE 47           	ld b,a
  55+ 99BF 2A 82 88         ld hl,(Posicion_actual)
  56+ 99C2 CD 6D 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99C5 E6 02        	and 2
  58+ 99C7 28 17        	jr z,1F
  59+ 99C9
  60+ 99C9              ; Nos encontramos en el último tercio de pantalla.
  61+ 99C9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99C9
  63+ 99C9 7C           	ld a,h
  64+ 99CA FE 57        	cp $57
  65+ 99CC 20 12        	jr nz,1F
  66+ 99CE
  67+ 99CE 7D           	ld a,l
  68+ 99CF C6 20        	add $20
  69+ 99D1 30 0D        	jr nc,1F
  70+ 99D3
  71+ 99D3              ; ------------------------------
  72+ 99D3              ;
  73+ 99D3              ;	12/01/24
  74+ 99D3
  75+ 99D3              ;	call Reaparece_arriba
  76+ 99D3 CD DF 9C     	call Reinicio
  77+ 99D6
  78+ 99D6              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 99D6
  80+ 99D6 3A EA 88     	ld a,(Ctrl_3)
  81+ 99D9 CB CF        	set 1,a
  82+ 99DB 32 EA 88     	ld (Ctrl_3),a
  83+ 99DE
  84+ 99DE 18 08        	jr 3F
  85+ 99E0              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  86+ 99E0              ;															; _a la siguiente entidad como "Entidad_guía".
  87+ 99E0              ; ------------------------------
  88+ 99E0
  89+ 99E0 CD 5A 96     1 call NextScan
  90+ 99E3 22 82 88     	ld (Posicion_actual),hl
  91+ 99E6 10 DA            djnz 2B
  92+ 99E8 CD 05 9D     3 call Genera_coordenadas
  93+ 99EB C9           	ret
  94+ 99EC
  95+ 99EC              ; ******************************************************************************************************************************************************************************************
  96+ 99EC              ;
  97+ 99EC              ;   27/05/23
  98+ 99EC              ;
  99+ 99EC              ;	Mov_up
 100+ 99EC              ;
 101+ 99EC              ; 	Mueve el Sprite hacia arriba.
 102+ 99EC              ;
 103+ 99EC              ;
 104+ 99EC              Mov_up
 105+ 99EC
 106+ 99EC CD 1D 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 107+ 99EF              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 108+ 99EF 21 B0 88     	ld hl,Ctrl_0
 109+ 99F2 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 110+ 99F4              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 111+ 99F4              ; 																		; _ en el caso de que no lo haya.
 112+ 99F4 3A 97 88     	ld a,(Vel_up)
 113+ 99F7 47           	ld b,a
 114+ 99F8 2A 82 88     	ld hl,(Posicion_actual)
 115+ 99FB CD 6D 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 116+ 99FE A7           	and a
 117+ 99FF 20 10        	jr nz,1F
 118+ 9A01
 119+ 9A01              ; Nos encontramos en el 1er tercio de pantalla.
 120+ 9A01              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 121+ 9A01
 122+ 9A01 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 123+ 9A02 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 124+ 9A04 20 0B            jr nz,1F
 125+ 9A06 7D               ld a,l
 126+ 9A07 D6 20            sub $20
 127+ 9A09 30 06            jr nc,1F
 128+ 9A0B 25               dec h
 129+ 9A0C
 130+ 9A0C              ; -----------------------------
 131+ 9A0C CD C0 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 132+ 9A0F              ;	call Reinicio
 133+ 9A0F              ; -----------------------------
 134+ 9A0F
 135+ 9A0F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 136+ 9A11 CD 69 96     1 call PreviousScan
 137+ 9A14 22 82 88     	ld (Posicion_actual),hl
 138+ 9A17 10 E2            djnz 3B
 139+ 9A19 CD 05 9D     2 call Genera_coordenadas
 140+ 9A1C C9           	ret
 141+ 9A1D
 142+ 9A1D              ; -----------------------------
 143+ 9A1D              ;
 144+ 9A1D              ;	27/5/23
 145+ 9A1D              ;
 146+ 9A1D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 147+ 9A1D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 148+ 9A1D              ;
 149+ 9A1D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 150+ 9A1D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 151+ 9A1D              ;
 152+ 9A1D              ;	Modifica: A y (Puntero_objeto).
 153+ 9A1D
 154+ 9A1D 3A B5 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 155+ 9A20 CB 47        	bit 0,a
 156+ 9A22 C8           	ret z
 157+ 9A23 CB 87        	res 0,a
 158+ 9A25 32 B5 88     	ld (Ctrl_2),a
 159+ 9A28 2A CC 88     	ld hl,(Repone_puntero_objeto)
 160+ 9A2B 22 84 88     	ld (Puntero_objeto),hl
 161+ 9A2E C9           	ret
 162+ 9A2F
 163+ 9A2F              ; ******************************************************************************************************************************************************************************************
 164+ 9A2F              ;
 165+ 9A2F              ;	19/10/22
 166+ 9A2F              ;
 167+ 9A2F              ;	Mov_right.
 168+ 9A2F              ;
 169+ 9A2F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 170+ 9A2F              ;
 171+ 9A2F
 172+ 9A2F 3A B0 88     Mov_right ld a,(Ctrl_0)
 173+ 9A32 CB 77        	bit 6,a
 174+ 9A34 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 175+ 9A36
 176+ 9A36 CD 6E 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 177+ 9A39 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 178+ 9A3A
 179+ 9A3A 21 B0 88     	ld hl,Ctrl_0
 180+ 9A3D CB E6        	set 4,(hl)
 181+ 9A3F 18 52        	jr 8F
 182+ 9A41
 183+ 9A41 21 B0 88     10 ld hl,Ctrl_0
 184+ 9A44 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 185+ 9A46              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 186+ 9A46              ; 																	; _ en el caso de que no lo haya.
 187+ 9A46 3A 86 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 188+ 9A49 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 189+ 9A4B 20 46        	jr nz,8F
 190+ 9A4D
 191+ 9A4D 3A 88 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 192+ 9A50 A7           	and a 															; _[3] para continuar con el DESPLZ.
 193+ 9A51 28 40        	jr z,8F
 194+ 9A53
 195+ 9A53              ; ---------- ---------- ----------
 196+ 9A53              ;
 197+ 9A53              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 198+ 9A53
 199+ 9A53 3A 96 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 200+ 9A56 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 201+ 9A58 28 11        	jr z,1F
 202+ 9A5A 38 06        	jr c,6F
 203+ 9A5C FE 04        	cp 4
 204+ 9A5E 28 14        	jr z,7F
 205+ 9A60 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 206+ 9A62
 207+ 9A62              ; ---------- ---------- ----------
 208+ 9A62              ;
 209+ 9A62              ; Perfiles de velocidad
 210+ 9A62              ;
 211+ 9A62
 212+ 9A62 3A 88 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 213+ 9A65 FE FE        	cp $fe
 214+ 9A67 20 2A        	jr nz,8F
 215+ 9A69 18 10        	jr 3F
 216+ 9A6B 3A 88 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 217+ 9A6E FE FD        	cp $fd
 218+ 9A70 20 21        	jr nz,8F
 219+ 9A72 18 07        	jr 3F
 220+ 9A74 3A 88 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 221+ 9A77 FE FB        	cp $fb
 222+ 9A79 20 18        	jr nz,8F
 223+ 9A7B
 224+ 9A7B              ; ---------- ---------- ----------
 225+ 9A7B
 226+ 9A7B              3
 227+ 9A7B CD AE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 228+ 9A7E              ;	call Reinicio
 229+ 9A7E
 230+ 9A7E              ; ---------- ---------- ----------
 231+ 9A7E              ;
 232+ 9A7E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 233+ 9A7E
 234+ 9A7E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 235+ 9A80 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 236+ 9A81 CD 9A 9A     	call DESPLZ_DER
 237+ 9A84 C1           	pop bc
 238+ 9A85 10 F9        	djnz 5B
 239+ 9A87 2A 82 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 240+ 9A8A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 241+ 9A8B 22 82 88     	ld (Posicion_actual),hl
 242+ 9A8E CD 05 9D     	call Genera_coordenadas
 243+ 9A91 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 244+ 9A93
 245+ 9A93              ; ---------- ---------- ----------
 246+ 9A93
 247+ 9A93 2A 82 88     8 ld hl,(Posicion_actual)
 248+ 9A96 CD 9A 9A     	call DESPLZ_DER
 249+ 9A99 C9           2 ret
 250+ 9A9A
 251+ 9A9A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 252+ 9A9A              ;
 253+ 9A9A              ;	22/9/22
 254+ 9A9A              ;
 255+ 9A9A
 256+ 9A9A CD A9 9A     DESPLZ_DER call Desplaza_derecha
 257+ 9A9D CD F5 9A         call modifica_parametros_1er_DESPLZ_2
 258+ 9AA0 CD 1E 9B         call Ciclo_completo
 259+ 9AA3 21 B0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 260+ 9AA6 CB FE        	set 7,(hl)
 261+ 9AA8 C9           	ret
 262+ 9AA9
 263+ 9AA9              ; ******************************************************************************************************************************************************************************************
 264+ 9AA9              ;	15/02/23
 265+ 9AA9              ;
 266+ 9AA9
 267+ 9AA9 3A 96 88     Desplaza_derecha ld a,(Vel_right)
 268+ 9AAC 47           	ld b,a
 269+ 9AAD 2A 8E 88     	ld hl,(Puntero_DESPLZ_der)
 270+ 9AB0 23           1 inc hl
 271+ 9AB1 23           	inc hl
 272+ 9AB2 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 273+ 9AB4 22 8E 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 274+ 9AB7 CD EE 8C     	call Extrae_address
 275+ 9ABA 22 84 88     	ld (Puntero_objeto),hl
 276+ 9ABD
 277+ 9ABD              ; Modifica (Puntero_DESPLZ_izq).
 278+ 9ABD
 279+ 9ABD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 280+ 9ABD              ; Cuántos movimientos hemos hecho ??
 281+ 9ABD              ; DE contiene (Puntero_DESPLZ_der).
 282+ 9ABD
 283+ 9ABD 2A 8A 88     7 ld hl,(Indice_Sprite_der)
 284+ 9AC0 EB           	ex de,hl
 285+ 9AC1 A7           	and a
 286+ 9AC2 ED 52        	sbc hl,de
 287+ 9AC4 CB 3D        	srl l
 288+ 9AC6 3E 08        6 ld a,8
 289+ 9AC8 95           	sub l
 290+ 9AC9 30 1E        	jr nc,3F
 291+ 9ACB
 292+ 9ACB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 293+ 9ACB              ; B="0".
 294+ 9ACB
 295+ 9ACB 04           4 inc b
 296+ 9ACC 3C           	inc a
 297+ 9ACD 20 FC        	jr nz,4B
 298+ 9ACF 78           	ld a,b
 299+ 9AD0 08           	ex af,af
 300+ 9AD1 2A 8A 88     	ld hl,(Indice_Sprite_der)
 301+ 9AD4 23           5 inc hl
 302+ 9AD5 23           	inc hl
 303+ 9AD6 10 FC        	djnz 5B
 304+ 9AD8 22 8E 88     	ld (Puntero_DESPLZ_der),hl
 305+ 9ADB CD EE 8C     	call Extrae_address
 306+ 9ADE 22 84 88     	ld (Puntero_objeto),hl
 307+ 9AE1
 308+ 9AE1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 309+ 9AE1              ; _(Posicion_actual).
 310+ 9AE1
 311+ 9AE1 21 82 88     	ld hl,Posicion_actual
 312+ 9AE4 34           	inc (hl)
 313+ 9AE5 08               ex af,af
 314+ 9AE6 6F           	ld l,a
 315+ 9AE7 18 DD        	jr 6B
 316+ 9AE9
 317+ 9AE9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 318+ 9AE9
 319+ 9AE9 47           3 ld b,a
 320+ 9AEA 2A 8C 88     	ld hl,(Indice_Sprite_izq)
 321+ 9AED 23           2 inc hl
 322+ 9AEE 23           	inc hl
 323+ 9AEF 10 FC        	djnz 2B
 324+ 9AF1 22 90 88     	ld (Puntero_DESPLZ_izq),hl
 325+ 9AF4 C9           8 ret
 326+ 9AF5
 327+ 9AF5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 328+ 9AF5              ;
 329+ 9AF5              ;	24/7/22
 330+ 9AF5              ;
 331+ 9AF5              ;	modifica_parametros_1er_DESPLZ_2
 332+ 9AF5              ;
 333+ 9AF5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 334+ 9AF5              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9AF5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 336+ 9AF5
 337+ 9AF5 3A 88 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 338+ 9AF8 A7           	and a
 339+ 9AF9 20 1F        	jr nz,1F
 340+ 9AFB D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 341+ 9AFD 32 88 88         ld (CTRL_DESPLZ),a
 342+ 9B00
 343+ 9B00 21 81 88     	ld hl,Columns
 344+ 9B03 34           	inc (hl)
 345+ 9B04 3A 94 88     	ld a,(Cuad_objeto)
 346+ 9B07 E6 01        	and 1
 347+ 9B09 28 0F        	jr z,1F
 348+ 9B0B 2A 82 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 349+ 9B0E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 350+ 9B0F 22 82 88     	ld (Posicion_actual),hl
 351+ 9B12 CD 05 9D     	call Genera_coordenadas
 352+ 9B15 CD 7A 9C     	call Inc_CTRL_DESPLZ
 353+ 9B18 18 03        	jr 2F
 354+ 9B1A CD 7A 9C     1 call Inc_CTRL_DESPLZ
 355+ 9B1D C9           2 ret
 356+ 9B1E
 357+ 9B1E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 358+ 9B1E              ;
 359+ 9B1E              ;	24/7/22
 360+ 9B1E              ;
 361+ 9B1E              ;	Ciclo_completo.
 362+ 9B1E              ;
 363+ 9B1E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 364+ 9B1E              ;
 365+ 9B1E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 366+ 9B1E              ; 	Decrementamos (Columns).
 367+ 9B1E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 368+ 9B1E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 369+ 9B1E
 370+ 9B1E
 371+ 9B1E 3A 88 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 372+ 9B21 FE FF        	cp $ff
 373+ 9B23 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 374+ 9B25 E6 F0        	and $f0
 375+ 9B27 20 28        	jr nz,3F
 376+ 9B29
 377+ 9B29              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 378+ 9B29
 379+ 9B29 3A 88 88     	ld a,(CTRL_DESPLZ)
 380+ 9B2C 47           	ld b,a
 381+ 9B2D 3E F8        	ld a,$f8
 382+ 9B2F 80           	add b
 383+ 9B30 32 88 88     	ld (CTRL_DESPLZ),a
 384+ 9B33 18 1C        	jr 3F
 385+ 9B35 21 81 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 386+ 9B38 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 387+ 9B39 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 388+ 9B3A 32 88 88     	ld (CTRL_DESPLZ),a
 389+ 9B3D 3A 94 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 390+ 9B40 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 391+ 9B42 20 0A        	jr nz,2F
 392+ 9B44 2A 82 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 393+ 9B47 23           	inc hl
 394+ 9B48 22 82 88     	ld (Posicion_actual),hl
 395+ 9B4B CD 05 9D     	call Genera_coordenadas
 396+ 9B4E
 397+ 9B4E              ; Inicia el puntero de Sprite.
 398+ 9B4E
 399+ 9B4E CD 05 8D     2 call Inicia_puntero_objeto_der
 400+ 9B51 C9           3 ret
 401+ 9B52
 402+ 9B52              ; ******************************************************************************************************************************************************************************************
 403+ 9B52              ;
 404+ 9B52              ;	15/02/23
 405+ 9B52              ;
 406+ 9B52              ;	Mov_left.
 407+ 9B52              ;
 408+ 9B52              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 409+ 9B52              ;
 410+ 9B52              Mov_left
 411+ 9B52
 412+ 9B52 21 B0 88     	ld hl,Ctrl_0
 413+ 9B55 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 414+ 9B57              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 415+ 9B57              ; 																	; _ en el caso de que no lo haya.
 416+ 9B57 3A B0 88     	ld a,(Ctrl_0)
 417+ 9B5A CB 77        	bit 6,a
 418+ 9B5C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 419+ 9B5E
 420+ 9B5E CD 74 9C     	call Stop_Amadeus_left
 421+ 9B61 C8           	ret z
 422+ 9B62 20 4A        	jr nz,8F
 423+ 9B64
 424+ 9B64 3A 86 88     11 ld a,(Coordenada_X)
 425+ 9B67 A7           	and a
 426+ 9B68 20 44        	jr nz,8F
 427+ 9B6A
 428+ 9B6A 3A 88 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 429+ 9B6D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 430+ 9B6E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 431+ 9B70
 432+ 9B70              ; ---------- ---------- ----------
 433+ 9B70
 434+ 9B70 3A 95 88     	ld a,(Vel_left)
 435+ 9B73 FE 02        	cp 2
 436+ 9B75 28 0F        	jr z,1F
 437+ 9B77 38 04        	jr c,6F
 438+ 9B79 FE 04        	cp 4
 439+ 9B7B 28 12        	jr z,7F
 440+ 9B7D
 441+ 9B7D              ; ---------- ---------- ----------
 442+ 9B7D
 443+ 9B7D 3A 88 88     6 ld a,(CTRL_DESPLZ)
 444+ 9B80 FE F8        	cp $f8
 445+ 9B82 20 2A        	jr nz,8F
 446+ 9B84 18 10        	jr 4F
 447+ 9B86 3A 88 88     1 ld a,(CTRL_DESPLZ)
 448+ 9B89 FE F9        	cp $f9
 449+ 9B8B 20 21        	jr nz,8F
 450+ 9B8D 18 07        	jr 4F
 451+ 9B8F 3A 88 88     7 ld a,(CTRL_DESPLZ)
 452+ 9B92 FE FB        	cp $fb
 453+ 9B94 20 18        	jr nz,8F
 454+ 9B96
 455+ 9B96              ; ---------- ---------- ----------
 456+ 9B96
 457+ 9B96              4
 458+ 9B96 CD 9C 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 459+ 9B99              ;	call Reinicio
 460+ 9B99
 461+ 9B99              ; ---------- ---------- ----------
 462+ 9B99
 463+ 9B99 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 464+ 9B9B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 465+ 9B9C
 466+ 9B9C              ;	ld hl,(Indice_Sprite_izq)
 467+ 9B9C              ;	ld (Puntero_DESPLZ_izq),hl
 468+ 9B9C
 469+ 9B9C CD B5 9B     	call DESPLZ_IZQ
 470+ 9B9F C1           	pop bc
 471+ 9BA0 10 F9        	djnz 5B
 472+ 9BA2 2A 82 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 473+ 9BA5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 474+ 9BA6 22 82 88     	ld (Posicion_actual),hl
 475+ 9BA9 CD 05 9D     	call Genera_coordenadas
 476+ 9BAC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 477+ 9BAE
 478+ 9BAE              ; ---------- ---------- ----------
 479+ 9BAE
 480+ 9BAE              ; Movemos, no hay recolocación.
 481+ 9BAE
 482+ 9BAE 2A 82 88     8 ld hl,(Posicion_actual)
 483+ 9BB1 CD B5 9B     	call DESPLZ_IZQ
 484+ 9BB4 C9           2 ret
 485+ 9BB5
 486+ 9BB5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 487+ 9BB5              ;
 488+ 9BB5              ;	22/9/22
 489+ 9BB5
 490+ 9BB5              DESPLZ_IZQ
 491+ 9BB5
 492+ 9BB5 CD C4 9B     	call Desplaza_izquierda
 493+ 9BB8 CD 10 9C         call modifica_parametros_1er_DESPLZ
 494+ 9BBB CD 38 9C     	call Ciclo_completo_2
 495+ 9BBE 21 B0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 496+ 9BC1 CB BE        	res 7,(hl)
 497+ 9BC3 C9           	ret
 498+ 9BC4
 499+ 9BC4              Desplaza_izquierda
 500+ 9BC4
 501+ 9BC4 3A 95 88     	ld a,(Vel_left)
 502+ 9BC7 47           	ld b,a
 503+ 9BC8 2A 90 88     	ld hl,(Puntero_DESPLZ_izq)
 504+ 9BCB 23           1 inc hl
 505+ 9BCC 23           	inc hl
 506+ 9BCD 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 507+ 9BCF 22 90 88     	ld (Puntero_DESPLZ_izq),hl
 508+ 9BD2 CD EE 8C     	call Extrae_address
 509+ 9BD5 22 84 88     	ld (Puntero_objeto),hl
 510+ 9BD8
 511+ 9BD8              ; Modifica (Puntero_DESPLZ_der).
 512+ 9BD8
 513+ 9BD8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 514+ 9BD8              ; Cuántos movimientos hemos hecho ??
 515+ 9BD8              ; DE contiene (Puntero_DESPLZ_izq).
 516+ 9BD8
 517+ 9BD8 2A 8C 88     7 ld hl,(Indice_Sprite_izq)
 518+ 9BDB EB           	ex de,hl
 519+ 9BDC A7           	and a
 520+ 9BDD ED 52        	sbc hl,de
 521+ 9BDF CB 3D        	srl l
 522+ 9BE1 3E 08        6 ld a,8
 523+ 9BE3 95           	sub l
 524+ 9BE4 30 1E        	jr nc,3F
 525+ 9BE6
 526+ 9BE6              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 527+ 9BE6              ; B="0".
 528+ 9BE6
 529+ 9BE6 04           4 inc b
 530+ 9BE7 3C           	inc a
 531+ 9BE8 20 FC        	jr nz,4B
 532+ 9BEA 78           	ld a,b
 533+ 9BEB 08           	ex af,af
 534+ 9BEC 2A 8C 88     	ld hl,(Indice_Sprite_izq)
 535+ 9BEF 23           5 inc hl
 536+ 9BF0 23           	inc hl
 537+ 9BF1 10 FC        	djnz 5B
 538+ 9BF3 22 90 88     	ld (Puntero_DESPLZ_izq),hl
 539+ 9BF6 CD EE 8C     	call Extrae_address
 540+ 9BF9 22 84 88     	ld (Puntero_objeto),hl
 541+ 9BFC
 542+ 9BFC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 543+ 9BFC              ; _(Posicion_actual).
 544+ 9BFC
 545+ 9BFC 21 82 88     	ld hl,Posicion_actual
 546+ 9BFF 35           	dec (hl)
 547+ 9C00 08           	ex af,af
 548+ 9C01 6F           	ld l,a
 549+ 9C02 18 DD        	jr 6B
 550+ 9C04
 551+ 9C04              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 552+ 9C04
 553+ 9C04 47           3 ld b,a
 554+ 9C05 2A 8A 88     	ld hl,(Indice_Sprite_der)
 555+ 9C08 23           2 inc hl
 556+ 9C09 23           	inc hl
 557+ 9C0A 10 FC        	djnz 2B
 558+ 9C0C 22 8E 88     	ld (Puntero_DESPLZ_der),hl
 559+ 9C0F C9           8 ret
 560+ 9C10
 561+ 9C10              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 562+ 9C10              ;
 563+ 9C10              ;	modifica_parametros_1er_DESPLZ
 564+ 9C10              ;
 565+ 9C10              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 566+ 9C10              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 567+ 9C10              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 568+ 9C10
 569+ 9C10 3A 88 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 570+ 9C13 A7           	and a
 571+ 9C14 20 1E        	jr nz,1F
 572+ 9C16 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 573+ 9C17 32 88 88         ld (CTRL_DESPLZ),a
 574+ 9C1A 21 81 88     	ld hl,Columns
 575+ 9C1D 34           	inc (hl)
 576+ 9C1E 3A 94 88     	ld a,(Cuad_objeto)
 577+ 9C21 E6 01        	and 1
 578+ 9C23 20 0F        	jr nz,1F
 579+ 9C25 2A 82 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 580+ 9C28 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 581+ 9C29 22 82 88     	ld (Posicion_actual),hl
 582+ 9C2C CD 05 9D     	call Genera_coordenadas
 583+ 9C2F CD 8B 9C     	call Dec_CTRL_DESPLZ
 584+ 9C32 18 03        	jr 2F
 585+ 9C34 CD 8B 9C     1 call Dec_CTRL_DESPLZ
 586+ 9C37 C9           2 ret
 587+ 9C38
 588+ 9C38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 589+ 9C38
 590+ 9C38 3A 88 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 591+ 9C3B FE F7        	cp $f7
 592+ 9C3D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 593+ 9C3F 30 2C        	jr nc,3F
 594+ 9C41
 595+ 9C41              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 596+ 9C41
 597+ 9C41 06 00        	ld b,0
 598+ 9C43 04           4 inc b
 599+ 9C44 3C           	inc a
 600+ 9C45 FE F7        	cp $f7
 601+ 9C47 20 FA        	jr nz,4B
 602+ 9C49 3E FF        	ld a,$ff
 603+ 9C4B 90           	sub b
 604+ 9C4C 32 88 88     	ld (CTRL_DESPLZ),a
 605+ 9C4F 18 1C        	jr 3F
 606+ 9C51
 607+ 9C51              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 608+ 9C51
 609+ 9C51 21 81 88     1 ld hl,Columns
 610+ 9C54 35           	dec (hl)
 611+ 9C55 AF           	xor a
 612+ 9C56 32 88 88     	ld (CTRL_DESPLZ),a
 613+ 9C59 3A 94 88     	ld a,(Cuad_objeto)
 614+ 9C5C E6 01        	and 1
 615+ 9C5E 28 0A        	jr z,2F
 616+ 9C60 2A 82 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 617+ 9C63 2B           	dec hl
 618+ 9C64 22 82 88     	ld (Posicion_actual),hl
 619+ 9C67 CD 05 9D     	call Genera_coordenadas
 620+ 9C6A
 621+ 9C6A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 622+ 9C6A
 623+ 9C6A CD 18 8D     2 call Inicia_puntero_objeto_izq
 624+ 9C6D C9           3 ret
 625+ 9C6E
 626+ 9C6E              ; ---------- ---------- ---------- ---------- ---------- ----------
 627+ 9C6E              ;
 628+ 9C6E              ;	19/10/22
 629+ 9C6E              ;
 630+ 9C6E              ;	(cp 29) para un Amadeus de 3 Columns.
 631+ 9C6E              ;	(cp 30)   ""  ""    ""     2 Columns.
 632+ 9C6E
 633+ 9C6E 3A 86 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 634+ 9C71 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 635+ 9C73 C9           	ret
 636+ 9C74
 637+ 9C74              ; ---------- ---------- ---------- ---------- ---------- ----------
 638+ 9C74              ;
 639+ 9C74              ;	19/10/22
 640+ 9C74              ;
 641+ 9C74              ;	(cp 2) para un Amadeus de 3 Columns.
 642+ 9C74              ;	(cp 1)   ""  ""    ""     2 Columns.
 643+ 9C74
 644+ 9C74 3A 86 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 645+ 9C77 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 646+ 9C79 C9           	ret
 647+ 9C7A
 648+ 9C7A              ; ---------- ---------- ---------- ---------- ---------- ----------
 649+ 9C7A              ;
 650+ 9C7A              ;	24/7/22
 651+ 9C7A              ;
 652+ 9C7A              ;	Inc_CTRL_DESPLZ
 653+ 9C7A              ;
 654+ 9C7A              ;
 655+ 9C7A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 656+ 9C7A
 657+ 9C7A 21 88 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 658+ 9C7D 3A 96 88     	ld a,(Vel_right)
 659+ 9C80 A7           	and a
 660+ 9C81 28 06        	jr z,1F
 661+ 9C83 47           	ld b,a
 662+ 9C84 34           3 inc (hl)
 663+ 9C85 10 FD        	djnz 3B
 664+ 9C87 18 01        	jr 2F
 665+ 9C89 34           1 inc (hl)
 666+ 9C8A C9           2 ret
 667+ 9C8B
 668+ 9C8B              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 9C8B              ;
 670+ 9C8B              ;	5/2/23
 671+ 9C8B              ;
 672+ 9C8B              ;	Dec_CTRL_DESPLZ
 673+ 9C8B              ;
 674+ 9C8B              ;
 675+ 9C8B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 676+ 9C8B
 677+ 9C8B 21 88 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 678+ 9C8E 3A 95 88     	ld a,(Vel_left)
 679+ 9C91 A7           	and a
 680+ 9C92 28 06        	jr z,1F
 681+ 9C94 47           	ld b,a
 682+ 9C95 35           3 dec (hl)
 683+ 9C96 10 FD        	djnz 3B
 684+ 9C98 18 01        	jr 2F
 685+ 9C9A 35           1 dec (hl)
 686+ 9C9B C9           2 ret
 687+ 9C9C
 688+ 9C9C              ; ---------- ---------- ---------- ---------- ---------- ----------
 689+ 9C9C
 690+ 9C9C 2A 82 88     Reaparece_derecha ld hl,(Posicion_actual)
 691+ 9C9F 01 1F 00     	ld bc,31
 692+ 9CA2 A7           	and a
 693+ 9CA3 ED 4A        	adc hl,bc
 694+ 9CA5 22 82 88     	ld (Posicion_actual),hl
 695+ 9CA8 21 B0 88     	ld hl,Ctrl_0														; $xxx1
 696+ 9CAB CB C6        	set 0,(hl)
 697+ 9CAD C9           	ret
 698+ 9CAE
 699+ 9CAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 700+ 9CAE
 701+ 9CAE 2A 82 88     Reaparece_izquierda ld hl,(Posicion_actual)
 702+ 9CB1 01 1F 00     	ld bc,31
 703+ 9CB4 A7           	and a
 704+ 9CB5 ED 42        	sbc hl,bc
 705+ 9CB7 22 82 88     	ld (Posicion_actual),hl 											; $xx1x
 706+ 9CBA 21 B0 88     	ld hl,Ctrl_0
 707+ 9CBD CB CE        	set 1,(hl)
 708+ 9CBF C9           	ret
 709+ 9CC0
 710+ 9CC0              ; ---------- ---------- ---------- ---------- ---------- ----------
 711+ 9CC0
 712+ 9CC0 24           Reaparece_abajo inc h
 713+ 9CC1 01 E0 17     	ld bc,$17e0
 714+ 9CC4 A7           	and a
 715+ 9CC5 ED 4A        	adc hl,bc
 716+ 9CC7 22 82 88     	ld (Posicion_actual),hl
 717+ 9CCA 21 B0 88     	ld hl,Ctrl_0
 718+ 9CCD CB D6        	set 2,(hl)
 719+ 9CCF C9           	ret
 720+ 9CD0
 721+ 9CD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 722+ 9CD0
 723+ 9CD0 01 E0 17     Reaparece_arriba ld bc,$17e0
 724+ 9CD3 A7           	and a
 725+ 9CD4 ED 42        	sbc hl,bc
 726+ 9CD6 22 82 88     	ld (Posicion_actual),hl
 727+ 9CD9 21 B0 88     	ld hl,Ctrl_0
 728+ 9CDC CB DE        	set 3,(hl)
 729+ 9CDE C9           	ret
 730+ 9CDF
 731+ 9CDF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 732+ 9CDF              ;
 733+ 9CDF              ;	15/07/23
 734+ 9CDF
 735+ 9CDF              Reinicio
 736+ 9CDF
 737+ 9CDF              ; Vamos a reiniciar los punteros y variables de movimiento.
 738+ 9CDF
 739+ 9CDF AF           	xor a
 740+ 9CE0 21 C3 88     	ld hl,Puntero_indice_mov_bucle
 741+ 9CE3 CD 01 9D     	call Limpia_contenido_hl
 742+ 9CE6
 743+ 9CE6 21 82 88     	ld hl,Posicion_actual
 744+ 9CE9 CD 01 9D     	call Limpia_contenido_hl
 745+ 9CEC
 746+ 9CEC CD 64 A0     	call Inicializa_Puntero_indice_mov
 747+ 9CEF CD C1 9F     	call Inicia_Puntero_mov
 748+ 9CF2
 749+ 9CF2 21 C5 88     	ld hl,Incrementa_puntero
 750+ 9CF5 06 05        	ld b,5
 751+ 9CF7 77           1 ld (hl),a
 752+ 9CF8 23           	inc hl
 753+ 9CF9 10 FC        	djnz 1B
 754+ 9CFB
 755+ 9CFB 21 B5 88     	ld hl,Ctrl_2
 756+ 9CFE CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 757+ 9D00
 758+ 9D00 C9           	ret
 759+ 9D01
 760+ 9D01 77           Limpia_contenido_hl	ld (hl),a
 761+ 9D02 23           	inc hl
 762+ 9D03 77           	ld (hl),a
 763+ 9D04 C9           	ret
 764+ 9D05
 765+ 9D05
# file closed: Direcciones.asm
1918  9D05              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D05              ; ------------------------------------------------------------------------
   2+ 9D05              ;
   3+ 9D05              ;	02/04/23
   4+ 9D05              ;
   5+ 9D05              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D05              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D05              ;
   8+ 9D05              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D05              ;
  10+ 9D05              ;	Modifica: A,BC y DE.
  11+ 9D05
  12+ 9D05 C5           Genera_coordenadas push bc
  13+ 9D06 E5           	push hl
  14+ 9D07 D5           	push de
  15+ 9D08
  16+ 9D08 2A 82 88     	ld hl,(Posicion_actual)
  17+ 9D0B
  18+ 9D0B 7D           	ld a,l
  19+ 9D0C E6 1F        	and $1f
  20+ 9D0E 32 86 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D11
  22+ 9D11 CD 6D 99     	call calcula_tercio
  23+ 9D14 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D15
  25+ 9D15 1E 00        	ld e,0
  26+ 9D17 7D           	ld a,l
  27+ 9D18 E6 E0        	and $e0
  28+ 9D1A 28 01        	jr z,1F
  29+ 9D1C 04           	inc b
  30+ 9D1D
  31+ 9D1D 04           1 inc b
  32+ 9D1E 05           	dec b
  33+ 9D1F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D21              ;														; _ , salimos.
  35+ 9D21 1C           3 inc e
  36+ 9D22 D6 20        	sub 32
  37+ 9D24 20 FB        	jr nz,3B
  38+ 9D26 10 F5        	djnz 1B
  39+ 9D28
  40+ 9D28 7B           2 ld a,e
  41+ 9D29 32 87 88     	ld (Coordenada_y),a
  42+ 9D2C
  43+ 9D2C D1           	pop de
  44+ 9D2D E1           	pop hl
  45+ 9D2E C1           	pop bc
  46+ 9D2F
  47+ 9D2F C9           	ret
  48+ 9D30
  49+ 9D30              ; ------------------------------------------------------------------------
  50+ 9D30              ;	28/05/23
  51+ 9D30              ;
  52+ 9D30              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D30              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D30              ;
  55+ 9D30              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D30              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D30              ;
  58+ 9D30              ;		DE="$120d"
  59+ 9D30              ;
  60+ 9D30              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D30              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D30              ;
  63+ 9D30              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D30
  65+ 9D30              ;	Modifica: A,BC y DE.
  66+ 9D30
  67+ 9D30
  68+ 9D30              Genera_coordenadas_disparo
  69+ 9D30
  70+ 9D30              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D30
  72+ 9D30 7D           	ld a,l
  73+ 9D31 E6 1F        	and $1f
  74+ 9D33 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D34 CD 6D 99     	call calcula_tercio
  76+ 9D37 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D38 1E 00        	ld e,0
  78+ 9D3A 7D           	ld a,l
  79+ 9D3B E6 E0        	and $e0
  80+ 9D3D 28 01        	jr z,1F
  81+ 9D3F 04           	inc b
  82+ 9D40 1C           1 inc e
  83+ 9D41 D6 20        	sub 32
  84+ 9D43 20 FB        	jr nz,1B
  85+ 9D45 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D47 C9           	ret
  87+ 9D48
# file closed: Genera_coordenadas.asm
1919  9D48              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D48              ; Relojes y temporizaciones.
   2+ 9D48
   3+ 9D48              ; ------------------------------------------------------
   4+ 9D48              ;
   5+ 9D48              ;	16/7/23
   6+ 9D48              ;
   7+ 9D48              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D48              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D48              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D48              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D48              ;
  12+ 9D48              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D48              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D48
  15+ 9D48              ; Disparo_entidad db 1
  16+ 9D48              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D48              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D48
  19+ 9D48              Habilita_disparos
  20+ 9D48
  21+ 9D48 7E           	ld a,(hl)
  22+ 9D49 A7           	and a
  23+ 9D4A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D4B
  25+ 9D4B EB           	ex de,hl
  26+ 9D4C
  27+ 9D4C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D4D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D4E
  30+ 9D4E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D4E
  32+ 9D4E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D4F 7E           	ld a,(hl)
  34+ 9D50 23           	inc hl
  35+ 9D51 77           	ld (hl),a
  36+ 9D52
  37+ 9D52 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D53 3E 01        	ld a,1
  39+ 9D55 77           	ld (hl),a
  40+ 9D56 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1920  9D57              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D57
   2+ 9D57
   3+ 9D57              ;   07/07/23
   4+ 9D57              ;
   5+ 9D57              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D57              ;
   7+ 9D57              ;   Codificación:
   8+ 9D57              ;
   9+ 9D57              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D57              ;
  11+ 9D57              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D57              ;
  13+ 9D57              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D57              ;
  15+ 9D57              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D57              ;
  17+ 9D57              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D57              ;                               ..... %01000010 Vel_up 4
  19+ 9D57              ;                                               Vel_down 2
  20+ 9D57              ;                               ..... $42
  21+ 9D57              ;
  22+ 9D57              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D57              ;
  24+ 9D57              ;                               ..... %01000010 Vel_left 4
  25+ 9D57              ;                                               Vel_right 2
  26+ 9D57              ;                               ..... $42
  27+ 9D57              ;
  28+ 9D57              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D57              ;
  30+ 9D57              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D57              ;
  32+ 9D57              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D57              ;
  34+ 9D57              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D57              ;                                     $53
  36+ 9D57              ;
  37+ 9D57              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D57              ;
  39+ 9D57              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D57              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D57              ;
  42+ 9D57              ;                       Arriba ..... $81
  43+ 9D57              ;                       Arriba - izquierda ..... $a1
  44+ 9D57              ;                       Arriba - derecha ..... $91
  45+ 9D57              ;
  46+ 9D57              ;                       Abajo ..... $41
  47+ 9D57              ;                       Abajo - izquierda ..... $61
  48+ 9D57              ;                       Abajo - derecha ..... $51
  49+ 9D57              ;
  50+ 9D57              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D57              ;
  52+ 9D57              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D57              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D57              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D57              ;
  56+ 9D57              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D57              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D57              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D57              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D57              ;
  61+ 9D57              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D57              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D57              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D57              ;
  65+ 9D57              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D57              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D57              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D57              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D57
  70+ 9D57              ; ----- ----- ----- ----- -----
  71+ 9D57
  72+ 9D57 83 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D59 8B 9D            defw F_1
  74+ 9D5B 95 9D            defw F_2
  75+ 9D5D 9F 9D            defw Codo_abajo_derecha
  76+ 9D5F D3 9D            defw Derecha_y_subiendo
  77+ 9D61 DD 9D            defw Derecha_y_subiendo_1
  78+ 9D63 E7 9D            defw F_3
  79+ 9D65 F1 9D            defw F_4
  80+ 9D67 FB 9D            defw Derecha_y_bajando
  81+ 9D69 05 9E            defw Derecha_y_bajando_1
  82+ 9D6B 0F 9E            defw Derecha_y_bajando_2
  83+ 9D6D 19 9E            defw Codo_derecha_abajo
  84+ 9D6F 49 9E            defw Codo_abajo_izq.
  85+ 9D71 7D 9E            defw Izquierda_y_subiendo
  86+ 9D73 87 9E            defw Izquierda_y_subiendo_1
  87+ 9D75 91 9E            defw F_5
  88+ 9D77 9B 9E            defw F_6
  89+ 9D79 A5 9E            defw Izquierda_y_bajando
  90+ 9D7B AF 9E            defw Izquierda_y_bajando_1
  91+ 9D7D B9 9E            defw Izquierda_y_bajando_2
  92+ 9D7F C3 9E            defw Codo_izquierda_abajo
  93+ 9D81 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D83
  95+ 9D83 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D87 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D8B
  98+ 9D8B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D8F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D93 08 00
 100+ 9D95 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D99 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D9D 0F FE
 102+ 9D9F
 103+ 9D9F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DA3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DA7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DAB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DAF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DB3 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DB7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DBB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DBF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DC3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DC7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DCB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DCF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DD3
 117+ 9DD3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DD7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DDB 06 00
 119+ 9DDD
 120+ 9DDD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DE1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DE5 02 00
 122+ 9DE7
 123+ 9DE7 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DEB 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DEF 04 00
 125+ 9DF1 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DF5 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DF9 08 00
 127+ 9DFB
 128+ 9DFB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DFF 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E03 02 00
 130+ 9E05
 131+ 9E05 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E09 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E0D 06 00
 133+ 9E0F
 134+ 9E0F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E13 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E17 06 00
 136+ 9E19
 137+ 9E19              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E19
 139+ 9E19 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E1D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E25 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E29 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E2D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E31 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E39 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E3D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E41 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E45 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E49
 152+ 9E49 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E4D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E51 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E55 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E59 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E5D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E61 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E65 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E69 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E6D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E71 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E75 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E79 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E7D
 166+ 9E7D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E81 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E85 06 00
 168+ 9E87
 169+ 9E87 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E8B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E8F 02 00
 171+ 9E91
 172+ 9E91 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E95 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E99 04 00
 174+ 9E9B 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E9F 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EA3 08 00
 176+ 9EA5
 177+ 9EA5 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EA9 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EAD 02 00
 179+ 9EAF
 180+ 9EAF 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EB3 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EB7 06 00
 182+ 9EB9
 183+ 9EB9 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EBD 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EC1 06 00
 185+ 9EC3
 186+ 9EC3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EC7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9ECB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9ECF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9ED3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9ED7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EDB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EDF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EE3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EE7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EEB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EEF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EF3
 199+ 9EF3              ; ----- ----- ----- ----- -----
 200+ 9EF3              ;
 201+ 9EF3              ;   28/12/23
 202+ 9EF3
 203+ 9EF3              Movimiento
 204+ 9EF3
 205+ 9EF3              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EF3
 207+ 9EF3 3A B5 88         ld a,(Ctrl_2)
 208+ 9EF6 CB 57            bit 2,a
 209+ 9EF8 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9EFA
 211+ 9EFA 2A C1 88         ld hl,(Puntero_mov)
 212+ 9EFD 7E               ld a,(hl)
 213+ 9EFE
 214+ 9EFE              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9EFE
 216+ 9EFE              Inicia_desplazamiento.
 217+ 9EFE
 218+ 9EFE              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9EFE
 220+ 9EFE CD FE 9F         call Ajusta_velocidad_desplazamiento
 221+ 9F01
 222+ 9F01              ; Iniciamos (Repetimos_mov).
 223+ 9F01
 224+ 9F01 7E               ld a,(hl)
 225+ 9F02 E6 0F            and $0f
 226+ 9F04 32 C7 88         ld (Repetimos_desplazamiento),a
 227+ 9F07 32 C8 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9F0A
 229+ 9F0A              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9F0A
 231+ 9F0A 23               inc hl
 232+ 9F0B 7E               ld a,(hl)
 233+ 9F0C 32 CA 88         ld (Cola_de_desplazamiento),a
 234+ 9F0F 2B               dec hl
 235+ 9F10
 236+ 9F10 21 B5 88         ld hl,Ctrl_2
 237+ 9F13 CB D6            set 2,(hl)
 238+ 9F15
 239+ 9F15              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9F15              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9F15
 242+ 9F15              Desplazamiento_iniciado
 243+ 9F15
 244+ 9F15 CD CC 9F         call Aplica_desplazamiento
 245+ 9F18
 246+ 9F18              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9F18
 248+ 9F18 3A EA 88         ld a,(Ctrl_3)
 249+ 9F1B CB 57            bit 2,a
 250+ 9F1D C0               ret nz
 251+ 9F1E
 252+ 9F1E 3A B5 88         ld a,(Ctrl_2)
 253+ 9F21 CB 67            bit 4,a
 254+ 9F23 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9F24
 256+ 9F24 21 C7 88     3 ld hl,Repetimos_desplazamiento
 257+ 9F27 35               dec (hl)
 258+ 9F28 C0               ret nz
 259+ 9F29
 260+ 9F29              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9F29              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9F29              ; Analiza (Cola_de_desplazamiento).
 263+ 9F29
 264+ 9F29 3A CA 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9F2C A7               and a
 266+ 9F2D CC 27 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9F30 28 30            jr z,Reinicia_el_movimiento
 268+ 9F32
 269+ 9F32 FE FF            cp $ff
 270+ 9F34 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9F36
 272+ 9F36 FE FE            cp $fe
 273+ 9F38 CC A5 9F         call z,Fijamos_bucle
 274+ 9F3B 28 25            jr z,Reinicia_el_movimiento
 275+ 9F3D
 276+ 9F3D FE FD            cp $fd
 277+ 9F3F 20 11            jr nz,1F
 278+ 9F41
 279+ 9F41              ; ---
 280+ 9F41              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9F41
 282+ 9F41 3A B5 88         ld a,(Ctrl_2)
 283+ 9F44 CB 5F            bit 3,a
 284+ 9F46 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9F48
 286+ 9F48              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9F48
 288+ 9F48 21 B5 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9F4B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9F4D
 291+ 9F4D CD B6 9F         call Inicia_Repetimos_movimiento
 292+ 9F50 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9F52              ; ---
 294+ 9F52
 295+ 9F52 FE 01        1 cp 1
 296+ 9F54 CA 8F 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9F57
 298+ 9F57 3D               dec a
 299+ 9F58 32 CA 88         ld (Cola_de_desplazamiento),a
 300+ 9F5B
 301+ 9F5B 3A C8 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9F5E 32 C7 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9F61              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9F61 C9               ret
 305+ 9F62
 306+ 9F62              Reinicia_el_movimiento
 307+ 9F62
 308+ 9F62 3A B5 88         ld a,(Ctrl_2)
 309+ 9F65 CB 5F            bit 3,a
 310+ 9F67 28 1B            jr z,2F
 311+ 9F69
 312+ 9F69              ; (Cola_de_desplazamiento)="254".
 313+ 9F69
 314+ 9F69 21 C9 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F6C 35               dec (hl)
 316+ 9F6D 20 15            jr nz,2F
 317+ 9F6F
 318+ 9F6F              ; Fin de las repeticiones del último movimiento.
 319+ 9F6F
 320+ 9F6F 21 B5 88         ld hl,Ctrl_2
 321+ 9F72 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F74
 323+ 9F74 2A C1 88         ld hl,(Puntero_mov)
 324+ 9F77 23               inc hl
 325+ 9F78 23               inc hl
 326+ 9F79 23               inc hl
 327+ 9F7A 22 C1 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F7D              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F7D 7E               ld a,(hl)
 330+ 9F7E 32 CA 88         ld (Cola_de_desplazamiento),a
 331+ 9F81
 332+ 9F81 C3 29 9F         jp Cola
 333+ 9F84
 334+ 9F84 CD C1 9F     2 call Inicia_Puntero_mov
 335+ 9F87
 336+ 9F87 21 B5 88         ld hl,Ctrl_2
 337+ 9F8A CB 96            res 2,(hl)
 338+ 9F8C
 339+ 9F8C C3 F3 9E         jp Movimiento
 340+ 9F8F
 341+ 9F8F              Siguiente_desplazamiento
 342+ 9F8F
 343+ 9F8F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F8F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F8F
 346+ 9F8F 21 B5 88         ld hl,Ctrl_2
 347+ 9F92 CB 96            res 2,(hl)
 348+ 9F94
 349+ 9F94 2A C1 88         ld hl,(Puntero_mov)
 350+ 9F97 23               inc hl
 351+ 9F98 23               inc hl
 352+ 9F99 22 C1 88         ld (Puntero_mov),hl
 353+ 9F9C
 354+ 9F9C 7E               ld a,(hl)
 355+ 9F9D A7               and a
 356+ 9F9E CC 27 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FA1 CA 62 9F         jp z,Reinicia_el_movimiento
 358+ 9FA4
 359+ 9FA4 C9               ret
 360+ 9FA5
 361+ 9FA5              ; Subrutinas -----------------------------------------
 362+ 9FA5              ; ---------- --------- --------- ---------- ----------
 363+ 9FA5              ;
 364+ 9FA5              ;   24/07/23
 365+ 9FA5              ;
 366+ 9FA5              ;   Fijamos_bucle
 367+ 9FA5              ;
 368+ 9FA5              ;
 369+ 9FA5
 370+ 9FA5              Fijamos_bucle
 371+ 9FA5
 372+ 9FA5 3A C5 88         ld a,(Incrementa_puntero)
 373+ 9FA8 3C               inc a
 374+ 9FA9 32 C6 88         ld (Incrementa_puntero_backup),a
 375+ 9FAC
 376+ 9FAC CD 27 A0         call Incrementa_Puntero_indice_mov
 377+ 9FAF 2A BF 88         ld hl,(Puntero_indice_mov)
 378+ 9FB2 22 C3 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9FB5 C9               ret
 380+ 9FB6
 381+ 9FB6              ; ---------- --------- --------- ---------- ----------
 382+ 9FB6              ;
 383+ 9FB6              ;   07/7/23
 384+ 9FB6              ;
 385+ 9FB6              ;   Inicia_Repetimos_movimiento
 386+ 9FB6              ;
 387+ 9FB6              ;
 388+ 9FB6
 389+ 9FB6              Inicia_Repetimos_movimiento
 390+ 9FB6
 391+ 9FB6              ; Iniciamos (Repetimos_movimiento).
 392+ 9FB6
 393+ 9FB6 DD 2A C1 88      ld ix,(Puntero_mov)
 394+ 9FBA DD 7E 02         ld a,(ix+2)
 395+ 9FBD 32 C9 88         ld (Repetimos_movimiento),a
 396+ 9FC0
 397+ 9FC0 C9               ret
 398+ 9FC1
 399+ 9FC1              ; ---------- --------- --------- ---------- ----------
 400+ 9FC1              ;
 401+ 9FC1              ;   26/6/23
 402+ 9FC1              ;
 403+ 9FC1              ;   Inicia_Puntero_mov
 404+ 9FC1              ;
 405+ 9FC1              ;
 406+ 9FC1
 407+ 9FC1 2A BF 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9FC4 5E               ld e,(hl)
 409+ 9FC5 23               inc hl
 410+ 9FC6 56               ld d,(hl)
 411+ 9FC7 EB               ex de,hl
 412+ 9FC8 22 C1 88         ld (Puntero_mov),hl
 413+ 9FCB C9               ret
 414+ 9FCC
 415+ 9FCC              ; ---------- --------- --------- ---------- ----------
 416+ 9FCC              ;
 417+ 9FCC              ;   27/06/23
 418+ 9FCC              ;
 419+ 9FCC              ;   Aplica_movimiento.
 420+ 9FCC
 421+ 9FCC              Aplica_desplazamiento
 422+ 9FCC
 423+ 9FCC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9FCC
 425+ 9FCC 2A C1 88         ld hl, (Puntero_mov)
 426+ 9FCF
 427+ 9FCF 7E               ld a,(hl)
 428+ 9FD0 E6 F0            and $f0
 429+ 9FD2 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9FD3
 431+ 9FD3 CB 7E            bit 7,(hl)
 432+ 9FD5 28 03            jr z,1F
 433+ 9FD7 CD EC 99         call Mov_up
 434+ 9FDA 2A C1 88     1 ld hl, (Puntero_mov)
 435+ 9FDD CB 76            bit 6,(hl)
 436+ 9FDF 28 09            jr z,2F
 437+ 9FE1 CD B3 99         call Mov_down
 438+ 9FE4
 439+ 9FE4              ; Se ha aplicado reinicio ???
 440+ 9FE4              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9FE4
 442+ 9FE4 3A EA 88         ld a,(Ctrl_3)
 443+ 9FE7 CB 57            bit 2,a
 444+ 9FE9 C0               ret nz
 445+ 9FEA
 446+ 9FEA 2A C1 88     2 ld hl, (Puntero_mov)
 447+ 9FED CB 6E            bit 5,(hl)
 448+ 9FEF 28 03            jr z,3F
 449+ 9FF1 CD 52 9B         call Mov_left
 450+ 9FF4 2A C1 88     3 ld hl, (Puntero_mov)
 451+ 9FF7 CB 66            bit 4,(hl)
 452+ 9FF9 C8               ret z
 453+ 9FFA CD 2F 9A         call Mov_right
 454+ 9FFD C9               ret
 455+ 9FFE
 456+ 9FFE              ; ---------- --------- --------- ---------- ----------
 457+ 9FFE              ;
 458+ 9FFE              ;   26/06/23
 459+ 9FFE              ;
 460+ 9FFE              ;   Ajusta_velocidad_desplazamiento.
 461+ 9FFE
 462+ 9FFE              Ajusta_velocidad_desplazamiento
 463+ 9FFE
 464+ 9FFE              ; 1er byte de la cadena de movimiento.
 465+ 9FFE              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9FFE
 467+ 9FFE CD 1C A0         call Extrae_nibble_alto
 468+ A001
 469+ A001 32 97 88         ld (Vel_up),a
 470+ A004 79               ld a,c
 471+ A005 E6 0F            and $0f
 472+ A007 32 98 88         ld (Vel_down),a
 473+ A00A
 474+ A00A              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ A00A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ A00A
 477+ A00A 23               inc hl
 478+ A00B CD 1C A0         call Extrae_nibble_alto
 479+ A00E
 480+ A00E 32 95 88         ld (Vel_left),a
 481+ A011 79               ld a,c
 482+ A012 E6 0F            and $0f
 483+ A014 32 96 88         ld (Vel_right),a
 484+ A017
 485+ A017              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ A017
 487+ A017 23               inc hl
 488+ A018 22 C1 88         ld (Puntero_mov),hl
 489+ A01B C9               ret
 490+ A01C
 491+ A01C 06 04        Extrae_nibble_alto ld b,4
 492+ A01E 7E               ld a,(hl)
 493+ A01F 4F               ld c,a
 494+ A020 E6 F0            and $f0
 495+ A022 CB 3F        1 srl a
 496+ A024 10 FC            djnz 1B
 497+ A026 C9               ret
 498+ A027
 499+ A027              ; ---------- --------- --------- ---------- ----------
 500+ A027              ;
 501+ A027              ;   5/7/23
 502+ A027              ;
 503+ A027              ;   Incrementa_Puntero_indice_mov
 504+ A027
 505+ A027              Incrementa_Puntero_indice_mov
 506+ A027
 507+ A027 21 C5 88         ld hl,Incrementa_puntero
 508+ A02A 34               inc (hl)
 509+ A02B
 510+ A02B 2A BF 88         ld hl,(Puntero_indice_mov)
 511+ A02E 01 02 00         ld bc,2
 512+ A031 A7               and a
 513+ A032 09               add hl,bc
 514+ A033 22 BF 88         ld (Puntero_indice_mov),hl
 515+ A036
 516+ A036 7E               ld a,(hl)
 517+ A037 A7               and a
 518+ A038
 519+ A038              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ A038
 521+ A038              ;    jr z,$
 522+ A038
 523+ A038              ;! Reinicia el Patrón de movimiento.
 524+ A038
 525+ A038 CC 3D A0         call z,Inicializa_Puntero_indice_mov_2
 526+ A03B
 527+ A03B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ A03C
 529+ A03C C9               ret
 530+ A03D
 531+ A03D
 532+ A03D              ; ---------- --------- --------- ---------- ----------
 533+ A03D              ;
 534+ A03D              ;   15/01/24
 535+ A03D              ;
 536+ A03D              ;   Inicializa_Puntero_indice_mov
 537+ A03D
 538+ A03D              Inicializa_Puntero_indice_mov_2
 539+ A03D
 540+ A03D              ; Existe etiqueta de bucle principal???
 541+ A03D
 542+ A03D 2A C3 88         ld hl,(Puntero_indice_mov_bucle)
 543+ A040 24               inc h
 544+ A041 25               dec h
 545+ A042 28 05            jr z,2F
 546+ A044
 547+ A044 22 BF 88         ld (Puntero_indice_mov),hl
 548+ A047 18 14            jr 3F
 549+ A049
 550+ A049              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ A049
 552+ A049 3A C5 88     2 ld a,(Incrementa_puntero)
 553+ A04C 47               ld b,a
 554+ A04D
 555+ A04D 2A BF 88         ld hl,(Puntero_indice_mov)
 556+ A050 2B           1 dec hl
 557+ A051 2B               dec hl
 558+ A052 10 FC            djnz 1B
 559+ A054 22 BF 88         ld (Puntero_indice_mov),hl
 560+ A057
 561+ A057 AF               xor a
 562+ A058 32 C5 88         ld (Incrementa_puntero),a
 563+ A05B 18 06            jr 4F
 564+ A05D
 565+ A05D 3A C6 88     3 ld a,(Incrementa_puntero_backup)
 566+ A060 32 C5 88         ld (Incrementa_puntero),a
 567+ A063 C9           4 ret
 568+ A064
 569+ A064 3A 7F 88     Inicializa_Puntero_indice_mov ld a,(Tipo)
 570+ A067 CD 0D 88         call Calcula_salto_en_BC
 571+ A06A 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
 572+ A06D A7               and a
 573+ A06E ED 4A            adc hl,bc
 574+ A070 CD EE 8C         call Extrae_address
 575+ A073 22 BF 88         ld (Puntero_indice_mov),hl
 576+ A076 C9               ret
 577+ A077
 578+ A077 3A 7F 88     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 579+ A07A CD 0D 88         call Calcula_salto_en_BC
 580+ A07D 21 B7 88         ld hl,Contador_general_de_mov_masticados_Entidad_1
 581+ A080 A7               and a
 582+ A081 ED 4A            adc hl,bc
 583+ A083 C9               ret
# file closed: Patrones_de_mov.asm
1921  A084              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A084              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A084              ;
   3+ A084              ;	12/12/23
   4+ A084              ;
   5+ A084              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A084
   7+ A084              ;	ADC HL,SP	LD (addr),SP
   8+ A084              ;	ADD HL,SP	LD SP,(addr)
   9+ A084              ;	ADD IX,SP	LD SP,nn
  10+ A084              ; 	ADD IY,SP	LD SP,HL
  11+ A084              ;				LD SP,IX
  12+ A084              ;	DEC SP		LD SP,IY
  13+ A084
  14+ A084              ;	EX (SP),HL
  15+ A084              ;	EX (SP),IX
  16+ A084              ;	EX (SP),IY
  17+ A084
  18+ A084              ;	INC SP
  19+ A084
  20+ A084                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 DC 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 A0 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 AC 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A CB 88         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A E4 88         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A B0 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A E8 88         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A E2 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A CB 88         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 E4 88         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A B0 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 E8 88         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B DC 88      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 E2 88     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B DC 88  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A E2 88         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 E2 88         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1922  718B
1923  718B              	SAVESNA "Pruebas.sna", START
1924  718B
1925  718B
1926  718B
1927  718B
# file closed: Banco_de_pruebas.asm
