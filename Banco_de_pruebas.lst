# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 48 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 0E 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 FE 95 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Impacto. "1" existe impacto en la entidad.
  94  85B5
  95  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  96  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  97  85B9 00 00        	defw 0
  98  85BB 00 00 00 00  	db 0,0,0,0
  99  85BF
 100  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 101  85C1 00 00        	defw 0
 102  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 103  85C5 00 00 00 00  	db 0,0,0,0
 104  85C9
 105  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 106  85C9
 107  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 108  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 109  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 110  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 111  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 112  85CA              ;
 113  85CA              ; 														DESCRIPCIÖN:
 114  85CA              ;
 115  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 116  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 117  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 118  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 119  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 120  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 121  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 122  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 123  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 124  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 125  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 126  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 127  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 128  85CA              ;
 129  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 130  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 131  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 132  85CA
 133  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 134  85CB
 135  85CB              ; Movimiento.
 136  85CB
 137  85CB 08 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_derecha_abajo   ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 138  85CD 00 00        Puntero_mov defw 0
 139  85CF 00           Contador_db_mov db 0
 140  85D0 00           Incrementa_puntero db 0
 141  85D1 00           Repetimos_db db 0
 142  85D2
 143  85D2              ; Variables de funcionamiento. [DRAW].
 144  85D2
 145  85D2 00           Columnas db 0
 146  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 147  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 148  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D6
 150  85D6              ; 59 Bytes por entidad.
 151  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 152  85D6              ;					         		---------;      ;---------
 153  85D6
 154  85D6
 155  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 156  85D6
 157  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 158  85D7
 159  85D7              ;														DESCRIPCIÓN:
 160  85D7              ;
 161  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 162  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 163  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 164  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 165  85D7
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7              ; Gestión de ENTIDADES.
 172  85D7
 173  85D7 00 00        Puntero_store_entidades defw 0
 174  85D9 00 00        Puntero_restore_entidades defw 0
 175  85DB 00 00        Indice_restore defw 0
 176  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 177  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 178  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 179  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 180  85DF              ;														; _ (Numero_de_malotes)="0".
 181  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 182  85E1              ;														; _variable para almacenar lo posición del puntero_
 183  85E1              ; 														; _de pila, SP.
 184  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 185  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 186  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 188  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 189  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 190  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 191  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 192  85E7
 193  85E7              ; Gestión de Disparos.
 194  85E7
 195  85E7 00           Numero_de_disparotes db 0
 196  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 197  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 198  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 199  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 200  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 201  85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 202  85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 203  85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 204  85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 205  85F3
 206  85F3
 207  85F3              ; Gestión de FRAMES.
 208  85F3
 209  85F3 00           Switch db 0
 210  85F4
 211  85F4              ; Variables de Raster y localización en pantalla.
 212  85F4
 213  85F4 00 FF        Temp_Raster defw $ff00
 214  85F6
 215  85F6              ; Rutina principal *************************************************************************************************************************************************************************
 216  85F6              ;
 217  85F6              ;	14/11/22
 218  85F6
 219  85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 220  85F9
 221  85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 222  85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 223  85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 224  85FF F3           	DI
 225  8600
 226  8600 3E 07        	ld a,%00000111
 227  8602 CD 22 92     	call Cls
 228  8605
 229  8605              ;	call Pinta_FILAS
 230  8605
 231  8605 CD 5E 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 232  8608
 233  8608 21 DD 85     	ld hl,Numero_de_entidades
 234  860B 46           	ld b,(hl)
 235  860C 04           	inc b
 236  860D 05           	dec b
 237  860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 238  8610
 239  8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 240  8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 241  8610              ;	Pintamos el resto de entidades:
 242  8610
 243  8610 CD 57 87     	call Inicia_punteros_de_entidades
 244  8613
 245  8613              ;	INICIA ENTIDADES!!!!!
 246  8613
 247  8613 C5           1 push bc  												; Guardo el contador de entidades.
 248  8614 CD B1 87      	call Inicia_Puntero_objeto
 249  8617 CD 72 8C     	call Draw
 250  861A CD A0 7F     	call Guarda_foto_registros
 251  861D CD F9 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 252  8620 C1           	pop bc
 253  8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 254  8623
 255  8623              ; 	INICIA AMADEUS!!!!!
 256  8623
 257  8623 CD 3A 88     3 call Restore_Amadeus
 258  8626 CD B1 87     	call Inicia_Puntero_objeto
 259  8629 CD 72 8C     	call Draw
 260  862C CD A0 7F     	call Guarda_foto_registros
 261  862F CD 4C 88     	call Store_Amadeus
 262  8632
 263  8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 264  8632
 265  8632 CD 6D 87     	call Inicia_Puntero_Disparo_Entidades
 266  8635 CD 74 87     	call Inicia_Puntero_Disparo_Amadeus
 267  8638
 268  8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 269  8638
 270  8638 CD 57 87     	call Inicia_punteros_de_entidades
 271  863B CD 28 88     	call Restore_Primera_entidad
 272  863E
 273  863E 3A DD 85     	ld a,(Numero_de_entidades)
 274  8641 3C           	inc a
 275  8642 32 DE 85     	ld (Numero_de_malotes),a
 276  8645
 277  8645 FB           2 ei
 278  8646 18 FD        	jr 2B
 279  8648
 280  8648              ; -----------------------------------------------------------------------------------
 281  8648
 282  8648              Frame
 283  8648
 284  8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 285  8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 286  8648
 287  8648 3E 02            ld a,2
 288  864A D3 FE            out ($fe),a
 289  864C CD 76 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
 290  864F CD AF 8F     	call Extrae_foto_disparos
 291  8652 3E 01            ld a,1
 292  8654 D3 FE            out ($fe),a
 293  8656
 294  8656              ; ----------------------------------------------------------------------
 295  8656
 296  8656              ;	Existe colisión?????
 297  8656
 298  8656 3A EC 85     	ld a,(Impacto2)
 299  8659 A7           	and a
 300  865A 28 02        	jr z,5F
 301  865C
 302  865C              ; A="1" Impacto en entidad por disparo de Amadeus.
 303  865C              ; A="2"	Impacto en Amadeus por disparo en entidad.
 304  865C
 305  865C 18 FE        	jr $
 306  865E
 307  865E AF           5 xor a
 308  865F 32 EC 85     	ld (Impacto2),a										; Flag (Impacto) a "0".
 309  8662
 310  8662 CD 04 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 311  8665 CD 22 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 312  8668
 313  8668 21 00 70     	ld hl,Album_de_fotos
 314  866B 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 315  866E              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 316  866E 3A DD 85         ld a,(Numero_de_entidades)
 317  8671 47               ld b,a
 318  8672 A7           	and a
 319  8673 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 320  8675
 321  8675 C5           2 push bc
 322  8676 CD C2 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 323  8679
 324  8679 3A C9 85     	ld a,(Ctrl_0)
 325  867C CB 67        	bit 4,a
 326  867E 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 327  8680
 328  8680              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 329  8680              ; Las entidades sólo generan disparo cuando se mueven.
 330  8680              ; 16/02/23.
 331  8680              ; [[[
 332  8680 CD 95 88     	call Detecta_disparo_entidad
 333  8683              ; ]]]
 334  8683 CD 1E 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 335  8686
 336  8686 21 C9 85     1 ld hl,Ctrl_0
 337  8689 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 338  868B AF           	xor a
 339  868C 32 CA 85     	ld (Obj_dibujado),a
 340  868F
 341  868F CD F9 87     6 call Store_Restore_entidades
 342  8692 C1           	pop bc
 343  8693 10 E0        	djnz 2B
 344  8695
 345  8695              ; Tras la gestión de las entidades, ... AMADEUS.
 346  8695
 347  8695 CD 3A 88     4 call Restore_Amadeus
 348  8698 CD EF 86     	call Mov_Amadeus
 349  869B 3A C9 85     	ld a,(Ctrl_0)
 350  869E CB 67        	bit 4,a
 351  86A0 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 352  86A2 CD 1E 87     	call Guarda_foto_entidad_a_pintar
 353  86A5
 354  86A5 21 C9 85     3 ld hl,Ctrl_0
 355  86A8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 356  86AA AF           	xor a
 357  86AB 32 CA 85     	ld (Obj_dibujado),a
 358  86AE CD 4C 88     	call Store_Amadeus
 359  86B1
 360  86B1              ; -----
 361  86B1
 362  86B1 CD 57 87     	call Inicia_punteros_de_entidades
 363  86B4 CD 28 88     	call Restore_Primera_entidad
 364  86B7
 365  86B7              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 366  86B7
 367  86B7 CD 7B 87     	call Calcula_numero_de_malotes
 368  86BA CD 93 87     	call Calcula_numero_de_disparotes
 369  86BD
 370  86BD 3E 04        	ld a,4
 371  86BF D3 FE        	out ($fe),a
 372  86C1 C9           	ret
 373  86C2
 374  86C2              ; --------------------------------------------------------------------------------------------------------------
 375  86C2              ;
 376  86C2              ;	27/03/23
 377  86C2
 378  86C2              Mov_obj
 379  86C2
 380  86C2              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 381  86C2
 382  86C2 AF           	xor a
 383  86C3 32 CA 85     	ld (Obj_dibujado),a
 384  86C6 CD 28 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 385  86C9              ;														; Obj_dibujado="0".
 386  86C9              ; Movemos Entidades malignas.
 387  86C9
 388  86C9 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 389  86CC 24           	inc h                                               ; Salimos de la rutina.
 390  86CD 25           	dec h
 391  86CE C8           	ret z
 392  86CF
 393  86CF CD 10 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 394  86D2
 395  86D2 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 396  86D5 CB 67        	bit 4,a
 397  86D7 C8           	ret z
 398  86D8
 399  86D8              ; Ha habido desplazamiento de la entidad maligna. :-).
 400  86D8              ; Ha llegado a zona de AMADEUS ???
 401  86D8
 402  86D8 3A A2 85     	ld a,(Coordenada_y)
 403  86DB FE 14        	cp $14
 404  86DD D4 51 8A     	call nc, Detecta_colision_nave_entidad
 405  86E0
 406  86E0              ; ---------
 407  86E0
 408  86E0 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 409  86E2 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 410  86E5 CD 28 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 411  86E8 CD 3F 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 412  86EB CD 0E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 413  86EE C9           	ret													; _de la misma.
 414  86EF
 415  86EF              ; --------------------------------------------------------------------------------------------------------------
 416  86EF              ;
 417  86EF              ;	29/1/23
 418  86EF
 419  86EF              Mov_Amadeus
 420  86EF
 421  86EF AF           	xor a
 422  86F0 32 CA 85     	ld (Obj_dibujado),a
 423  86F3 CD 28 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 424  86F6              ;														; Obj_dibujado="0".
 425  86F6              ; Movemos Amadeus.
 426  86F6
 427  86F6 CD 72 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 428  86F9 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 429  86FC CB 67        	bit 4,a
 430  86FE C8           	ret z
 431  86FF
 432  86FF              ; ---------
 433  86FF
 434  86FF 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 435  8701 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 436  8704 CD 28 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 437  8707 CD 3F 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 438  870A CD 0E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 439  870D C9           	ret													; _de la nave.
 440  870E
 441  870E              ; --------------------------------------------------------------------------------------------------------------
 442  870E              ;
 443  870E              ;	31/01/23
 444  870E              ;
 445  870E              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 446  870E
 447  870E              Guarda_foto_entidad_a_borrar
 448  870E
 449  870E CD 4C 8F     	call Prepara_draw
 450  8711 CD 86 8E     	call calcula_CColumnass
 451  8714 CD BD 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 452  8717 CD 12 8F     	call Define_rutina_de_impresion
 453  871A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 454  871D C9           	ret
 455  871E
 456  871E              ; --------------------------------------------------------------------------------------------------------------
 457  871E              ;
 458  871E              ;	31/01/23
 459  871E              ;
 460  871E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 461  871E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 462  871E
 463  871E              Guarda_foto_entidad_a_pintar
 464  871E
 465  871E CD 4B 87     	call Repone_pintar
 466  8721 CD 72 8C     	call Draw
 467  8724 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 468  8727 C9           	ret
 469  8728
 470  8728              ; --------------------------------------------------------------------------------------------------------------
 471  8728              ;
 472  8728              ;
 473  8728
 474  8728 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 475  872B 3A CA 85     	ld a,(Obj_dibujado)
 476  872E A7           	and a
 477  872F 28 05        	jr z,1F
 478  8731 11 BF 85     	ld de,Variables_de_pintado
 479  8734 18 03        	jr 2F
 480  8736 11 B5 85     1 ld de,Variables_de_borrado
 481  8739 01 08 00     2 ld bc,8
 482  873C ED B0        	ldir
 483  873E C9           	ret
 484  873F
 485  873F              ; --------------------------------------------------------------------------------------------------------------
 486  873F
 487  873F 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 488  8742 11 9B 85     	ld de,Filas
 489  8745 01 08 00     	ld bc,8
 490  8748 ED B0        	ldir
 491  874A C9           	ret
 492  874B
 493  874B 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 494  874E 11 9B 85     	ld de,Filas
 495  8751 01 08 00     	ld bc,8
 496  8754 ED B0        	ldir
 497  8756 C9           	ret
 498  8757
 499  8757              ; *************************************************************************************************************************************************************
 500  8757              ;
 501  8757              ; 8/1/23
 502  8757              ;
 503  8757              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 504  8757              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 505  8757              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 506  8757
 507  8757              ; Destruye HL y DE !!!!!
 508  8757
 509  8757              Inicia_punteros_de_entidades
 510  8757
 511  8757 21 68 84     	ld hl,Indice_de_entidades
 512  875A CD AB 87         call Extrae_address
 513  875D 22 D7 85         ld (Puntero_store_entidades),hl
 514  8760 21 6A 84     	ld hl,Indice_de_entidades+2
 515  8763 22 DB 85     	ld (Indice_restore),hl
 516  8766 CD AB 87     	call Extrae_address
 517  8769 22 D9 85     	ld (Puntero_restore_entidades),hl
 518  876C C9               ret
 519  876D
 520  876D              ; *************************************************************************************************************************************************************
 521  876D              ;
 522  876D              ; 8/1/23
 523  876D              ;
 524  876D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 525  876D
 526  876D 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 527  8770 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 528  8773 C9           	ret
 529  8774 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 530  8777 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 531  877A C9           	ret
 532  877B
 533  877B              ; -------------------------------------------------------------------------------------------------------------
 534  877B              ;
 535  877B              ; 28/2/23
 536  877B              ;
 537  877B
 538  877B              Calcula_numero_de_malotes
 539  877B
 540  877B 21 00 70     	ld hl,Album_de_fotos
 541  877E EB           	ex de,hl
 542  877F 2A E3 85     	ld hl,(Stack_snapshot)
 543  8782
 544  8782 06 00        	ld b,0
 545  8784 7D           	ld a,l
 546  8785 93           	sub e
 547  8786 28 07        	jr z,1F
 548  8788
 549  8788              ; Nº de malotes no es "0".
 550  8788
 551  8788 D6 06        2 sub 6
 552  878A 04           	inc b
 553  878B A7           	and a
 554  878C 20 FA        	jr nz,2B
 555  878E 78           	ld a,b
 556  878F
 557  878F 32 DE 85     1 ld (Numero_de_malotes),a
 558  8792 C9           	ret
 559  8793
 560  8793              ; -------------------------------------------------------------------------------------------------------------
 561  8793              ;
 562  8793              ; 28/2/23
 563  8793              ;
 564  8793
 565  8793              Calcula_numero_de_disparotes
 566  8793
 567  8793 21 60 70     	ld hl,Album_de_fotos_disparos
 568  8796 EB           	ex de,hl
 569  8797 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 570  879A
 571  879A 06 00        	ld b,0
 572  879C 7D           	ld a,l
 573  879D 93           	sub e
 574  879E 28 07        	jr z,1F
 575  87A0
 576  87A0              ; Nº de malotes no es "0".
 577  87A0
 578  87A0 D6 06        2 sub 6
 579  87A2 04           	inc b
 580  87A3 A7           	and a
 581  87A4 20 FA        	jr nz,2B
 582  87A6 78           	ld a,b
 583  87A7
 584  87A7 32 E7 85     1 ld (Numero_de_disparotes),a
 585  87AA C9           	ret
 586  87AB              ; *************************************************************************************************************************************************************
 587  87AB              ;
 588  87AB              ; 20/10/22
 589  87AB              ;
 590  87AB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 591  87AB              ;
 592  87AB              ; Destruye el puntero y DE !!!!!
 593  87AB
 594  87AB 5E           Extrae_address ld e,(hl)
 595  87AC 23           	inc hl
 596  87AD 56           	ld d,(hl)
 597  87AE 2B           	dec hl
 598  87AF EB           	ex de,hl
 599  87B0 C9           	ret
 600  87B1
 601  87B1              ; *************************************************************************************************************************************************************
 602  87B1              ;
 603  87B1              ;	7/2/23
 604  87B1              ;
 605  87B1              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 606  87B1              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 607  87B1              ;
 608  87B1              ;   Destruye HL y BC !!!!!,
 609  87B1              ;
 610  87B1              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 611  87B1              ;					"0" ..... Izquierda.
 612  87B1
 613  87B1              Inicia_Puntero_objeto
 614  87B1
 615  87B1 3A AF 85     	ld a,(Cuad_objeto)
 616  87B4 E6 01        	and 1
 617  87B6 F5           	push af
 618  87B7 CC D5 87     	call z,Inicia_puntero_objeto_izq
 619  87BA F1           	pop af
 620  87BB 28 2B        	jr z,1F
 621  87BD CD C2 87     	call Inicia_puntero_objeto_der
 622  87C0 18 26        	jr 1F
 623  87C2
 624  87C2              ; Arrancamos desde la parte izquierda de la pantalla.
 625  87C2              ; Iniciamos (Indice_Sprite_der).
 626  87C2
 627  87C2 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 628  87C5 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 629  87C8 CD AB 87     	call Extrae_address
 630  87CB 22 9F 85     	ld (Puntero_objeto),hl
 631  87CE
 632  87CE 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 633  87D1              ;	call Extrae_address
 634  87D1 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 635  87D4 C9           	ret
 636  87D5
 637  87D5              ; Arrancamos desde la parte derecha de la pantalla.
 638  87D5              ; Iniciamos (Indice_Sprite_izq).
 639  87D5
 640  87D5 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 641  87D8 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 642  87DB CD AB 87     	call Extrae_address
 643  87DE 22 9F 85     	ld (Puntero_objeto),hl
 644  87E1
 645  87E1 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 646  87E4              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 647  87E4 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 648  87E7 C9           	ret
 649  87E8
 650  87E8              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 651  87E8
 652  87E8 21 38 83     1 ld hl,Amadeus
 653  87EB ED 4B 9F 85  	ld bc,(Puntero_objeto)
 654  87EF B7 ED 42     	sub hl,bc
 655  87F2 C0           	ret nz
 656  87F3 21 C9 85     	ld hl,Ctrl_0
 657  87F6 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 658  87F8 C9           	ret 												; _de nuestra nave en los extremos.
 659  87F9
 660  87F9              ; *************************************************************************************************************************************************************
 661  87F9              ;
 662  87F9              ;	8/1/23
 663  87F9              ;
 664  87F9              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 665  87F9              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 666  87F9
 667  87F9              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 668  87F9              ;	_de la 2ª y 3ª entidad respectivamente.
 669  87F9
 670  87F9              Store_Restore_entidades
 671  87F9
 672  87F9 E5           	push hl
 673  87FA D5           	push de
 674  87FB C5            	push bc
 675  87FC
 676  87FC              ;	STORE !!!!!
 677  87FC              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
 678  87FC
 679  87FC 21 9B 85     	ld hl,Filas
 680  87FF ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 681  8803 01 3B 00     	ld bc,59
 682  8806 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 683  8808
 684  8808              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 685  8808
 686  8808 2A D9 85     	ld hl,(Puntero_restore_entidades)
 687  880B 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 688  880E 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 689  8811 01 3B 00     	ld bc,59
 690  8814 ED B0        	ldir
 691  8816
 692  8816              ;	Incrementa RESTORE !!!!!
 693  8816
 694  8816 2A DB 85         ld hl,(Indice_restore)
 695  8819 23           	inc hl
 696  881A 23           	inc hl
 697  881B 22 DB 85     	ld (Indice_restore),hl
 698  881E CD AB 87         call Extrae_address
 699  8821 22 D9 85         ld (Puntero_restore_entidades),hl
 700  8824 C1           	pop bc
 701  8825 D1           	pop de
 702  8826 E1           	pop hl
 703  8827 C9           	ret
 704  8828
 705  8828              ; **************************************************************************************************
 706  8828              ;
 707  8828              ;	29/10/22
 708  8828              ;
 709  8828              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 710  8828
 711  8828 E5           Restore_Primera_entidad push hl
 712  8829 D5           	push de
 713  882A C5            	push bc
 714  882B 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 715  882E 11 9B 85     	ld de,Filas
 716  8831 01 3B 00     	ld bc,59
 717  8834 ED B0        	ldir
 718  8836 C1           	pop bc
 719  8837 D1           	pop de
 720  8838 E1           	pop hl
 721  8839 C9           	ret
 722  883A
 723  883A              ; **************************************************************************************************
 724  883A              ;
 725  883A              ;	25/01/23
 726  883A              ;
 727  883A              ;	Restore_Amadeus
 728  883A              ;
 729  883A              ;	Cargamos en DRAW los parámetros de Amadeus.
 730  883A              ;
 731  883A
 732  883A E5           Restore_Amadeus	push hl
 733  883B D5           	push de
 734  883C C5            	push bc
 735  883D 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 736  8840 11 9B 85     	ld de,Filas
 737  8843 01 3B 00     	ld bc,59
 738  8846 ED B0        	ldir
 739  8848 C1           	pop bc
 740  8849 D1           	pop de
 741  884A E1           	pop hl
 742  884B C9           	ret
 743  884C
 744  884C              ; *************************************************************************************************************************************************************
 745  884C              ;
 746  884C              ;	29/01/23
 747  884C              ;
 748  884C              ;	Store_Amadeus
 749  884C              ;
 750  884C              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 751  884C              ;
 752  884C
 753  884C E5           Store_Amadeus push hl
 754  884D D5           	push de
 755  884E C5            	push bc
 756  884F 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 757  8852 11 74 84     	ld de,Amadeus_db
 758  8855 01 3B 00     	ld bc,59
 759  8858 ED B0        	ldir
 760  885A C1           	pop bc
 761  885B D1           	pop de
 762  885C E1           	pop hl
 763  885D C9           	ret
 764  885E
 765  885E              ; **************************************************************************************************
 766  885E
 767  885E              ; Teclado.
 768  885E
 769  885E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 770  8860 DB FE        	in a,($fe)
 771  8862 E6 01        	and $01
 772  8864 28 02        	jr z,1f
 773  8866 18 F6        	jr Pulsa_ENTER
 774  8868 C9           1 ret
 775  8869
 776  8869              ; **************************************************************************************************
 777  8869              ;
 778  8869              ; Temporización.
 779  8869
 780  8869              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 781  8869              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 782  8869              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 783  8869              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 784  8869
 785  8869              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 786  8869              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 787  8869              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 788  8869
 789  8869              ; A partir de $4f61 no hace falta DELAY.
 790  8869
 791  8869              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 792  8869
 793  8869 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 794  886C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 795  886D 78           	LD A,B
 796  886E A7           	AND A
 797  886F 20 FB        	JR NZ,wait
 798  8871 C9           	RET
 799  8872
 800  8872              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 801  8872              ;
 802  8872              ;	5/3/23
 803  8872              ;
 804  8872              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 805  8872
 806  8872              Movimiento_Amadeus
 807  8872
 808  8872              ; Disparo.
 809  8872
 810  8872 3E F7        	ld a,$f7												; "5" para disparar.
 811  8874 DB FE        	in a,($fe)
 812  8876 E6 10        	and $10
 813  8878 CC D2 88     	call z,Genera_disparo
 814  887B
 815  887B 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 816  887D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 817  887F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 818  8881 CC B0 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
 819  8884 3E F7        	ld a,$f7
 820  8886 DB FE        	in a,($fe)
 821  8888 E6 01        	and $01
 822  888A C8           	ret z
 823  888B
 824  888B 3E F7        	ld a,$f7
 825  888D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 826  888F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 827  8891 CC 92 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 828  8894 C9           	ret
 829  8895
 830  8895              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 831  8895              ;
 832  8895              ;	Rutina provisional para que los malotes cagen balas.
 833  8895
 834  8895 3E 7F        Detecta_disparo_entidad ld a,$7f
 835  8897 DB FE        	in a,($fe)
 836  8899 E6 01        	and 1
 837  889B C0           	ret nz
 838  889C CD D2 88     	call Genera_disparo
 839  889F C9           	ret
 840  88A0
 841  88A0              ; Pinta indicadores de FILAS. ------------------------------------------------------
 842  88A0
 843  88A0 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 844  88A3
 845  88A3              ; ----------
 846  88A3 06 20        	ld b,32
 847  88A5 E5           2 push hl
 848  88A6 C5           	push bc
 849  88A7              ; ----------
 850  88A7
 851  88A7 06 BF        	ld b,$bf
 852  88A9 36 80        1 ld (hl),%10000000
 853  88AB CD 58 8F     	call NextScan
 854  88AE 10 F9        	djnz 1B
 855  88B0
 856  88B0              ; ----------
 857  88B0 C1           	pop bc
 858  88B1 E1           	pop hl
 859  88B2 2C           	inc l
 860  88B3 10 F0        	djnz 2B
 861  88B5              ; ----------
 862  88B5
 863  88B5 06 03        	ld b,3
 864  88B7 21 00 47         ld hl,$4700
 865  88BA CD C0 88     3 call Bucle_1
 866  88BD 10 FB            djnz 3B
 867  88BF C9               ret
 868  88C0
 869  88C0 C5           Bucle_1 push bc
 870  88C1 E5                   push hl
 871  88C2 D1                   pop de
 872  88C3 13                   inc de
 873  88C4 01 FF 00             ld bc,255
 874  88C7 36 FF                ld (hl),255
 875  88C9 ED B0                ldir
 876  88CB 23                   inc hl
 877  88CC 3E 07                ld a,7
 878  88CE 84                   add a,h
 879  88CF 67                   ld h,a
 880  88D0 C1                   pop bc
 881  88D1 C9                   ret
 882  88D2
 883  88D2              ; ---------------------------------------------------------------
 884  88D2
 885  88D2              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88D2              ; ******************************************************************************************************************************************************************************************
   2+ 88D2              ;
   3+ 88D2              ;   27/03/23
   4+ 88D2              ;
   5+ 88D2              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88D2              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88D2              ;
   8+ 88D2              ;
   9+ 88D2              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88D2              ;
  11+ 88D2              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88D2              ;               _ hacen las entidades hacia abajo.
  13+ 88D2              ;
  14+ 88D2              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88D2              ;
  16+ 88D2              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88D2              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88D2              ;
  19+ 88D2              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88D2              ;           _ la bala.
  21+ 88D2              ;
  22+ 88D2              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88D2              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88D2              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88D2              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88D2              ;           _ en el momento de generarse la bala)).
  27+ 88D2
  28+ 88D2              Genera_disparo
  29+ 88D2
  30+ 88D2              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88D2              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88D2              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88D2              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88D2              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
  35+ 88D2              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
  36+ 88D2              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88D2
  38+ 88D2              ; Exclusiones:
  39+ 88D2
  40+ 88D2 3A D2 85         ld a,(Columnas)
  41+ 88D5 47               ld b,a
  42+ 88D6 3A 9C 85         ld a,(Columns)
  43+ 88D9 B8               cp b
  44+ 88DA C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88DB
  46+ 88DB              ; ----- ----- -----
  47+ 88DB
  48+ 88DB 3A C9 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
  49+ 88DE CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
  50+ 88E0 20 06            jr nz,16F
  51+ 88E2
  52+ 88E2 3A A2 85         ld a,(Coordenada_y)
  53+ 88E5 FE 14            cp $14
  54+ 88E7 D0               ret nc
  55+ 88E8
  56+ 88E8              ; ----- ----- -----
  57+ 88E8
  58+ 88E8              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  59+ 88E8
  60+ 88E8 21 F2 83     16 ld hl,ON_Disparo_2A
  61+ 88EB CD AB 87         call Extrae_address
  62+ 88EE 24               inc h
  63+ 88EF 25               dec h
  64+ 88F0 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  65+ 88F2
  66+ 88F2 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
  67+ 88F5 A7               and a
  68+ 88F6 ED 52            sbc hl,de
  69+ 88F8 D0               ret nc
  70+ 88F9
  71+ 88F9              ; ----- ----- -----
  72+ 88F9
  73+ 88F9 21 00 80     14 ld hl,Indice_disparo
  74+ 88FC 3A A3 85         ld a,(CTRL_DESPLZ)
  75+ 88FF 4F               ld c,a
  76+ 8900 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  77+ 8902              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  78+ 8902              ;                                            ""        ""       "f9", B="1"
  79+ 8902              ;                                            ""        ""       "fb", B="2"
  80+ 8902              ;                                            ""        ""       "fb", B="3"
  81+ 8902 A7               and a
  82+ 8903 28 10            jr z,1F
  83+ 8905 E6 01            and 1
  84+ 8907 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  85+ 8908
  86+ 8908 79               ld a,c
  87+ 8909 16 F9            ld d,$f9
  88+ 890B 23           2 inc hl
  89+ 890C 23               inc hl
  90+ 890D 04               inc b
  91+ 890E BA               cp d
  92+ 890F 28 04            jr z,1F
  93+ 8911 14               inc d
  94+ 8912 14               inc d
  95+ 8913 18 F6            jr 2B
  96+ 8915
  97+ 8915 CD AB 87     1 call Extrae_address
  98+ 8918 E5               push hl
  99+ 8919 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 100+ 891B DD 21 EB 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 101+ 891F
 102+ 891F              ;	Se cumplen las condiciones necesarias para generar un disparo.
 103+ 891F              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 104+ 891F
 105+ 891F 3A AF 85     	ld a,(Cuad_objeto)
 106+ 8922 FE 02            cp 2
 107+ 8924 38 60            jr c,3F
 108+ 8926 28 5E            jr z,3F
 109+ 8928
 110+ 8928              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 111+ 8928
 112+ 8928 E6 01            and 1
 113+ 892A 28 2D            jr z,4F
 114+ 892C
 115+ 892C              ; 	Estamos en el 3er cuadrante de pantalla.
 116+ 892C              ; 	3er CUAD. ----- ----- ----- ----- -----
 117+ 892C              ;
 118+ 892C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 119+ 892C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 120+ 892C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 121+ 892C
 122+ 892C 2A 9D 85     	ld hl,(Posicion_actual)
 123+ 892F
 124+ 892F              ;   Amadeus o entidad ???.
 125+ 892F
 126+ 892F 3A C9 85         ld a,(Ctrl_0)
 127+ 8932 CB 77            bit 6,a
 128+ 8934 28 0D            jr z,8F
 129+ 8936
 130+ 8936              ; 	Dispara Amadeus.
 131+ 8936
 132+ 8936 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 133+ 8938 CD 67 8F         call PreviousScan
 134+ 893B CD 67 8F         call PreviousScan
 135+ 893E
 136+ 893E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 137+ 893E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 138+ 893E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 139+ 893E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 140+ 893E
 141+ 893E CD B0 89         call Ajusta_disparo_parte_izquierda
 142+ 8941 18 0E            jr 10F
 143+ 8943
 144+ 8943              ; 	Dispara Entidad.
 145+ 8943
 146+ 8943 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
 147+ 8945
 148+ 8945              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 149+ 8945              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 150+ 8945
 151+ 8945 C5               push bc
 152+ 8946 06 10            ld b,16
 153+ 8948 CD 58 8F     9 call NextScan
 154+ 894B 10 FB            djnz 9B
 155+ 894D C1               pop bc
 156+ 894E
 157+ 894E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 158+ 894E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 159+ 894E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 160+ 894E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 161+ 894E
 162+ 894E CD B0 89         call Ajusta_disparo_parte_izquierda
 163+ 8951
 164+ 8951 CD 25 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 165+ 8954              ;                                                   ; _al generar el disparo.
 166+ 8954
 167+ 8954              ; 	LLegados a este punto tendremos:
 168+ 8954              ;
 169+ 8954              ;       Puntero_objeto_disparo en IY.
 170+ 8954              ;       Rutinas_de_impresion en IX.
 171+ 8954              ;       Puntero_de_impresion en HL.
 172+ 8954              ;       Impacto/Dirección en BC.
 173+ 8954
 174+ 8954 CD B8 89         call Almacena_disparo
 175+ 8957 18 4F            jr 6F                                           ; RET.
 176+ 8959
 177+ 8959
 178+ 8959              ; 	Estamos en el 4º cuadrante de pantalla.
 179+ 8959              ; 	4º CUAD. ----- ----- ----- ----- -----
 180+ 8959              ;
 181+ 8959              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 182+ 8959              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 183+ 8959              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 184+ 8959
 185+ 8959 2A 9D 85     4 ld hl,(Posicion_actual)
 186+ 895C
 187+ 895C              ;   Amadeus o entidad ???.
 188+ 895C
 189+ 895C 3A C9 85         ld a,(Ctrl_0)
 190+ 895F CB 77            bit 6,a
 191+ 8961 28 0D            jr z,11F
 192+ 8963
 193+ 8963              ; 	Dispara Amadeus.
 194+ 8963
 195+ 8963 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 196+ 8965 CD 67 8F         call PreviousScan
 197+ 8968 CD 67 8F         call PreviousScan
 198+ 896B
 199+ 896B              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 200+ 896B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 201+ 896B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 202+ 896B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 203+ 896B
 204+ 896B CD A9 89         call Ajusta_disparo_parte_derecha
 205+ 896E 18 0E            jr 13F
 206+ 8970
 207+ 8970              ; 	Dispara Entidad.
 208+ 8970
 209+ 8970 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
 210+ 8972
 211+ 8972              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 212+ 8972              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 213+ 8972
 214+ 8972 C5               push bc
 215+ 8973
 216+ 8973 06 10            ld b,16
 217+ 8975 CD 58 8F     12 call NextScan
 218+ 8978 10 FB            djnz 12B
 219+ 897A
 220+ 897A C1               pop bc
 221+ 897B
 222+ 897B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 223+ 897B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 224+ 897B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 225+ 897B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 226+ 897B
 227+ 897B CD A9 89         call Ajusta_disparo_parte_derecha
 228+ 897E
 229+ 897E CD 25 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 230+ 8981              ;                                                     ; _al generar el disparo.
 231+ 8981
 232+ 8981              ; LLegados a este punto tendremos:
 233+ 8981              ;
 234+ 8981              ;       Puntero_objeto_disparo en IY.
 235+ 8981              ;       Rutinas_de_impresion en IX.
 236+ 8981              ;       Puntero_de_impresion en HL.
 237+ 8981              ;       Impacto/Dirección en BC.
 238+ 8981
 239+ 8981 CD B8 89         call Almacena_disparo
 240+ 8984 18 22            jr 6F                                           ; RET.
 241+ 8986
 242+ 8986              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 243+ 8986
 244+ 8986 28 11        3 jr z,5F
 245+ 8988
 246+ 8988              ; 	1er CUAD. ----- ----- ----- ----- -----
 247+ 8988              ;
 248+ 8988              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 249+ 8988              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 250+ 8988              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 251+ 8988              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 252+ 8988
 253+ 8988              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 254+ 8988              ;	   ""        ""       "f9", B="1"
 255+ 8988              ;	   ""        ""       "fb", B="2"
 256+ 8988              ; 	   ""        ""       "fb", B="3"
 257+ 8988
 258+ 8988 2A 9D 85     	ld hl,(Posicion_actual)
 259+ 898B CD 58 8F     	call NextScan
 260+ 898E
 261+ 898E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 262+ 898E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 263+ 898E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 264+ 898E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 265+ 898E
 266+ 898E CD B0 89         call Ajusta_disparo_parte_izquierda
 267+ 8991
 268+ 8991              ; 	No se produce impacto. B="$80"
 269+ 8991              ; 	Dirección del proyectil hacia abajo. C="$80"
 270+ 8991
 271+ 8991 01 80 80         ld bc,$8080
 272+ 8994
 273+ 8994              ; 	LLegados a este punto tendremos:
 274+ 8994              ;
 275+ 8994              ;       Puntero_objeto_disparo en IY.
 276+ 8994              ;       Rutinas_de_impresion en IX.
 277+ 8994              ;       Puntero_de_impresion en HL.
 278+ 8994              ;       Impacto/Dirección en BC.
 279+ 8994
 280+ 8994 CD B8 89         call Almacena_disparo
 281+ 8997 18 0F            jr 6F                                           ; RET.
 282+ 8999
 283+ 8999              ; 	Estamos en el 2º cuadrante de pantalla.
 284+ 8999              ; 	2º CUAD. ----- ----- ----- ----- -----
 285+ 8999              ;
 286+ 8999              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 287+ 8999              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 288+ 8999              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 289+ 8999              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 290+ 8999
 291+ 8999 2A 9D 85     5 ld hl,(Posicion_actual)
 292+ 899C CD 58 8F     	call NextScan
 293+ 899F
 294+ 899F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 295+ 899F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 296+ 899F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 297+ 899F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 298+ 899F
 299+ 899F CD A9 89         call Ajusta_disparo_parte_derecha
 300+ 89A2
 301+ 89A2              ; 	No se produce impacto. B="$80"
 302+ 89A2              ; 	Dirección del proyectil hacia abajo. C="80"
 303+ 89A2
 304+ 89A2 01 80 80     15 ld bc,$8080
 305+ 89A5
 306+ 89A5              ; 	LLegados a este punto tendremos:
 307+ 89A5              ;
 308+ 89A5              ;       Puntero_objeto_disparo en IY.
 309+ 89A5              ;       Rutinas_de_impresion en IX.
 310+ 89A5              ;       Puntero_de_impresion en HL.
 311+ 89A5              ;       Impacto/Dirección en BC.
 312+ 89A5
 313+ 89A5 CD B8 89         call Almacena_disparo
 314+ 89A8
 315+ 89A8 C9           6 ret
 316+ 89A9
 317+ 89A9              ; ----------------------------------------------------------------
 318+ 89A9              ;
 319+ 89A9              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 320+ 89A9              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 321+ 89A9              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 322+ 89A9
 323+ 89A9 78           Ajusta_disparo_parte_derecha ld a,b
 324+ 89AA FE 02            cp 2
 325+ 89AC 38 01            jr c,1F
 326+ 89AE 23               inc hl
 327+ 89AF C9           1 ret
 328+ 89B0
 329+ 89B0 78           Ajusta_disparo_parte_izquierda ld a,b
 330+ 89B1 FE 01        	cp 1
 331+ 89B3 20 01        	jr nz,1F
 332+ 89B5 2B           	dec hl
 333+ 89B6 2B           1 dec hl
 334+ 89B7 C9               ret
 335+ 89B8
 336+ 89B8              ; ----------------------------------------------------------------
 337+ 89B8              ;
 338+ 89B8              ;   25/02/23
 339+ 89B8              ;
 340+ 89B8              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 341+ 89B8              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 342+ 89B8
 343+ 89B8              Almacena_disparo
 344+ 89B8
 345+ 89B8 E5               push hl  										; HL contiene el puntero de impresión.
 346+ 89B9 F1               pop af
 347+ 89BA 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 348+ 89BB
 349+ 89BB 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 350+ 89BC E6 01            and 1
 351+ 89BE 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 352+ 89C0              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 353+ 89C0              ; 	Dispara AMADEUS.
 354+ 89C0
 355+ 89C0              ;	Comprobamos que a Amadeus aún le quedan disparos.
 356+ 89C0              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 357+ 89C0              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 358+ 89C0              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 359+ 89C0
 360+ 89C0 C5               push bc
 361+ 89C1 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 362+ 89C4 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 89C7 A7               and a
 364+ 89C8 ED 42            sbc hl,bc
 365+ 89CA CC 74 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 366+ 89CD C1               pop bc
 367+ 89CE 28 54            jr z,4F
 368+ 89D0
 369+ 89D0 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 370+ 89D3 23               inc hl
 371+ 89D4 23               inc hl
 372+ 89D5 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 373+ 89D8              ;                                                   ; _ Disparo_(+1).
 374+ 89D8 18 18            jr 2F
 375+ 89DA
 376+ 89DA              ; Dispara una entidad.
 377+ 89DA
 378+ 89DA C5           1 push bc
 379+ 89DB 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 380+ 89DE 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 89E1 A7               and a
 382+ 89E2 ED 42            sbc hl,bc
 383+ 89E4 CC 6D 87         call z,Inicia_Puntero_Disparo_Entidades
 384+ 89E7 C1               pop bc
 385+ 89E8 28 3A            jr z,4F
 386+ 89EA
 387+ 89EA 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 388+ 89ED 23               inc hl
 389+ 89EE 23               inc hl
 390+ 89EF 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 391+ 89F2              ;                                                   ; _ Disparo_(+1).
 392+ 89F2 CD AB 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 393+ 89F5              ;                                                   ; _ los 8 bytes que definen el disparo:
 394+ 89F5              ;
 395+ 89F5              ;                                                     Puntero_objeto_disparo en IY.
 396+ 89F5              ;                                                     Rutinas_de_impresion en IX.
 397+ 89F5              ;                                                     Puntero_de_impresion en HL.
 398+ 89F5              ;                                                     Impacto/Dirección en BC.
 399+ 89F5
 400+ 89F5 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 401+ 89F6 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 402+ 89F7 23               inc hl                                          ; _ al siguiente.
 403+ 89F8 A7               and a
 404+ 89F9 20 C0            jr nz,3B
 405+ 89FB
 406+ 89FB 08               ex af,af
 407+ 89FC ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 408+ 8A00 F9               ld sp,hl
 409+ 8A01
 410+ 8A01 DD E5            push ix                                         ; Rutina de impresión.
 411+ 8A03 F5               push af                                         ; Puntero de impresión.
 412+ 8A04 FD E5            push iy                                         ; Puntero objeto.
 413+ 8A06 C5               push bc                                         ; Control.
 414+ 8A07
 415+ 8A07 ED 7B DF 85      ld sp,(Stack)
 416+ 8A0B
 417+ 8A0B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 418+ 8A0B
 419+ 8A0B 21 D6 85     	ld hl,Ctrl_1
 420+ 8A0E CB C6        	set 0,(hl)
 421+ 8A10
 422+ 8A10 DD E5        	push ix
 423+ 8A12 E1               pop hl
 424+ 8A13 F5               push af
 425+ 8A14 DD E1            pop ix
 426+ 8A16
 427+ 8A16 CD A0 7F     	call Guarda_foto_registros
 428+ 8A19
 429+ 8A19 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 430+ 8A1C CB 86        	res 0,(hl)
 431+ 8A1E
 432+ 8A1E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 433+ 8A1E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 434+ 8A1E
 435+ 8A1E CD 74 87         call Inicia_Puntero_Disparo_Amadeus
 436+ 8A21 CD 6D 87         call Inicia_Puntero_Disparo_Entidades
 437+ 8A24
 438+ 8A24 C9           4 ret
 439+ 8A25
 440+ 8A25              ; ----------------------------------------------------------------
 441+ 8A25              ;
 442+ 8A25              ;   4/3/23
 443+ 8A25              ;
 444+ 8A25              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 445+ 8A25              ;   _ al generarse el disparo.
 446+ 8A25              ;
 447+ 8A25              ;       "$80" ..... No se produce colisión.
 448+ 8A25              ;       "$81" ..... Se produce colisión.
 449+ 8A25
 450+ 8A25              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 451+ 8A25              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 452+ 8A25
 453+ 8A25
 454+ 8A25 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 455+ 8A27 E5               push hl                                        ; Puntero de impresión.
 456+ 8A28 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 457+ 8A2A CD 41 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 458+ 8A2D E1               pop hl
 459+ 8A2E E5               push hl
 460+ 8A2F CD 58 8F         call NextScan
 461+ 8A32
 462+ 8A32 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 463+ 8A33 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 464+ 8A35 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 465+ 8A37              ;                                                  ; _ 2º scanline si esto es así.
 466+ 8A37 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 467+ 8A39 CD 41 8A         call Bucle_2
 468+ 8A3C
 469+ 8A3C 43           2 ld b,e
 470+ 8A3D E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 471+ 8A3E FD E1            pop iy
 472+ 8A40 C9               ret
 473+ 8A41
 474+ 8A41               ; ---------- ----------
 475+ 8A41
 476+ 8A41 06 02        Bucle_2 ld b,2
 477+ 8A43 FD 7E 00     2 ld a,(iy)
 478+ 8A46 A6               and (hl)
 479+ 8A47 28 02            jr z,1F
 480+ 8A49 1E 81            ld e,$81
 481+ 8A4B 23           1 inc hl
 482+ 8A4C FD 23            inc iy
 483+ 8A4E 10 F3            djnz 2B
 484+ 8A50 C9               ret
 485+ 8A51
 486+ 8A51              ; -------------------------------------------------------------------------------------------------------------
 487+ 8A51              ;
 488+ 8A51              ;   01/04/23
 489+ 8A51              ;
 490+ 8A51              ;
 491+ 8A51              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 492+ 8A51              ;   Vamos a comprobar si existe colisión con Amadeus. Consideramos que se produce colisión_
 493+ 8A51              ;   _ si hay contacto de los dos scanlines inferiores que forman la entidad con la nave.
 494+ 8A51              ;
 495+ 8A51              ;   INPUTS: IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
 496+ 8A51              ;           IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
 497+ 8A51
 498+ 8A51              Detecta_colision_nave_entidad
 499+ 8A51
 500+ 8A51              ; Antes de nada, averiguaremos si la entidad ocupa alguna de las columnas que ocupa Amadeus en pantalla.
 501+ 8A51              ; Guardamos las coordenadas_X de la entidad en el almacen:
 502+ 8A51
 503+ 8A51              ; Preparamos registros:
 504+ 8A51
 505+ 8A51 21 A1 85         ld hl,Filas+6
 506+ 8A54 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 507+ 8A55 23               inc hl
 508+ 8A56 23               inc hl
 509+ 8A57 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 510+ 8A58 43               ld b,e
 511+ 8A59 21 AF 85         ld hl,Filas+20
 512+ 8A5C 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 513+ 8A5D 21 F0 85         ld hl,Coordenadas_X_Entidad
 514+ 8A60 CD 5F 8C         call Guarda_coordenadas_X
 515+ 8A63
 516+ 8A63              ; Guardamos las coordenadas_X de Amadeus en el almacen:
 517+ 8A63
 518+ 8A63              ; Preparamos registros:
 519+ 8A63
 520+ 8A63 21 7A 84         ld hl,Amadeus_db+6
 521+ 8A66 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 522+ 8A67 23               inc hl
 523+ 8A68 23               inc hl
 524+ 8A69 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 525+ 8A6A 7B               ld a,e
 526+ 8A6B 08               ex af,af'
 527+ 8A6C
 528+ 8A6C 21 88 84         ld hl,Amadeus_db+20
 529+ 8A6F 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 530+ 8A70 21 ED 85         ld hl,Coordenadas_X_Amadeus
 531+ 8A73 CD 5F 8C         call Guarda_coordenadas_X
 532+ 8A76
 533+ 8A76              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 534+ 8A76              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 535+ 8A76
 536+ 8A76 04               inc b
 537+ 8A77 05               dec b
 538+ 8A78 28 04            jr z,5F
 539+ 8A7A 06 03            ld b,3
 540+ 8A7C 18 02            jr 6F
 541+ 8A7E 06 02        5 ld b,2
 542+ 8A80
 543+ 8A80 08           6 ex af,af'
 544+ 8A81 3C               inc a
 545+ 8A82 3D               dec a
 546+ 8A83 28 04            jr z,9F
 547+ 8A85 0E 03            ld c,3
 548+ 8A87 18 02            jr 10F
 549+ 8A89 0E 02        9 ld c,2
 550+ 8A8B 79           10 ld a,c
 551+ 8A8C 08               ex af,af'
 552+ 8A8D 11 F0 85         ld de,Coordenadas_X_Entidad
 553+ 8A90 1A           8 ld a,(de)
 554+ 8A91
 555+ 8A91 21 ED 85         ld hl,Coordenadas_X_Amadeus
 556+ 8A94 BE           7 cp (hl)
 557+ 8A95
 558+ 8A95 28 0B            jr z,11F
 559+ 8A97
 560+ 8A97 23               inc hl
 561+ 8A98 0D               dec c
 562+ 8A99 20 F9            jr nz,7B
 563+ 8A9B
 564+ 8A9B 13               inc de
 565+ 8A9C 08               ex af,af'
 566+ 8A9D 4F               ld c,a
 567+ 8A9E 08               ex af,af'
 568+ 8A9F
 569+ 8A9F 10 EF            djnz 8B
 570+ 8AA1
 571+ 8AA1 C9               ret
 572+ 8AA2
 573+ 8AA2              ; Si coinciden las columnas de la entidad con las de Amadeus, llamaremos a la rutina [Calcula_puntero_de_impresion]. Nos proporcionara:
 574+ 8AA2              ; Puntero_de_impresión de la entidad en IX y puntero_objeto en IY.
 575+ 8AA2
 576+ 8AA2 2A 9D 85     11 ld hl,(Posicion_actual)
 577+ 8AA5 CD BD 8E         call Calcula_puntero_de_impresion
 578+ 8AA8
 579+ 8AA8              ; Con estos datos podremos situar HL en el penúltimo scanline del puntero_de_impresión de la entidad y_
 580+ 8AA8              ; _ el registro IY en el 1er dato del penúltimo scanline que forma la entidad, (Puntero_objeto).
 581+ 8AA8
 582+ 8AA8 06 0E            ld b,14
 583+ 8AAA DD E5            push ix
 584+ 8AAC E1               pop hl
 585+ 8AAD CD 58 8F     1 call NextScan
 586+ 8AB0 10 FB            djnz 1B
 587+ 8AB2 E5               push hl
 588+ 8AB3 DD E1            pop ix                                         ; Puntero_de_impresion de la entidad implicada en el penúltimo scanline.
 589+ 8AB5
 590+ 8AB5 FD E5            push iy
 591+ 8AB7 E1               pop hl
 592+ 8AB8
 593+ 8AB8              ; Sumaremos 28/42 bytes en función de las (Columns) que formen la entidad.
 594+ 8AB8
 595+ 8AB8 3A 9C 85         ld a,(Columns)
 596+ 8ABB E6 01            and 1
 597+ 8ABD 20 05            jr nz,2F
 598+ 8ABF 01 1C 00         ld bc,28
 599+ 8AC2 18 03            jr 3F
 600+ 8AC4 01 2A 00     2 ld bc,42
 601+ 8AC7 A7           3 and a
 602+ 8AC8 ED 4A            adc hl,bc
 603+ 8ACA E5               push hl
 604+ 8ACB FD E1            pop iy                                          ; Puntero_objeto de la entidad implicada apuntando al 1er dato del penúltimo_
 605+ 8ACD              ;                                                   ; _ scanline.
 606+ 8ACD DD E5            push ix
 607+ 8ACF E1               pop hl
 608+ 8AD0
 609+ 8AD0 E5               push hl
 610+ 8AD1
 611+ 8AD1              ; Llegados a este punto, HL apunta al puntero de impresión del penúltimo scanline de pantalla de la entidad.
 612+ 8AD1              ; IY apunta a los "datos" del penúltimo scanline que forman la entidad.
 613+ 8AD1
 614+ 8AD1 1E 00            ld e,0                                         ; E,(Impacto)="0".
 615+ 8AD3 CD F2 8A         call Bucle_3                                   ; Comprobamos el 1er scanline.
 616+ 8AD6
 617+ 8AD6 7B               ld a,e
 618+ 8AD7 E6 01            and 1
 619+ 8AD9 28 15            jr z,4F
 620+ 8ADB
 621+ 8ADB E1               pop hl
 622+ 8ADC E5               push hl
 623+ 8ADD CD 58 8F         call NextScan
 624+ 8AE0
 625+ 8AE0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 626+ 8AE1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 627+ 8AE3 28 0B            jr z,4F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 628+ 8AE5 30 09            jr nc,4F
 629+ 8AE7              ;                                                  ; _ 2º scanline si esto es así.
 630+ 8AE7 1E 00            ld e,0                                         ; ----- ( ) -----
 631+ 8AE9 CD F2 8A         call Bucle_3
 632+ 8AEC
 633+ 8AEC 7B               ld a,e
 634+ 8AED A7               and a
 635+ 8AEE 20 FE            jr nz,$
 636+ 8AF0
 637+ 8AF0 E1           4 pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 638+ 8AF1 C9               ret
 639+ 8AF2
 640+ 8AF2               ; ---------- ----------
 641+ 8AF2
 642+ 8AF2 3A D2 85     Bucle_3 ld a,(Columnas)
 643+ 8AF5 47               ld b,a
 644+ 8AF6 FD 7E 00     2 ld a,(iy)
 645+ 8AF9 A6               and (hl)
 646+ 8AFA 28 02            jr z,1F
 647+ 8AFC
 648+ 8AFC 1E 01            ld e,1
 649+ 8AFE
 650+ 8AFE 23           1 inc hl
 651+ 8AFF FD 23            inc iy
 652+ 8B01 10 F3            djnz 2B
 653+ 8B03 C9               ret
 654+ 8B04
 655+ 8B04              ; -------------------------------------------------------------------------------------------------------------
 656+ 8B04              ;
 657+ 8B04              ;   13/03/23
 658+ 8B04              ;
 659+ 8B04              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 660+ 8B04              ;
 661+ 8B04              ;   DESTRUYE: HL,BC,DE y A.
 662+ 8B04
 663+ 8B04 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 664+ 8B07 7E               ld a,(hl)
 665+ 8B08 A7               and a
 666+ 8B09 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 667+ 8B0A
 668+ 8B0A 44               ld b,h
 669+ 8B0B 4D               ld c,l
 670+ 8B0C 2A E5 85         ld hl,(Stack_snapshot_disparos)
 671+ 8B0F E5               push hl
 672+ 8B10 A7               and a
 673+ 8B11 ED 42            sbc hl,bc
 674+ 8B13 E5               push hl
 675+ 8B14 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 676+ 8B15
 677+ 8B15 E1               pop hl
 678+ 8B16 54               ld d,h
 679+ 8B17 5D               ld e,l
 680+ 8B18 1B               dec de
 681+ 8B19 ED B8            lddr                                                ; Limpiamos.
 682+ 8B1B
 683+ 8B1B 21 60 70         ld hl,Album_de_fotos_disparos
 684+ 8B1E 22 E5 85         ld (Stack_snapshot_disparos),hl
 685+ 8B21
 686+ 8B21 C9               ret
 687+ 8B22
 688+ 8B22              ; -------------------------------------------------------------------------------------------------------------
 689+ 8B22              ;
 690+ 8B22              ;   28/03/23
 691+ 8B22              ;
 692+ 8B22
 693+ 8B22 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 694+ 8B25 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 695+ 8B28
 696+ 8B28 CD AB 87     2 call Extrae_address
 697+ 8B2B 7E               ld a,(hl)
 698+ 8B2C A7               and a
 699+ 8B2D 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 700+ 8B2F
 701+ 8B2F              ; ----- ----- ----- ----- ----- -----
 702+ 8B2F
 703+ 8B2F C5               push bc
 704+ 8B30 CD DA 8B         call foto_disparo_a_borrar
 705+ 8B33
 706+ 8B33              ; Existe colisión con este disparo???
 707+ 8B33
 708+ 8B33 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 709+ 8B34 7E               ld a,(hl)
 710+ 8B35 2B               dec hl
 711+ 8B36 E6 01            and 1
 712+ 8B38 28 0C            jr z,9F
 713+ 8B3A
 714+ 8B3A              ; Elimino el disparo de la base de datos.
 715+ 8B3A
 716+ 8B3A E5               push hl
 717+ 8B3B CD 54 8C         call Elimina_disparo_de_base_de_datos
 718+ 8B3E E1               pop hl
 719+ 8B3F 3E 01            ld a,1
 720+ 8B41 32 EC 85         ld (Impacto2),a                                       ; Indicamos que se ha producido Impacto en una entidad.
 721+ 8B44 18 06            jr 11F
 722+ 8B46
 723+ 8B46 CD 03 8C     9 call Mueve_disparo
 724+ 8B49 CD DA 8B         call foto_disparo_a_borrar
 725+ 8B4C
 726+ 8B4C C1           11 pop bc
 727+ 8B4D
 728+ 8B4D 18 04            jr 7F
 729+ 8B4F
 730+ 8B4F              ; ----- ----- ----- ----- ----- -----
 731+ 8B4F
 732+ 8B4F ED 42        1 sbc hl,bc
 733+ 8B51 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 734+ 8B53
 735+ 8B53 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 736+ 8B56 23               inc hl
 737+ 8B57 23               inc hl
 738+ 8B58 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 739+ 8B5B 18 CB            jr 2B
 740+ 8B5D
 741+ 8B5D CD 74 87     3 call Inicia_Puntero_Disparo_Amadeus
 742+ 8B60
 743+ 8B60 01 66 84         ld bc,Disparo_11
 744+ 8B63 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 745+ 8B66
 746+ 8B66 CD AB 87     5 call Extrae_address
 747+ 8B69 7E               ld a,(hl)
 748+ 8B6A A7               and a
 749+ 8B6B 28 5B            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 750+ 8B6D
 751+ 8B6D              ; ----- ----- ----- ----- ----- -----
 752+ 8B6D
 753+ 8B6D C5               push bc
 754+ 8B6E CD DA 8B         call foto_disparo_a_borrar
 755+ 8B71
 756+ 8B71              ; Existe colisión con este disparo???
 757+ 8B71
 758+ 8B71 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 759+ 8B72 7E               ld a,(hl)
 760+ 8B73 2B               dec hl
 761+ 8B74 E6 01            and 1
 762+ 8B76 28 47            jr z,10F
 763+ 8B78
 764+ 8B78              ; La colisión se produce con Amadeus???
 765+ 8B78              ; Amadeus siempre tiene (Coordenada_y)="$16".
 766+ 8B78
 767+ 8B78 E5               push hl
 768+ 8B79
 769+ 8B79 06 04            ld b,4
 770+ 8B7B 23           16 inc hl
 771+ 8B7C 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 772+ 8B7E
 773+ 8B7E CD AB 87         call Extrae_address
 774+ 8B81 CD 6F 95         call Genera_coordenadas_disparo
 775+ 8B84 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 776+ 8B85 FE 16            cp $16
 777+ 8B87 38 24            jr c,15F
 778+ 8B89
 779+ 8B89              ; (Colisiones en filas 16 y 17).
 780+ 8B89
 781+ 8B89 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 782+ 8B8A
 783+ 8B8A              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 784+ 8B8A
 785+ 8B8A 21 7A 84         ld hl,Amadeus_db+6
 786+ 8B8D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 787+ 8B8E 23               inc hl
 788+ 8B8F 23               inc hl
 789+ 8B90 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 790+ 8B91 21 88 84         ld hl,Amadeus_db+20
 791+ 8B94 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 792+ 8B95 21 ED 85         ld hl,Coordenadas_X_Amadeus
 793+ 8B98
 794+ 8B98 CD 5F 8C         call Guarda_coordenadas_X
 795+ 8B9B
 796+ 8B9B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 797+ 8B9C
 798+ 8B9C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 799+ 8B9C
 800+ 8B9C 21 ED 85         ld hl,Coordenadas_X_Amadeus
 801+ 8B9F 7E               ld a,(hl)
 802+ 8BA0 BA           18 cp d
 803+ 8BA1 20 03            jr nz,17F
 804+ 8BA3
 805+ 8BA3              ; Colisión Amadeus !!!!!!!!!!
 806+ 8BA3
 807+ 8BA3 E1               pop hl
 808+ 8BA4 18 0D            jr 14F
 809+ 8BA6
 810+ 8BA6 23           17 inc hl
 811+ 8BA7 7E               ld a,(hl)
 812+ 8BA8
 813+ 8BA8 A7               and a
 814+ 8BA9 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
 815+ 8BAB 18 F3            jr 18B
 816+ 8BAD
 817+ 8BAD              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 818+ 8BAD              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 819+ 8BAD
 820+ 8BAD E1           15  pop hl
 821+ 8BAE 23               inc hl
 822+ 8BAF 35               dec (hl)
 823+ 8BB0 2B               dec hl
 824+ 8BB1 18 0C            jr 10F
 825+ 8BB3
 826+ 8BB3              ; -----------------------debug
 827+ 8BB3
 828+ 8BB3              ; Elimino el disparo de la base de datos.
 829+ 8BB3
 830+ 8BB3 E5           14 push hl
 831+ 8BB4 CD 54 8C         call Elimina_disparo_de_base_de_datos
 832+ 8BB7 E1               pop hl
 833+ 8BB8
 834+ 8BB8 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
 835+ 8BBA 32 EC 85         ld (Impacto2),a
 836+ 8BBD 18 06            jr 12F
 837+ 8BBF
 838+ 8BBF CD 03 8C     10 call Mueve_disparo
 839+ 8BC2 CD DA 8B         call foto_disparo_a_borrar
 840+ 8BC5 C1           12 pop bc
 841+ 8BC6
 842+ 8BC6 18 04            jr 8F
 843+ 8BC8
 844+ 8BC8              ; ----- ----- ----- ----- ----- -----
 845+ 8BC8
 846+ 8BC8 ED 42        4 sbc hl,bc
 847+ 8BCA 28 0A            jr z,6F
 848+ 8BCC
 849+ 8BCC 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 850+ 8BCF 23               inc hl
 851+ 8BD0 23               inc hl
 852+ 8BD1 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 853+ 8BD4 18 90            jr 5B
 854+ 8BD6
 855+ 8BD6 CD 6D 87     6 call Inicia_Puntero_Disparo_Entidades
 856+ 8BD9 C9               ret
 857+ 8BDA
 858+ 8BDA              ; ------------------------------------------------------------------
 859+ 8BDA
 860+ 8BDA              foto_disparo_a_borrar
 861+ 8BDA
 862+ 8BDA 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 863+ 8BDB A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 864+ 8BDC C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 865+ 8BDD
 866+ 8BDD E5               push hl
 867+ 8BDE 23               inc hl
 868+ 8BDF 23               inc hl
 869+ 8BE0 ED 73 DF 85      ld (Stack),sp
 870+ 8BE4 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 871+ 8BE5 FD E1            pop iy
 872+ 8BE7 DD E1            pop ix
 873+ 8BE9 E1               pop hl
 874+ 8BEA ED 7B DF 85      ld sp,(Stack)
 875+ 8BEE 3A D6 85         ld a,(Ctrl_1)
 876+ 8BF1 CB C7            set 0,a
 877+ 8BF3 32 D6 85         ld (Ctrl_1),a
 878+ 8BF6 CD A0 7F         call Guarda_foto_registros
 879+ 8BF9 3A D6 85         ld a,(Ctrl_1)
 880+ 8BFC CB 87            res 0,a
 881+ 8BFE 32 D6 85         ld (Ctrl_1),a
 882+ 8C01 E1               pop hl
 883+ 8C02 C9               ret
 884+ 8C03
 885+ 8C03 E5           Mueve_disparo push hl
 886+ 8C04 7E               ld a,(hl)
 887+ 8C05 06 04            ld b,4
 888+ 8C07 23           1 inc hl
 889+ 8C08 10 FD            djnz 1B
 890+ 8C0A
 891+ 8C0A              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 892+ 8C0A
 893+ 8C0A CD AB 87         call Extrae_address
 894+ 8C0D
 895+ 8C0D E6 01            and 1
 896+ 8C0F 28 2A            jr z,2F
 897+ 8C11
 898+ 8C11              ; Disparo hacia arriba, (Amadeus).
 899+ 8C11
 900+ 8C11              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 901+ 8C11              ; _ de la dificultad.
 902+ 8C11
 903+ 8C11 CD 67 8F         call PreviousScan
 904+ 8C14 CD 67 8F         call PreviousScan
 905+ 8C17 CD 67 8F         call PreviousScan
 906+ 8C1A
 907+ 8C1A              ; Detecta si el disparo de Amadeus sale de pantalla:
 908+ 8C1A
 909+ 8C1A 7C               ld a,h
 910+ 8C1B FE 40            cp $40
 911+ 8C1D 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 912+ 8C1F
 913+ 8C1F              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 914+ 8C1F
 915+ 8C1F EB               ex de,hl
 916+ 8C20 06 04            ld b,4
 917+ 8C22 2B           6 dec hl
 918+ 8C23 10 FD            djnz 6B
 919+ 8C25
 920+ 8C25 CD 54 8C         call Elimina_disparo_de_base_de_datos
 921+ 8C28
 922+ 8C28 18 0C            jr 4F
 923+ 8C2A
 924+ 8C2A              ; Se ha desplazado la bala, compruebo colisión.
 925+ 8C2A
 926+ 8C2A D5           3 push de
 927+ 8C2B C5               push bc
 928+ 8C2C CD 25 8A         call Comprueba_Colision
 929+ 8C2F 78               ld a,b
 930+ 8C30 C1               pop bc
 931+ 8C31 D1               pop de
 932+ 8C32
 933+ 8C32 EB               ex de,hl
 934+ 8C33
 935+ 8C33 73               ld (hl),e
 936+ 8C34 23               inc hl
 937+ 8C35 72               ld (hl),d
 938+ 8C36
 939+ 8C36 E1           4 pop hl
 940+ 8C37 23               inc hl
 941+ 8C38 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 942+ 8C39 2B               dec hl
 943+ 8C3A C9               ret
 944+ 8C3B
 945+ 8C3B              ; Disparo hacia abajo, (Entidad).
 946+ 8C3B
 947+ 8C3B              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 948+ 8C3B              ; _ de la dificultad.
 949+ 8C3B
 950+ 8C3B CD 58 8F     2 call NextScan
 951+ 8C3E CD 58 8F         call NextScan
 952+ 8C41 CD 58 8F         call NextScan
 953+ 8C44
 954+ 8C44              ; Detecta si el disparo de la entidad sale de la pantalla.
 955+ 8C44
 956+ 8C44 7C               ld a,h
 957+ 8C45 FE 58            cp $58
 958+ 8C47 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 959+ 8C49
 960+ 8C49 EB               ex de,hl
 961+ 8C4A 06 04            ld b,4
 962+ 8C4C 2B           5 dec hl
 963+ 8C4D 10 FD            djnz 5B
 964+ 8C4F
 965+ 8C4F CD 54 8C         call Elimina_disparo_de_base_de_datos
 966+ 8C52
 967+ 8C52 18 E2            jr 4B
 968+ 8C54
 969+ 8C54              ; HL apunta al primer byte de la base de datos del disparo.
 970+ 8C54 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 971+ 8C57 AF               xor a
 972+ 8C58 77               ld (hl),a
 973+ 8C59 54               ld d,h
 974+ 8C5A 5D               ld e,l
 975+ 8C5B 13               inc de
 976+ 8C5C ED B0            ldir
 977+ 8C5E C9               ret
 978+ 8C5F
 979+ 8C5F              ; -----------------------------------------------------------------
 980+ 8C5F              ;
 981+ 8C5F              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 982+ 8C5F              ;
 983+ 8C5F              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 984+ 8C5F              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 985+ 8C5F              ;
 986+ 8C5F              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
 987+ 8C5F              ;
 988+ 8C5F              ;   INPUTS:
 989+ 8C5F              ;
 990+ 8C5F              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
 991+ 8C5F              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
 992+ 8C5F              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
 993+ 8C5F
 994+ 8C5F              ;   MODIFICA: A, HL, DE y C
 995+ 8C5F
 996+ 8C5F 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
 997+ 8C60 79               ld a,c
 998+ 8C61 E6 01            and 1
 999+ 8C63 20 03            jr nz,1F
1000+ 8C65 14               inc d
1001+ 8C66 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1002+ 8C68
1003+ 8C68              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1004+ 8C68              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1005+ 8C68
1006+ 8C68 15           1 dec d
1007+ 8C69 23           2 inc hl
1008+ 8C6A 72               ld (hl),d
1009+ 8C6B
1010+ 8C6B 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1011+ 8C6C A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1012+ 8C6D C8               ret z
1013+ 8C6E
1014+ 8C6E AF               xor a
1015+ 8C6F 5F               ld e,a
1016+ 8C70 18 ED            jr Guarda_coordenadas_X
1017+ 8C72
# file closed: Disparo.asm
 886  8C72              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8C72              ; ******************************************************************************************************************************************************************************************
   2+ 8C72              ;
   3+ 8C72              ; 01/23
   4+ 8C72              ;
   5+ 8C72              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8C72
   7+ 8C72 CD 4C 8F     Draw call Prepara_draw
   8+ 8C75 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8C76 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8C77 28 05        	jr z,2F
  11+ 8C79
  12+ 8C79 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8C7C 18 0C        	jr 1F
  14+ 8C7E 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8C81 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8C84 CD 13 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8C87              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8C87 CD 92 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8C8A 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8C8D CB 6F        	bit 5,a
  21+ 8C8F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8C91
  23+ 8C91 CD A9 8C     	call Comprueba_limite_horizontal
  24+ 8C94 CD 39 8D     	call Comprueba_limite_vertical
  25+ 8C97
  26+ 8C97              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8C97
  28+ 8C97 CD 86 8E     3 call calcula_CColumnass
  29+ 8C9A CD BD 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8C9D CD 12 8F     	call Define_rutina_de_impresion
  31+ 8CA0
  32+ 8CA0 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8CA3 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8CA5 32 C9 85     	ld (Ctrl_0),a
  35+ 8CA8
  36+ 8CA8 C9           	ret
  37+ 8CA9
  38+ 8CA9              ; *******************************************************************************************************************************************************************************************
  39+ 8CA9              ;	21/01/23
  40+ 8CA9              ;
  41+ 8CA9              ; 	Comprueba_limite_horizontal.
  42+ 8CA9              ;
  43+ 8CA9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8CA9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8CA9              ;
  46+ 8CA9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8CA9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8CA9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8CA9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8CA9
  51+ 8CA9
  52+ 8CA9
  53+ 8CA9 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8CAC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8CAE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8CB0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8CB2 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8CB5 18 09            jr 6F
  59+ 8CB7 CB 5F        1 bit 3,a
  60+ 8CB9 28 0A            jr z,2F
  61+ 8CBB E6 F7            and $f7
  62+ 8CBD 32 C9 85         ld (Ctrl_0),a
  63+ 8CC0 CD 13 8E     6 call Inicializacion
  64+ 8CC3 18 5B            jr 5F
  65+ 8CC5 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8CC6
  67+ 8CC6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8CC6              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8CC6
  70+ 8CC6 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8CC7 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8CCA CD 18 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8CCD 67           	ld h,a
  74+ 8CCE EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8CCF CD 18 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8CD2 67           	ld h,a
  77+ 8CD3 A7           	and a
  78+ 8CD4 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8CD6 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8CD7 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8CDA FE 02        	cp 2
  82+ 8CDC 38 1E        	jr c,3F
  83+ 8CDE 28 1C        	jr z,3F
  84+ 8CE0 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8CE1 28 23            jr z,7F
  86+ 8CE3 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8CE5 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8CE7 E1           	pop hl
  89+ 8CE8
  90+ 8CE8              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8CE8              ; _para indicar con E="2" en caso necesario.
  92+ 8CE8
  93+ 8CE8 E5               push hl
  94+ 8CE9 C5               push bc
  95+ 8CEA CD 18 92     	call calcula_tercio
  96+ 8CED FE 01        	cp 1
  97+ 8CEF 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8CF1 CD 21 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8CF4 28 26            jr z,9F
 100+ 8CF6 38 24            jr c,9F
 101+ 8CF8 1E 00        11 ld e,0
 102+ 8CFA 18 22            jr 8F
 103+ 8CFC 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8CFD 28 07        	jr z, 7F
 105+ 8CFF 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D01 1E 00         	ld e,0
 107+ 8D03 E1           	pop hl
 108+ 8D04 18 04        	jr 4F
 109+ 8D06 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D08 18 15            jr 10F
 111+ 8D0A
 112+ 8D0A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D0A              ; _para indicar con E="2" en caso necesario.
 114+ 8D0A
 115+ 8D0A E5           4 push hl
 116+ 8D0B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D0C CD 18 92     	call calcula_tercio
 118+ 8D0F FE 01        	cp 1
 119+ 8D11 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D13 CD 21 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D16 28 04            jr z,9F
 122+ 8D18 30 02            jr nc,9F
 123+ 8D1A 18 02        	jr 8F
 124+ 8D1C 1E 02        9 ld e,2
 125+ 8D1E C1           8 pop bc
 126+ 8D1F E1           10 pop hl
 127+ 8D20 C9           5 ret
 128+ 8D21
 129+ 8D21              ; --------------------
 130+ 8D21              ;
 131+ 8D21              ; 25/08/22
 132+ 8D21
 133+ 8D21 CD 18 92     Comprueba_centro call calcula_tercio
 134+ 8D24 67               ld h,a
 135+ 8D25 08           	ex af,af
 136+ 8D26 FE 02        	cp 2
 137+ 8D28 38 07        	jr c,1F
 138+ 8D2A 28 05        	jr z,1F
 139+ 8D2C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D2F 18 03        	jr 2F
 141+ 8D31 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D34 08           2 ex af,af
 143+ 8D35 A7               and a
 144+ 8D36 ED 42            sbc hl,bc
 145+ 8D38 C9               ret
 146+ 8D39
 147+ 8D39              ; *********************************************************************************************************************************************************************************************
 148+ 8D39              ;
 149+ 8D39              ;   16/8/22
 150+ 8D39              ;
 151+ 8D39              ;	Comprueba_limite_vertical
 152+ 8D39              ;
 153+ 8D39              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D39              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D39              ;
 156+ 8D39
 157+ 8D39 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D3C 7D           	ld a,l
 159+ 8D3D E6 1F        	and $1F
 160+ 8D3F 57           	ld d,a
 161+ 8D40 3A D5 85     	ld a,(Limite_vertical)
 162+ 8D43 BA           	cp d 											; Límite - Posición.
 163+ 8D44 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8D45 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8D48 CB 47        	bit 0,a
 166+ 8D4A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8D4C
 168+ 8D4C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8D4C
 170+ 8D4C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8D4D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8D4F
 173+ 8D4F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8D4F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8D4F
 176+ 8D4F 3A A1 85         ld a,(Coordenada_X)
 177+ 8D52 16 0F            ld d,Centro_izquierda
 178+ 8D54 A7               and a
 179+ 8D55 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8D56 28 1E            jr z,3F
 181+ 8D58 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8D5A              ;                                                    ; _salimos sin modificar nada.
 183+ 8D5A 18 0E            jr 2F
 184+ 8D5C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8D5D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8D5F
 187+ 8D5F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8D5F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8D5F
 190+ 8D5F 3A A1 85         ld a,(Coordenada_X)
 191+ 8D62 16 10            ld d,Centro_derecha
 192+ 8D64 A7               and a
 193+ 8D65 92               sub d
 194+ 8D66 28 0E            jr z,3F
 195+ 8D68 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8D6A              ;                                                    ; _salimos sin modificar nada.
 197+ 8D6A CB 43        2 bit 0,e
 198+ 8D6C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8D6E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8D6F CD 03 8E         call Modificaccionne
 201+ 8D72 C1           	pop bc
 202+ 8D73 CD 13 8E         call Inicializacion
 203+ 8D76 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8D77
 205+ 8D77              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8D77
 207+ 8D77 C5           4 push bc
 208+ 8D78 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8D7B 0A           	ld a,(bc)
 210+ 8D7C 3D           	dec a
 211+ 8D7D 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8D7E 7D           	ld a,l
 213+ 8D7F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8D80 CB 47        	bit 0,a
 215+ 8D82 28 03        	jr z,5F
 216+ 8D84 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8D85 18 2E        	jr 7F
 218+ 8D87
 219+ 8D87              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8D87
 221+ 8D87 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8D88 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8D89 3A C9 85     	ld a,(Ctrl_0)
 224+ 8D8C CB 4F        	bit 1,a
 225+ 8D8E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8D90 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8D91
 228+ 8D91              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8D91
 230+ 8D91 1C               inc e
 231+ 8D92 1D               dec e
 232+ 8D93 20 07            jr nz,12F
 233+ 8D95 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8D96 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8D97 22 9D 85     	ld (Posicion_actual),hl
 236+ 8D9A 18 44        13 jr 9F
 237+ 8D9C CB 43        12 bit 0,e
 238+ 8D9E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8DA0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8DA0 C1           	pop bc
 241+ 8DA1 18 D3        	jr 3B
 242+ 8DA3 80           14 add b
 243+ 8DA4 6F               ld l,a
 244+ 8DA5 22 9D 85     	ld (Posicion_actual),hl
 245+ 8DA8 CD 03 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8DAB 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8DAD E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8DAF 32 C9 85         ld (Ctrl_0),a
 249+ 8DB2 F1           	pop af
 250+ 8DB3 18 2B        	jr 9F
 251+ 8DB5
 252+ 8DB5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8DB5
 254+ 8DB5 F5           7 push af
 255+ 8DB6 3A C9 85     	ld a,(Ctrl_0)
 256+ 8DB9 CB 47        	bit 0,a
 257+ 8DBB 20 1D        	jr nz,8F
 258+ 8DBD F1           	pop af
 259+ 8DBE
 260+ 8DBE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8DBE
 262+ 8DBE 1C           	inc e
 263+ 8DBF 1D               dec e
 264+ 8DC0 20 07            jr nz,10F
 265+ 8DC2 90           	sub b
 266+ 8DC3 6F               ld l,a
 267+ 8DC4 22 9D 85     	ld (Posicion_actual),hl
 268+ 8DC7 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8DC9              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8DC9 CB 43        10 bit 0,e
 271+ 8DCB 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8DCD              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8DCD C1           	pop bc
 274+ 8DCE 18 A6        	jr 3B
 275+ 8DD0 90           16 sub b
 276+ 8DD1 6F               ld l,a
 277+ 8DD2 22 9D 85     	ld (Posicion_actual),hl
 278+ 8DD5 CD 03 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8DD8 18 06            jr 9F
 280+ 8DDA E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8DDC 32 C9 85         ld (Ctrl_0),a
 282+ 8DDF F1           	pop af
 283+ 8DE0 C1           9 pop bc
 284+ 8DE1 1E 00        	ld e,0
 285+ 8DE3 CD 13 8E         call Inicializacion
 286+ 8DE6 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8DE7 08           	ex af,af
 288+ 8DE8 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8DE9 18 8B            jr 3B
 290+ 8DEB
 291+ 8DEB              ; --------------------
 292+ 8DEB
 293+ 8DEB 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8DED CD 67 8F     1 call PreviousScan
 295+ 8DF0 10 FB            djnz 1B
 296+ 8DF2 22 9D 85     	ld (Posicion_actual),hl
 297+ 8DF5 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8DF6 C9           	ret
 299+ 8DF7
 300+ 8DF7              ; --------------------
 301+ 8DF7
 302+ 8DF7 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8DF9 CD 58 8F     1 call NextScan
 304+ 8DFC 10 FB            djnz 1B
 305+ 8DFE 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E01 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E02 C9           	ret
 308+ 8E03
 309+ 8E03              ; --------------------
 310+ 8E03              ;
 311+ 8E03              ;	22/01/23
 312+ 8E03              ;
 313+ 8E03              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E03              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E03              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E03
 317+ 8E03
 318+ 8E03              Modificaccionne
 319+ 8E03
 320+ 8E03 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E06 FE 02        	cp 2
 322+ 8E08 CC EB 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E0B DC EB 8D         call c,Modifica_Pos_actual
 324+ 8E0E C8           	ret z
 325+ 8E0F CD F7 8D         call Modifica_Pos_actual2
 326+ 8E12 C9               ret
 327+ 8E13
 328+ 8E13              ; *************************************************************************************************************************************************************************************************
 329+ 8E13              ;
 330+ 8E13              ;	13/8/22
 331+ 8E13              ;
 332+ 8E13              ;	Inicializacion
 333+ 8E13              ;
 334+ 8E13              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E13              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E13              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E13              ;
 338+ 8E13              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E13              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E13              ;	_ desaparece/aparece.
 341+ 8E13
 342+ 8E13              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E13              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E13              ;
 345+ 8E13              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E13              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E13              ; 		   [E] ="0"
 348+ 8E13
 349+ 8E13              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E13
 351+ 8E13 CD 18 92     Inicializacion call calcula_tercio
 352+ 8E16 28 36        	jr z,primit
 353+ 8E18 E6 02        	and 2
 354+ 8E1A 20 07        	jr nz,segmit
 355+ 8E1C 7D           	ld a,l
 356+ 8E1D FE 7F        	cp $7f
 357+ 8E1F 38 2D        	jr c,primit
 358+ 8E21 28 2B        	jr z,primit
 359+ 8E23 CD 80 8E     segmit call column
 360+ 8E26 38 13        	jr c,tercuad
 361+ 8E28 3E 04        cuarcuad ld a,4
 362+ 8E2A 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E2D 21 20 48     	ld hl,$4820
 364+ 8E30 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E33 21 D5 85     	ld hl,Limite_vertical
 366+ 8E36 36 0D        	ld (hl),$0d
 367+ 8E38 08           	ex af,af
 368+ 8E39 18 3C        	jr 1F
 369+ 8E3B              tercuad
 370+ 8E3B 3E 03        	ld a,3
 371+ 8E3D 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E40 21 20 48     	ld hl,$4820
 373+ 8E43 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8E46 21 D5 85     	ld hl,Limite_vertical
 375+ 8E49 36 12        	ld (hl),$12
 376+ 8E4B 08           	ex af,af
 377+ 8E4C 18 29        	jr 1F
 378+ 8E4E CD 80 8E     primit call column
 379+ 8E51 38 13        	jr c, primcuad
 380+ 8E53              segcuad
 381+ 8E53 3E 02        	ld a,2
 382+ 8E55 32 AF 85     	ld (Cuad_objeto),a
 383+ 8E58 21 C0 4F     	ld hl,$4fc0
 384+ 8E5B 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8E5E 21 D5 85     	ld hl,Limite_vertical
 386+ 8E61 36 0D        	ld (hl),$0d
 387+ 8E63 08           	ex af,af
 388+ 8E64 18 11        	jr 1F
 389+ 8E66              primcuad
 390+ 8E66 3E 01        	ld a,1
 391+ 8E68 32 AF 85     	ld (Cuad_objeto),a
 392+ 8E6B 21 C0 4F     	ld hl,$4fc0
 393+ 8E6E 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8E71 21 D5 85     	ld hl,Limite_vertical
 395+ 8E74 36 12        	ld (hl),$12
 396+ 8E76 08           	ex af,af
 397+ 8E77 CD 44 95     1 call Genera_coordenadas
 398+ 8E7A 21 C9 85     	ld hl,Ctrl_0
 399+ 8E7D CB EE        	set 5,(hl)
 400+ 8E7F C9           	ret
 401+ 8E80
 402+ 8E80              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8E80
 404+ 8E80              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8E80              ;
 406+ 8E80              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8E80
 408+ 8E80 7D           column ld a,l
 409+ 8E81 E6 1F        	and $1f
 410+ 8E83 FE 10         	cp $10
 411+ 8E85 C9            	ret
 412+ 8E86
 413+ 8E86              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8E86              ;
 415+ 8E86              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8E86              ;
 417+ 8E86              ; 14/12/22
 418+ 8E86              ;
 419+ 8E86              ;	Modifica: A y BC.
 420+ 8E86
 421+ 8E86 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8E89 E6 01        	and 1
 423+ 8E8B 28 17        	jr z,1F
 424+ 8E8D
 425+ 8E8D              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8E8D
 427+ 8E8D 3A A1 85     	ld a,(Coordenada_X)
 428+ 8E90 47           	ld b,a
 429+ 8E91 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8E92 79           	ld a,c
 431+ 8E93 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8E94 38 08        	jr c,2F
 433+ 8E96 47           	ld b,a
 434+ 8E97 79           	ld a,c
 435+ 8E98 90           	sub b
 436+ 8E99 32 D2 85     	ld (Columnas),a
 437+ 8E9C 18 1B        	jr 4F
 438+ 8E9E 79           2 ld a,c
 439+ 8E9F 32 D2 85     	ld (Columnas),a
 440+ 8EA2 18 15        	jr 4F
 441+ 8EA4
 442+ 8EA4              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8EA4
 444+ 8EA4 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8EA7 81           	add c
 446+ 8EA8 3D           	dec a
 447+ 8EA9 D6 1F        	sub $1f
 448+ 8EAB 38 08        	jr c,3F
 449+ 8EAD 47           	ld b,a
 450+ 8EAE 79           	ld a,c
 451+ 8EAF 90           	sub b
 452+ 8EB0 32 D2 85     	ld (Columnas),a
 453+ 8EB3 18 04        	jr 4F
 454+ 8EB5 79           3 ld a,c
 455+ 8EB6 32 D2 85     	ld (Columnas),a
 456+ 8EB9 D9           4 exx
 457+ 8EBA 4F           	ld c,a
 458+ 8EBB D9           	exx
 459+ 8EBC C9            ret
 460+ 8EBD
 461+ 8EBD              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8EBD              ;
 463+ 8EBD              ; 7/1/23
 464+ 8EBD              ;
 465+ 8EBD              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8EBD              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8EBD              ;
 468+ 8EBD              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8EBD              ;	DESTRUYE: HL,B Y A.
 470+ 8EBD
 471+ 8EBD 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8EC0 FE 02        	cp 2
 473+ 8EC2 38 18        	jr c,1F
 474+ 8EC4 28 16        	jr z,1F
 475+ 8EC6 E6 01        	and 1
 476+ 8EC8 28 0D        	jr z,3F
 477+ 8ECA
 478+ 8ECA              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8ECA
 480+ 8ECA CD 06 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8ECD
 482+ 8ECD 7D           9 ld a,l
 483+ 8ECE E6 1F        	and $1f
 484+ 8ED0 28 2A        	jr z,7F
 485+ 8ED2 2B           	dec hl
 486+ 8ED3 10 F8        	djnz 9B
 487+ 8ED5 18 25        	jr 7F
 488+ 8ED7
 489+ 8ED7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8ED7
 491+ 8ED7 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8EDA 18 20        	jr 7F
 493+ 8EDC
 494+ 8EDC 28 14        1 jr z,2F
 495+ 8EDE
 496+ 8EDE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8EDE
 498+ 8EDE CD 06 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8EE1 7D           4 ld a,l
 500+ 8EE2 E6 1F        	and $1f
 501+ 8EE4 28 03        	jr z,6F
 502+ 8EE6 2B           	dec hl
 503+ 8EE7 10 F8        	djnz 4B
 504+ 8EE9 06 0F        6 ld b,15
 505+ 8EEB CD 67 8F     5 call PreviousScan
 506+ 8EEE 10 FB        	djnz 5B
 507+ 8EF0 18 0A        	jr 7F
 508+ 8EF2
 509+ 8EF2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8EF2
 511+ 8EF2 CD 06 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8EF5 06 0F        	ld b,15
 513+ 8EF7 CD 67 8F     8 call PreviousScan
 514+ 8EFA 10 FB        	djnz 8B
 515+ 8EFC
 516+ 8EFC E5           7 push hl
 517+ 8EFD DD E1        	pop ix
 518+ 8EFF
 519+ 8EFF 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F02 E5           	push hl
 521+ 8F03 FD E1        	pop iy
 522+ 8F05
 523+ 8F05 C9           	ret
 524+ 8F06
 525+ 8F06              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F06              ;
 527+ 8F06              ;	2/1/23
 528+ 8F06              ;
 529+ 8F06              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F06              ;
 531+ 8F06              ;	Tras esta rutina tenemos:
 532+ 8F06              ;
 533+ 8F06              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F06              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F06              ;
 536+ 8F06              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F06
 538+ 8F06 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F09 3A D2 85     	ld a,(Columnas)
 540+ 8F0C 3D           	dec a
 541+ 8F0D 20 01        	jr nz,1F
 542+ 8F0F 3C           	inc a
 543+ 8F10 47           1 ld b,a
 544+ 8F11 C9           	ret
 545+ 8F12
 546+ 8F12              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F12              ;
 548+ 8F12              ;	3/1/23
 549+ 8F12              ;
 550+ 8F12              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F12              ;
 552+ 8F12              ;	Destruye: A,B,HL y DE.
 553+ 8F12
 554+ 8F12              Define_rutina_de_impresion
 555+ 8F12
 556+ 8F12 3A 9C 85     	ld a,(Columns)
 557+ 8F15 47           	ld b,a
 558+ 8F16 3A D2 85     	ld a,(Columnas)
 559+ 8F19 B8           	cp b
 560+ 8F1A 20 0D        	jr nz,2f
 561+ 8F1C
 562+ 8F1C              ;	La entidad se imprime entera.
 563+ 8F1C
 564+ 8F1C 21 E8 8F     	ld hl, Indice_entidades_completas
 565+ 8F1F E6 01        	and 1
 566+ 8F21 28 02        	jr z,1F
 567+ 8F23
 568+ 8F23 23           	inc hl
 569+ 8F24 23           	inc hl
 570+ 8F25
 571+ 8F25 CD AB 87     1 call Extrae_address
 572+ 8F28 C9           	ret		;	ret
 573+ 8F29
 574+ 8F29              ;	La entidad no se imprime entera en pantalla.
 575+ 8F29
 576+ 8F29 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F2C E6 01        	and 1
 578+ 8F2E 28 17        	jr z,3F
 579+ 8F30
 580+ 8F30              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F30
 582+ 8F30 21 EC 8F     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F33 3A 9C 85     4 ld a,(Columns)
 584+ 8F36 E6 01        	and 1
 585+ 8F38 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F3A
 587+ 8F3A 23           	inc hl
 588+ 8F3B 23           	inc hl
 589+ 8F3C
 590+ 8F3C 3A D2 85     	ld a,(Columnas)
 591+ 8F3F E6 01        	and 1
 592+ 8F41 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8F43
 594+ 8F43 23           	inc hl
 595+ 8F44 23           	inc hl
 596+ 8F45
 597+ 8F45 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8F47
 599+ 8F47 21 F2 8F     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8F4A 18 E7        	jr 4B
 601+ 8F4C
 602+ 8F4C              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8F4C              ;
 604+ 8F4C              ;	Prepara_draw
 605+ 8F4C              ;
 606+ 8F4C              ;	Es una rutina de carga.
 607+ 8F4C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8F4C              ;
 609+ 8F4C              ;	FUNCIONAMIENTO:
 610+ 8F4C              ;
 611+ 8F4C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8F4C              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8F4C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8F4C              ;
 615+ 8F4C              ;	DESTRUYE:
 616+ 8F4C              ;
 617+ 8F4C              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8F4C
 619+ 8F4C 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8F4F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8F50 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8F51 4E           	ld c,(hl)
 623+ 8F52 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8F55 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8F57 C9           	ret
 626+ 8F58
 627+ 8F58              ;----------------------------------------------------------------------------------------------------------------
 628+ 8F58              ;
 629+ 8F58              ;	5/08/22
 630+ 8F58              ;
 631+ 8F58              ;   NextScan.
 632+ 8F58              ;
 633+ 8F58              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8F58              ;
 635+ 8F58              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8F58              ;
 637+ 8F58              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8F58              ;
 639+ 8F58              ;       DESTRUIDOS: AF y HL !!!
 640+ 8F58              ;
 641+ 8F58              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8F58              ;
 643+ 8F58
 644+ 8F58 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8F59 7C               ld a,h
 646+ 8F5A E6 07            and 7
 647+ 8F5C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8F5D
 649+ 8F5D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8F5E C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8F60 6F               ld l,a
 652+ 8F61 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8F62
 654+ 8F62 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8F63 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8F65 67               ld h,a
 657+ 8F66 C9               ret
 658+ 8F67
 659+ 8F67              ;----------------------------------------------------------------------------------------------------------------
 660+ 8F67              ;
 661+ 8F67              ;	5/08/22
 662+ 8F67              ;
 663+ 8F67              ;   PreviousScan.
 664+ 8F67              ;
 665+ 8F67              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8F67              ;
 667+ 8F67              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8F67              ;
 669+ 8F67              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8F67              ;
 671+ 8F67              ;       DESTRUIDOS: AF y HL !!!
 672+ 8F67              ;
 673+ 8F67              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8F67              ;
 675+ 8F67
 676+ 8F67 7C           PreviousScan ld a,h
 677+ 8F68 25               dec h               ; Dec H.
 678+ 8F69 E6 07            and 7
 679+ 8F6B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8F6C
 681+ 8F6C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8F6D D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8F6F 6F               ld l,a
 684+ 8F70 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8F71
 686+ 8F71 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8F72 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8F74 67               ld h,a
 689+ 8F75 C9               ret
 690+ 8F76
 691+ 8F76              ; -----------------------------------------------------------------------------------
 692+ 8F76              ;
 693+ 8F76              ;	28/2/23
 694+ 8F76              ;
 695+ 8F76              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8F76              ;	Extrae fotos de Album_de_fotos.
 697+ 8F76
 698+ 8F76 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
 699+ 8F79 A7           	and a
 700+ 8F7A C8           	ret z
 701+ 8F7B ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8F7F 31 00 70     	ld sp,Album_de_fotos
 703+ 8F82
 704+ 8F82 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8F84 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8F85 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8F86
 708+ 8F86 ED 73 E1 85  	ld (Stack_2),sp
 709+ 8F8A ED 7B DF 85  	ld sp,(Stack)
 710+ 8F8E
 711+ 8F8E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8F8E
 713+ 8F8E 3E CD        	ld a,$cd
 714+ 8F90 32 98 8F     	ld (Imprime),a
 715+ 8F93 EB           	ex de,hl
 716+ 8F94 22 99 8F     	ld (Imprime+1),hl
 717+ 8F97 EB           	ex de,hl
 718+ 8F98
 719+ 8F98              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8F98
 721+ 8F98 00 00 00     Imprime db 0,0,0
 722+ 8F9B
 723+ 8F9B 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8F9E 3D           	dec a
 725+ 8F9F 28 09        	jr z,1F
 726+ 8FA1 32 DE 85      	ld (Numero_de_malotes),a
 727+ 8FA4
 728+ 8FA4 ED 7B E1 85   	ld sp,(Stack_2)
 729+ 8FA8 18 D8        	jr 2B
 730+ 8FAA
 731+ 8FAA AF           1 xor a
 732+ 8FAB 32 E1 85     	ld (Stack_2),a
 733+ 8FAE C9           	ret
 734+ 8FAF
 735+ 8FAF              ; -----------------------------------------------------------------------------------
 736+ 8FAF              ;
 737+ 8FAF              ;	28/2/23
 738+ 8FAF              ;
 739+ 8FAF              ;	Pinta los disparos generados.
 740+ 8FAF
 741+ 8FAF              Extrae_foto_disparos
 742+ 8FAF
 743+ 8FAF 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 8FB2 A7           	and a
 745+ 8FB3 C8           	ret z
 746+ 8FB4 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 8FB8 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 8FBB
 749+ 8FBB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 8FBD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 8FBE D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 8FBF
 753+ 8FBF ED 73 E1 85  	ld (Stack_2),sp
 754+ 8FC3 ED 7B DF 85  	ld sp,(Stack)
 755+ 8FC7
 756+ 8FC7              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 8FC7
 758+ 8FC7 3E CD        	ld a,$cd
 759+ 8FC9 32 D1 8F     	ld (Imprime2),a
 760+ 8FCC EB           	ex de,hl
 761+ 8FCD 22 D2 8F     	ld (Imprime2+1),hl
 762+ 8FD0 EB           	ex de,hl
 763+ 8FD1
 764+ 8FD1              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 8FD1
 766+ 8FD1 00 00 00     Imprime2 db 0,0,0
 767+ 8FD4
 768+ 8FD4 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 8FD7 3D           	dec a
 770+ 8FD8 28 09        	jr z,1F
 771+ 8FDA 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 8FDD
 773+ 8FDD ED 7B E1 85  	ld sp,(Stack_2)
 774+ 8FE1 18 D8        	jr 2B
 775+ 8FE3
 776+ 8FE3 AF           1 xor a
 777+ 8FE4 32 E1 85     	ld (Stack_2),a
 778+ 8FE7 C9           	ret
 779+ 8FE8
# file closed: Draw_XOR.asm
 887  8FE8              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 8FE8              ;   índices de Rutinas de impresión.
   2+ 8FE8
   3+ 8FE8 F8 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 8FEA 25 90            defw Pinta_Amadeus_3x2
   5+ 8FEC
   6+ 8FEC 7B 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 8FEE 1B 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 8FF0 CF 90            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 8FF2
  10+ 8FF2 A5 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 8FF4 A9 91            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 8FF6 5D 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 8FF8
  14+ 8FF8
  15+ 8FF8              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 8FF8              ;
  17+ 8FF8              ;   12/12/22
  18+ 8FF8              ;
  19+ 8FF8              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 8FF8              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 8FF8              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 8FF8              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 8FF8              ;
  24+ 8FF8              ;   Modifica: DE y HL.
  25+ 8FF8
  26+ 8FF8 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 8FFC FD F9        	ld sp,iy
  28+ 8FFE 06 10            ld b,16
  29+ 9000 D1           1 pop de
  30+ 9001 7B               ld a,e
  31+ 9002 AE               xor (hl)
  32+ 9003 77           	ld (hl),a
  33+ 9004 23           	inc hl
  34+ 9005 7A               ld a,d
  35+ 9006 AE               xor (hl)
  36+ 9007 77           	ld (hl),a
  37+ 9008 2B           	dec hl
  38+ 9009 24           	inc h
  39+ 900A 7C               ld a,h
  40+ 900B E6 07            and 7
  41+ 900D 20 0A            jr nz,2F
  42+ 900F 7D               ld a,l
  43+ 9010 C6 20            add a,$20
  44+ 9012 6F               ld l,a
  45+ 9013 38 04            jr c,2F
  46+ 9015 7C               ld a,h
  47+ 9016 D6 08            sub 8
  48+ 9018 67               ld h,a
  49+ 9019 7C           2 ld a,h
  50+ 901A FE 58            cp $58
  51+ 901C 28 02            jr z,3F
  52+ 901E 10 E0            djnz 1B
  53+ 9020 ED 7B DF 85  3 ld sp,(Stack)
  54+ 9024 C9           	ret
  55+ 9025
  56+ 9025 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9029 FD F9        	ld sp,iy
  58+ 902B 06 08            ld b,8
  59+ 902D D1           1 pop de
  60+ 902E 7B               ld a,e
  61+ 902F AE               xor (hl)
  62+ 9030 77           	ld (hl),a
  63+ 9031 23           	inc hl
  64+ 9032 7A               ld a,d
  65+ 9033 AE               xor (hl)
  66+ 9034 77           	ld (hl),a
  67+ 9035 23           	inc hl
  68+ 9036 D1           	pop de
  69+ 9037 7B               ld a,e
  70+ 9038 AE               xor (hl)
  71+ 9039 77           	ld (hl),a
  72+ 903A 2B           	dec hl
  73+ 903B 2B           	dec hl
  74+ 903C 24           	inc h
  75+ 903D 7C               ld a,h
  76+ 903E E6 07            and 7
  77+ 9040 20 0A            jr nz,2F
  78+ 9042 7D               ld a,l
  79+ 9043 C6 20            add a,$20
  80+ 9045 6F               ld l,a
  81+ 9046 38 04            jr c,2F
  82+ 9048 7C               ld a,h
  83+ 9049 D6 08            sub 8
  84+ 904B 67               ld h,a
  85+ 904C 7C           2 ld a,h
  86+ 904D FE 58            cp $58
  87+ 904F 28 25            jr z,4F
  88+ 9051 7A               ld a,d
  89+ 9052 AE               xor (hl)
  90+ 9053 77               ld (hl),a
  91+ 9054 D1           	pop de
  92+ 9055 23           	inc hl
  93+ 9056 7B               ld a,e
  94+ 9057 AE               xor (hl)
  95+ 9058 77           	ld (hl),a
  96+ 9059 23           	inc hl
  97+ 905A 7A               ld a,d
  98+ 905B AE               xor (hl)
  99+ 905C 77           	ld (hl),a
 100+ 905D 2B           	dec hl
 101+ 905E 2B           	dec hl
 102+ 905F 24           	inc h
 103+ 9060 7C               ld a,h
 104+ 9061 E6 07            and 7
 105+ 9063 20 0A            jr nz,3F
 106+ 9065 7D               ld a,l
 107+ 9066 C6 20            add a,$20
 108+ 9068 6F               ld l,a
 109+ 9069 38 04            jr c,3F
 110+ 906B 7C               ld a,h
 111+ 906C D6 08            sub 8
 112+ 906E 67               ld h,a
 113+ 906F 7C           3 ld a,h
 114+ 9070 FE 58            cp $58
 115+ 9072 28 02            jr z,4F
 116+ 9074 10 B7            djnz 1B
 117+ 9076 ED 7B DF 85  4 ld sp,(Stack)
 118+ 907A C9           	ret
 119+ 907B
 120+ 907B              ; ---------------------------------------------------
 121+ 907B
 122+ 907B ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 907F FD F9        	ld sp,iy
 124+ 9081
 125+ 9081              ; >>>
 126+ 9081
 127+ 9081 06 10            ld b,16
 128+ 9083 D1           1 pop de
 129+ 9084 7A           	ld a,d
 130+ 9085 AE           	xor (hl)
 131+ 9086 77           	ld (hl),a
 132+ 9087 24           	inc h
 133+ 9088 7C               ld a,h
 134+ 9089 E6 07            and 7
 135+ 908B 20 0C            jr nz,2F
 136+ 908D 7D               ld a,l
 137+ 908E C6 20            add a,$20
 138+ 9090 6F               ld l,a
 139+ 9091 38 06            jr c,2F
 140+ 9093 7C               ld a,h
 141+ 9094 D6 08            sub 8
 142+ 9096 67               ld h,a
 143+ 9097 18 00            jr 2F
 144+ 9099 7C           2 ld a,h
 145+ 909A FE 58            cp $58
 146+ 909C 28 02            jr z,3F
 147+ 909E 10 E3            djnz 1B
 148+ 90A0 ED 7B DF 85  3 ld sp,(Stack)
 149+ 90A4 C9           	ret
 150+ 90A5
 151+ 90A5 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 90A9 FD F9        	ld sp,iy
 153+ 90AB
 154+ 90AB              ; >>>
 155+ 90AB
 156+ 90AB 06 10            ld b,16
 157+ 90AD D1           1 pop de
 158+ 90AE 7B           	ld a,e
 159+ 90AF AE           	xor (hl)
 160+ 90B0 77           	ld (hl),a
 161+ 90B1 24           	inc h
 162+ 90B2 7C               ld a,h
 163+ 90B3 E6 07            and 7
 164+ 90B5 20 0C            jr nz,2F
 165+ 90B7 7D               ld a,l
 166+ 90B8 C6 20            add a,$20
 167+ 90BA 6F               ld l,a
 168+ 90BB 38 06            jr c,2F
 169+ 90BD 7C               ld a,h
 170+ 90BE D6 08            sub 8
 171+ 90C0 67               ld h,a
 172+ 90C1 18 00            jr 2F
 173+ 90C3 7C           2 ld a,h
 174+ 90C4 FE 58            cp $58
 175+ 90C6 28 02            jr z,3F
 176+ 90C8 10 E3            djnz 1B
 177+ 90CA ED 7B DF 85  3 ld sp,(Stack)
 178+ 90CE C9           	ret
 179+ 90CF
 180+ 90CF              ; ---------------------------------------------------
 181+ 90CF
 182+ 90CF ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 90D3 FD F9        	ld sp,iy
 184+ 90D5 06 08            ld b,8
 185+ 90D7 D1           1 pop de
 186+ 90D8 7A           	ld a,d
 187+ 90D9 AE           	xor (hl)
 188+ 90DA 77           	ld (hl),a
 189+ 90DB 23           	inc hl
 190+ 90DC D1           	pop de
 191+ 90DD 7B           	ld a,e
 192+ 90DE AE           	xor (hl)
 193+ 90DF 77           	ld (hl),a
 194+ 90E0 2B           	dec hl
 195+ 90E1 24            	inc h
 196+ 90E2 7C               ld a,h
 197+ 90E3 E6 07            and 7
 198+ 90E5 20 0A            jr nz,2F
 199+ 90E7 7D               ld a,l
 200+ 90E8 C6 20            add a,$20
 201+ 90EA 6F               ld l,a
 202+ 90EB 38 04            jr c,2F
 203+ 90ED 7C               ld a,h
 204+ 90EE D6 08            sub 8
 205+ 90F0 67               ld h,a
 206+ 90F1 7C           2 ld a,h
 207+ 90F2 FE 58            cp $58
 208+ 90F4 28 20            jr z,4F
 209+ 90F6 D1               pop de
 210+ 90F7 7B           	ld a,e
 211+ 90F8 AE           	xor (hl)
 212+ 90F9 77           	ld (hl),a
 213+ 90FA 23           	inc hl
 214+ 90FB 7A           	ld a,d
 215+ 90FC AE           	xor (hl)
 216+ 90FD 77           	ld (hl),a
 217+ 90FE 2B           	dec hl
 218+ 90FF 24           	inc h
 219+ 9100 7C               ld a,h
 220+ 9101 E6 07            and 7
 221+ 9103 20 0A            jr nz,3F
 222+ 9105 7D               ld a,l
 223+ 9106 C6 20            add a,$20
 224+ 9108 6F               ld l,a
 225+ 9109 38 04            jr c,3F
 226+ 910B 7C               ld a,h
 227+ 910C D6 08            sub 8
 228+ 910E 67               ld h,a
 229+ 910F 7C           3 ld a,h
 230+ 9110 FE 58            cp $58
 231+ 9112 28 02            jr z,4F
 232+ 9114 10 C1            djnz 1B
 233+ 9116 ED 7B DF 85  4 ld sp,(Stack)
 234+ 911A C9           	ret
 235+ 911B
 236+ 911B ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 911F FD F9        	ld sp,iy
 238+ 9121 06 08            ld b,8
 239+ 9123 D1           1 pop de
 240+ 9124 D1           	pop de
 241+ 9125 7B           	ld a,e
 242+ 9126 AE           	xor (hl)
 243+ 9127 77           	ld (hl),a
 244+ 9128 24            	inc h
 245+ 9129 7C               ld a,h
 246+ 912A E6 07            and 7
 247+ 912C 20 0A            jr nz,2F
 248+ 912E 7D               ld a,l
 249+ 912F C6 20            add a,$20
 250+ 9131 6F               ld l,a
 251+ 9132 38 04            jr c,2F
 252+ 9134 7C               ld a,h
 253+ 9135 D6 08            sub 8
 254+ 9137 67               ld h,a
 255+ 9138 7C           2 ld a,h
 256+ 9139 FE 58            cp $58
 257+ 913B 28 1B            jr z,4F
 258+ 913D D1               pop de
 259+ 913E 7A           	ld a,d
 260+ 913F AE           	xor (hl)
 261+ 9140 77           	ld (hl),a
 262+ 9141 24           	inc h
 263+ 9142 7C               ld a,h
 264+ 9143 E6 07            and 7
 265+ 9145 20 0A            jr nz,3F
 266+ 9147 7D               ld a,l
 267+ 9148 C6 20            add a,$20
 268+ 914A 6F               ld l,a
 269+ 914B 38 04            jr c,3F
 270+ 914D 7C               ld a,h
 271+ 914E D6 08            sub 8
 272+ 9150 67               ld h,a
 273+ 9151 7C           3 ld a,h
 274+ 9152 FE 58            cp $58
 275+ 9154 28 02            jr z,4F
 276+ 9156 10 CB            djnz 1B
 277+ 9158 ED 7B DF 85  4 ld sp,(Stack)
 278+ 915C C9           	ret
 279+ 915D
 280+ 915D ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9161 FD F9        	ld sp,iy
 282+ 9163 06 08            ld b,8
 283+ 9165 D1           1 pop de
 284+ 9166 7B           	ld a,e
 285+ 9167 AE           	xor (hl)
 286+ 9168 77           	ld (hl),a
 287+ 9169 23           	inc hl
 288+ 916A 7A           	ld a,d
 289+ 916B AE           	xor (hl)
 290+ 916C 77           	ld (hl),a
 291+ 916D 2B           	dec hl
 292+ 916E 24             	inc h
 293+ 916F 7C               ld a,h
 294+ 9170 E6 07            and 7
 295+ 9172 20 0A            jr nz,2F
 296+ 9174 7D               ld a,l
 297+ 9175 C6 20            add a,$20
 298+ 9177 6F               ld l,a
 299+ 9178 38 04            jr c,2F
 300+ 917A 7C               ld a,h
 301+ 917B D6 08            sub 8
 302+ 917D 67               ld h,a
 303+ 917E 7C           2 ld a,h
 304+ 917F FE 58            cp $58
 305+ 9181 28 21            jr z,4F
 306+ 9183 D1               pop de
 307+ 9184 7A           	ld a,d
 308+ 9185 AE           	xor (hl)
 309+ 9186 77           	ld (hl),a
 310+ 9187 23           	inc hl
 311+ 9188 D1               pop de
 312+ 9189 7B           	ld a,e
 313+ 918A AE           	xor (hl)
 314+ 918B 77           	ld (hl),a
 315+ 918C 2B           	dec hl
 316+ 918D 24           	inc h
 317+ 918E 7C               ld a,h
 318+ 918F E6 07            and 7
 319+ 9191 20 0A            jr nz,3F
 320+ 9193 7D               ld a,l
 321+ 9194 C6 20            add a,$20
 322+ 9196 6F               ld l,a
 323+ 9197 38 04            jr c,3F
 324+ 9199 7C               ld a,h
 325+ 919A D6 08            sub 8
 326+ 919C 67               ld h,a
 327+ 919D 7C           3 ld a,h
 328+ 919E FE 58            cp $58
 329+ 91A0 28 02            jr z,4F
 330+ 91A2 10 C1            djnz 1B
 331+ 91A4 ED 7B DF 85  4 ld sp,(Stack)
 332+ 91A8 C9           	ret
 333+ 91A9
 334+ 91A9 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 91AD FD F9        	ld sp,iy
 336+ 91AF 06 08            ld b,8
 337+ 91B1 D1           1 pop de
 338+ 91B2 7B           	ld a,e
 339+ 91B3 AE           	xor (hl)
 340+ 91B4 77           	ld (hl),a
 341+ 91B5 24            	inc h
 342+ 91B6 7C               ld a,h
 343+ 91B7 E6 07            and 7
 344+ 91B9 20 0A            jr nz,2F
 345+ 91BB 7D               ld a,l
 346+ 91BC C6 20            add a,$20
 347+ 91BE 6F               ld l,a
 348+ 91BF 38 04            jr c,2F
 349+ 91C1 7C               ld a,h
 350+ 91C2 D6 08            sub 8
 351+ 91C4 67               ld h,a
 352+ 91C5 7C           2 ld a,h
 353+ 91C6 FE 58            cp $58
 354+ 91C8 28 1C            jr z,4F
 355+ 91CA D1               pop de
 356+ 91CB 7A           	ld a,d
 357+ 91CC AE           	xor (hl)
 358+ 91CD 77           	ld (hl),a
 359+ 91CE 24           	inc h
 360+ 91CF 7C               ld a,h
 361+ 91D0 E6 07            and 7
 362+ 91D2 20 0A            jr nz,3F
 363+ 91D4 7D               ld a,l
 364+ 91D5 C6 20            add a,$20
 365+ 91D7 6F               ld l,a
 366+ 91D8 38 04            jr c,3F
 367+ 91DA 7C               ld a,h
 368+ 91DB D6 08            sub 8
 369+ 91DD 67               ld h,a
 370+ 91DE 7C           3 ld a,h
 371+ 91DF FE 58            cp $58
 372+ 91E1 28 03            jr z,4F
 373+ 91E3 D1               pop de
 374+ 91E4 10 CB            djnz 1B
 375+ 91E6 ED 7B DF 85  4 ld sp,(Stack)
 376+ 91EA C9           	ret
 377+ 91EB
 378+ 91EB              ; ---------------------------------------------------
 379+ 91EB              ;
 380+ 91EB              ;   27/02/23
 381+ 91EB              ;
 382+ 91EB              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 91EB              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 91EB              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 91EB
 386+ 91EB ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 91EF FD F9            ld sp,iy
 388+ 91F1 06 02            ld b,2
 389+ 91F3 D1           1 pop de
 390+ 91F4 7B               ld a,e
 391+ 91F5 AE               xor (hl)
 392+ 91F6 77               ld (hl),a
 393+ 91F7 23               inc hl
 394+ 91F8 7A               ld a,d
 395+ 91F9 AE               xor (hl)
 396+ 91FA 77               ld (hl),a
 397+ 91FB 2B               dec hl
 398+ 91FC
 399+ 91FC 24               inc h
 400+ 91FD 7C               ld a,h
 401+ 91FE E6 07            and 7
 402+ 9200 20 0A            jr nz,2F
 403+ 9202 7D               ld a,l
 404+ 9203 C6 20            add a,$20
 405+ 9205 6F               ld l,a
 406+ 9206 38 04            jr c,2F
 407+ 9208 7C               ld a,h
 408+ 9209 D6 08            sub 8
 409+ 920B 67               ld h,a
 410+ 920C 7C           2 ld a,h
 411+ 920D FE 58            cp $58
 412+ 920F 28 02            jr z,3F
 413+ 9211
 414+ 9211 10 E0            djnz 1B
 415+ 9213 ED 7B DF 85  3 ld sp,(Stack)
 416+ 9217 C9               ret
 417+ 9218
# file closed: Rutinas_de_impresion_sprites.asm
 888  9218              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9218              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9218              ;
   3+ 9218              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9218              ;
   5+ 9218              ; *****************************************************************************************************************************************************************************************
   6+ 9218              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9218
   8+ 9218 7C           calcula_tercio ld a,h
   9+ 9219 E6 18        	and $18
  10+ 921B CB 2F        	sra a
  11+ 921D CB 2F        	sra a
  12+ 921F CB 2F        	sra a
  13+ 9221 C9           	ret
  14+ 9222
# file closed: calcula_tercio.asm
 889  9222              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9222              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9222              ;
   3+ 9222              ;
   4+ 9222              ;	CLS.
   5+ 9222              ;
   6+ 9222              ;	Limpia la pantalla y define sus atributos.
   7+ 9222              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9222              ;
   9+ 9222              ;	COLORES: 0 ..... NEGRO
  10+ 9222              ;    		 1 ..... AZUL
  11+ 9222              ; 			 2 ..... ROJO
  12+ 9222              ;			 3 ..... MAGENTA
  13+ 9222              ; 			 4 ..... VERDE
  14+ 9222              ; 			 5 ..... CIAN
  15+ 9222              ;			 6 ..... AMARILLO
  16+ 9222              ; 			 7 ..... BLANCO
  17+ 9222              ;
  18+ 9222              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9222              ;
  20+ 9222              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9222
  22+ 9222
  23+ 9222 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9225 11 01 40     	LD DE,$4001
  25+ 9228 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 922B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 922D ED B0        	LDIR
  28+ 922F 01 FF 02     	LD BC,767
  29+ 9232 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9233 ED B0        	LDIR
  31+ 9235 C9           	ret
  32+ 9236
# file closed: Cls.asm
 890  9236              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9236              ; ******************************************************************************************************************************************************************************************
   2+ 9236              ;
   3+ 9236              ;   22/01/23
   4+ 9236              ;
   5+ 9236              ;	Mov_down
   6+ 9236              ;
   7+ 9236              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9236              ;
   9+ 9236              ;
  10+ 9236 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9239 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 923B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 923B              ; 																	; _ en el caso de que no lo haya.
  14+ 923B 3A B3 85     	ld a,(Vel_down)
  15+ 923E 47           	ld b,a
  16+ 923F 2A 9D 85         ld hl,(Posicion_actual)
  17+ 9242 CD 18 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9245 E6 02        	and 2
  19+ 9247 28 0F        	jr z,1F
  20+ 9249
  21+ 9249              ; Nos encontramos en el último tercio de pantalla.
  22+ 9249              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9249
  24+ 9249 7C           	ld a,h
  25+ 924A FE 57        	cp $57
  26+ 924C 20 0A        	jr nz,1F
  27+ 924E 7D           	ld a,l
  28+ 924F C6 20        	add $20
  29+ 9251 30 05        	jr nc,1F
  30+ 9253
  31+ 9253              ; ------------------------------
  32+ 9253 CD 2E 95     	call Reaparece_arriba
  33+ 9256              ;	call Reinicio
  34+ 9256              ; ------------------------------
  35+ 9256
  36+ 9256 18 08        	jr 3F
  37+ 9258 CD 58 8F     1 call NextScan
  38+ 925B 22 9D 85     	ld (Posicion_actual),hl
  39+ 925E 10 E2            djnz 2B
  40+ 9260 CD 44 95     3 call Genera_coordenadas
  41+ 9263 C9           	ret
  42+ 9264
  43+ 9264              ; ******************************************************************************************************************************************************************************************
  44+ 9264              ;
  45+ 9264              ;   22/01/23
  46+ 9264              ;
  47+ 9264              ;	Mov_up
  48+ 9264              ;
  49+ 9264              ; 	Mueve el Sprite hacia arriba.
  50+ 9264              ;
  51+ 9264              ;
  52+ 9264 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9267 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9269              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9269              ; 																		; _ en el caso de que no lo haya.
  56+ 9269 3A B2 85     	ld a,(Vel_up)
  57+ 926C 47           	ld b,a
  58+ 926D 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9270 CD 18 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9273 A7           	and a
  61+ 9274 20 10        	jr nz,1F
  62+ 9276
  63+ 9276              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9276              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9276
  66+ 9276 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9277 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9279 20 0B            jr nz,1F
  69+ 927B 7D               ld a,l
  70+ 927C D6 20            sub $20
  71+ 927E 30 06            jr nc,1F
  72+ 9280 25               dec h
  73+ 9281
  74+ 9281              ; -----------------------------
  75+ 9281 CD 1E 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9284              ;	call Reinicio
  77+ 9284              ; -----------------------------
  78+ 9284
  79+ 9284 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9286 CD 67 8F     1 call PreviousScan
  81+ 9289 22 9D 85     	ld (Posicion_actual),hl
  82+ 928C 10 E2            djnz 3B
  83+ 928E CD 44 95     2 call Genera_coordenadas
  84+ 9291 C9           	ret
  85+ 9292
  86+ 9292              ; ******************************************************************************************************************************************************************************************
  87+ 9292              ;
  88+ 9292              ;	19/10/22
  89+ 9292              ;
  90+ 9292              ;	Mov_right.
  91+ 9292              ;
  92+ 9292              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9292              ;
  94+ 9292
  95+ 9292 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 9295 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9297              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9297              ; 																	; _ en el caso de que no lo haya.
  99+ 9297 3A C9 85     	ld a,(Ctrl_0)
 100+ 929A CB 77        	bit 6,a
 101+ 929C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 929E
 103+ 929E CD CC 94     	call Stop_Amadeus_right
 104+ 92A1 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 92A2 18 4D        	jr 8F
 106+ 92A4
 107+ 92A4 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 92A7 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 92A9 20 46        	jr nz,8F
 110+ 92AB
 111+ 92AB 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 92AE A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 92AF 28 40        	jr z,8F
 114+ 92B1
 115+ 92B1              ; ---------- ---------- ----------
 116+ 92B1              ;
 117+ 92B1              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 92B1
 119+ 92B1 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 92B4 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 92B6 28 11        	jr z,1F
 122+ 92B8 38 06        	jr c,6F
 123+ 92BA FE 04        	cp 4
 124+ 92BC 28 14        	jr z,7F
 125+ 92BE 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 92C0
 127+ 92C0              ; ---------- ---------- ----------
 128+ 92C0              ;
 129+ 92C0              ; Perfiles de velocidad
 130+ 92C0              ;
 131+ 92C0
 132+ 92C0 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 92C3 FE FE        	cp $fe
 134+ 92C5 20 2A        	jr nz,8F
 135+ 92C7 18 10        	jr 3F
 136+ 92C9 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 92CC FE FD        	cp $fd
 138+ 92CE 20 21        	jr nz,8F
 139+ 92D0 18 07        	jr 3F
 140+ 92D2 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 92D5 FE FB        	cp $fb
 142+ 92D7 20 18        	jr nz,8F
 143+ 92D9
 144+ 92D9              ; ---------- ---------- ----------
 145+ 92D9
 146+ 92D9              3
 147+ 92D9 CD 0C 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 92DC              ;	call Reinicio
 149+ 92DC
 150+ 92DC              ; ---------- ---------- ----------
 151+ 92DC              ;
 152+ 92DC              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 92DC
 154+ 92DC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 92DE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 92DF CD F8 92     	call DESPLZ_DER
 157+ 92E2 C1           	pop bc
 158+ 92E3 10 F9        	djnz 5B
 159+ 92E5 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 92E8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 92E9 22 9D 85     	ld (Posicion_actual),hl
 162+ 92EC CD 44 95     	call Genera_coordenadas
 163+ 92EF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 92F1
 165+ 92F1              ; ---------- ---------- ----------
 166+ 92F1
 167+ 92F1 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 92F4 CD F8 92     	call DESPLZ_DER
 169+ 92F7 C9           2 ret
 170+ 92F8
 171+ 92F8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 92F8              ;
 173+ 92F8              ;	22/9/22
 174+ 92F8              ;
 175+ 92F8
 176+ 92F8 CD 07 93     DESPLZ_DER call Desplaza_derecha
 177+ 92FB CD 53 93         call modifica_parametros_1er_DESPLZ_2
 178+ 92FE CD 7C 93         call Ciclo_completo
 179+ 9301 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9304 CB FE        	set 7,(hl)
 181+ 9306 C9           	ret
 182+ 9307
 183+ 9307              ; ******************************************************************************************************************************************************************************************
 184+ 9307              ;	15/02/23
 185+ 9307              ;
 186+ 9307
 187+ 9307 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 930A 47           	ld b,a
 189+ 930B 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 930E 23           1 inc hl
 191+ 930F 23           	inc hl
 192+ 9310 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9312 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9315 CD AB 87     	call Extrae_address
 195+ 9318 22 9F 85     	ld (Puntero_objeto),hl
 196+ 931B
 197+ 931B              ; Modifica (Puntero_DESPLZ_izq).
 198+ 931B
 199+ 931B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 931B              ; Cuántos movimientos hemos hecho ??
 201+ 931B              ; DE contiene (Puntero_DESPLZ_der).
 202+ 931B
 203+ 931B 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 931E EB           	ex de,hl
 205+ 931F A7           	and a
 206+ 9320 ED 52        	sbc hl,de
 207+ 9322 CB 3D        	srl l
 208+ 9324 3E 08        6 ld a,8
 209+ 9326 95           	sub l
 210+ 9327 30 1E        	jr nc,3F
 211+ 9329
 212+ 9329              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9329              ; B="0".
 214+ 9329
 215+ 9329 04           4 inc b
 216+ 932A 3C           	inc a
 217+ 932B 20 FC        	jr nz,4B
 218+ 932D 78           	ld a,b
 219+ 932E 08           	ex af,af
 220+ 932F 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 9332 23           5 inc hl
 222+ 9333 23           	inc hl
 223+ 9334 10 FC        	djnz 5B
 224+ 9336 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9339 CD AB 87     	call Extrae_address
 226+ 933C 22 9F 85     	ld (Puntero_objeto),hl
 227+ 933F
 228+ 933F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 933F              ; _(Posicion_actual).
 230+ 933F
 231+ 933F 21 9D 85     	ld hl,Posicion_actual
 232+ 9342 34           	inc (hl)
 233+ 9343 08               ex af,af
 234+ 9344 6F           	ld l,a
 235+ 9345 18 DD        	jr 6B
 236+ 9347
 237+ 9347              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9347
 239+ 9347 47           3 ld b,a
 240+ 9348 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 934B 23           2 inc hl
 242+ 934C 23           	inc hl
 243+ 934D 10 FC        	djnz 2B
 244+ 934F 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 9352 C9           8 ret
 246+ 9353
 247+ 9353              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 9353              ;
 249+ 9353              ;	24/7/22
 250+ 9353              ;
 251+ 9353              ;	modifica_parametros_1er_DESPLZ_2
 252+ 9353              ;
 253+ 9353              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 9353              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 9353              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 9353
 257+ 9353 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9356 A7           	and a
 259+ 9357 20 1F        	jr nz,1F
 260+ 9359 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 935B 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 935E
 263+ 935E 21 9C 85     	ld hl,Columns
 264+ 9361 34           	inc (hl)
 265+ 9362 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9365 E6 01        	and 1
 267+ 9367 28 0F        	jr z,1F
 268+ 9369 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 936C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 936D 22 9D 85     	ld (Posicion_actual),hl
 271+ 9370 CD 44 95     	call Genera_coordenadas
 272+ 9373 CD D8 94     	call Inc_CTRL_DESPLZ
 273+ 9376 18 03        	jr 2F
 274+ 9378 CD D8 94     1 call Inc_CTRL_DESPLZ
 275+ 937B C9           2 ret
 276+ 937C
 277+ 937C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 937C              ;
 279+ 937C              ;	24/7/22
 280+ 937C              ;
 281+ 937C              ;	Ciclo_completo.
 282+ 937C              ;
 283+ 937C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 937C              ;
 285+ 937C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 937C              ; 	Decrementamos (Columns).
 287+ 937C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 937C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 937C
 290+ 937C
 291+ 937C 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 937F FE FF        	cp $ff
 293+ 9381 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9383 E6 F0        	and $f0
 295+ 9385 20 28        	jr nz,3F
 296+ 9387
 297+ 9387              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9387
 299+ 9387 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 938A 47           	ld b,a
 301+ 938B 3E F8        	ld a,$f8
 302+ 938D 80           	add b
 303+ 938E 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 9391 18 1C        	jr 3F
 305+ 9393 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9396 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9397 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9398 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 939B 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 939E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 93A0 20 0A        	jr nz,2F
 312+ 93A2 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 93A5 23           	inc hl
 314+ 93A6 22 9D 85     	ld (Posicion_actual),hl
 315+ 93A9 CD 44 95     	call Genera_coordenadas
 316+ 93AC
 317+ 93AC              ; Inicia el puntero de Sprite.
 318+ 93AC
 319+ 93AC CD C2 87     2 call Inicia_puntero_objeto_der
 320+ 93AF C9           3 ret
 321+ 93B0
 322+ 93B0              ; ******************************************************************************************************************************************************************************************
 323+ 93B0              ;
 324+ 93B0              ;	15/02/23
 325+ 93B0              ;
 326+ 93B0              ;	Mov_left.
 327+ 93B0              ;
 328+ 93B0              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 93B0              ;
 330+ 93B0              Mov_left
 331+ 93B0
 332+ 93B0 21 C9 85     	ld hl,Ctrl_0
 333+ 93B3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 93B5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 93B5              ; 																	; _ en el caso de que no lo haya.
 336+ 93B5 3A C9 85     	ld a,(Ctrl_0)
 337+ 93B8 CB 77        	bit 6,a
 338+ 93BA 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 93BC
 340+ 93BC CD D2 94     	call Stop_Amadeus_left
 341+ 93BF C8           	ret z
 342+ 93C0 20 4A        	jr nz,8F
 343+ 93C2
 344+ 93C2 3A A1 85     11 ld a,(Coordenada_X)
 345+ 93C5 A7           	and a
 346+ 93C6 20 44        	jr nz,8F
 347+ 93C8
 348+ 93C8 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 93CB A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 93CC 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 93CE
 352+ 93CE              ; ---------- ---------- ----------
 353+ 93CE
 354+ 93CE 3A B0 85     	ld a,(Vel_left)
 355+ 93D1 FE 02        	cp 2
 356+ 93D3 28 0F        	jr z,1F
 357+ 93D5 38 04        	jr c,6F
 358+ 93D7 FE 04        	cp 4
 359+ 93D9 28 12        	jr z,7F
 360+ 93DB
 361+ 93DB              ; ---------- ---------- ----------
 362+ 93DB
 363+ 93DB 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 93DE FE F9        	cp $f9
 365+ 93E0 20 2A        	jr nz,8F
 366+ 93E2 18 10        	jr 4F
 367+ 93E4 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 93E7 FE FA        	cp $fa
 369+ 93E9 20 21        	jr nz,8F
 370+ 93EB 18 07        	jr 4F
 371+ 93ED 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 93F0 FE FC        	cp $fc
 373+ 93F2 20 18        	jr nz,8F
 374+ 93F4
 375+ 93F4              ; ---------- ---------- ----------
 376+ 93F4
 377+ 93F4              4
 378+ 93F4 CD FA 94     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 93F7              ;	call Reinicio
 380+ 93F7
 381+ 93F7              ; ---------- ---------- ----------
 382+ 93F7
 383+ 93F7 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 93F9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 93FA
 386+ 93FA              ;	ld hl,(Indice_Sprite_izq)
 387+ 93FA              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 93FA
 389+ 93FA CD 13 94     	call DESPLZ_IZQ
 390+ 93FD C1           	pop bc
 391+ 93FE 10 F9        	djnz 5B
 392+ 9400 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9403 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9404 22 9D 85     	ld (Posicion_actual),hl
 395+ 9407 CD 44 95     	call Genera_coordenadas
 396+ 940A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 940C
 398+ 940C              ; ---------- ---------- ----------
 399+ 940C
 400+ 940C              ; Movemos, no hay recolocación.
 401+ 940C
 402+ 940C 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 940F CD 13 94     	call DESPLZ_IZQ
 404+ 9412 C9           2 ret
 405+ 9413
 406+ 9413              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9413              ;
 408+ 9413              ;	22/9/22
 409+ 9413
 410+ 9413              DESPLZ_IZQ
 411+ 9413
 412+ 9413 CD 22 94     	call Desplaza_izquierda
 413+ 9416 CD 6E 94         call modifica_parametros_1er_DESPLZ
 414+ 9419 CD 96 94     	call Ciclo_completo_2
 415+ 941C 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 941F CB BE        	res 7,(hl)
 417+ 9421 C9           	ret
 418+ 9422
 419+ 9422              Desplaza_izquierda
 420+ 9422
 421+ 9422 3A B0 85     	ld a,(Vel_left)
 422+ 9425 47           	ld b,a
 423+ 9426 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9429 23           1 inc hl
 425+ 942A 23           	inc hl
 426+ 942B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 942D 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9430 CD AB 87     	call Extrae_address
 429+ 9433 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9436
 431+ 9436              ; Modifica (Puntero_DESPLZ_der).
 432+ 9436
 433+ 9436              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9436              ; Cuántos movimientos hemos hecho ??
 435+ 9436              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9436
 437+ 9436 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9439 EB           	ex de,hl
 439+ 943A A7           	and a
 440+ 943B ED 52        	sbc hl,de
 441+ 943D CB 3D        	srl l
 442+ 943F 3E 08        6 ld a,8
 443+ 9441 95           	sub l
 444+ 9442 30 1E        	jr nc,3F
 445+ 9444
 446+ 9444              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 9444              ; B="0".
 448+ 9444
 449+ 9444 04           4 inc b
 450+ 9445 3C           	inc a
 451+ 9446 20 FC        	jr nz,4B
 452+ 9448 78           	ld a,b
 453+ 9449 08           	ex af,af
 454+ 944A 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 944D 23           5 inc hl
 456+ 944E 23           	inc hl
 457+ 944F 10 FC        	djnz 5B
 458+ 9451 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 9454 CD AB 87     	call Extrae_address
 460+ 9457 22 9F 85     	ld (Puntero_objeto),hl
 461+ 945A
 462+ 945A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 945A              ; _(Posicion_actual).
 464+ 945A
 465+ 945A 21 9D 85     	ld hl,Posicion_actual
 466+ 945D 35           	dec (hl)
 467+ 945E 08           	ex af,af
 468+ 945F 6F           	ld l,a
 469+ 9460 18 DD        	jr 6B
 470+ 9462
 471+ 9462              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9462
 473+ 9462 47           3 ld b,a
 474+ 9463 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9466 23           2 inc hl
 476+ 9467 23           	inc hl
 477+ 9468 10 FC        	djnz 2B
 478+ 946A 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 946D C9           8 ret
 480+ 946E
 481+ 946E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 946E              ;
 483+ 946E              ;	modifica_parametros_1er_DESPLZ
 484+ 946E              ;
 485+ 946E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 946E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 946E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 946E
 489+ 946E 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9471 A7           	and a
 491+ 9472 20 1E        	jr nz,1F
 492+ 9474 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9475 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9478 21 9C 85     	ld hl,Columns
 495+ 947B 34           	inc (hl)
 496+ 947C 3A AF 85     	ld a,(Cuad_objeto)
 497+ 947F E6 01        	and 1
 498+ 9481 20 0F        	jr nz,1F
 499+ 9483 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9486 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9487 22 9D 85     	ld (Posicion_actual),hl
 502+ 948A CD 44 95     	call Genera_coordenadas
 503+ 948D CD E9 94     	call Dec_CTRL_DESPLZ
 504+ 9490 18 03        	jr 2F
 505+ 9492 CD E9 94     1 call Dec_CTRL_DESPLZ
 506+ 9495 C9           2 ret
 507+ 9496
 508+ 9496              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9496
 510+ 9496 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9499 FE F7        	cp $f7
 512+ 949B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 949D 30 2C        	jr nc,3F
 514+ 949F
 515+ 949F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 949F
 517+ 949F 06 00        	ld b,0
 518+ 94A1 04           4 inc b
 519+ 94A2 3C           	inc a
 520+ 94A3 FE F7        	cp $f7
 521+ 94A5 20 FA        	jr nz,4B
 522+ 94A7 3E FF        	ld a,$ff
 523+ 94A9 90           	sub b
 524+ 94AA 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 94AD 18 1C        	jr 3F
 526+ 94AF
 527+ 94AF              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 94AF
 529+ 94AF 21 9C 85     1 ld hl,Columns
 530+ 94B2 35           	dec (hl)
 531+ 94B3 AF           	xor a
 532+ 94B4 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 94B7 3A AF 85     	ld a,(Cuad_objeto)
 534+ 94BA E6 01        	and 1
 535+ 94BC 28 0A        	jr z,2F
 536+ 94BE 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 94C1 2B           	dec hl
 538+ 94C2 22 9D 85     	ld (Posicion_actual),hl
 539+ 94C5 CD 44 95     	call Genera_coordenadas
 540+ 94C8
 541+ 94C8              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 94C8
 543+ 94C8 CD D5 87     2 call Inicia_puntero_objeto_izq
 544+ 94CB C9           3 ret
 545+ 94CC
 546+ 94CC              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 94CC              ;
 548+ 94CC              ;	19/10/22
 549+ 94CC              ;
 550+ 94CC              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 94CC              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 94CC
 553+ 94CC 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 94CF FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 94D1 C9           	ret
 556+ 94D2
 557+ 94D2              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 94D2              ;
 559+ 94D2              ;	19/10/22
 560+ 94D2              ;
 561+ 94D2              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 94D2              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 94D2
 564+ 94D2 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 94D5 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 94D7 C9           	ret
 567+ 94D8
 568+ 94D8              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 94D8              ;
 570+ 94D8              ;	24/7/22
 571+ 94D8              ;
 572+ 94D8              ;	Inc_CTRL_DESPLZ
 573+ 94D8              ;
 574+ 94D8              ;
 575+ 94D8              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 94D8
 577+ 94D8 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 94DB 3A B1 85     	ld a,(Vel_right)
 579+ 94DE A7           	and a
 580+ 94DF 28 06        	jr z,1F
 581+ 94E1 47           	ld b,a
 582+ 94E2 34           3 inc (hl)
 583+ 94E3 10 FD        	djnz 3B
 584+ 94E5 18 01        	jr 2F
 585+ 94E7 34           1 inc (hl)
 586+ 94E8 C9           2 ret
 587+ 94E9
 588+ 94E9              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 94E9              ;
 590+ 94E9              ;	5/2/23
 591+ 94E9              ;
 592+ 94E9              ;	Dec_CTRL_DESPLZ
 593+ 94E9              ;
 594+ 94E9              ;
 595+ 94E9              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 94E9
 597+ 94E9 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 94EC 3A B0 85     	ld a,(Vel_left)
 599+ 94EF A7           	and a
 600+ 94F0 28 06        	jr z,1F
 601+ 94F2 47           	ld b,a
 602+ 94F3 35           3 dec (hl)
 603+ 94F4 10 FD        	djnz 3B
 604+ 94F6 18 01        	jr 2F
 605+ 94F8 35           1 dec (hl)
 606+ 94F9 C9           2 ret
 607+ 94FA
 608+ 94FA              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 94FA
 610+ 94FA 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 94FD 01 1F 00     	ld bc,31
 612+ 9500 A7           	and a
 613+ 9501 ED 4A        	adc hl,bc
 614+ 9503 22 9D 85     	ld (Posicion_actual),hl
 615+ 9506 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9509 CB C6        	set 0,(hl)
 617+ 950B C9           	ret
 618+ 950C
 619+ 950C              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 950C
 621+ 950C 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 950F 01 1F 00     	ld bc,31
 623+ 9512 A7           	and a
 624+ 9513 ED 42        	sbc hl,bc
 625+ 9515 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9518 21 C9 85     	ld hl,Ctrl_0
 627+ 951B CB CE        	set 1,(hl)
 628+ 951D C9           	ret
 629+ 951E
 630+ 951E              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 951E
 632+ 951E 24           Reaparece_abajo inc h
 633+ 951F 01 E0 17     	ld bc,$17e0
 634+ 9522 A7           	and a
 635+ 9523 ED 4A        	adc hl,bc
 636+ 9525 22 9D 85     	ld (Posicion_actual),hl
 637+ 9528 21 C9 85     	ld hl,Ctrl_0
 638+ 952B CB D6        	set 2,(hl)
 639+ 952D C9           	ret
 640+ 952E
 641+ 952E              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 952E
 643+ 952E 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9531 A7           	and a
 645+ 9532 ED 42        	sbc hl,bc
 646+ 9534 22 9D 85     	ld (Posicion_actual),hl
 647+ 9537 21 C9 85     	ld hl,Ctrl_0
 648+ 953A CB DE        	set 3,(hl)
 649+ 953C C9           	ret
 650+ 953D
 651+ 953D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 953D
 653+ 953D 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9540 22 9D 85     	ld (Posicion_actual),hl
 655+ 9543 C9           	ret
# file closed: Direcciones.asm
 891  9544              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9544              ; ------------------------------------------------------------------------
   2+ 9544              ;
   3+ 9544              ;	02/04/23
   4+ 9544              ;
   5+ 9544              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9544              ;	Fila superior "0", Columna izquierda "0".
   7+ 9544              ;
   8+ 9544              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9544              ;
  10+ 9544              ;	Modifica: A,BC y DE.
  11+ 9544
  12+ 9544 C5           Genera_coordenadas push bc
  13+ 9545 E5           	push hl
  14+ 9546 D5           	push de
  15+ 9547
  16+ 9547 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 954A
  18+ 954A 7D           	ld a,l
  19+ 954B E6 1F        	and $1f
  20+ 954D 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9550
  22+ 9550 CD 18 92     	call calcula_tercio
  23+ 9553 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9554
  25+ 9554 1E 00        	ld e,0
  26+ 9556 7D           	ld a,l
  27+ 9557 E6 E0        	and $e0
  28+ 9559 28 01        	jr z,1F
  29+ 955B 04           	inc b
  30+ 955C
  31+ 955C 04           1 inc b
  32+ 955D 05           	dec b
  33+ 955E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9560              ;														; _ , salimos.
  35+ 9560 1C           3 inc e
  36+ 9561 D6 20        	sub 32
  37+ 9563 20 FB        	jr nz,3B
  38+ 9565 10 F5        	djnz 1B
  39+ 9567
  40+ 9567 7B           2 ld a,e
  41+ 9568 32 A2 85     	ld (Coordenada_y),a
  42+ 956B
  43+ 956B D1           	pop de
  44+ 956C E1           	pop hl
  45+ 956D C1           	pop bc
  46+ 956E
  47+ 956E C9           	ret
  48+ 956F
  49+ 956F              ; ------------------------------------------------------------------------
  50+ 956F              ;	28/03/23
  51+ 956F              ;
  52+ 956F              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 956F              ;	Fila superior "0", Columna izquierda "0".
  54+ 956F              ;
  55+ 956F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 956F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 956F              ;
  58+ 956F              ;		DE="$120d"
  59+ 956F              ;
  60+ 956F              ;		D, (Coordenada_X), Columnas, $12
  61+ 956F              ;		E, (Coordenada_y), Filas, $0d
  62+ 956F              ;
  63+ 956F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 956F
  65+ 956F              ;	Modifica: A,BC y DE.
  66+ 956F
  67+ 956F
  68+ 956F              Genera_coordenadas_disparo
  69+ 956F
  70+ 956F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 956F
  72+ 956F 7D           	ld a,l
  73+ 9570 E6 1F        	and $1f
  74+ 9572 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9573 CD 18 92     	call calcula_tercio
  76+ 9576 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9577 1E 00        	ld e,0
  78+ 9579 7D           	ld a,l
  79+ 957A E6 E0        	and $e0
  80+ 957C 28 01        	jr z,1F
  81+ 957E 04           	inc b
  82+ 957F 1C           1 inc e
  83+ 9580 D6 20        	sub 32
  84+ 9582 20 FB        	jr nz,1B
  85+ 9584 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9586 C9           	ret
  87+ 9587
# file closed: Genera_coordenadas.asm
 892  9587              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9587
   2+ 9587
   3+ 9587              ;   11/8/22
   4+ 9587              ;
   5+ 9587              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9587              ;
   7+ 9587              ;   Mov_obj.asm
   8+ 9587              ;
   9+ 9587              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9587              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9587              ;
  12+ 9587              ;   Codificación:
  13+ 9587              ;
  14+ 9587              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9587
  16+ 9587              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9587
  18+ 9587 02 40 00     Arriba db 2,%01000000,0
  19+ 958A 02 80 00     Abajo db 2,%10000000,0
  20+ 958D 02 20 00     Derecha db 2,%00100000,0
  21+ 9590 02 10 00     Izquierda db 2,%00010000,0
  22+ 9593 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9597 60 42 60 40
  22+ 959B 63
  23+ 959C 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 95A0 22 A3 80 A0
  24+ 95A4 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 95A8 84 A0 83 A0
  25+ 95AC 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 95B0 80 A3 22 A0
  26+ 95B4 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 95B8 40 60 42 60
  27+ 95BC 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 95C0
  29+ 95C0 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 95C4 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 95C8 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 95CC 84 00
  32+ 95CE 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 95D2 84 00
  33+ 95D4 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 95D8 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 95DC 1F 1F 1F 1F
  35+ 95E0 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 95E4 1F 1F 1F 1F
  35+ 95E8 1F
  36+ 95E9 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 95ED 2F 2F 2F 2F
  36+ 95F1 2F 2F
  37+ 95F3 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 95F7 2F 2F 00
  38+ 95FA
  39+ 95FA              ; ----- ----- ----- ----- -----
  40+ 95FA
  41+ 95FA D8 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 95FC D4 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 95FE 90 95        Indice_mov_Izquierda defw Izquierda
  44+ 9600 8D 95        Indice_mov_Derecha defw Derecha
  45+ 9602 8A 95        Indice_mov_Abajo defw Abajo
  46+ 9604 87 95        Indice_mov_Arriba defw Arriba
  47+ 9606 C4 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9608 C8 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 960A C0 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 960C CE 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 960E 93 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9610              ; ----- ----- ----- ----- -----
  53+ 9610
  54+ 9610 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9613 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9614 28 02            jr z,1F
  57+ 9616 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9618 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 961B C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 961D 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9620              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9620 2A CD 85         ld hl,(Puntero_mov)
  63+ 9623 7E               ld a,(hl)
  64+ 9624 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9627 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9628 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 962B
  68+ 962B 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 962E A7               and a
  70+ 962F 20 0C            jr nz,12F
  71+ 9631 2A CD 85         ld hl,(Puntero_mov)
  72+ 9634 7E               ld a,(hl)
  73+ 9635 A7               and a
  74+ 9636 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9638 E6 0F            and $0f
  76+ 963A 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 963D              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 963D 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9640 CB 7E            bit 7,(hl)
  80+ 9642 28 03            jr z,2F
  81+ 9644 CD 36 92         call Mov_down
  82+ 9647 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 964A CB 76            bit 6,(hl)
  84+ 964C 28 03            jr z,3F
  85+ 964E CD 64 92         call Mov_up
  86+ 9651 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 9654 CB 6E            bit 5,(hl)
  88+ 9656 28 03            jr z,4F
  89+ 9658 CD 92 92         call Mov_right
  90+ 965B 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 965E CB 66            bit 4,(hl)
  92+ 9660 28 03            jr z,5F
  93+ 9662 CD B0 93         call Mov_left
  94+ 9665
  95+ 9665              ; ---------- --------- --------- ---------- ----------
  96+ 9665
  97+ 9665 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9668 A7               and a
  99+ 9669 28 07            jr z,6F
 100+ 966B 3D               dec a
 101+ 966C 32 D1 85         ld (Repetimos_db),a
 102+ 966F 28 01            jr z,6f
 103+ 9671 C9           11 ret
 104+ 9672 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9675 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9676 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9679 23               inc hl
 108+ 967A 22 CD 85         ld (Puntero_mov),hl
 109+ 967D 18 F2            jr 11B
 110+ 967F 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9682 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9685 47               ld b,a
 113+ 9686 23           8 inc hl
 114+ 9687 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9689 5E               ld e,(hl)
 116+ 968A 23               inc hl
 117+ 968B 56               ld d,(hl)
 118+ 968C EB               ex de,hl
 119+ 968D 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9690 18 DF            jr 11B
 121+ 9692
 122+ 9692              ; ---------- --------- --------- ---------- ----------
 123+ 9692              ;
 124+ 9692              ;   11/8/22
 125+ 9692              ;
 126+ 9692              ;   Prepara_Puntero_mov
 127+ 9692
 128+ 9692 E5           Prepara_Puntero_mov push hl
 129+ 9693 D5               push de
 130+ 9694 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 9697 5E               ld e,(hl)
 132+ 9698 23               inc hl
 133+ 9699 56               ld d,(hl)
 134+ 969A EB               ex de,hl
 135+ 969B 22 CD 85         ld (Puntero_mov),hl
 136+ 969E D1               pop de
 137+ 969F E1               pop hl
 138+ 96A0 C9               ret
 139+ 96A1
 140+ 96A1              ; ---------- --------- --------- ---------- ----------
 141+ 96A1              ;
 142+ 96A1              ;   11/8/22
 143+ 96A1              ;
 144+ 96A1              ;   Reinicia_el_movimiento
 145+ 96A1
 146+ 96A1 CD 92 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 96A4 AF               xor a
 148+ 96A5 32 CF 85         ld (Contador_db_mov),a
 149+ 96A8 32 D0 85         ld (Incrementa_puntero),a
 150+ 96AB C3 10 96         jp Movimiento
 151+ 96AE C9               ret
 152+ 96AF              ; ---------- --------- --------- ---------- ----------
 153+ 96AF
 154+ 96AF
 155+ 96AF
 156+ 96AF
 157+ 96AF
 158+ 96AF
 159+ 96AF
 160+ 96AF
 161+ 96AF
 162+ 96AF
 163+ 96AF
 164+ 96AF
 165+ 96AF
 166+ 96AF
 167+ 96AF
 168+ 96AF
 169+ 96AF
 170+ 96AF
# file closed: Patrones_de_mov.asm
 893  96AF              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 96AF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 96AF              ;
   3+ 96AF              ;	3/1/23
   4+ 96AF              ;
   5+ 96AF              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 96AF
   7+ 96AF              ;	ADC HL,SP	LD (addr),SP
   8+ 96AF              ;	ADD HL,SP	LD SP,(addr)
   9+ 96AF              ;	ADD IX,SP	LD SP,nn
  10+ 96AF              ; 	ADD IY,SP	LD SP,HL
  11+ 96AF              ;				LD SP,IX
  12+ 96AF              ;	DEC SP		LD SP,IY
  13+ 96AF
  14+ 96AF              ;	EX (SP),HL
  15+ 96AF              ;	EX (SP),IX
  16+ 96AF              ;	EX (SP),IY
  17+ 96AF
  18+ 96AF              ;	INC SP
  19+ 96AF
  20+ 96AF
  21+ 96AF                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 894  7FD4
 895  7FD4              	SAVESNA "Pruebas.sna", START
 896  7FD4
 897  7FD4
 898  7FD4
# file closed: Banco_de_pruebas.asm
