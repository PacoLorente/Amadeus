# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 61 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 5B A4     	call Pinta_disparos_Amadeus
  74  82F6 CD 26 A1     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8A 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD CF 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 88 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 88 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 8B 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD ED 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	06/12/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 08 40        	defw $4008											; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63
  96+ 8A63              ; Notas de aleatoriedad.
  97+ 8A63
  98+ 8A63              ;   Bajo_decelerando+3 (1-2)                - Define lo que baja la entidad.
  99+ 8A63              ;   Derecha_y_subiendo+8 (11)               - (11) Cuando la posición de inicio es $4001
 100+ 8A63              ;   Izquierda_y_subiendo+8 (11)             - (11) Cuando la posición de inicio es $4001
 101+ 8A63
 102+ 8A63
 103+ 8A63
 104+ 8A63
 105+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 106+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 107+ 8A6B
 108+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 109+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 109+ 8A73 08 00
 110+ 8A75
 111+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 112+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 112+ 8A7D 0F FE
 113+ 8A7F
 114+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 115+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 116+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 117+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 118+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 119+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 120+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 122+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 123+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 124+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 125+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 126+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 127+ 8AB3
 128+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 129+ 8AB7 11 11 91 FD      db $11,$11,$91,253,11,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 129+ 8ABB 0B 00
 130+ 8ABD
 131+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 132+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 132+ 8AC5 02 00
 133+ 8AC7
 134+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 135+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 135+ 8ACF 04 00
 136+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 137+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 137+ 8AD9 08 00
 138+ 8ADB
 139+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 140+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 140+ 8AE3 02 00
 141+ 8AE5
 142+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 143+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 143+ 8AED 06 00
 144+ 8AEF
 145+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 146+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 146+ 8AF7 06 00
 147+ 8AF9
 148+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 149+ 8AF9
 150+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 151+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 152+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 153+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 154+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 155+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 156+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 157+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 159+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 160+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 161+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 162+ 8B29
 163+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 164+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 165+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 166+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 167+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 168+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 169+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 170+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 171+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 172+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 173+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 174+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 175+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 176+ 8B5D
 177+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 178+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,7,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 178+ 8B65 07 00
 179+ 8B67
 180+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 181+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 181+ 8B6F 02 00
 182+ 8B71
 183+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 184+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 184+ 8B79 04 00
 185+ 8B7B
 186+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 187+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 187+ 8B83 08 00
 188+ 8B85
 189+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 190+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 190+ 8B8D 02 00
 191+ 8B8F
 192+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 193+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 193+ 8B97 06 00
 194+ 8B99
 195+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 196+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 196+ 8BA1 06 00
 197+ 8BA3
 198+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 199+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 200+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 201+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 202+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 203+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 204+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 205+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 206+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 207+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 208+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 209+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 210+ 8BD3
 211+ 8BD3
 212+ 8BD3
 213+ 8BD3
 214+ 8BD3
 215+ 8BD3
 216+ 8BD3
 217+ 8BD3
 218+ 8BD3
 219+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 DD 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BDC 01           	db 1										; Tipo de entidad que vamos a introducir en las 6 cajas de DRAW.
  17+ 8BDD
  18+ 8BDD 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BDE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE2 01 02
  20+ 8BE4 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BE8 01 02
  21+ 8BEA
# file closed: Niveles.asm
 150  8BEA
 151  8BEA              ; --------------------------------------------------------------------------------
 152  8BEA              ;
 153  8BEA              ; 12/05/24
 154  8BEA              ;
 155  8BEA              ; Parámetros DRAW.
 156  8BEA              ;
 157  8BEA
 158  8BEA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEA
 160  8BEA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEB              ;															- Patrón de movimiento.
 162  8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BEC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BED
 165  8BED 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BEE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BEE
 168  8BEE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BEE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BEE              ; Ejemplos.
 171  8BEE
 172  8BEE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BEE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BEE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BEE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BEE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BEE
 178  8BEE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BEF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BEF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BEF
 182  8BEF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF1
 185  8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF3
 187  8BF3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF3
 189  8BF3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF5              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF5
 192  8BF5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF5
 194  8BF5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF6
 200  8BF6 00           Ctrl_2 db 0
 201  8BF7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF7              ;
 209  8BF7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF7              ;														BIT 4, ???
 215  8BF7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF7
 217  8BF7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF8              ;
 223  8BF8              ; 														DESCRIPCIÖN:
 224  8BF8              ;
 225  8BF8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BF8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BF8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BF8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BF8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BF8              ;
 239  8BF8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BF8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BF8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BF8
 243  8BF8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BF8
 245  8BF8 00           Filas db 0												; Filas. [DRAW]
 246  8BF9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BFC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BFE
 250  8BFE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BFE
 252  8BFE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BFF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BFF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BFF
 256  8BFF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BFF
 258  8BFF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BFF              ;
 260  8BFF              ;	COLORES: 0 ..... NEGRO
 261  8BFF              ;    		 1 ..... AZUL
 262  8BFF              ; 			 2 ..... ROJO
 263  8BFF              ;			 3 ..... MAGENTA
 264  8BFF              ; 			 4 ..... VERDE
 265  8BFF              ; 			 5 ..... CIAN
 266  8BFF              ;			 6 ..... AMARILLO
 267  8BFF              ; 			 7 ..... BLANCO
 268  8BFF
 269  8BFF 00 00        Indice_Sprite_der defw 0
 270  8C01 00 00        Indice_Sprite_izq defw 0
 271  8C03 00 00        Puntero_DESPLZ_der defw 0
 272  8C05 00 00        Puntero_DESPLZ_izq defw 0
 273  8C07
 274  8C07 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C09 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0A 00           Columnas db 0
 277  8C0B 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C0D              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C0D 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C0E
 281  8C0E              ; variables de control general.
 282  8C0E
 283  8C0E 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C0F
 285  8C0F              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C0F
 287  8C0F              Perfiles_de_velocidad
 288  8C0F
 289  8C0F 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C10 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C11 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C12 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C13
 294  8C13              ; Contadores de 16 bits.
 295  8C13
 296  8C13 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C15 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C17 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C19 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1B
 301  8C1B              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1B
 303  8C1B 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C1D 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C1F 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C21              ;
 307  8C21              ;
 308  8C21 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C22              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C22              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C22 00           Incrementa_puntero_backup db 0
 312  8C23 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C24              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C24 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C25 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C26 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C27              ;
 318  8C27              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C27              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C27              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C27              ;
 322  8C27              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C27              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C27              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C27              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C27              ;
 327  8C27              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C27              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C27              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C27
 331  8C27 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C28
 333  8C28              ;														DESCRIPCIÓN:
 334  8C28              ;
 335  8C28              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C28              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C28              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C28              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C28              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C28              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C28
 342  8C28              ;														BIT 3, Recarga de nueva oleada.
 343  8C28              ;														BIT 4, Recarga de nueva oleada.
 344  8C28              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C28              ;														BIT 6, **** Frame completo.
 346  8C28              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C28
 348  8C28 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2A
 353  8C2A              ; Gestión de ENTIDADES y CAJAS.
 354  8C2A
 355  8C2A 00 00        Puntero_store_caja defw 0
 356  8C2C 00 00        Puntero_restore_caja defw 0
 357  8C2E 00 00        Indice_restore_caja defw 0
 358  8C30 00 00        Puntero_indice_master defw 0
 359  8C32
 360  8C32 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C33 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C34 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C35
 364  8C35 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C37 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C39              ;														; _ puntero (Indice_entidades).
 367  8C39
 368  8C39              ;---------------------------------------------------------------------------------------------------------------
 369  8C39              ;
 370  8C39              ;	13/10/24
 371  8C39              ;
 372  8C39              ;	Álbumes.
 373  8C39
 374  8C39 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3B              ;														; _variable para almacenar lo posición del puntero_
 376  8C3B              ; 														; _de pila, SP.
 377  8C3B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C3D              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C3D
 380  8C3D              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C3D
 382  8C3D 00 00        Album_de_pintado defw 0
 383  8C3F 00 00        Album_de_borrado defw 0
 384  8C41 00 00        Album_de_pintado_Amadeus defw 0
 385  8C43 00 00        Album_de_borrado_Amadeus defw 0
 386  8C45
 387  8C45 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C47 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C49
 390  8C49 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4B 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C4D
 393  8C4D
 394  8C4D 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C4F
 396  8C4F 00           Num_de_bytes_album_de_disparos db 0
 397  8C50 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C51
 399  8C51 07           Numero_de_disparos_de_entidades db 7
 400  8C52
 401  8C52 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C53 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C54
 404  8C54 00 00        Techo_Scanlines_album defw 0
 405  8C56 00 00        Techo_Scanlines_album_2 defw 0
 406  8C58 00           Switch db 0
 407  8C59 00 00        Techo defw 0
 408  8C5B 00 00        Scanlines_album_SP defw 0
 409  8C5D 00 89        India_SP defw Tabla_de_pintado
 410  8C5F 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C61
 412  8C61 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C62              ;
 414  8C62              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C62              ;!															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C62              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C62              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C62              ;																Habilita el borrado/pintado de sprites.
 419  8C62              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C62              ;																_ a la baja.
 421  8C62              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C62              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C62              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C62              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C62              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C62              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C62
 428  8C62 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C63              ;
 430  8C63              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C63
 432  8C63 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C64              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C64              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C64
 436  8C64              ; Gestión de Disparos.
 437  8C64
 438  8C64 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C66 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C68 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C69
 442  8C69              ;
 443  8C69              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C69              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C69              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C69              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C69
 448  8C69
 449  8C69
 450  8C69
 451  8C69
 452  8C69
 453  8C69
 454  8C69 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C6B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C6B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C6B
 458  8C6B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C6D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C6D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C70              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C70 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C73              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C73
 465  8C73              ;---------------------------------------------------------------------------------------------------------------
 466  8C73
 467  8C73              ; Relojes y temporizaciones.
 468  8C73
 469  8C73 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C74 05           Clock_explosion_Amadeus db 5
 471  8C75 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C76
 473  8C76 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C78 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C7A 00           Numero_rnd_disparos db 0
 476  8C7B
 477  8C7B 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C7D A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 479  8C7E A0           CLOCK_disparos_de_entidades db $a0
 480  8C7F
 481  8C7F              ;---------------------------------------------------------------------------------------------------------------
 482  8C7F
 483  8C7F              ; Gestión de NIVELES.
 484  8C7F
 485  8C7F 00           Nivel db 0												; Nivel actual del juego.
 486  8C80 00 00        Puntero_indice_NIVELES defw 0
 487  8C82 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 488  8C84              ; 														; _ que definen el NIVEL.
 489  8C84
 490  8C84              ; ---------------------------------------------------------------------------------------------------------------
 491  8C84
 492  8C84              ; Temporizaciones Shield.
 493  8C84
 494  8C84 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 495  8C88 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 496  8C8A 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 497  8C8B 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 498  8C8C 00           Shield_3 db 0
 499  8C8D
 500  8C8D 07           Lives db 7
 501  8C8E
 502  8C8E              ; 	INICIO  *************************************************************************************************************************************************************************
 503  8C8E              ;
 504  8C8E              ;	13/11/24
 505  8C8E
 506  8C8E              START
 507  8C8E
 508  8C8E 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 509  8C91 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 510  8C93 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 511  8C95 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 512  8C97 F3           	DI
 513  8C98
 514  8C98              ; Limpiamos pantalla.
 515  8C98
 516  8C98              ;	ld a,%00000111
 517  8C98              ;	call Cls
 518  8C98 CD C4 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 519  8C9B
 520  8C9B              INICIALIZACION
 521  8C9B
 522  8C9B 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 523  8C9D CD 5F 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 524  8CA0 CD 20 8F     	call Extrae_numero_aleatorio_y_avanza
 525  8CA3 6F           	ld l,a
 526  8CA4 26 00        	ld h,0
 527  8CA6 22 7B 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8CA9
 529  8CA9              ;	Inicia los álbumes de líneas.
 530  8CA9
 531  8CA9 CD 19 91     	call Inicia_albumes_de_lineas
 532  8CAC CD 29 91     	call Inicia_albumes_de_lineas_Amadeus
 533  8CAF CD 36 91     	call Inicia_albumes_de_disparos
 534  8CB2
 535  8CB2              ;	Inicia 1er Nivel.
 536  8CB2
 537  8CB2 CD C1 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 538  8CB5 CD 8F 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 539  8CB8              ;														   _reponiendo entidades eliminadas.
 540  8CB8 CD F5 93     	call Prepara_Cajas_de_Entidades
 541  8CBB
 542  8CBB CD 46 94     	call Inicia_Amadeus
 543  8CBE
 544  8CBE              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 545  8CBE              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 546  8CBE              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 547  8CBE 11 AE 89     	ld de,Amadeus_BOX
 548  8CC1 CD 35 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 549  8CC4 CD 89 94     	call Limpiamos_bandeja_DRAW
 550  8CC7
 551  8CC7              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 552  8CC7
 553  8CC7 06 3C        	ld b,60
 554  8CC9 CD 7E 9F     2 call Amadeus_a_izquierda
 555  8CCC 10 FB        	djnz 2B
 556  8CCE
 557  8CCE CD F7 90     	call Genera_datos_de_impresion_Amadeus
 558  8CD1
 559  8CD1              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 560  8CD1
 561  8CD1 CD 52 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 562  8CD4
 563  8CD4 CD CF 91     	call Inicia_Shield
 564  8CD7
 565  8CD7 2A 5B 8C     6 ld hl,(Scanlines_album_SP)
 566  8CDA 22 54 8C     	ld (Techo_Scanlines_album),hl
 567  8CDD
 568  8CDD 2A 3F 8C     	ld hl,(Album_de_borrado)
 569  8CE0 22 5B 8C     	ld (Scanlines_album_SP),hl
 570  8CE3
 571  8CE3 21 00 89     	ld hl,Tabla_de_pintado
 572  8CE6 22 5D 8C     	ld (India_SP),hl
 573  8CE9
 574  8CE9 21 61 8C     	ld hl,Ctrl_3
 575  8CEC CB C6        	set 0,(hl) 											; Indica Frame completo.
 576  8CEE CB D6        	set 2,(hl)
 577  8CF0 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 578  8CF2
 579  8CF2 FB           	ei 													; Ha de apuntar a $5c3a.
 580  8CF3
 581  8CF3 76           	halt
 582  8CF4
 583  8CF4              ; ------------------------------------
 584  8CF4
 585  8CF4              Main
 586  8CF4              ;
 587  8CF4              ; 07/11/24.
 588  8CF4
 589  8CF4              ; Gestión de disparos.
 590  8CF4
 591  8CF4 CD F5 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 592  8CF7 CD 6C A1     	call Motor_de_disparos_entidades
 593  8CFA CD 07 A4     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 594  8CFD
 595  8CFD              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 596  8CFD              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 597  8CFD              ; Este hecho lo indica el bit2 de (Impacto2).
 598  8CFD
 599  8CFD CD A8 A5     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 600  8D00
 601  8D00              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 602  8D00
 603  8D00 21 7E 8C     	ld hl,CLOCK_disparos_de_entidades
 604  8D03 35           	dec (hl)
 605  8D04 CC 36 8E     	call z,Autoriza_disparo_de_entidades
 606  8D07
 607  8D07 2A 7B 8C     	ld hl,(Clock_next_entity)
 608  8D0A ED 4B 78 5C  	ld bc,(FRAMES)
 609  8D0E A7           	and a
 610  8D0F ED 42        	sbc hl,bc
 611  8D11 20 21        	jr nz,1F
 612  8D13
 613  8D13              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 614  8D13
 615  8D13 CD 20 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 616  8D16 CD 37 8F     	call Define_Clock_next_entity
 617  8D19
 618  8D19              ; GESTIÓN DE ENTIDADES.
 619  8D19
 620  8D19              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 621  8D19              ; _ (Clock_next_entity) para la siguiente entidad.
 622  8D19
 623  8D19              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 624  8D19              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 625  8D19              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 626  8D19
 627  8D19 21 33 8C     	ld hl,Numero_parcial_de_entidades
 628  8D1C 46           	ld b,(hl)
 629  8D1D
 630  8D1D 04           	inc b
 631  8D1E 05           	dec b
 632  8D1F
 633  8D1F F3           	di
 634  8D20 28 FE        	jr z,$													;! Nivel superado !!!!!
 635  8D22 FB           	ei
 636  8D23
 637  8D23 3A 34 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 638  8D26 B8           	cp b
 639  8D27 28 0B        	jr z,1F
 640  8D29 30 09        	jr nc,1F
 641  8D2B
 642  8D2B              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 643  8D2B
 644  8D2B 3C           	inc a
 645  8D2C 32 34 8C     	ld (Entidades_en_curso),a
 646  8D2F
 647  8D2F 21 62 8C     	ld hl,Ctrl_4
 648  8D32 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 649  8D34
 650  8D34              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 651  8D34
 652  8D34              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 653  8D34              ;	call Define_Clock_next_entity
 654  8D34
 655  8D34 3A 34 8C     1 ld a,(Entidades_en_curso)
 656  8D37 A7           	and a
 657  8D38 CA DC 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 658  8D3B 47           	ld b,a													; No hay entidades que gestionar.
 659  8D3C
 660  8D3C              ; ( Código que ejecutamos con cada entidad: ).
 661  8D3C
 662  8D3C              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 663  8D3C              ;
 664  8D3C              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 665  8D3C
 666  8D3C 21 00 89     	ld hl,Tabla_de_pintado
 667  8D3F 22 5D 8C     	ld (India_SP),hl
 668  8D42
 669  8D42 21 61 8C     	ld hl,Ctrl_3
 670  8D45 CB D6        	set 2,(hl)
 671  8D47 CD CA 8E     	call Change
 672  8D4A
 673  8D4A C5           2 push bc 												; Nº de entidades en curso.
 674  8D4B
 675  8D4B DD 2A 2A 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 676  8D4F CD A0 91     	call Salta_caja_de_entidades_vacia
 677  8D52
 678  8D52              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 679  8D52
 680  8D52 DD 7E 00     	ld a,(ix+0)
 681  8D55 CB 7F        	bit 7,a
 682  8D57 28 11        	jr z,5F
 683  8D59
 684  8D59              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 685  8D59
 686  8D59 21 62 8C     	ld hl,Ctrl_4
 687  8D5C CB 46        	bit 0,(hl)
 688  8D5E CC AF 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 689  8D61 28 E8        	jr z,6B
 690  8D63
 691  8D63 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 692  8D65 CB BF        	res 7,a
 693  8D67 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 694  8D6A
 695  8D6A              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 696  8D6A              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 697  8D6A
 698  8D6A 3A 68 8C     5 ld a,(Impacto2)
 699  8D6D CB 5F        	bit 3,a
 700  8D6F C4 9E A3     	call nz,Compara_con_coordenadas_de_disparo
 701  8D72
 702  8D72              ; Existe colisión entre esta entidad y Amadeus ???
 703  8D72
 704  8D72 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 705  8D75 CB 4F        	bit 1,a
 706  8D77 C4 BA 92     	call nz,Genera_explosion
 707  8D7A 20 43        	jr nz,Gestiona_siguiente_entidad
 708  8D7C
 709  8D7C DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 710  8D7F A7           	and a
 711  8D80 28 0C        	jr z,3F
 712  8D82
 713  8D82              ; IMPACTO en entidad por colisión con Amadeus.
 714  8D82
 715  8D82              ; 5/7/24
 716  8D82              ; Nota importante:
 717  8D82              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 718  8D82              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 719  8D82              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 720  8D82
 721  8D82 3A B2 89     	ld a,(Impacto_Amadeus)
 722  8D85 A7           	and a
 723  8D86 C4 BA 92     	call nz,Genera_explosion
 724  8D89 20 34        	jr nz,Gestiona_siguiente_entidad
 725  8D8B
 726  8D8B              ; Falsa colisión !!!
 727  8D8B
 728  8D8B 32 EE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 729  8D8E
 730  8D8E              ; -------------------------------------------
 731  8D8E
 732  8D8E CD 7B 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 733  8D91 CD A2 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 734  8D94 CD 96 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 735  8D97
 736  8D97 DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 737  8D99 DD 2A EF 8B  	ld ix,(Puntero_de_impresion)
 738  8D9D CD A6 95     	call Genera_datos_de_impresion
 739  8DA0 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 740  8DA2
 741  8DA2 CD AC 94     	call Decrementa_Contador_de_mov_masticados
 742  8DA5
 743  8DA5              ; -------------------------------------------
 744  8DA5
 745  8DA5              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 746  8DA5
 747  8DA5 2A EF 8B     	ld hl,(Puntero_de_impresion)
 748  8DA8 CD 7A 95     	call Genera_coordenadas
 749  8DAB
 750  8DAB ED 4B EB 8B  	ld bc,(Coordenada_X)
 751  8DAF
 752  8DAF DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 753  8DB2 DD 70 02     	ld (ix+2),b
 754  8DB5
 755  8DB5              ; TODO: Generamos disparo ???
 756  8DB5
 757  8DB5 3A 53 8C     	ld a,(Permiso_de_disparo_Entidades)
 758  8DB8 A7           	and a
 759  8DB9 C4 4B 8E     	call nz,Entidad_genera_disparo_si_procede
 760  8DBC
 761  8DBC CD 22 A5     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 762  8DBF
 763  8DBF              Gestiona_siguiente_entidad
 764  8DBF
 765  8DBF CD AF 91     	call Incrementa_punteros_de_cajas
 766  8DC2
 767  8DC2 C1           	pop bc
 768  8DC3 10 85        	djnz 2B
 769  8DC5
 770  8DC5              ; Hemos gestionado todas las entidades.
 771  8DC5              ; ----- ----- -----
 772  8DC5
 773  8DC5 CD 8F 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 774  8DC8 CD A6 8F     	call Ordena_tabla_de_impresion
 775  8DCB CD 52 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 776  8DCE
 777  8DCE CD 4C 8F     	call Borra_diferencia
 778  8DD1
 779  8DD1 3A 61 8C     	ld a,(Ctrl_3)
 780  8DD4 CB 5F        	bit 3,a
 781  8DD6 20 04        	jr nz,Gestion_de_Amadeus
 782  8DD8
 783  8DD8 EB           	ex de,hl
 784  8DD9 71           	ld (hl),c
 785  8DDA 2C           	inc l
 786  8DDB 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 787  8DDC
 788  8DDC              ;! GESTIONA AMADEUS !!!!!!!!!!
 789  8DDC
 790  8DDC              Gestion_de_Amadeus
 791  8DDC
 792  8DDC 21 61 8C     	ld hl,Ctrl_3
 793  8DDF CB 76        	bit 6,(hl)
 794  8DE1 28 13        	jr z,Amadeus_vivo
 795  8DE3
 796  8DE3              ; Amadeus ha sido destruido.
 797  8DE3              ; Decrementa (Temp_new_live).
 798  8DE3
 799  8DE3 21 75 8C     	ld hl,Temp_new_live
 800  8DE6 35           	dec (hl)
 801  8DE7 20 26        	jr nz,End_frame
 802  8DE9
 803  8DE9              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 804  8DE9
 805  8DE9 21 8D 8C     	ld hl,Lives
 806  8DEC 35           	dec (hl)
 807  8DED
 808  8DED              ;! Fin del juego
 809  8DED
 810  8DED F3           	di
 811  8DEE 28 FE        	jr z,$														;! GAME OVER !!!!!
 812  8DF0 FB           	ei
 813  8DF1
 814  8DF1              ; Nueva nave.
 815  8DF1
 816  8DF1 CD 68 8E     	call Reinicia_Amadeus
 817  8DF4 18 19        	jr End_frame
 818  8DF6
 819  8DF6              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 820  8DF6
 821  8DF6              Amadeus_vivo
 822  8DF6
 823  8DF6 3A B2 89     	ld a,(Impacto_Amadeus)
 824  8DF9 A7           	and a
 825  8DFA C4 2A 93     	call nz, Genera_explosion_Amadeus
 826  8DFD 20 10        	jr nz, End_frame
 827  8DFF
 828  8DFF CD 97 92     	call Teclado
 829  8E02 21 61 8C     	ld hl,Ctrl_3
 830  8E05
 831  8E05 CB 6E        	bit 5,(hl)
 832  8E07 28 06        	jr z,End_frame
 833  8E09
 834  8E09              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 835  8E09
 836  8E09 CD E5 8E     	call Change_Amadeus
 837  8E0C CD F7 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 838  8E0F
 839  8E0F              End_frame
 840  8E0F
 841  8E0F              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 842  8E0F              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 843  8E0F
 844  8E0F CD C9 A2     	call Genera_datos_de_impresion_disparos_Entidades
 845  8E12 CD 8D A4     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 846  8E15 CD E3 A3     	call Calcula_bytes_pintado_disparos
 847  8E18 CD F0 A3     	call Limpia_album_de_pintado_disparos_entidades
 848  8E1B
 849  8E1B              ; ------------ ------------- --------------
 850  8E1B
 851  8E1B 2A 3F 8C     	ld hl,(Album_de_borrado)
 852  8E1E 22 5B 8C     	ld (Scanlines_album_SP),hl
 853  8E21
 854  8E21 21 61 8C     	ld hl,Ctrl_3
 855  8E24 CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8E26 CB 9E        	res 3,(hl)
 857  8E28 CB A6        	res 4,(hl)
 858  8E2A
 859  8E2A 21 62 8C     	ld hl,Ctrl_4
 860  8E2D CB 86        	res 0,(hl)
 861  8E2F
 862  8E2F AF           	xor a
 863  8E30 D3 FE        	out ($fe),a
 864  8E32
 865  8E32 76           	halt
 866  8E33
 867  8E33 C3 F4 8C     	jp Main
 868  8E36
 869  8E36              ;------------------------------------------
 870  8E36              ;
 871  8E36              ;	07/11/24
 872  8E36
 873  8E36              Autoriza_disparo_de_entidades
 874  8E36
 875  8E36 3E 01        	ld a,1
 876  8E38 32 53 8C     	ld (Permiso_de_disparo_Entidades),a
 877  8E3B
 878  8E3B 3A 7D 8C     	ld a,(Repone_CLOCK_disparos)
 879  8E3E FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 880  8E40 38 02        	jr c,1F
 881  8E42
 882  8E42              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 883  8E42              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 884  8E42              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 885  8E42
 886  8E42 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 887  8E44
 888  8E44 32 7D 8C     1 ld (Repone_CLOCK_disparos),a
 889  8E47 32 7E 8C     	ld (CLOCK_disparos_de_entidades),a
 890  8E4A
 891  8E4A C9           	ret
 892  8E4B
 893  8E4B              ;------------------------------------------
 894  8E4B              ;
 895  8E4B              ;	14/09/24
 896  8E4B              ;
 897  8E4B              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 898  8E4B
 899  8E4B              Entidad_genera_disparo_si_procede
 900  8E4B
 901  8E4B 2A 78 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 902  8E4E CB 06        	rlc (hl)
 903  8E50
 904  8E50 DC 19 A3     	call c,Genera_disparo_de_entidad_maldosa
 905  8E53
 906  8E53 C9           	ret
 907  8E54
 908  8E54              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 909  8E54              ;
 910  8E54              ;	30/09/24
 911  8E54
 912  8E54              Actuaiza_sp_de_disparos_de_entidades
 913  8E54
 914  8E54 2A 78 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 915  8E57 23           	inc hl
 916  8E58 22 78 8C     	ld (Puntero_num_aleatorios_disparos),hl
 917  8E5B
 918  8E5B 11 FD 88     	ld de,Numeros_aleatorios+7
 919  8E5E 7B           	ld a,e
 920  8E5F 95           	sub l
 921  8E60 C0           	ret nz
 922  8E61
 923  8E61 21 F6 88     1 ld hl,Numeros_aleatorios
 924  8E64 22 78 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 925  8E67 C9           	ret
 926  8E68
 927  8E68              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 928  8E68              ;
 929  8E68              ;	24/07/24
 930  8E68
 931  8E68              Reinicia_Amadeus
 932  8E68
 933  8E68              ;	Reinicia posición y estado.
 934  8E68
 935  8E68 21 CF 50     	ld hl,$50cf
 936  8E6B 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 937  8E6E 21 CC DC     	ld hl,$dccc
 938  8E71 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 939  8E74 21 3D 00     	ld hl,$003d
 940  8E77 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 941  8E7A
 942  8E7A              ;	limpiamos el álbum de borrado.
 943  8E7A
 944  8E7A 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
 945  8E7D
 946  8E7D AF           	xor a
 947  8E7E 77           	ld (hl),a
 948  8E7F
 949  8E7F E5           	push hl
 950  8E80 D1           	pop de
 951  8E81 13           	inc de
 952  8E82
 953  8E82 01 23 00     	ld bc,35
 954  8E85 ED B0        	ldir
 955  8E87
 956  8E87 CD F7 90     	call Genera_datos_de_impresion_Amadeus
 957  8E8A
 958  8E8A              ;	Reinicia temporizaciones.
 959  8E8A
 960  8E8A CD CF 91     	call Inicia_Shield
 961  8E8D
 962  8E8D 3E 5A        	ld a,90
 963  8E8F 32 8A 8C     	ld (Shield),a
 964  8E92
 965  8E92 3E 64        	ld a,100
 966  8E94 32 75 8C     	ld (Temp_new_live),a
 967  8E97
 968  8E97              ; 	Restauramos el FLAG: Amadeus vivo.
 969  8E97
 970  8E97 21 61 8C     	ld hl,Ctrl_3
 971  8E9A CB B6        	res 6,(hl)
 972  8E9C
 973  8E9C              ;	Fuerza la impresión de la nave en el siguiente frame.
 974  8E9C
 975  8E9C 21 61 8C      	ld hl,Ctrl_3
 976  8E9F CB EE        	set 5,(hl)
 977  8EA1
 978  8EA1 C9           	ret
 979  8EA2
 980  8EA2              ; --------------------------------------------------------------------------------------------------------------
 981  8EA2              ;
 982  8EA2              ;	23/11/24
 983  8EA2
 984  8EA2              Ajusta_velocidad_entidad
 985  8EA2
 986  8EA2 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 987  8EA5 A7           	and a
 988  8EA6 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 989  8EA7              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 990  8EA7              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 991  8EA7
 992  8EA7
 993  8EA7              ; Incrementa (Contador_de_vueltas)x2.
 994  8EA7              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 995  8EA7
 996  8EA7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 997  8EA7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 998  8EA7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 999  8EA7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1000  8EA7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1001  8EA7
1002  8EA7
1003  8EA7 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1004  8EA9 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1005  8EAC E6 10        	and $10
1006  8EAE C8           	ret z
1007  8EAF
1008  8EAF              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1009  8EAF
1010  8EAF DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1011  8EB2 CB 2F        	sra a
1012  8EB4 CB 2F        	sra a
1013  8EB6 DD 77 0B     	ld (ix+11),a
1014  8EB9
1015  8EB9 DD 6E 07     	ld l,(ix+7)
1016  8EBC DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1017  8EBF
1018  8EBF              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1019  8EBF 23           	inc hl
1020  8EC0 23           	inc hl
1021  8EC1 23           	inc hl
1022  8EC2 23           	inc hl
1023  8EC3              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1024  8EC3
1025  8EC3 DD 75 07     	ld (ix+7),l
1026  8EC6 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1027  8EC9
1028  8EC9 C9           	ret
1029  8ECA
1030  8ECA              ; --------------------------------------------------------------------------------------------------------------
1031  8ECA              ;
1032  8ECA              ;	25/08/24
1033  8ECA
1034  8ECA              Change
1035  8ECA
1036  8ECA 3A 58 8C     	ld a,(Switch)
1037  8ECD EE 01        	xor 1
1038  8ECF 32 58 8C     	ld (Switch),a
1039  8ED2 2A 3D 8C     	ld hl,(Album_de_pintado)
1040  8ED5 ED 5B 3F 8C  	ld de,(Album_de_borrado)
1041  8ED9 EB           	ex de,hl
1042  8EDA 22 3D 8C     	ld (Album_de_pintado),hl
1043  8EDD 22 5B 8C     	ld (Scanlines_album_SP),hl
1044  8EE0 ED 53 3F 8C  	ld (Album_de_borrado),de
1045  8EE4 C9           	ret
1046  8EE5
1047  8EE5              Change_Amadeus
1048  8EE5
1049  8EE5 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1050  8EE8 ED 5B 43 8C  	ld de,(Album_de_borrado_Amadeus)
1051  8EEC EB           	ex de,hl
1052  8EED 22 41 8C     	ld (Album_de_pintado_Amadeus),hl
1053  8EF0 ED 53 43 8C  	ld (Album_de_borrado_Amadeus),de
1054  8EF4 C9           	ret
1055  8EF5
1056  8EF5              Change_Disparos
1057  8EF5
1058  8EF5              ; Álbumes de Amadeus.
1059  8EF5
1060  8EF5 2A 45 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1061  8EF8 ED 5B 47 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1062  8EFC EB           	ex de,hl
1063  8EFD 22 45 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1064  8F00 ED 53 47 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1065  8F04 CD D8 A3     	call Limpia_album_de_pintado_disparos_Amadeus
1066  8F07
1067  8F07              ; Álbumes de entidades.
1068  8F07
1069  8F07 2A 49 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1070  8F0A ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1071  8F0E EB           	ex de,hl
1072  8F0F 22 49 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1073  8F12 ED 53 4B 8C  	ld (Album_de_borrado_disparos_Entidades),de
1074  8F16 22 4D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1075  8F19
1076  8F19 3A 4F 8C     	ld a,(Num_de_bytes_album_de_disparos)
1077  8F1C 32 50 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1078  8F1F
1079  8F1F C9           	ret
1080  8F20
1081  8F20              ; ------------------------------------
1082  8F20              ;
1083  8F20              ; 1/05/24
1084  8F20
1085  8F20              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1086  8F20              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1087  8F20
1088  8F20              ;	DESTRUYE: HL,DE,A
1089  8F20              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1090  8F20
1091  8F20              ;	Variables implicadas: (RND_SP).
1092  8F20
1093  8F20              Extrae_numero_aleatorio_y_avanza
1094  8F20
1095  8F20 21 FD 88     	ld hl,Numeros_aleatorios+7
1096  8F23 EB           	ex de,hl
1097  8F24 2A 76 8C     	ld hl,(RND_SP)
1098  8F27
1099  8F27 7B           	ld a,e
1100  8F28 95           	sub l
1101  8F29 20 06        	jr nz,1F
1102  8F2B
1103  8F2B              ; Sitúa HL al principio de la tabla de nº aleatorios.
1104  8F2B
1105  8F2B 21 F6 88     	ld hl,Numeros_aleatorios
1106  8F2E 22 76 8C     	ld (RND_SP),HL
1107  8F31
1108  8F31              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1109  8F31
1110  8F31 7E           1 ld a,(hl)
1111  8F32 23           	inc hl
1112  8F33 22 76 8C     	ld (RND_SP),hl
1113  8F36 C9           	ret
1114  8F37
1115  8F37              ; ------------------------------------
1116  8F37              ;
1117  8F37              ; 1/05/24
1118  8F37
1119  8F37              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1120  8F37              ; (1 a 4 segundos).
1121  8F37              ; Actualizamos (Clock_next_entity) con A.
1122  8F37
1123  8F37              ;	DESTRUYE: A y B.
1124  8F37              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1125  8F37              ;			 Actualiza (Clock_next_entity) con A.
1126  8F37
1127  8F37              ;	Variables implicadas: (Clock_next_entity).
1128  8F37
1129  8F37              ; Notas:
1130  8F37
1131  8F37              ; 	$32 1 seg.
1132  8F37              ; 	$64 2 seg.
1133  8F37              ; 	$96 3 seg.
1134  8F37              ; 	$c8 4 seg.
1135  8F37              ; 	$fa 5 seg.
1136  8F37
1137  8F37              ; $ffff 1310,7 seg, 22 minutos.
1138  8F37
1139  8F37              ;	$0100  5 seg. aproximadamente.
1140  8F37              ;	$0200 10 seg. aproximadamente.
1141  8F37              ;	$0300 15 seg. aproximadamente.
1142  8F37              ;	$0400 20 seg. aproximadamente.
1143  8F37              ;	$0500 25 seg. aproximadamente.
1144  8F37              ;	$0600 30 seg. aproximadamente.
1145  8F37
1146  8F37              Define_Clock_next_entity
1147  8F37
1148  8F37 FE 34        	cp $34
1149  8F39 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1150  8F3B
1151  8F3B              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1152  8F3B
1153  8F3B 4F           3 ld c,a
1154  8F3C 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1155  8F3E 2A 78 5C     	ld hl,(FRAMES)
1156  8F41 A7           	and a
1157  8F42 ED 4A        	adc hl,bc
1158  8F44 22 7B 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1159  8F47 C9           	ret
1160  8F48
1161  8F48 3E 34        1 ld a,$34
1162  8F4A 18 EF        	jr 3B
1163  8F4C
1164  8F4C              ; ------------------------------------
1165  8F4C              ;
1166  8F4C              ; 18/03/24
1167  8F4C
1168  8F4C              Borra_diferencia
1169  8F4C
1170  8F4C ED 4B 5B 8C  	ld bc,(Scanlines_album_SP)
1171  8F50
1172  8F50 3A 58 8C     	ld a,(Switch)
1173  8F53 A7           	and a
1174  8F54 28 08        	jr z,2F
1175  8F56
1176  8F56 2A 56 8C     	ld hl,(Techo_Scanlines_album_2)
1177  8F59 11 56 8C     	ld de,Techo_Scanlines_album_2
1178  8F5C 18 06        	jr 3F
1179  8F5E
1180  8F5E 2A 54 8C     2 ld hl,(Techo_Scanlines_album)
1181  8F61 11 54 8C     	ld de,Techo_Scanlines_album
1182  8F64
1183  8F64              ; Diferencia.
1184  8F64
1185  8F64 ED 42        3 sbc hl,bc
1186  8F66
1187  8F66 C8           	ret z
1188  8F67 D8           	ret c
1189  8F68
1190  8F68              ; Nuevo techo, (más bajo que el anterior).
1191  8F68              ; Fijamos nuevo techo y borramos bytes sobrantes.
1192  8F68
1193  8F68 EB           	ex de,hl
1194  8F69
1195  8F69 71           	ld (hl),c
1196  8F6A 2C           	inc l
1197  8F6B 70           	ld (hl),b
1198  8F6C
1199  8F6C AF           	xor a
1200  8F6D 43           	ld b,e
1201  8F6E
1202  8F6E 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1203  8F71
1204  8F71 77           1 ld (hl),a
1205  8F72 23           	inc hl
1206  8F73 10 FC        	djnz 1B
1207  8F75
1208  8F75              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1209  8F75
1210  8F75 21 61 8C     	ld hl,Ctrl_3
1211  8F78 CB DE        	set 3,(hl)
1212  8F7A
1213  8F7A C9           	ret
1214  8F7B
1215  8F7B              ; --------------------------------------------------------------------------------------------------------------
1216  8F7B              ;
1217  8F7B              ;	23/11/24
1218  8F7B              ;
1219  8F7B              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1220  8F7B
1221  8F7B              Entidad_a_Tabla_de_pintado
1222  8F7B
1223  8F7B              ; Almacena la Coordenada Y de la entidad en curso.
1224  8F7B
1225  8F7B              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1226  8F7B
1227  8F7B DD 7E 02     	ld a,(ix+2)
1228  8F7E 2A 5D 8C     	ld hl,(India_SP)
1229  8F81 77           	ld (hl),a
1230  8F82 2C           	inc l
1231  8F83
1232  8F83              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1233  8F83
1234  8F83 ED 5B 5B 8C  	ld de,(Scanlines_album_SP)
1235  8F87
1236  8F87 73           	ld (hl),e
1237  8F88 2C           	inc l
1238  8F89 72           	ld (hl),d
1239  8F8A 2C           	inc l
1240  8F8B
1241  8F8B 22 5D 8C     	ld (India_SP),hl
1242  8F8E
1243  8F8E C9           	ret
1244  8F8F
1245  8F8F              ; --------------------------------------------------------------------------------------------------------------
1246  8F8F              ;
1247  8F8F              ;	27/03/24
1248  8F8F              ;
1249  8F8F
1250  8F8F              Inicializa_India_y_limpia_Tabla_de_impresion
1251  8F8F
1252  8F8F 2A 5D 8C     	ld hl,(India_SP)
1253  8F92 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1254  8F95
1255  8F95 79           	ld a,c
1256  8F96 95           	sub l
1257  8F97 28 06        	jr z,2F
1258  8F99 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1259  8F9A              ;														; _ y pasamos a inicializar (India_SP).
1260  8F9A AF           	xor a
1261  8F9B
1262  8F9B 77           1 ld (hl),a
1263  8F9C 2C           	inc l
1264  8F9D 10 FC        	djnz 1B												; Limpia Tabla.
1265  8F9F
1266  8F9F 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1267  8FA2 22 5D 8C     	ld (India_SP),hl
1268  8FA5
1269  8FA5 C9           	ret
1270  8FA6
1271  8FA6              ; --------------------------------------------------------------------------------------------------------------
1272  8FA6              ;
1273  8FA6              ;	31/3/24
1274  8FA6
1275  8FA6              Ordena_tabla_de_impresion
1276  8FA6
1277  8FA6              ; 5794 T/states.
1278  8FA6              ; 6278 T/states.
1279  8FA6              ; 5310 T/states.
1280  8FA6
1281  8FA6              ; Inicializamos punteros (India_SP) e (India_2_SP).
1282  8FA6              ; Inicializamos contador de comparaciones, [C].
1283  8FA6              ; Cargamos los registros A y B para efectuar comparación.
1284  8FA6
1285  8FA6 FD 2E 00     	ld iyl,0
1286  8FA9
1287  8FA9 3A 34 8C     	ld a,(Entidades_en_curso)
1288  8FAC FE 04        	cp 4 	;	4
1289  8FAE D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1290  8FAF
1291  8FAF 3D           	dec a
1292  8FB0 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1293  8FB1 51           	ld d,c 										; Copia de respaldo.
1294  8FB2
1295  8FB2 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1296  8FB3
1297  8FB3 21 03 89     	ld hl,Tabla_de_pintado+3
1298  8FB6 46           	ld b,(hl)
1299  8FB7 22 5F 8C     	ld (India_2_SP),hl
1300  8FBA
1301  8FBA B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1302  8FBB DC E3 8F     	call c, Avanza_India_2_SP
1303  8FBE CC E3 8F     	call z, Avanza_India_2_SP
1304  8FC1
1305  8FC1 FD 2D        	dec iyl
1306  8FC3 28 18        	jr z,2F
1307  8FC5
1308  8FC5
1309  8FC5              ; --------------------------------------------------------------------------------------------------------------
1310  8FC5              ;
1311  8FC5              ;	7/4/24
1312  8FC5
1313  8FC5              Trueque
1314  8FC5
1315  8FC5              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1316  8FC5              ;  			A contiene en nº de fila de (India_SP).
1317  8FC5              ;			HL contiene (India_2_SP).
1318  8FC5
1319  8FC5 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1320  8FC6 E5           	push hl										; Preservo (India_2_SP).
1321  8FC7
1322  8FC7 ED 5B 5D 8C  	ld de,(India_SP)
1323  8FCB EB           	ex de,hl
1324  8FCC 70           	ld (hl),b
1325  8FCD 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1326  8FCE
1327  8FCE CD 0F 90     	call Intercambia_1_byte
1328  8FD1 CD 0F 90     	call Intercambia_1_byte
1329  8FD4
1330  8FD4
1331  8FD4              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1332  8FD4              ; Recuperamos (India_2_SP) en HL.
1333  8FD4
1334  8FD4 2A 5D 8C     	ld hl,(India_SP)
1335  8FD7 7E           	ld a,(hl)
1336  8FD8
1337  8FD8 E1           	pop hl
1338  8FD9 D1           	pop de
1339  8FDA
1340  8FDA              ; --------------------------------------------------------------------------------------------------------------
1341  8FDA
1342  8FDA CD E3 8F     	call Avanza_India_2_SP
1343  8FDD
1344  8FDD 14           2 inc d
1345  8FDE 15           	dec d
1346  8FDF C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1347  8FE0 18 D8        	jr 1B
1348  8FE2
1349  8FE2 C9           	ret
1350  8FE3
1351  8FE3              ; ----- ----- ----- ----- -----
1352  8FE3
1353  8FE3              Avanza_India_2_SP
1354  8FE3
1355  8FE3 0D           	dec c
1356  8FE4 28 0A        	jr z,Avanza_punteros_indios
1357  8FE6
1358  8FE6 FD 2C        	inc iyl
1359  8FE8
1360  8FE8 2C           	inc l
1361  8FE9 2C           	inc l
1362  8FEA 2C           	inc l
1363  8FEB
1364  8FEB 46           	ld b,(hl)
1365  8FEC 22 5F 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1366  8FEF
1367  8FEF C9           	ret
1368  8FF0
1369  8FF0              ; ----- ----- ----- ----- -----
1370  8FF0
1371  8FF0              Avanza_punteros_indios
1372  8FF0
1373  8FF0 15           	dec d
1374  8FF1 28 15        	jr z,Prepara_salida
1375  8FF3
1376  8FF3 4A           	ld c,d
1377  8FF4
1378  8FF4 2A 5D 8C     	ld hl,(India_SP)
1379  8FF7 2C           	inc l
1380  8FF8 2C           	inc l
1381  8FF9 2C           	inc l
1382  8FFA 7E           	ld a,(hl)
1383  8FFB 22 5D 8C     	ld (India_SP),hl
1384  8FFE
1385  8FFE 2C           	inc l
1386  8FFF 2C           	inc l
1387  9000 2C           	inc l
1388  9001 46           	ld b,(hl)
1389  9002 22 5F 8C     	ld (India_2_SP),hl
1390  9005
1391  9005 FD 2C        	inc iyl
1392  9007
1393  9007 C9           	ret
1394  9008
1395  9008              Prepara_salida
1396  9008
1397  9008 21 00 89     	ld hl,Tabla_de_pintado
1398  900B 22 5D 8C     	ld (India_SP),hl
1399  900E C9           	ret
1400  900F
1401  900F
1402  900F 2C           Intercambia_1_byte inc l
1403  9010 1C           	inc e
1404  9011 46           	ld b,(hl)
1405  9012 1A           	ld a,(de)
1406  9013 EB           	ex de,hl
1407  9014 70           	ld (hl),b
1408  9015 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1409  9016 C9           	ret
1410  9017
1411  9017              ; -----------------------------------------------------------------------------------
1412  9017              ;
1413  9017              ;	20/01/24
1414  9017              ;
1415  9017              ;
1416  9017
1417  9017              Construye_movimientos_masticados_entidad
1418  9017
1419  9017 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1420  901A E5           	push hl
1421  901B
1422  901B CD 89 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1423  901E              ;															; _ el (Contador_de_mov_masticados).
1424  901E
1425  901E              ; Tenemos una posición de inicio aleatoria, ("$01 - $1f"). Necesitamos definir (Cuad_objeto) para [Inicia_Puntero_objeto].
1426  901E              ; A contiene la coordenada X de la posición de inicio de la entidad.
1427  901E
1428  901E CD 61 90     	call Cuad1_or_cuad2
1429  9021
1430  9021 CD 6E 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1431  9024              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1432  9024 CD 04 9C     	call Recompone_posicion_inicio
1433  9027
1434  9027 CD 34 99     1 call Draw
1435  902A CD 6E 90     	call Guarda_movimiento_masticado
1436  902D
1437  902D              ;	jr 2F
1438  902D
1439  902D              ;! Debuggggggg !!!!!!! -----------------------------------------------------------------------------------------
1440  902D              ;! Necesitamos pintar cada movimiento para depurar errores en la entrada y salida de las entidades por la pantalla !!!!!!!!!!!!!!!
1441  902D
1442  902D AF           	xor a
1443  902E D3 FE            out ($fe),a			; Paper 7, Ink 0, Border 0
1444  9030
1445  9030              ;	8BFE 00           CTRL_DESPLZ
1446  9030              ;	8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0	($e0f4)
1447  9030
1448  9030              ;	ld a,(Coordenada_X)
1449  9030              ;	cp 30
1450  9030              ;	jr nz,2F
1451  9030
1452  9030              ;	ld a,(CTRL_DESPLZ)
1453  9030              ;	cp $fd
1454  9030              ;	jr nz,2F
1455  9030
1456  9030              ;	Justo en el borde de la pantalla: Puntero_objeto $8540, Puntero_de_impresion $4f1e, Ctrl_dsplz "0".
1457  9030              ;						; IX (Puntero_de_impresion).
1458  9030              ;						; IY (Puntero_objeto).
1459  9030
1460  9030 18 FE        	jr $
1461  9032
1462  9032 FD E5        	push iy
1463  9034 D1           	pop de
1464  9035 D5           	push de
1465  9036 CD A6 95     	call Genera_datos_de_impresion
1466  9039 D1           	pop de
1467  903A
1468  903A              ;							; Para ejecutar Rutinas_de_pintado necesitamos:
1469  903A              ;
1470  903A              ;							HL apuntando al álbum de líneas (Scanlines_album_SP)
1471  903A              ;							DE (Puntero objeto).
1472  903A 2A 3D 8C     	ld hl,(Album_de_pintado)
1473  903D EB           	ex de,hl
1474  903E CD 9A 96     	call Rutinas_de_pintado
1475  9041
1476  9041              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
1477  9041
1478  9041 18 FE        	jr $
1479  9043
1480  9043 3E 38        	ld a,%00111000
1481  9045 CD 66 95     	call Cls
1482  9048
1483  9048              ;! Debuggggggg !!!!!!! -----------------------------------------------------------------------------------------
1484  9048
1485  9048 CD B1 9F     2 call Movimiento
1486  904B
1487  904B 3A 61 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1488  904E CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1489  9050 28 D5        	jr z,1B
1490  9052
1491  9052              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1492  9052              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1493  9052
1494  9052 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1495  9053 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1496  9056
1497  9056              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1498  9056
1499  9056 CD 0F A1     	call Situa_en_contador_general_de_mov_masticados
1500  9059
1501  9059              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1502  9059              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1503  9059
1504  9059 ED 4B F3 8B  	ld bc,(Contador_de_mov_masticados)
1505  905D
1506  905D 71           	ld (hl),c
1507  905E 23           	inc hl
1508  905F 70           	ld (hl),b
1509  9060
1510  9060 C9           	ret
1511  9061
1512  9061              ; -------------------------------------
1513  9061              ;
1514  9061              ;	07/12/24
1515  9061              ;
1516  9061              ;	(Cuad_objeto) contendrá "0" o "1" en función de la coordenada X de la posición de inicio.
1517  9061              ;
1518  9061              ;	INPUT: A contiene la Coordenada_X de la (Posicion_inicio) de la entidad.
1519  9061              ;
1520  9061              ;	MODIFY: A,(Cuad_objeto).
1521  9061              ;
1522  9061
1523  9061 FE 10        Cuad1_or_cuad2 cp $10
1524  9063 38 04        	jr c,1F
1525  9065 3E 01        	ld a,1
1526  9067 18 01        	jr 2F
1527  9069
1528  9069 AF           1 xor a
1529  906A 32 09 8C     2 ld (Cuad_objeto),a
1530  906D C9           	ret
1531  906E
1532  906E              ; -----------------------------------------------------------------------------------
1533  906E              ;
1534  906E              ;	28/12/23
1535  906E              ;
1536  906E              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1537  906E              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1538  906E
1539  906E              Guarda_movimiento_masticado
1540  906E
1541  906E ED 73 39 8C  	ld (Stack),sp
1542  9072 ED 7B F1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1543  9076
1544  9076 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1545  9078 FD E5            push iy 												; Pushea Puntero_objeto.
1546  907A
1547  907A ED 7B 39 8C      ld sp,(Stack)
1548  907E
1549  907E 2A F3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1550  9081 23           	inc hl
1551  9082 22 F3 8B     	ld (Contador_de_mov_masticados),hl
1552  9085
1553  9085 CD 89 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1554  9088              ;															; _ el (Contador_de_mov_masticados).
1555  9088 C9               ret
1556  9089
1557  9089              ; --------------------------------------------------------------------------------------------------------------
1558  9089              ;
1559  9089              ;	12/1/24
1560  9089              ;
1561  9089              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1562  9089
1563  9089              Actualiza_Puntero_de_almacen_de_mov_masticados
1564  9089
1565  9089 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1566  908C 01 04 00     	ld bc,4
1567  908F A7           	and a
1568  9090 ED 4A        	adc hl,bc
1569  9092 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1570  9095 C9           	ret
1571  9096
1572  9096              ; ------------------------------------------
1573  9096              ;
1574  9096              ;	23/11/24
1575  9096              ;
1576  9096              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1577  9096
1578  9096
1579  9096              Obtenemos_puntero_de_impresion
1580  9096
1581  9096 DD 6E 07     	ld l,(ix+7)
1582  9099 DD 66 08     	ld h,(ix+8)
1583  909C
1584  909C              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1585  909C
1586  909C ED 73 39 8C  	ld (Stack),sp
1587  90A0 F9           	ld sp,hl
1588  90A1
1589  90A1 AF           	xor a
1590  90A2 67           	ld h,a
1591  90A3 6C           	ld l,h															; ld hl,"0"
1592  90A4
1593  90A4 D1           	pop de															; (Puntero_objeto) en DE.
1594  90A5 C1           	pop bc
1595  90A6
1596  90A6              ; 	Almacena (Puntero_de_impresion) en caja.
1597  90A6
1598  90A6 DD 71 05     	ld (ix+5),c
1599  90A9 DD 70 06     	ld (ix+6),b
1600  90AC
1601  90AC ED 43 EF 8B  	ld (Puntero_de_impresion),bc
1602  90B0
1603  90B0              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1604  90B0
1605  90B0 39           	add hl,sp
1606  90B1 DD 75 07     	ld (ix+7),l
1607  90B4 DD 74 08     	ld (ix+8),h
1608  90B7
1609  90B7 C1           	pop bc
1610  90B8
1611  90B8 79           	ld a,c
1612  90B9 80           	add b															; Comprueba si ya no hay datos en el almacén.
1613  90BA
1614  90BA ED 7B 39 8C  	ld sp,(Stack)
1615  90BE
1616  90BE CC BA 94     	call z,Reinicia_entidad_maliciosa
1617  90C1
1618  90C1 C9           	ret
1619  90C2
1620  90C2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1621  90C2              ;
1622  90C2              ;	25/11/24
1623  90C2
1624  90C2              Cargamos_registros_con_explosion
1625  90C2
1626  90C2 DD 6E 07     	ld l,(ix+7)
1627  90C5 DD 66 08     	ld h,(ix+8)
1628  90C8 CD 68 91     	call Extrae_address
1629  90CB EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1630  90CC
1631  90CC DD 6E 05     	ld l,(ix+5)
1632  90CF DD 66 06     	ld h,(ix+6)
1633  90D2
1634  90D2 E5           	push hl
1635  90D3 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1636  90D5
1637  90D5 C9           	ret
1638  90D6
1639  90D6
1640  90D6              Cargamos_registros_con_explosion_Amadeus
1641  90D6
1642  90D6 2A B5 89     	ld hl,(Pamm_Amadeus)
1643  90D9 CD 68 91     	call Extrae_address
1644  90DC
1645  90DC 5D           	ld e,l
1646  90DD 54           	ld d,h
1647  90DE
1648  90DE DD 2A B3 89  	ld ix,(p.imp.amadeus)
1649  90E2
1650  90E2 C9           	ret
1651  90E3
1652  90E3              ; --------------------------------------------------------------------------------------------------------------
1653  90E3              ;
1654  90E3              ;	17/06/24
1655  90E3              ;
1656  90E3              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1657  90E3              ;
1658  90E3              ;	IX contiene el puntero de impresión.
1659  90E3              ;	DE contiene (Puntero_objeto).
1660  90E3
1661  90E3
1662  90E3              Cargamos_registros_con_mov_masticado_Amadeus
1663  90E3
1664  90E3 ED 73 39 8C  	ld (Stack),sp
1665  90E7 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1666  90EB D1           	pop de 															; DE contiene Puntero_objeto
1667  90EC DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1668  90EE DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1669  90F2 ED 7B 39 8C  	ld sp,(Stack)
1670  90F6 C9           	ret
1671  90F7
1672  90F7              ; ---------------------------------------------------------------------------------------------------------------------
1673  90F7              ;
1674  90F7              ;	18/6/24
1675  90F7              ;
1676  90F7              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1677  90F7
1678  90F7              Genera_datos_de_impresion_Amadeus
1679  90F7
1680  90F7 3A B2 89     	ld a,(Impacto_Amadeus)
1681  90FA A7           	and a
1682  90FB 20 03        	jr nz,1F
1683  90FD
1684  90FD              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1685  90FD              ; _apuntando a la correspondiente explosión.
1686  90FD
1687  90FD CD E3 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1688  9100
1689  9100 DD 7D        1 ld a,ixl
1690  9102 E6 1F        	and $1f
1691  9104 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1692  9107
1693  9107 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1694  910A E5           	push hl
1695  910B
1696  910B 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1697  910E 22 5B 8C     	ld (Scanlines_album_SP),hl
1698  9111
1699  9111 CD A6 95     	call Genera_datos_de_impresion
1700  9114
1701  9114 E1           	pop hl
1702  9115 22 5B 8C     	ld (Scanlines_album_SP),hl
1703  9118
1704  9118 C9           	ret
1705  9119
1706  9119              ; ---------------------------------------------------------------------------------------------------------------------
1707  9119              ;
1708  9119              ;	13/03/24
1709  9119              ;
1710  9119              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1711  9119
1712  9119              Inicia_albumes_de_lineas
1713  9119
1714  9119 21 00 80     	ld hl,Scanlines_album
1715  911C 22 3D 8C     	ld (Album_de_pintado),hl
1716  911F 22 5B 8C     	ld (Scanlines_album_SP),hl
1717  9122
1718  9122 21 1A 81     	ld hl,Scanlines_album_2
1719  9125 22 3F 8C     	ld (Album_de_borrado),hl
1720  9128
1721  9128 C9           	ret
1722  9129
1723  9129              Inicia_albumes_de_lineas_Amadeus
1724  9129
1725  9129 21 34 82     	ld hl,Amadeus_scanlines_album
1726  912C 22 41 8C     	ld (Album_de_pintado_Amadeus),hl
1727  912F 21 58 82     	ld hl,Amadeus_scanlines_album_2
1728  9132 22 43 8C     	ld (Album_de_borrado_Amadeus),hl
1729  9135
1730  9135 C9           	ret
1731  9136
1732  9136              Inicia_albumes_de_disparos
1733  9136
1734  9136 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1735  9139 22 45 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1736  913C 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1737  913F 22 47 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1738  9142
1739  9142 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1740  9145 22 49 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1741  9148 22 4D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1742  914B
1743  914B 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1744  914E 22 4B 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1745  9151
1746  9151 C9           	ret
1747  9152
1748  9152              ; ---------------------------------------------------------------------------------------------------------------------
1749  9152              ;
1750  9152              ; 8/1/23
1751  9152              ;
1752  9152              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1753  9152              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1754  9152              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1755  9152
1756  9152              ; Destruye HL y DE !!!!!
1757  9152
1758  9152              Inicia_punteros_de_cajas
1759  9152
1760  9152 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1761  9155 CD 68 91         call Extrae_address
1762  9158 22 2A 8C         ld (Puntero_store_caja),hl
1763  915B 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1764  915E 22 2E 8C     	ld (Indice_restore_caja),hl
1765  9161 CD 68 91     	call Extrae_address
1766  9164 22 2C 8C     	ld (Puntero_restore_caja),hl
1767  9167 C9               ret
1768  9168
1769  9168              ; *************************************************************************************************************************************************************
1770  9168
1771  9168              ;
1772  9168              ; 20/10/22
1773  9168              ;
1774  9168              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1775  9168              ;
1776  9168              ; Destruye el puntero y DE !!!!!
1777  9168
1778  9168 5E           Extrae_address ld e,(hl)
1779  9169 23           	inc hl
1780  916A 56           	ld d,(hl)
1781  916B 2B           	dec hl
1782  916C EB           	ex de,hl
1783  916D C9           	ret
1784  916E
1785  916E              ; *************************************************************************************************************************************************************
1786  916E              ;
1787  916E              ;	7/12/24
1788  916E              ;
1789  916E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1790  916E              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1791  916E              ;
1792  916E              ;   Destruye HL y BC !!!!!,
1793  916E              ;
1794  916E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1795  916E              ;					"0" ..... Izquierda.
1796  916E
1797  916E              Inicia_Puntero_objeto
1798  916E
1799  916E 3A 09 8C     	ld a,(Cuad_objeto)
1800  9171 A7           	and a
1801  9172
1802  9172 CC 7A 91     	call z,Inicia_puntero_objeto_der
1803  9175 C8           	ret z
1804  9176
1805  9176 CD 8D 91     	call Inicia_puntero_objeto_izq
1806  9179 C9           	ret
1807  917A
1808  917A              ; Arrancamos desde la parte izquierda de la pantalla.
1809  917A              ; Iniciamos (Indice_Sprite_der).
1810  917A
1811  917A 2A FF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1812  917D 22 03 8C     	ld (Puntero_DESPLZ_der),hl
1813  9180 CD 68 91     	call Extrae_address
1814  9183 22 FC 8B     	ld (Puntero_objeto),hl
1815  9186
1816  9186 2A 01 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1817  9189 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1818  918C C9           	ret
1819  918D
1820  918D              ; Arrancamos desde la parte derecha de la pantalla.
1821  918D              ; Iniciamos (Indice_Sprite_izq).
1822  918D
1823  918D 2A 01 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1824  9190 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1825  9193 CD 68 91     	call Extrae_address
1826  9196 22 FC 8B     	ld (Puntero_objeto),hl
1827  9199
1828  9199 2A FF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1829  919C 22 03 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1830  919F C9           	ret
1831  91A0
1832  91A0              ; **************************************************************************************************
1833  91A0              ;
1834  91A0              ;	27/11/24
1835  91A0              ;
1836  91A0              ;	INPUT: IX contiene (Puntero_store_caja).
1837  91A0              ;
1838  91A0              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1839  91A0
1840  91A0              Salta_caja_de_entidades_vacia
1841  91A0
1842  91A0 DD 7E 00     	ld a,(ix+0)
1843  91A3 A7           	and a
1844  91A4 C0           	ret nz
1845  91A5
1846  91A5 CD AF 91     	call Incrementa_punteros_de_cajas
1847  91A8 DD 2A 2A 8C  	ld ix,(Puntero_store_caja)
1848  91AC 18 F2        	jr Salta_caja_de_entidades_vacia
1849  91AE
1850  91AE C9           	ret
1851  91AF
1852  91AF              ; **************************************************************************************************
1853  91AF              ;
1854  91AF              ;	08/05/23
1855  91AF              ;
1856  91AF              ;	Incrementamos los dos punteros de entidades. (+1).
1857  91AF
1858  91AF              Incrementa_punteros_de_cajas
1859  91AF
1860  91AF 2A 2C 8C     	ld hl,(Puntero_restore_caja)
1861  91B2 22 2A 8C     	ld (Puntero_store_caja),hl
1862  91B5 2A 2E 8C     	ld hl,(Indice_restore_caja)
1863  91B8 23           	inc hl
1864  91B9 23           	inc hl
1865  91BA 22 2E 8C     	ld (Indice_restore_caja),hl
1866  91BD CD 68 91         call Extrae_address
1867  91C0 22 2C 8C         ld (Puntero_restore_caja),hl
1868  91C3 C9               ret
1869  91C4
1870  91C4              ; -----------------------------------------------------------
1871  91C4
1872  91C4              ; Teclado.
1873  91C4
1874  91C4 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1875  91C6 DB FE        	in a,($fe)
1876  91C8 E6 01        	and $01
1877  91CA 28 02        	jr z,1f
1878  91CC 18 F6        	jr Pulsa_ENTER
1879  91CE C9           1 ret
1880  91CF
1881  91CF              ; **************************************************************************************************
1882  91CF              ;
1883  91CF              ; Temporización.
1884  91CF
1885  91CF              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1886  91CF              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1887  91CF              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1888  91CF              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1889  91CF
1890  91CF              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1891  91CF              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1892  91CF              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1893  91CF
1894  91CF              ; A partir de $4f61 no hace falta DELAY.
1895  91CF
1896  91CF              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1897  91CF
1898  91CF              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1899  91CF              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1900  91CF              ;	LD A,B
1901  91CF              ;	AND A
1902  91CF              ;	JR NZ,wait
1903  91CF              ;	RET
1904  91CF
1905  91CF              ; ---------------------------------------------------------------------------------------------------------------
1906  91CF              ;
1907  91CF              ;	13/07/24
1908  91CF              ;
1909  91CF
1910  91CF              Inicia_Shield
1911  91CF
1912  91CF 21 84 8C     	ld hl,Datos_Shield
1913  91D2 22 88 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1914  91D5
1915  91D5 7E           	ld a,(hl)
1916  91D6 32 8B 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1917  91D9
1918  91D9 3E 01        	ld a,1
1919  91DB 32 8C 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1920  91DE
1921  91DE C9           	ret
1922  91DF
1923  91DF              ; ---------- ---------- ---------- ---------- ----------
1924  91DF              ;
1925  91DF              ;	30/11/24
1926  91DF              ;
1927  91DF              ;	Limpia la caja de entidades de una entidad eliminada.
1928  91DF              ;
1929  91DF              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1930  91DF              ;	MODIFY: A,BC,DE y HL.
1931  91DF
1932  91DF              Limpia_caja_de_entidades
1933  91DF
1934  91DF DD E5        	push ix
1935  91E1 E1           	pop hl
1936  91E2 AF           	xor a
1937  91E3 77           	ld (hl),a
1938  91E4 5D           	ld e,l
1939  91E5 54           	ld d,h
1940  91E6 1C           	inc e
1941  91E7 01 0B 00     	ld bc,11
1942  91EA ED B0        	ldir
1943  91EC C9           	ret
1944  91ED
1945  91ED              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1946  91ED              ;
1947  91ED              ;	4/6/24
1948  91ED              ;
1949  91ED              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1950  91ED              ;
1951  91ED              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1952  91ED              ;
1953  91ED
1954  91ED              Actualiza_pantalla
1955  91ED
1956  91ED 3E 02        	ld a,2
1957  91EF D3 FE        	out ($fe),a
1958  91F1
1959  91F1 3A 61 8C     	ld a,(Ctrl_3)
1960  91F4 CB 57        	bit 2,a
1961  91F6 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1962  91F8
1963  91F8              Borrando_entidades
1964  91F8
1965  91F8 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1966  91FB CD 68 91     	call Extrae_address
1967  91FE 24           	inc h
1968  91FF 25           	dec h
1969  9200 28 05        	jr z,Pintando_entidades
1970  9202 CD 9A 96     	call Rutinas_de_pintado												; Borra.
1971  9205 18 F1        	jr Borrando_entidades
1972  9207
1973  9207              Pintando_entidades
1974  9207
1975  9207 2A 5D 8C     	ld hl,(India_SP)
1976  920A 2C           	inc l
1977  920B CD 68 91     	call Extrae_address
1978  920E 24           	inc h
1979  920F 25           	dec h
1980  9210 28 0E        	jr z,Ejecuta_escudo
1981  9212 1C           	inc e
1982  9213 1C           	inc e
1983  9214 ED 53 5D 8C  	ld (India_SP),de
1984  9218 CD 68 91     	call Extrae_address
1985  921B CD 9A 96     	call Rutinas_de_pintado
1986  921E 18 E7        	jr Pintando_entidades
1987  9220
1988  9220              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1989  9220
1990  9220              Ejecuta_escudo
1991  9220
1992  9220 3A 8A 8C     	ld a,(Shield)
1993  9223 A7           	and a
1994  9224 20 2F        	jr nz,Aplica_Shield
1995  9226
1996  9226              Borrando_Amadeus
1997  9226
1998  9226 21 61 8C     	ld hl,Ctrl_3
1999  9229 CB 6E        	bit 5,(hl)
2000  922B 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2001  922D
2002  922D 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
2003  9230 CD 68 91     	call Extrae_address
2004  9233 24           	inc h
2005  9234 25           	dec h
2006  9235 28 03        	jr z,Pintando_Amadeus
2007  9237 CD 9A 96     	call Rutinas_de_pintado
2008  923A
2009  923A              Pintando_Amadeus
2010  923A
2011  923A 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
2012  923D CD 68 91     	call Extrae_address
2013  9240 24           	inc h
2014  9241 25           	dec h
2015  9242 28 03        	jr z,1F
2016  9244 CD 9A 96     	call Rutinas_de_pintado
2017  9247
2018  9247              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2019  9247
2020  9247 21 61 8C     1 ld hl,Ctrl_3
2021  924A CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2022  924C CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2023  924E CB AE        	res 5,(hl)
2024  9250
2025  9250 3E 01        	ld a,1												; Borde azul.
2026  9252 D3 FE        	out ($fe),a
2027  9254
2028  9254 C9           	ret
2029  9255
2030  9255              Aplica_Shield
2031  9255
2032  9255              ;	Bit 1 "1" (Shield_3) Sólo borra.
2033  9255              ;		  "0"     ""     Borra/Pinta.
2034  9255              ;	Bit 2    ""  RET.	 No borra, no pinta.
2035  9255
2036  9255 21 8C 8C     	ld hl,Shield_3
2037  9258
2038  9258 CB 5E        	bit 3,(hl)
2039  925A 20 DE        	jr nz,Pintando_Amadeus
2040  925C
2041  925C CB 56        	bit 2,(hl)
2042  925E 20 E7        	jr nz,1B
2043  9260
2044  9260 CB 4E        	bit 1,(hl)
2045  9262 C4 69 92     	call nz,Borra_Amadeus_shield
2046  9265
2047  9265 28 BF        	jr z,Borrando_Amadeus
2048  9267 18 DE        	jr 1B
2049  9269
2050  9269              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2051  9269
2052  9269              Borra_Amadeus_shield
2053  9269
2054  9269 3A 61 8C     	ld a,(Ctrl_3)
2055  926C CB 6F        	bit 5,a
2056  926E 28 08        	jr z,1F
2057  9270
2058  9270 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
2059  9273 CD 68 91     	call Extrae_address
2060  9276 18 06        	jr 2F
2061  9278
2062  9278 2A 41 8C     1 ld hl,(Album_de_pintado_Amadeus)
2063  927B CD 68 91     	call Extrae_address
2064  927E
2065  927E CD 9A 96     2 call Rutinas_de_pintado
2066  9281
2067  9281 AF           	xor a
2068  9282 3C           	inc a											; Asegura NZ en la salida de la rutina.
2069  9283
2070  9283 C9           	ret
2071  9284
2072  9284              Pinta_Amadeus_shield
2073  9284
2074  9284 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
2075  9287 CD 68 91     	call Extrae_address
2076  928A CD 9A 96     	call Rutinas_de_pintado
2077  928D
2078  928D AF           	xor a
2079  928E 3C           	inc a											; Asegura NZ en la salida de la rutina.
2080  928F
2081  928F C9           	ret
2082  9290
2083  9290              Borra_Pinta_Amadeus_shield
2084  9290
2085  9290 CD 69 92     	call Borra_Amadeus_shield
2086  9293 CD 84 92     	call Pinta_Amadeus_shield
2087  9296 C9           	ret
2088  9297
2089  9297              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2090  9297              ;
2091  9297              ;	19/6/24
2092  9297              ;
2093  9297
2094  9297              Teclado
2095  9297
2096  9297              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2097  9297
2098  9297 3E F7        	ld a,$f7												; "5" para disparar.
2099  9299 DB FE        	in a,($fe)
2100  929B E6 10        	and $10
2101  929D
2102  929D CC AC A4     	call z,Genera_disparo_Amadeus
2103  92A0
2104  92A0 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2105  92A2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2106  92A4 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2107  92A6 CC 7E 9F         call z,Amadeus_a_izquierda
2108  92A9
2109  92A9 3E F7        	ld a,$f7
2110  92AB DB FE        	in a,($fe)
2111  92AD E6 01        	and $01
2112  92AF C8           	ret z
2113  92B0
2114  92B0 3E F7        	ld a,$f7
2115  92B2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2116  92B4 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2117  92B6 CC 96 9F     	call z,Amadeus_a_derecha
2118  92B9
2119  92B9 C9           	ret
2120  92BA
2121  92BA              ; ------------------------------------------------------------------------------------------------------------------------
2122  92BA              ;
2123  92BA              ;	06/07/24
2124  92BA              ;
2125  92BA
2126  92BA              Genera_explosion
2127  92BA
2128  92BA 21 73 8C     	ld hl,Clock_explosion
2129  92BD 35           	dec (hl)
2130  92BE 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2131  92C0
2132  92C0              Borra_entidad_colisionada
2133  92C0
2134  92C0 CD 7B 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2135  92C3
2136  92C3 DD E5        	push ix
2137  92C5 CD C2 90     	call Cargamos_registros_con_explosion
2138  92C8 CD A6 95     	call Genera_datos_de_impresion
2139  92CB DD E1        	pop ix
2140  92CD
2141  92CD AF           	xor a
2142  92CE 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2143  92CF
2144  92CF C9           	ret
2145  92D0
2146  92D0              Siguiente_frame_explosion
2147  92D0
2148  92D0 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2149  92D2
2150  92D2              ; Avanza Frame de explosión.
2151  92D2
2152  92D2 DD 6E 07     	ld l,(ix+7)
2153  92D5 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2154  92D8
2155  92D8 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2156  92DB
2157  92DB 79           	ld a,c
2158  92DC 95           	sub l
2159  92DD 20 41        	jr nz,1F
2160  92DF
2161  92DF
2162  92DF              ; Fín de la entidad !!!!!!!!!!!!!
2163  92DF              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2164  92DF
2165  92DF              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2166  92DF              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2167  92DF              ; Entidades_en_curso db 0								; Entidades en pantalla.
2168  92DF
2169  92DF              ; La entidad eliminada, es la última del nivel ?
2170  92DF
2171  92DF 3A 32 8C     	ld a,(Numero_de_entidades)
2172  92E2 A7           	and a
2173  92E3 28 30        	jr z,2F
2174  92E5
2175  92E5              ; Decrementa (Numero_de_entidades)
2176  92E5
2177  92E5 3D           	dec a
2178  92E6 32 32 8C     	ld (Numero_de_entidades),a
2179  92E9 21 34 8C     	ld hl,Entidades_en_curso
2180  92EC 35           	dec (hl)
2181  92ED
2182  92ED              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2183  92ED              ; IX apunta al 1er .db de la entidad eliminada.
2184  92ED
2185  92ED 2A 30 8C     	ld hl,(Puntero_indice_master)
2186  92F0 CD 68 91     	call Extrae_address
2187  92F3
2188  92F3 DD E5        	push ix
2189  92F5 D1           	pop de
2190  92F6
2191  92F6 01 0C 00     	ld bc,12
2192  92F9 ED B0        	ldir
2193  92FB
2194  92FB              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2195  92FB
2196  92FB CD 96 90     	call Obtenemos_puntero_de_impresion
2197  92FE
2198  92FE DD 6E 05     	ld l,(ix+5)
2199  9301 2C           	inc l
2200  9302 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2201  9305
2202  9305 CD 7A 95     	call Genera_coordenadas
2203  9308
2204  9308 ED 4B EB 8B  	ld bc,(Coordenada_X)
2205  930C
2206  930C DD 71 01     	ld (ix+1),c
2207  930F DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2208  9312
2209  9312 AF           	xor a
2210  9313 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2211  9314
2212  9314 C9           	ret
2213  9315
2214  9315              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2215  9315
2216  9315 21 33 8C     2 ld hl,Numero_parcial_de_entidades
2217  9318 35           	dec (hl)
2218  9319 23           	inc hl
2219  931A 35           	dec (hl)
2220  931B
2221  931B CD DF 91     	call Limpia_caja_de_entidades
2222  931E 18 A0        	jr Borra_entidad_colisionada
2223  9320
2224  9320 23           1 inc hl
2225  9321 23           	inc hl
2226  9322
2227  9322 DD 75 07     	ld (ix+7),l
2228  9325 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2229  9328
2230  9328 18 96        	jr Borra_entidad_colisionada
2231  932A
2232  932A              ; ----- ----- ----- ----- -----
2233  932A
2234  932A              Genera_explosion_Amadeus
2235  932A
2236  932A 21 74 8C     	ld hl,Clock_explosion_Amadeus
2237  932D 35           	dec (hl)
2238  932E 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2239  9330
2240  9330              Borra_Amadeus_impactado
2241  9330
2242  9330 CD E5 8E     	call Change_Amadeus
2243  9333 CD D6 90     	call Cargamos_registros_con_explosion_Amadeus
2244  9336 CD F7 90     	call Genera_datos_de_impresion_Amadeus
2245  9339
2246  9339 21 61 8C     	ld hl,Ctrl_3
2247  933C CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2248  933E
2249  933E AF           	xor a
2250  933F 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2251  9340
2252  9340 C9           	ret
2253  9341
2254  9341              Siguiente_frame_explosion_Amadeus
2255  9341
2256  9341 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2257  9343
2258  9343              ; Avanza Frame de explosión.
2259  9343
2260  9343 2A B5 89     	ld hl,(Pamm_Amadeus)
2261  9346 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2262  9349
2263  9349 79           	ld a,c
2264  934A 95           	sub l
2265  934B 20 0B        	jr nz,1F
2266  934D
2267  934D              ; Fín de Amadeus !!!!!!!!!!!!!
2268  934D              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2269  934D
2270  934D AF           	xor a
2271  934E 32 B2 89     	ld (Impacto_Amadeus),a
2272  9351 21 61 8C     	ld hl,Ctrl_3
2273  9354 CB F6        	set 6,(hl)
2274  9356
2275  9356 18 D8        	jr Borra_Amadeus_impactado
2276  9358
2277  9358 23           1 inc hl
2278  9359 23           	inc hl
2279  935A 22 B5 89     	ld (Pamm_Amadeus),hl
2280  935D 18 D1        	jr Borra_Amadeus_impactado
2281  935F
2282  935F              ; ---------------------------------------------------------------
2283  935F
2284  935F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 935F              ; ******************************************************************************************************************************************************************************************
   2+ 935F              ;
   3+ 935F              ;   21/04/24
   4+ 935F              ;
   5+ 935F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 935F              ;   (XOR) bit a bit.
   7+ 935F              ;
   8+ 935F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 935F
  10+ 935F              Derivando_RND
  11+ 935F
  12+ 935F 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9362
  14+ 9362 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9364 C5               push bc
  16+ 9365              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9365 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9368              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9368
  20+ 9368 A7           6 and a                                 ; Carry a "0".
  21+ 9369 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 936B 30 02            jr nc,1F
  23+ 936D
  24+ 936D CB C1            set 0,c
  25+ 936F
  26+ 936F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9370 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9372 5F               ld e,a
  29+ 9373
  30+ 9373 7A               ld a,d
  31+ 9374 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9376 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9378
  34+ 9378 CB 3F            srl a
  35+ 937A
  36+ 937A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 937B
  38+ 937B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 937C 28 04            jr z,4F
  40+ 937E
  41+ 937E CB FF            set 7,a
  42+ 9380 18 02            jr 5F
  43+ 9382
  44+ 9382 CB BF        4 res 7,a
  45+ 9384
  46+ 9384 CB 21        5 sla c
  47+ 9386 10 E0            djnz 6B
  48+ 9388
  49+ 9388 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9389
  51+ 9389 77               ld (hl),a
  52+ 938A 23               inc hl
  53+ 938B C1               pop bc
  54+ 938C 10 D4            djnz 3B
  55+ 938E
  56+ 938E C9               ret
  57+ 938F
  58+ 938F
  59+ 938F
# file closed: RND_Derivando.asm
2285  938F              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 938F              ;---------------------------------------------------------------------------------------------------------------
   2+ 938F              ;
   3+ 938F              ;   13/11/24
   4+ 938F
   5+ 938F              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 938F
   7+ 938F              Genera_movimientos_masticados_del_nivel
   8+ 938F
   9+ 938F              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 938F
  11+ 938F              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 938F              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 938F              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 938F
  15+ 938F 2D           	dec l
  16+ 9390 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9391 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9392 4E           	ld c,(hl)
  19+ 9393
  20+ 9393 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9394 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9395
  23+ 9395              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9395
  25+ 9395 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9396
  27+ 9396 CD D4 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9399
  29+ 9399              ;	Caja Master inicializada ???
  30+ 9399
  31+ 9399 7E           	ld a,(hl)
  32+ 939A A7           	and a
  33+ 939B 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 939D
  35+ 939D              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 939D
  37+ 939D C1           	pop bc
  38+ 939E 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 939F C5           	push bc
  40+ 93A0
  41+ 93A0 CD 74 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 93A3 CD 08 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 93A6
  44+ 93A6 3A EA 8B     	ld a,(Tipo)
  45+ 93A9 CD E4 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 93AC
  47+ 93AC              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 93AC
  49+ 93AC              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 93AC              ;	ld a,(hl)
  51+ 93AC              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 93AC              ;	and a
  53+ 93AC              ;	jr nz,2F													; No queremos que la entidad se inicie en la columna "0", en ese caso será "1".
  54+ 93AC
  55+ 93AC              ;	inc a														; (Posicion_inicio) $4001.
  56+ 93AC
  57+ 93AC              ;2 ld hl,Posicion_inicio
  58+ 93AC              ;	ld (hl),a
  59+ 93AC
  60+ 93AC              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  61+ 93AC              ;	Generamos "Movimientos masticados" de la entidad.
  62+ 93AC
  63+ 93AC CD 17 90     	call Construye_movimientos_masticados_entidad
  64+ 93AF
  65+ 93AF 2A 30 8C     	ld hl,(Puntero_indice_master)
  66+ 93B2 CD 68 91     	call Extrae_address
  67+ 93B5
  68+ 93B5 5D           	ld e,l
  69+ 93B6 54           	ld d,h
  70+ 93B7
  71+ 93B7 CD 35 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  72+ 93BA
  73+ 93BA              Movimientos_masticados_construidos
  74+ 93BA
  75+ 93BA C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  76+ 93BB
  77+ 93BB E1           	pop hl														; Pop (Datos_de_nivel).
  78+ 93BC 2C           	inc l														; Datos_de_nivel +1 en HL.
  79+ 93BD
  80+ 93BD 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  81+ 93BE 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  82+ 93C0
  83+ 93C0 C9           	ret
  84+ 93C1
  85+ 93C1              ;---------------------------------------------------------------------------------------------------------------
  86+ 93C1              ;
  87+ 93C1              ;   9/11/24
  88+ 93C1              ;
  89+ 93C1              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  90+ 93C1              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  91+ 93C1              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  92+ 93C1              ;	_ de la 1ª entidad del Nivel.
  93+ 93C1              ;
  94+ 93C1              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  95+ 93C1
  96+ 93C1              ;	MODIFICA: HL,DE y A.
  97+ 93C1              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  98+ 93C1
  99+ 93C1              Inicializa_1er_Nivel
 100+ 93C1
 101+ 93C1              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 102+ 93C1
 103+ 93C1 21 D3 8B     	ld hl,Indice_de_niveles
 104+ 93C4 CD 68 91     	call Extrae_address
 105+ 93C7 ED 53 80 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 106+ 93CB
 107+ 93CB 7E           	ld a,(hl)
 108+ 93CC 32 32 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 109+ 93CF
 110+ 93CF 2C           	inc l
 111+ 93D0 22 82 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 112+ 93D3
 113+ 93D3 C9           	ret
 114+ 93D4
 115+ 93D4              ; ----------------------
 116+ 93D4              ;
 117+ 93D4              ;	13/11/24
 118+ 93D4              ;
 119+ 93D4
 120+ 93D4              Situa_en_Caja_Master
 121+ 93D4
 122+ 93D4 CD F3 94         call Calcula_salto_en_BC
 123+ 93D7 21 58 89         ld hl,Indice_de_cajas_master
 124+ 93DA A7               and a
 125+ 93DB ED 4A            adc hl,bc
 126+ 93DD 22 30 8C       	ld (Puntero_indice_master),hl
 127+ 93E0 CD 68 91     	call Extrae_address
 128+ 93E3 C9           	ret
 129+ 93E4
 130+ 93E4              ; ----------------------
 131+ 93E4
 132+ 93E4              ; Fija_velocidades ld de,Perfiles_de_velocidad
 133+ 93E4              ; 	ld bc,4
 134+ 93E4              ; 	ldir
 135+ 93E4              ; 	ret
 136+ 93E4
 137+ 93E4 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 138+ 93E5 CD F3 94         call Calcula_salto_en_BC
 139+ 93E8 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 140+ 93EB A7               and a
 141+ 93EC ED 4A            adc hl,bc
 142+ 93EE CD 68 91         call Extrae_address
 143+ 93F1 22 1B 8C         ld (Puntero_indice_mov),hl
 144+ 93F4 C9               ret
 145+ 93F5
 146+ 93F5              ;---------------------------------------------------------------------------------------------------------------
 147+ 93F5              ;
 148+ 93F5              ;   13/11/24
 149+ 93F5              ;
 150+ 93F5              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 151+ 93F5
 152+ 93F5
 153+ 93F5              Prepara_Cajas_de_Entidades
 154+ 93F5
 155+ 93F5              ; Preparamos los punteros de las cajas de entidades:
 156+ 93F5
 157+ 93F5 CD 52 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 158+ 93F8              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 159+ 93F8 CD 3E 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 160+ 93FB
 161+ 93FB 2A 82 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 162+ 93FE
 163+ 93FE              ; En este punto:
 164+ 93FE              ;
 165+ 93FE              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 166+ 93FE              ; B contiene (Numero_parcial_de_entidades).
 167+ 93FE
 168+ 93FE C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 169+ 93FF
 170+ 93FF 7E           	ld a,(hl)
 171+ 9400
 172+ 9400 CD D4 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 173+ 9403
 174+ 9403 ED 5B 2A 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 175+ 9407
 176+ 9407 D5           	push de
 177+ 9408 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 178+ 940A
 179+ 940A 01 0C 00     	ld bc,12
 180+ 940D ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 181+ 940F              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 182+ 940F
 183+ 940F              ; En este punto debemos generar coordenadas y puntero de impresión.:
 184+ 940F              ;
 185+ 940F              ;
 186+ 940F              ; ------------------------------------------------------ IX
 187+ 940F              ; ------------------------------------------------------ IX
 188+ 940F              ; ------------------------------------------------------ IX
 189+ 940F              ; ------------------------------------------------------ IX
 190+ 940F
 191+ 940F DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 192+ 9411
 193+ 9411 CD 96 90     	call Obtenemos_puntero_de_impresion
 194+ 9414
 195+ 9414 DD 6E 05     	ld l,(ix+5)
 196+ 9417 2C           	inc l
 197+ 9418 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 198+ 941B
 199+ 941B D5           	push de														; Push (Puntero_objeto).
 200+ 941C E5           	push hl														; Push (Puntero_de_impresion).
 201+ 941D
 202+ 941D CD 7A 95     	call Genera_coordenadas
 203+ 9420
 204+ 9420 ED 4B EB 8B  	ld bc,(Coordenada_X)
 205+ 9424
 206+ 9424 DD 71 01     	ld (ix+1),c
 207+ 9427 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 208+ 942A
 209+ 942A CD 7B 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 210+ 942D
 211+ 942D DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 212+ 942F D1           	pop de														; Pop (Puntero_objeto) en DE.
 213+ 9430
 214+ 9430 CD A6 95     	call Genera_datos_de_impresion
 215+ 9433
 216+ 9433 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 217+ 9435
 218+ 9435              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 219+ 9435
 220+ 9435 CD AC 94     	call Decrementa_Contador_de_mov_masticados
 221+ 9438 CD 89 94     	call Limpiamos_bandeja_DRAW
 222+ 943B CD AF 91     	call Incrementa_punteros_de_cajas
 223+ 943E
 224+ 943E              ; Siguiente entidad del Nivel.
 225+ 943E
 226+ 943E 2A 82 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 227+ 9441 23           	inc hl 														; _ entidad del Nivel.
 228+ 9442
 229+ 9442 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 230+ 9443
 231+ 9443 10 B9        	djnz 1B
 232+ 9445
 233+ 9445 C9           	ret
 234+ 9446
 235+ 9446              ; -------------------------------------------------------------------------------------------------------------------
 236+ 9446              ;
 237+ 9446              ;	27/5/24
 238+ 9446              ;
 239+ 9446              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 240+ 9446              ;
 241+ 9446
 242+ 9446              ; 	Cargamos la definición de Amadeus en DRAW.
 243+ 9446              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 244+ 9446
 245+ 9446 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 246+ 9449 CD 08 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 247+ 944C
 248+ 944C
 249+ 944C              Construye_movimientos_masticados_Amadeus
 250+ 944C
 251+ 944C 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 252+ 944F CD 89 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 253+ 9452              ;															; _ el (Contador_de_mov_masticados).
 254+ 9452 CD 6E 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 255+ 9455              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 256+ 9455
 257+ 9455              ; Generamos movimientos masticados de Amadeus.
 258+ 9455
 259+ 9455 06 79        	ld b,121												; $0079, 121d.
 260+ 9457
 261+ 9457 C5           1 push bc
 262+ 9458 CD 34 99     	call Draw
 263+ 945B CD 6E 90     	call Guarda_movimiento_masticado
 264+ 945E
 265+ 945E CD A8 9C     	call Mov_right
 266+ 9461 CD A8 9C     	call Mov_right											; Amadeus se mueve x2 pixel.
 267+ 9464
 268+ 9464 C1           	pop bc
 269+ 9465 10 F0        	djnz 1B
 270+ 9467
 271+ 9467              ; Todos los movimientos masticados de Amadeus se han creado.
 272+ 9467
 273+ 9467              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 274+ 9467              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 275+ 9467
 276+ 9467 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 277+ 946A 01 08 00     	ld bc,8
 278+ 946D A7           	and a
 279+ 946E ED 42        	sbc hl,bc
 280+ 9470 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 281+ 9473
 282+ 9473 C9           	ret
 283+ 9474
 284+ 9474              ; ---------------------------------------------------------------------
 285+ 9474              ;
 286+ 9474              ;	10/02/24
 287+ 9474              ;
 288+ 9474              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 289+ 9474              ;
 290+ 9474              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 291+ 9474
 292+ 9474              Definicion_segun_tipo
 293+ 9474
 294+ 9474 CD F3 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 295+ 9477 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 296+ 947A CD FE 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 297+ 947D C9           	ret
 298+ 947E
 299+ 947E              ; ---------------------------------------------------------------------
 300+ 947E              ;
 301+ 947E              ;	6/7/24
 302+ 947E
 303+ 947E
 304+ 947E              Store_Restore_cajas
 305+ 947E
 306+ 947E ED 5B 2A 8C  	ld de,(Puntero_store_caja)
 307+ 9482 CD 35 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 308+ 9485 CD AF 91     	call Incrementa_punteros_de_cajas
 309+ 9488 C9           	ret
 310+ 9489
 311+ 9489              ; ---------------------------------------------------------------------
 312+ 9489              ;
 313+ 9489              ;	23/6/24
 314+ 9489              ;
 315+ 9489              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 316+ 9489              ;
 317+ 9489              ;	MODIFY: HL
 318+ 9489
 319+ 9489              Limpiamos_bandeja_DRAW
 320+ 9489
 321+ 9489 ED 73 39 8C  	ld (Stack),sp
 322+ 948D 31 0F 8C     	ld sp,Vel_left
 323+ 9490
 324+ 9490 AF           	xor a
 325+ 9491 67           	ld h,a
 326+ 9492 6F           	ld l,a
 327+ 9493
 328+ 9493 E5           	push hl
 329+ 9494 E5           	push hl
 330+ 9495 E5           	push hl
 331+ 9496 E5           	push hl
 332+ 9497 E5           	push hl
 333+ 9498 E5           	push hl
 334+ 9499 E5           	push hl
 335+ 949A E5           	push hl
 336+ 949B E5           	push hl
 337+ 949C E5           	push hl
 338+ 949D E5           	push hl
 339+ 949E E5           	push hl
 340+ 949F E5           	push hl
 341+ 94A0 E5           	push hl
 342+ 94A1 E5           	push hl
 343+ 94A2 E5           	push hl
 344+ 94A3 E5           	push hl
 345+ 94A4 E5           	push hl
 346+ 94A5
 347+ 94A5 33           	inc sp
 348+ 94A6
 349+ 94A6 E5           	push hl
 350+ 94A7 ED 7B 39 8C  	ld sp,(Stack)
 351+ 94AB
 352+ 94AB C9           	ret
 353+ 94AC
 354+ 94AC              ; ---------------------------------------------------------------------
 355+ 94AC              ;
 356+ 94AC              ;	23/11/24
 357+ 94AC              ;
 358+ 94AC              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 359+ 94AC
 360+ 94AC              Decrementa_Contador_de_mov_masticados
 361+ 94AC
 362+ 94AC DD 6E 09     	ld l,(ix+9)
 363+ 94AF DD 66 0A     	ld h,(ix+10)
 364+ 94B2
 365+ 94B2 2B           	dec hl
 366+ 94B3
 367+ 94B3 DD 75 09     	ld (ix+9),l
 368+ 94B6 DD 74 0A     	ld (ix+10),h
 369+ 94B9
 370+ 94B9 C9           	ret
 371+ 94BA
 372+ 94BA              ; ---------------------------------------------------------------------
 373+ 94BA              ;
 374+ 94BA              ;	24/11/24
 375+ 94BA
 376+ 94BA              Reinicia_entidad_maliciosa
 377+ 94BA
 378+ 94BA              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 379+ 94BA
 380+ 94BA CD 0F A1     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 381+ 94BD CD 1C A1     	call Transfiere_datos_de_contadores
 382+ 94C0
 383+ 94C0              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 384+ 94C0
 385+ 94C0 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 386+ 94C3 CD 74 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 387+ 94C6
 388+ 94C6 7D           	ld a,l
 389+ 94C7 C6 0B        	add 11
 390+ 94C9 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 391+ 94CA
 392+ 94CA CD 68 91     	call Extrae_address
 393+ 94CD
 394+ 94CD DD 75 07     	ld (ix+7),l
 395+ 94D0 DD 74 08     	ld (ix+8),h
 396+ 94D3
 397+ 94D3 CD 96 90     	call Obtenemos_puntero_de_impresion
 398+ 94D6
 399+ 94D6              ; Incrementa (Contador_de_vueltas)x2.
 400+ 94D6              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 401+ 94D6
 402+ 94D6              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 403+ 94D6              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 404+ 94D6              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 405+ 94D6              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 406+ 94D6              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 407+ 94D6
 408+ 94D6 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 409+ 94DA
 410+ 94DA DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 411+ 94DD CB 2F        	sra a
 412+ 94DF CB 2F        	sra a
 413+ 94E1
 414+ 94E1 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 415+ 94E4
 416+ 94E4 3E 40        	ld a,$40
 417+ 94E6 DD BE 03     	cp (ix+3)
 418+ 94E9 C0           	ret nz
 419+ 94EA
 420+ 94EA              ; Límitador.
 421+ 94EA
 422+ 94EA              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 423+ 94EA
 424+ 94EA DD CB 03 2E  	sra (ix+3)
 425+ 94EE DD CB 0B 2E  	sra (ix+11)
 426+ 94F2
 427+ 94F2 C9           	ret
 428+ 94F3
 429+ 94F3              ;	------------------------------------------------------------------------------------
 430+ 94F3              ;
 431+ 94F3              ;	09/11/24
 432+ 94F3              ;
 433+ 94F3              ;	INPUTS:	A contiene el (Tipo) de entidad.
 434+ 94F3              ;
 435+ 94F3              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 436+ 94F3              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 437+ 94F3
 438+ 94F3 A7           Calcula_salto_en_BC and a
 439+ 94F4 28 04        	jr z,1F
 440+ 94F6 CB 27        	sla a
 441+ 94F8 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 442+ 94FA 4F           1 ld c,a
 443+ 94FB 06 00        	ld b,0
 444+ 94FD C9           	ret
 445+ 94FE
 446+ 94FE              ; ------------------------------------------------------------------
 447+ 94FE              ;
 448+ 94FE              ;	19/1/24
 449+ 94FE              ;
 450+ 94FE              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 451+ 94FE              ;	Actualiza (Datos_de_entidad) con esa dirección.
 452+ 94FE
 453+ 94FE A7           Situa_en_datos_de_definicion and a
 454+ 94FF ED 4A        	adc hl,bc
 455+ 9501 CD 68 91     	call Extrae_address
 456+ 9504 22 37 8C         ld (Datos_de_entidad),hl
 457+ 9507 C9           	ret
 458+ 9508
 459+ 9508              ; ----------------------------------------------------------------------------------------------------------
 460+ 9508              ;
 461+ 9508              ;	24/6/24
 462+ 9508              ;
 463+ 9508              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 464+ 9508              ;	_ de entidad.
 465+ 9508              ;
 466+ 9508              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 467+ 9508              ;
 468+ 9508              ;
 469+ 9508              ;	MODIFICA: HL,DE y BC
 470+ 9508
 471+ 9508
 472+ 9508              Definicion_de_entidad_a_bandeja_DRAW
 473+ 9508
 474+ 9508 11 EA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 475+ 950B 7E           	ld a,(hl) 									; Volcamos Tipo.
 476+ 950C 12           	ld (de),a
 477+ 950D 23           	inc hl
 478+ 950E              ;
 479+ 950E 11 F8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 480+ 9511 01 02 00     	ld bc,2
 481+ 9514 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 482+ 9516              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 483+ 9516 11 ED 8B     	ld de,Contador_de_vueltas
 484+ 9519 7E           	ld a,(hl)
 485+ 951A 12           	ld (de),a
 486+ 951B 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 487+ 951C
 488+ 951C 11 FF 8B     	ld de,Indice_Sprite_der
 489+ 951F 01 04 00     	ld bc,4
 490+ 9522 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 491+ 9524
 492+ 9524 11 07 8C     	ld de,Posicion_inicio
 493+ 9527 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 494+ 952A ED B0        	ldir 									; Vuelco (Frames_explosion).
 495+ 952C
 496+ 952C 11 F1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 497+ 952F 01 02 00     	ld bc,2
 498+ 9532 ED B0        	ldir
 499+ 9534
 500+ 9534 C9           	ret
 501+ 9535
 502+ 9535              ; ----------------------------------------------------------------------------------------------------------
 503+ 9535              ;
 504+ 9535              ;	1/8/24
 505+ 9535              ;
 506+ 9535
 507+ 9535              Parametros_de_bandeja_DRAW_a_caja
 508+ 9535
 509+ 9535 21 EA 8B     	ld hl,Bandeja_DRAW
 510+ 9538 01 0C 00     	ld bc,12
 511+ 953B ED B0        	ldir
 512+ 953D C9           	ret
 513+ 953E
 514+ 953E              ;---------------------------------------------------------------------------------------------------------------
 515+ 953E              ;
 516+ 953E              ;	13/11/24
 517+ 953E              ;
 518+ 953E              ;	INICIALIZA (Numero_parcial_de_entidades).
 519+ 953E              ;
 520+ 953E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 521+ 953E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 522+ 953E
 523+ 953E              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 524+ 953E              ;			- Actualiza (Numero_de_entidades).
 525+ 953E
 526+ 953E              ;	MODIFICA: A y B.
 527+ 953E
 528+ 953E
 529+ 953E              Inicializa_Numero_parcial_de_entidades
 530+ 953E
 531+ 953E 3A 32 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 532+ 9541 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 533+ 9543 38 0E        	jr c,1F
 534+ 9545 28 0C        	jr z,1F
 535+ 9547
 536+ 9547              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 537+ 9547              ; Actualizamos variables.
 538+ 9547
 539+ 9547 D6 06        	sub 6
 540+ 9549 32 32 8C     	ld (Numero_de_entidades),a
 541+ 954C 3E 06        	ld a,6
 542+ 954E 32 33 8C     	ld (Numero_parcial_de_entidades),a
 543+ 9551 47           	ld b,a
 544+ 9552 C9           	ret
 545+ 9553
 546+ 9553              ; El nº total de entidades no supera el nº de cajas de entidades.
 547+ 9553              ; (Numero_de_entidades)="0".
 548+ 9553
 549+ 9553 32 33 8C     1 ld (Numero_parcial_de_entidades),a
 550+ 9556 47           	ld b,a
 551+ 9557 AF           	xor a
 552+ 9558 32 32 8C     	ld (Numero_de_entidades),a
 553+ 955B C9           	ret
 554+ 955C
# file closed: Rutinas_de_inicio_y_niveles.asm
2286  955C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 955C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 955C              ;
   3+ 955C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 955C              ;
   5+ 955C              ; *****************************************************************************************************************************************************************************************
   6+ 955C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 955C
   8+ 955C 7C           calcula_tercio ld a,h
   9+ 955D E6 18        	and $18
  10+ 955F CB 2F        	sra a
  11+ 9561 CB 2F        	sra a
  12+ 9563 CB 2F        	sra a
  13+ 9565 C9           	ret
  14+ 9566
# file closed: calcula_tercio.asm
2287  9566              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9566              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9566              ;
   3+ 9566              ;
   4+ 9566              ;	CLS.
   5+ 9566              ;
   6+ 9566              ;	Limpia la pantalla y define sus atributos.
   7+ 9566              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9566              ;
   9+ 9566              ;	COLORES: 0 ..... NEGRO
  10+ 9566              ;    		 1 ..... AZUL
  11+ 9566              ; 			 2 ..... ROJO
  12+ 9566              ;			 3 ..... MAGENTA
  13+ 9566              ; 			 4 ..... VERDE
  14+ 9566              ; 			 5 ..... CIAN
  15+ 9566              ;			 6 ..... AMARILLO
  16+ 9566              ; 			 7 ..... BLANCO
  17+ 9566              ;
  18+ 9566              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9566              ;
  20+ 9566              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9566
  22+ 9566
  23+ 9566 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9569 11 01 40     	LD DE,$4001
  25+ 956C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 956F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9571 ED B0        	LDIR
  28+ 9573 01 FF 02     	LD BC,767
  29+ 9576 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9577 ED B0        	LDIR
  31+ 9579 C9           	ret
  32+ 957A
# file closed: Cls.asm
2288  957A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 957A              ; ------------------------------------------------------------------------
   2+ 957A              ;
   3+ 957A              ;	30/1/24
   4+ 957A              ;
   5+ 957A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 957A              ;	Fila superior "0", Columna izquierda "0".
   7+ 957A              ;
   8+ 957A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 957A              ;
  10+ 957A              ;	Modifica: A,BC y DE.
  11+ 957A
  12+ 957A              Genera_coordenadas
  13+ 957A
  14+ 957A 7D           	ld a,l
  15+ 957B E6 1F        	and $1f
  16+ 957D
  17+ 957D 32 EB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9580
  19+ 9580 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9581 FE 40        	cp $40
  21+ 9583 38 1C        	jr c,4F
  22+ 9585
  23+ 9585 CD 5C 95     	call calcula_tercio
  24+ 9588 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9589
  26+ 9589 1E 00        	ld e,0
  27+ 958B 7D           	ld a,l
  28+ 958C E6 E0        	and $e0
  29+ 958E 28 01        	jr z,1F
  30+ 9590 04           	inc b
  31+ 9591
  32+ 9591 04           1 inc b
  33+ 9592 05           	dec b
  34+ 9593 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9595              ;														; _ , salimos.
  36+ 9595 1C           3 inc e
  37+ 9596 D6 20        	sub 32
  38+ 9598 20 FB        	jr nz,3B
  39+ 959A 10 F5        	djnz 1B
  40+ 959C
  41+ 959C 7B           2 ld a,e
  42+ 959D 32 EC 8B     	ld (Coordenada_y),a
  43+ 95A0 C9           	ret
  44+ 95A1
  45+ 95A1 AF           4 xor a
  46+ 95A2 32 EC 8B     	ld (Coordenada_y),a
  47+ 95A5 C9           	ret
  48+ 95A6
# file closed: Genera_coordenadas.asm
2289  95A6              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 95A6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 95A6              ;
   3+ 95A6              ;	20/09/24
   4+ 95A6              ;
   5+ 95A6              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 95A6              ;   DE contiene Puntero_objeto.
   7+ 95A6              ;   IX contiene el Puntero de impresión.
   8+ 95A6
   9+ 95A6              Genera_datos_de_impresion
  10+ 95A6
  11+ 95A6 ED 73 39 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 95AA
  13+ 95AA 2A 5B 8C         ld hl,(Scanlines_album_SP)
  14+ 95AD
  15+ 95AD 3E 05            ld a,5
  16+ 95AF 85               add l
  17+ 95B0 6F               ld l,a
  18+ 95B1
  19+ 95B1 F9               ld sp,hl
  20+ 95B2 22 5B 8C         ld (Scanlines_album_SP),hl
  21+ 95B5
  22+ 95B5 21 00 00         ld hl,0
  23+ 95B8
  24+ 95B8 DD E5            push ix
  25+ 95BA 3B               dec sp
  26+ 95BB ED 7A            adc hl,sp
  27+ 95BD D5               push de
  28+ 95BE
  29+ 95BE              ; Recuperamos SP.
  30+ 95BE
  31+ 95BE ED 7B 39 8C      ld sp,(Stack)
  32+ 95C2
  33+ 95C2 E5               push hl
  34+ 95C3 F1               pop af
  35+ 95C4 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95C5
  37+ 95C5              ; Tenemos el encabezado listo.
  38+ 95C5              ; Preparamos registros para generar los scanlines.
  39+ 95C5
  40+ 95C5 DD E5            push ix
  41+ 95C7 E1               pop hl                                          ; 1er scanline en HL.
  42+ 95C8
  43+ 95C8 ED 5B 5B 8C      ld de,(Scanlines_album_SP)
  44+ 95CC
  45+ 95CC              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95CC              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95CC
  48+ 95CC 7C               ld a,h
  49+ 95CD FE 50            cp $50
  50+ 95CF 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 95D1
  52+ 95D1 20 05            jr nz,2F
  53+ 95D3
  54+ 95D3 7D               ld a,l
  55+ 95D4 FE E0            cp $e0
  56+ 95D6 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95D8
  58+ 95D8 7D           2 ld a,l
  59+ 95D9 FE C0            cp $c0
  60+ 95DB D2 71 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 95DE
  62+ 95DE              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 95DE
  64+ 95DE CD E6 9B         call NextScan
  65+ 95E1 EB               ex de,hl
  66+ 95E2
  67+ 95E2 73               ld (hl),e
  68+ 95E3 23               inc hl
  69+ 95E4 72               ld (hl),d
  70+ 95E5 23               inc hl
  71+ 95E6
  72+ 95E6 EB               ex de,hl
  73+ 95E7
  74+ 95E7 CD E6 9B         call NextScan
  75+ 95EA EB               ex de,hl
  76+ 95EB
  77+ 95EB 73               ld (hl),e
  78+ 95EC 23               inc hl
  79+ 95ED 72               ld (hl),d
  80+ 95EE 23               inc hl
  81+ 95EF
  82+ 95EF EB               ex de,hl
  83+ 95F0
  84+ 95F0 CD E6 9B         call NextScan
  85+ 95F3 EB               ex de,hl
  86+ 95F4
  87+ 95F4 73               ld (hl),e
  88+ 95F5 23               inc hl
  89+ 95F6 72               ld (hl),d
  90+ 95F7 23               inc hl
  91+ 95F8
  92+ 95F8 EB               ex de,hl
  93+ 95F9
  94+ 95F9 CD E6 9B         call NextScan
  95+ 95FC EB               ex de,hl
  96+ 95FD
  97+ 95FD 73               ld (hl),e
  98+ 95FE 23               inc hl
  99+ 95FF 72               ld (hl),d
 100+ 9600 23               inc hl
 101+ 9601
 102+ 9601 EB               ex de,hl
 103+ 9602
 104+ 9602 CD E6 9B         call NextScan
 105+ 9605 EB               ex de,hl
 106+ 9606
 107+ 9606 73               ld (hl),e
 108+ 9607 23               inc hl
 109+ 9608 72               ld (hl),d
 110+ 9609 23               inc hl
 111+ 960A
 112+ 960A EB               ex de,hl
 113+ 960B
 114+ 960B CD E6 9B         call NextScan
 115+ 960E EB               ex de,hl
 116+ 960F
 117+ 960F 73               ld (hl),e
 118+ 9610 23               inc hl
 119+ 9611 72               ld (hl),d
 120+ 9612 23               inc hl
 121+ 9613
 122+ 9613 EB               ex de,hl
 123+ 9614
 124+ 9614 CD E6 9B         call NextScan
 125+ 9617 EB               ex de,hl
 126+ 9618
 127+ 9618 73               ld (hl),e
 128+ 9619 23               inc hl
 129+ 961A 72               ld (hl),d
 130+ 961B 23               inc hl
 131+ 961C
 132+ 961C EB               ex de,hl
 133+ 961D
 134+ 961D CD E6 9B         call NextScan
 135+ 9620 EB               ex de,hl
 136+ 9621
 137+ 9621 73               ld (hl),e
 138+ 9622 23               inc hl
 139+ 9623 72               ld (hl),d
 140+ 9624 23               inc hl
 141+ 9625
 142+ 9625 EB               ex de,hl
 143+ 9626
 144+ 9626 CD E6 9B         call NextScan
 145+ 9629 EB               ex de,hl
 146+ 962A
 147+ 962A 73               ld (hl),e
 148+ 962B 23               inc hl
 149+ 962C 72               ld (hl),d
 150+ 962D 23               inc hl
 151+ 962E
 152+ 962E EB               ex de,hl
 153+ 962F
 154+ 962F CD E6 9B         call NextScan
 155+ 9632 EB               ex de,hl
 156+ 9633
 157+ 9633 73               ld (hl),e
 158+ 9634 23               inc hl
 159+ 9635 72               ld (hl),d
 160+ 9636 23               inc hl
 161+ 9637
 162+ 9637 EB               ex de,hl
 163+ 9638
 164+ 9638 CD E6 9B         call NextScan
 165+ 963B EB               ex de,hl
 166+ 963C
 167+ 963C 73               ld (hl),e
 168+ 963D 23               inc hl
 169+ 963E 72               ld (hl),d
 170+ 963F 23               inc hl
 171+ 9640
 172+ 9640 EB               ex de,hl
 173+ 9641
 174+ 9641 CD E6 9B         call NextScan
 175+ 9644 EB               ex de,hl
 176+ 9645
 177+ 9645 73               ld (hl),e
 178+ 9646 23               inc hl
 179+ 9647 72               ld (hl),d
 180+ 9648 23               inc hl
 181+ 9649
 182+ 9649 EB               ex de,hl
 183+ 964A
 184+ 964A CD E6 9B         call NextScan
 185+ 964D EB               ex de,hl
 186+ 964E
 187+ 964E 73               ld (hl),e
 188+ 964F 23               inc hl
 189+ 9650 72               ld (hl),d
 190+ 9651 23               inc hl
 191+ 9652
 192+ 9652 EB               ex de,hl
 193+ 9653
 194+ 9653 CD E6 9B         call NextScan
 195+ 9656 EB               ex de,hl
 196+ 9657
 197+ 9657 73               ld (hl),e
 198+ 9658 23               inc hl
 199+ 9659 72               ld (hl),d
 200+ 965A 23               inc hl
 201+ 965B
 202+ 965B EB               ex de,hl
 203+ 965C
 204+ 965C CD E6 9B         call NextScan
 205+ 965F EB               ex de,hl
 206+ 9660
 207+ 9660              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 9660              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 9660              ;   _ generar sus scanlines.
 210+ 9660
 211+ 9660              ;    ld (Puntero_de_impresion_disparo),de
 212+ 9660
 213+ 9660 73               ld (hl),e
 214+ 9661 23               inc hl
 215+ 9662 72               ld (hl),d
 216+ 9663 23               inc hl
 217+ 9664
 218+ 9664              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 9664
 220+ 9664 22 5B 8C         ld (Scanlines_album_SP),hl
 221+ 9667
 222+ 9667 EB               ex de,hl
 223+ 9668
 224+ 9668              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9668
 226+ 9668              ;    call NextScan
 227+ 9668              ;    call NextScan
 228+ 9668
 229+ 9668 22 66 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 966B
 231+ 966B              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 966B
 233+ 966B 08               ex af,af
 234+ 966C
 235+ 966C F5               push af
 236+ 966D E1               pop hl
 237+ 966E
 238+ 966E 36 10            ld (hl),16
 239+ 9670
 240+ 9670 C9               ret
 241+ 9671
 242+ 9671              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9671
 244+ 9671              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9671
 246+ 9671 3E 57            ld a,$57
 247+ 9673 94               sub h
 248+ 9674 47               ld b,a
 249+ 9675
 250+ 9675 3E DF            ld a,$df
 251+ 9677 BD               cp l
 252+ 9678 38 04            jr c,1F
 253+ 967A
 254+ 967A 3E 08            ld a,8
 255+ 967C 80               add b
 256+ 967D 47               ld b,a
 257+ 967E
 258+ 967E              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 967E              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 967E
 261+ 967E 48           1 ld c,b
 262+ 967F 0C               inc c
 263+ 9680
 264+ 9680 04               inc b
 265+ 9681 05               dec b
 266+ 9682 20 02            jr nz,3F
 267+ 9684
 268+ 9684 18 0B            jr 6F
 269+ 9686
 270+ 9686 CD E6 9B     3 call NextScan
 271+ 9689 EB               ex de,hl
 272+ 968A
 273+ 968A 73               ld (hl),e
 274+ 968B 23               inc hl
 275+ 968C 72               ld (hl),d
 276+ 968D 23               inc hl
 277+ 968E
 278+ 968E EB               ex de,hl
 279+ 968F 10 F5            djnz 3B
 280+ 9691
 281+ 9691 ED 53 5B 8C  6 ld (Scanlines_album_SP),de
 282+ 9695
 283+ 9695 08           5 ex af,af
 284+ 9696 F5               push af
 285+ 9697 E1               pop hl
 286+ 9698
 287+ 9698 71               ld (hl),c
 288+ 9699
 289+ 9699 C9               ret
 290+ 969A
# file closed: Genera_datos_de_impresion.asm
2290  969A              	include "Rutinas_de_pintado.asm"
# file opened: Rutinas_de_pintado.asm
   1+ 969A              ; -----------------------------------------------------------------------------
   2+ 969A              ;
   3+ 969A              ;   28/12/24
   4+ 969A              ;
   5+ 969A
   6+ 969A              ; Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
   7+ 969A              ; Scanlines_album_2 equ $811a	;    ($811a - $8232)
   8+ 969A              ; Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
   9+ 969A              ; Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  10+ 969A
  11+ 969A              Rutinas_de_pintado
  12+ 969A
  13+ 969A ED 73 39 8C      ld (Stack),sp
  14+ 969E
  15+ 969E EB               ex de,hl                                          ; HL se encuentra en el álbum de líneas.
  16+ 969F              ;                                                     ; DE se encuentra en los datos del sprite.
  17+ 969F 2C               inc l
  18+ 96A0 2C               inc l
  19+ 96A1
  20+ 96A1 46               ld b,(hl)                                         ; B contiene el nº de scanlines a imprimir.
  21+ 96A2
  22+ 96A2 2C               inc l
  23+ 96A3
  24+ 96A3 F9               ld sp,hl                                          ; El SP irá extrayendo scanlines en HL.
  25+ 96A4
  26+ 96A4              ;   Vamos a imprimir una entidad o Amadeus ???
  27+ 96A4
  28+ 96A4 7D               ld a,l
  29+ 96A5 FE 34            cp $34
  30+ 96A7 38 03            jr c,Printing_routines_selector
  31+ 96A9
  32+ 96A9 E1               pop hl
  33+ 96AA 18 0F            jr Pinta_rapido_3Chars                            ; Amadeus SIEMPRE se imprime completo, (3 Chars) y 16 scanlines.
  34+ 96AC
  35+ 96AC              ;   ----- ----- ----- ----- -----
  36+ 96AC
  37+ 96AC              Printing_routines_selector
  38+ 96AC
  39+ 96AC              ;   Seleccionaremos la rutina adecuada en función del nº de columna en el que nos encontremos.
  40+ 96AC              ;   Columnas (2-29) utilizaremos [Print_3Chars], Estas rutinas imiprimen el sprite completo, 3 chars.
  41+ 96AC
  42+ 96AC              ; En que columna nos encontramos?
  43+ 96AC
  44+ 96AC E1               pop hl                                            ; Dirección de pantalla del 1er scan del sprite
  45+ 96AD
  46+ 96AD 7D               ld a,l
  47+ 96AE E6 1F            and $1f
  48+ 96B0 FE 1E            cp 30
  49+ 96B2 D2 CD 97         jp nc,Desaparece_por_la_derecha
  50+ 96B5
  51+ 96B5              ; -----------------------------------------------------------------------------------------------------------------------------
  52+ 96B5
  53+ 96B5              Print_3Chars
  54+ 96B5
  55+ 96B5              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
  56+ 96B5              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
  57+ 96B5              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
  58+ 96B5
  59+ 96B5              ;   16 scanlines o menos ???
  60+ 96B5
  61+ 96B5 78               ld a,b
  62+ 96B6 FE 10            cp 16
  63+ 96B8 C2 B3 97         jp nz,Pinta_lento_3Chars                           ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  64+ 96BB
  65+ 96BB              ;   Rutinas:
  66+ 96BB
  67+ 96BB              Pinta_rapido_3Chars                                    ;   1520 t/states.
  68+ 96BB
  69+ 96BB 1A               ld a,(de)
  70+ 96BC AE               xor (hl)
  71+ 96BD 77               ld (hl),a
  72+ 96BE 2C               inc l
  73+ 96BF 1C               inc e
  74+ 96C0 1A               ld a,(de)
  75+ 96C1 AE               xor (hl)
  76+ 96C2 77               ld (hl),a
  77+ 96C3 2C               inc l
  78+ 96C4 1C               inc e
  79+ 96C5 1A               ld a,(de)
  80+ 96C6 AE               xor (hl)
  81+ 96C7 77               ld (hl),a
  82+ 96C8 1C               inc e
  83+ 96C9
  84+ 96C9 E1               pop hl
  85+ 96CA
  86+ 96CA 1A               ld a,(de)
  87+ 96CB AE               xor (hl)
  88+ 96CC 77               ld (hl),a
  89+ 96CD 2C               inc l
  90+ 96CE 1C               inc e
  91+ 96CF 1A               ld a,(de)
  92+ 96D0 AE               xor (hl)
  93+ 96D1 77               ld (hl),a
  94+ 96D2 2C               inc l
  95+ 96D3 1C               inc e
  96+ 96D4 1A               ld a,(de)
  97+ 96D5 AE               xor (hl)
  98+ 96D6 77               ld (hl),a
  99+ 96D7 1C               inc e
 100+ 96D8
 101+ 96D8 E1               pop hl
 102+ 96D9
 103+ 96D9 1A               ld a,(de)
 104+ 96DA AE               xor (hl)
 105+ 96DB 77               ld (hl),a
 106+ 96DC 2C               inc l
 107+ 96DD 1C               inc e
 108+ 96DE 1A               ld a,(de)
 109+ 96DF AE               xor (hl)
 110+ 96E0 77               ld (hl),a
 111+ 96E1 2C               inc l
 112+ 96E2 1C               inc e
 113+ 96E3 1A               ld a,(de)
 114+ 96E4 AE               xor (hl)
 115+ 96E5 77               ld (hl),a
 116+ 96E6 1C               inc e
 117+ 96E7
 118+ 96E7 E1               pop hl
 119+ 96E8
 120+ 96E8 1A               ld a,(de)
 121+ 96E9 AE               xor (hl)
 122+ 96EA 77               ld (hl),a
 123+ 96EB 2C               inc l
 124+ 96EC 1C               inc e
 125+ 96ED 1A               ld a,(de)
 126+ 96EE AE               xor (hl)
 127+ 96EF 77               ld (hl),a
 128+ 96F0 2C               inc l
 129+ 96F1 1C               inc e
 130+ 96F2 1A               ld a,(de)
 131+ 96F3 AE               xor (hl)
 132+ 96F4 77               ld (hl),a
 133+ 96F5 1C               inc e
 134+ 96F6
 135+ 96F6 E1               pop hl
 136+ 96F7
 137+ 96F7 1A               ld a,(de)
 138+ 96F8 AE               xor (hl)
 139+ 96F9 77               ld (hl),a
 140+ 96FA 2C               inc l
 141+ 96FB 1C               inc e
 142+ 96FC 1A               ld a,(de)
 143+ 96FD AE               xor (hl)
 144+ 96FE 77               ld (hl),a
 145+ 96FF 2C               inc l
 146+ 9700 1C               inc e
 147+ 9701 1A               ld a,(de)
 148+ 9702 AE               xor (hl)
 149+ 9703 77               ld (hl),a
 150+ 9704 1C               inc e
 151+ 9705
 152+ 9705 E1               pop hl
 153+ 9706
 154+ 9706 1A               ld a,(de)
 155+ 9707 AE               xor (hl)
 156+ 9708 77               ld (hl),a
 157+ 9709 2C               inc l
 158+ 970A 1C               inc e
 159+ 970B 1A               ld a,(de)
 160+ 970C AE               xor (hl)
 161+ 970D 77               ld (hl),a
 162+ 970E 2C               inc l
 163+ 970F 1C               inc e
 164+ 9710 1A               ld a,(de)
 165+ 9711 AE               xor (hl)
 166+ 9712 77               ld (hl),a
 167+ 9713 1C               inc e
 168+ 9714
 169+ 9714 E1               pop hl
 170+ 9715
 171+ 9715 1A               ld a,(de)
 172+ 9716 AE               xor (hl)
 173+ 9717 77               ld (hl),a
 174+ 9718 2C               inc l
 175+ 9719 1C               inc e
 176+ 971A 1A               ld a,(de)
 177+ 971B AE               xor (hl)
 178+ 971C 77               ld (hl),a
 179+ 971D 2C               inc l
 180+ 971E 1C               inc e
 181+ 971F 1A               ld a,(de)
 182+ 9720 AE               xor (hl)
 183+ 9721 77               ld (hl),a
 184+ 9722 1C               inc e
 185+ 9723
 186+ 9723 E1               pop hl
 187+ 9724
 188+ 9724 1A               ld a,(de)
 189+ 9725 AE               xor (hl)
 190+ 9726 77               ld (hl),a
 191+ 9727 2C               inc l
 192+ 9728 1C               inc e
 193+ 9729 1A               ld a,(de)
 194+ 972A AE               xor (hl)
 195+ 972B 77               ld (hl),a
 196+ 972C 2C               inc l
 197+ 972D 1C               inc e
 198+ 972E 1A               ld a,(de)
 199+ 972F AE               xor (hl)
 200+ 9730 77               ld (hl),a
 201+ 9731 1C               inc e
 202+ 9732
 203+ 9732 E1               pop hl
 204+ 9733
 205+ 9733 1A               ld a,(de)
 206+ 9734 AE               xor (hl)
 207+ 9735 77               ld (hl),a
 208+ 9736 2C               inc l
 209+ 9737 1C               inc e
 210+ 9738 1A               ld a,(de)
 211+ 9739 AE               xor (hl)
 212+ 973A 77               ld (hl),a
 213+ 973B 2C               inc l
 214+ 973C 1C               inc e
 215+ 973D 1A               ld a,(de)
 216+ 973E AE               xor (hl)
 217+ 973F 77               ld (hl),a
 218+ 9740 1C               inc e
 219+ 9741
 220+ 9741 E1               pop hl
 221+ 9742
 222+ 9742 1A               ld a,(de)
 223+ 9743 AE               xor (hl)
 224+ 9744 77               ld (hl),a
 225+ 9745 2C               inc l
 226+ 9746 1C               inc e
 227+ 9747 1A               ld a,(de)
 228+ 9748 AE               xor (hl)
 229+ 9749 77               ld (hl),a
 230+ 974A 2C               inc l
 231+ 974B 1C               inc e
 232+ 974C 1A               ld a,(de)
 233+ 974D AE               xor (hl)
 234+ 974E 77               ld (hl),a
 235+ 974F 1C               inc e
 236+ 9750
 237+ 9750 E1               pop hl
 238+ 9751
 239+ 9751 1A               ld a,(de)
 240+ 9752 AE               xor (hl)
 241+ 9753 77               ld (hl),a
 242+ 9754 2C               inc l
 243+ 9755 1C               inc e
 244+ 9756 1A               ld a,(de)
 245+ 9757 AE               xor (hl)
 246+ 9758 77               ld (hl),a
 247+ 9759 2C               inc l
 248+ 975A 1C               inc e
 249+ 975B 1A               ld a,(de)
 250+ 975C AE               xor (hl)
 251+ 975D 77               ld (hl),a
 252+ 975E 1C               inc e
 253+ 975F
 254+ 975F E1               pop hl
 255+ 9760
 256+ 9760 1A               ld a,(de)
 257+ 9761 AE               xor (hl)
 258+ 9762 77               ld (hl),a
 259+ 9763 2C               inc l
 260+ 9764 1C               inc e
 261+ 9765 1A               ld a,(de)
 262+ 9766 AE               xor (hl)
 263+ 9767 77               ld (hl),a
 264+ 9768 2C               inc l
 265+ 9769 1C               inc e
 266+ 976A 1A               ld a,(de)
 267+ 976B AE               xor (hl)
 268+ 976C 77               ld (hl),a
 269+ 976D 1C               inc e
 270+ 976E
 271+ 976E E1               pop hl
 272+ 976F
 273+ 976F 1A               ld a,(de)
 274+ 9770 AE               xor (hl)
 275+ 9771 77               ld (hl),a
 276+ 9772 2C               inc l
 277+ 9773 1C               inc e
 278+ 9774 1A               ld a,(de)
 279+ 9775 AE               xor (hl)
 280+ 9776 77               ld (hl),a
 281+ 9777 2C               inc l
 282+ 9778 1C               inc e
 283+ 9779 1A               ld a,(de)
 284+ 977A AE               xor (hl)
 285+ 977B 77               ld (hl),a
 286+ 977C 1C               inc e
 287+ 977D
 288+ 977D E1               pop hl
 289+ 977E
 290+ 977E 1A               ld a,(de)
 291+ 977F AE               xor (hl)
 292+ 9780 77               ld (hl),a
 293+ 9781 2C               inc l
 294+ 9782 1C               inc e
 295+ 9783 1A               ld a,(de)
 296+ 9784 AE               xor (hl)
 297+ 9785 77               ld (hl),a
 298+ 9786 2C               inc l
 299+ 9787 1C               inc e
 300+ 9788 1A               ld a,(de)
 301+ 9789 AE               xor (hl)
 302+ 978A 77               ld (hl),a
 303+ 978B 1C               inc e
 304+ 978C
 305+ 978C E1               pop hl
 306+ 978D
 307+ 978D 1A               ld a,(de)
 308+ 978E AE               xor (hl)
 309+ 978F 77               ld (hl),a
 310+ 9790 2C               inc l
 311+ 9791 1C               inc e
 312+ 9792 1A               ld a,(de)
 313+ 9793 AE               xor (hl)
 314+ 9794 77               ld (hl),a
 315+ 9795 2C               inc l
 316+ 9796 1C               inc e
 317+ 9797 1A               ld a,(de)
 318+ 9798 AE               xor (hl)
 319+ 9799 77               ld (hl),a
 320+ 979A 1C               inc e
 321+ 979B
 322+ 979B E1               pop hl
 323+ 979C
 324+ 979C 1A               ld a,(de)
 325+ 979D AE               xor (hl)
 326+ 979E 77               ld (hl),a
 327+ 979F 2C               inc l
 328+ 97A0 1C               inc e
 329+ 97A1 1A               ld a,(de)
 330+ 97A2 AE               xor (hl)
 331+ 97A3 77               ld (hl),a
 332+ 97A4 2C               inc l
 333+ 97A5 1C               inc e
 334+ 97A6 1A               ld a,(de)
 335+ 97A7 AE               xor (hl)
 336+ 97A8 77               ld (hl),a
 337+ 97A9 1C               inc e
 338+ 97AA
 339+ 97AA ED 73 5B 8C      ld (Scanlines_album_SP),sp
 340+ 97AE ED 7B 39 8C      ld sp,(Stack)
 341+ 97B2 C9               ret
 342+ 97B3
 343+ 97B3              Pinta_lento_3Chars
 344+ 97B3
 345+ 97B3 E1           1 pop hl
 346+ 97B4
 347+ 97B4 1A               ld a,(de)
 348+ 97B5 AE               xor (hl)
 349+ 97B6 77               ld (hl),a
 350+ 97B7 2C               inc l
 351+ 97B8 1C               inc e
 352+ 97B9 1A               ld a,(de)
 353+ 97BA AE               xor (hl)
 354+ 97BB 77               ld (hl),a
 355+ 97BC 2C               inc l
 356+ 97BD 1C               inc e
 357+ 97BE 1A               ld a,(de)
 358+ 97BF AE               xor (hl)
 359+ 97C0 77               ld (hl),a
 360+ 97C1 1C               inc e
 361+ 97C2
 362+ 97C2 10 EF            djnz 1B
 363+ 97C4
 364+ 97C4 ED 73 5B 8C      ld (Scanlines_album_SP),sp
 365+ 97C8 ED 7B 39 8C      ld sp,(Stack)
 366+ 97CC C9               ret
 367+ 97CD
 368+ 97CD              ; -----------------------------------------------------------------------
 369+ 97CD              ; -----------------------------------------------------------------------
 370+ 97CD              ; -----------------------------------------------------------------------
 371+ 97CD
 372+ 97CD
 373+ 97CD              Desaparece_por_la_derecha
 374+ 97CD
 375+ 97CD              ;   1 o 2 Chars ???
 376+ 97CD
 377+ 97CD C2 A4 98         jp nz,Print_1Char_right                                 ; "NZ" indica Columna "$1f".
 378+ 97D0
 379+ 97D0              Print_2Chars_right
 380+ 97D0
 381+ 97D0              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 382+ 97D0              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 383+ 97D0              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 384+ 97D0
 385+ 97D0              ;   16 scanlines o menos ???
 386+ 97D0
 387+ 97D0 78               ld a,b
 388+ 97D1 FE 10            cp 16
 389+ 97D3 C2 8E 98         jp nz,Pinta_lento_2Chars_right                         ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 390+ 97D6
 391+ 97D6              ;   Rutinas:
 392+ 97D6
 393+ 97D6              Pinta_rapido_2Chars_right                                  ;   1520 t/states.
 394+ 97D6
 395+ 97D6 1A               ld a,(de)
 396+ 97D7 AE               xor (hl)
 397+ 97D8 77               ld (hl),a
 398+ 97D9 2C               inc l
 399+ 97DA 1C               inc e
 400+ 97DB 1A               ld a,(de)
 401+ 97DC AE               xor (hl)
 402+ 97DD 77               ld (hl),a
 403+ 97DE 1C               inc e
 404+ 97DF 1C               inc e
 405+ 97E0
 406+ 97E0 E1               pop hl
 407+ 97E1
 408+ 97E1 1A               ld a,(de)
 409+ 97E2 AE               xor (hl)
 410+ 97E3 77               ld (hl),a
 411+ 97E4 2C               inc l
 412+ 97E5 1C               inc e
 413+ 97E6 1A               ld a,(de)
 414+ 97E7 AE               xor (hl)
 415+ 97E8 77               ld (hl),a
 416+ 97E9 1C               inc e
 417+ 97EA 1C               inc e
 418+ 97EB
 419+ 97EB E1               pop hl
 420+ 97EC
 421+ 97EC 1A               ld a,(de)
 422+ 97ED AE               xor (hl)
 423+ 97EE 77               ld (hl),a
 424+ 97EF 2C               inc l
 425+ 97F0 1C               inc e
 426+ 97F1 1A               ld a,(de)
 427+ 97F2 AE               xor (hl)
 428+ 97F3 77               ld (hl),a
 429+ 97F4 1C               inc e
 430+ 97F5 1C               inc e
 431+ 97F6
 432+ 97F6 E1               pop hl
 433+ 97F7
 434+ 97F7 1A               ld a,(de)
 435+ 97F8 AE               xor (hl)
 436+ 97F9 77               ld (hl),a
 437+ 97FA 2C               inc l
 438+ 97FB 1C               inc e
 439+ 97FC 1A               ld a,(de)
 440+ 97FD AE               xor (hl)
 441+ 97FE 77               ld (hl),a
 442+ 97FF 1C               inc e
 443+ 9800 1C               inc e
 444+ 9801
 445+ 9801 E1               pop hl
 446+ 9802
 447+ 9802 1A               ld a,(de)
 448+ 9803 AE               xor (hl)
 449+ 9804 77               ld (hl),a
 450+ 9805 2C               inc l
 451+ 9806 1C               inc e
 452+ 9807 1A               ld a,(de)
 453+ 9808 AE               xor (hl)
 454+ 9809 77               ld (hl),a
 455+ 980A 1C               inc e
 456+ 980B 1C               inc e
 457+ 980C
 458+ 980C E1               pop hl
 459+ 980D
 460+ 980D 1A               ld a,(de)
 461+ 980E AE               xor (hl)
 462+ 980F 77               ld (hl),a
 463+ 9810 2C               inc l
 464+ 9811 1C               inc e
 465+ 9812 1A               ld a,(de)
 466+ 9813 AE               xor (hl)
 467+ 9814 77               ld (hl),a
 468+ 9815 1C               inc e
 469+ 9816 1C               inc e
 470+ 9817
 471+ 9817 E1               pop hl
 472+ 9818
 473+ 9818 1A               ld a,(de)
 474+ 9819 AE               xor (hl)
 475+ 981A 77               ld (hl),a
 476+ 981B 2C               inc l
 477+ 981C 1C               inc e
 478+ 981D 1A               ld a,(de)
 479+ 981E AE               xor (hl)
 480+ 981F 77               ld (hl),a
 481+ 9820 1C               inc e
 482+ 9821 1C               inc e
 483+ 9822
 484+ 9822 E1               pop hl
 485+ 9823
 486+ 9823 1A               ld a,(de)
 487+ 9824 AE               xor (hl)
 488+ 9825 77               ld (hl),a
 489+ 9826 2C               inc l
 490+ 9827 1C               inc e
 491+ 9828 1A               ld a,(de)
 492+ 9829 AE               xor (hl)
 493+ 982A 77               ld (hl),a
 494+ 982B 1C               inc e
 495+ 982C 1C               inc e
 496+ 982D
 497+ 982D E1               pop hl
 498+ 982E
 499+ 982E 1A               ld a,(de)
 500+ 982F AE               xor (hl)
 501+ 9830 77               ld (hl),a
 502+ 9831 2C               inc l
 503+ 9832 1C               inc e
 504+ 9833 1A               ld a,(de)
 505+ 9834 AE               xor (hl)
 506+ 9835 77               ld (hl),a
 507+ 9836 1C               inc e
 508+ 9837 1C               inc e
 509+ 9838
 510+ 9838 E1               pop hl
 511+ 9839
 512+ 9839 1A               ld a,(de)
 513+ 983A AE               xor (hl)
 514+ 983B 77               ld (hl),a
 515+ 983C 2C               inc l
 516+ 983D 1C               inc e
 517+ 983E 1A               ld a,(de)
 518+ 983F AE               xor (hl)
 519+ 9840 77               ld (hl),a
 520+ 9841 1C               inc e
 521+ 9842 1C               inc e
 522+ 9843
 523+ 9843 E1               pop hl
 524+ 9844
 525+ 9844 1A               ld a,(de)
 526+ 9845 AE               xor (hl)
 527+ 9846 77               ld (hl),a
 528+ 9847 2C               inc l
 529+ 9848 1C               inc e
 530+ 9849 1A               ld a,(de)
 531+ 984A AE               xor (hl)
 532+ 984B 77               ld (hl),a
 533+ 984C 1C               inc e
 534+ 984D 1C               inc e
 535+ 984E
 536+ 984E E1               pop hl
 537+ 984F
 538+ 984F 1A               ld a,(de)
 539+ 9850 AE               xor (hl)
 540+ 9851 77               ld (hl),a
 541+ 9852 2C               inc l
 542+ 9853 1C               inc e
 543+ 9854 1A               ld a,(de)
 544+ 9855 AE               xor (hl)
 545+ 9856 77               ld (hl),a
 546+ 9857 1C               inc e
 547+ 9858 1C               inc e
 548+ 9859
 549+ 9859 E1               pop hl
 550+ 985A
 551+ 985A 1A               ld a,(de)
 552+ 985B AE               xor (hl)
 553+ 985C 77               ld (hl),a
 554+ 985D 2C               inc l
 555+ 985E 1C               inc e
 556+ 985F 1A               ld a,(de)
 557+ 9860 AE               xor (hl)
 558+ 9861 77               ld (hl),a
 559+ 9862 1C               inc e
 560+ 9863 1C               inc e
 561+ 9864
 562+ 9864 E1               pop hl
 563+ 9865
 564+ 9865 1A               ld a,(de)
 565+ 9866 AE               xor (hl)
 566+ 9867 77               ld (hl),a
 567+ 9868 2C               inc l
 568+ 9869 1C               inc e
 569+ 986A 1A               ld a,(de)
 570+ 986B AE               xor (hl)
 571+ 986C 77               ld (hl),a
 572+ 986D 1C               inc e
 573+ 986E 1C               inc e
 574+ 986F
 575+ 986F E1               pop hl
 576+ 9870
 577+ 9870 1A               ld a,(de)
 578+ 9871 AE               xor (hl)
 579+ 9872 77               ld (hl),a
 580+ 9873 2C               inc l
 581+ 9874 1C               inc e
 582+ 9875 1A               ld a,(de)
 583+ 9876 AE               xor (hl)
 584+ 9877 77               ld (hl),a
 585+ 9878 1C               inc e
 586+ 9879 1C               inc e
 587+ 987A
 588+ 987A E1               pop hl
 589+ 987B
 590+ 987B 1A               ld a,(de)
 591+ 987C AE               xor (hl)
 592+ 987D 77               ld (hl),a
 593+ 987E 2C               inc l
 594+ 987F 1C               inc e
 595+ 9880 1A               ld a,(de)
 596+ 9881 AE               xor (hl)
 597+ 9882 77               ld (hl),a
 598+ 9883 1C               inc e
 599+ 9884 1C               inc e
 600+ 9885
 601+ 9885 ED 73 5B 8C      ld (Scanlines_album_SP),sp
 602+ 9889 ED 7B 39 8C      ld sp,(Stack)
 603+ 988D C9               ret
 604+ 988E
 605+ 988E              Pinta_lento_2Chars_right
 606+ 988E
 607+ 988E E1           2 pop hl
 608+ 988F
 609+ 988F 1A               ld a,(de)
 610+ 9890 AE               xor (hl)
 611+ 9891 77               ld (hl),a
 612+ 9892 2C               inc l
 613+ 9893 1C               inc e
 614+ 9894 1A               ld a,(de)
 615+ 9895 AE               xor (hl)
 616+ 9896 77               ld (hl),a
 617+ 9897 1C               inc e
 618+ 9898 1C               inc e
 619+ 9899
 620+ 9899 10 F3            djnz 2B
 621+ 989B
 622+ 989B ED 73 5B 8C      ld (Scanlines_album_SP),sp
 623+ 989F ED 7B 39 8C      ld sp,(Stack)
 624+ 98A3 C9               ret
 625+ 98A4
 626+ 98A4              ; -----------------------------------------------------------------------
 627+ 98A4              ; -----------------------------------------------------------------------
 628+ 98A4
 629+ 98A4              Print_1Char_right
 630+ 98A4
 631+ 98A4
 632+ 98A4              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 633+ 98A4              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 634+ 98A4              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 635+ 98A4
 636+ 98A4              ;   16 scanlines o menos ???
 637+ 98A4
 638+ 98A4 78               ld a,b
 639+ 98A5 FE 10            cp 16
 640+ 98A7 C2 22 99         jp nz,Pinta_lento_1Char_right                          ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 641+ 98AA
 642+ 98AA              ;   Rutinas:
 643+ 98AA
 644+ 98AA              Pinta_rapido_1Char_right                                  ;   1520 t/states.
 645+ 98AA
 646+ 98AA 1A               ld a,(de)
 647+ 98AB AE               xor (hl)
 648+ 98AC 77               ld (hl),a
 649+ 98AD 1C               inc e
 650+ 98AE 1C               inc e
 651+ 98AF 1C               inc e
 652+ 98B0
 653+ 98B0 E1               pop hl
 654+ 98B1
 655+ 98B1 1A               ld a,(de)
 656+ 98B2 AE               xor (hl)
 657+ 98B3 77               ld (hl),a
 658+ 98B4 1C               inc e
 659+ 98B5 1C               inc e
 660+ 98B6 1C               inc e
 661+ 98B7
 662+ 98B7 E1               pop hl
 663+ 98B8
 664+ 98B8 1A               ld a,(de)
 665+ 98B9 AE               xor (hl)
 666+ 98BA 77               ld (hl),a
 667+ 98BB 1C               inc e
 668+ 98BC 1C               inc e
 669+ 98BD 1C               inc e
 670+ 98BE
 671+ 98BE E1               pop hl
 672+ 98BF
 673+ 98BF 1A               ld a,(de)
 674+ 98C0 AE               xor (hl)
 675+ 98C1 77               ld (hl),a
 676+ 98C2 1C               inc e
 677+ 98C3 1C               inc e
 678+ 98C4 1C               inc e
 679+ 98C5
 680+ 98C5 E1               pop hl
 681+ 98C6
 682+ 98C6 1A               ld a,(de)
 683+ 98C7 AE               xor (hl)
 684+ 98C8 77               ld (hl),a
 685+ 98C9 1C               inc e
 686+ 98CA 1C               inc e
 687+ 98CB 1C               inc e
 688+ 98CC
 689+ 98CC E1               pop hl
 690+ 98CD
 691+ 98CD 1A               ld a,(de)
 692+ 98CE AE               xor (hl)
 693+ 98CF 77               ld (hl),a
 694+ 98D0 1C               inc e
 695+ 98D1 1C               inc e
 696+ 98D2 1C               inc e
 697+ 98D3
 698+ 98D3 E1               pop hl
 699+ 98D4
 700+ 98D4 1A               ld a,(de)
 701+ 98D5 AE               xor (hl)
 702+ 98D6 77               ld (hl),a
 703+ 98D7 1C               inc e
 704+ 98D8 1C               inc e
 705+ 98D9 1C               inc e
 706+ 98DA
 707+ 98DA E1               pop hl
 708+ 98DB
 709+ 98DB 1A               ld a,(de)
 710+ 98DC AE               xor (hl)
 711+ 98DD 77               ld (hl),a
 712+ 98DE 1C               inc e
 713+ 98DF 1C               inc e
 714+ 98E0 1C               inc e
 715+ 98E1
 716+ 98E1 E1               pop hl
 717+ 98E2
 718+ 98E2 1A               ld a,(de)
 719+ 98E3 AE               xor (hl)
 720+ 98E4 77               ld (hl),a
 721+ 98E5 1C               inc e
 722+ 98E6 1C               inc e
 723+ 98E7 1C               inc e
 724+ 98E8
 725+ 98E8 E1               pop hl
 726+ 98E9
 727+ 98E9 1A               ld a,(de)
 728+ 98EA AE               xor (hl)
 729+ 98EB 77               ld (hl),a
 730+ 98EC 1C               inc e
 731+ 98ED 1C               inc e
 732+ 98EE 1C               inc e
 733+ 98EF
 734+ 98EF E1               pop hl
 735+ 98F0
 736+ 98F0 1A               ld a,(de)
 737+ 98F1 AE               xor (hl)
 738+ 98F2 77               ld (hl),a
 739+ 98F3 1C               inc e
 740+ 98F4 1C               inc e
 741+ 98F5 1C               inc e
 742+ 98F6
 743+ 98F6 E1               pop hl
 744+ 98F7
 745+ 98F7 1A               ld a,(de)
 746+ 98F8 AE               xor (hl)
 747+ 98F9 77               ld (hl),a
 748+ 98FA 1C               inc e
 749+ 98FB 1C               inc e
 750+ 98FC 1C               inc e
 751+ 98FD
 752+ 98FD E1               pop hl
 753+ 98FE
 754+ 98FE 1A               ld a,(de)
 755+ 98FF AE               xor (hl)
 756+ 9900 77               ld (hl),a
 757+ 9901 1C               inc e
 758+ 9902 1C               inc e
 759+ 9903 1C               inc e
 760+ 9904
 761+ 9904 E1               pop hl
 762+ 9905
 763+ 9905 1A               ld a,(de)
 764+ 9906 AE               xor (hl)
 765+ 9907 77               ld (hl),a
 766+ 9908 1C               inc e
 767+ 9909 1C               inc e
 768+ 990A 1C               inc e
 769+ 990B
 770+ 990B E1               pop hl
 771+ 990C
 772+ 990C 1A               ld a,(de)
 773+ 990D AE               xor (hl)
 774+ 990E 77               ld (hl),a
 775+ 990F 1C               inc e
 776+ 9910 1C               inc e
 777+ 9911 1C               inc e
 778+ 9912
 779+ 9912 E1               pop hl
 780+ 9913
 781+ 9913 1A               ld a,(de)
 782+ 9914 AE               xor (hl)
 783+ 9915 77               ld (hl),a
 784+ 9916 1C               inc e
 785+ 9917 1C               inc e
 786+ 9918 1C               inc e
 787+ 9919
 788+ 9919 ED 73 5B 8C      ld (Scanlines_album_SP),sp
 789+ 991D ED 7B 39 8C      ld sp,(Stack)
 790+ 9921 C9               ret
 791+ 9922
 792+ 9922              Pinta_lento_1Char_right
 793+ 9922
 794+ 9922 E1           3 pop hl
 795+ 9923
 796+ 9923 1A               ld a,(de)
 797+ 9924 AE               xor (hl)
 798+ 9925 77               ld (hl),a
 799+ 9926 1C               inc e
 800+ 9927 1C               inc e
 801+ 9928 1C               inc e
 802+ 9929
 803+ 9929 10 F7            djnz 3B
 804+ 992B
 805+ 992B ED 73 5B 8C      ld (Scanlines_album_SP),sp
 806+ 992F ED 7B 39 8C      ld sp,(Stack)
 807+ 9933 C9               ret
# file closed: Rutinas_de_pintado.asm
2291  9934              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9934              ; ******************************************************************************************************************************************************************************************
   2+ 9934              ;
   3+ 9934              ; 26/06/23
   4+ 9934              ;
   5+ 9934              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9934
   7+ 9934              Draw
   8+ 9934
   9+ 9934 CD DA 9B     	call Prepara_draw
  10+ 9937 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9938 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9939 28 05        	jr z,2F
  13+ 993B
  14+ 993B 3A 09 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 993E 18 0C        	jr 1F
  16+ 9940
  17+ 9940 2A 07 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9943 22 FA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9946 CD D2 9A     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9949              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9949
  22+ 9949 CD 73 A0     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 994C
  24+ 994C 3A F7 8B     1 ld a,(Ctrl_0)
  25+ 994F CB 6F        	bit 5,a
  26+ 9951 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9953
  28+ 9953 CD 68 99     	call Comprueba_limite_horizontal
  29+ 9956 CD F8 99     	call Comprueba_limite_vertical
  30+ 9959
  31+ 9959              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9959              ; -----------------------
  33+ 9959              ; -----------------------
  34+ 9959              ; -----------------------
  35+ 9959
  36+ 9959 CD 4E 9B     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 995C CD 85 9B     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 995F
  39+ 995F 3A F7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9962 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9964 32 F7 8B     	ld (Ctrl_0),a
  42+ 9967
  43+ 9967 C9           	ret
  44+ 9968
  45+ 9968              ; *******************************************************************************************************************************************************************************************
  46+ 9968              ;	21/01/23
  47+ 9968              ;
  48+ 9968              ; 	Comprueba_limite_horizontal.
  49+ 9968              ;
  50+ 9968              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9968              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9968              ;
  53+ 9968              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9968              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9968              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9968              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9968
  58+ 9968
  59+ 9968
  60+ 9968 3A F7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 996B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 996D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 996F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9971 32 F7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9974 18 09            jr 6F
  66+ 9976 CB 5F        1 bit 3,a
  67+ 9978 28 0A            jr z,2F
  68+ 997A E6 F7            and $f7
  69+ 997C 32 F7 8B         ld (Ctrl_0),a
  70+ 997F CD D2 9A     6 call Inicializacion
  71+ 9982 18 5B            jr 5F
  72+ 9984 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9985
  74+ 9985              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9985              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9985
  77+ 9985 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9986 2A 0B 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9989 CD 5C 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 998C 67           	ld h,a
  81+ 998D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 998E CD 5C 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9991 67           	ld h,a
  84+ 9992 A7           	and a
  85+ 9993 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9995 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9996 3A 09 8C     	ld a,(Cuad_objeto)
  88+ 9999 FE 02        	cp 2
  89+ 999B 38 1E        	jr c,3F
  90+ 999D 28 1C        	jr z,3F
  91+ 999F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 99A0 28 23            jr z,7F
  93+ 99A2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 99A4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 99A6 E1           	pop hl
  96+ 99A7
  97+ 99A7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 99A7              ; _para indicar con E="2" en caso necesario.
  99+ 99A7
 100+ 99A7 E5               push hl
 101+ 99A8 C5               push bc
 102+ 99A9 CD 5C 95     	call calcula_tercio
 103+ 99AC FE 01        	cp 1
 104+ 99AE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 99B0 CD E0 99         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 99B3 28 26            jr z,9F
 107+ 99B5 38 24            jr c,9F
 108+ 99B7 1E 00        11 ld e,0
 109+ 99B9 18 22            jr 8F
 110+ 99BB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 99BC 28 07        	jr z, 7F
 112+ 99BE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 99C0 1E 00         	ld e,0
 114+ 99C2 E1           	pop hl
 115+ 99C3 18 04        	jr 4F
 116+ 99C5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 99C7 18 15            jr 10F
 118+ 99C9
 119+ 99C9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 99C9              ; _para indicar con E="2" en caso necesario.
 121+ 99C9
 122+ 99C9 E5           4 push hl
 123+ 99CA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 99CB CD 5C 95     	call calcula_tercio
 125+ 99CE FE 01        	cp 1
 126+ 99D0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 99D2 CD E0 99         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 99D5 28 04            jr z,9F
 129+ 99D7 30 02            jr nc,9F
 130+ 99D9 18 02        	jr 8F
 131+ 99DB 1E 02        9 ld e,2
 132+ 99DD C1           8 pop bc
 133+ 99DE E1           10 pop hl
 134+ 99DF C9           5 ret
 135+ 99E0
 136+ 99E0              ; --------------------
 137+ 99E0              ;
 138+ 99E0              ; 25/08/22
 139+ 99E0
 140+ 99E0 CD 5C 95     Comprueba_centro call calcula_tercio
 141+ 99E3 67               ld h,a
 142+ 99E4 08           	ex af,af
 143+ 99E5 FE 02        	cp 2
 144+ 99E7 38 07        	jr c,1F
 145+ 99E9 28 05        	jr z,1F
 146+ 99EB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 99EE 18 03        	jr 2F
 148+ 99F0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 99F3 08           2 ex af,af
 150+ 99F4 A7               and a
 151+ 99F5 ED 42            sbc hl,bc
 152+ 99F7 C9               ret
 153+ 99F8
 154+ 99F8              ; *********************************************************************************************************************************************************************************************
 155+ 99F8              ;
 156+ 99F8              ;   16/8/22
 157+ 99F8              ;
 158+ 99F8              ;	Comprueba_limite_vertical
 159+ 99F8              ;
 160+ 99F8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 99F8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 99F8              ;
 163+ 99F8
 164+ 99F8 2A FA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 99FB 7D           	ld a,l
 166+ 99FC E6 1F        	and $1F
 167+ 99FE 57           	ld d,a
 168+ 99FF 3A 0D 8C     	ld a,(Limite_vertical)
 169+ 9A02 BA           	cp d 											; Límite - Posición.
 170+ 9A03 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9A04 3A 09 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9A07 CB 47        	bit 0,a
 173+ 9A09 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9A0B
 175+ 9A0B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9A0B
 177+ 9A0B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9A0C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9A0E
 180+ 9A0E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9A0E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9A0E
 183+ 9A0E 3A EB 8B         ld a,(Coordenada_X)
 184+ 9A11 16 0F            ld d,Centro_izquierda
 185+ 9A13 A7               and a
 186+ 9A14 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9A15 28 1E            jr z,3F
 188+ 9A17 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9A19              ;                                                    ; _salimos sin modificar nada.
 190+ 9A19 18 0E            jr 2F
 191+ 9A1B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9A1C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9A1E
 194+ 9A1E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9A1E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9A1E
 197+ 9A1E 3A EB 8B         ld a,(Coordenada_X)
 198+ 9A21 16 10            ld d,Centro_derecha
 199+ 9A23 A7               and a
 200+ 9A24 92               sub d
 201+ 9A25 28 0E            jr z,3F
 202+ 9A27 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9A29              ;                                                    ; _salimos sin modificar nada.
 204+ 9A29 CB 43        2 bit 0,e
 205+ 9A2B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9A2D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9A2E CD C2 9A         call Modificaccionne
 208+ 9A31 C1           	pop bc
 209+ 9A32 CD D2 9A         call Inicializacion
 210+ 9A35 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9A36
 212+ 9A36              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9A36
 214+ 9A36 C5           4 push bc
 215+ 9A37 01 F9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9A3A 0A           	ld a,(bc)
 217+ 9A3B 3D           	dec a
 218+ 9A3C 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9A3D 7D           	ld a,l
 220+ 9A3E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9A3F CB 47        	bit 0,a
 222+ 9A41 28 03        	jr z,5F
 223+ 9A43 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9A44 18 2E        	jr 7F
 225+ 9A46
 226+ 9A46              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9A46
 228+ 9A46 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9A47 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9A48 3A F7 8B     	ld a,(Ctrl_0)
 231+ 9A4B CB 4F        	bit 1,a
 232+ 9A4D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9A4F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9A50
 235+ 9A50              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9A50
 237+ 9A50 1C               inc e
 238+ 9A51 1D               dec e
 239+ 9A52 20 07            jr nz,12F
 240+ 9A54 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9A55 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9A56 22 FA 8B     	ld (Posicion_actual),hl
 243+ 9A59 18 44        13 jr 9F
 244+ 9A5B CB 43        12 bit 0,e
 245+ 9A5D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9A5F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9A5F C1           	pop bc
 248+ 9A60 18 D3        	jr 3B
 249+ 9A62 80           14 add b
 250+ 9A63 6F               ld l,a
 251+ 9A64 22 FA 8B     	ld (Posicion_actual),hl
 252+ 9A67 CD C2 9A         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9A6A 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9A6C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9A6E 32 F7 8B         ld (Ctrl_0),a
 256+ 9A71 F1           	pop af
 257+ 9A72 18 2B        	jr 9F
 258+ 9A74
 259+ 9A74              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9A74
 261+ 9A74 F5           7 push af
 262+ 9A75 3A F7 8B     	ld a,(Ctrl_0)
 263+ 9A78 CB 47        	bit 0,a
 264+ 9A7A 20 1D        	jr nz,8F
 265+ 9A7C F1           	pop af
 266+ 9A7D
 267+ 9A7D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9A7D
 269+ 9A7D 1C           	inc e
 270+ 9A7E 1D               dec e
 271+ 9A7F 20 07            jr nz,10F
 272+ 9A81 90           	sub b
 273+ 9A82 6F               ld l,a
 274+ 9A83 22 FA 8B     	ld (Posicion_actual),hl
 275+ 9A86 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9A88              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9A88 CB 43        10 bit 0,e
 278+ 9A8A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9A8C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9A8C C1           	pop bc
 281+ 9A8D 18 A6        	jr 3B
 282+ 9A8F 90           16 sub b
 283+ 9A90 6F               ld l,a
 284+ 9A91 22 FA 8B     	ld (Posicion_actual),hl
 285+ 9A94 CD C2 9A         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9A97 18 06            jr 9F
 287+ 9A99 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9A9B 32 F7 8B         ld (Ctrl_0),a
 289+ 9A9E F1           	pop af
 290+ 9A9F C1           9 pop bc
 291+ 9AA0 1E 00        	ld e,0
 292+ 9AA2 CD D2 9A         call Inicializacion
 293+ 9AA5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9AA6 08           	ex af,af
 295+ 9AA7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9AA8 18 8B            jr 3B
 297+ 9AAA
 298+ 9AAA              ; --------------------
 299+ 9AAA
 300+ 9AAA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9AAC CD F5 9B     1 call PreviousScan
 302+ 9AAF 10 FB            djnz 1B
 303+ 9AB1 22 FA 8B     	ld (Posicion_actual),hl
 304+ 9AB4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9AB5 C9           	ret
 306+ 9AB6
 307+ 9AB6              ; --------------------
 308+ 9AB6
 309+ 9AB6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9AB8 CD E6 9B     1 call NextScan
 311+ 9ABB 10 FB            djnz 1B
 312+ 9ABD 22 FA 8B     	ld (Posicion_actual),hl
 313+ 9AC0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9AC1 C9           	ret
 315+ 9AC2
 316+ 9AC2              ; --------------------
 317+ 9AC2              ;
 318+ 9AC2              ;	22/01/23
 319+ 9AC2              ;
 320+ 9AC2              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9AC2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9AC2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9AC2
 324+ 9AC2
 325+ 9AC2              Modificaccionne
 326+ 9AC2
 327+ 9AC2 3A 09 8C     	ld a,(Cuad_objeto)
 328+ 9AC5 FE 02        	cp 2
 329+ 9AC7 CC AA 9A         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9ACA DC AA 9A         call c,Modifica_Pos_actual
 331+ 9ACD C8           	ret z
 332+ 9ACE CD B6 9A         call Modifica_Pos_actual2
 333+ 9AD1 C9               ret
 334+ 9AD2
 335+ 9AD2              ; *************************************************************************************************************************************************************************************************
 336+ 9AD2              ;
 337+ 9AD2              ;	13/8/22
 338+ 9AD2              ;
 339+ 9AD2              ;	Inicializacion
 340+ 9AD2              ;
 341+ 9AD2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9AD2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9AD2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9AD2              ;
 345+ 9AD2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9AD2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9AD2              ;	_ desaparece/aparece.
 348+ 9AD2
 349+ 9AD2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9AD2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9AD2              ;
 352+ 9AD2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9AD2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9AD2              ; 		   [E] ="0"
 355+ 9AD2
 356+ 9AD2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9AD2
 358+ 9AD2 CD 5C 95     Inicializacion call calcula_tercio
 359+ 9AD5 28 36        	jr z,primit
 360+ 9AD7 E6 02        	and 2
 361+ 9AD9 20 07        	jr nz,segmit
 362+ 9ADB 7D           	ld a,l
 363+ 9ADC FE 7F        	cp $7f
 364+ 9ADE 38 2D        	jr c,primit
 365+ 9AE0 28 2B        	jr z,primit
 366+ 9AE2 CD 48 9B     segmit call column
 367+ 9AE5 38 13        	jr c,tercuad
 368+ 9AE7 3E 04        cuarcuad ld a,4
 369+ 9AE9 32 09 8C     	ld (Cuad_objeto),a
 370+ 9AEC 21 20 48     	ld hl,$4820
 371+ 9AEF 22 0B 8C     	ld (Limite_horizontal),hl
 372+ 9AF2 21 0D 8C     	ld hl,Limite_vertical
 373+ 9AF5 36 0D        	ld (hl),$0d
 374+ 9AF7 08           	ex af,af
 375+ 9AF8 18 3C        	jr 1F
 376+ 9AFA              tercuad
 377+ 9AFA 3E 03        	ld a,3
 378+ 9AFC 32 09 8C     	ld (Cuad_objeto),a
 379+ 9AFF 21 20 48     	ld hl,$4820
 380+ 9B02 22 0B 8C     	ld (Limite_horizontal),hl
 381+ 9B05 21 0D 8C     	ld hl,Limite_vertical
 382+ 9B08 36 12        	ld (hl),$12
 383+ 9B0A 08           	ex af,af
 384+ 9B0B 18 29        	jr 1F
 385+ 9B0D CD 48 9B     primit call column
 386+ 9B10 38 13        	jr c, primcuad
 387+ 9B12              segcuad
 388+ 9B12 3E 02        	ld a,2
 389+ 9B14 32 09 8C     	ld (Cuad_objeto),a
 390+ 9B17 21 C0 4F     	ld hl,$4fc0
 391+ 9B1A 22 0B 8C     	ld (Limite_horizontal),hl
 392+ 9B1D 21 0D 8C     	ld hl,Limite_vertical
 393+ 9B20 36 0D        	ld (hl),$0d
 394+ 9B22 08           	ex af,af
 395+ 9B23 18 11        	jr 1F
 396+ 9B25              primcuad
 397+ 9B25 3E 01        	ld a,1
 398+ 9B27 32 09 8C     	ld (Cuad_objeto),a
 399+ 9B2A 21 C0 4F     	ld hl,$4fc0
 400+ 9B2D 22 0B 8C     	ld (Limite_horizontal),hl
 401+ 9B30 21 0D 8C     	ld hl,Limite_vertical
 402+ 9B33 36 12        	ld (hl),$12
 403+ 9B35 08           	ex af,af
 404+ 9B36
 405+ 9B36 C5           1 push bc
 406+ 9B37 E5           	push hl
 407+ 9B38 D5           	push de
 408+ 9B39
 409+ 9B39 2A FA 8B     	ld hl,(Posicion_actual)
 410+ 9B3C CD 7A 95     	call Genera_coordenadas
 411+ 9B3F
 412+ 9B3F D1           	pop de
 413+ 9B40 E1           	pop hl
 414+ 9B41 C1           	pop bc
 415+ 9B42
 416+ 9B42 21 F7 8B     	ld hl,Ctrl_0
 417+ 9B45 CB EE        	set 5,(hl)
 418+ 9B47 C9           	ret
 419+ 9B48
 420+ 9B48              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9B48
 422+ 9B48              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9B48              ;
 424+ 9B48              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9B48
 426+ 9B48 7D           column ld a,l
 427+ 9B49 E6 1F        	and $1f
 428+ 9B4B FE 10         	cp $10
 429+ 9B4D C9            	ret
 430+ 9B4E
 431+ 9B4E              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9B4E              ;
 433+ 9B4E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9B4E              ;
 435+ 9B4E              ; 14/12/22
 436+ 9B4E              ;
 437+ 9B4E              ;	Modifica: A y BC.
 438+ 9B4E
 439+ 9B4E 3A 09 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9B51 E6 01        	and 1
 441+ 9B53 28 17        	jr z,1F
 442+ 9B55
 443+ 9B55              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9B55
 445+ 9B55 3A EB 8B     	ld a,(Coordenada_X)
 446+ 9B58 47           	ld b,a
 447+ 9B59 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9B5A 79           	ld a,c
 449+ 9B5B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9B5C 38 08        	jr c,2F
 451+ 9B5E 47           	ld b,a
 452+ 9B5F 79           	ld a,c
 453+ 9B60 90           	sub b
 454+ 9B61 32 0A 8C     	ld (Columnas),a
 455+ 9B64 18 1B        	jr 4F
 456+ 9B66 79           2 ld a,c
 457+ 9B67 32 0A 8C     	ld (Columnas),a
 458+ 9B6A 18 15        	jr 4F
 459+ 9B6C
 460+ 9B6C              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9B6C
 462+ 9B6C 3A EB 8B     1 ld a,(Coordenada_X)
 463+ 9B6F 81           	add c
 464+ 9B70 3D           	dec a
 465+ 9B71 D6 1F        	sub $1f
 466+ 9B73 38 08        	jr c,3F
 467+ 9B75 47           	ld b,a
 468+ 9B76 79           	ld a,c
 469+ 9B77 90           	sub b
 470+ 9B78 32 0A 8C     	ld (Columnas),a
 471+ 9B7B 18 04        	jr 4F
 472+ 9B7D 79           3 ld a,c
 473+ 9B7E 32 0A 8C     	ld (Columnas),a
 474+ 9B81 D9           4 exx
 475+ 9B82 4F           	ld c,a
 476+ 9B83 D9           	exx
 477+ 9B84 C9            ret
 478+ 9B85
 479+ 9B85              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9B85              ;
 481+ 9B85              ;   19/7/23
 482+ 9B85              ;
 483+ 9B85              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9B85              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9B85              ;
 486+ 9B85              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9B85              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9B85              ;
 489+ 9B85              ;	DESTRUYE: HL,B Y A.
 490+ 9B85
 491+ 9B85 3A 09 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9B88 FE 02        	cp 2
 493+ 9B8A 38 18        	jr c,1F
 494+ 9B8C 28 16        	jr z,1F
 495+ 9B8E E6 01        	and 1
 496+ 9B90 28 0D        	jr z,3F
 497+ 9B92
 498+ 9B92              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9B92
 500+ 9B92 CD CE 9B     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9B95
 502+ 9B95 7D           9 ld a,l
 503+ 9B96 E6 1F        	and $1f
 504+ 9B98 28 2A        	jr z,7F
 505+ 9B9A 2B           	dec hl
 506+ 9B9B 10 F8        	djnz 9B
 507+ 9B9D 18 25        	jr 7F
 508+ 9B9F
 509+ 9B9F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9B9F
 511+ 9B9F 2A FA 8B     3 ld hl,(Posicion_actual)
 512+ 9BA2 18 20        	jr 7F
 513+ 9BA4
 514+ 9BA4 28 14        1 jr z,2F
 515+ 9BA6
 516+ 9BA6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9BA6
 518+ 9BA6 CD CE 9B     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9BA9
 520+ 9BA9 7D           4 ld a,l
 521+ 9BAA E6 1F        	and $1f
 522+ 9BAC 28 03        	jr z,6F
 523+ 9BAE 2B           	dec hl
 524+ 9BAF 10 F8        	djnz 4B
 525+ 9BB1 06 0F        6 ld b,15
 526+ 9BB3 CD F5 9B     5 call PreviousScan
 527+ 9BB6 10 FB        	djnz 5B
 528+ 9BB8 18 0A        	jr 7F
 529+ 9BBA
 530+ 9BBA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9BBA
 532+ 9BBA CD CE 9B     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9BBD 06 0F        	ld b,15
 534+ 9BBF CD F5 9B     8 call PreviousScan
 535+ 9BC2 10 FB        	djnz 8B
 536+ 9BC4
 537+ 9BC4 E5           7 push hl
 538+ 9BC5 DD E1        	pop ix
 539+ 9BC7
 540+ 9BC7 2A FC 8B     	ld hl,(Puntero_objeto)
 541+ 9BCA E5           	push hl
 542+ 9BCB FD E1        	pop iy
 543+ 9BCD
 544+ 9BCD C9           	ret
 545+ 9BCE
 546+ 9BCE              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9BCE              ;
 548+ 9BCE              ;	2/1/23
 549+ 9BCE              ;
 550+ 9BCE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9BCE              ;
 552+ 9BCE              ;	Tras esta rutina tenemos:
 553+ 9BCE              ;
 554+ 9BCE              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9BCE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9BCE              ;
 557+ 9BCE              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9BCE
 559+ 9BCE 2A FA 8B     Operandos ld hl,(Posicion_actual)
 560+ 9BD1 3A 0A 8C     	ld a,(Columnas)
 561+ 9BD4 3D           	dec a
 562+ 9BD5 20 01        	jr nz,1F
 563+ 9BD7 3C           	inc a
 564+ 9BD8 47           1 ld b,a
 565+ 9BD9 C9           	ret
 566+ 9BDA
 567+ 9BDA              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9BDA              ;
 569+ 9BDA              ;	Prepara_draw
 570+ 9BDA              ;
 571+ 9BDA              ;	Es una rutina de carga.
 572+ 9BDA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9BDA              ;
 574+ 9BDA              ;	FUNCIONAMIENTO:
 575+ 9BDA              ;
 576+ 9BDA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9BDA              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9BDA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9BDA              ;
 580+ 9BDA              ;	DESTRUYE:
 581+ 9BDA              ;
 582+ 9BDA              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9BDA
 584+ 9BDA 21 F8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9BDD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9BDE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9BDF 4E           	ld c,(hl)
 588+ 9BE0 2A FA 8B     	ld hl,(Posicion_actual)
 589+ 9BE3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9BE5 C9           	ret
 591+ 9BE6
 592+ 9BE6              ;----------------------------------------------------------------------------------------------------------------
 593+ 9BE6              ;
 594+ 9BE6              ;	5/08/22
 595+ 9BE6              ;
 596+ 9BE6              ;   NextScan.
 597+ 9BE6              ;
 598+ 9BE6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9BE6              ;
 600+ 9BE6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9BE6              ;
 602+ 9BE6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9BE6              ;
 604+ 9BE6              ;       DESTRUIDOS: AF y HL !!!
 605+ 9BE6              ;
 606+ 9BE6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9BE6              ;
 608+ 9BE6
 609+ 9BE6 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9BE7 7C               ld a,h
 611+ 9BE8 E6 07            and 7
 612+ 9BEA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9BEB
 614+ 9BEB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9BEC C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9BEE 6F               ld l,a
 617+ 9BEF D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9BF0
 619+ 9BF0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9BF1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9BF3 67               ld h,a
 622+ 9BF4 C9               ret
 623+ 9BF5
 624+ 9BF5              ;----------------------------------------------------------------------------------------------------------------
 625+ 9BF5              ;
 626+ 9BF5              ;	5/08/22
 627+ 9BF5              ;
 628+ 9BF5              ;   PreviousScan.
 629+ 9BF5              ;
 630+ 9BF5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9BF5              ;
 632+ 9BF5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9BF5              ;
 634+ 9BF5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9BF5              ;
 636+ 9BF5              ;       DESTRUIDOS: AF y HL !!!
 637+ 9BF5              ;
 638+ 9BF5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9BF5              ;
 640+ 9BF5
 641+ 9BF5 7C           PreviousScan ld a,h
 642+ 9BF6 25               dec h               ; Dec H.
 643+ 9BF7 E6 07            and 7
 644+ 9BF9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9BFA
 646+ 9BFA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9BFB D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9BFD 6F               ld l,a
 649+ 9BFE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9BFF
 651+ 9BFF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9C00 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9C02 67               ld h,a
 654+ 9C03 C9               ret
 655+ 9C04
 656+ 9C04
 657+ 9C04
 658+ 9C04
 659+ 9C04
 660+ 9C04
 661+ 9C04
 662+ 9C04
 663+ 9C04
 664+ 9C04
 665+ 9C04
 666+ 9C04
# file closed: Draw_XOR.asm
2292  9C04              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9C04
   2+ 9C04              ; ******************************************************************************************************************************************************************************************
   3+ 9C04              ;
   4+ 9C04              ;   20/05/23
   5+ 9C04              ;
   6+ 9C04              ;	Recompone_posicion_inicio
   7+ 9C04              ;
   8+ 9C04              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9C04              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9C04              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9C04              ;	_ a una u otra rutina.
  12+ 9C04
  13+ 9C04              Recompone_posicion_inicio
  14+ 9C04
  15+ 9C04 2A 07 8C     	ld hl,(Posicion_inicio)
  16+ 9C07 7D           	ld a,l
  17+ 9C08 E6 1F        	and $1f
  18+ 9C0A 28 16        	jr z,1F
  19+ 9C0C
  20+ 9C0C FE 1F        	cp $1f
  21+ 9C0E 28 0D        	jr z,3F
  22+ 9C10
  23+ 9C10 21 F6 8B     	ld hl,Ctrl_2
  24+ 9C13 CB C6        	set 0,(hl)
  25+ 9C15 2A FC 8B     	ld hl,(Puntero_objeto)
  26+ 9C18 22 28 8C     	ld (Repone_puntero_objeto),hl
  27+ 9C1B 18 08        	jr 2F
  28+ 9C1D
  29+ 9C1D CD CB 9D     3 call Mov_left
  30+ 9C20 18 03        	jr 2F
  31+ 9C22
  32+ 9C22 CD A8 9C     1 call Mov_right
  33+ 9C25 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9C28 22 FC 8B     	ld (Puntero_objeto),hl
  35+ 9C2B C9           	ret
  36+ 9C2C
  37+ 9C2C              ; ******************************************************************************************************************************************************************************************
  38+ 9C2C              ;
  39+ 9C2C              ;   27/05/23
  40+ 9C2C              ;
  41+ 9C2C              ;	Mov_down
  42+ 9C2C              ;
  43+ 9C2C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9C2C              ;
  45+ 9C2C              ;
  46+ 9C2C              Mov_down
  47+ 9C2C
  48+ 9C2C CD 96 9C     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9C2F              ;																	; _ repone (Puntero_objeto).
  50+ 9C2F 21 F7 8B     	ld hl,Ctrl_0
  51+ 9C32 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9C34              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9C34              ; 																	; _ en el caso de que no lo haya.
  54+ 9C34 3A 12 8C     	ld a,(Vel_down)
  55+ 9C37 47           	ld b,a
  56+ 9C38 2A FA 8B         ld hl,(Posicion_actual)
  57+ 9C3B CD 5C 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9C3E E6 02        	and 2
  59+ 9C40 28 17        	jr z,1F
  60+ 9C42
  61+ 9C42              ; Nos encontramos en el último tercio de pantalla.
  62+ 9C42              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9C42
  64+ 9C42 7C           	ld a,h
  65+ 9C43 FE 57        	cp $57
  66+ 9C45 20 12        	jr nz,1F
  67+ 9C47
  68+ 9C47 7D           	ld a,l
  69+ 9C48 C6 20        	add $20
  70+ 9C4A 30 0D        	jr nc,1F
  71+ 9C4C
  72+ 9C4C              ; ------------------------------
  73+ 9C4C              ;
  74+ 9C4C              ;	12/01/24
  75+ 9C4C
  76+ 9C4C              ;	call Reaparece_arriba
  77+ 9C4C CD 58 9F     	call Reinicio
  78+ 9C4F
  79+ 9C4F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9C4F
  81+ 9C4F 3A 61 8C     	ld a,(Ctrl_3)
  82+ 9C52 CB CF        	set 1,a
  83+ 9C54 32 61 8C     	ld (Ctrl_3),a
  84+ 9C57
  85+ 9C57 18 08        	jr 3F
  86+ 9C59              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9C59              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9C59              ; ------------------------------
  89+ 9C59
  90+ 9C59 CD E6 9B     1 call NextScan
  91+ 9C5C 22 FA 8B     	ld (Posicion_actual),hl
  92+ 9C5F 10 DA            djnz 2B
  93+ 9C61 CD 7A 95     3 call Genera_coordenadas
  94+ 9C64 C9           	ret
  95+ 9C65
  96+ 9C65              ; ******************************************************************************************************************************************************************************************
  97+ 9C65              ;
  98+ 9C65              ;   27/05/23
  99+ 9C65              ;
 100+ 9C65              ;	Mov_up
 101+ 9C65              ;
 102+ 9C65              ; 	Mueve el Sprite hacia arriba.
 103+ 9C65              ;
 104+ 9C65              ;
 105+ 9C65              Mov_up
 106+ 9C65
 107+ 9C65 CD 96 9C     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9C68              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9C68 21 F7 8B     	ld hl,Ctrl_0
 110+ 9C6B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9C6D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9C6D              ; 																		; _ en el caso de que no lo haya.
 113+ 9C6D 3A 11 8C     	ld a,(Vel_up)
 114+ 9C70 47           	ld b,a
 115+ 9C71 2A FA 8B     	ld hl,(Posicion_actual)
 116+ 9C74 CD 5C 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9C77 A7           	and a
 118+ 9C78 20 10        	jr nz,1F
 119+ 9C7A
 120+ 9C7A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9C7A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9C7A
 123+ 9C7A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9C7B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9C7D 20 0B            jr nz,1F
 126+ 9C7F 7D               ld a,l
 127+ 9C80 D6 20            sub $20
 128+ 9C82 30 06            jr nc,1F
 129+ 9C84 25               dec h
 130+ 9C85
 131+ 9C85              ; -----------------------------
 132+ 9C85 CD 39 9F         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9C88              ;	call Reinicio
 134+ 9C88              ; -----------------------------
 135+ 9C88
 136+ 9C88 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9C8A CD F5 9B     1 call PreviousScan
 138+ 9C8D 22 FA 8B     	ld (Posicion_actual),hl
 139+ 9C90 10 E2            djnz 3B
 140+ 9C92 CD 7A 95     2 call Genera_coordenadas
 141+ 9C95 C9           	ret
 142+ 9C96
 143+ 9C96              ; -----------------------------
 144+ 9C96              ;
 145+ 9C96              ;	27/5/23
 146+ 9C96              ;
 147+ 9C96              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9C96              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9C96              ;
 150+ 9C96              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9C96              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9C96              ;
 153+ 9C96              ;	Modifica: A y (Puntero_objeto).
 154+ 9C96
 155+ 9C96 3A F6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9C99 CB 47        	bit 0,a
 157+ 9C9B C8           	ret z
 158+ 9C9C CB 87        	res 0,a
 159+ 9C9E 32 F6 8B     	ld (Ctrl_2),a
 160+ 9CA1 2A 28 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9CA4 22 FC 8B     	ld (Puntero_objeto),hl
 162+ 9CA7 C9           	ret
 163+ 9CA8
 164+ 9CA8              ; ******************************************************************************************************************************************************************************************
 165+ 9CA8              ;
 166+ 9CA8              ;	19/10/22
 167+ 9CA8              ;
 168+ 9CA8              ;	Mov_right.
 169+ 9CA8              ;
 170+ 9CA8              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9CA8              ;
 172+ 9CA8
 173+ 9CA8 3A F7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9CAB CB 77        	bit 6,a
 175+ 9CAD 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9CAF
 177+ 9CAF CD E7 9E     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9CB2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9CB3
 180+ 9CB3 21 F7 8B     	ld hl,Ctrl_0
 181+ 9CB6 CB E6        	set 4,(hl)
 182+ 9CB8 18 52        	jr 8F
 183+ 9CBA
 184+ 9CBA 21 F7 8B     10 ld hl,Ctrl_0
 185+ 9CBD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9CBF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9CBF              ; 																	; _ en el caso de que no lo haya.
 188+ 9CBF 3A EB 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9CC2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9CC4 20 46        	jr nz,8F
 191+ 9CC6
 192+ 9CC6 3A FE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9CC9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9CCA 28 40        	jr z,8F
 195+ 9CCC
 196+ 9CCC              ; ---------- ---------- ----------
 197+ 9CCC              ;
 198+ 9CCC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9CCC
 200+ 9CCC 3A 10 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9CCF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9CD1 28 11        	jr z,1F
 203+ 9CD3 38 06        	jr c,6F
 204+ 9CD5 FE 04        	cp 4
 205+ 9CD7 28 14        	jr z,7F
 206+ 9CD9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9CDB
 208+ 9CDB              ; ---------- ---------- ----------
 209+ 9CDB              ;
 210+ 9CDB              ; Perfiles de velocidad
 211+ 9CDB              ;
 212+ 9CDB
 213+ 9CDB 3A FE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9CDE FE FE        	cp $fe
 215+ 9CE0 20 2A        	jr nz,8F
 216+ 9CE2 18 10        	jr 3F
 217+ 9CE4 3A FE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9CE7 FE FD        	cp $fd
 219+ 9CE9 20 21        	jr nz,8F
 220+ 9CEB 18 07        	jr 3F
 221+ 9CED 3A FE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9CF0 FE FB        	cp $fb
 223+ 9CF2 20 18        	jr nz,8F
 224+ 9CF4
 225+ 9CF4              ; ---------- ---------- ----------
 226+ 9CF4
 227+ 9CF4              3
 228+ 9CF4 CD 27 9F     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9CF7              ;	call Reinicio
 230+ 9CF7
 231+ 9CF7              ; ---------- ---------- ----------
 232+ 9CF7              ;
 233+ 9CF7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9CF7
 235+ 9CF7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9CF9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9CFA CD 13 9D     	call DESPLZ_DER
 238+ 9CFD C1           	pop bc
 239+ 9CFE 10 F9        	djnz 5B
 240+ 9D00 2A FA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9D03 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9D04 22 FA 8B     	ld (Posicion_actual),hl
 243+ 9D07 CD 7A 95     	call Genera_coordenadas
 244+ 9D0A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9D0C
 246+ 9D0C              ; ---------- ---------- ----------
 247+ 9D0C
 248+ 9D0C 2A FA 8B     8 ld hl,(Posicion_actual)
 249+ 9D0F CD 13 9D     	call DESPLZ_DER
 250+ 9D12 C9           2 ret
 251+ 9D13
 252+ 9D13              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9D13              ;
 254+ 9D13              ;	22/9/22
 255+ 9D13              ;
 256+ 9D13
 257+ 9D13 CD 22 9D     DESPLZ_DER call Desplaza_derecha
 258+ 9D16 CD 6E 9D         call modifica_parametros_1er_DESPLZ_2
 259+ 9D19 CD 97 9D         call Ciclo_completo
 260+ 9D1C 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9D1F CB FE        	set 7,(hl)
 262+ 9D21 C9           	ret
 263+ 9D22
 264+ 9D22              ; ******************************************************************************************************************************************************************************************
 265+ 9D22              ;	15/02/23
 266+ 9D22              ;
 267+ 9D22
 268+ 9D22 3A 10 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9D25 47           	ld b,a
 270+ 9D26 2A 03 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9D29 23           1 inc hl
 272+ 9D2A 23           	inc hl
 273+ 9D2B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9D2D 22 03 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9D30 CD 68 91     	call Extrae_address
 276+ 9D33 22 FC 8B     	ld (Puntero_objeto),hl
 277+ 9D36
 278+ 9D36              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9D36
 280+ 9D36              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9D36              ; Cuántos movimientos hemos hecho ??
 282+ 9D36              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9D36
 284+ 9D36 2A FF 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9D39 EB           	ex de,hl
 286+ 9D3A A7           	and a
 287+ 9D3B ED 52        	sbc hl,de
 288+ 9D3D CB 3D        	srl l
 289+ 9D3F 3E 08        6 ld a,8
 290+ 9D41 95           	sub l
 291+ 9D42 30 1E        	jr nc,3F
 292+ 9D44
 293+ 9D44              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9D44              ; B="0".
 295+ 9D44
 296+ 9D44 04           4 inc b
 297+ 9D45 3C           	inc a
 298+ 9D46 20 FC        	jr nz,4B
 299+ 9D48 78           	ld a,b
 300+ 9D49 08           	ex af,af
 301+ 9D4A 2A FF 8B     	ld hl,(Indice_Sprite_der)
 302+ 9D4D 23           5 inc hl
 303+ 9D4E 23           	inc hl
 304+ 9D4F 10 FC        	djnz 5B
 305+ 9D51 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9D54 CD 68 91     	call Extrae_address
 307+ 9D57 22 FC 8B     	ld (Puntero_objeto),hl
 308+ 9D5A
 309+ 9D5A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9D5A              ; _(Posicion_actual).
 311+ 9D5A
 312+ 9D5A 21 FA 8B     	ld hl,Posicion_actual
 313+ 9D5D 34           	inc (hl)
 314+ 9D5E 08               ex af,af
 315+ 9D5F 6F           	ld l,a
 316+ 9D60 18 DD        	jr 6B
 317+ 9D62
 318+ 9D62              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9D62
 320+ 9D62 47           3 ld b,a
 321+ 9D63 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9D66 23           2 inc hl
 323+ 9D67 23           	inc hl
 324+ 9D68 10 FC        	djnz 2B
 325+ 9D6A 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9D6D C9           8 ret
 327+ 9D6E
 328+ 9D6E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9D6E              ;
 330+ 9D6E              ;	24/7/22
 331+ 9D6E              ;
 332+ 9D6E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9D6E              ;
 334+ 9D6E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9D6E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9D6E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9D6E
 338+ 9D6E 3A FE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9D71 A7           	and a
 340+ 9D72 20 1F        	jr nz,1F
 341+ 9D74 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9D76 32 FE 8B         ld (CTRL_DESPLZ),a
 343+ 9D79
 344+ 9D79 21 F9 8B     	ld hl,Columns
 345+ 9D7C 34           	inc (hl)
 346+ 9D7D 3A 09 8C     	ld a,(Cuad_objeto)
 347+ 9D80 E6 01        	and 1
 348+ 9D82 28 0F        	jr z,1F
 349+ 9D84 2A FA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9D87 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9D88 22 FA 8B     	ld (Posicion_actual),hl
 352+ 9D8B CD 7A 95     	call Genera_coordenadas
 353+ 9D8E CD F3 9E     	call Inc_CTRL_DESPLZ
 354+ 9D91 18 03        	jr 2F
 355+ 9D93 CD F3 9E     1 call Inc_CTRL_DESPLZ
 356+ 9D96 C9           2 ret
 357+ 9D97
 358+ 9D97              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9D97              ;
 360+ 9D97              ;	24/7/22
 361+ 9D97              ;
 362+ 9D97              ;	Ciclo_completo.
 363+ 9D97              ;
 364+ 9D97              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9D97              ;
 366+ 9D97              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9D97              ; 	Decrementamos (Columns).
 368+ 9D97              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9D97              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9D97
 371+ 9D97
 372+ 9D97 3A FE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9D9A FE FF        	cp $ff
 374+ 9D9C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9D9E E6 F0        	and $f0
 376+ 9DA0 20 28        	jr nz,3F
 377+ 9DA2
 378+ 9DA2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9DA2
 380+ 9DA2 3A FE 8B     	ld a,(CTRL_DESPLZ)
 381+ 9DA5 47           	ld b,a
 382+ 9DA6 3E F8        	ld a,$f8
 383+ 9DA8 80           	add b
 384+ 9DA9 32 FE 8B     	ld (CTRL_DESPLZ),a
 385+ 9DAC 18 1C        	jr 3F
 386+ 9DAE 21 F9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9DB1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9DB2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9DB3 32 FE 8B     	ld (CTRL_DESPLZ),a
 390+ 9DB6 3A 09 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9DB9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9DBB 20 0A        	jr nz,2F
 393+ 9DBD 2A FA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9DC0 23           	inc hl
 395+ 9DC1 22 FA 8B     	ld (Posicion_actual),hl
 396+ 9DC4 CD 7A 95     	call Genera_coordenadas
 397+ 9DC7
 398+ 9DC7              ; Inicia el puntero de Sprite.
 399+ 9DC7
 400+ 9DC7 CD 7A 91     2 call Inicia_puntero_objeto_der
 401+ 9DCA C9           3 ret
 402+ 9DCB
 403+ 9DCB              ; ******************************************************************************************************************************************************************************************
 404+ 9DCB              ;
 405+ 9DCB              ;	15/02/23
 406+ 9DCB              ;
 407+ 9DCB              ;	Mov_left.
 408+ 9DCB              ;
 409+ 9DCB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9DCB              ;
 411+ 9DCB              Mov_left
 412+ 9DCB
 413+ 9DCB 21 F7 8B     	ld hl,Ctrl_0
 414+ 9DCE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9DD0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9DD0              ; 																	; _ en el caso de que no lo haya.
 417+ 9DD0 3A F7 8B     	ld a,(Ctrl_0)
 418+ 9DD3 CB 77        	bit 6,a
 419+ 9DD5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9DD7
 421+ 9DD7 CD ED 9E     	call Stop_Amadeus_left
 422+ 9DDA C8           	ret z
 423+ 9DDB 20 4A        	jr nz,8F
 424+ 9DDD
 425+ 9DDD 3A EB 8B     11 ld a,(Coordenada_X)
 426+ 9DE0 A7           	and a
 427+ 9DE1 20 44        	jr nz,8F
 428+ 9DE3
 429+ 9DE3 3A FE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9DE6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9DE7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9DE9
 433+ 9DE9              ; ---------- ---------- ----------
 434+ 9DE9
 435+ 9DE9 3A 0F 8C     	ld a,(Vel_left)
 436+ 9DEC FE 02        	cp 2
 437+ 9DEE 28 0F        	jr z,1F
 438+ 9DF0 38 04        	jr c,6F
 439+ 9DF2 FE 04        	cp 4
 440+ 9DF4 28 12        	jr z,7F
 441+ 9DF6
 442+ 9DF6              ; ---------- ---------- ----------
 443+ 9DF6
 444+ 9DF6 3A FE 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9DF9 FE F8        	cp $f8
 446+ 9DFB 20 2A        	jr nz,8F
 447+ 9DFD 18 10        	jr 4F
 448+ 9DFF 3A FE 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9E02 FE F9        	cp $f9
 450+ 9E04 20 21        	jr nz,8F
 451+ 9E06 18 07        	jr 4F
 452+ 9E08 3A FE 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9E0B FE FB        	cp $fb
 454+ 9E0D 20 18        	jr nz,8F
 455+ 9E0F
 456+ 9E0F              ; ---------- ---------- ----------
 457+ 9E0F
 458+ 9E0F              4
 459+ 9E0F CD 15 9F     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9E12              ;	call Reinicio
 461+ 9E12
 462+ 9E12              ; ---------- ---------- ----------
 463+ 9E12
 464+ 9E12 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9E14 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9E15
 467+ 9E15              ;	ld hl,(Indice_Sprite_izq)
 468+ 9E15              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9E15
 470+ 9E15 CD 2E 9E     	call DESPLZ_IZQ
 471+ 9E18 C1           	pop bc
 472+ 9E19 10 F9        	djnz 5B
 473+ 9E1B 2A FA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9E1E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9E1F 22 FA 8B     	ld (Posicion_actual),hl
 476+ 9E22 CD 7A 95     	call Genera_coordenadas
 477+ 9E25 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9E27
 479+ 9E27              ; ---------- ---------- ----------
 480+ 9E27
 481+ 9E27              ; Movemos, no hay recolocación.
 482+ 9E27
 483+ 9E27 2A FA 8B     8 ld hl,(Posicion_actual)
 484+ 9E2A CD 2E 9E     	call DESPLZ_IZQ
 485+ 9E2D C9           2 ret
 486+ 9E2E
 487+ 9E2E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9E2E              ;
 489+ 9E2E              ;	22/9/22
 490+ 9E2E
 491+ 9E2E              DESPLZ_IZQ
 492+ 9E2E
 493+ 9E2E CD 3D 9E     	call Desplaza_izquierda
 494+ 9E31 CD 89 9E         call modifica_parametros_1er_DESPLZ
 495+ 9E34 CD B1 9E     	call Ciclo_completo_2
 496+ 9E37 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9E3A CB BE        	res 7,(hl)
 498+ 9E3C C9           	ret
 499+ 9E3D
 500+ 9E3D              Desplaza_izquierda
 501+ 9E3D
 502+ 9E3D 3A 0F 8C     	ld a,(Vel_left)
 503+ 9E40 47           	ld b,a
 504+ 9E41 2A 05 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9E44 23           1 inc hl
 506+ 9E45 23           	inc hl
 507+ 9E46 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9E48 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9E4B CD 68 91     	call Extrae_address
 510+ 9E4E 22 FC 8B     	ld (Puntero_objeto),hl
 511+ 9E51
 512+ 9E51              ; Modifica (Puntero_DESPLZ_der).
 513+ 9E51
 514+ 9E51              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9E51              ; Cuántos movimientos hemos hecho ??
 516+ 9E51              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9E51
 518+ 9E51 2A 01 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9E54 EB           	ex de,hl
 520+ 9E55 A7           	and a
 521+ 9E56 ED 52        	sbc hl,de
 522+ 9E58 CB 3D        	srl l
 523+ 9E5A 3E 08        6 ld a,8
 524+ 9E5C 95           	sub l
 525+ 9E5D 30 1E        	jr nc,3F
 526+ 9E5F
 527+ 9E5F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9E5F              ; B="0".
 529+ 9E5F
 530+ 9E5F 04           4 inc b
 531+ 9E60 3C           	inc a
 532+ 9E61 20 FC        	jr nz,4B
 533+ 9E63 78           	ld a,b
 534+ 9E64 08           	ex af,af
 535+ 9E65 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9E68 23           5 inc hl
 537+ 9E69 23           	inc hl
 538+ 9E6A 10 FC        	djnz 5B
 539+ 9E6C 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9E6F CD 68 91     	call Extrae_address
 541+ 9E72 22 FC 8B     	ld (Puntero_objeto),hl
 542+ 9E75
 543+ 9E75              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9E75              ; _(Posicion_actual).
 545+ 9E75
 546+ 9E75 21 FA 8B     	ld hl,Posicion_actual
 547+ 9E78 35           	dec (hl)
 548+ 9E79 08           	ex af,af
 549+ 9E7A 6F           	ld l,a
 550+ 9E7B 18 DD        	jr 6B
 551+ 9E7D
 552+ 9E7D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9E7D
 554+ 9E7D 47           3 ld b,a
 555+ 9E7E 2A FF 8B     	ld hl,(Indice_Sprite_der)
 556+ 9E81 23           2 inc hl
 557+ 9E82 23           	inc hl
 558+ 9E83 10 FC        	djnz 2B
 559+ 9E85 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9E88 C9           8 ret
 561+ 9E89
 562+ 9E89              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9E89              ;
 564+ 9E89              ;	modifica_parametros_1er_DESPLZ
 565+ 9E89              ;
 566+ 9E89              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9E89              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9E89              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9E89
 570+ 9E89 3A FE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9E8C A7           	and a
 572+ 9E8D 20 1E        	jr nz,1F
 573+ 9E8F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9E90 32 FE 8B         ld (CTRL_DESPLZ),a
 575+ 9E93 21 F9 8B     	ld hl,Columns
 576+ 9E96 34           	inc (hl)
 577+ 9E97 3A 09 8C     	ld a,(Cuad_objeto)
 578+ 9E9A E6 01        	and 1
 579+ 9E9C 20 0F        	jr nz,1F
 580+ 9E9E 2A FA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9EA1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9EA2 22 FA 8B     	ld (Posicion_actual),hl
 583+ 9EA5 CD 7A 95     	call Genera_coordenadas
 584+ 9EA8 CD 04 9F     	call Dec_CTRL_DESPLZ
 585+ 9EAB 18 03        	jr 2F
 586+ 9EAD CD 04 9F     1 call Dec_CTRL_DESPLZ
 587+ 9EB0 C9           2 ret
 588+ 9EB1
 589+ 9EB1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9EB1
 591+ 9EB1 3A FE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9EB4 FE F7        	cp $f7
 593+ 9EB6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9EB8 30 2C        	jr nc,3F
 595+ 9EBA
 596+ 9EBA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9EBA
 598+ 9EBA 06 00        	ld b,0
 599+ 9EBC 04           4 inc b
 600+ 9EBD 3C           	inc a
 601+ 9EBE FE F7        	cp $f7
 602+ 9EC0 20 FA        	jr nz,4B
 603+ 9EC2 3E FF        	ld a,$ff
 604+ 9EC4 90           	sub b
 605+ 9EC5 32 FE 8B     	ld (CTRL_DESPLZ),a
 606+ 9EC8 18 1C        	jr 3F
 607+ 9ECA
 608+ 9ECA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9ECA
 610+ 9ECA 21 F9 8B     1 ld hl,Columns
 611+ 9ECD 35           	dec (hl)
 612+ 9ECE AF           	xor a
 613+ 9ECF 32 FE 8B     	ld (CTRL_DESPLZ),a
 614+ 9ED2 3A 09 8C     	ld a,(Cuad_objeto)
 615+ 9ED5 E6 01        	and 1
 616+ 9ED7 28 0A        	jr z,2F
 617+ 9ED9 2A FA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9EDC 2B           	dec hl
 619+ 9EDD 22 FA 8B     	ld (Posicion_actual),hl
 620+ 9EE0 CD 7A 95     	call Genera_coordenadas
 621+ 9EE3
 622+ 9EE3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9EE3
 624+ 9EE3 CD 8D 91     2 call Inicia_puntero_objeto_izq
 625+ 9EE6 C9           3 ret
 626+ 9EE7
 627+ 9EE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9EE7              ;
 629+ 9EE7              ;	19/10/22
 630+ 9EE7              ;
 631+ 9EE7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9EE7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9EE7
 634+ 9EE7 3A EB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9EEA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9EEC C9           	ret
 637+ 9EED
 638+ 9EED              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9EED              ;
 640+ 9EED              ;	19/10/22
 641+ 9EED              ;
 642+ 9EED              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9EED              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9EED
 645+ 9EED 3A EB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9EF0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9EF2 C9           	ret
 648+ 9EF3
 649+ 9EF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9EF3              ;
 651+ 9EF3              ;	24/7/22
 652+ 9EF3              ;
 653+ 9EF3              ;	Inc_CTRL_DESPLZ
 654+ 9EF3              ;
 655+ 9EF3              ;
 656+ 9EF3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9EF3
 658+ 9EF3 21 FE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9EF6 3A 10 8C     	ld a,(Vel_right)
 660+ 9EF9 A7           	and a
 661+ 9EFA 28 06        	jr z,1F
 662+ 9EFC 47           	ld b,a
 663+ 9EFD 34           3 inc (hl)
 664+ 9EFE 10 FD        	djnz 3B
 665+ 9F00 18 01        	jr 2F
 666+ 9F02 34           1 inc (hl)
 667+ 9F03 C9           2 ret
 668+ 9F04
 669+ 9F04              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9F04              ;
 671+ 9F04              ;	5/2/23
 672+ 9F04              ;
 673+ 9F04              ;	Dec_CTRL_DESPLZ
 674+ 9F04              ;
 675+ 9F04              ;
 676+ 9F04              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9F04
 678+ 9F04 21 FE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9F07 3A 0F 8C     	ld a,(Vel_left)
 680+ 9F0A A7           	and a
 681+ 9F0B 28 06        	jr z,1F
 682+ 9F0D 47           	ld b,a
 683+ 9F0E 35           3 dec (hl)
 684+ 9F0F 10 FD        	djnz 3B
 685+ 9F11 18 01        	jr 2F
 686+ 9F13 35           1 dec (hl)
 687+ 9F14 C9           2 ret
 688+ 9F15
 689+ 9F15              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9F15
 691+ 9F15 2A FA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9F18 01 1F 00     	ld bc,31
 693+ 9F1B A7           	and a
 694+ 9F1C ED 4A        	adc hl,bc
 695+ 9F1E 22 FA 8B     	ld (Posicion_actual),hl
 696+ 9F21 21 F7 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9F24 CB C6        	set 0,(hl)
 698+ 9F26 C9           	ret
 699+ 9F27
 700+ 9F27              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9F27
 702+ 9F27 2A FA 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9F2A 01 1F 00     	ld bc,31
 704+ 9F2D A7           	and a
 705+ 9F2E ED 42        	sbc hl,bc
 706+ 9F30 22 FA 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9F33 21 F7 8B     	ld hl,Ctrl_0
 708+ 9F36 CB CE        	set 1,(hl)
 709+ 9F38 C9           	ret
 710+ 9F39
 711+ 9F39              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9F39
 713+ 9F39 24           Reaparece_abajo inc h
 714+ 9F3A 01 E0 17     	ld bc,$17e0
 715+ 9F3D A7           	and a
 716+ 9F3E ED 4A        	adc hl,bc
 717+ 9F40 22 FA 8B     	ld (Posicion_actual),hl
 718+ 9F43 21 F7 8B     	ld hl,Ctrl_0
 719+ 9F46 CB D6        	set 2,(hl)
 720+ 9F48 C9           	ret
 721+ 9F49
 722+ 9F49              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9F49
 724+ 9F49 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9F4C A7           	and a
 726+ 9F4D ED 42        	sbc hl,bc
 727+ 9F4F 22 FA 8B     	ld (Posicion_actual),hl
 728+ 9F52 21 F7 8B     	ld hl,Ctrl_0
 729+ 9F55 CB DE        	set 3,(hl)
 730+ 9F57 C9           	ret
 731+ 9F58
 732+ 9F58              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9F58              ;
 734+ 9F58              ;	15/07/23
 735+ 9F58
 736+ 9F58              Reinicio
 737+ 9F58
 738+ 9F58              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9F58
 740+ 9F58 AF           	xor a
 741+ 9F59 21 1F 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9F5C CD 7A 9F     	call Limpia_contenido_hl
 743+ 9F5F
 744+ 9F5F 21 FA 8B     	ld hl,Posicion_actual
 745+ 9F62 CD 7A 9F     	call Limpia_contenido_hl
 746+ 9F65
 747+ 9F65 CD E4 93     	call Situa_Puntero_indice_mov
 748+ 9F68 CD 73 A0     	call Inicia_Puntero_mov
 749+ 9F6B
 750+ 9F6B 21 21 8C     	ld hl,Incrementa_puntero
 751+ 9F6E 06 05        	ld b,5
 752+ 9F70 77           1 ld (hl),a
 753+ 9F71 23           	inc hl
 754+ 9F72 10 FC        	djnz 1B
 755+ 9F74
 756+ 9F74 21 F6 8B     	ld hl,Ctrl_2
 757+ 9F77 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9F79
 759+ 9F79 C9           	ret
 760+ 9F7A
 761+ 9F7A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9F7B 23           	inc hl
 763+ 9F7C 77           	ld (hl),a
 764+ 9F7D C9           	ret
 765+ 9F7E
 766+ 9F7E              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9F7E              ;
 768+ 9F7E              ;	18/6/24
 769+ 9F7E              ;
 770+ 9F7E
 771+ 9F7E              Amadeus_a_izquierda
 772+ 9F7E
 773+ 9F7E              ;	Actualiza contador de movimientos.
 774+ 9F7E
 775+ 9F7E 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9F81 35           	dec (hl)
 777+ 9F82 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9F84
 779+ 9F84 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9F87 2B           	dec hl
 781+ 9F88 2B           	dec hl
 782+ 9F89 2B           	dec hl
 783+ 9F8A 2B           	dec hl
 784+ 9F8B 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9F8E
 786+ 9F8E 21 61 8C     	ld hl,Ctrl_3
 787+ 9F91 CB EE        	set 5,(hl)
 788+ 9F93
 789+ 9F93 C9           	ret
 790+ 9F94
 791+ 9F94 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9F95 C9           	ret
 793+ 9F96
 794+ 9F96
 795+ 9F96              Amadeus_a_derecha
 796+ 9F96
 797+ 9F96              ;	Actualiza contador de movimientos.
 798+ 9F96
 799+ 9F96 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9F99 34           	inc (hl)
 801+ 9F9A 3E 7A        	ld a,$7a
 802+ 9F9C BE           	cp (hl)
 803+ 9F9D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9F9F
 805+ 9F9F 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9FA2 23           	inc hl
 807+ 9FA3 23           	inc hl
 808+ 9FA4 23           	inc hl
 809+ 9FA5 23           	inc hl
 810+ 9FA6 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9FA9
 812+ 9FA9 21 61 8C     	ld hl,Ctrl_3
 813+ 9FAC CB EE        	set 5,(hl)
 814+ 9FAE C9           	ret
 815+ 9FAF
 816+ 9FAF 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9FB0 C9           	ret
# file closed: Direcciones.asm
2293  9FB1              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9FB1              ; ----- ----- ----- ----- -----
   2+ 9FB1              ;
   3+ 9FB1              ;   28/12/23
   4+ 9FB1
   5+ 9FB1              Movimiento
   6+ 9FB1
   7+ 9FB1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9FB1
   9+ 9FB1 3A F6 8B         ld a,(Ctrl_2)
  10+ 9FB4 CB 57            bit 2,a
  11+ 9FB6 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9FB8
  13+ 9FB8 2A 1D 8C         ld hl,(Puntero_mov)
  14+ 9FBB 7E               ld a,(hl)
  15+ 9FBC
  16+ 9FBC              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9FBC
  18+ 9FBC              Inicia_desplazamiento.
  19+ 9FBC
  20+ 9FBC              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9FBC
  22+ 9FBC CD A9 A0         call Ajusta_velocidad_desplazamiento
  23+ 9FBF
  24+ 9FBF              ; Hemos definido (Vel_left),(Vel_right),(Vel_up) y (Vel_down) en la bandeja DRAW. Ahora (Puntero_mov) está situado en el 3er byte del movimiento, (indica dirección y nº de veces que la ejecutamos).
  25+ 9FBF
  26+ 9FBF              ; Iniciamos (Repetimos_mov).
  27+ 9FBF
  28+ 9FBF 7E               ld a,(hl)
  29+ 9FC0 E6 0F            and $0f
  30+ 9FC2 32 23 8C         ld (Repetimos_desplazamiento),a
  31+ 9FC5 32 24 8C         ld (Repetimos_desplazamiento_backup),a
  32+ 9FC8
  33+ 9FC8              ; Iniciamos (Cola_de_desplazamiento).
  34+ 9FC8
  35+ 9FC8 23               inc hl
  36+ 9FC9 7E               ld a,(hl)
  37+ 9FCA 32 26 8C         ld (Cola_de_desplazamiento),a
  38+ 9FCD 2B               dec hl
  39+ 9FCE
  40+ 9FCE 21 F6 8B         ld hl,Ctrl_2
  41+ 9FD1 CB D6            set 2,(hl)
  42+ 9FD3
  43+ 9FD3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  44+ 9FD3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  45+ 9FD3
  46+ 9FD3              Desplazamiento_iniciado
  47+ 9FD3
  48+ 9FD3              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  49+ 9FD3
  50+ 9FD3              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  51+ 9FD3
  52+ 9FD3              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  53+ 9FD3              ;                               Izquierda_y_subiendo+8 (11)
  54+ 9FD3              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  55+ 9FD3              ;                               Izquierda_y_subiendo+8 (8)
  56+ 9FD3              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  57+ 9FD3              ;                               Izquierda_y_subiendo+8 (8)
  58+ 9FD3              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  59+ 9FD3              ;                               Izquierda_y_subiendo+8 (8)
  60+ 9FD3              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  61+ 9FD3              ;                               Izquierda_y_subiendo+8 (8)
  62+ 9FD3              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  63+ 9FD3              ;                               Izquierda_y_subiendo+8 (7)
  64+ 9FD3              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  65+ 9FD3              ;                               Izquierda_y_subiendo+8 (7)
  66+ 9FD3              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  67+ 9FD3              ;                               Izquierda_y_subiendo+8 (7)
  68+ 9FD3
  69+ 9FD3
  70+ 9FD3
  71+ 9FD3
  72+ 9FD3
  73+ 9FD3              ;    ld bc,Derecha_y_subiendo+2
  74+ 9FD3              ;    ld hl,(Puntero_mov)
  75+ 9FD3              ;    ld a,c
  76+ 9FD3              ;    cp l
  77+ 9FD3              ;    jr nz,3F
  78+ 9FD3
  79+ 9FD3              ;    jr $
  80+ 9FD3
  81+ 9FD3              ;    ld a,(Coordenada_X)
  82+ 9FD3              ;    sub 4
  83+ 9FD3              ;    jr z,4F
  84+ 9FD3
  85+ 9FD3              ;    ld a,(Coordenada_y)                 ; $08 - $0b
  86+ 9FD3
  87+ 9FD3              ;    ld b,a
  88+ 9FD3              ;    ld hl,Derecha_y_subiendo+7
  89+ 9FD3              ;    ld a,(hl)
  90+ 9FD3              ;    sub b
  91+ 9FD3              ;    ld (hl),a
  92+ 9FD3
  93+ 9FD3
  94+ 9FD3 CD 7D A0         call Aplica_desplazamiento
  95+ 9FD6
  96+ 9FD6 21 23 8C         ld hl,Repetimos_desplazamiento
  97+ 9FD9 35               dec (hl)
  98+ 9FDA C0               ret nz
  99+ 9FDB
 100+ 9FDB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 101+ 9FDB              ; Hay que volver a ejecutar este desplazamiento ???.
 102+ 9FDB              ; Analiza (Cola_de_desplazamiento).
 103+ 9FDB
 104+ 9FDB 3A 26 8C     Cola ld a,(Cola_de_desplazamiento)
 105+ 9FDE A7               and a
 106+ 9FDF CC D2 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 107+ 9FE2 28 30            jr z,Reinicia_el_movimiento
 108+ 9FE4
 109+ 9FE4 FE FF            cp $ff
 110+ 9FE6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 111+ 9FE8
 112+ 9FE8 FE FE            cp $fe
 113+ 9FEA CC 57 A0         call z,Fijamos_bucle
 114+ 9FED 28 25            jr z,Reinicia_el_movimiento
 115+ 9FEF
 116+ 9FEF FE FD            cp $fd
 117+ 9FF1 20 11            jr nz,1F
 118+ 9FF3
 119+ 9FF3              ; ---
 120+ 9FF3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 121+ 9FF3
 122+ 9FF3 3A F6 8B         ld a,(Ctrl_2)
 123+ 9FF6 CB 5F            bit 3,a
 124+ 9FF8 20 1A            jr nz,Reinicia_el_movimiento
 125+ 9FFA
 126+ 9FFA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 127+ 9FFA
 128+ 9FFA 21 F6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 129+ 9FFD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 130+ 9FFF
 131+ 9FFF CD 68 A0         call Inicia_Repetimos_movimiento
 132+ A002 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 133+ A004              ; ---
 134+ A004
 135+ A004 FE 01        1 cp 1
 136+ A006 CA 41 A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 137+ A009
 138+ A009 3D               dec a
 139+ A00A 32 26 8C         ld (Cola_de_desplazamiento),a
 140+ A00D
 141+ A00D 3A 24 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 142+ A010 32 23 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 143+ A013              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 144+ A013 C9               ret
 145+ A014
 146+ A014              Reinicia_el_movimiento
 147+ A014
 148+ A014 3A F6 8B         ld a,(Ctrl_2)
 149+ A017 CB 5F            bit 3,a
 150+ A019 28 1B            jr z,2F
 151+ A01B
 152+ A01B              ; (Cola_de_desplazamiento)="254".
 153+ A01B
 154+ A01B 21 25 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 155+ A01E 35               dec (hl)
 156+ A01F 20 15            jr nz,2F
 157+ A021
 158+ A021              ; Fin de las repeticiones del último movimiento.
 159+ A021
 160+ A021 21 F6 8B         ld hl,Ctrl_2
 161+ A024 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 162+ A026
 163+ A026 2A 1D 8C         ld hl,(Puntero_mov)
 164+ A029 23               inc hl
 165+ A02A 23               inc hl
 166+ A02B 23               inc hl
 167+ A02C 22 1D 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 168+ A02F              ;                                                               ; _ para ejecutar su mandato. :)
 169+ A02F 7E               ld a,(hl)
 170+ A030 32 26 8C         ld (Cola_de_desplazamiento),a
 171+ A033
 172+ A033 C3 DB 9F         jp Cola
 173+ A036
 174+ A036 CD 73 A0     2 call Inicia_Puntero_mov
 175+ A039
 176+ A039 21 F6 8B         ld hl,Ctrl_2
 177+ A03C CB 96            res 2,(hl)
 178+ A03E
 179+ A03E C3 B1 9F         jp Movimiento
 180+ A041
 181+ A041              Siguiente_desplazamiento
 182+ A041
 183+ A041              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 184+ A041              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 185+ A041
 186+ A041 21 F6 8B         ld hl,Ctrl_2
 187+ A044 CB 96            res 2,(hl)
 188+ A046
 189+ A046 2A 1D 8C         ld hl,(Puntero_mov)
 190+ A049 23               inc hl
 191+ A04A 23               inc hl
 192+ A04B 22 1D 8C         ld (Puntero_mov),hl
 193+ A04E
 194+ A04E 7E               ld a,(hl)
 195+ A04F A7               and a
 196+ A050 CC D2 A0         call z,Incrementa_Puntero_indice_mov
 197+ A053 CA 14 A0         jp z,Reinicia_el_movimiento
 198+ A056
 199+ A056 C9               ret
 200+ A057
 201+ A057              ; Subrutinas -----------------------------------------
 202+ A057              ; ---------- --------- --------- ---------- ----------
 203+ A057              ;
 204+ A057              ;   24/07/23
 205+ A057              ;
 206+ A057              ;   Fijamos_bucle
 207+ A057              ;
 208+ A057              ;
 209+ A057
 210+ A057              Fijamos_bucle
 211+ A057
 212+ A057 3A 21 8C         ld a,(Incrementa_puntero)
 213+ A05A 3C               inc a
 214+ A05B 32 22 8C         ld (Incrementa_puntero_backup),a
 215+ A05E
 216+ A05E CD D2 A0         call Incrementa_Puntero_indice_mov
 217+ A061 2A 1B 8C         ld hl,(Puntero_indice_mov)
 218+ A064 22 1F 8C         ld (Puntero_indice_mov_bucle),hl
 219+ A067 C9               ret
 220+ A068
 221+ A068              ; ---------- --------- --------- ---------- ----------
 222+ A068              ;
 223+ A068              ;   07/7/23
 224+ A068              ;
 225+ A068              ;   Inicia_Repetimos_movimiento
 226+ A068              ;
 227+ A068              ;
 228+ A068
 229+ A068              Inicia_Repetimos_movimiento
 230+ A068
 231+ A068              ; Iniciamos (Repetimos_movimiento).
 232+ A068
 233+ A068 DD 2A 1D 8C      ld ix,(Puntero_mov)
 234+ A06C DD 7E 02         ld a,(ix+2)
 235+ A06F 32 25 8C         ld (Repetimos_movimiento),a
 236+ A072
 237+ A072 C9               ret
 238+ A073
 239+ A073              ; ---------- --------- --------- ---------- ----------
 240+ A073              ;
 241+ A073              ;   26/6/23
 242+ A073              ;
 243+ A073              ;   Inicia_Puntero_mov
 244+ A073              ;
 245+ A073              ;
 246+ A073
 247+ A073 2A 1B 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 248+ A076 CD 68 91         call Extrae_address
 249+ A079 22 1D 8C         ld (Puntero_mov),hl
 250+ A07C C9               ret
 251+ A07D
 252+ A07D              ; ---------- --------- --------- ---------- ----------
 253+ A07D              ;
 254+ A07D              ;   27/06/23
 255+ A07D              ;
 256+ A07D              ;   Aplica_movimiento.
 257+ A07D
 258+ A07D              Aplica_desplazamiento
 259+ A07D
 260+ A07D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 261+ A07D
 262+ A07D 2A 1D 8C         ld hl,(Puntero_mov)
 263+ A080
 264+ A080 7E               ld a,(hl)
 265+ A081 E6 F0            and $f0
 266+ A083 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 267+ A084
 268+ A084 CB 7E            bit 7,(hl)
 269+ A086 28 03            jr z,1F
 270+ A088 CD 65 9C         call Mov_up
 271+ A08B
 272+ A08B 2A 1D 8C     1 ld hl,(Puntero_mov)
 273+ A08E CB 76            bit 6,(hl)
 274+ A090 28 03            jr z,2F
 275+ A092 CD 2C 9C         call Mov_down
 276+ A095
 277+ A095 2A 1D 8C     2 ld hl,(Puntero_mov)
 278+ A098 CB 6E            bit 5,(hl)
 279+ A09A 28 03            jr z,3F
 280+ A09C CD CB 9D         call Mov_left
 281+ A09F
 282+ A09F 2A 1D 8C     3 ld hl,(Puntero_mov)
 283+ A0A2 CB 66            bit 4,(hl)
 284+ A0A4 C8               ret z
 285+ A0A5 CD A8 9C         call Mov_right
 286+ A0A8
 287+ A0A8 C9               ret
 288+ A0A9
 289+ A0A9              ; ---------- --------- --------- ---------- ----------
 290+ A0A9              ;
 291+ A0A9              ;   26/06/23
 292+ A0A9              ;
 293+ A0A9              ;   Ajusta_velocidad_desplazamiento.
 294+ A0A9
 295+ A0A9              Ajusta_velocidad_desplazamiento
 296+ A0A9
 297+ A0A9              ; 1er byte de la cadena de movimiento.
 298+ A0A9              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 299+ A0A9
 300+ A0A9 CD C7 A0         call Extrae_nibble_alto
 301+ A0AC
 302+ A0AC 32 11 8C         ld (Vel_up),a
 303+ A0AF 79               ld a,c
 304+ A0B0 E6 0F            and $0f
 305+ A0B2 32 12 8C         ld (Vel_down),a
 306+ A0B5
 307+ A0B5              ; Saltamos al 2º byte de la cadena de movimiento.
 308+ A0B5              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 309+ A0B5
 310+ A0B5 23               inc hl
 311+ A0B6 CD C7 A0         call Extrae_nibble_alto
 312+ A0B9
 313+ A0B9 32 0F 8C         ld (Vel_left),a
 314+ A0BC 79               ld a,c
 315+ A0BD E6 0F            and $0f
 316+ A0BF 32 10 8C         ld (Vel_right),a
 317+ A0C2
 318+ A0C2              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 319+ A0C2
 320+ A0C2 23               inc hl
 321+ A0C3 22 1D 8C         ld (Puntero_mov),hl
 322+ A0C6 C9               ret
 323+ A0C7
 324+ A0C7 06 04        Extrae_nibble_alto ld b,4
 325+ A0C9 7E               ld a,(hl)
 326+ A0CA 4F               ld c,a
 327+ A0CB E6 F0            and $f0
 328+ A0CD CB 3F        1 srl a
 329+ A0CF 10 FC            djnz 1B
 330+ A0D1 C9               ret
 331+ A0D2
 332+ A0D2              ; ---------- --------- --------- ---------- ----------
 333+ A0D2              ;
 334+ A0D2              ;   5/7/23
 335+ A0D2              ;
 336+ A0D2              ;   Incrementa_Puntero_indice_mov
 337+ A0D2
 338+ A0D2              Incrementa_Puntero_indice_mov
 339+ A0D2
 340+ A0D2 21 21 8C         ld hl,Incrementa_puntero
 341+ A0D5 34               inc (hl)
 342+ A0D6
 343+ A0D6 2A 1B 8C         ld hl,(Puntero_indice_mov)
 344+ A0D9 01 02 00         ld bc,2
 345+ A0DC A7               and a
 346+ A0DD 09               add hl,bc
 347+ A0DE 22 1B 8C         ld (Puntero_indice_mov),hl
 348+ A0E1
 349+ A0E1 7E               ld a,(hl)
 350+ A0E2 A7               and a
 351+ A0E3
 352+ A0E3              ;! STOP. Fin del patrón de movimiento de la entidad.
 353+ A0E3
 354+ A0E3              ;    jr z,$
 355+ A0E3
 356+ A0E3              ;! Reinicia el Patrón de movimiento.
 357+ A0E3
 358+ A0E3 CC E8 A0         call z,Inicializa_Puntero_indice_mov_2
 359+ A0E6
 360+ A0E6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 361+ A0E7
 362+ A0E7 C9               ret
 363+ A0E8
 364+ A0E8              ; ---------- --------- --------- ---------- ----------
 365+ A0E8              ;
 366+ A0E8              ;   15/01/24
 367+ A0E8              ;
 368+ A0E8              ;   Inicializa_Puntero_indice_mov
 369+ A0E8
 370+ A0E8              Inicializa_Puntero_indice_mov_2
 371+ A0E8
 372+ A0E8              ; Existe etiqueta de bucle principal???
 373+ A0E8
 374+ A0E8 2A 1F 8C         ld hl,(Puntero_indice_mov_bucle)
 375+ A0EB 24               inc h
 376+ A0EC 25               dec h
 377+ A0ED 28 05            jr z,2F
 378+ A0EF
 379+ A0EF 22 1B 8C         ld (Puntero_indice_mov),hl
 380+ A0F2 18 14            jr 3F
 381+ A0F4
 382+ A0F4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 383+ A0F4
 384+ A0F4 3A 21 8C     2 ld a,(Incrementa_puntero)
 385+ A0F7 47               ld b,a
 386+ A0F8
 387+ A0F8 2A 1B 8C         ld hl,(Puntero_indice_mov)
 388+ A0FB 2B           1 dec hl
 389+ A0FC 2B               dec hl
 390+ A0FD 10 FC            djnz 1B
 391+ A0FF 22 1B 8C         ld (Puntero_indice_mov),hl
 392+ A102
 393+ A102 AF               xor a
 394+ A103 32 21 8C         ld (Incrementa_puntero),a
 395+ A106 18 06            jr 4F
 396+ A108
 397+ A108 3A 22 8C     3 ld a,(Incrementa_puntero_backup)
 398+ A10B 32 21 8C         ld (Incrementa_puntero),a
 399+ A10E C9           4 ret
 400+ A10F
 401+ A10F              ; ----------------------------------------------------------------------
 402+ A10F              ;
 403+ A10F              ;   24/11/24
 404+ A10F              ;
 405+ A10F              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 406+ A10F
 407+ A10F DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 408+ A112 CD F3 94         call Calcula_salto_en_BC
 409+ A115 21 13 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 410+ A118 A7               and a
 411+ A119 ED 4A            adc hl,bc
 412+ A11B C9               ret
 413+ A11C
 414+ A11C              ; ----------------------------------------------------------------------
 415+ A11C              ;
 416+ A11C              ;   24/11/24
 417+ A11C              ;
 418+ A11C              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 419+ A11C              ;
 420+ A11C              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 421+ A11C
 422+ A11C 4E           Transfiere_datos_de_contadores ld c,(hl)
 423+ A11D 23               inc hl
 424+ A11E 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 425+ A11F DD 71 09         ld (ix+9),c
 426+ A122 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 427+ A125 C9               ret
 428+ A126
# file closed: Movimiento.asm
2294  A126              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A126              ; --------------------------------------------------------------------------------------
   2+ A126              ;
   3+ A126              ;   25/10/24
   4+ A126              ;
   5+ A126
   6+ A126              Pinta_disparos_Entidades
   7+ A126
   8+ A126 ED 73 39 8C      ld (Stack),sp
   9+ A12A ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A12E
  11+ A12E 3E 02            ld a,2
  12+ A130 08               ex af,af
  13+ A131
  14+ A131 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A133              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A133              ;                                     _ No encontraría "0".
  17+ A133 FD E1        4 pop iy
  18+ A135 D1               pop de                          ; 1er .db IYL
  19+ A136              ;                                   ; 2º  .db IYH
  20+ A136              ;                                   ; 3er .db E.
  21+ A136              ;   Album vacío ???
  22+ A136
  23+ A136 FD 7D            ld a,iyl
  24+ A138 FD 84            add iyh
  25+ A13A 83               add e
  26+ A13B 28 1F            jr z,1F
  27+ A13D
  28+ A13D              ;   Imprime album, (contiene datos).
  29+ A13D
  30+ A13D 3B               dec sp
  31+ A13E
  32+ A13E E1               pop hl                          ; Puntero de impresión en HL.
  33+ A13F
  34+ A13F              ; Imprime el 1er scanline del disparo.
  35+ A13F
  36+ A13F FD 7D            ld a,iyl
  37+ A141 AE               xor (hl)
  38+ A142 77               ld (hl),a
  39+ A143
  40+ A143 2C               inc l
  41+ A144
  42+ A144 FD 7C            ld a,iyh
  43+ A146 AE               xor (hl)
  44+ A147 77               ld (hl),a
  45+ A148
  46+ A148 2C               inc l
  47+ A149
  48+ A149 7B               ld a,e
  49+ A14A AE               xor (hl)
  50+ A14B 77               ld (hl),a
  51+ A14C
  52+ A14C              ; Imprime el 2º scanline del disparo.
  53+ A14C
  54+ A14C E1               pop hl
  55+ A14D
  56+ A14D FD 7D            ld a,iyl
  57+ A14F AE               xor (hl)
  58+ A150 77               ld (hl),a
  59+ A151
  60+ A151 2C               inc l
  61+ A152
  62+ A152 FD 7C            ld a,iyh
  63+ A154 AE               xor (hl)
  64+ A155 77               ld (hl),a
  65+ A156
  66+ A156 2C               inc l
  67+ A157
  68+ A157 7B               ld a,e
  69+ A158 AE               xor (hl)
  70+ A159 77               ld (hl),a
  71+ A15A
  72+ A15A 10 D7            djnz 4B
  73+ A15C
  74+ A15C 08           1 ex af,af
  75+ A15D 3D               dec a
  76+ A15E 20 05            jr nz,2F
  77+ A160
  78+ A160 ED 7B 39 8C      ld sp,(Stack)
  79+ A164 C9               ret
  80+ A165
  81+ A165 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A169 08               ex af,af
  83+ A16A 18 C5            jr 3B
  84+ A16C
  85+ A16C              ; --------------------------------------------------------------------------------------
  86+ A16C              ;
  87+ A16C              ;   2/12/24
  88+ A16C              ;
  89+ A16C
  90+ A16C              Motor_de_disparos_entidades
  91+ A16C
  92+ A16C 3A 51 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A16F FE 07            cp 7
  94+ A171 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A172
  96+ A172 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A174 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ A177
  99+ A177 CD 68 91     1 call Extrae_address
 100+ A17A 1C               inc e
 101+ A17B 1C               inc e
 102+ A17C ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A180
 104+ A180               ; Caja vacía ???
 105+ A180
 106+ A180 2D               dec l
 107+ A181 7E               ld a,(hl)
 108+ A182 A7               and a
 109+ A183 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A185
 111+ A185              ; --- Trabajamos con caja:
 112+ A185
 113+ A185 2C               inc l
 114+ A186
 115+ A186              ; --- Existe posibilidad de impacto ???
 116+ A186
 117+ A186 3A 8A 8C         ld a,(Shield)
 118+ A189 A7               and a
 119+ A18A 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A18C
 121+ A18C CB 46            bit 0,(hl)
 122+ A18E C4 CE A1         call nz, Comprueba_impacto_con_Amadeus
 123+ A191 20 37            jr nz,3F
 124+ A193
 125+ A193 CD 55 A2     6 call Rota_disparo_si_procede
 126+ A196
 127+ A196              ; ------------------------------------------------------------
 128+ A196
 129+ A196 2D               dec l
 130+ A197 2D               dec l
 131+ A198
 132+ A198 CD 68 91         call Extrae_address
 133+ A19B
 134+ A19B              ;   (Puntero_de_impresion) del disparo en HL
 135+ A19B              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A19B
 137+ A19B 3A 63 8C         ld a,(Ctrl_5)
 138+ A19E CB 57            bit 2,a
 139+ A1A0 28 09            jr z,4F
 140+ A1A2
 141+ A1A2 CB 97            res 2,a
 142+ A1A4 32 63 8C         ld (Ctrl_5),a
 143+ A1A7 2C               inc l
 144+ A1A8 2C               inc l
 145+ A1A9 18 0C            jr 5F
 146+ A1AB
 147+ A1AB CB 5F        4 bit 3,a
 148+ A1AD 28 08            jr z,5F
 149+ A1AF
 150+ A1AF CB 9F            res 3,a
 151+ A1B1 32 63 8C         ld (Ctrl_5),a
 152+ A1B4 2D               dec l
 153+ A1B5 2D               dec l
 154+ A1B6 2D               dec l
 155+ A1B7
 156+ A1B7              ; ---------------------------------------------------------------------
 157+ A1B7
 158+ A1B7              ;! Velocidad del disparo de entidades.
 159+ A1B7
 160+ A1B7 CD E6 9B     5 call NextScan
 161+ A1BA CD E6 9B         call NextScan
 162+ A1BD
 163+ A1BD              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A1BD
 165+ A1BD CD 32 A2         call Fin_de_disparo_de_entidad
 166+ A1C0
 167+ A1C0 EB               ex de,hl
 168+ A1C1
 169+ A1C1 73               ld (hl),e
 170+ A1C2 23               inc hl
 171+ A1C3 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A1C4
 173+ A1C4 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A1C7 18 02            jr 2F
 175+ A1C9
 176+ A1C9 C9               ret
 177+ A1CA
 178+ A1CA EB           3 ex de,hl
 179+ A1CB 10 AA        2 djnz 1B
 180+ A1CD
 181+ A1CD C9               ret
 182+ A1CE
 183+ A1CE              ; ------------- ------------- ------------
 184+ A1CE              ;
 185+ A1CE              ;   1/11/24
 186+ A1CE
 187+ A1CE              Comprueba_impacto_con_Amadeus
 188+ A1CE
 189+ A1CE              ;   El disparo se encuentra en zona de Amadeus.
 190+ A1CE              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A1CE
 192+ A1CE              ;   Modificamos registros, así que guardamos ...
 193+ A1CE
 194+ A1CE C5               push bc
 195+ A1CF E5               push hl
 196+ A1D0 D5               push de
 197+ A1D1
 198+ A1D1 2D               dec l
 199+ A1D2 2D               dec l
 200+ A1D3
 201+ A1D3 CD 68 91         call Extrae_address
 202+ A1D6
 203+ A1D6 3A AF 89         ld a,(CX_Amadeus)
 204+ A1D9 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A1DA
 206+ A1DA 7D               ld a,l
 207+ A1DB E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A1DD
 209+ A1DD 06 03            ld b,3
 210+ A1DF
 211+ A1DF B9           1 cp c
 212+ A1E0 28 15            jr z,Coincidencia
 213+ A1E2 0C               inc c
 214+ A1E3 10 FA            djnz 1B
 215+ A1E5
 216+ A1E5 0D               dec c
 217+ A1E6 0D               dec c
 218+ A1E7 0D               dec c
 219+ A1E8
 220+ A1E8 3C               inc a
 221+ A1E9 B9               cp c
 222+ A1EA 28 0B            jr z,Coincidencia
 223+ A1EC
 224+ A1EC 3C               inc a
 225+ A1ED B9               cp c
 226+ A1EE 28 07            jr z,Coincidencia
 227+ A1F0
 228+ A1F0 D1           2 pop de
 229+ A1F1 E1               pop hl
 230+ A1F2 C1               pop bc
 231+ A1F3
 232+ A1F3              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A1F3
 234+ A1F3 CB 86            res 0,(hl)
 235+ A1F5 AF               xor a                       ; Z before RET.
 236+ A1F6 C9               ret
 237+ A1F7
 238+ A1F7              Coincidencia
 239+ A1F7
 240+ A1F7              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A1F7              ;   Existe posibilidad de impacto.
 242+ A1F7              ;   Vamos a averiguarlo ...
 243+ A1F7
 244+ A1F7 1D               dec e
 245+ A1F8 1D               dec e
 246+ A1F9 1D               dec e
 247+ A1FA
 248+ A1FA              ; DE en Puntero_objeto del disparo.
 249+ A1FA              ; HL en Puntero_de_impresión del disparo.
 250+ A1FA
 251+ A1FA              ; Comparador:
 252+ A1FA
 253+ A1FA 06 03            ld b,3
 254+ A1FC
 255+ A1FC 1A           3 ld a,(de)
 256+ A1FD 4F               ld c,a
 257+ A1FE A6               and (hl)
 258+ A1FF B9               cp c
 259+ A200 20 06            jr nz,Amadeus_impactado
 260+ A202
 261+ A202 2C               inc l
 262+ A203 1C               inc e
 263+ A204
 264+ A204 10 F6            djnz 3B
 265+ A206
 266+ A206 18 E8            jr 2B
 267+ A208
 268+ A208              Amadeus_impactado
 269+ A208
 270+ A208              ; Borramos disparo.
 271+ A208
 272+ A208              ;   Exclusion.
 273+ A208
 274+ A208 D1               pop de
 275+ A209 E1               pop hl
 276+ A20A
 277+ A20A E5               push hl
 278+ A20B D5               push de
 279+ A20C
 280+ A20C CD C0 A2         call Borra_6_bytes
 281+ A20F
 282+ A20F 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A212 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A213
 285+ A213              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A213
 287+ A213 21 B2 89         ld hl,Impacto_Amadeus
 288+ A216 36 01            ld (hl),1
 289+ A218
 290+ A218              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A218              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A218
 293+ A218 3A B3 89         ld a,(p.imp.amadeus)
 294+ A21B FE DE            cp $de
 295+ A21D 20 04            jr nz,1F
 296+ A21F
 297+ A21F 3D               dec a
 298+ A220 32 B3 89         ld (p.imp.amadeus),a
 299+ A223
 300+ A223              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A223
 302+ A223 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A226 21 B5 89         ld hl,Pamm_Amadeus
 304+ A229
 305+ A229 73               ld (hl),e
 306+ A22A 23               inc hl
 307+ A22B 72               ld (hl),d
 308+ A22C
 309+ A22C D1               pop de
 310+ A22D E1               pop hl
 311+ A22E C1               pop bc
 312+ A22F
 313+ A22F AF               xor a
 314+ A230 3C               inc a               ; NZ before RET.
 315+ A231 C9               ret
 316+ A232
 317+ A232              ; ------------- ------------- ------------
 318+ A232              ;
 319+ A232              ;   31/10/24
 320+ A232
 321+ A232              Fin_de_disparo_de_entidad
 322+ A232
 323+ A232              ; Estamos en zona de Amadeus ??
 324+ A232
 325+ A232 7C               ld a,h
 326+ A233 FE 54            cp $54
 327+ A235 38 0D            jr c,1F
 328+ A237
 329+ A237 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A238
 331+ A238 5D               ld e,l
 332+ A239 54               ld d,h
 333+ A23A
 334+ A23A 21 E0 57         ld hl,$57e0
 335+ A23D ED 52            sbc hl,de
 336+ A23F
 337+ A23F 38 6F            jr c,Elimina_disparo_entidad
 338+ A241
 339+ A241 6B               ld l,e
 340+ A242 62               ld h,d
 341+ A243
 342+ A243 D1               pop de
 343+ A244
 344+ A244 7C           1 ld a,h
 345+ A245 FE 50            cp $50
 346+ A247 D8               ret c
 347+ A248
 348+ A248 7D               ld a,l
 349+ A249 FE C0            cp $c0
 350+ A24B D8               ret c
 351+ A24C
 352+ A24C              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A24C              ; Así podremos comprobar si hay colisión más adelante.
 354+ A24C
 355+ A24C 1C               inc e
 356+ A24D 1C               inc e
 357+ A24E
 358+ A24E EB               ex de,hl
 359+ A24F CB C6            set 0,(hl)
 360+ A251 EB               ex de,hl
 361+ A252
 362+ A252 1D               dec e
 363+ A253 1D               dec e
 364+ A254
 365+ A254 C9               ret
 366+ A255
 367+ A255              ; ----------------------------------------------------------
 368+ A255              ;
 369+ A255              ;   08/10/24
 370+ A255
 371+ A255              ;   Estructura de un disparo de entidades.
 372+ A255
 373+ A255              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A255              ; 	defw 0											; Puntero de impresión.
 375+ A255              ;	defw 0											; Control.
 376+ A255
 377+ A255              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A255              ;   _de la entidad en el momento de disparar.
 379+ A255
 380+ A255              ;   El byte alto muestra la siguiente información:
 381+ A255              ;
 382+ A255              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A255              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A255              ;
 385+ A255              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A255              ;
 387+ A255              ;                        10xx ..... Izquierda.
 388+ A255              ;                        01xx ..... Derecha.
 389+ A255              ;                        00xx ..... Recto.
 390+ A255
 391+ A255              Rota_disparo_si_procede
 392+ A255
 393+ A255              ;   Nos situamos en el byte alto de (Control).
 394+ A255
 395+ A255 CB 76            bit 6,(hl)
 396+ A257 20 2D            jr nz,Rota_a_derecha
 397+ A259 CB 7E            bit 7,(hl)
 398+ A25B C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A25C
 400+ A25C              Rota_a_izq
 401+ A25C
 402+ A25C E5               push hl
 403+ A25D
 404+ A25D 7D               ld a,l
 405+ A25E D6 05            sub 5
 406+ A260 6F               ld l,a
 407+ A261
 408+ A261 E5               push hl
 409+ A262 FD E1            pop iy
 410+ A264
 411+ A264 A7               and a
 412+ A265
 413+ A265 FD CB 02 16      rl (iy+02)
 414+ A269 FD CB 01 16      rl (iy+01)
 415+ A26D FD CB 00 16      rl (iy+00)
 416+ A271
 417+ A271 30 3B            jr nc,Exit
 418+ A273
 419+ A273              ; Desplazamiento completo hasta Carry.
 420+ A273              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A273
 422+ A273 FD 36 02 03      ld (iy+02),$03
 423+ A277 FD 36 01 00      ld (iy+01),$00
 424+ A27B FD 36 00 00      ld (iy+00),$00
 425+ A27F
 426+ A27F 21 63 8C         ld hl,Ctrl_5
 427+ A282 CB DE            set 3,(hl)
 428+ A284
 429+ A284 18 28            jr Exit
 430+ A286
 431+ A286              Rota_a_derecha
 432+ A286
 433+ A286 E5               push hl
 434+ A287
 435+ A287 7D               ld a,l
 436+ A288 D6 05            sub 5
 437+ A28A 6F               ld l,a
 438+ A28B
 439+ A28B E5               push hl
 440+ A28C FD E1            pop iy
 441+ A28E
 442+ A28E A7               and a
 443+ A28F
 444+ A28F FD CB 00 1E      rr (iy+00)
 445+ A293 FD CB 01 1E      rr (iy+01)
 446+ A297 FD CB 02 1E      rr (iy+02)
 447+ A29B
 448+ A29B 30 11            jr nc,Exit
 449+ A29D
 450+ A29D              ; Desplazamiento completo hasta Carry.
 451+ A29D              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A29D
 453+ A29D FD 36 00 01      ld (iy+00),$01
 454+ A2A1 FD 36 01 80      ld (iy+01),$80
 455+ A2A5 FD 36 02 00      ld (iy+02),$00
 456+ A2A9
 457+ A2A9 21 63 8C         ld hl,Ctrl_5
 458+ A2AC CB D6            set 2,(hl)
 459+ A2AE
 460+ A2AE E1           Exit pop hl
 461+ A2AF C9               ret
 462+ A2B0
 463+ A2B0              ; ------------ ----------- ------------
 464+ A2B0              ;
 465+ A2B0              ;   25/9/24
 466+ A2B0
 467+ A2B0              Elimina_disparo_entidad
 468+ A2B0
 469+ A2B0 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A2B3 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A2B4
 472+ A2B4 E1               pop hl
 473+ A2B5 E5               push hl
 474+ A2B6
 475+ A2B6 2C               inc l
 476+ A2B7 2C               inc l
 477+ A2B8
 478+ A2B8 CD C0 A2         call Borra_6_bytes
 479+ A2BB
 480+ A2BB D1               pop de
 481+ A2BC
 482+ A2BC 21 00 00         ld hl,0
 483+ A2BF
 484+ A2BF C9               ret
 485+ A2C0
 486+ A2C0              ; ----- ----- ----- ----- -----
 487+ A2C0
 488+ A2C0              Borra_6_bytes
 489+ A2C0
 490+ A2C0 16 06            ld d,6                                                    ; Contador
 491+ A2C2 AF               xor a                                                     ; Borrador
 492+ A2C3 77           1 ld (hl),a
 493+ A2C4 2D               dec l
 494+ A2C5 15               dec d
 495+ A2C6 20 FB            jr nz,1B
 496+ A2C8
 497+ A2C8 C9               ret
 498+ A2C9
 499+ A2C9              ; --------------------------------------------------------------------------------------
 500+ A2C9              ;
 501+ A2C9              ;   12/10/24
 502+ A2C9              ;
 503+ A2C9
 504+ A2C9              Genera_datos_de_impresion_disparos_Entidades
 505+ A2C9
 506+ A2C9 3E 07            ld a,7
 507+ A2CB 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A2CC
 509+ A2CC              ; ---------------
 510+ A2CC
 511+ A2CC              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A2CC
 513+ A2CC 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A2CF
 515+ A2CF CD 68 91     1 call Extrae_address
 516+ A2D2
 517+ A2D2 13               inc de
 518+ A2D3 13               inc de
 519+ A2D4
 520+ A2D4 ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A2D8
 522+ A2D8 2D               dec l
 523+ A2D9 7E               ld a,(hl)
 524+ A2DA A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A2DB 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A2DD
 527+ A2DD              ; ----- ----- ----- -----
 528+ A2DD
 529+ A2DD 2D               dec l
 530+ A2DE CD 68 91         call Extrae_address
 531+ A2E1 E5               push hl
 532+ A2E2
 533+ A2E2 1D               dec e
 534+ A2E3
 535+ A2E3 EB               ex de,hl
 536+ A2E4
 537+ A2E4 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A2E5 2D               dec l
 539+ A2E6 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A2E7 2D               dec l
 541+ A2E8 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A2E9
 543+ A2E9 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A2EA
 545+ A2EA              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A2EA
 547+ A2EA FD 2A 4D 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A2EE FD 73 00         ld (iy+0),e
 549+ A2F1 FD 70 01         ld (iy+1),b
 550+ A2F4 FD 71 02         ld (iy+2),c
 551+ A2F7
 552+ A2F7 FD 75 03         ld (iy+3),l
 553+ A2FA FD 74 04         ld (iy+4),h
 554+ A2FD
 555+ A2FD CD E6 9B         call NextScan
 556+ A300
 557+ A300 FD 75 05         ld (iy+5),l
 558+ A303 FD 74 06         ld (iy+6),h
 559+ A306
 560+ A306 FD E5            push iy
 561+ A308 E1               pop hl
 562+ A309
 563+ A309 3E 07            ld a,7
 564+ A30B 85               add l
 565+ A30C 6F               ld l,a
 566+ A30D
 567+ A30D 22 4D 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A310
 569+ A310              ; ----- ----- ----- -----
 570+ A310
 571+ A310              Situa_en_siguiente_caja
 572+ A310
 573+ A310 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A311 3D               dec a
 575+ A312 C8               ret z
 576+ A313
 577+ A313 08               ex af,af
 578+ A314 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A317 18 B6            jr 1B
 580+ A319
 581+ A319              ; --------------------------------------------------------------------------------------
 582+ A319              ;
 583+ A319              ;   12/10/24
 584+ A319              ;
 585+ A319
 586+ A319              Genera_disparo_de_entidad_maldosa
 587+ A319
 588+ A319              ;   Estructura de un disparo de entidades.
 589+ A319
 590+ A319              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A319              ; 	defw 0											; Puntero de impresión.
 592+ A319              ;	defw 0											; Control.
 593+ A319
 594+ A319              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A319              ;   _de la entidad en el momento de disparar.
 596+ A319
 597+ A319              ;   El byte de control muestra la siguiente información:
 598+ A319
 599+ A319              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A319              ;
 601+ A319              ;                        10xx ..... Izquierda.
 602+ A319              ;                        01xx ..... Derecha.
 603+ A319              ;                        00xx ..... Recto.
 604+ A319
 605+ A319              ;*  Exclusiones.
 606+ A319
 607+ A319              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A319              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A319
 610+ A319 3A 51 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A31C A7               and a
 612+ A31D C8               ret z
 613+ A31E
 614+ A31E 3A EC 8B         ld a,(Coordenada_y)
 615+ A321 A7               and a
 616+ A322 C8               ret z
 617+ A323
 618+ A323 3D               dec a
 619+ A324 C8               ret z
 620+ A325
 621+ A325 FE 10            cp 16
 622+ A327 D0               ret nc
 623+ A328
 624+ A328              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A328              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A328              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A328
 628+ A328 21 53 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A32B 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A32C
 631+ A32C              ;   Decrementa el numero de disparos de entidades.
 632+ A32C
 633+ A32C 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A32F 35               dec (hl)
 635+ A330
 636+ A330 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A333
 638+ A333 CD 68 91     1 call Extrae_address
 639+ A336
 640+ A336 13               inc de
 641+ A337 13               inc de
 642+ A338
 643+ A338 ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A33C
 645+ A33C              ;   Comprobamos si la caja está vacía.
 646+ A33C
 647+ A33C 2D               dec l
 648+ A33D 7E               ld a,(hl)
 649+ A33E A7               and a
 650+ A33F 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A341 2C               inc l
 652+ A342
 653+ A342              ;   Caja vacía, vamos a generar un disparo.
 654+ A342              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A342
 656+ A342 CD 63 A3         call Genera_byte_inclinacion
 657+ A345
 658+ A345 7E               ld a,(hl)
 659+ A346 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A347
 661+ A347 2D               dec l
 662+ A348
 663+ A348 CD 7F A3         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A34B
 665+ A34B 70               ld (hl),b
 666+ A34C 2D               dec l
 667+ A34D 71               ld (hl),c
 668+ A34E
 669+ A34E 2D               dec l
 670+ A34F
 671+ A34F              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A34F
 673+ A34F FD 7E 02         ld a,(iy+02)
 674+ A352 77               ld (hl),a
 675+ A353 2D               dec l
 676+ A354
 677+ A354 FD 7E 01         ld a,(iy+01)
 678+ A357 77               ld (hl),a
 679+ A358 2D               dec l
 680+ A359
 681+ A359 FD 7E 00         ld a,(iy+00)
 682+ A35C 77               ld (hl),a
 683+ A35D
 684+ A35D C9               ret
 685+ A35E
 686+ A35E              ;   --- --- ---
 687+ A35E
 688+ A35E              Situa_en_siguiente_disparo
 689+ A35E
 690+ A35E 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A361 18 D0            jr 1B
 692+ A363
 693+ A363              ; --------------------------------------------------------------------------------------
 694+ A363              ;
 695+ A363              ;   09/10/24
 696+ A363              ;
 697+ A363
 698+ A363              Genera_byte_inclinacion
 699+ A363
 700+ A363              ; Determina tendencia del disparo.
 701+ A363
 702+ A363 3A AF 89         ld a,(CX_Amadeus)
 703+ A366 47               ld b,a
 704+ A367 3A EB 8B         ld a,(Coordenada_X)
 705+ A36A 90               sub b
 706+ A36B 38 07            jr c,Disparo_a_derecha
 707+ A36D
 708+ A36D FE 06        Disparo_a_izquierda cp 6
 709+ A36F
 710+ A36F D8               ret c
 711+ A370 C8               ret z
 712+ A371
 713+ A371 CB FE            set 7,(hl)
 714+ A373 C9               ret
 715+ A374
 716+ A374 47           Disparo_a_derecha ld b,a
 717+ A375 3E FF            ld a,$ff
 718+ A377 90               sub b
 719+ A378
 720+ A378 FE 05            cp 5
 721+ A37A
 722+ A37A D8               ret c
 723+ A37B C8               ret z
 724+ A37C
 725+ A37C CB F6            set 6,(hl)
 726+ A37E C9               ret
 727+ A37F
 728+ A37F              ; --------------------------------------------------------------------------------------
 729+ A37F              ;
 730+ A37F              ;   09/10/24
 731+ A37F              ;
 732+ A37F
 733+ A37F              Modifica_puntero_de_impresion
 734+ A37F
 735+ A37F              ;   Puntero de impresión del disparo en BC.
 736+ A37F
 737+ A37F E5               push hl
 738+ A380
 739+ A380 2A 66 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A383 CD E6 9B         call NextScan
 741+ A386
 742+ A386 4D               ld c,l
 743+ A387 44               ld b,h
 744+ A388
 745+ A388 E1               pop hl
 746+ A389
 747+ A389 08               ex af,af
 748+ A38A CB 77            bit 6,a
 749+ A38C 28 06            jr z,1F
 750+ A38E
 751+ A38E FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A392 0C               inc c
 753+ A393 C9               ret
 754+ A394
 755+ A394 CB 7F        1 bit 7,a
 756+ A396 28 F6            jr z,2B
 757+ A398
 758+ A398 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A39C 0D               dec c
 760+ A39D
 761+ A39D C9               ret
 762+ A39E
 763+ A39E              ; --------------------------------------------------------------------------------------
 764+ A39E              ;
 765+ A39E              ;   28/11/24
 766+ A39E              ;
 767+ A39E
 768+ A39E              Compara_con_coordenadas_de_disparo
 769+ A39E
 770+ A39E DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A3A1 47               ld b,a
 772+ A3A2 3A 6B 8C         ld a,(Coordenadas_disparo_certero)
 773+ A3A5 90               sub b
 774+ A3A6
 775+ A3A6              ; A = "0" ok
 776+ A3A6              ; A = "1" ok
 777+ A3A6
 778+ A3A6 28 08            jr z,Comprueba_coordenada_X
 779+ A3A8 3D               dec a
 780+ A3A9 28 05            jr z,Comprueba_coordenada_X
 781+ A3AB
 782+ A3AB              ; A = "$ff" ok
 783+ A3AB
 784+ A3AB FE FE            cp $fe
 785+ A3AD 28 01            jr z,Comprueba_coordenada_X
 786+ A3AF
 787+ A3AF C9               ret
 788+ A3B0
 789+ A3B0              Comprueba_coordenada_X
 790+ A3B0
 791+ A3B0 DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A3B3 47               ld b,a
 793+ A3B4 21 6C 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A3B7 7E               ld a,(hl)
 795+ A3B8 90               sub b
 796+ A3B9
 797+ A3B9              ; A = "0" ok
 798+ A3B9              ; A = "1" ok
 799+ A3B9
 800+ A3B9 28 09            jr z,Activa_Impacto_en_entidad
 801+ A3BB 3D               dec a
 802+ A3BC 28 06            jr z,Activa_Impacto_en_entidad
 803+ A3BE
 804+ A3BE              ; A = "2" ok
 805+ A3BE
 806+ A3BE 3D               dec a
 807+ A3BF 28 03            jr z,Activa_Impacto_en_entidad
 808+ A3C1
 809+ A3C1              ; A = "$ff"
 810+ A3C1
 811+ A3C1 FE FD            cp $fd
 812+ A3C3 C0               ret nz
 813+ A3C4
 814+ A3C4              Activa_Impacto_en_entidad
 815+ A3C4
 816+ A3C4              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A3C4
 818+ A3C4 3E 02            ld a,2
 819+ A3C6 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A3C9
 821+ A3C9              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A3C9
 823+ A3C9 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A3CC
 825+ A3CC DD 73 07         ld (ix+7),e
 826+ A3CF DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A3D2
 828+ A3D2              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A3D2
 830+ A3D2 21 68 8C         ld hl,Impacto2
 831+ A3D5 CB 9E            res 3,(hl)
 832+ A3D7
 833+ A3D7 C9               ret
 834+ A3D8
 835+ A3D8              ; --------------------------------------------------------------------------------------
 836+ A3D8              ;
 837+ A3D8              ;   13/10/24
 838+ A3D8              ;
 839+ A3D8
 840+ A3D8              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A3D8
 842+ A3D8              Limpia_album_de_pintado_disparos_Amadeus
 843+ A3D8
 844+ A3D8 2A 45 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A3DB 06 06            ld b,6
 846+ A3DD AF               xor a
 847+ A3DE 77           1 ld (hl),a
 848+ A3DF 2C               inc l
 849+ A3E0 10 FC            djnz 1B
 850+ A3E2
 851+ A3E2 C9               ret
 852+ A3E3
 853+ A3E3              ; --------------------------------------------------------------------------------------
 854+ A3E3              ;
 855+ A3E3              ;   29/09/24
 856+ A3E3              ;
 857+ A3E3
 858+ A3E3              Calcula_bytes_pintado_disparos
 859+ A3E3
 860+ A3E3 2A 49 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A3E6 45               ld b,l
 862+ A3E7 2A 4D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A3EA 7D               ld a,l
 864+ A3EB
 865+ A3EB 90               sub b
 866+ A3EC 32 4F 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A3EF
 868+ A3EF C9               ret
 869+ A3F0
 870+ A3F0              ; --------------------------------------------------------------------------------------
 871+ A3F0              ;
 872+ A3F0              ;   26/10/24
 873+ A3F0              ;
 874+ A3F0              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A3F0              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A3F0              ;   _disparos que el álbum del FRAME actual).
 877+ A3F0
 878+ A3F0              Limpia_album_de_pintado_disparos_entidades
 879+ A3F0
 880+ A3F0 21 50 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A3F3 7E               ld a,(hl)
 882+ A3F4 2D               dec l
 883+ A3F5 46               ld b,(hl)
 884+ A3F6 90               sub b
 885+ A3F7
 886+ A3F7 D8               ret c
 887+ A3F8 C8               ret z
 888+ A3F9
 889+ A3F9 F5               push af
 890+ A3FA 80               add b
 891+ A3FB 77               ld (hl),a
 892+ A3FC F1               pop af
 893+ A3FD
 894+ A3FD              ; Clean.
 895+ A3FD
 896+ A3FD 47           2 ld b,a
 897+ A3FE AF               xor a
 898+ A3FF 2A 4D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A402 77           1 ld (hl),a
 900+ A403 23               inc hl
 901+ A404 10 FC            djnz 1B
 902+ A406
 903+ A406 C9               ret
 904+ A407
 905+ A407              ; --------------------------------------------------------------------------------------
 906+ A407              ;
 907+ A407              ;   29/09/24
 908+ A407              ;
 909+ A407
 910+ A407              Motor_Disparos_Amadeus
 911+ A407
 912+ A407 21 1D 89         ld hl,Disparo_Amad+1
 913+ A40A
 914+ A40A 34               inc (hl)
 915+ A40B 35               dec (hl)
 916+ A40C
 917+ A40C C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A40D
 919+ A40D              ;   Esta caja contiene un disparo.
 920+ A40D
 921+ A40D CD 14 A4         call Consulta_Impacto
 922+ A410 CC 2D A4         call z,Mueve_disparo_Amadeus
 923+ A413
 924+ A413 C9               ret
 925+ A414
 926+ A414              ; ----------------------
 927+ A414              ;
 928+ A414              ;
 929+ A414              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A414              ;
 931+ A414              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A414
 933+ A414
 934+ A414              Consulta_Impacto
 935+ A414
 936+ A414              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A414              ;   _sea lo más coherente posible.
 938+ A414
 939+ A414 E5               push hl
 940+ A415 2B               dec hl
 941+ A416 CD 09 A5         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A419 E1               pop hl
 943+ A41A 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A41B
 945+ A41B C8               ret z
 946+ A41C
 947+ A41C 3A 68 8C         ld a,(Impacto2)
 948+ A41F CB DF            set 3,a
 949+ A421 32 68 8C         ld (Impacto2),a
 950+ A424
 951+ A424 E5               push hl
 952+ A425 CD F6 A4         call Genera_coordenadas_de_disparo_Amadeus
 953+ A428 E1               pop hl
 954+ A429 CD 46 A4         call Elimina_disparo_Amadeus
 955+ A42C
 956+ A42C C9               ret
 957+ A42D
 958+ A42D              ; ----------------------
 959+ A42D              ;
 960+ A42D              ;
 961+ A42D              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A42D
 963+ A42D              Mueve_disparo_Amadeus
 964+ A42D
 965+ A42D CD 68 91         call Extrae_address
 966+ A430
 967+ A430 CD F5 9B         call PreviousScan
 968+ A433 CD F5 9B         call PreviousScan
 969+ A436 CD F5 9B         call PreviousScan
 970+ A439 CD F5 9B         call PreviousScan
 971+ A43C
 972+ A43C              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A43C
 974+ A43C 7C               ld a,h
 975+ A43D D6 40            sub $40
 976+ A43F EB               ex de,hl
 977+ A440 38 04            jr c,Elimina_disparo_Amadeus
 978+ A442
 979+ A442               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A442
 981+ A442 73               ld (hl),e
 982+ A443 23               inc hl
 983+ A444 72               ld (hl),d
 984+ A445
 985+ A445 C9               ret
 986+ A446
 987+ A446              ; ----------------------
 988+ A446              ;
 989+ A446              ;   29/9/24
 990+ A446
 991+ A446              Elimina_disparo_Amadeus
 992+ A446
 993+ A446              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A446              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A446
 996+ A446              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A446              ;   	defw 0											; Puntero de impresión.
 998+ A446
 999+ A446 2B               dec hl
1000+ A447 2B               dec hl
1001+ A448
1002+ A448 AF               xor a
1003+ A449 77               ld (hl),a
1004+ A44A 23               inc hl
1005+ A44B 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A44C
1007+ A44C 23               inc hl
1008+ A44D 77               ld (hl),a
1009+ A44E 23               inc hl
1010+ A44F 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A450
1012+ A450 3E 01            ld a,1
1013+ A452 32 52 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A455
1015+ A455 CD D8 A3         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A458
1017+ A458 AF               xor a
1018+ A459 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A45A
1020+ A45A C9               ret
1021+ A45B
1022+ A45B              ; --------------------------------------------------------------------------------------
1023+ A45B              ;
1024+ A45B              ;   13/10/24
1025+ A45B              ;
1026+ A45B
1027+ A45B              Pinta_disparos_Amadeus
1028+ A45B
1029+ A45B 06 02            ld b,2
1030+ A45D ED 73 39 8C      ld (Stack),sp
1031+ A461 ED 7B 47 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A465 D1           3 pop de
1033+ A466 14               inc d
1034+ A467 15               dec d
1035+ A468 28 1C            jr z,1F
1036+ A46A E1               pop hl
1037+ A46B
1038+ A46B              Imprime_scanlines_en_pantalla
1039+ A46B
1040+ A46B              ; 1er scanline
1041+ A46B
1042+ A46B 1A               ld a,(de)
1043+ A46C AE               xor (hl)
1044+ A46D 77               ld (hl),a
1045+ A46E
1046+ A46E 1C               inc e
1047+ A46F 2C               inc l
1048+ A470
1049+ A470 1A               ld a,(de)
1050+ A471 AE               xor (hl)
1051+ A472 77               ld (hl),a
1052+ A473
1053+ A473 1D               dec e
1054+ A474 E1               pop hl
1055+ A475
1056+ A475              ; 2º scanline
1057+ A475
1058+ A475 1A               ld a,(de)
1059+ A476 AE               xor (hl)
1060+ A477 77               ld (hl),a
1061+ A478
1062+ A478 1C               inc e
1063+ A479 2C               inc l
1064+ A47A
1065+ A47A 1A               ld a,(de)
1066+ A47B AE               xor (hl)
1067+ A47C 77               ld (hl),a
1068+ A47D
1069+ A47D 1D               dec e
1070+ A47E
1071+ A47E 18 06            jr 1F
1072+ A480
1073+ A480 ED 7B 45 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A484 18 DF            jr 3B
1075+ A486 10 F8        1 djnz 2B
1076+ A488 ED 7B 39 8C      ld sp,(Stack)
1077+ A48C C9               ret
1078+ A48D
1079+ A48D              ; --------------------------------------------------------------------------------------
1080+ A48D              ;
1081+ A48D              ;   13/10/24
1082+ A48D              ;
1083+ A48D              ;   Modifica: HL,BC y DE.
1084+ A48D
1085+ A48D
1086+ A48D              Genera_datos_de_impresion_disparos_Amadeus
1087+ A48D
1088+ A48D ED 73 39 8C      ld (Stack),sp
1089+ A491 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A494 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A495
1092+ A495 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A496 15               dec d
1094+ A497
1095+ A497 28 0E            jr z,Salida
1096+ A499
1097+ A499              Genera_scanlines_de_disparo_Amadeus
1098+ A499
1099+ A499 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A49A              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A49A ED 7B 45 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A49E
1103+ A49E C1               pop bc
1104+ A49F C1               pop bc
1105+ A4A0 C1               pop bc
1106+ A4A1
1107+ A4A1 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A4A2 CD F5 9B         call PreviousScan
1109+ A4A5 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A4A6 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A4A7
1112+ A4A7              Salida
1113+ A4A7
1114+ A4A7 ED 7B 39 8C      ld sp,(Stack)
1115+ A4AB
1116+ A4AB C9               ret
1117+ A4AC
1118+ A4AC              ; --------------------------------------------------------------------------------------
1119+ A4AC              ;
1120+ A4AC              ;   12/09/24
1121+ A4AC              ;
1122+ A4AC
1123+ A4AC              Genera_disparo_Amadeus
1124+ A4AC
1125+ A4AC              ;*  Exclusiones.
1126+ A4AC
1127+ A4AC 3A 52 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A4AF A7               and a
1129+ A4B0 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A4B1
1131+ A4B1 3D               dec a
1132+ A4B2 32 52 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A4B5
1134+ A4B5              Define_puntero_objeto_disparo
1135+ A4B5
1136+ A4B5              ;   Inicializamos contador.
1137+ A4B5
1138+ A4B5 06 00            ld b,0
1139+ A4B7
1140+ A4B7 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A4BA 2C               inc l
1142+ A4BB
1143+ A4BB 3E 80            ld a,$80
1144+ A4BD BE               cp (hl)
1145+ A4BE 28 0D            jr z,1F
1146+ A4C0
1147+ A4C0 04               inc b
1148+ A4C1
1149+ A4C1 3E 60            ld a,$60
1150+ A4C3 BE               cp (hl)
1151+ A4C4 28 07            jr z,1F
1152+ A4C6
1153+ A4C6
1154+ A4C6 04               inc b
1155+ A4C7
1156+ A4C7 3E 18            ld a,$18
1157+ A4C9 BE               cp (hl)
1158+ A4CA 28 01            jr z,1F
1159+ A4CC
1160+ A4CC 04               inc b
1161+ A4CD
1162+ A4CD              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A4CD
1164+ A4CD              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A4CD
1166+ A4CD CD F5 9B     1 call PreviousScan
1167+ A4D0
1168+ A4D0 78               ld a,b
1169+ A4D1 CB 3F            srl a
1170+ A4D3 28 03            jr z,4F
1171+ A4D5
1172+ A4D5              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A4D5 E5               push hl
1174+ A4D6 18 02            jr 5F
1175+ A4D8 2D           4 dec l
1176+ A4D9 E5               push hl
1177+ A4DA              ; ---
1178+ A4DA
1179+ A4DA              ;   Calcula el Puntero_objeto del disparo.
1180+ A4DA
1181+ A4DA 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A4DD 04               inc b
1183+ A4DE 05               dec b
1184+ A4DF 28 04            jr z,2F
1185+ A4E1
1186+ A4E1              ;   Nos desplazamos por el índice de disparos.
1187+ A4E1
1188+ A4E1 2C           3 inc l
1189+ A4E2 2C               inc l
1190+ A4E3 10 FC            djnz 3B
1191+ A4E5
1192+ A4E5              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A4E5 CD 68 91     2 call Extrae_address
1194+ A4E8 E5               push hl
1195+ A4E9              ; ---
1196+ A4E9
1197+ A4E9              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A4E9              ; HL en el 1er .db de la caja.
1199+ A4E9
1200+ A4E9 21 1C 89         ld hl,Disparo_Amad
1201+ A4EC
1202+ A4EC 06 02            ld b,2
1203+ A4EE
1204+ A4EE D1           6 pop de
1205+ A4EF 73               ld (hl),e
1206+ A4F0 23               inc hl
1207+ A4F1 72               ld (hl),d
1208+ A4F2 23               inc hl
1209+ A4F3
1210+ A4F3 10 F9            djnz 6B
1211+ A4F5
1212+ A4F5 C9               ret
1213+ A4F6
1214+ A4F6              Genera_coordenadas_de_disparo_Amadeus
1215+ A4F6
1216+ A4F6              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A4F6              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A4F6              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A4F6
1220+ A4F6 CD 68 91         call Extrae_address
1221+ A4F9 CD 7A 95         call Genera_coordenadas
1222+ A4FC
1223+ A4FC 3D               dec a
1224+ A4FD
1225+ A4FD 21 6B 8C         ld hl,Coordenadas_disparo_certero
1226+ A500 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A501 23               inc hl
1228+ A502 3A EB 8B         ld a,(Coordenada_X)
1229+ A505 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A506
1231+ A506 AF               xor a
1232+ A507 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A508
1234+ A508 C9               ret
1235+ A509
1236+ A509              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A509              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A509              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A509
1240+ A509              ; ----------------------------------------------
1241+ A509              ;
1242+ A509              ;   27/08/24
1243+ A509              ;
1244+ A509              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A509              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A509
1247+ A509              Detecta_impacto_en_disparo_de_Amadeus
1248+ A509
1249+ A509              Extraccion_de_datos
1250+ A509
1251+ A509 13               inc de
1252+ A50A 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A50B
1254+ A50B 5E               ld e,(hl)
1255+ A50C 23               inc hl
1256+ A50D 56               ld d,(hl)
1257+ A50E
1258+ A50E 23               inc hl
1259+ A50F
1260+ A50F 4E               ld c,(hl)
1261+ A510 23               inc hl
1262+ A511 46               ld b,(hl)
1263+ A512
1264+ A512 C5               push bc
1265+ A513 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A514
1267+ A514              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A514
1269+ A514 CD F5 9B         call PreviousScan
1270+ A517 CD F5 9B         call PreviousScan
1271+ A51A
1272+ A51A              Detecta_impacto_
1273+ A51A
1274+ A51A 1A               ld a,(de)
1275+ A51B A6               and (hl)
1276+ A51C C0               ret nz
1277+ A51D
1278+ A51D 13               inc de
1279+ A51E 23               inc hl
1280+ A51F
1281+ A51F 1A               ld a,(de)
1282+ A520 A6               and (hl)
1283+ A521 C9               ret
1284+ A522
1285+ A522              ; -------------------------------------------------------------------------------------------------------------
1286+ A522              ;
1287+ A522              ;   25/11//24
1288+ A522              ;
1289+ A522              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A522              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A522              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A522              ;
1293+ A522              ;   MODIFICA: HL,DE,BC y A.
1294+ A522              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A522              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A522
1297+ A522              Colision_Entidad_Amadeus
1298+ A522
1299+ A522              ; Posible contacto de entidad con Amadeus. ?????
1300+ A522
1301+ A522              ; Exclusiones:
1302+ A522
1303+ A522 3A 8A 8C         ld a,(Shield)
1304+ A525 A7               and a
1305+ A526 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A527
1307+ A527 21 61 8C         ld hl,Ctrl_3
1308+ A52A CB 76            bit 6,(hl)
1309+ A52C C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A52D
1311+ A52D 21 68 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A530 CB 56            bit 2,(hl)
1313+ A532 C0               ret nz
1314+ A533
1315+ A533 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A536 FE 14        	cp $14
1317+ A538 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A539
1319+ A539 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A53C A7               and a
1321+ A53D C0               ret nz
1322+ A53E
1323+ A53E              Genera_coordenadas_X
1324+ A53E
1325+ A53E              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A53E              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A53E
1328+ A53E              ;   Limpiamos almacenes.
1329+ A53E
1330+ A53E              ;    call Limpia_Coordenadas_X
1331+ A53E
1332+ A53E              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A53E
1334+ A53E 21 6D 8C         ld hl,Coordenadas_X_Entidad
1335+ A541 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A544 CD 6A A5         call Guarda_coordenadas_X
1337+ A547
1338+ A547              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A547
1340+ A547 3A AF 89         ld a,(CX_Amadeus)
1341+ A54A CD 6A A5         call Guarda_coordenadas_X
1342+ A54D
1343+ A54D DD E5            push ix
1344+ A54F CD 7E A5         call Compara_coordenadas_X
1345+ A552 DD E1            pop ix
1346+ A554
1347+ A554 C0               ret nz
1348+ A555
1349+ A555 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A557 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A55A
1352+ A55A DD 7D            ld a,ixl
1353+ A55C C6 04            add 4
1354+ A55E DD 6F            ld ixl,a
1355+ A560
1356+ A560 DD 22 69 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A564
1358+ A564 21 68 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A567 CB D6            set 2,(hl)
1360+ A569
1361+ A569 C9               ret
1362+ A56A
1363+ A56A               ; ----- ----- ----- ----- -----
1364+ A56A
1365+ A56A 77           Guarda_coordenadas_X ld (hl),a
1366+ A56B 3C               inc a
1367+ A56C 2C               inc l
1368+ A56D 77               ld (hl),a
1369+ A56E 3C               inc a
1370+ A56F 2C               inc l
1371+ A570 77               ld (hl),a
1372+ A571 2C               inc l
1373+ A572 C9               ret
1374+ A573
1375+ A573 AF           Limpia_Coordenadas_X xor a
1376+ A574 06 06            ld b,6
1377+ A576 21 70 8C         ld hl,Coordenadas_X_Amadeus
1378+ A579 77           1 ld (hl),a
1379+ A57A 23               inc hl
1380+ A57B 10 FC            djnz 1B
1381+ A57D C9               ret
1382+ A57E
1383+ A57E              ; ----- ----- ----- ----- -----
1384+ A57E
1385+ A57E              Compara_coordenadas_X
1386+ A57E
1387+ A57E DD 21 6D 8C      ld ix,Coordenadas_X_Entidad
1388+ A582 DD 7E 00         ld a,(ix+0)
1389+ A585 CD 93 A5         call Comparando
1390+ A588 C8               ret z
1391+ A589
1392+ A589 3C               inc a
1393+ A58A CD A2 A5         call Comparando_1
1394+ A58D C8               ret z
1395+ A58E
1396+ A58E 3C               inc a
1397+ A58F CD A2 A5         call Comparando_1
1398+ A592 C9               ret
1399+ A593
1400+ A593              ; ----- ----- ----- ----- -----
1401+ A593              ;
1402+ A593              ;   4/12/23
1403+ A593              ;
1404+ A593              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A593
1406+ A593              Comparando
1407+ A593
1408+ A593 DD 2C            inc ixl
1409+ A595 DD 2C            inc ixl
1410+ A597 DD 2C            inc ixl
1411+ A599
1412+ A599 DD 46 00         ld b,(ix+0)
1413+ A59C DD 4E 01         ld c,(ix+1)
1414+ A59F DD 56 02         ld d,(ix+2)
1415+ A5A2
1416+ A5A2 B8           Comparando_1 cp b
1417+ A5A3 C8               ret z
1418+ A5A4 B9               cp c
1419+ A5A5 C8               ret z
1420+ A5A6 BA               cp d
1421+ A5A7 C9               ret
1422+ A5A8
1423+ A5A8              ; -----------------------------------------------------------------------
1424+ A5A8              ;
1425+ A5A8              ;   04/7/24
1426+ A5A8              ;
1427+ A5A8
1428+ A5A8              Detecta_colision_nave_entidad
1429+ A5A8
1430+ A5A8              ; Exclusiones:
1431+ A5A8
1432+ A5A8              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A5A8
1434+ A5A8 21 68 8C     	ld hl,Impacto2
1435+ A5AB CB 56        	bit 2,(hl)
1436+ A5AD C8           	ret z
1437+ A5AE
1438+ A5AE              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A5AE
1440+ A5AE 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A5B1 CD 68 91         call Extrae_address
1442+ A5B4 54               ld d,h
1443+ A5B5 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A5B6
1445+ A5B6 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A5B9 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A5BB FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A5BE
1449+ A5BE C5           1 push bc
1450+ A5BF 06 03            ld b,3
1451+ A5C1 E5               push hl
1452+ A5C2
1453+ A5C2              ; .db
1454+ A5C2
1455+ A5C2 1A           3 ld a,(de)
1456+ A5C3 A7               and a
1457+ A5C4 20 03            jr nz,4F
1458+ A5C6
1459+ A5C6 2C               inc l
1460+ A5C7 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A5C9
1462+ A5C9 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A5CB 28 04            jr z,2F
1464+ A5CD
1465+ A5CD              ; Impacto.
1466+ A5CD FD 2D            dec iyl
1467+ A5CF 28 22            jr z,5F
1468+ A5D1
1469+ A5D1 1C           2 inc e
1470+ A5D2 10 EE            djnz 3B
1471+ A5D4
1472+ A5D4 E1               pop hl
1473+ A5D5
1474+ A5D5              ; Hay salto de línea en el puntero de impresión ???
1475+ A5D5
1476+ A5D5 7C               ld a,h
1477+ A5D6 D6 57            sub $57
1478+ A5D8 20 0A            jr nz,6F
1479+ A5DA
1480+ A5DA              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A5DA
1482+ A5DA 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A5DD 3E 20            ld a,$20
1484+ A5DF A7               and a
1485+ A5E0 85               add l
1486+ A5E1 6F               ld l,a
1487+ A5E2 18 01            jr 7F
1488+ A5E4
1489+ A5E4 24           6 inc h
1490+ A5E5
1491+ A5E5 C1           7 pop bc
1492+ A5E6 10 D6            djnz 1B
1493+ A5E8
1494+ A5E8              ;   Fin de la comparativa.
1495+ A5E8
1496+ A5E8              ;   NO HAY COLISIÓN !!!!!.
1497+ A5E8              ;
1498+ A5E8              ;   .db (Impacto) de Amadeus a "0".
1499+ A5E8              ;   RES el bit2 de (Impacto2).
1500+ A5E8              ;
1501+ A5E8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A5E8              ;   Lo colocamos a "0".
1503+ A5E8
1504+ A5E8 21 68 8C         ld hl,Impacto2
1505+ A5EB CB 96            res 2,(hl)
1506+ A5ED 2A 69 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A5F0 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A5F2 C9               ret
1509+ A5F3
1510+ A5F3              ;   COLISIÓN !!!!!.
1511+ A5F3              ;
1512+ A5F3              ;   .db (Impacto) de Amadeus a "1".
1513+ A5F3              ;   SET el bit3 de (Impacto2).
1514+ A5F3              ;
1515+ A5F3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A5F3
1517+ A5F3 E1           5 pop hl
1518+ A5F4 C1               pop bc
1519+ A5F5
1520+ A5F5 21 B2 89         ld hl,Impacto_Amadeus
1521+ A5F8 36 01            ld (hl),1
1522+ A5FA 21 68 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A5FD CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A5FF
1525+ A5FF 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A602 2A 69 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A605
1528+ A605 23               inc hl
1529+ A606 23               inc hl
1530+ A607 23               inc hl
1531+ A608
1532+ A608 73               ld (hl),e
1533+ A609 23               inc hl
1534+ A60A 72               ld (hl),d
1535+ A60B
1536+ A60B              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A60B
1538+ A60B 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A60E 21 B5 89         ld hl,Pamm_Amadeus
1540+ A611
1541+ A611 73               ld (hl),e
1542+ A612 23               inc hl
1543+ A613 72               ld (hl),d
1544+ A614
1545+ A614 C9               ret
1546+ A615
1547+ A615
1548+ A615
# file closed: Disparo.asm
2295  A615
2296  A615              	SAVESNA "Pruebas.sna", START
2297  A615
2298  A615
2299  A615
2300  A615
# file closed: Banco_de_pruebas.asm
