# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 59 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 2A 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 8C 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 9C 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 03           Lives db 3
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD D7 94     	call Cls
 517  8CA2 CD 81 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD CE 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD EA 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3              ;	Inicia los álbumes de líneas.
 529  8CB3
 530  8CB3 CD CF 90     	call Inicia_albumes_de_lineas
 531  8CB6 CD DF 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CB9 CD EC 90     	call Inicia_albumes_de_disparos
 533  8CBC
 534  8CBC              ;	Inicia 1er Nivel.
 535  8CBC
 536  8CBC CD 30 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CBF CD FE 92     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CC2              ;														   _reponiendo entidades eliminadas.
 539  8CC2 CD 64 93     	call Prepara_Cajas_de_Entidades
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD C2 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD A6 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD 05 94     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 7D 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD AD 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD 08 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 8C 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE              ; Gestión de disparos.
 593  8CFE
 594  8CFE CD BF 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D01 CD 70 9F     	call Motor_de_disparos_entidades
 596  8D04 CD 05 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D07
 598  8D07              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D07              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D07              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D07
 602  8D07 CD A2 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0A
 604  8D0A              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0A
 606  8D0A 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0D 35           	dec (hl)
 608  8D0E CC 06 8E     	call z,Autoriza_disparo_de_entidades
 609  8D11
 610  8D11 2A 7F 8C     	ld hl,(Clock_next_entity)
 611  8D14 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D18 A7           	and a
 613  8D19 ED 42        	sbc hl,bc
 614  8D1B 20 16        	jr nz,1F
 615  8D1D
 616  8D1D              ; GESTIÓN DE ENTIDADES.
 617  8D1D
 618  8D1D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1D              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1D
 621  8D1D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1D
 625  8D1D 21 37 8C     	ld hl,Numero_parcial_de_entidades
 626  8D20 46           	ld b,(hl)
 627  8D21 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D24 B8           	cp b
 629  8D25 28 0C        	jr z,1F
 630  8D27 30 0A        	jr nc,1F
 631  8D29
 632  8D29              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D29
 634  8D29 3C           	inc a
 635  8D2A 32 38 8C     	ld (Entidades_en_curso),a
 636  8D2D
 637  8D2D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2D
 639  8D2D CD EA 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D30 CD 06 8F     	call Define_Clock_next_entity
 641  8D33
 642  8D33 3A 38 8C     1 ld a,(Entidades_en_curso)
 643  8D36 A7           	and a
 644  8D37 CA B1 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3A 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3B
 647  8D3B              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3B
 649  8D3B              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3B              ;
 651  8D3B              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3B
 653  8D3B 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3E 22 61 8C     	ld (India_SP),hl
 655  8D41
 656  8D41 21 65 8C     	ld hl,Ctrl_3
 657  8D44 CB D6        	set 2,(hl)
 658  8D46 CD 94 8E     	call Change
 659  8D49
 660  8D49 C5           2 push bc 												; Nº de entidades en curso.
 661  8D4A
 662  8D4A CD 59 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 663  8D4D ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
 664  8D51
 665  8D51              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 666  8D51
 667  8D51              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 668  8D51              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 669  8D51
 670  8D51 3A 6C 8C     	ld a,(Impacto2)
 671  8D54 CB 5F        	bit 3,a
 672  8D56 C4 9C A1     	call nz,Compara_con_coordenadas_de_disparo
 673  8D59
 674  8D59 3A F2 8B     	ld a,(Impacto)
 675  8D5C CB 4F        	bit 1,a
 676  8D5E C4 69 92     	call nz,Genera_explosion
 677  8D61 20 31        	jr nz,Gestiona_siguiente_entidad
 678  8D63
 679  8D63 3A F2 8B     	ld a,(Impacto)
 680  8D66 A7           	and a
 681  8D67 28 0C        	jr z,3F
 682  8D69
 683  8D69              ; IMPACTO en entidad por colisión con Amadeus.
 684  8D69
 685  8D69              ; 5/7/24
 686  8D69              ; Nota importante:
 687  8D69              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 688  8D69              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 689  8D69              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 690  8D69
 691  8D69 3A BB 89     	ld a,(Impacto_Amadeus)
 692  8D6C A7           	and a
 693  8D6D C4 69 92     	call nz,Genera_explosion
 694  8D70 20 22        	jr nz,Gestiona_siguiente_entidad
 695  8D72
 696  8D72              ; Falsa colisión !!!
 697  8D72
 698  8D72 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 699  8D75
 700  8D75              ; -------------------------------------------
 701  8D75
 702  8D75 CD 4A 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 703  8D78 CD 72 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 704  8D7B CD 68 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 705  8D7E CD 17 95     	call Genera_datos_de_impresion
 706  8D81 CD 28 94     	call Decrementa_Contador_de_mov_masticados
 707  8D84
 708  8D84              ; -------------------------------------------
 709  8D84
 710  8D84              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 711  8D84
 712  8D84 2A F3 8B     	ld hl,(Puntero_de_impresion)
 713  8D87 CD EB 94     	call Genera_coordenadas
 714  8D8A
 715  8D8A              ; TODO: Generamos disparo ???
 716  8D8A
 717  8D8A 3A 57 8C     	ld a,(Permiso_de_disparo_Entidades)
 718  8D8D A7           	and a
 719  8D8E C4 1B 8E     	call nz,Entidad_genera_disparo_si_procede
 720  8D91
 721  8D91 CD 20 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 722  8D94
 723  8D94              Gestiona_siguiente_entidad
 724  8D94
 725  8D94 CD FA 93      	call Store_Restore_cajas
 726  8D97 C1           	pop bc
 727  8D98 10 AF        	djnz 2B
 728  8D9A
 729  8D9A              ; Hemos gestionado todas las entidades.
 730  8D9A              ; ----- ----- -----
 731  8D9A
 732  8D9A CD 64 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 733  8D9D CD 7B 8F     	call Ordena_tabla_de_impresion
 734  8DA0 CD 08 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 735  8DA3
 736  8DA3 CD 1B 8F     	call Borra_diferencia
 737  8DA6
 738  8DA6 3A 65 8C     	ld a,(Ctrl_3)
 739  8DA9 CB 5F        	bit 3,a
 740  8DAB 20 04        	jr nz,Gestion_de_Amadeus
 741  8DAD
 742  8DAD EB           	ex de,hl
 743  8DAE 71           	ld (hl),c
 744  8DAF 2C           	inc l
 745  8DB0 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 746  8DB1
 747  8DB1              ;! GESTIONA AMADEUS !!!!!!!!!!
 748  8DB1
 749  8DB1              Gestion_de_Amadeus
 750  8DB1
 751  8DB1 21 65 8C     	ld hl,Ctrl_3
 752  8DB4 CB 76        	bit 6,(hl)
 753  8DB6 28 13        	jr z,Amadeus_vivo
 754  8DB8
 755  8DB8              ; Amadeus ha sido destruido.
 756  8DB8              ; Decrementa (Temp_new_live).
 757  8DB8
 758  8DB8 21 79 8C     	ld hl,Temp_new_live
 759  8DBB 35           	dec (hl)
 760  8DBC 20 26        	jr nz,End_frame
 761  8DBE
 762  8DBE              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 763  8DBE
 764  8DBE 21 92 8C     	ld hl,Lives
 765  8DC1 35           	dec (hl)
 766  8DC2
 767  8DC2              ;! Fin del juego
 768  8DC2
 769  8DC2 F3           	di
 770  8DC3 28 FE        	jr z,$
 771  8DC5 FB           	ei
 772  8DC6
 773  8DC6              ; Nueva nave.
 774  8DC6
 775  8DC6 CD 38 8E     	call Reinicia_Amadeus
 776  8DC9 18 19        	jr End_frame
 777  8DCB
 778  8DCB              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 779  8DCB
 780  8DCB              Amadeus_vivo
 781  8DCB
 782  8DCB 3A BB 89     	ld a,(Impacto_Amadeus)
 783  8DCE A7           	and a
 784  8DCF C4 99 92     	call nz, Genera_explosion_Amadeus
 785  8DD2 20 10        	jr nz, End_frame
 786  8DD4
 787  8DD4 CD 46 92     	call Teclado
 788  8DD7 21 65 8C     	ld hl,Ctrl_3
 789  8DDA
 790  8DDA CB 6E        	bit 5,(hl)
 791  8DDC 28 06        	jr z,End_frame
 792  8DDE
 793  8DDE              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 794  8DDE
 795  8DDE CD AF 8E     	call Change_Amadeus
 796  8DE1 CD AD 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 797  8DE4
 798  8DE4              End_frame
 799  8DE4
 800  8DE4              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 801  8DE4              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 802  8DE4
 803  8DE4 CD C7 A0     	call Genera_datos_de_impresion_disparos_Entidades
 804  8DE7 CD 8B A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 805  8DEA CD E1 A1     	call Calcula_bytes_pintado_disparos
 806  8DED CD EE A1     	call Limpia_album_de_pintado_disparos_entidades
 807  8DF0
 808  8DF0              ; ------------ ------------- --------------
 809  8DF0
 810  8DF0 2A 43 8C     	ld hl,(Album_de_borrado)
 811  8DF3 22 5F 8C     	ld (Scanlines_album_SP),hl
 812  8DF6
 813  8DF6 21 65 8C     	ld hl,Ctrl_3
 814  8DF9 CB C6        	set 0,(hl) 											; Indica Frame completo.
 815  8DFB CB 9E        	res 3,(hl)
 816  8DFD CB A6        	res 4,(hl)
 817  8DFF
 818  8DFF AF           	xor a
 819  8E00 D3 FE        	out ($fe),a
 820  8E02
 821  8E02 76           	halt
 822  8E03
 823  8E03              ; ----------------------------------------
 824  8E03
 825  8E03              ;	ld a,(Ctrl_1) 										; Existe Loop?
 826  8E03              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 827  8E03 CA FE 8C     	jp z,Main
 828  8E06
 829  8E06              ;------------------------------------------
 830  8E06              ;
 831  8E06              ;	07/11/24
 832  8E06
 833  8E06              Autoriza_disparo_de_entidades
 834  8E06
 835  8E06 3E 01        	ld a,1
 836  8E08 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 837  8E0B
 838  8E0B 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 839  8E0E FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 840  8E10 38 02        	jr c,1F
 841  8E12
 842  8E12              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 843  8E12              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 844  8E12              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 845  8E12
 846  8E12 D6 03        	sub 3
 847  8E14
 848  8E14 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 849  8E17 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 850  8E1A
 851  8E1A C9           	ret
 852  8E1B
 853  8E1B              ;------------------------------------------
 854  8E1B              ;
 855  8E1B              ;	14/09/24
 856  8E1B              ;
 857  8E1B              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 858  8E1B
 859  8E1B              Entidad_genera_disparo_si_procede
 860  8E1B
 861  8E1B 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 862  8E1E CB 06        	rlc (hl)
 863  8E20
 864  8E20 DC 17 A1     	call c,Genera_disparo_de_entidad_maldosa
 865  8E23
 866  8E23 C9           	ret
 867  8E24
 868  8E24              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 869  8E24              ;
 870  8E24              ;	30/09/24
 871  8E24
 872  8E24              Actuaiza_sp_de_disparos_de_entidades
 873  8E24
 874  8E24 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 875  8E27 23           	inc hl
 876  8E28 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 877  8E2B
 878  8E2B 11 FD 88     	ld de,Numeros_aleatorios+7
 879  8E2E 7B           	ld a,e
 880  8E2F 95           	sub l
 881  8E30 C0           	ret nz
 882  8E31
 883  8E31 21 F6 88     1 ld hl,Numeros_aleatorios
 884  8E34 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 885  8E37 C9           	ret
 886  8E38
 887  8E38              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 888  8E38              ;
 889  8E38              ;	24/07/24
 890  8E38
 891  8E38              Reinicia_Amadeus
 892  8E38
 893  8E38              ;	Reinicia posición y estado.
 894  8E38
 895  8E38 21 CF 50     	ld hl,$50cf
 896  8E3B 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 897  8E3E 21 CC DC     	ld hl,$dccc
 898  8E41 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 899  8E44 21 3D 00     	ld hl,$003d
 900  8E47 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 901  8E4A
 902  8E4A              ;	limpiamos el álbum de borrado.
 903  8E4A
 904  8E4A 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 905  8E4D
 906  8E4D AF           	xor a
 907  8E4E 77           	ld (hl),a
 908  8E4F
 909  8E4F E5           	push hl
 910  8E50 D1           	pop de
 911  8E51 13           	inc de
 912  8E52
 913  8E52 01 23 00     	ld bc,35
 914  8E55 ED B0        	ldir
 915  8E57
 916  8E57 CD AD 90     	call Genera_datos_de_impresion_Amadeus
 917  8E5A
 918  8E5A              ;	Reinicia temporizaciones.
 919  8E5A
 920  8E5A CD 8C 91     	call Inicia_Shield
 921  8E5D
 922  8E5D 3E 5A        	ld a,90
 923  8E5F 32 8F 8C     	ld (Shield),a
 924  8E62
 925  8E62 3E 64        	ld a,100
 926  8E64 32 79 8C     	ld (Temp_new_live),a
 927  8E67
 928  8E67              ; 	Restauramos el FLAG: Amadeus vivo.
 929  8E67
 930  8E67 21 65 8C     	ld hl,Ctrl_3
 931  8E6A CB B6        	res 6,(hl)
 932  8E6C
 933  8E6C              ;	Fuerza la impresión de la nave en el siguiente frame.
 934  8E6C
 935  8E6C 21 65 8C      	ld hl,Ctrl_3
 936  8E6F CB EE        	set 5,(hl)
 937  8E71
 938  8E71 C9           	ret
 939  8E72
 940  8E72              ; --------------------------------------------------------------------------------------------------------------
 941  8E72              ;
 942  8E72              ;	7/11/24
 943  8E72
 944  8E72              Ajusta_velocidad_entidad
 945  8E72
 946  8E72 3A F9 8B     	ld a,(Velocidad)
 947  8E75 A7           	and a
 948  8E76 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 949  8E77              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 950  8E77              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 951  8E77
 952  8E77
 953  8E77              ; Incrementa (Contador_de_vueltas)x2.
 954  8E77              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 955  8E77
 956  8E77              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 957  8E77              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 958  8E77              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 959  8E77              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 960  8E77              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 961  8E77
 962  8E77
 963  8E77 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 964  8E79 32 F9 8B     	ld (Velocidad),a
 965  8E7C E6 10        	and $10
 966  8E7E C8           	ret z
 967  8E7F
 968  8E7F              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 969  8E7F
 970  8E7F 3A F1 8B     	ld a,(Contador_de_vueltas)
 971  8E82 CB 2F        	sra a
 972  8E84 CB 2F        	sra a
 973  8E86 32 F9 8B     	ld (Velocidad),a
 974  8E89
 975  8E89 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 976  8E8C 23           	inc hl
 977  8E8D 23           	inc hl
 978  8E8E 23           	inc hl
 979  8E8F 23           	inc hl
 980  8E90 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 981  8E93
 982  8E93 C9           	ret
 983  8E94
 984  8E94              ; --------------------------------------------------------------------------------------------------------------
 985  8E94              ;
 986  8E94              ;	25/08/24
 987  8E94
 988  8E94              Change
 989  8E94
 990  8E94 3A 5C 8C     	ld a,(Switch)
 991  8E97 EE 01        	xor 1
 992  8E99 32 5C 8C     	ld (Switch),a
 993  8E9C 2A 41 8C     	ld hl,(Album_de_pintado)
 994  8E9F ED 5B 43 8C  	ld de,(Album_de_borrado)
 995  8EA3 EB           	ex de,hl
 996  8EA4 22 41 8C     	ld (Album_de_pintado),hl
 997  8EA7 22 5F 8C     	ld (Scanlines_album_SP),hl
 998  8EAA ED 53 43 8C  	ld (Album_de_borrado),de
 999  8EAE C9           	ret
1000  8EAF
1001  8EAF              Change_Amadeus
1002  8EAF
1003  8EAF 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1004  8EB2 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1005  8EB6 EB           	ex de,hl
1006  8EB7 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1007  8EBA ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1008  8EBE C9           	ret
1009  8EBF
1010  8EBF              Change_Disparos
1011  8EBF
1012  8EBF              ; Álbumes de Amadeus.
1013  8EBF
1014  8EBF 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1015  8EC2 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1016  8EC6 EB           	ex de,hl
1017  8EC7 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1018  8ECA ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1019  8ECE CD D6 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1020  8ED1
1021  8ED1              ; Álbumes de entidades.
1022  8ED1
1023  8ED1 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1024  8ED4 ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1025  8ED8 EB           	ex de,hl
1026  8ED9 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1027  8EDC ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1028  8EE0 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1029  8EE3
1030  8EE3 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1031  8EE6 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1032  8EE9
1033  8EE9 C9           	ret
1034  8EEA
1035  8EEA              ; ------------------------------------
1036  8EEA              ;
1037  8EEA              ; 1/05/24
1038  8EEA
1039  8EEA              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1040  8EEA              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1041  8EEA
1042  8EEA              ;	DESTRUYE: HL,DE,A
1043  8EEA              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1044  8EEA
1045  8EEA              ;	Variables implicadas: (RND_SP).
1046  8EEA
1047  8EEA              Extrae_numero_aleatorio_y_avanza
1048  8EEA
1049  8EEA 21 00 89     	ld hl,Tabla_de_pintado
1050  8EED EB           	ex de,hl
1051  8EEE 2A 7A 8C     	ld hl,(RND_SP)
1052  8EF1 EB           	ex de,hl
1053  8EF2 A7           	and a
1054  8EF3 ED 52        	sbc hl,de
1055  8EF5
1056  8EF5 2A 7A 8C     	ld hl,(RND_SP)
1057  8EF8 20 06        	jr nz,1F
1058  8EFA
1059  8EFA              ; Sitúa HL al principio de la tabla de nº aleatorios.
1060  8EFA
1061  8EFA 21 F6 88     	ld hl,Numeros_aleatorios
1062  8EFD 22 7A 8C     	ld (RND_SP),HL
1063  8F00
1064  8F00              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1065  8F00
1066  8F00 7E           1 ld a,(hl)
1067  8F01 23           	inc hl
1068  8F02 22 7A 8C     	ld (RND_SP),hl
1069  8F05 C9           	ret
1070  8F06
1071  8F06              ; ------------------------------------
1072  8F06              ;
1073  8F06              ; 1/05/24
1074  8F06
1075  8F06              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1076  8F06              ; (1 a 4 segundos).
1077  8F06              ; Actualizamos (Clock_next_entity) con A.
1078  8F06
1079  8F06              ;	DESTRUYE: A y B.
1080  8F06              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1081  8F06              ;			 Actualiza (Clock_next_entity) con A.
1082  8F06
1083  8F06              ;	Variables implicadas: (Clock_next_entity).
1084  8F06
1085  8F06              ; Notas:
1086  8F06
1087  8F06              ; 	$32 1 seg.
1088  8F06              ; 	$64 2 seg.
1089  8F06              ; 	$96 3 seg.
1090  8F06              ; 	$c8 4 seg.
1091  8F06              ; 	$fa 5 seg.
1092  8F06
1093  8F06              ; $ffff 1310,7 seg, 22 minutos.
1094  8F06
1095  8F06              ;	$0100  5 seg. aproximadamente.
1096  8F06              ;	$0200 10 seg. aproximadamente.
1097  8F06              ;	$0300 15 seg. aproximadamente.
1098  8F06              ;	$0400 20 seg. aproximadamente.
1099  8F06              ;	$0500 25 seg. aproximadamente.
1100  8F06              ;	$0600 30 seg. aproximadamente.
1101  8F06
1102  8F06              Define_Clock_next_entity
1103  8F06
1104  8F06 FE 34        	cp $34
1105  8F08 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1106  8F0A
1107  8F0A              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1108  8F0A
1109  8F0A 4F           3 ld c,a
1110  8F0B 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1111  8F0D 2A 78 5C     	ld hl,(FRAMES)
1112  8F10 A7           	and a
1113  8F11 ED 4A        	adc hl,bc
1114  8F13 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1115  8F16 C9           	ret
1116  8F17
1117  8F17 3E 34        1 ld a,$34
1118  8F19 18 EF        	jr 3B
1119  8F1B
1120  8F1B              ; ------------------------------------
1121  8F1B              ;
1122  8F1B              ; 18/03/24
1123  8F1B
1124  8F1B              Borra_diferencia
1125  8F1B
1126  8F1B ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1127  8F1F
1128  8F1F 3A 5C 8C     	ld a,(Switch)
1129  8F22 A7           	and a
1130  8F23 28 08        	jr z,2F
1131  8F25
1132  8F25 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1133  8F28 11 5A 8C     	ld de,Techo_Scanlines_album_2
1134  8F2B 18 06        	jr 3F
1135  8F2D
1136  8F2D 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1137  8F30 11 58 8C     	ld de,Techo_Scanlines_album
1138  8F33
1139  8F33              ; Diferencia.
1140  8F33
1141  8F33 ED 42        3 sbc hl,bc
1142  8F35
1143  8F35 C8           	ret z
1144  8F36 D8           	ret c
1145  8F37
1146  8F37              ; Nuevo techo, (más bajo que el anterior).
1147  8F37              ; Fijamos nuevo techo y borramos bytes sobrantes.
1148  8F37
1149  8F37 EB           	ex de,hl
1150  8F38
1151  8F38 71           	ld (hl),c
1152  8F39 2C           	inc l
1153  8F3A 70           	ld (hl),b
1154  8F3B
1155  8F3B AF           	xor a
1156  8F3C 43           	ld b,e
1157  8F3D
1158  8F3D 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1159  8F40
1160  8F40 77           1 ld (hl),a
1161  8F41 23           	inc hl
1162  8F42 10 FC        	djnz 1B
1163  8F44
1164  8F44              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1165  8F44
1166  8F44 21 65 8C     	ld hl,Ctrl_3
1167  8F47 CB DE        	set 3,(hl)
1168  8F49
1169  8F49 C9           	ret
1170  8F4A
1171  8F4A              ; --------------------------------------------------------------------------------------------------------------
1172  8F4A              ;
1173  8F4A              ;	26/3/24
1174  8F4A
1175  8F4A              Recauda_informacion_de_entidad_en_curso
1176  8F4A
1177  8F4A              ; Almacena la Coordenada Y de la entidad en curso.
1178  8F4A
1179  8F4A              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1180  8F4A
1181  8F4A 2A 2E 8C     	ld hl,(Puntero_store_caja)
1182  8F4D CD 1E 91     	call Extrae_address
1183  8F50
1184  8F50
1185  8F50 3A F0 8B     	ld a,(Coordenada_y)
1186  8F53 2A 61 8C     	ld hl,(India_SP)
1187  8F56 77           	ld (hl),a
1188  8F57 2C           	inc l
1189  8F58
1190  8F58              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1191  8F58
1192  8F58 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1193  8F5C
1194  8F5C 73           	ld (hl),e
1195  8F5D 2C           	inc l
1196  8F5E 72           	ld (hl),d
1197  8F5F 2C           	inc l
1198  8F60
1199  8F60 22 61 8C     	ld (India_SP),hl
1200  8F63
1201  8F63 C9           	ret
1202  8F64
1203  8F64              ; --------------------------------------------------------------------------------------------------------------
1204  8F64              ;
1205  8F64              ;	27/03/24
1206  8F64              ;
1207  8F64
1208  8F64              Inicializa_India_y_limpia_Tabla_de_impresion
1209  8F64
1210  8F64 2A 61 8C     	ld hl,(India_SP)
1211  8F67 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1212  8F6A
1213  8F6A 79           	ld a,c
1214  8F6B 95           	sub l
1215  8F6C 28 06        	jr z,2F
1216  8F6E 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1217  8F6F              ;														; _ y pasamos a inicializar (India_SP).
1218  8F6F AF           	xor a
1219  8F70
1220  8F70 77           1 ld (hl),a
1221  8F71 2C           	inc l
1222  8F72 10 FC        	djnz 1B												; Limpia Tabla.
1223  8F74
1224  8F74 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1225  8F77 22 61 8C     	ld (India_SP),hl
1226  8F7A
1227  8F7A C9           	ret
1228  8F7B
1229  8F7B              ; --------------------------------------------------------------------------------------------------------------
1230  8F7B              ;
1231  8F7B              ;	31/3/24
1232  8F7B
1233  8F7B              Ordena_tabla_de_impresion
1234  8F7B
1235  8F7B              ; 5794 T/states.
1236  8F7B              ; 6278 T/states.
1237  8F7B              ; 5310 T/states.
1238  8F7B
1239  8F7B              ; Inicializamos punteros (India_SP) e (India_2_SP).
1240  8F7B              ; Inicializamos contador de comparaciones, [C].
1241  8F7B              ; Cargamos los registros A y B para efectuar comparación.
1242  8F7B
1243  8F7B FD 2E 00     	ld iyl,0
1244  8F7E
1245  8F7E 3A 38 8C     	ld a,(Entidades_en_curso)
1246  8F81 FE 04        	cp 4 	;	4
1247  8F83 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1248  8F84
1249  8F84 3D           	dec a
1250  8F85 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1251  8F86 51           	ld d,c 										; Copia de respaldo.
1252  8F87
1253  8F87 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1254  8F88
1255  8F88 21 03 89     	ld hl,Tabla_de_pintado+3
1256  8F8B 46           	ld b,(hl)
1257  8F8C 22 63 8C     	ld (India_2_SP),hl
1258  8F8F
1259  8F8F B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1260  8F90 DC B8 8F     	call c, Avanza_India_2_SP
1261  8F93 CC B8 8F     	call z, Avanza_India_2_SP
1262  8F96
1263  8F96 FD 2D        	dec iyl
1264  8F98 28 18        	jr z,2F
1265  8F9A
1266  8F9A
1267  8F9A              ; --------------------------------------------------------------------------------------------------------------
1268  8F9A              ;
1269  8F9A              ;	7/4/24
1270  8F9A
1271  8F9A              Trueque
1272  8F9A
1273  8F9A              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1274  8F9A              ;  			A contiene en nº de fila de (India_SP).
1275  8F9A              ;			HL contiene (India_2_SP).
1276  8F9A
1277  8F9A D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1278  8F9B E5           	push hl										; Preservo (India_2_SP).
1279  8F9C
1280  8F9C ED 5B 61 8C  	ld de,(India_SP)
1281  8FA0 EB           	ex de,hl
1282  8FA1 70           	ld (hl),b
1283  8FA2 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1284  8FA3
1285  8FA3 CD E4 8F     	call Intercambia_1_byte
1286  8FA6 CD E4 8F     	call Intercambia_1_byte
1287  8FA9
1288  8FA9
1289  8FA9              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1290  8FA9              ; Recuperamos (India_2_SP) en HL.
1291  8FA9
1292  8FA9 2A 61 8C     	ld hl,(India_SP)
1293  8FAC 7E           	ld a,(hl)
1294  8FAD
1295  8FAD E1           	pop hl
1296  8FAE D1           	pop de
1297  8FAF
1298  8FAF              ; --------------------------------------------------------------------------------------------------------------
1299  8FAF
1300  8FAF CD B8 8F     	call Avanza_India_2_SP
1301  8FB2
1302  8FB2 14           2 inc d
1303  8FB3 15           	dec d
1304  8FB4 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1305  8FB5 18 D8        	jr 1B
1306  8FB7
1307  8FB7 C9           	ret
1308  8FB8
1309  8FB8              ; ----- ----- ----- ----- -----
1310  8FB8
1311  8FB8              Avanza_India_2_SP
1312  8FB8
1313  8FB8 0D           	dec c
1314  8FB9 28 0A        	jr z,Avanza_punteros_indios
1315  8FBB
1316  8FBB FD 2C        	inc iyl
1317  8FBD
1318  8FBD 2C           	inc l
1319  8FBE 2C           	inc l
1320  8FBF 2C           	inc l
1321  8FC0
1322  8FC0 46           	ld b,(hl)
1323  8FC1 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1324  8FC4
1325  8FC4 C9           	ret
1326  8FC5
1327  8FC5              ; ----- ----- ----- ----- -----
1328  8FC5
1329  8FC5              Avanza_punteros_indios
1330  8FC5
1331  8FC5 15           	dec d
1332  8FC6 28 15        	jr z,Prepara_salida
1333  8FC8
1334  8FC8 4A           	ld c,d
1335  8FC9
1336  8FC9 2A 61 8C     	ld hl,(India_SP)
1337  8FCC 2C           	inc l
1338  8FCD 2C           	inc l
1339  8FCE 2C           	inc l
1340  8FCF 7E           	ld a,(hl)
1341  8FD0 22 61 8C     	ld (India_SP),hl
1342  8FD3
1343  8FD3 2C           	inc l
1344  8FD4 2C           	inc l
1345  8FD5 2C           	inc l
1346  8FD6 46           	ld b,(hl)
1347  8FD7 22 63 8C     	ld (India_2_SP),hl
1348  8FDA
1349  8FDA FD 2C        	inc iyl
1350  8FDC
1351  8FDC C9           	ret
1352  8FDD
1353  8FDD              Prepara_salida
1354  8FDD
1355  8FDD 21 00 89     	ld hl,Tabla_de_pintado
1356  8FE0 22 61 8C     	ld (India_SP),hl
1357  8FE3 C9           	ret
1358  8FE4
1359  8FE4
1360  8FE4 2C           Intercambia_1_byte inc l
1361  8FE5 1C           	inc e
1362  8FE6 46           	ld b,(hl)
1363  8FE7 1A           	ld a,(de)
1364  8FE8 EB           	ex de,hl
1365  8FE9 70           	ld (hl),b
1366  8FEA 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1367  8FEB C9           	ret
1368  8FEC
1369  8FEC              ; -----------------------------------------------------------------------------------
1370  8FEC              ;
1371  8FEC              ;	20/01/24
1372  8FEC              ;
1373  8FEC              ;
1374  8FEC
1375  8FEC              Construye_movimientos_masticados_entidad
1376  8FEC
1377  8FEC 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1378  8FEF E5           	push hl
1379  8FF0 CD 33 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1380  8FF3              ;															; _ el (Contador_de_mov_masticados).
1381  8FF3 CD 24 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1382  8FF6              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1383  8FF6 CD 03 9A     	call Recompone_posicion_inicio
1384  8FF9
1385  8FF9 CD 33 97     1 call Draw
1386  8FFC CD 18 90     	call Guarda_movimiento_masticado
1387  8FFF
1388  8FFF CD B0 9D     	call Movimiento
1389  9002
1390  9002 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1391  9005 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1392  9007 28 F0        	jr z,1B
1393  9009
1394  9009              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1395  9009              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1396  9009
1397  9009 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1398  900A 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1399  900D
1400  900D              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1401  900D
1402  900D CD 14 9F     	call Situa_en_contador_general_de_mov_masticados
1403  9010
1404  9010              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1405  9010              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1406  9010
1407  9010 ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1408  9014
1409  9014 71           	ld (hl),c
1410  9015 23           	inc hl
1411  9016 70           	ld (hl),b
1412  9017
1413  9017 C9           	ret
1414  9018
1415  9018              ; -----------------------------------------------------------------------------------
1416  9018              ;
1417  9018              ;	28/12/23
1418  9018              ;
1419  9018              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1420  9018              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1421  9018
1422  9018              Guarda_movimiento_masticado
1423  9018
1424  9018 ED 73 3D 8C  	ld (Stack),sp
1425  901C ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1426  9020
1427  9020 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1428  9022 FD E5            push iy 												; Pushea Puntero_objeto.
1429  9024
1430  9024 ED 7B 3D 8C      ld sp,(Stack)
1431  9028
1432  9028 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1433  902B 23           	inc hl
1434  902C 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1435  902F
1436  902F CD 33 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1437  9032              ;															; _ el (Contador_de_mov_masticados).
1438  9032 C9               ret
1439  9033
1440  9033              ; --------------------------------------------------------------------------------------------------------------
1441  9033              ;
1442  9033              ;	12/1/24
1443  9033              ;
1444  9033              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1445  9033
1446  9033              Actualiza_Puntero_de_almacen_de_mov_masticados
1447  9033
1448  9033 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1449  9036 01 04 00     	ld bc,4
1450  9039 A7           	and a
1451  903A ED 4A        	adc hl,bc
1452  903C 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1453  903F C9           	ret
1454  9040
1455  9040              ; ------------------------------------------
1456  9040              ;
1457  9040              ;	21/11/24
1458  9040              ;
1459  9040              ;	Almacena (Puntero_de_impresion) y actualiza (Puntero_de_almacen_de_mov_masticados).
1460  9040
1461  9040
1462  9040              Obtenemos_puntero_de_impresion
1463  9040
1464  9040 DD 6E 07     	ld l,(ix+7)
1465  9043 DD 66 08     	ld h,(ix+8)
1466  9046
1467  9046              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1468  9046
1469  9046 ED 73 3D 8C  	ld (Stack),sp
1470  904A F9           	ld sp,hl
1471  904B
1472  904B AF           	xor a
1473  904C 67           	ld h,a
1474  904D 6C           	ld l,h															; ld hl,"0"
1475  904E
1476  904E C1           	pop bc
1477  904F C1           	pop bc
1478  9050
1479  9050              ; 	Almacena (Puntero_de_impresion).
1480  9050
1481  9050 DD 71 05     	ld (ix+5),c
1482  9053 DD 70 06     	ld (ix+6),b
1483  9056
1484  9056              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1485  9056
1486  9056 39           	add hl,sp
1487  9057 DD 75 07     	ld (ix+7),l
1488  905A DD 74 08     	ld (ix+8),h
1489  905D
1490  905D C1           	pop bc
1491  905E
1492  905E 79           	ld a,c
1493  905F 80           	add b															; Comprueba si ya no hay datos en el almacén.
1494  9060
1495  9060 CC 30 94     	call z,Reinicia_entidad_maliciosa
1496  9063
1497  9063 ED 7B 3D 8C  	ld sp,(Stack)
1498  9067
1499  9067 C9           	ret
1500  9068
1501  9068              ; -----------------------------------------------------------------------------------
1502  9068
1503  9068              Cargamos_registros_con_mov_masticado
1504  9068
1505  9068              	; DE está situado en el .defw (Puntero_de_almacen_de_mov_masticados) de la entidad.											;
1506  9068
1507  9068 C1           	pop bc 															; BC contiene Puntero_objeto
1508  9069 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1509  906B
1510  906B AF           	xor a
1511  906C 67           	ld h,a
1512  906D 6C           	ld l,h															; HL="0".
1513  906E
1514  906E 39           	add hl,sp
1515  906F
1516  906F EB           	ex de,hl														; (Puntero_de_almacen_de_mov_masticados) actualizado en DE.
1517  9070              ;																	; HL está situado en el .defw (Puntero_de_almacen_de_mov_masticados) de la entidad.
1518  9070
1519  9070 73           	ld (hl),e
1520  9071 2C           	inc l
1521  9072 72           	ld (hl),d														; (Puntero_de_almacen_de_mov_masticados) actualizado en entidad.
1522  9073
1523  9073 ED 7B 3D 8C  	ld sp,(Stack)
1524  9077
1525  9077 C5           	push bc
1526  9078 D1           	pop de															; (Puntero_objeto) en DE.
1527  9079
1528  9079 7B           	ld a,e
1529  907A 82           	add d															; Comprueba si ya no hay datos en el almacén.
1530  907B
1531  907B CC 30 94     	call z,Reinicia_entidad_maliciosa
1532  907E
1533  907E C9           	ret
1534  907F
1535  907F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1536  907F              ;
1537  907F              ;	22/7/24
1538  907F
1539  907F              Cargamos_registros_con_explosion
1540  907F
1541  907F
1542  907F 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1543  9082 CD 1E 91     	call Extrae_address
1544  9085
1545  9085 5D           	ld e,l
1546  9086 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1547  9087
1548  9087 DD 2A F3 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1549  908B
1550  908B C9           	ret
1551  908C
1552  908C
1553  908C              Cargamos_registros_con_explosion_Amadeus
1554  908C
1555  908C 2A BE 89     	ld hl,(Pamm_Amadeus)
1556  908F CD 1E 91     	call Extrae_address
1557  9092
1558  9092 5D           	ld e,l
1559  9093 54           	ld d,h
1560  9094
1561  9094 DD 2A BC 89  	ld ix,(p.imp.amadeus)
1562  9098
1563  9098 C9           	ret
1564  9099
1565  9099              ; --------------------------------------------------------------------------------------------------------------
1566  9099              ;
1567  9099              ;	17/06/24
1568  9099              ;
1569  9099              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1570  9099              ;
1571  9099              ;	IX contiene el puntero de impresión.
1572  9099              ;	DE contiene (Puntero_objeto).
1573  9099
1574  9099
1575  9099              Cargamos_registros_con_mov_masticado_Amadeus
1576  9099
1577  9099 ED 73 3D 8C  	ld (Stack),sp
1578  909D ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1579  90A1 D1           	pop de 															; DE contiene Puntero_objeto
1580  90A2 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1581  90A4 DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1582  90A8 ED 7B 3D 8C  	ld sp,(Stack)
1583  90AC C9           	ret
1584  90AD
1585  90AD              ; ---------------------------------------------------------------------------------------------------------------------
1586  90AD              ;
1587  90AD              ;	18/6/24
1588  90AD              ;
1589  90AD              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1590  90AD
1591  90AD              Genera_datos_de_impresion_Amadeus
1592  90AD
1593  90AD 3A BB 89     	ld a,(Impacto_Amadeus)
1594  90B0 A7           	and a
1595  90B1 20 03        	jr nz,1F
1596  90B3
1597  90B3              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1598  90B3              ; _apuntando a la correspondiente explosión.
1599  90B3
1600  90B3 CD 99 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1601  90B6
1602  90B6 DD 7D        1 ld a,ixl
1603  90B8 E6 1F        	and $1f
1604  90BA 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1605  90BD
1606  90BD 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1607  90C0 E5           	push hl
1608  90C1
1609  90C1 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1610  90C4 22 5F 8C     	ld (Scanlines_album_SP),hl
1611  90C7
1612  90C7 CD 17 95     	call Genera_datos_de_impresion
1613  90CA
1614  90CA E1           	pop hl
1615  90CB 22 5F 8C     	ld (Scanlines_album_SP),hl
1616  90CE
1617  90CE C9           	ret
1618  90CF
1619  90CF              ; ---------------------------------------------------------------------------------------------------------------------
1620  90CF              ;
1621  90CF              ;	13/03/24
1622  90CF              ;
1623  90CF              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1624  90CF
1625  90CF              Inicia_albumes_de_lineas
1626  90CF
1627  90CF 21 00 80     	ld hl,Scanlines_album
1628  90D2 22 41 8C     	ld (Album_de_pintado),hl
1629  90D5 22 5F 8C     	ld (Scanlines_album_SP),hl
1630  90D8
1631  90D8 21 1A 81     	ld hl,Scanlines_album_2
1632  90DB 22 43 8C     	ld (Album_de_borrado),hl
1633  90DE
1634  90DE C9           	ret
1635  90DF
1636  90DF              Inicia_albumes_de_lineas_Amadeus
1637  90DF
1638  90DF 21 34 82     	ld hl,Amadeus_scanlines_album
1639  90E2 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1640  90E5 21 58 82     	ld hl,Amadeus_scanlines_album_2
1641  90E8 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1642  90EB
1643  90EB C9           	ret
1644  90EC
1645  90EC              Inicia_albumes_de_disparos
1646  90EC
1647  90EC 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1648  90EF 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1649  90F2 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1650  90F5 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1651  90F8
1652  90F8 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1653  90FB 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1654  90FE 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1655  9101
1656  9101 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1657  9104 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1658  9107
1659  9107 C9           	ret
1660  9108
1661  9108              ; ---------------------------------------------------------------------------------------------------------------------
1662  9108              ;
1663  9108              ; 8/1/23
1664  9108              ;
1665  9108              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1666  9108              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1667  9108              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1668  9108
1669  9108              ; Destruye HL y DE !!!!!
1670  9108
1671  9108              Inicia_punteros_de_cajas
1672  9108
1673  9108 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1674  910B CD 1E 91         call Extrae_address
1675  910E 22 2E 8C         ld (Puntero_store_caja),hl
1676  9111 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1677  9114 22 32 8C     	ld (Indice_restore_caja),hl
1678  9117 CD 1E 91     	call Extrae_address
1679  911A 22 30 8C     	ld (Puntero_restore_caja),hl
1680  911D C9               ret
1681  911E
1682  911E              ; *************************************************************************************************************************************************************
1683  911E
1684  911E              ;
1685  911E              ; 20/10/22
1686  911E              ;
1687  911E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1688  911E              ;
1689  911E              ; Destruye el puntero y DE !!!!!
1690  911E
1691  911E 5E           Extrae_address ld e,(hl)
1692  911F 23           	inc hl
1693  9120 56           	ld d,(hl)
1694  9121 2B           	dec hl
1695  9122 EB           	ex de,hl
1696  9123 C9           	ret
1697  9124
1698  9124              ; *************************************************************************************************************************************************************
1699  9124              ;
1700  9124              ;	20/1/24
1701  9124              ;
1702  9124              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1703  9124              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1704  9124              ;
1705  9124              ;   Destruye HL y BC !!!!!,
1706  9124              ;
1707  9124              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1708  9124              ;					"0" ..... Izquierda.
1709  9124
1710  9124              Inicia_Puntero_objeto
1711  9124
1712  9124 3A 0D 8C     	ld a,(Cuad_objeto)
1713  9127 E6 01        	and 1
1714  9129 F5           	push af
1715  912A CC 46 91     	call z,Inicia_puntero_objeto_izq
1716  912D F1           	pop af
1717  912E C8           	ret z
1718  912F CD 33 91     	call Inicia_puntero_objeto_der
1719  9132 C9           	ret
1720  9133
1721  9133              ; Arrancamos desde la parte izquierda de la pantalla.
1722  9133              ; Iniciamos (Indice_Sprite_der).
1723  9133
1724  9133 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1725  9136 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1726  9139 CD 1E 91     	call Extrae_address
1727  913C 22 00 8C     	ld (Puntero_objeto),hl
1728  913F
1729  913F 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1730  9142 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1731  9145 C9           	ret
1732  9146
1733  9146              ; Arrancamos desde la parte derecha de la pantalla.
1734  9146              ; Iniciamos (Indice_Sprite_izq).
1735  9146
1736  9146 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1737  9149 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1738  914C CD 1E 91     	call Extrae_address
1739  914F 22 00 8C     	ld (Puntero_objeto),hl
1740  9152
1741  9152 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1742  9155 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1743  9158 C9           	ret
1744  9159
1745  9159              ; **************************************************************************************************
1746  9159              ;
1747  9159              ;	06/07/24
1748  9159              ;
1749  9159              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1750  9159
1751  9159              Restore_entidad
1752  9159
1753  9159 2A 2E 8C     	ld hl,(Puntero_store_caja)
1754  915C 7E           	ld a,(hl)
1755  915D A7           	and a
1756  915E CC 6C 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1757  9161 28 F6        	jr z,Restore_entidad
1758  9163
1759  9163 11 EE 8B     	ld de,Bandeja_DRAW
1760  9166 01 0C 00     	ld bc,12
1761  9169 ED B0        	ldir
1762  916B C9           	ret
1763  916C
1764  916C              ; **************************************************************************************************
1765  916C              ;
1766  916C              ;	08/05/23
1767  916C              ;
1768  916C              ;	Incrementamos los dos punteros de entidades. (+1).
1769  916C
1770  916C              Incrementa_punteros_de_cajas
1771  916C
1772  916C 2A 30 8C     	ld hl,(Puntero_restore_caja)
1773  916F 22 2E 8C     	ld (Puntero_store_caja),hl
1774  9172 2A 32 8C     	ld hl,(Indice_restore_caja)
1775  9175 23           	inc hl
1776  9176 23           	inc hl
1777  9177 22 32 8C     	ld (Indice_restore_caja),hl
1778  917A CD 1E 91         call Extrae_address
1779  917D 22 30 8C         ld (Puntero_restore_caja),hl
1780  9180 C9               ret
1781  9181
1782  9181              ; -----------------------------------------------------------
1783  9181
1784  9181              ; Teclado.
1785  9181
1786  9181 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1787  9183 DB FE        	in a,($fe)
1788  9185 E6 01        	and $01
1789  9187 28 02        	jr z,1f
1790  9189 18 F6        	jr Pulsa_ENTER
1791  918B C9           1 ret
1792  918C
1793  918C              ; **************************************************************************************************
1794  918C              ;
1795  918C              ; Temporización.
1796  918C
1797  918C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1798  918C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1799  918C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1800  918C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1801  918C
1802  918C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1803  918C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1804  918C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1805  918C
1806  918C              ; A partir de $4f61 no hace falta DELAY.
1807  918C
1808  918C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1809  918C
1810  918C              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1811  918C              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1812  918C              ;	LD A,B
1813  918C              ;	AND A
1814  918C              ;	JR NZ,wait
1815  918C              ;	RET
1816  918C
1817  918C              ; ---------------------------------------------------------------------------------------------------------------
1818  918C              ;
1819  918C              ;	13/07/24
1820  918C              ;
1821  918C
1822  918C              Inicia_Shield
1823  918C
1824  918C 21 89 8C     	ld hl,Datos_Shield
1825  918F 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1826  9192
1827  9192 7E           	ld a,(hl)
1828  9193 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1829  9196
1830  9196 3E 01        	ld a,1
1831  9198 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1832  919B
1833  919B C9           	ret
1834  919C
1835  919C              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1836  919C              ;
1837  919C              ;	4/6/24
1838  919C              ;
1839  919C              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1840  919C              ;
1841  919C              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1842  919C              ;
1843  919C
1844  919C              Actualiza_pantalla
1845  919C
1846  919C 3E 02        	ld a,2
1847  919E D3 FE        	out ($fe),a
1848  91A0
1849  91A0 3A 65 8C     	ld a,(Ctrl_3)
1850  91A3 CB 57        	bit 2,a
1851  91A5 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1852  91A7
1853  91A7              Borrando_entidades
1854  91A7
1855  91A7 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1856  91AA CD 1E 91     	call Extrae_address
1857  91AD 24           	inc h
1858  91AE 25           	dec h
1859  91AF 28 05        	jr z,Pintando_entidades
1860  91B1 CD 10 96     	call Pinta_Sprites
1861  91B4 18 F1        	jr Borrando_entidades
1862  91B6
1863  91B6              Pintando_entidades
1864  91B6
1865  91B6 2A 61 8C     	ld hl,(India_SP)
1866  91B9 2C           	inc l
1867  91BA CD 1E 91     	call Extrae_address
1868  91BD 24           	inc h
1869  91BE 25           	dec h
1870  91BF 28 0E        	jr z,Ejecuta_escudo
1871  91C1 1C           	inc e
1872  91C2 1C           	inc e
1873  91C3 ED 53 61 8C  	ld (India_SP),de
1874  91C7 CD 1E 91     	call Extrae_address
1875  91CA CD 10 96     	call Pinta_Sprites
1876  91CD 18 E7        	jr Pintando_entidades
1877  91CF
1878  91CF              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1879  91CF
1880  91CF              Ejecuta_escudo
1881  91CF
1882  91CF 3A 8F 8C     	ld a,(Shield)
1883  91D2 A7           	and a
1884  91D3 20 2F        	jr nz,Aplica_Shield
1885  91D5
1886  91D5              Borrando_Amadeus
1887  91D5
1888  91D5 21 65 8C     	ld hl,Ctrl_3
1889  91D8 CB 6E        	bit 5,(hl)
1890  91DA 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1891  91DC
1892  91DC 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1893  91DF CD 1E 91     	call Extrae_address
1894  91E2 24           	inc h
1895  91E3 25           	dec h
1896  91E4 28 03        	jr z,Pintando_Amadeus
1897  91E6 CD 10 96     	call Pinta_Sprites
1898  91E9
1899  91E9              Pintando_Amadeus
1900  91E9
1901  91E9 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1902  91EC CD 1E 91     	call Extrae_address
1903  91EF 24           	inc h
1904  91F0 25           	dec h
1905  91F1 28 03        	jr z,1F
1906  91F3 CD 10 96     	call Pinta_Sprites
1907  91F6
1908  91F6              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1909  91F6
1910  91F6 21 65 8C     1 ld hl,Ctrl_3
1911  91F9 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1912  91FB CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1913  91FD CB AE        	res 5,(hl)
1914  91FF
1915  91FF 3E 01        	ld a,1												; Borde azul.
1916  9201 D3 FE        	out ($fe),a
1917  9203
1918  9203 C9           	ret
1919  9204
1920  9204              Aplica_Shield
1921  9204
1922  9204              ;	Bit 1 "1" (Shield_3) Sólo borra.
1923  9204              ;		  "0"     ""     Borra/Pinta.
1924  9204              ;	Bit 2    ""  RET.	 No borra, no pinta.
1925  9204
1926  9204 21 91 8C     	ld hl,Shield_3
1927  9207
1928  9207 CB 5E        	bit 3,(hl)
1929  9209 20 DE        	jr nz,Pintando_Amadeus
1930  920B
1931  920B CB 56        	bit 2,(hl)
1932  920D 20 E7        	jr nz,1B
1933  920F
1934  920F CB 4E        	bit 1,(hl)
1935  9211 C4 18 92     	call nz,Borra_Amadeus_shield
1936  9214
1937  9214 28 BF        	jr z,Borrando_Amadeus
1938  9216 18 DE        	jr 1B
1939  9218
1940  9218              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1941  9218
1942  9218              Borra_Amadeus_shield
1943  9218
1944  9218 3A 65 8C     	ld a,(Ctrl_3)
1945  921B CB 6F        	bit 5,a
1946  921D 28 08        	jr z,1F
1947  921F
1948  921F 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1949  9222 CD 1E 91     	call Extrae_address
1950  9225 18 06        	jr 2F
1951  9227
1952  9227 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1953  922A CD 1E 91     	call Extrae_address
1954  922D
1955  922D CD 10 96     2 call Pinta_Sprites
1956  9230
1957  9230 AF           	xor a
1958  9231 3C           	inc a											; Asegura NZ en la salida de la rutina.
1959  9232
1960  9232 C9           	ret
1961  9233
1962  9233              Pinta_Amadeus_shield
1963  9233
1964  9233 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1965  9236 CD 1E 91     	call Extrae_address
1966  9239 CD 10 96     	call Pinta_Sprites
1967  923C
1968  923C AF           	xor a
1969  923D 3C           	inc a											; Asegura NZ en la salida de la rutina.
1970  923E
1971  923E C9           	ret
1972  923F
1973  923F              Borra_Pinta_Amadeus_shield
1974  923F
1975  923F CD 18 92     	call Borra_Amadeus_shield
1976  9242 CD 33 92     	call Pinta_Amadeus_shield
1977  9245 C9           	ret
1978  9246
1979  9246              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1980  9246              ;
1981  9246              ;	19/6/24
1982  9246              ;
1983  9246
1984  9246              Teclado
1985  9246
1986  9246              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1987  9246
1988  9246 3E F7        	ld a,$f7												; "5" para disparar.
1989  9248 DB FE        	in a,($fe)
1990  924A E6 10        	and $10
1991  924C
1992  924C CC AA A2     	call z,Genera_disparo_Amadeus
1993  924F
1994  924F 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1995  9251 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1996  9253 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1997  9255 CC 7D 9D         call z,Amadeus_a_izquierda
1998  9258
1999  9258 3E F7        	ld a,$f7
2000  925A DB FE        	in a,($fe)
2001  925C E6 01        	and $01
2002  925E C8           	ret z
2003  925F
2004  925F 3E F7        	ld a,$f7
2005  9261 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2006  9263 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2007  9265 CC 95 9D     	call z,Amadeus_a_derecha
2008  9268
2009  9268 C9           	ret
2010  9269
2011  9269              ; ------------------------------------------------------------------------------------------------------------------------
2012  9269              ;
2013  9269              ;	06/07/24
2014  9269              ;
2015  9269
2016  9269              Genera_explosion
2017  9269
2018  9269 21 77 8C     	ld hl,Clock_explosion
2019  926C 35           	dec (hl)
2020  926D 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2021  926F
2022  926F              Borra_entidad_colisionada
2023  926F
2024  926F CD 4A 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2025  9272 CD 7F 90     	call Cargamos_registros_con_explosion
2026  9275 CD 17 95     	call Genera_datos_de_impresion
2027  9278
2028  9278 AF           	xor a
2029  9279 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2030  927A
2031  927A C9           	ret
2032  927B
2033  927B              Siguiente_frame_explosion
2034  927B
2035  927B 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2036  927D
2037  927D              ; Avanza Frame de explosión.
2038  927D
2039  927D 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2040  9280 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2041  9283
2042  9283 79           	ld a,c
2043  9284 95           	sub l
2044  9285 20 0B        	jr nz,1F
2045  9287
2046  9287              ; Fín de la entidad !!!!!!!!!!!!!
2047  9287
2048  9287 21 37 8C     	ld hl,Numero_parcial_de_entidades
2049  928A 35           	dec (hl)
2050  928B 23           	inc hl
2051  928C 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2052  928D
2053  928D CD 05 94     	call Limpiamos_bandeja_DRAW
2054  9290 18 DD        	jr Borra_entidad_colisionada
2055  9292
2056  9292 23           1 inc hl
2057  9293 23           	inc hl
2058  9294 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2059  9297 18 D6        	jr Borra_entidad_colisionada
2060  9299
2061  9299              ; ----- ----- ----- ----- -----
2062  9299
2063  9299              Genera_explosion_Amadeus
2064  9299
2065  9299 21 78 8C     	ld hl,Clock_explosion_Amadeus
2066  929C 35           	dec (hl)
2067  929D 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2068  929F
2069  929F              Borra_Amadeus_impactado
2070  929F
2071  929F CD AF 8E     	call Change_Amadeus
2072  92A2 CD 8C 90     	call Cargamos_registros_con_explosion_Amadeus
2073  92A5 CD AD 90     	call Genera_datos_de_impresion_Amadeus
2074  92A8
2075  92A8 21 65 8C     	ld hl,Ctrl_3
2076  92AB CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2077  92AD
2078  92AD AF           	xor a
2079  92AE 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2080  92AF
2081  92AF C9           	ret
2082  92B0
2083  92B0              Siguiente_frame_explosion_Amadeus
2084  92B0
2085  92B0 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2086  92B2
2087  92B2              ; Avanza Frame de explosión.
2088  92B2
2089  92B2 2A BE 89     	ld hl,(Pamm_Amadeus)
2090  92B5 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2091  92B8
2092  92B8 79           	ld a,c
2093  92B9 95           	sub l
2094  92BA 20 0B        	jr nz,1F
2095  92BC
2096  92BC              ; Fín de Amadeus !!!!!!!!!!!!!
2097  92BC              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2098  92BC
2099  92BC AF           	xor a
2100  92BD 32 BB 89     	ld (Impacto_Amadeus),a
2101  92C0 21 65 8C     	ld hl,Ctrl_3
2102  92C3 CB F6        	set 6,(hl)
2103  92C5
2104  92C5 18 D8        	jr Borra_Amadeus_impactado
2105  92C7
2106  92C7 23           1 inc hl
2107  92C8 23           	inc hl
2108  92C9 22 BE 89     	ld (Pamm_Amadeus),hl
2109  92CC 18 D1        	jr Borra_Amadeus_impactado
2110  92CE
2111  92CE              ; ---------------------------------------------------------------
2112  92CE
2113  92CE              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92CE              ; ******************************************************************************************************************************************************************************************
   2+ 92CE              ;
   3+ 92CE              ;   21/04/24
   4+ 92CE              ;
   5+ 92CE              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92CE              ;   (XOR) bit a bit.
   7+ 92CE              ;
   8+ 92CE              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92CE
  10+ 92CE              Derivando_RND
  11+ 92CE
  12+ 92CE 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92D1
  14+ 92D1 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92D3 C5               push bc
  16+ 92D4              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92D4 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92D7              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92D7
  20+ 92D7 A7           6 and a                                 ; Carry a "0".
  21+ 92D8 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92DA 30 02            jr nc,1F
  23+ 92DC
  24+ 92DC CB C1            set 0,c
  25+ 92DE
  26+ 92DE 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92DF E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92E1 5F               ld e,a
  29+ 92E2
  30+ 92E2 7A               ld a,d
  31+ 92E3 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92E5 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92E7
  34+ 92E7 CB 3F            srl a
  35+ 92E9
  36+ 92E9 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92EA
  38+ 92EA 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92EB 28 04            jr z,4F
  40+ 92ED
  41+ 92ED CB FF            set 7,a
  42+ 92EF 18 02            jr 5F
  43+ 92F1
  44+ 92F1 CB BF        4 res 7,a
  45+ 92F3
  46+ 92F3 CB 21        5 sla c
  47+ 92F5 10 E0            djnz 6B
  48+ 92F7
  49+ 92F7 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92F8
  51+ 92F8 77               ld (hl),a
  52+ 92F9 23               inc hl
  53+ 92FA C1               pop bc
  54+ 92FB 10 D4            djnz 3B
  55+ 92FD
  56+ 92FD C9               ret
  57+ 92FE
  58+ 92FE
  59+ 92FE
# file closed: RND_Derivando.asm
2114  92FE              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92FE              ;---------------------------------------------------------------------------------------------------------------
   2+ 92FE              ;
   3+ 92FE              ;   13/11/24
   4+ 92FE
   5+ 92FE              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 92FE
   7+ 92FE              Genera_movimientos_masticados_del_nivel
   8+ 92FE
   9+ 92FE              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 92FE
  11+ 92FE              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 92FE              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 92FE              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 92FE
  15+ 92FE 2D           	dec l
  16+ 92FF 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9300 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9301 4E           	ld c,(hl)
  19+ 9302
  20+ 9302 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9303 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9304
  23+ 9304              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9304
  25+ 9304 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9305
  27+ 9305 CD 43 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9308
  29+ 9308              ;	Caja Master inicializada ???
  30+ 9308
  31+ 9308 7E           	ld a,(hl)
  32+ 9309 A7           	and a
  33+ 930A 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 930C
  35+ 930C              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 930C
  37+ 930C C1           	pop bc
  38+ 930D 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 930E C5           	push bc
  40+ 930F
  41+ 930F CD F0 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9312 CD 79 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9315
  44+ 9315 3A EE 8B     	ld a,(Tipo)
  45+ 9318 CD 53 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 931B
  47+ 931B              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 931B
  49+ 931B              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 931B              ;	ld a,(hl)
  51+ 931B              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 931B
  53+ 931B              ;	ld hl,Posicion_inicio
  54+ 931B              ;	ld (hl),a
  55+ 931B
  56+ 931B              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 931B              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 931B
  59+ 931B CD EC 8F     	call Construye_movimientos_masticados_entidad
  60+ 931E
  61+ 931E 2A 34 8C     	ld hl,(Puntero_indice_master)
  62+ 9321 CD 1E 91     	call Extrae_address
  63+ 9324
  64+ 9324 5D           	ld e,l
  65+ 9325 54           	ld d,h
  66+ 9326
  67+ 9326 CD A6 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9329
  69+ 9329              Movimientos_masticados_construidos
  70+ 9329
  71+ 9329 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 932A
  73+ 932A E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 932B 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 932C
  76+ 932C 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 932D 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 932F
  79+ 932F C9           	ret
  80+ 9330
  81+ 9330              ;---------------------------------------------------------------------------------------------------------------
  82+ 9330              ;
  83+ 9330              ;   9/11/24
  84+ 9330              ;
  85+ 9330              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9330              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9330              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9330              ;	_ de la 1ª entidad del Nivel.
  89+ 9330              ;
  90+ 9330              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9330
  92+ 9330              ;	MODIFICA: HL,DE y A.
  93+ 9330              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9330
  95+ 9330              Inicializa_1er_Nivel
  96+ 9330
  97+ 9330              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9330
  99+ 9330 21 D2 8B     	ld hl,Indice_de_niveles
 100+ 9333 CD 1E 91     	call Extrae_address
 101+ 9336 ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 933A
 103+ 933A 7E           	ld a,(hl)
 104+ 933B 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 933E
 106+ 933E 2C           	inc l
 107+ 933F 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9342
 109+ 9342 C9           	ret
 110+ 9343
 111+ 9343              ; ----------------------
 112+ 9343              ;
 113+ 9343              ;	13/11/24
 114+ 9343              ;
 115+ 9343
 116+ 9343              Situa_en_Caja_Master
 117+ 9343
 118+ 9343 CD 64 94         call Calcula_salto_en_BC
 119+ 9346 21 61 89         ld hl,Indice_de_cajas_master
 120+ 9349 A7               and a
 121+ 934A ED 4A            adc hl,bc
 122+ 934C 22 34 8C       	ld (Puntero_indice_master),hl
 123+ 934F CD 1E 91     	call Extrae_address
 124+ 9352 C9           	ret
 125+ 9353
 126+ 9353              ; ----------------------
 127+ 9353
 128+ 9353              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9353              ; 	ld bc,4
 130+ 9353              ; 	ldir
 131+ 9353              ; 	ret
 132+ 9353
 133+ 9353 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9354 CD 64 94         call Calcula_salto_en_BC
 135+ 9357 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 935A A7               and a
 137+ 935B ED 4A            adc hl,bc
 138+ 935D CD 1E 91         call Extrae_address
 139+ 9360 22 1F 8C         ld (Puntero_indice_mov),hl
 140+ 9363 C9               ret
 141+ 9364
 142+ 9364              ;---------------------------------------------------------------------------------------------------------------
 143+ 9364              ;
 144+ 9364              ;   13/11/24
 145+ 9364              ;
 146+ 9364              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9364
 148+ 9364
 149+ 9364              Prepara_Cajas_de_Entidades
 150+ 9364
 151+ 9364              ; Preparamos los punteros de las cajas de entidades:
 152+ 9364
 153+ 9364 CD 08 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9367              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9367 CD AF 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 936A
 157+ 936A 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 936D
 159+ 936D              ; En este punto:
 160+ 936D              ;
 161+ 936D              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 936D              ; B contiene (Numero_parcial_de_entidades).
 163+ 936D
 164+ 936D C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 936E
 166+ 936E 7E           	ld a,(hl)
 167+ 936F
 168+ 936F CD 43 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9372
 170+ 9372 ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9376
 172+ 9376 D5           	push de
 173+ 9377 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 9379
 175+ 9379 01 0C 00     	ld bc,12
 176+ 937C ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 937E              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 937E
 179+ 937E              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 937E              ;
 181+ 937E              ;
 182+ 937E              ; ------------------------------------------------------ IX
 183+ 937E              ; ------------------------------------------------------ IX
 184+ 937E              ; ------------------------------------------------------ IX
 185+ 937E              ; ------------------------------------------------------ IX
 186+ 937E
 187+ 937E CD 40 90     	call Obtenemos_puntero_de_impresion
 188+ 9381
 189+ 9381 DD 6E 05     	ld l,(ix+5)
 190+ 9384 2C           	inc l
 191+ 9385 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 192+ 9388
 193+ 9388 CD EB 94     	call Genera_coordenadas
 194+ 938B
 195+ 938B ED 4B EF 8B  	ld bc,(Coordenada_X)
 196+ 938F
 197+ 938F DD 71 01     	ld (ix+1),c
 198+ 9392 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 199+ 9395
 200+ 9395              ; ------------------------------------------------------
 201+ 9395              ; ------------------------------------------------------
 202+ 9395              ; ------------------------------------------------------
 203+ 9395              ; ------------------------------------------------------
 204+ 9395
 205+ 9395 18 FE        	jr $
 206+ 9397
 207+ 9397 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
 208+ 939B
 209+ 939B CD 4A 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 210+ 939E D1           	pop de
 211+ 939F
 212+ 939F CD 17 95     	call Genera_datos_de_impresion
 213+ 93A2              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 93A2              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 93A2              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 93A2              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 93A2
 218+ 93A2 CD 28 94     	call Decrementa_Contador_de_mov_masticados
 219+ 93A5
 220+ 93A5              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 221+ 93A5
 222+ 93A5 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 223+ 93A9 CD A6 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 224+ 93AC
 225+ 93AC CD 05 94     	call Limpiamos_bandeja_DRAW
 226+ 93AF CD 6C 91     	call Incrementa_punteros_de_cajas
 227+ 93B2
 228+ 93B2              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 229+ 93B2              ; _ entidad del Nivel.
 230+ 93B2
 231+ 93B2 3A 66 8C     	ld a,(Ctrl_4)
 232+ 93B5 E6 F0        	and $f0
 233+ 93B7 32 66 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 234+ 93BA
 235+ 93BA              ; Siguiente entidad del Nivel.
 236+ 93BA
 237+ 93BA 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 238+ 93BD 23           	inc hl 														; _ entidad del Nivel.
 239+ 93BE
 240+ 93BE C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 241+ 93BF
 242+ 93BF 10 AC        	djnz 1B
 243+ 93C1
 244+ 93C1 C9           	ret
 245+ 93C2
 246+ 93C2              ; -------------------------------------------------------------------------------------------------------------------
 247+ 93C2              ;
 248+ 93C2              ;	27/5/24
 249+ 93C2              ;
 250+ 93C2              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 251+ 93C2              ;
 252+ 93C2
 253+ 93C2              ; 	Cargamos la definición de Amadeus en DRAW.
 254+ 93C2              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 255+ 93C2
 256+ 93C2 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 257+ 93C5 CD 79 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 258+ 93C8
 259+ 93C8
 260+ 93C8              Construye_movimientos_masticados_Amadeus
 261+ 93C8
 262+ 93C8 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 263+ 93CB CD 33 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 264+ 93CE              ;															; _ el (Contador_de_mov_masticados).
 265+ 93CE CD 24 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 266+ 93D1              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 267+ 93D1
 268+ 93D1              ; Generamos movimientos masticados de Amadeus.
 269+ 93D1
 270+ 93D1 06 79        	ld b,121												; $0079, 121d.
 271+ 93D3
 272+ 93D3 C5           1 push bc
 273+ 93D4 CD 33 97     	call Draw
 274+ 93D7 CD 18 90     	call Guarda_movimiento_masticado
 275+ 93DA
 276+ 93DA CD A7 9A     	call Mov_right
 277+ 93DD CD A7 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 278+ 93E0
 279+ 93E0 C1           	pop bc
 280+ 93E1 10 F0        	djnz 1B
 281+ 93E3
 282+ 93E3              ; Todos los movimientos masticados de Amadeus se han creado.
 283+ 93E3
 284+ 93E3              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 285+ 93E3              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 286+ 93E3
 287+ 93E3 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 288+ 93E6 01 08 00     	ld bc,8
 289+ 93E9 A7           	and a
 290+ 93EA ED 42        	sbc hl,bc
 291+ 93EC 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 292+ 93EF
 293+ 93EF C9           	ret
 294+ 93F0
 295+ 93F0              ; ---------------------------------------------------------------------
 296+ 93F0              ;
 297+ 93F0              ;	10/02/24
 298+ 93F0              ;
 299+ 93F0              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 300+ 93F0              ;
 301+ 93F0              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 302+ 93F0
 303+ 93F0              Definicion_segun_tipo
 304+ 93F0
 305+ 93F0 CD 64 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 306+ 93F3 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 307+ 93F6 CD 6F 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 308+ 93F9 C9           	ret
 309+ 93FA
 310+ 93FA              ; ---------------------------------------------------------------------
 311+ 93FA              ;
 312+ 93FA              ;	6/7/24
 313+ 93FA
 314+ 93FA
 315+ 93FA              Store_Restore_cajas
 316+ 93FA
 317+ 93FA ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 318+ 93FE CD A6 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 319+ 9401 CD 6C 91     	call Incrementa_punteros_de_cajas
 320+ 9404 C9           	ret
 321+ 9405
 322+ 9405              ; ---------------------------------------------------------------------
 323+ 9405              ;
 324+ 9405              ;	23/6/24
 325+ 9405              ;
 326+ 9405              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 327+ 9405              ;
 328+ 9405              ;	MODIFY: HL
 329+ 9405
 330+ 9405              Limpiamos_bandeja_DRAW
 331+ 9405
 332+ 9405 ED 73 3D 8C  	ld (Stack),sp
 333+ 9409 31 13 8C     	ld sp,Vel_left
 334+ 940C
 335+ 940C AF           	xor a
 336+ 940D 67           	ld h,a
 337+ 940E 6F           	ld l,a
 338+ 940F
 339+ 940F E5           	push hl
 340+ 9410 E5           	push hl
 341+ 9411 E5           	push hl
 342+ 9412 E5           	push hl
 343+ 9413 E5           	push hl
 344+ 9414 E5           	push hl
 345+ 9415 E5           	push hl
 346+ 9416 E5           	push hl
 347+ 9417 E5           	push hl
 348+ 9418 E5           	push hl
 349+ 9419 E5           	push hl
 350+ 941A E5           	push hl
 351+ 941B E5           	push hl
 352+ 941C E5           	push hl
 353+ 941D E5           	push hl
 354+ 941E E5           	push hl
 355+ 941F E5           	push hl
 356+ 9420 E5           	push hl
 357+ 9421
 358+ 9421 33           	inc sp
 359+ 9422
 360+ 9422 E5           	push hl
 361+ 9423 ED 7B 3D 8C  	ld sp,(Stack)
 362+ 9427
 363+ 9427 C9           	ret
 364+ 9428
 365+ 9428              ; ---------------------------------------------------------------------
 366+ 9428              ;
 367+ 9428              ;	24/03/24
 368+ 9428
 369+ 9428 2A F7 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 370+ 942B 2B           	dec hl
 371+ 942C 22 F7 8B     	ld (Contador_de_mov_masticados),hl
 372+ 942F C9           	ret
 373+ 9430
 374+ 9430              ; ---------------------------------------------------------------------
 375+ 9430              ;
 376+ 9430              ;	7/11/24
 377+ 9430
 378+ 9430              Reinicia_entidad_maliciosa
 379+ 9430
 380+ 9430              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 381+ 9430
 382+ 9430 CD 14 9F     	call Situa_en_contador_general_de_mov_masticados
 383+ 9433 CD 21 9F     	call Transfiere_datos_de_contadores
 384+ 9436
 385+ 9436              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 386+ 9436
 387+ 9436 3A EE 8B     	ld a,(Tipo)
 388+ 9439 CD F0 93     	call Definicion_segun_tipo
 389+ 943C
 390+ 943C E5           	push hl
 391+ 943D DD E1        	pop ix
 392+ 943F
 393+ 943F DD 6E 0B     	ld l,(ix+11)
 394+ 9442 DD 66 0C     	ld h,(ix+12)
 395+ 9445
 396+ 9445 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 397+ 9448
 398+ 9448 CD 68 90     	call Cargamos_registros_con_mov_masticado
 399+ 944B
 400+ 944B              ; Incrementa (Contador_de_vueltas)x2.
 401+ 944B              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 402+ 944B
 403+ 944B              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 404+ 944B              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 405+ 944B              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 406+ 944B              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 407+ 944B              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 408+ 944B
 409+ 944B 21 F1 8B     	ld hl,Contador_de_vueltas
 410+ 944E CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 411+ 9450
 412+ 9450 7E           	ld a,(hl)
 413+ 9451 CB 2F        	sra a
 414+ 9453 CB 2F        	sra a
 415+ 9455
 416+ 9455 32 F9 8B     	ld (Velocidad),a
 417+ 9458
 418+ 9458 3E 40        	ld a,$40
 419+ 945A BE           	cp (hl)
 420+ 945B C0           	ret nz
 421+ 945C
 422+ 945C              ; Límitador.
 423+ 945C
 424+ 945C              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 425+ 945C
 426+ 945C CB 2E        	sra (hl)
 427+ 945E 21 F9 8B     	ld hl,Velocidad
 428+ 9461 CB 2E        	sra (hl)
 429+ 9463
 430+ 9463 C9           	ret
 431+ 9464
 432+ 9464              ;	------------------------------------------------------------------------------------
 433+ 9464              ;
 434+ 9464              ;	09/11/24
 435+ 9464              ;
 436+ 9464              ;	INPUTS:	A contiene el (Tipo) de entidad.
 437+ 9464              ;
 438+ 9464              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 439+ 9464              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 440+ 9464
 441+ 9464 A7           Calcula_salto_en_BC and a
 442+ 9465 28 04        	jr z,1F
 443+ 9467 CB 27        	sla a
 444+ 9469 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 445+ 946B 4F           1 ld c,a
 446+ 946C 06 00        	ld b,0
 447+ 946E C9           	ret
 448+ 946F
 449+ 946F              ; ------------------------------------------------------------------
 450+ 946F              ;
 451+ 946F              ;	19/1/24
 452+ 946F              ;
 453+ 946F              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 454+ 946F              ;	Actualiza (Datos_de_entidad) con esa dirección.
 455+ 946F
 456+ 946F A7           Situa_en_datos_de_definicion and a
 457+ 9470 ED 4A        	adc hl,bc
 458+ 9472 CD 1E 91     	call Extrae_address
 459+ 9475 22 3B 8C         ld (Datos_de_entidad),hl
 460+ 9478 C9           	ret
 461+ 9479
 462+ 9479              ; ------------------------------------------------------------------
 463+ 9479
 464+ 9479              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 465+ 9479              ; 	inc de
 466+ 9479              ; 	inc de
 467+ 9479              ; 	ex de,hl
 468+ 9479              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 469+ 9479              ; 	ret
 470+ 9479
 471+ 9479              ; ----------------------------------------------------------------------------------------------------------
 472+ 9479              ;
 473+ 9479              ;	24/6/24
 474+ 9479              ;
 475+ 9479              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 476+ 9479              ;	_ de entidad.
 477+ 9479              ;
 478+ 9479              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 479+ 9479              ;
 480+ 9479              ;
 481+ 9479              ;	MODIFICA: HL,DE y BC
 482+ 9479
 483+ 9479
 484+ 9479              Definicion_de_entidad_a_bandeja_DRAW
 485+ 9479
 486+ 9479 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 487+ 947C 7E           	ld a,(hl) 									; Volcamos Tipo.
 488+ 947D 12           	ld (de),a
 489+ 947E 23           	inc hl
 490+ 947F              ;
 491+ 947F 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 492+ 9482 01 02 00     	ld bc,2
 493+ 9485 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 494+ 9487              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 495+ 9487 11 F1 8B     	ld de,Contador_de_vueltas
 496+ 948A 7E           	ld a,(hl)
 497+ 948B 12           	ld (de),a
 498+ 948C 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 499+ 948D
 500+ 948D 11 03 8C     	ld de,Indice_Sprite_der
 501+ 9490 01 04 00     	ld bc,4
 502+ 9493 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 503+ 9495
 504+ 9495 11 0B 8C     	ld de,Posicion_inicio
 505+ 9498 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 506+ 949B ED B0        	ldir 									; Vuelco (Frames_explosion).
 507+ 949D
 508+ 949D 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 509+ 94A0 01 02 00     	ld bc,2
 510+ 94A3 ED B0        	ldir
 511+ 94A5
 512+ 94A5 C9           	ret
 513+ 94A6
 514+ 94A6              ; ----------------------------------------------------------------------------------------------------------
 515+ 94A6              ;
 516+ 94A6              ;	1/8/24
 517+ 94A6              ;
 518+ 94A6
 519+ 94A6              Parametros_de_bandeja_DRAW_a_caja
 520+ 94A6
 521+ 94A6 21 EE 8B     	ld hl,Bandeja_DRAW
 522+ 94A9 01 0C 00     	ld bc,12
 523+ 94AC ED B0        	ldir
 524+ 94AE C9           	ret
 525+ 94AF
 526+ 94AF              ;---------------------------------------------------------------------------------------------------------------
 527+ 94AF              ;
 528+ 94AF              ;	13/11/24
 529+ 94AF              ;
 530+ 94AF              ;	INICIALIZA (Numero_parcial_de_entidades).
 531+ 94AF              ;
 532+ 94AF              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 533+ 94AF              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 534+ 94AF
 535+ 94AF              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 536+ 94AF              ;			- Actualiza (Numero_de_entidades).
 537+ 94AF
 538+ 94AF              ;	MODIFICA: A y B.
 539+ 94AF
 540+ 94AF
 541+ 94AF              Inicializa_Numero_parcial_de_entidades
 542+ 94AF
 543+ 94AF 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 544+ 94B2 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 545+ 94B4 38 0E        	jr c,1F
 546+ 94B6 28 0C        	jr z,1F
 547+ 94B8
 548+ 94B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 549+ 94B8              ; Actualizamos variables.
 550+ 94B8
 551+ 94B8 D6 06        	sub 6
 552+ 94BA 32 36 8C     	ld (Numero_de_entidades),a
 553+ 94BD 3E 06        	ld a,6
 554+ 94BF 32 37 8C     	ld (Numero_parcial_de_entidades),a
 555+ 94C2 47           	ld b,a
 556+ 94C3 C9           	ret
 557+ 94C4
 558+ 94C4              ; El nº total de entidades no supera el nº de cajas de entidades.
 559+ 94C4              ; (Numero_de_entidades)="0".
 560+ 94C4
 561+ 94C4 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 562+ 94C7 47           	ld b,a
 563+ 94C8 AF           	xor a
 564+ 94C9 32 36 8C     	ld (Numero_de_entidades),a
 565+ 94CC C9           	ret
 566+ 94CD
# file closed: Rutinas_de_inicio_y_niveles.asm
2115  94CD              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94CD              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94CD              ;
   3+ 94CD              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94CD              ;
   5+ 94CD              ; *****************************************************************************************************************************************************************************************
   6+ 94CD              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94CD
   8+ 94CD 7C           calcula_tercio ld a,h
   9+ 94CE E6 18        	and $18
  10+ 94D0 CB 2F        	sra a
  11+ 94D2 CB 2F        	sra a
  12+ 94D4 CB 2F        	sra a
  13+ 94D6 C9           	ret
  14+ 94D7
# file closed: calcula_tercio.asm
2116  94D7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94D7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94D7              ;
   3+ 94D7              ;
   4+ 94D7              ;	CLS.
   5+ 94D7              ;
   6+ 94D7              ;	Limpia la pantalla y define sus atributos.
   7+ 94D7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94D7              ;
   9+ 94D7              ;	COLORES: 0 ..... NEGRO
  10+ 94D7              ;    		 1 ..... AZUL
  11+ 94D7              ; 			 2 ..... ROJO
  12+ 94D7              ;			 3 ..... MAGENTA
  13+ 94D7              ; 			 4 ..... VERDE
  14+ 94D7              ; 			 5 ..... CIAN
  15+ 94D7              ;			 6 ..... AMARILLO
  16+ 94D7              ; 			 7 ..... BLANCO
  17+ 94D7              ;
  18+ 94D7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94D7              ;
  20+ 94D7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94D7
  22+ 94D7
  23+ 94D7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94DA 11 01 40     	LD DE,$4001
  25+ 94DD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94E0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94E2 ED B0        	LDIR
  28+ 94E4 01 FF 02     	LD BC,767
  29+ 94E7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94E8 ED B0        	LDIR
  31+ 94EA C9           	ret
  32+ 94EB
# file closed: Cls.asm
2117  94EB              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94EB              ; ------------------------------------------------------------------------
   2+ 94EB              ;
   3+ 94EB              ;	30/1/24
   4+ 94EB              ;
   5+ 94EB              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94EB              ;	Fila superior "0", Columna izquierda "0".
   7+ 94EB              ;
   8+ 94EB              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94EB              ;
  10+ 94EB              ;	Modifica: A,BC y DE.
  11+ 94EB
  12+ 94EB              Genera_coordenadas
  13+ 94EB
  14+ 94EB 7D           	ld a,l
  15+ 94EC E6 1F        	and $1f
  16+ 94EE
  17+ 94EE 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 94F1
  19+ 94F1 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 94F2 FE 40        	cp $40
  21+ 94F4 38 1C        	jr c,4F
  22+ 94F6
  23+ 94F6 CD CD 94     	call calcula_tercio
  24+ 94F9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 94FA
  26+ 94FA 1E 00        	ld e,0
  27+ 94FC 7D           	ld a,l
  28+ 94FD E6 E0        	and $e0
  29+ 94FF 28 01        	jr z,1F
  30+ 9501 04           	inc b
  31+ 9502
  32+ 9502 04           1 inc b
  33+ 9503 05           	dec b
  34+ 9504 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9506              ;														; _ , salimos.
  36+ 9506 1C           3 inc e
  37+ 9507 D6 20        	sub 32
  38+ 9509 20 FB        	jr nz,3B
  39+ 950B 10 F5        	djnz 1B
  40+ 950D
  41+ 950D 7B           2 ld a,e
  42+ 950E 32 F0 8B     	ld (Coordenada_y),a
  43+ 9511 C9           	ret
  44+ 9512
  45+ 9512 AF           4 xor a
  46+ 9513 32 F0 8B     	ld (Coordenada_y),a
  47+ 9516 C9           	ret
  48+ 9517
# file closed: Genera_coordenadas.asm
2118  9517              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9517              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9517              ;
   3+ 9517              ;	20/09/24
   4+ 9517              ;
   5+ 9517              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9517              ;   DE contiene Puntero_objeto.
   7+ 9517              ;   IX contiene el Puntero de impresión.
   8+ 9517
   9+ 9517              Genera_datos_de_impresion
  10+ 9517
  11+ 9517 ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 951B
  13+ 951B 31 F5 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 951E DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9520
  16+ 9520 2A 5F 8C         ld hl,(Scanlines_album_SP)
  17+ 9523
  18+ 9523 3E 05            ld a,5
  19+ 9525 85               add l
  20+ 9526 6F               ld l,a
  21+ 9527
  22+ 9527 F9               ld sp,hl
  23+ 9528 22 5F 8C         ld (Scanlines_album_SP),hl
  24+ 952B
  25+ 952B 21 00 00         ld hl,0
  26+ 952E
  27+ 952E DD E5            push ix
  28+ 9530 3B               dec sp
  29+ 9531 ED 7A            adc hl,sp
  30+ 9533 D5               push de
  31+ 9534
  32+ 9534              ; Recuperamos SP.
  33+ 9534
  34+ 9534 ED 7B 3D 8C      ld sp,(Stack)
  35+ 9538
  36+ 9538 E5               push hl
  37+ 9539 F1               pop af
  38+ 953A 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 953B
  40+ 953B              ; Tenemos el encabezado listo.
  41+ 953B              ; Preparamos registros para generar los scanlines.
  42+ 953B
  43+ 953B DD E5            push ix
  44+ 953D E1               pop hl                                          ; 1er scanline en HL.
  45+ 953E
  46+ 953E ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  47+ 9542
  48+ 9542              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9542              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9542
  51+ 9542 7C               ld a,h
  52+ 9543 FE 50            cp $50
  53+ 9545 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9547
  55+ 9547 20 05            jr nz,2F
  56+ 9549
  57+ 9549 7D               ld a,l
  58+ 954A FE E0            cp $e0
  59+ 954C 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 954E
  61+ 954E 7D           2 ld a,l
  62+ 954F FE C0            cp $c0
  63+ 9551 D2 E7 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9554
  65+ 9554              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9554
  67+ 9554 CD E5 99         call NextScan
  68+ 9557 EB               ex de,hl
  69+ 9558
  70+ 9558 73               ld (hl),e
  71+ 9559 23               inc hl
  72+ 955A 72               ld (hl),d
  73+ 955B 23               inc hl
  74+ 955C
  75+ 955C EB               ex de,hl
  76+ 955D
  77+ 955D CD E5 99         call NextScan
  78+ 9560 EB               ex de,hl
  79+ 9561
  80+ 9561 73               ld (hl),e
  81+ 9562 23               inc hl
  82+ 9563 72               ld (hl),d
  83+ 9564 23               inc hl
  84+ 9565
  85+ 9565 EB               ex de,hl
  86+ 9566
  87+ 9566 CD E5 99         call NextScan
  88+ 9569 EB               ex de,hl
  89+ 956A
  90+ 956A 73               ld (hl),e
  91+ 956B 23               inc hl
  92+ 956C 72               ld (hl),d
  93+ 956D 23               inc hl
  94+ 956E
  95+ 956E EB               ex de,hl
  96+ 956F
  97+ 956F CD E5 99         call NextScan
  98+ 9572 EB               ex de,hl
  99+ 9573
 100+ 9573 73               ld (hl),e
 101+ 9574 23               inc hl
 102+ 9575 72               ld (hl),d
 103+ 9576 23               inc hl
 104+ 9577
 105+ 9577 EB               ex de,hl
 106+ 9578
 107+ 9578 CD E5 99         call NextScan
 108+ 957B EB               ex de,hl
 109+ 957C
 110+ 957C 73               ld (hl),e
 111+ 957D 23               inc hl
 112+ 957E 72               ld (hl),d
 113+ 957F 23               inc hl
 114+ 9580
 115+ 9580 EB               ex de,hl
 116+ 9581
 117+ 9581 CD E5 99         call NextScan
 118+ 9584 EB               ex de,hl
 119+ 9585
 120+ 9585 73               ld (hl),e
 121+ 9586 23               inc hl
 122+ 9587 72               ld (hl),d
 123+ 9588 23               inc hl
 124+ 9589
 125+ 9589 EB               ex de,hl
 126+ 958A
 127+ 958A CD E5 99         call NextScan
 128+ 958D EB               ex de,hl
 129+ 958E
 130+ 958E 73               ld (hl),e
 131+ 958F 23               inc hl
 132+ 9590 72               ld (hl),d
 133+ 9591 23               inc hl
 134+ 9592
 135+ 9592 EB               ex de,hl
 136+ 9593
 137+ 9593 CD E5 99         call NextScan
 138+ 9596 EB               ex de,hl
 139+ 9597
 140+ 9597 73               ld (hl),e
 141+ 9598 23               inc hl
 142+ 9599 72               ld (hl),d
 143+ 959A 23               inc hl
 144+ 959B
 145+ 959B EB               ex de,hl
 146+ 959C
 147+ 959C CD E5 99         call NextScan
 148+ 959F EB               ex de,hl
 149+ 95A0
 150+ 95A0 73               ld (hl),e
 151+ 95A1 23               inc hl
 152+ 95A2 72               ld (hl),d
 153+ 95A3 23               inc hl
 154+ 95A4
 155+ 95A4 EB               ex de,hl
 156+ 95A5
 157+ 95A5 CD E5 99         call NextScan
 158+ 95A8 EB               ex de,hl
 159+ 95A9
 160+ 95A9 73               ld (hl),e
 161+ 95AA 23               inc hl
 162+ 95AB 72               ld (hl),d
 163+ 95AC 23               inc hl
 164+ 95AD
 165+ 95AD EB               ex de,hl
 166+ 95AE
 167+ 95AE CD E5 99         call NextScan
 168+ 95B1 EB               ex de,hl
 169+ 95B2
 170+ 95B2 73               ld (hl),e
 171+ 95B3 23               inc hl
 172+ 95B4 72               ld (hl),d
 173+ 95B5 23               inc hl
 174+ 95B6
 175+ 95B6 EB               ex de,hl
 176+ 95B7
 177+ 95B7 CD E5 99         call NextScan
 178+ 95BA EB               ex de,hl
 179+ 95BB
 180+ 95BB 73               ld (hl),e
 181+ 95BC 23               inc hl
 182+ 95BD 72               ld (hl),d
 183+ 95BE 23               inc hl
 184+ 95BF
 185+ 95BF EB               ex de,hl
 186+ 95C0
 187+ 95C0 CD E5 99         call NextScan
 188+ 95C3 EB               ex de,hl
 189+ 95C4
 190+ 95C4 73               ld (hl),e
 191+ 95C5 23               inc hl
 192+ 95C6 72               ld (hl),d
 193+ 95C7 23               inc hl
 194+ 95C8
 195+ 95C8 EB               ex de,hl
 196+ 95C9
 197+ 95C9 CD E5 99         call NextScan
 198+ 95CC EB               ex de,hl
 199+ 95CD
 200+ 95CD 73               ld (hl),e
 201+ 95CE 23               inc hl
 202+ 95CF 72               ld (hl),d
 203+ 95D0 23               inc hl
 204+ 95D1
 205+ 95D1 EB               ex de,hl
 206+ 95D2
 207+ 95D2 CD E5 99         call NextScan
 208+ 95D5 EB               ex de,hl
 209+ 95D6
 210+ 95D6              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95D6              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95D6              ;   _ generar sus scanlines.
 213+ 95D6
 214+ 95D6              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95D6
 216+ 95D6 73               ld (hl),e
 217+ 95D7 23               inc hl
 218+ 95D8 72               ld (hl),d
 219+ 95D9 23               inc hl
 220+ 95DA
 221+ 95DA              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95DA
 223+ 95DA 22 5F 8C         ld (Scanlines_album_SP),hl
 224+ 95DD
 225+ 95DD EB               ex de,hl
 226+ 95DE
 227+ 95DE              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95DE
 229+ 95DE              ;    call NextScan
 230+ 95DE              ;    call NextScan
 231+ 95DE
 232+ 95DE 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95E1
 234+ 95E1              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95E1
 236+ 95E1 08               ex af,af
 237+ 95E2
 238+ 95E2 F5               push af
 239+ 95E3 E1               pop hl
 240+ 95E4
 241+ 95E4 36 10            ld (hl),16
 242+ 95E6
 243+ 95E6 C9               ret
 244+ 95E7
 245+ 95E7              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95E7
 247+ 95E7              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95E7
 249+ 95E7 3E 57            ld a,$57
 250+ 95E9 94               sub h
 251+ 95EA 47               ld b,a
 252+ 95EB
 253+ 95EB 3E DF            ld a,$df
 254+ 95ED BD               cp l
 255+ 95EE 38 04            jr c,1F
 256+ 95F0
 257+ 95F0 3E 08            ld a,8
 258+ 95F2 80               add b
 259+ 95F3 47               ld b,a
 260+ 95F4
 261+ 95F4              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95F4              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95F4
 264+ 95F4 48           1 ld c,b
 265+ 95F5 0C               inc c
 266+ 95F6
 267+ 95F6 04               inc b
 268+ 95F7 05               dec b
 269+ 95F8 20 02            jr nz,3F
 270+ 95FA
 271+ 95FA 18 0B            jr 6F
 272+ 95FC
 273+ 95FC CD E5 99     3 call NextScan
 274+ 95FF EB               ex de,hl
 275+ 9600
 276+ 9600 73               ld (hl),e
 277+ 9601 23               inc hl
 278+ 9602 72               ld (hl),d
 279+ 9603 23               inc hl
 280+ 9604
 281+ 9604 EB               ex de,hl
 282+ 9605 10 F5            djnz 3B
 283+ 9607
 284+ 9607 ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 285+ 960B
 286+ 960B 08           5 ex af,af
 287+ 960C F5               push af
 288+ 960D E1               pop hl
 289+ 960E
 290+ 960E 71               ld (hl),c
 291+ 960F
 292+ 960F C9               ret
 293+ 9610
# file closed: Genera_datos_de_impresion.asm
2119  9610              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9610              ; -----------------------------------------------------------------------------
   2+ 9610              ;
   3+ 9610              ;   11/03/24
   4+ 9610              ;
   5+ 9610
   6+ 9610              Pinta_Sprites
   7+ 9610
   8+ 9610              ;    ld hl,(Scanlines_album_SP)
   9+ 9610              ;    call Extrae_address
  10+ 9610
  11+ 9610              ;    inc h
  12+ 9610              ;    dec h
  13+ 9610              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9610
  15+ 9610 ED 73 3D 8C      ld (Stack),sp
  16+ 9614
  17+ 9614 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9615              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9615 2C               inc l
  20+ 9616 2C               inc l
  21+ 9617
  22+ 9617 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9618
  24+ 9618 2C               inc l
  25+ 9619 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 961A
  27+ 961A              ;   Seleccionamos rutina de impresión:
  28+ 961A
  29+ 961A 3E 10            ld a,16
  30+ 961C B8               cp b
  31+ 961D C2 19 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9620
  33+ 9620              ;   Rutinas:
  34+ 9620
  35+ 9620              Pinta_rapido    ;   1520 t/states.
  36+ 9620
  37+ 9620 E1               pop hl
  38+ 9621
  39+ 9621 1A               ld a,(de)
  40+ 9622 AE               xor (hl)
  41+ 9623 77               ld (hl),a
  42+ 9624 2C               inc l
  43+ 9625 1C               inc e
  44+ 9626 1A               ld a,(de)
  45+ 9627 AE               xor (hl)
  46+ 9628 77               ld (hl),a
  47+ 9629 2C               inc l
  48+ 962A 1C               inc e
  49+ 962B 1A               ld a,(de)
  50+ 962C AE               xor (hl)
  51+ 962D 77               ld (hl),a
  52+ 962E 13               inc de
  53+ 962F
  54+ 962F E1               pop hl
  55+ 9630
  56+ 9630 1A               ld a,(de)
  57+ 9631 AE               xor (hl)
  58+ 9632 77               ld (hl),a
  59+ 9633 2C               inc l
  60+ 9634 1C               inc e
  61+ 9635 1A               ld a,(de)
  62+ 9636 AE               xor (hl)
  63+ 9637 77               ld (hl),a
  64+ 9638 2C               inc l
  65+ 9639 1C               inc e
  66+ 963A 1A               ld a,(de)
  67+ 963B AE               xor (hl)
  68+ 963C 77               ld (hl),a
  69+ 963D 13               inc de
  70+ 963E
  71+ 963E E1               pop hl
  72+ 963F
  73+ 963F 1A               ld a,(de)
  74+ 9640 AE               xor (hl)
  75+ 9641 77               ld (hl),a
  76+ 9642 2C               inc l
  77+ 9643 1C               inc e
  78+ 9644 1A               ld a,(de)
  79+ 9645 AE               xor (hl)
  80+ 9646 77               ld (hl),a
  81+ 9647 2C               inc l
  82+ 9648 1C               inc e
  83+ 9649 1A               ld a,(de)
  84+ 964A AE               xor (hl)
  85+ 964B 77               ld (hl),a
  86+ 964C 13               inc de
  87+ 964D
  88+ 964D E1               pop hl
  89+ 964E
  90+ 964E 1A               ld a,(de)
  91+ 964F AE               xor (hl)
  92+ 9650 77               ld (hl),a
  93+ 9651 2C               inc l
  94+ 9652 1C               inc e
  95+ 9653 1A               ld a,(de)
  96+ 9654 AE               xor (hl)
  97+ 9655 77               ld (hl),a
  98+ 9656 2C               inc l
  99+ 9657 1C               inc e
 100+ 9658 1A               ld a,(de)
 101+ 9659 AE               xor (hl)
 102+ 965A 77               ld (hl),a
 103+ 965B 13               inc de
 104+ 965C
 105+ 965C E1               pop hl
 106+ 965D
 107+ 965D 1A               ld a,(de)
 108+ 965E AE               xor (hl)
 109+ 965F 77               ld (hl),a
 110+ 9660 2C               inc l
 111+ 9661 1C               inc e
 112+ 9662 1A               ld a,(de)
 113+ 9663 AE               xor (hl)
 114+ 9664 77               ld (hl),a
 115+ 9665 2C               inc l
 116+ 9666 1C               inc e
 117+ 9667 1A               ld a,(de)
 118+ 9668 AE               xor (hl)
 119+ 9669 77               ld (hl),a
 120+ 966A 13               inc de
 121+ 966B
 122+ 966B E1               pop hl
 123+ 966C
 124+ 966C 1A               ld a,(de)
 125+ 966D AE               xor (hl)
 126+ 966E 77               ld (hl),a
 127+ 966F 2C               inc l
 128+ 9670 1C               inc e
 129+ 9671 1A               ld a,(de)
 130+ 9672 AE               xor (hl)
 131+ 9673 77               ld (hl),a
 132+ 9674 2C               inc l
 133+ 9675 1C               inc e
 134+ 9676 1A               ld a,(de)
 135+ 9677 AE               xor (hl)
 136+ 9678 77               ld (hl),a
 137+ 9679 13               inc de
 138+ 967A
 139+ 967A E1               pop hl
 140+ 967B
 141+ 967B 1A               ld a,(de)
 142+ 967C AE               xor (hl)
 143+ 967D 77               ld (hl),a
 144+ 967E 2C               inc l
 145+ 967F 1C               inc e
 146+ 9680 1A               ld a,(de)
 147+ 9681 AE               xor (hl)
 148+ 9682 77               ld (hl),a
 149+ 9683 2C               inc l
 150+ 9684 1C               inc e
 151+ 9685 1A               ld a,(de)
 152+ 9686 AE               xor (hl)
 153+ 9687 77               ld (hl),a
 154+ 9688 13               inc de
 155+ 9689
 156+ 9689 E1               pop hl
 157+ 968A
 158+ 968A 1A               ld a,(de)
 159+ 968B AE               xor (hl)
 160+ 968C 77               ld (hl),a
 161+ 968D 2C               inc l
 162+ 968E 1C               inc e
 163+ 968F 1A               ld a,(de)
 164+ 9690 AE               xor (hl)
 165+ 9691 77               ld (hl),a
 166+ 9692 2C               inc l
 167+ 9693 1C               inc e
 168+ 9694 1A               ld a,(de)
 169+ 9695 AE               xor (hl)
 170+ 9696 77               ld (hl),a
 171+ 9697 13               inc de
 172+ 9698
 173+ 9698 E1               pop hl
 174+ 9699
 175+ 9699 1A               ld a,(de)
 176+ 969A AE               xor (hl)
 177+ 969B 77               ld (hl),a
 178+ 969C 2C               inc l
 179+ 969D 1C               inc e
 180+ 969E 1A               ld a,(de)
 181+ 969F AE               xor (hl)
 182+ 96A0 77               ld (hl),a
 183+ 96A1 2C               inc l
 184+ 96A2 1C               inc e
 185+ 96A3 1A               ld a,(de)
 186+ 96A4 AE               xor (hl)
 187+ 96A5 77               ld (hl),a
 188+ 96A6 13               inc de
 189+ 96A7
 190+ 96A7 E1               pop hl
 191+ 96A8
 192+ 96A8 1A               ld a,(de)
 193+ 96A9 AE               xor (hl)
 194+ 96AA 77               ld (hl),a
 195+ 96AB 2C               inc l
 196+ 96AC 1C               inc e
 197+ 96AD 1A               ld a,(de)
 198+ 96AE AE               xor (hl)
 199+ 96AF 77               ld (hl),a
 200+ 96B0 2C               inc l
 201+ 96B1 1C               inc e
 202+ 96B2 1A               ld a,(de)
 203+ 96B3 AE               xor (hl)
 204+ 96B4 77               ld (hl),a
 205+ 96B5 13               inc de
 206+ 96B6
 207+ 96B6 E1               pop hl
 208+ 96B7
 209+ 96B7 1A               ld a,(de)
 210+ 96B8 AE               xor (hl)
 211+ 96B9 77               ld (hl),a
 212+ 96BA 2C               inc l
 213+ 96BB 1C               inc e
 214+ 96BC 1A               ld a,(de)
 215+ 96BD AE               xor (hl)
 216+ 96BE 77               ld (hl),a
 217+ 96BF 2C               inc l
 218+ 96C0 1C               inc e
 219+ 96C1 1A               ld a,(de)
 220+ 96C2 AE               xor (hl)
 221+ 96C3 77               ld (hl),a
 222+ 96C4 13               inc de
 223+ 96C5
 224+ 96C5 E1               pop hl
 225+ 96C6
 226+ 96C6 1A               ld a,(de)
 227+ 96C7 AE               xor (hl)
 228+ 96C8 77               ld (hl),a
 229+ 96C9 2C               inc l
 230+ 96CA 1C               inc e
 231+ 96CB 1A               ld a,(de)
 232+ 96CC AE               xor (hl)
 233+ 96CD 77               ld (hl),a
 234+ 96CE 2C               inc l
 235+ 96CF 1C               inc e
 236+ 96D0 1A               ld a,(de)
 237+ 96D1 AE               xor (hl)
 238+ 96D2 77               ld (hl),a
 239+ 96D3 13               inc de
 240+ 96D4
 241+ 96D4 E1               pop hl
 242+ 96D5
 243+ 96D5 1A               ld a,(de)
 244+ 96D6 AE               xor (hl)
 245+ 96D7 77               ld (hl),a
 246+ 96D8 2C               inc l
 247+ 96D9 1C               inc e
 248+ 96DA 1A               ld a,(de)
 249+ 96DB AE               xor (hl)
 250+ 96DC 77               ld (hl),a
 251+ 96DD 2C               inc l
 252+ 96DE 1C               inc e
 253+ 96DF 1A               ld a,(de)
 254+ 96E0 AE               xor (hl)
 255+ 96E1 77               ld (hl),a
 256+ 96E2 13               inc de
 257+ 96E3
 258+ 96E3 E1               pop hl
 259+ 96E4
 260+ 96E4 1A               ld a,(de)
 261+ 96E5 AE               xor (hl)
 262+ 96E6 77               ld (hl),a
 263+ 96E7 2C               inc l
 264+ 96E8 1C               inc e
 265+ 96E9 1A               ld a,(de)
 266+ 96EA AE               xor (hl)
 267+ 96EB 77               ld (hl),a
 268+ 96EC 2C               inc l
 269+ 96ED 1C               inc e
 270+ 96EE 1A               ld a,(de)
 271+ 96EF AE               xor (hl)
 272+ 96F0 77               ld (hl),a
 273+ 96F1 13               inc de
 274+ 96F2
 275+ 96F2 E1               pop hl
 276+ 96F3
 277+ 96F3 1A               ld a,(de)
 278+ 96F4 AE               xor (hl)
 279+ 96F5 77               ld (hl),a
 280+ 96F6 2C               inc l
 281+ 96F7 1C               inc e
 282+ 96F8 1A               ld a,(de)
 283+ 96F9 AE               xor (hl)
 284+ 96FA 77               ld (hl),a
 285+ 96FB 2C               inc l
 286+ 96FC 1C               inc e
 287+ 96FD 1A               ld a,(de)
 288+ 96FE AE               xor (hl)
 289+ 96FF 77               ld (hl),a
 290+ 9700 13               inc de
 291+ 9701
 292+ 9701 E1               pop hl
 293+ 9702
 294+ 9702 1A               ld a,(de)
 295+ 9703 AE               xor (hl)
 296+ 9704 77               ld (hl),a
 297+ 9705 2C               inc l
 298+ 9706 1C               inc e
 299+ 9707 1A               ld a,(de)
 300+ 9708 AE               xor (hl)
 301+ 9709 77               ld (hl),a
 302+ 970A 2C               inc l
 303+ 970B 1C               inc e
 304+ 970C 1A               ld a,(de)
 305+ 970D AE               xor (hl)
 306+ 970E 77               ld (hl),a
 307+ 970F 13               inc de
 308+ 9710
 309+ 9710 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 9714 ED 7B 3D 8C      ld sp,(Stack)
 311+ 9718 C9               ret
 312+ 9719
 313+ 9719              Pinta_lento
 314+ 9719
 315+ 9719 E1           1 pop hl
 316+ 971A
 317+ 971A 1A               ld a,(de)
 318+ 971B AE               xor (hl)
 319+ 971C 77               ld (hl),a
 320+ 971D 2C               inc l
 321+ 971E 1C               inc e
 322+ 971F 1A               ld a,(de)
 323+ 9720 AE               xor (hl)
 324+ 9721 77               ld (hl),a
 325+ 9722 2C               inc l
 326+ 9723 1C               inc e
 327+ 9724 1A               ld a,(de)
 328+ 9725 AE               xor (hl)
 329+ 9726 77               ld (hl),a
 330+ 9727 13               inc de
 331+ 9728
 332+ 9728 10 EF            djnz 1B
 333+ 972A
 334+ 972A ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 972E ED 7B 3D 8C      ld sp,(Stack)
 336+ 9732 C9               ret
# file closed: Pinta_Sprites.asm
2120  9733              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9733              ; ******************************************************************************************************************************************************************************************
   2+ 9733              ;
   3+ 9733              ; 26/06/23
   4+ 9733              ;
   5+ 9733              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9733
   7+ 9733              Draw
   8+ 9733
   9+ 9733 CD D9 99     	call Prepara_draw
  10+ 9736 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9737 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9738 28 05        	jr z,2F
  13+ 973A
  14+ 973A 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 973D 18 0C        	jr 1F
  16+ 973F
  17+ 973F 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9742 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9745 CD D1 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9748              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9748
  22+ 9748 CD 78 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 974B
  24+ 974B 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 974E CB 6F        	bit 5,a
  26+ 9750 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9752
  28+ 9752 CD 67 97     	call Comprueba_limite_horizontal
  29+ 9755 CD F7 97     	call Comprueba_limite_vertical
  30+ 9758
  31+ 9758              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9758              ; -----------------------
  33+ 9758              ; -----------------------
  34+ 9758              ; -----------------------
  35+ 9758
  36+ 9758 CD 4D 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 975B CD 84 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 975E
  39+ 975E 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9761 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9763 32 FB 8B     	ld (Ctrl_0),a
  42+ 9766
  43+ 9766 C9           	ret
  44+ 9767
  45+ 9767              ; *******************************************************************************************************************************************************************************************
  46+ 9767              ;	21/01/23
  47+ 9767              ;
  48+ 9767              ; 	Comprueba_limite_horizontal.
  49+ 9767              ;
  50+ 9767              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9767              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9767              ;
  53+ 9767              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9767              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9767              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9767              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9767
  58+ 9767
  59+ 9767
  60+ 9767 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 976A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 976C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 976E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9770 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9773 18 09            jr 6F
  66+ 9775 CB 5F        1 bit 3,a
  67+ 9777 28 0A            jr z,2F
  68+ 9779 E6 F7            and $f7
  69+ 977B 32 FB 8B         ld (Ctrl_0),a
  70+ 977E CD D1 98     6 call Inicializacion
  71+ 9781 18 5B            jr 5F
  72+ 9783 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9784
  74+ 9784              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9784              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9784
  77+ 9784 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9785 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9788 CD CD 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 978B 67           	ld h,a
  81+ 978C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 978D CD CD 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9790 67           	ld h,a
  84+ 9791 A7           	and a
  85+ 9792 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9794 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9795 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 9798 FE 02        	cp 2
  89+ 979A 38 1E        	jr c,3F
  90+ 979C 28 1C        	jr z,3F
  91+ 979E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 979F 28 23            jr z,7F
  93+ 97A1 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 97A3 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97A5 E1           	pop hl
  96+ 97A6
  97+ 97A6              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97A6              ; _para indicar con E="2" en caso necesario.
  99+ 97A6
 100+ 97A6 E5               push hl
 101+ 97A7 C5               push bc
 102+ 97A8 CD CD 94     	call calcula_tercio
 103+ 97AB FE 01        	cp 1
 104+ 97AD 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97AF CD DF 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97B2 28 26            jr z,9F
 107+ 97B4 38 24            jr c,9F
 108+ 97B6 1E 00        11 ld e,0
 109+ 97B8 18 22            jr 8F
 110+ 97BA 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97BB 28 07        	jr z, 7F
 112+ 97BD 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97BF 1E 00         	ld e,0
 114+ 97C1 E1           	pop hl
 115+ 97C2 18 04        	jr 4F
 116+ 97C4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97C6 18 15            jr 10F
 118+ 97C8
 119+ 97C8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97C8              ; _para indicar con E="2" en caso necesario.
 121+ 97C8
 122+ 97C8 E5           4 push hl
 123+ 97C9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97CA CD CD 94     	call calcula_tercio
 125+ 97CD FE 01        	cp 1
 126+ 97CF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97D1 CD DF 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97D4 28 04            jr z,9F
 129+ 97D6 30 02            jr nc,9F
 130+ 97D8 18 02        	jr 8F
 131+ 97DA 1E 02        9 ld e,2
 132+ 97DC C1           8 pop bc
 133+ 97DD E1           10 pop hl
 134+ 97DE C9           5 ret
 135+ 97DF
 136+ 97DF              ; --------------------
 137+ 97DF              ;
 138+ 97DF              ; 25/08/22
 139+ 97DF
 140+ 97DF CD CD 94     Comprueba_centro call calcula_tercio
 141+ 97E2 67               ld h,a
 142+ 97E3 08           	ex af,af
 143+ 97E4 FE 02        	cp 2
 144+ 97E6 38 07        	jr c,1F
 145+ 97E8 28 05        	jr z,1F
 146+ 97EA 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97ED 18 03        	jr 2F
 148+ 97EF 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97F2 08           2 ex af,af
 150+ 97F3 A7               and a
 151+ 97F4 ED 42            sbc hl,bc
 152+ 97F6 C9               ret
 153+ 97F7
 154+ 97F7              ; *********************************************************************************************************************************************************************************************
 155+ 97F7              ;
 156+ 97F7              ;   16/8/22
 157+ 97F7              ;
 158+ 97F7              ;	Comprueba_limite_vertical
 159+ 97F7              ;
 160+ 97F7              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97F7              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97F7              ;
 163+ 97F7
 164+ 97F7 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97FA 7D           	ld a,l
 166+ 97FB E6 1F        	and $1F
 167+ 97FD 57           	ld d,a
 168+ 97FE 3A 11 8C     	ld a,(Limite_vertical)
 169+ 9801 BA           	cp d 											; Límite - Posición.
 170+ 9802 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9803 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9806 CB 47        	bit 0,a
 173+ 9808 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 980A
 175+ 980A              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 980A
 177+ 980A 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 980B 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 980D
 180+ 980D              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 980D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 980D
 183+ 980D 3A EF 8B         ld a,(Coordenada_X)
 184+ 9810 16 0F            ld d,Centro_izquierda
 185+ 9812 A7               and a
 186+ 9813 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9814 28 1E            jr z,3F
 188+ 9816 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9818              ;                                                    ; _salimos sin modificar nada.
 190+ 9818 18 0E            jr 2F
 191+ 981A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 981B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 981D
 194+ 981D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 981D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 981D
 197+ 981D 3A EF 8B         ld a,(Coordenada_X)
 198+ 9820 16 10            ld d,Centro_derecha
 199+ 9822 A7               and a
 200+ 9823 92               sub d
 201+ 9824 28 0E            jr z,3F
 202+ 9826 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9828              ;                                                    ; _salimos sin modificar nada.
 204+ 9828 CB 43        2 bit 0,e
 205+ 982A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 982C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 982D CD C1 98         call Modificaccionne
 208+ 9830 C1           	pop bc
 209+ 9831 CD D1 98         call Inicializacion
 210+ 9834 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9835
 212+ 9835              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9835
 214+ 9835 C5           4 push bc
 215+ 9836 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9839 0A           	ld a,(bc)
 217+ 983A 3D           	dec a
 218+ 983B 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 983C 7D           	ld a,l
 220+ 983D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 983E CB 47        	bit 0,a
 222+ 9840 28 03        	jr z,5F
 223+ 9842 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9843 18 2E        	jr 7F
 225+ 9845
 226+ 9845              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9845
 228+ 9845 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9846 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9847 3A FB 8B     	ld a,(Ctrl_0)
 231+ 984A CB 4F        	bit 1,a
 232+ 984C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 984E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 984F
 235+ 984F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 984F
 237+ 984F 1C               inc e
 238+ 9850 1D               dec e
 239+ 9851 20 07            jr nz,12F
 240+ 9853 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9854 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9855 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9858 18 44        13 jr 9F
 244+ 985A CB 43        12 bit 0,e
 245+ 985C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 985E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 985E C1           	pop bc
 248+ 985F 18 D3        	jr 3B
 249+ 9861 80           14 add b
 250+ 9862 6F               ld l,a
 251+ 9863 22 FE 8B     	ld (Posicion_actual),hl
 252+ 9866 CD C1 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9869 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 986B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 986D 32 FB 8B         ld (Ctrl_0),a
 256+ 9870 F1           	pop af
 257+ 9871 18 2B        	jr 9F
 258+ 9873
 259+ 9873              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9873
 261+ 9873 F5           7 push af
 262+ 9874 3A FB 8B     	ld a,(Ctrl_0)
 263+ 9877 CB 47        	bit 0,a
 264+ 9879 20 1D        	jr nz,8F
 265+ 987B F1           	pop af
 266+ 987C
 267+ 987C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 987C
 269+ 987C 1C           	inc e
 270+ 987D 1D               dec e
 271+ 987E 20 07            jr nz,10F
 272+ 9880 90           	sub b
 273+ 9881 6F               ld l,a
 274+ 9882 22 FE 8B     	ld (Posicion_actual),hl
 275+ 9885 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9887              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9887 CB 43        10 bit 0,e
 278+ 9889 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 988B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 988B C1           	pop bc
 281+ 988C 18 A6        	jr 3B
 282+ 988E 90           16 sub b
 283+ 988F 6F               ld l,a
 284+ 9890 22 FE 8B     	ld (Posicion_actual),hl
 285+ 9893 CD C1 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9896 18 06            jr 9F
 287+ 9898 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 989A 32 FB 8B         ld (Ctrl_0),a
 289+ 989D F1           	pop af
 290+ 989E C1           9 pop bc
 291+ 989F 1E 00        	ld e,0
 292+ 98A1 CD D1 98         call Inicializacion
 293+ 98A4 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98A5 08           	ex af,af
 295+ 98A6 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98A7 18 8B            jr 3B
 297+ 98A9
 298+ 98A9              ; --------------------
 299+ 98A9
 300+ 98A9 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98AB CD F4 99     1 call PreviousScan
 302+ 98AE 10 FB            djnz 1B
 303+ 98B0 22 FE 8B     	ld (Posicion_actual),hl
 304+ 98B3 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98B4 C9           	ret
 306+ 98B5
 307+ 98B5              ; --------------------
 308+ 98B5
 309+ 98B5 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98B7 CD E5 99     1 call NextScan
 311+ 98BA 10 FB            djnz 1B
 312+ 98BC 22 FE 8B     	ld (Posicion_actual),hl
 313+ 98BF AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98C0 C9           	ret
 315+ 98C1
 316+ 98C1              ; --------------------
 317+ 98C1              ;
 318+ 98C1              ;	22/01/23
 319+ 98C1              ;
 320+ 98C1              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98C1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98C1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98C1
 324+ 98C1
 325+ 98C1              Modificaccionne
 326+ 98C1
 327+ 98C1 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 98C4 FE 02        	cp 2
 329+ 98C6 CC A9 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98C9 DC A9 98         call c,Modifica_Pos_actual
 331+ 98CC C8           	ret z
 332+ 98CD CD B5 98         call Modifica_Pos_actual2
 333+ 98D0 C9               ret
 334+ 98D1
 335+ 98D1              ; *************************************************************************************************************************************************************************************************
 336+ 98D1              ;
 337+ 98D1              ;	13/8/22
 338+ 98D1              ;
 339+ 98D1              ;	Inicializacion
 340+ 98D1              ;
 341+ 98D1              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98D1              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98D1              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98D1              ;
 345+ 98D1              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98D1              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98D1              ;	_ desaparece/aparece.
 348+ 98D1
 349+ 98D1              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98D1              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98D1              ;
 352+ 98D1              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98D1              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98D1              ; 		   [E] ="0"
 355+ 98D1
 356+ 98D1              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98D1
 358+ 98D1 CD CD 94     Inicializacion call calcula_tercio
 359+ 98D4 28 36        	jr z,primit
 360+ 98D6 E6 02        	and 2
 361+ 98D8 20 07        	jr nz,segmit
 362+ 98DA 7D           	ld a,l
 363+ 98DB FE 7F        	cp $7f
 364+ 98DD 38 2D        	jr c,primit
 365+ 98DF 28 2B        	jr z,primit
 366+ 98E1 CD 47 99     segmit call column
 367+ 98E4 38 13        	jr c,tercuad
 368+ 98E6 3E 04        cuarcuad ld a,4
 369+ 98E8 32 0D 8C     	ld (Cuad_objeto),a
 370+ 98EB 21 20 48     	ld hl,$4820
 371+ 98EE 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 98F1 21 11 8C     	ld hl,Limite_vertical
 373+ 98F4 36 0D        	ld (hl),$0d
 374+ 98F6 08           	ex af,af
 375+ 98F7 18 3C        	jr 1F
 376+ 98F9              tercuad
 377+ 98F9 3E 03        	ld a,3
 378+ 98FB 32 0D 8C     	ld (Cuad_objeto),a
 379+ 98FE 21 20 48     	ld hl,$4820
 380+ 9901 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 9904 21 11 8C     	ld hl,Limite_vertical
 382+ 9907 36 12        	ld (hl),$12
 383+ 9909 08           	ex af,af
 384+ 990A 18 29        	jr 1F
 385+ 990C CD 47 99     primit call column
 386+ 990F 38 13        	jr c, primcuad
 387+ 9911              segcuad
 388+ 9911 3E 02        	ld a,2
 389+ 9913 32 0D 8C     	ld (Cuad_objeto),a
 390+ 9916 21 C0 4F     	ld hl,$4fc0
 391+ 9919 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 991C 21 11 8C     	ld hl,Limite_vertical
 393+ 991F 36 0D        	ld (hl),$0d
 394+ 9921 08           	ex af,af
 395+ 9922 18 11        	jr 1F
 396+ 9924              primcuad
 397+ 9924 3E 01        	ld a,1
 398+ 9926 32 0D 8C     	ld (Cuad_objeto),a
 399+ 9929 21 C0 4F     	ld hl,$4fc0
 400+ 992C 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 992F 21 11 8C     	ld hl,Limite_vertical
 402+ 9932 36 12        	ld (hl),$12
 403+ 9934 08           	ex af,af
 404+ 9935
 405+ 9935 C5           1 push bc
 406+ 9936 E5           	push hl
 407+ 9937 D5           	push de
 408+ 9938
 409+ 9938 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 993B CD EB 94     	call Genera_coordenadas
 411+ 993E
 412+ 993E D1           	pop de
 413+ 993F E1           	pop hl
 414+ 9940 C1           	pop bc
 415+ 9941
 416+ 9941 21 FB 8B     	ld hl,Ctrl_0
 417+ 9944 CB EE        	set 5,(hl)
 418+ 9946 C9           	ret
 419+ 9947
 420+ 9947              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9947
 422+ 9947              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9947              ;
 424+ 9947              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9947
 426+ 9947 7D           column ld a,l
 427+ 9948 E6 1F        	and $1f
 428+ 994A FE 10         	cp $10
 429+ 994C C9            	ret
 430+ 994D
 431+ 994D              ; --------------------------------------------------------------------------------------------------------------------
 432+ 994D              ;
 433+ 994D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 994D              ;
 435+ 994D              ; 14/12/22
 436+ 994D              ;
 437+ 994D              ;	Modifica: A y BC.
 438+ 994D
 439+ 994D 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9950 E6 01        	and 1
 441+ 9952 28 17        	jr z,1F
 442+ 9954
 443+ 9954              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9954
 445+ 9954 3A EF 8B     	ld a,(Coordenada_X)
 446+ 9957 47           	ld b,a
 447+ 9958 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9959 79           	ld a,c
 449+ 995A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 995B 38 08        	jr c,2F
 451+ 995D 47           	ld b,a
 452+ 995E 79           	ld a,c
 453+ 995F 90           	sub b
 454+ 9960 32 0E 8C     	ld (Columnas),a
 455+ 9963 18 1B        	jr 4F
 456+ 9965 79           2 ld a,c
 457+ 9966 32 0E 8C     	ld (Columnas),a
 458+ 9969 18 15        	jr 4F
 459+ 996B
 460+ 996B              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 996B
 462+ 996B 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 996E 81           	add c
 464+ 996F 3D           	dec a
 465+ 9970 D6 1F        	sub $1f
 466+ 9972 38 08        	jr c,3F
 467+ 9974 47           	ld b,a
 468+ 9975 79           	ld a,c
 469+ 9976 90           	sub b
 470+ 9977 32 0E 8C     	ld (Columnas),a
 471+ 997A 18 04        	jr 4F
 472+ 997C 79           3 ld a,c
 473+ 997D 32 0E 8C     	ld (Columnas),a
 474+ 9980 D9           4 exx
 475+ 9981 4F           	ld c,a
 476+ 9982 D9           	exx
 477+ 9983 C9            ret
 478+ 9984
 479+ 9984              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9984              ;
 481+ 9984              ;   19/7/23
 482+ 9984              ;
 483+ 9984              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9984              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9984              ;
 486+ 9984              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9984              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9984              ;
 489+ 9984              ;	DESTRUYE: HL,B Y A.
 490+ 9984
 491+ 9984 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9987 FE 02        	cp 2
 493+ 9989 38 18        	jr c,1F
 494+ 998B 28 16        	jr z,1F
 495+ 998D E6 01        	and 1
 496+ 998F 28 0D        	jr z,3F
 497+ 9991
 498+ 9991              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9991
 500+ 9991 CD CD 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9994
 502+ 9994 7D           9 ld a,l
 503+ 9995 E6 1F        	and $1f
 504+ 9997 28 2A        	jr z,7F
 505+ 9999 2B           	dec hl
 506+ 999A 10 F8        	djnz 9B
 507+ 999C 18 25        	jr 7F
 508+ 999E
 509+ 999E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 999E
 511+ 999E 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 99A1 18 20        	jr 7F
 513+ 99A3
 514+ 99A3 28 14        1 jr z,2F
 515+ 99A5
 516+ 99A5              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99A5
 518+ 99A5 CD CD 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99A8
 520+ 99A8 7D           4 ld a,l
 521+ 99A9 E6 1F        	and $1f
 522+ 99AB 28 03        	jr z,6F
 523+ 99AD 2B           	dec hl
 524+ 99AE 10 F8        	djnz 4B
 525+ 99B0 06 0F        6 ld b,15
 526+ 99B2 CD F4 99     5 call PreviousScan
 527+ 99B5 10 FB        	djnz 5B
 528+ 99B7 18 0A        	jr 7F
 529+ 99B9
 530+ 99B9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99B9
 532+ 99B9 CD CD 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99BC 06 0F        	ld b,15
 534+ 99BE CD F4 99     8 call PreviousScan
 535+ 99C1 10 FB        	djnz 8B
 536+ 99C3
 537+ 99C3 E5           7 push hl
 538+ 99C4 DD E1        	pop ix
 539+ 99C6
 540+ 99C6 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 99C9 E5           	push hl
 542+ 99CA FD E1        	pop iy
 543+ 99CC
 544+ 99CC C9           	ret
 545+ 99CD
 546+ 99CD              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99CD              ;
 548+ 99CD              ;	2/1/23
 549+ 99CD              ;
 550+ 99CD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99CD              ;
 552+ 99CD              ;	Tras esta rutina tenemos:
 553+ 99CD              ;
 554+ 99CD              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99CD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99CD              ;
 557+ 99CD              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99CD
 559+ 99CD 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 99D0 3A 0E 8C     	ld a,(Columnas)
 561+ 99D3 3D           	dec a
 562+ 99D4 20 01        	jr nz,1F
 563+ 99D6 3C           	inc a
 564+ 99D7 47           1 ld b,a
 565+ 99D8 C9           	ret
 566+ 99D9
 567+ 99D9              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99D9              ;
 569+ 99D9              ;	Prepara_draw
 570+ 99D9              ;
 571+ 99D9              ;	Es una rutina de carga.
 572+ 99D9              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99D9              ;
 574+ 99D9              ;	FUNCIONAMIENTO:
 575+ 99D9              ;
 576+ 99D9              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99D9              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99D9              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99D9              ;
 580+ 99D9              ;	DESTRUYE:
 581+ 99D9              ;
 582+ 99D9              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99D9
 584+ 99D9 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99DC 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99DD 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99DE 4E           	ld c,(hl)
 588+ 99DF 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99E2 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99E4 C9           	ret
 591+ 99E5
 592+ 99E5              ;----------------------------------------------------------------------------------------------------------------
 593+ 99E5              ;
 594+ 99E5              ;	5/08/22
 595+ 99E5              ;
 596+ 99E5              ;   NextScan.
 597+ 99E5              ;
 598+ 99E5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99E5              ;
 600+ 99E5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99E5              ;
 602+ 99E5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99E5              ;
 604+ 99E5              ;       DESTRUIDOS: AF y HL !!!
 605+ 99E5              ;
 606+ 99E5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99E5              ;
 608+ 99E5
 609+ 99E5 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99E6 7C               ld a,h
 611+ 99E7 E6 07            and 7
 612+ 99E9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99EA
 614+ 99EA 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99EB C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99ED 6F               ld l,a
 617+ 99EE D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99EF
 619+ 99EF 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99F0 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99F2 67               ld h,a
 622+ 99F3 C9               ret
 623+ 99F4
 624+ 99F4              ;----------------------------------------------------------------------------------------------------------------
 625+ 99F4              ;
 626+ 99F4              ;	5/08/22
 627+ 99F4              ;
 628+ 99F4              ;   PreviousScan.
 629+ 99F4              ;
 630+ 99F4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99F4              ;
 632+ 99F4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99F4              ;
 634+ 99F4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99F4              ;
 636+ 99F4              ;       DESTRUIDOS: AF y HL !!!
 637+ 99F4              ;
 638+ 99F4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99F4              ;
 640+ 99F4
 641+ 99F4 7C           PreviousScan ld a,h
 642+ 99F5 25               dec h               ; Dec H.
 643+ 99F6 E6 07            and 7
 644+ 99F8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99F9
 646+ 99F9 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99FA D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99FC 6F               ld l,a
 649+ 99FD D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99FE
 651+ 99FE 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99FF C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A01 67               ld h,a
 654+ 9A02 C9               ret
 655+ 9A03
 656+ 9A03
 657+ 9A03
 658+ 9A03
 659+ 9A03
 660+ 9A03
 661+ 9A03
 662+ 9A03
 663+ 9A03
 664+ 9A03
 665+ 9A03
 666+ 9A03
# file closed: Draw_XOR.asm
2121  9A03              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A03
   2+ 9A03              ; ******************************************************************************************************************************************************************************************
   3+ 9A03              ;
   4+ 9A03              ;   20/05/23
   5+ 9A03              ;
   6+ 9A03              ;	Recompone_posicion_inicio
   7+ 9A03              ;
   8+ 9A03              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A03              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A03              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A03              ;	_ a una u otra rutina.
  12+ 9A03
  13+ 9A03              Recompone_posicion_inicio
  14+ 9A03
  15+ 9A03 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 9A06 7D           	ld a,l
  17+ 9A07 E6 1F        	and $1f
  18+ 9A09 28 16        	jr z,1F
  19+ 9A0B
  20+ 9A0B FE 1F        	cp $1f
  21+ 9A0D 28 0D        	jr z,3F
  22+ 9A0F
  23+ 9A0F 21 FA 8B     	ld hl,Ctrl_2
  24+ 9A12 CB C6        	set 0,(hl)
  25+ 9A14 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 9A17 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A1A 18 08        	jr 2F
  28+ 9A1C
  29+ 9A1C CD CA 9B     3 call Mov_left
  30+ 9A1F 18 03        	jr 2F
  31+ 9A21
  32+ 9A21 CD A7 9A     1 call Mov_right
  33+ 9A24 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A27 22 00 8C     	ld (Puntero_objeto),hl
  35+ 9A2A C9           	ret
  36+ 9A2B
  37+ 9A2B              ; ******************************************************************************************************************************************************************************************
  38+ 9A2B              ;
  39+ 9A2B              ;   27/05/23
  40+ 9A2B              ;
  41+ 9A2B              ;	Mov_down
  42+ 9A2B              ;
  43+ 9A2B              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A2B              ;
  45+ 9A2B              ;
  46+ 9A2B              Mov_down
  47+ 9A2B
  48+ 9A2B CD 95 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A2E              ;																	; _ repone (Puntero_objeto).
  50+ 9A2E 21 FB 8B     	ld hl,Ctrl_0
  51+ 9A31 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A33              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A33              ; 																	; _ en el caso de que no lo haya.
  54+ 9A33 3A 16 8C     	ld a,(Vel_down)
  55+ 9A36 47           	ld b,a
  56+ 9A37 2A FE 8B         ld hl,(Posicion_actual)
  57+ 9A3A CD CD 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A3D E6 02        	and 2
  59+ 9A3F 28 17        	jr z,1F
  60+ 9A41
  61+ 9A41              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A41              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A41
  64+ 9A41 7C           	ld a,h
  65+ 9A42 FE 57        	cp $57
  66+ 9A44 20 12        	jr nz,1F
  67+ 9A46
  68+ 9A46 7D           	ld a,l
  69+ 9A47 C6 20        	add $20
  70+ 9A49 30 0D        	jr nc,1F
  71+ 9A4B
  72+ 9A4B              ; ------------------------------
  73+ 9A4B              ;
  74+ 9A4B              ;	12/01/24
  75+ 9A4B
  76+ 9A4B              ;	call Reaparece_arriba
  77+ 9A4B CD 57 9D     	call Reinicio
  78+ 9A4E
  79+ 9A4E              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A4E
  81+ 9A4E 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A51 CB CF        	set 1,a
  83+ 9A53 32 65 8C     	ld (Ctrl_3),a
  84+ 9A56
  85+ 9A56 18 08        	jr 3F
  86+ 9A58              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A58              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A58              ; ------------------------------
  89+ 9A58
  90+ 9A58 CD E5 99     1 call NextScan
  91+ 9A5B 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A5E 10 DA            djnz 2B
  93+ 9A60 CD EB 94     3 call Genera_coordenadas
  94+ 9A63 C9           	ret
  95+ 9A64
  96+ 9A64              ; ******************************************************************************************************************************************************************************************
  97+ 9A64              ;
  98+ 9A64              ;   27/05/23
  99+ 9A64              ;
 100+ 9A64              ;	Mov_up
 101+ 9A64              ;
 102+ 9A64              ; 	Mueve el Sprite hacia arriba.
 103+ 9A64              ;
 104+ 9A64              ;
 105+ 9A64              Mov_up
 106+ 9A64
 107+ 9A64 CD 95 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A67              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A67 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A6A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A6C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A6C              ; 																		; _ en el caso de que no lo haya.
 113+ 9A6C 3A 15 8C     	ld a,(Vel_up)
 114+ 9A6F 47           	ld b,a
 115+ 9A70 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A73 CD CD 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A76 A7           	and a
 118+ 9A77 20 10        	jr nz,1F
 119+ 9A79
 120+ 9A79              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A79              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A79
 123+ 9A79 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A7A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A7C 20 0B            jr nz,1F
 126+ 9A7E 7D               ld a,l
 127+ 9A7F D6 20            sub $20
 128+ 9A81 30 06            jr nc,1F
 129+ 9A83 25               dec h
 130+ 9A84
 131+ 9A84              ; -----------------------------
 132+ 9A84 CD 38 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A87              ;	call Reinicio
 134+ 9A87              ; -----------------------------
 135+ 9A87
 136+ 9A87 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A89 CD F4 99     1 call PreviousScan
 138+ 9A8C 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9A8F 10 E2            djnz 3B
 140+ 9A91 CD EB 94     2 call Genera_coordenadas
 141+ 9A94 C9           	ret
 142+ 9A95
 143+ 9A95              ; -----------------------------
 144+ 9A95              ;
 145+ 9A95              ;	27/5/23
 146+ 9A95              ;
 147+ 9A95              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A95              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A95              ;
 150+ 9A95              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A95              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A95              ;
 153+ 9A95              ;	Modifica: A y (Puntero_objeto).
 154+ 9A95
 155+ 9A95 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A98 CB 47        	bit 0,a
 157+ 9A9A C8           	ret z
 158+ 9A9B CB 87        	res 0,a
 159+ 9A9D 32 FA 8B     	ld (Ctrl_2),a
 160+ 9AA0 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9AA3 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9AA6 C9           	ret
 163+ 9AA7
 164+ 9AA7              ; ******************************************************************************************************************************************************************************************
 165+ 9AA7              ;
 166+ 9AA7              ;	19/10/22
 167+ 9AA7              ;
 168+ 9AA7              ;	Mov_right.
 169+ 9AA7              ;
 170+ 9AA7              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AA7              ;
 172+ 9AA7
 173+ 9AA7 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AAA CB 77        	bit 6,a
 175+ 9AAC 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AAE
 177+ 9AAE CD E6 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AB1 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AB2
 180+ 9AB2 21 FB 8B     	ld hl,Ctrl_0
 181+ 9AB5 CB E6        	set 4,(hl)
 182+ 9AB7 18 52        	jr 8F
 183+ 9AB9
 184+ 9AB9 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9ABC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9ABE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9ABE              ; 																	; _ en el caso de que no lo haya.
 188+ 9ABE 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AC1 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AC3 20 46        	jr nz,8F
 191+ 9AC5
 192+ 9AC5 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AC8 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AC9 28 40        	jr z,8F
 195+ 9ACB
 196+ 9ACB              ; ---------- ---------- ----------
 197+ 9ACB              ;
 198+ 9ACB              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ACB
 200+ 9ACB 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ACE FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AD0 28 11        	jr z,1F
 203+ 9AD2 38 06        	jr c,6F
 204+ 9AD4 FE 04        	cp 4
 205+ 9AD6 28 14        	jr z,7F
 206+ 9AD8 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ADA
 208+ 9ADA              ; ---------- ---------- ----------
 209+ 9ADA              ;
 210+ 9ADA              ; Perfiles de velocidad
 211+ 9ADA              ;
 212+ 9ADA
 213+ 9ADA 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ADD FE FE        	cp $fe
 215+ 9ADF 20 2A        	jr nz,8F
 216+ 9AE1 18 10        	jr 3F
 217+ 9AE3 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AE6 FE FD        	cp $fd
 219+ 9AE8 20 21        	jr nz,8F
 220+ 9AEA 18 07        	jr 3F
 221+ 9AEC 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AEF FE FB        	cp $fb
 223+ 9AF1 20 18        	jr nz,8F
 224+ 9AF3
 225+ 9AF3              ; ---------- ---------- ----------
 226+ 9AF3
 227+ 9AF3              3
 228+ 9AF3 CD 26 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AF6              ;	call Reinicio
 230+ 9AF6
 231+ 9AF6              ; ---------- ---------- ----------
 232+ 9AF6              ;
 233+ 9AF6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AF6
 235+ 9AF6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AF8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AF9 CD 12 9B     	call DESPLZ_DER
 238+ 9AFC C1           	pop bc
 239+ 9AFD 10 F9        	djnz 5B
 240+ 9AFF 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B02 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B03 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9B06 CD EB 94     	call Genera_coordenadas
 244+ 9B09 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B0B
 246+ 9B0B              ; ---------- ---------- ----------
 247+ 9B0B
 248+ 9B0B 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9B0E CD 12 9B     	call DESPLZ_DER
 250+ 9B11 C9           2 ret
 251+ 9B12
 252+ 9B12              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B12              ;
 254+ 9B12              ;	22/9/22
 255+ 9B12              ;
 256+ 9B12
 257+ 9B12 CD 21 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B15 CD 6D 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B18 CD 96 9B         call Ciclo_completo
 260+ 9B1B 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B1E CB FE        	set 7,(hl)
 262+ 9B20 C9           	ret
 263+ 9B21
 264+ 9B21              ; ******************************************************************************************************************************************************************************************
 265+ 9B21              ;	15/02/23
 266+ 9B21              ;
 267+ 9B21
 268+ 9B21 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B24 47           	ld b,a
 270+ 9B25 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B28 23           1 inc hl
 272+ 9B29 23           	inc hl
 273+ 9B2A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B2C 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B2F CD 1E 91     	call Extrae_address
 276+ 9B32 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9B35
 278+ 9B35              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B35
 280+ 9B35              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B35              ; Cuántos movimientos hemos hecho ??
 282+ 9B35              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B35
 284+ 9B35 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B38 EB           	ex de,hl
 286+ 9B39 A7           	and a
 287+ 9B3A ED 52        	sbc hl,de
 288+ 9B3C CB 3D        	srl l
 289+ 9B3E 3E 08        6 ld a,8
 290+ 9B40 95           	sub l
 291+ 9B41 30 1E        	jr nc,3F
 292+ 9B43
 293+ 9B43              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B43              ; B="0".
 295+ 9B43
 296+ 9B43 04           4 inc b
 297+ 9B44 3C           	inc a
 298+ 9B45 20 FC        	jr nz,4B
 299+ 9B47 78           	ld a,b
 300+ 9B48 08           	ex af,af
 301+ 9B49 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B4C 23           5 inc hl
 303+ 9B4D 23           	inc hl
 304+ 9B4E 10 FC        	djnz 5B
 305+ 9B50 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B53 CD 1E 91     	call Extrae_address
 307+ 9B56 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B59
 309+ 9B59              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B59              ; _(Posicion_actual).
 311+ 9B59
 312+ 9B59 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B5C 34           	inc (hl)
 314+ 9B5D 08               ex af,af
 315+ 9B5E 6F           	ld l,a
 316+ 9B5F 18 DD        	jr 6B
 317+ 9B61
 318+ 9B61              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B61
 320+ 9B61 47           3 ld b,a
 321+ 9B62 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B65 23           2 inc hl
 323+ 9B66 23           	inc hl
 324+ 9B67 10 FC        	djnz 2B
 325+ 9B69 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B6C C9           8 ret
 327+ 9B6D
 328+ 9B6D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B6D              ;
 330+ 9B6D              ;	24/7/22
 331+ 9B6D              ;
 332+ 9B6D              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B6D              ;
 334+ 9B6D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B6D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B6D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B6D
 338+ 9B6D 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B70 A7           	and a
 340+ 9B71 20 1F        	jr nz,1F
 341+ 9B73 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B75 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B78
 344+ 9B78 21 FD 8B     	ld hl,Columns
 345+ 9B7B 34           	inc (hl)
 346+ 9B7C 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B7F E6 01        	and 1
 348+ 9B81 28 0F        	jr z,1F
 349+ 9B83 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B86 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B87 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9B8A CD EB 94     	call Genera_coordenadas
 353+ 9B8D CD F2 9C     	call Inc_CTRL_DESPLZ
 354+ 9B90 18 03        	jr 2F
 355+ 9B92 CD F2 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B95 C9           2 ret
 357+ 9B96
 358+ 9B96              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B96              ;
 360+ 9B96              ;	24/7/22
 361+ 9B96              ;
 362+ 9B96              ;	Ciclo_completo.
 363+ 9B96              ;
 364+ 9B96              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B96              ;
 366+ 9B96              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B96              ; 	Decrementamos (Columns).
 368+ 9B96              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B96              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B96
 371+ 9B96
 372+ 9B96 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B99 FE FF        	cp $ff
 374+ 9B9B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B9D E6 F0        	and $f0
 376+ 9B9F 20 28        	jr nz,3F
 377+ 9BA1
 378+ 9BA1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9BA1
 380+ 9BA1 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9BA4 47           	ld b,a
 382+ 9BA5 3E F8        	ld a,$f8
 383+ 9BA7 80           	add b
 384+ 9BA8 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9BAB 18 1C        	jr 3F
 386+ 9BAD 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BB0 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BB1 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BB2 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9BB5 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BB8 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BBA 20 0A        	jr nz,2F
 393+ 9BBC 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BBF 23           	inc hl
 395+ 9BC0 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9BC3 CD EB 94     	call Genera_coordenadas
 397+ 9BC6
 398+ 9BC6              ; Inicia el puntero de Sprite.
 399+ 9BC6
 400+ 9BC6 CD 33 91     2 call Inicia_puntero_objeto_der
 401+ 9BC9 C9           3 ret
 402+ 9BCA
 403+ 9BCA              ; ******************************************************************************************************************************************************************************************
 404+ 9BCA              ;
 405+ 9BCA              ;	15/02/23
 406+ 9BCA              ;
 407+ 9BCA              ;	Mov_left.
 408+ 9BCA              ;
 409+ 9BCA              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BCA              ;
 411+ 9BCA              Mov_left
 412+ 9BCA
 413+ 9BCA 21 FB 8B     	ld hl,Ctrl_0
 414+ 9BCD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BCF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BCF              ; 																	; _ en el caso de que no lo haya.
 417+ 9BCF 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9BD2 CB 77        	bit 6,a
 419+ 9BD4 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BD6
 421+ 9BD6 CD EC 9C     	call Stop_Amadeus_left
 422+ 9BD9 C8           	ret z
 423+ 9BDA 20 4A        	jr nz,8F
 424+ 9BDC
 425+ 9BDC 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BDF A7           	and a
 427+ 9BE0 20 44        	jr nz,8F
 428+ 9BE2
 429+ 9BE2 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BE5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BE6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BE8
 433+ 9BE8              ; ---------- ---------- ----------
 434+ 9BE8
 435+ 9BE8 3A 13 8C     	ld a,(Vel_left)
 436+ 9BEB FE 02        	cp 2
 437+ 9BED 28 0F        	jr z,1F
 438+ 9BEF 38 04        	jr c,6F
 439+ 9BF1 FE 04        	cp 4
 440+ 9BF3 28 12        	jr z,7F
 441+ 9BF5
 442+ 9BF5              ; ---------- ---------- ----------
 443+ 9BF5
 444+ 9BF5 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BF8 FE F8        	cp $f8
 446+ 9BFA 20 2A        	jr nz,8F
 447+ 9BFC 18 10        	jr 4F
 448+ 9BFE 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C01 FE F9        	cp $f9
 450+ 9C03 20 21        	jr nz,8F
 451+ 9C05 18 07        	jr 4F
 452+ 9C07 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C0A FE FB        	cp $fb
 454+ 9C0C 20 18        	jr nz,8F
 455+ 9C0E
 456+ 9C0E              ; ---------- ---------- ----------
 457+ 9C0E
 458+ 9C0E              4
 459+ 9C0E CD 14 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C11              ;	call Reinicio
 461+ 9C11
 462+ 9C11              ; ---------- ---------- ----------
 463+ 9C11
 464+ 9C11 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C13 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C14
 467+ 9C14              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C14              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C14
 470+ 9C14 CD 2D 9C     	call DESPLZ_IZQ
 471+ 9C17 C1           	pop bc
 472+ 9C18 10 F9        	djnz 5B
 473+ 9C1A 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C1D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C1E 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9C21 CD EB 94     	call Genera_coordenadas
 477+ 9C24 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C26
 479+ 9C26              ; ---------- ---------- ----------
 480+ 9C26
 481+ 9C26              ; Movemos, no hay recolocación.
 482+ 9C26
 483+ 9C26 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9C29 CD 2D 9C     	call DESPLZ_IZQ
 485+ 9C2C C9           2 ret
 486+ 9C2D
 487+ 9C2D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C2D              ;
 489+ 9C2D              ;	22/9/22
 490+ 9C2D
 491+ 9C2D              DESPLZ_IZQ
 492+ 9C2D
 493+ 9C2D CD 3C 9C     	call Desplaza_izquierda
 494+ 9C30 CD 88 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C33 CD B0 9C     	call Ciclo_completo_2
 496+ 9C36 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C39 CB BE        	res 7,(hl)
 498+ 9C3B C9           	ret
 499+ 9C3C
 500+ 9C3C              Desplaza_izquierda
 501+ 9C3C
 502+ 9C3C 3A 13 8C     	ld a,(Vel_left)
 503+ 9C3F 47           	ld b,a
 504+ 9C40 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C43 23           1 inc hl
 506+ 9C44 23           	inc hl
 507+ 9C45 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C47 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C4A CD 1E 91     	call Extrae_address
 510+ 9C4D 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C50
 512+ 9C50              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C50
 514+ 9C50              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C50              ; Cuántos movimientos hemos hecho ??
 516+ 9C50              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C50
 518+ 9C50 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C53 EB           	ex de,hl
 520+ 9C54 A7           	and a
 521+ 9C55 ED 52        	sbc hl,de
 522+ 9C57 CB 3D        	srl l
 523+ 9C59 3E 08        6 ld a,8
 524+ 9C5B 95           	sub l
 525+ 9C5C 30 1E        	jr nc,3F
 526+ 9C5E
 527+ 9C5E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C5E              ; B="0".
 529+ 9C5E
 530+ 9C5E 04           4 inc b
 531+ 9C5F 3C           	inc a
 532+ 9C60 20 FC        	jr nz,4B
 533+ 9C62 78           	ld a,b
 534+ 9C63 08           	ex af,af
 535+ 9C64 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C67 23           5 inc hl
 537+ 9C68 23           	inc hl
 538+ 9C69 10 FC        	djnz 5B
 539+ 9C6B 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C6E CD 1E 91     	call Extrae_address
 541+ 9C71 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C74
 543+ 9C74              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C74              ; _(Posicion_actual).
 545+ 9C74
 546+ 9C74 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C77 35           	dec (hl)
 548+ 9C78 08           	ex af,af
 549+ 9C79 6F           	ld l,a
 550+ 9C7A 18 DD        	jr 6B
 551+ 9C7C
 552+ 9C7C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C7C
 554+ 9C7C 47           3 ld b,a
 555+ 9C7D 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C80 23           2 inc hl
 557+ 9C81 23           	inc hl
 558+ 9C82 10 FC        	djnz 2B
 559+ 9C84 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C87 C9           8 ret
 561+ 9C88
 562+ 9C88              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C88              ;
 564+ 9C88              ;	modifica_parametros_1er_DESPLZ
 565+ 9C88              ;
 566+ 9C88              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C88              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C88              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C88
 570+ 9C88 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C8B A7           	and a
 572+ 9C8C 20 1E        	jr nz,1F
 573+ 9C8E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C8F 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9C92 21 FD 8B     	ld hl,Columns
 576+ 9C95 34           	inc (hl)
 577+ 9C96 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9C99 E6 01        	and 1
 579+ 9C9B 20 0F        	jr nz,1F
 580+ 9C9D 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9CA0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9CA1 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9CA4 CD EB 94     	call Genera_coordenadas
 584+ 9CA7 CD 03 9D     	call Dec_CTRL_DESPLZ
 585+ 9CAA 18 03        	jr 2F
 586+ 9CAC CD 03 9D     1 call Dec_CTRL_DESPLZ
 587+ 9CAF C9           2 ret
 588+ 9CB0
 589+ 9CB0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CB0
 591+ 9CB0 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CB3 FE F7        	cp $f7
 593+ 9CB5 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CB7 30 2C        	jr nc,3F
 595+ 9CB9
 596+ 9CB9              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CB9
 598+ 9CB9 06 00        	ld b,0
 599+ 9CBB 04           4 inc b
 600+ 9CBC 3C           	inc a
 601+ 9CBD FE F7        	cp $f7
 602+ 9CBF 20 FA        	jr nz,4B
 603+ 9CC1 3E FF        	ld a,$ff
 604+ 9CC3 90           	sub b
 605+ 9CC4 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9CC7 18 1C        	jr 3F
 607+ 9CC9
 608+ 9CC9              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CC9
 610+ 9CC9 21 FD 8B     1 ld hl,Columns
 611+ 9CCC 35           	dec (hl)
 612+ 9CCD AF           	xor a
 613+ 9CCE 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9CD1 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9CD4 E6 01        	and 1
 616+ 9CD6 28 0A        	jr z,2F
 617+ 9CD8 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CDB 2B           	dec hl
 619+ 9CDC 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CDF CD EB 94     	call Genera_coordenadas
 621+ 9CE2
 622+ 9CE2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CE2
 624+ 9CE2 CD 46 91     2 call Inicia_puntero_objeto_izq
 625+ 9CE5 C9           3 ret
 626+ 9CE6
 627+ 9CE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CE6              ;
 629+ 9CE6              ;	19/10/22
 630+ 9CE6              ;
 631+ 9CE6              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CE6              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CE6
 634+ 9CE6 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CE9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CEB C9           	ret
 637+ 9CEC
 638+ 9CEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CEC              ;
 640+ 9CEC              ;	19/10/22
 641+ 9CEC              ;
 642+ 9CEC              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CEC              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CEC
 645+ 9CEC 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CEF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CF1 C9           	ret
 648+ 9CF2
 649+ 9CF2              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CF2              ;
 651+ 9CF2              ;	24/7/22
 652+ 9CF2              ;
 653+ 9CF2              ;	Inc_CTRL_DESPLZ
 654+ 9CF2              ;
 655+ 9CF2              ;
 656+ 9CF2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CF2
 658+ 9CF2 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CF5 3A 14 8C     	ld a,(Vel_right)
 660+ 9CF8 A7           	and a
 661+ 9CF9 28 06        	jr z,1F
 662+ 9CFB 47           	ld b,a
 663+ 9CFC 34           3 inc (hl)
 664+ 9CFD 10 FD        	djnz 3B
 665+ 9CFF 18 01        	jr 2F
 666+ 9D01 34           1 inc (hl)
 667+ 9D02 C9           2 ret
 668+ 9D03
 669+ 9D03              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D03              ;
 671+ 9D03              ;	5/2/23
 672+ 9D03              ;
 673+ 9D03              ;	Dec_CTRL_DESPLZ
 674+ 9D03              ;
 675+ 9D03              ;
 676+ 9D03              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D03
 678+ 9D03 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D06 3A 13 8C     	ld a,(Vel_left)
 680+ 9D09 A7           	and a
 681+ 9D0A 28 06        	jr z,1F
 682+ 9D0C 47           	ld b,a
 683+ 9D0D 35           3 dec (hl)
 684+ 9D0E 10 FD        	djnz 3B
 685+ 9D10 18 01        	jr 2F
 686+ 9D12 35           1 dec (hl)
 687+ 9D13 C9           2 ret
 688+ 9D14
 689+ 9D14              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D14
 691+ 9D14 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D17 01 1F 00     	ld bc,31
 693+ 9D1A A7           	and a
 694+ 9D1B ED 4A        	adc hl,bc
 695+ 9D1D 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9D20 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D23 CB C6        	set 0,(hl)
 698+ 9D25 C9           	ret
 699+ 9D26
 700+ 9D26              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D26
 702+ 9D26 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D29 01 1F 00     	ld bc,31
 704+ 9D2C A7           	and a
 705+ 9D2D ED 42        	sbc hl,bc
 706+ 9D2F 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D32 21 FB 8B     	ld hl,Ctrl_0
 708+ 9D35 CB CE        	set 1,(hl)
 709+ 9D37 C9           	ret
 710+ 9D38
 711+ 9D38              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D38
 713+ 9D38 24           Reaparece_abajo inc h
 714+ 9D39 01 E0 17     	ld bc,$17e0
 715+ 9D3C A7           	and a
 716+ 9D3D ED 4A        	adc hl,bc
 717+ 9D3F 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D42 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D45 CB D6        	set 2,(hl)
 720+ 9D47 C9           	ret
 721+ 9D48
 722+ 9D48              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D48
 724+ 9D48 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D4B A7           	and a
 726+ 9D4C ED 42        	sbc hl,bc
 727+ 9D4E 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D51 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D54 CB DE        	set 3,(hl)
 730+ 9D56 C9           	ret
 731+ 9D57
 732+ 9D57              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D57              ;
 734+ 9D57              ;	15/07/23
 735+ 9D57
 736+ 9D57              Reinicio
 737+ 9D57
 738+ 9D57              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D57
 740+ 9D57 AF           	xor a
 741+ 9D58 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D5B CD 79 9D     	call Limpia_contenido_hl
 743+ 9D5E
 744+ 9D5E 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D61 CD 79 9D     	call Limpia_contenido_hl
 746+ 9D64
 747+ 9D64 CD 53 93     	call Situa_Puntero_indice_mov
 748+ 9D67 CD 78 9E     	call Inicia_Puntero_mov
 749+ 9D6A
 750+ 9D6A 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D6D 06 05        	ld b,5
 752+ 9D6F 77           1 ld (hl),a
 753+ 9D70 23           	inc hl
 754+ 9D71 10 FC        	djnz 1B
 755+ 9D73
 756+ 9D73 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D76 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D78
 759+ 9D78 C9           	ret
 760+ 9D79
 761+ 9D79 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D7A 23           	inc hl
 763+ 9D7B 77           	ld (hl),a
 764+ 9D7C C9           	ret
 765+ 9D7D
 766+ 9D7D              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D7D              ;
 768+ 9D7D              ;	18/6/24
 769+ 9D7D              ;
 770+ 9D7D
 771+ 9D7D              Amadeus_a_izquierda
 772+ 9D7D
 773+ 9D7D              ;	Actualiza contador de movimientos.
 774+ 9D7D
 775+ 9D7D 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D80 35           	dec (hl)
 777+ 9D81 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D83
 779+ 9D83 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D86 2B           	dec hl
 781+ 9D87 2B           	dec hl
 782+ 9D88 2B           	dec hl
 783+ 9D89 2B           	dec hl
 784+ 9D8A 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D8D
 786+ 9D8D 21 65 8C     	ld hl,Ctrl_3
 787+ 9D90 CB EE        	set 5,(hl)
 788+ 9D92
 789+ 9D92 C9           	ret
 790+ 9D93
 791+ 9D93 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D94 C9           	ret
 793+ 9D95
 794+ 9D95
 795+ 9D95              Amadeus_a_derecha
 796+ 9D95
 797+ 9D95              ;	Actualiza contador de movimientos.
 798+ 9D95
 799+ 9D95 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9D98 34           	inc (hl)
 801+ 9D99 3E 7A        	ld a,$7a
 802+ 9D9B BE           	cp (hl)
 803+ 9D9C 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D9E
 805+ 9D9E 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9DA1 23           	inc hl
 807+ 9DA2 23           	inc hl
 808+ 9DA3 23           	inc hl
 809+ 9DA4 23           	inc hl
 810+ 9DA5 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DA8
 812+ 9DA8 21 65 8C     	ld hl,Ctrl_3
 813+ 9DAB CB EE        	set 5,(hl)
 814+ 9DAD C9           	ret
 815+ 9DAE
 816+ 9DAE 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DAF C9           	ret
# file closed: Direcciones.asm
2122  9DB0              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DB0              ; ----- ----- ----- ----- -----
   2+ 9DB0              ;
   3+ 9DB0              ;   28/12/23
   4+ 9DB0
   5+ 9DB0              Movimiento
   6+ 9DB0
   7+ 9DB0              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DB0
   9+ 9DB0 3A FA 8B         ld a,(Ctrl_2)
  10+ 9DB3 CB 57            bit 2,a
  11+ 9DB5 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DB7
  13+ 9DB7 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9DBA 7E               ld a,(hl)
  15+ 9DBB
  16+ 9DBB              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DBB
  18+ 9DBB              Inicia_desplazamiento.
  19+ 9DBB
  20+ 9DBB              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DBB
  22+ 9DBB CD AE 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DBE
  24+ 9DBE              ; Iniciamos (Repetimos_mov).
  25+ 9DBE
  26+ 9DBE 7E               ld a,(hl)
  27+ 9DBF E6 0F            and $0f
  28+ 9DC1 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9DC4 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DC7
  31+ 9DC7              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DC7
  33+ 9DC7 23               inc hl
  34+ 9DC8 7E               ld a,(hl)
  35+ 9DC9 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9DCC 2B               dec hl
  37+ 9DCD
  38+ 9DCD 21 FA 8B         ld hl,Ctrl_2
  39+ 9DD0 CB D6            set 2,(hl)
  40+ 9DD2
  41+ 9DD2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DD2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DD2
  44+ 9DD2              Desplazamiento_iniciado
  45+ 9DD2
  46+ 9DD2 CD 82 9E         call Aplica_desplazamiento
  47+ 9DD5
  48+ 9DD5              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DD5
  50+ 9DD5 3A 65 8C         ld a,(Ctrl_3)
  51+ 9DD8 CB 4F            bit 1,a
  52+ 9DDA C0               ret nz
  53+ 9DDB
  54+ 9DDB 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DDE 35               dec (hl)
  56+ 9DDF C0               ret nz
  57+ 9DE0
  58+ 9DE0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DE0              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DE0              ; Analiza (Cola_de_desplazamiento).
  61+ 9DE0
  62+ 9DE0 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DE3 A7               and a
  64+ 9DE4 CC D7 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DE7 28 30            jr z,Reinicia_el_movimiento
  66+ 9DE9
  67+ 9DE9 FE FF            cp $ff
  68+ 9DEB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DED
  70+ 9DED FE FE            cp $fe
  71+ 9DEF CC 5C 9E         call z,Fijamos_bucle
  72+ 9DF2 28 25            jr z,Reinicia_el_movimiento
  73+ 9DF4
  74+ 9DF4 FE FD            cp $fd
  75+ 9DF6 20 11            jr nz,1F
  76+ 9DF8
  77+ 9DF8              ; ---
  78+ 9DF8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DF8
  80+ 9DF8 3A FA 8B         ld a,(Ctrl_2)
  81+ 9DFB CB 5F            bit 3,a
  82+ 9DFD 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DFF
  84+ 9DFF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DFF
  86+ 9DFF 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E02 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E04
  89+ 9E04 CD 6D 9E         call Inicia_Repetimos_movimiento
  90+ 9E07 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E09              ; ---
  92+ 9E09
  93+ 9E09 FE 01        1 cp 1
  94+ 9E0B CA 46 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E0E
  96+ 9E0E 3D               dec a
  97+ 9E0F 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9E12
  99+ 9E12 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E15 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E18              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E18 C9               ret
 103+ 9E19
 104+ 9E19              Reinicia_el_movimiento
 105+ 9E19
 106+ 9E19 3A FA 8B         ld a,(Ctrl_2)
 107+ 9E1C CB 5F            bit 3,a
 108+ 9E1E 28 1B            jr z,2F
 109+ 9E20
 110+ 9E20              ; (Cola_de_desplazamiento)="254".
 111+ 9E20
 112+ 9E20 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E23 35               dec (hl)
 114+ 9E24 20 15            jr nz,2F
 115+ 9E26
 116+ 9E26              ; Fin de las repeticiones del último movimiento.
 117+ 9E26
 118+ 9E26 21 FA 8B         ld hl,Ctrl_2
 119+ 9E29 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E2B
 121+ 9E2B 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9E2E 23               inc hl
 123+ 9E2F 23               inc hl
 124+ 9E30 23               inc hl
 125+ 9E31 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E34              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E34 7E               ld a,(hl)
 128+ 9E35 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9E38
 130+ 9E38 C3 E0 9D         jp Cola
 131+ 9E3B
 132+ 9E3B CD 78 9E     2 call Inicia_Puntero_mov
 133+ 9E3E
 134+ 9E3E 21 FA 8B         ld hl,Ctrl_2
 135+ 9E41 CB 96            res 2,(hl)
 136+ 9E43
 137+ 9E43 C3 B0 9D         jp Movimiento
 138+ 9E46
 139+ 9E46              Siguiente_desplazamiento
 140+ 9E46
 141+ 9E46              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E46              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E46
 144+ 9E46 21 FA 8B         ld hl,Ctrl_2
 145+ 9E49 CB 96            res 2,(hl)
 146+ 9E4B
 147+ 9E4B 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E4E 23               inc hl
 149+ 9E4F 23               inc hl
 150+ 9E50 22 21 8C         ld (Puntero_mov),hl
 151+ 9E53
 152+ 9E53 7E               ld a,(hl)
 153+ 9E54 A7               and a
 154+ 9E55 CC D7 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E58 CA 19 9E         jp z,Reinicia_el_movimiento
 156+ 9E5B
 157+ 9E5B C9               ret
 158+ 9E5C
 159+ 9E5C              ; Subrutinas -----------------------------------------
 160+ 9E5C              ; ---------- --------- --------- ---------- ----------
 161+ 9E5C              ;
 162+ 9E5C              ;   24/07/23
 163+ 9E5C              ;
 164+ 9E5C              ;   Fijamos_bucle
 165+ 9E5C              ;
 166+ 9E5C              ;
 167+ 9E5C
 168+ 9E5C              Fijamos_bucle
 169+ 9E5C
 170+ 9E5C 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E5F 3C               inc a
 172+ 9E60 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E63
 174+ 9E63 CD D7 9E         call Incrementa_Puntero_indice_mov
 175+ 9E66 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E69 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E6C C9               ret
 178+ 9E6D
 179+ 9E6D              ; ---------- --------- --------- ---------- ----------
 180+ 9E6D              ;
 181+ 9E6D              ;   07/7/23
 182+ 9E6D              ;
 183+ 9E6D              ;   Inicia_Repetimos_movimiento
 184+ 9E6D              ;
 185+ 9E6D              ;
 186+ 9E6D
 187+ 9E6D              Inicia_Repetimos_movimiento
 188+ 9E6D
 189+ 9E6D              ; Iniciamos (Repetimos_movimiento).
 190+ 9E6D
 191+ 9E6D DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E71 DD 7E 02         ld a,(ix+2)
 193+ 9E74 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E77
 195+ 9E77 C9               ret
 196+ 9E78
 197+ 9E78              ; ---------- --------- --------- ---------- ----------
 198+ 9E78              ;
 199+ 9E78              ;   26/6/23
 200+ 9E78              ;
 201+ 9E78              ;   Inicia_Puntero_mov
 202+ 9E78              ;
 203+ 9E78              ;
 204+ 9E78
 205+ 9E78 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E7B CD 1E 91         call Extrae_address
 207+ 9E7E 22 21 8C         ld (Puntero_mov),hl
 208+ 9E81 C9               ret
 209+ 9E82
 210+ 9E82              ; ---------- --------- --------- ---------- ----------
 211+ 9E82              ;
 212+ 9E82              ;   27/06/23
 213+ 9E82              ;
 214+ 9E82              ;   Aplica_movimiento.
 215+ 9E82
 216+ 9E82              Aplica_desplazamiento
 217+ 9E82
 218+ 9E82              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E82
 220+ 9E82 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E85
 222+ 9E85 7E               ld a,(hl)
 223+ 9E86 E6 F0            and $f0
 224+ 9E88 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E89
 226+ 9E89 CB 7E            bit 7,(hl)
 227+ 9E8B 28 03            jr z,1F
 228+ 9E8D CD 64 9A         call Mov_up
 229+ 9E90 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9E93 CB 76            bit 6,(hl)
 231+ 9E95 28 03            jr z,2F
 232+ 9E97 CD 2B 9A         call Mov_down
 233+ 9E9A
 234+ 9E9A              ; Se ha aplicado reinicio ???
 235+ 9E9A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E9A
 237+ 9E9A              ;    ld a,(Ctrl_3)
 238+ 9E9A              ;    bit 1,a
 239+ 9E9A              ;    ret nz
 240+ 9E9A
 241+ 9E9A 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9E9D CB 6E            bit 5,(hl)
 243+ 9E9F 28 03            jr z,3F
 244+ 9EA1 CD CA 9B         call Mov_left
 245+ 9EA4 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9EA7 CB 66            bit 4,(hl)
 247+ 9EA9 C8               ret z
 248+ 9EAA CD A7 9A         call Mov_right
 249+ 9EAD C9               ret
 250+ 9EAE
 251+ 9EAE              ; ---------- --------- --------- ---------- ----------
 252+ 9EAE              ;
 253+ 9EAE              ;   26/06/23
 254+ 9EAE              ;
 255+ 9EAE              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EAE
 257+ 9EAE              Ajusta_velocidad_desplazamiento
 258+ 9EAE
 259+ 9EAE              ; 1er byte de la cadena de movimiento.
 260+ 9EAE              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EAE
 262+ 9EAE CD CC 9E         call Extrae_nibble_alto
 263+ 9EB1
 264+ 9EB1 32 15 8C         ld (Vel_up),a
 265+ 9EB4 79               ld a,c
 266+ 9EB5 E6 0F            and $0f
 267+ 9EB7 32 16 8C         ld (Vel_down),a
 268+ 9EBA
 269+ 9EBA              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EBA              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EBA
 272+ 9EBA 23               inc hl
 273+ 9EBB CD CC 9E         call Extrae_nibble_alto
 274+ 9EBE
 275+ 9EBE 32 13 8C         ld (Vel_left),a
 276+ 9EC1 79               ld a,c
 277+ 9EC2 E6 0F            and $0f
 278+ 9EC4 32 14 8C         ld (Vel_right),a
 279+ 9EC7
 280+ 9EC7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EC7
 282+ 9EC7 23               inc hl
 283+ 9EC8 22 21 8C         ld (Puntero_mov),hl
 284+ 9ECB C9               ret
 285+ 9ECC
 286+ 9ECC 06 04        Extrae_nibble_alto ld b,4
 287+ 9ECE 7E               ld a,(hl)
 288+ 9ECF 4F               ld c,a
 289+ 9ED0 E6 F0            and $f0
 290+ 9ED2 CB 3F        1 srl a
 291+ 9ED4 10 FC            djnz 1B
 292+ 9ED6 C9               ret
 293+ 9ED7
 294+ 9ED7              ; ---------- --------- --------- ---------- ----------
 295+ 9ED7              ;
 296+ 9ED7              ;   5/7/23
 297+ 9ED7              ;
 298+ 9ED7              ;   Incrementa_Puntero_indice_mov
 299+ 9ED7
 300+ 9ED7              Incrementa_Puntero_indice_mov
 301+ 9ED7
 302+ 9ED7 21 25 8C         ld hl,Incrementa_puntero
 303+ 9EDA 34               inc (hl)
 304+ 9EDB
 305+ 9EDB 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9EDE 01 02 00         ld bc,2
 307+ 9EE1 A7               and a
 308+ 9EE2 09               add hl,bc
 309+ 9EE3 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9EE6
 311+ 9EE6 7E               ld a,(hl)
 312+ 9EE7 A7               and a
 313+ 9EE8
 314+ 9EE8              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EE8
 316+ 9EE8              ;    jr z,$
 317+ 9EE8
 318+ 9EE8              ;! Reinicia el Patrón de movimiento.
 319+ 9EE8
 320+ 9EE8 CC ED 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EEB
 322+ 9EEB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EEC
 324+ 9EEC C9               ret
 325+ 9EED
 326+ 9EED              ; ---------- --------- --------- ---------- ----------
 327+ 9EED              ;
 328+ 9EED              ;   15/01/24
 329+ 9EED              ;
 330+ 9EED              ;   Inicializa_Puntero_indice_mov
 331+ 9EED
 332+ 9EED              Inicializa_Puntero_indice_mov_2
 333+ 9EED
 334+ 9EED              ; Existe etiqueta de bucle principal???
 335+ 9EED
 336+ 9EED 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EF0 24               inc h
 338+ 9EF1 25               dec h
 339+ 9EF2 28 05            jr z,2F
 340+ 9EF4
 341+ 9EF4 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9EF7 18 14            jr 3F
 343+ 9EF9
 344+ 9EF9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EF9
 346+ 9EF9 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9EFC 47               ld b,a
 348+ 9EFD
 349+ 9EFD 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9F00 2B           1 dec hl
 351+ 9F01 2B               dec hl
 352+ 9F02 10 FC            djnz 1B
 353+ 9F04 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9F07
 355+ 9F07 AF               xor a
 356+ 9F08 32 25 8C         ld (Incrementa_puntero),a
 357+ 9F0B 18 06            jr 4F
 358+ 9F0D
 359+ 9F0D 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F10 32 25 8C         ld (Incrementa_puntero),a
 361+ 9F13 C9           4 ret
 362+ 9F14
 363+ 9F14              ; ----------------------------------------------------------------------
 364+ 9F14              ;
 365+ 9F14              ;   30/01/24
 366+ 9F14              ;
 367+ 9F14              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F14
 369+ 9F14 3A EE 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F17 CD 64 94         call Calcula_salto_en_BC
 371+ 9F1A 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F1D A7               and a
 373+ 9F1E ED 4A            adc hl,bc
 374+ 9F20 C9               ret
 375+ 9F21
 376+ 9F21              ; ----------------------------------------------------------------------
 377+ 9F21              ;
 378+ 9F21              ;   30/01/24
 379+ 9F21              ;
 380+ 9F21              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F21              ;
 382+ 9F21              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F21
 384+ 9F21 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F22 23               inc hl
 386+ 9F23 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F24 69               ld l,c
 388+ 9F25 60               ld h,b
 389+ 9F26 22 F7 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F29 C9               ret
 391+ 9F2A
# file closed: Movimiento.asm
2123  9F2A              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F2A              ; --------------------------------------------------------------------------------------
   2+ 9F2A              ;
   3+ 9F2A              ;   25/10/24
   4+ 9F2A              ;
   5+ 9F2A
   6+ 9F2A              Pinta_disparos_Entidades
   7+ 9F2A
   8+ 9F2A ED 73 3D 8C      ld (Stack),sp
   9+ 9F2E ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F32
  11+ 9F32 3E 02            ld a,2
  12+ 9F34 08               ex af,af
  13+ 9F35
  14+ 9F35 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F37              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F37              ;                                     _ No encontraría "0".
  17+ 9F37 FD E1        4 pop iy
  18+ 9F39 D1               pop de                          ; 1er .db IYL
  19+ 9F3A              ;                                   ; 2º  .db IYH
  20+ 9F3A              ;                                   ; 3er .db E.
  21+ 9F3A              ;   Album vacío ???
  22+ 9F3A
  23+ 9F3A FD 7D            ld a,iyl
  24+ 9F3C FD 84            add iyh
  25+ 9F3E 83               add e
  26+ 9F3F 28 1F            jr z,1F
  27+ 9F41
  28+ 9F41              ;   Imprime album, (contiene datos).
  29+ 9F41
  30+ 9F41 3B               dec sp
  31+ 9F42
  32+ 9F42 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F43
  34+ 9F43              ; Imprime el 1er scanline del disparo.
  35+ 9F43
  36+ 9F43 FD 7D            ld a,iyl
  37+ 9F45 AE               xor (hl)
  38+ 9F46 77               ld (hl),a
  39+ 9F47
  40+ 9F47 2C               inc l
  41+ 9F48
  42+ 9F48 FD 7C            ld a,iyh
  43+ 9F4A AE               xor (hl)
  44+ 9F4B 77               ld (hl),a
  45+ 9F4C
  46+ 9F4C 2C               inc l
  47+ 9F4D
  48+ 9F4D 7B               ld a,e
  49+ 9F4E AE               xor (hl)
  50+ 9F4F 77               ld (hl),a
  51+ 9F50
  52+ 9F50              ; Imprime el 2º scanline del disparo.
  53+ 9F50
  54+ 9F50 E1               pop hl
  55+ 9F51
  56+ 9F51 FD 7D            ld a,iyl
  57+ 9F53 AE               xor (hl)
  58+ 9F54 77               ld (hl),a
  59+ 9F55
  60+ 9F55 2C               inc l
  61+ 9F56
  62+ 9F56 FD 7C            ld a,iyh
  63+ 9F58 AE               xor (hl)
  64+ 9F59 77               ld (hl),a
  65+ 9F5A
  66+ 9F5A 2C               inc l
  67+ 9F5B
  68+ 9F5B 7B               ld a,e
  69+ 9F5C AE               xor (hl)
  70+ 9F5D 77               ld (hl),a
  71+ 9F5E
  72+ 9F5E 10 D7            djnz 4B
  73+ 9F60
  74+ 9F60 08           1 ex af,af
  75+ 9F61 3D               dec a
  76+ 9F62 20 05            jr nz,2F
  77+ 9F64
  78+ 9F64 ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F68 C9               ret
  80+ 9F69
  81+ 9F69 ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F6D 08               ex af,af
  83+ 9F6E 18 C5            jr 3B
  84+ 9F70
  85+ 9F70              ; --------------------------------------------------------------------------------------
  86+ 9F70              ;
  87+ 9F70              ;   30/10/24
  88+ 9F70              ;
  89+ 9F70
  90+ 9F70              Motor_de_disparos_entidades
  91+ 9F70
  92+ 9F70 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F73 FE 07            cp 7
  94+ 9F75 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F76
  96+ 9F76 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F78 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F7B
  99+ 9F7B CD 1E 91     1 call Extrae_address
 100+ 9F7E 1C               inc e
 101+ 9F7F 1C               inc e
 102+ 9F80 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F84
 104+ 9F84               ; Caja vacía ???
 105+ 9F84
 106+ 9F84 2D               dec l
 107+ 9F85 7E               ld a,(hl)
 108+ 9F86 A7               and a
 109+ 9F87 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F89
 111+ 9F89              ; --- Trabajamos con caja:
 112+ 9F89
 113+ 9F89 2C               inc l
 114+ 9F8A
 115+ 9F8A              ; --- Existe posibilidad de impacto ???
 116+ 9F8A
 117+ 9F8A CB 46            bit 0,(hl)
 118+ 9F8C C4 CC 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F8F 20 37            jr nz,3F
 120+ 9F91
 121+ 9F91 CD 53 A0         call Rota_disparo_si_procede
 122+ 9F94
 123+ 9F94              ; ------------------------------------------------------------
 124+ 9F94
 125+ 9F94 2D               dec l
 126+ 9F95 2D               dec l
 127+ 9F96
 128+ 9F96 CD 1E 91         call Extrae_address
 129+ 9F99
 130+ 9F99              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F99              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F99
 133+ 9F99 3A 67 8C         ld a,(Ctrl_5)
 134+ 9F9C CB 57            bit 2,a
 135+ 9F9E 28 09            jr z,4F
 136+ 9FA0
 137+ 9FA0 CB 97            res 2,a
 138+ 9FA2 32 67 8C         ld (Ctrl_5),a
 139+ 9FA5 2C               inc l
 140+ 9FA6 2C               inc l
 141+ 9FA7 18 0C            jr 5F
 142+ 9FA9
 143+ 9FA9 CB 5F        4 bit 3,a
 144+ 9FAB 28 08            jr z,5F
 145+ 9FAD
 146+ 9FAD CB 9F            res 3,a
 147+ 9FAF 32 67 8C         ld (Ctrl_5),a
 148+ 9FB2 2D               dec l
 149+ 9FB3 2D               dec l
 150+ 9FB4 2D               dec l
 151+ 9FB5
 152+ 9FB5              ; ---------------------------------------------------------------------
 153+ 9FB5
 154+ 9FB5              ;! Velocidad del disparo de entidades.
 155+ 9FB5
 156+ 9FB5 CD E5 99     5 call NextScan
 157+ 9FB8 CD E5 99         call NextScan
 158+ 9FBB
 159+ 9FBB              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FBB
 161+ 9FBB CD 30 A0         call Fin_de_disparo_de_entidad
 162+ 9FBE
 163+ 9FBE EB               ex de,hl
 164+ 9FBF
 165+ 9FBF 73               ld (hl),e
 166+ 9FC0 23               inc hl
 167+ 9FC1 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FC2
 169+ 9FC2 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FC5 18 02            jr 2F
 171+ 9FC7
 172+ 9FC7 C9               ret
 173+ 9FC8
 174+ 9FC8 EB           3 ex de,hl
 175+ 9FC9 10 B0        2 djnz 1B
 176+ 9FCB
 177+ 9FCB C9               ret
 178+ 9FCC
 179+ 9FCC              ; ------------- ------------- ------------
 180+ 9FCC              ;
 181+ 9FCC              ;   1/11/24
 182+ 9FCC
 183+ 9FCC              Comprueba_impacto_con_Amadeus
 184+ 9FCC
 185+ 9FCC              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FCC              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FCC
 188+ 9FCC              ;   Modificamos registros, así que guardamos ...
 189+ 9FCC
 190+ 9FCC C5               push bc
 191+ 9FCD E5               push hl
 192+ 9FCE D5               push de
 193+ 9FCF
 194+ 9FCF 2D               dec l
 195+ 9FD0 2D               dec l
 196+ 9FD1
 197+ 9FD1 CD 1E 91         call Extrae_address
 198+ 9FD4
 199+ 9FD4 3A B8 89         ld a,(CX_Amadeus)
 200+ 9FD7 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FD8
 202+ 9FD8 7D               ld a,l
 203+ 9FD9 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FDB
 205+ 9FDB 06 03            ld b,3
 206+ 9FDD
 207+ 9FDD B9           1 cp c
 208+ 9FDE 28 15            jr z,Coincidencia
 209+ 9FE0 0C               inc c
 210+ 9FE1 10 FA            djnz 1B
 211+ 9FE3
 212+ 9FE3 0D               dec c
 213+ 9FE4 0D               dec c
 214+ 9FE5 0D               dec c
 215+ 9FE6
 216+ 9FE6 3C               inc a
 217+ 9FE7 B9               cp c
 218+ 9FE8 28 0B            jr z,Coincidencia
 219+ 9FEA
 220+ 9FEA 3C               inc a
 221+ 9FEB B9               cp c
 222+ 9FEC 28 07            jr z,Coincidencia
 223+ 9FEE
 224+ 9FEE D1           2 pop de
 225+ 9FEF E1               pop hl
 226+ 9FF0 C1               pop bc
 227+ 9FF1
 228+ 9FF1              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FF1
 230+ 9FF1 CB 86            res 0,(hl)
 231+ 9FF3 AF               xor a                       ; Z before RET.
 232+ 9FF4 C9               ret
 233+ 9FF5
 234+ 9FF5              Coincidencia
 235+ 9FF5
 236+ 9FF5              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FF5              ;   Existe posibilidad de impacto.
 238+ 9FF5              ;   Vamos a averiguarlo ...
 239+ 9FF5
 240+ 9FF5 1D               dec e
 241+ 9FF6 1D               dec e
 242+ 9FF7 1D               dec e
 243+ 9FF8
 244+ 9FF8              ; DE en Puntero_objeto del disparo.
 245+ 9FF8              ; HL en Puntero_de_impresión del disparo.
 246+ 9FF8
 247+ 9FF8              ; Comparador:
 248+ 9FF8
 249+ 9FF8 06 03            ld b,3
 250+ 9FFA
 251+ 9FFA 1A           3 ld a,(de)
 252+ 9FFB 4F               ld c,a
 253+ 9FFC A6               and (hl)
 254+ 9FFD B9               cp c
 255+ 9FFE 20 06            jr nz,Amadeus_impactado
 256+ A000
 257+ A000 2C               inc l
 258+ A001 1C               inc e
 259+ A002
 260+ A002 10 F6            djnz 3B
 261+ A004
 262+ A004 18 E8            jr 2B
 263+ A006
 264+ A006              Amadeus_impactado
 265+ A006
 266+ A006              ; Borramos disparo.
 267+ A006
 268+ A006 D1               pop de
 269+ A007 E1               pop hl
 270+ A008
 271+ A008 E5               push hl
 272+ A009 D5               push de
 273+ A00A
 274+ A00A CD BE A0         call Borra_6_bytes
 275+ A00D
 276+ A00D 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A010 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A011
 279+ A011              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A011
 281+ A011 21 BB 89         ld hl,Impacto_Amadeus
 282+ A014 36 01            ld (hl),1
 283+ A016
 284+ A016              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A016              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A016
 287+ A016 3A BC 89         ld a,(p.imp.amadeus)
 288+ A019 FE DE            cp $de
 289+ A01B 20 04            jr nz,1F
 290+ A01D
 291+ A01D 3D               dec a
 292+ A01E 32 BC 89         ld (p.imp.amadeus),a
 293+ A021
 294+ A021              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A021
 296+ A021 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A024 21 BE 89         ld hl,Pamm_Amadeus
 298+ A027
 299+ A027 73               ld (hl),e
 300+ A028 23               inc hl
 301+ A029 72               ld (hl),d
 302+ A02A
 303+ A02A D1               pop de
 304+ A02B E1               pop hl
 305+ A02C C1               pop bc
 306+ A02D
 307+ A02D AF               xor a
 308+ A02E 3C               inc a               ; NZ before RET.
 309+ A02F C9               ret
 310+ A030
 311+ A030              ; ------------- ------------- ------------
 312+ A030              ;
 313+ A030              ;   31/10/24
 314+ A030
 315+ A030              Fin_de_disparo_de_entidad
 316+ A030
 317+ A030              ; Estamos en zona de Amadeus ??
 318+ A030
 319+ A030 7C               ld a,h
 320+ A031 FE 54            cp $54
 321+ A033 38 0D            jr c,1F
 322+ A035
 323+ A035 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A036
 325+ A036 5D               ld e,l
 326+ A037 54               ld d,h
 327+ A038
 328+ A038 21 E0 57         ld hl,$57e0
 329+ A03B ED 52            sbc hl,de
 330+ A03D
 331+ A03D 38 6F            jr c,Elimina_disparo_entidad
 332+ A03F
 333+ A03F 6B               ld l,e
 334+ A040 62               ld h,d
 335+ A041
 336+ A041 D1               pop de
 337+ A042
 338+ A042 7C           1 ld a,h
 339+ A043 FE 50            cp $50
 340+ A045 D8               ret c
 341+ A046
 342+ A046 7D               ld a,l
 343+ A047 FE C0            cp $c0
 344+ A049 D8               ret c
 345+ A04A
 346+ A04A              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A04A              ; Así podremos comprobar si hay colisión más adelante.
 348+ A04A
 349+ A04A 1C               inc e
 350+ A04B 1C               inc e
 351+ A04C
 352+ A04C EB               ex de,hl
 353+ A04D CB C6            set 0,(hl)
 354+ A04F EB               ex de,hl
 355+ A050
 356+ A050 1D               dec e
 357+ A051 1D               dec e
 358+ A052
 359+ A052 C9               ret
 360+ A053
 361+ A053              ; ----------------------------------------------------------
 362+ A053              ;
 363+ A053              ;   08/10/24
 364+ A053
 365+ A053              ;   Estructura de un disparo de entidades.
 366+ A053
 367+ A053              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A053              ; 	defw 0											; Puntero de impresión.
 369+ A053              ;	defw 0											; Control.
 370+ A053
 371+ A053              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A053              ;   _de la entidad en el momento de disparar.
 373+ A053
 374+ A053              ;   El byte alto muestra la siguiente información:
 375+ A053              ;
 376+ A053              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A053              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A053              ;
 379+ A053              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A053              ;
 381+ A053              ;                        10xx ..... Izquierda.
 382+ A053              ;                        01xx ..... Derecha.
 383+ A053              ;                        00xx ..... Recto.
 384+ A053
 385+ A053              Rota_disparo_si_procede
 386+ A053
 387+ A053              ;   Nos situamos en el byte alto de (Control).
 388+ A053
 389+ A053 CB 76            bit 6,(hl)
 390+ A055 20 2D            jr nz,Rota_a_derecha
 391+ A057 CB 7E            bit 7,(hl)
 392+ A059 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A05A
 394+ A05A              Rota_a_izq
 395+ A05A
 396+ A05A E5               push hl
 397+ A05B
 398+ A05B 7D               ld a,l
 399+ A05C D6 05            sub 5
 400+ A05E 6F               ld l,a
 401+ A05F
 402+ A05F E5               push hl
 403+ A060 FD E1            pop iy
 404+ A062
 405+ A062 A7               and a
 406+ A063
 407+ A063 FD CB 02 16      rl (iy+02)
 408+ A067 FD CB 01 16      rl (iy+01)
 409+ A06B FD CB 00 16      rl (iy+00)
 410+ A06F
 411+ A06F 30 3B            jr nc,Exit
 412+ A071
 413+ A071              ; Desplazamiento completo hasta Carry.
 414+ A071              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A071
 416+ A071 FD 36 02 03      ld (iy+02),$03
 417+ A075 FD 36 01 00      ld (iy+01),$00
 418+ A079 FD 36 00 00      ld (iy+00),$00
 419+ A07D
 420+ A07D 21 67 8C         ld hl,Ctrl_5
 421+ A080 CB DE            set 3,(hl)
 422+ A082
 423+ A082 18 28            jr Exit
 424+ A084
 425+ A084              Rota_a_derecha
 426+ A084
 427+ A084 E5               push hl
 428+ A085
 429+ A085 7D               ld a,l
 430+ A086 D6 05            sub 5
 431+ A088 6F               ld l,a
 432+ A089
 433+ A089 E5               push hl
 434+ A08A FD E1            pop iy
 435+ A08C
 436+ A08C A7               and a
 437+ A08D
 438+ A08D FD CB 00 1E      rr (iy+00)
 439+ A091 FD CB 01 1E      rr (iy+01)
 440+ A095 FD CB 02 1E      rr (iy+02)
 441+ A099
 442+ A099 30 11            jr nc,Exit
 443+ A09B
 444+ A09B              ; Desplazamiento completo hasta Carry.
 445+ A09B              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A09B
 447+ A09B FD 36 00 01      ld (iy+00),$01
 448+ A09F FD 36 01 80      ld (iy+01),$80
 449+ A0A3 FD 36 02 00      ld (iy+02),$00
 450+ A0A7
 451+ A0A7 21 67 8C         ld hl,Ctrl_5
 452+ A0AA CB D6            set 2,(hl)
 453+ A0AC
 454+ A0AC E1           Exit pop hl
 455+ A0AD C9               ret
 456+ A0AE
 457+ A0AE              ; ------------ ----------- ------------
 458+ A0AE              ;
 459+ A0AE              ;   25/9/24
 460+ A0AE
 461+ A0AE              Elimina_disparo_entidad
 462+ A0AE
 463+ A0AE 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0B1 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0B2
 466+ A0B2 E1               pop hl
 467+ A0B3 E5               push hl
 468+ A0B4
 469+ A0B4 2C               inc l
 470+ A0B5 2C               inc l
 471+ A0B6
 472+ A0B6 CD BE A0         call Borra_6_bytes
 473+ A0B9
 474+ A0B9 D1               pop de
 475+ A0BA
 476+ A0BA 21 00 00         ld hl,0
 477+ A0BD
 478+ A0BD C9               ret
 479+ A0BE
 480+ A0BE              ; ----- ----- ----- ----- -----
 481+ A0BE
 482+ A0BE              Borra_6_bytes
 483+ A0BE
 484+ A0BE 16 06            ld d,6                                                    ; Contador
 485+ A0C0 AF               xor a                                                     ; Borrador
 486+ A0C1 77           1 ld (hl),a
 487+ A0C2 2D               dec l
 488+ A0C3 15               dec d
 489+ A0C4 20 FB            jr nz,1B
 490+ A0C6
 491+ A0C6 C9               ret
 492+ A0C7
 493+ A0C7              ; --------------------------------------------------------------------------------------
 494+ A0C7              ;
 495+ A0C7              ;   12/10/24
 496+ A0C7              ;
 497+ A0C7
 498+ A0C7              Genera_datos_de_impresion_disparos_Entidades
 499+ A0C7
 500+ A0C7 3E 07            ld a,7
 501+ A0C9 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0CA
 503+ A0CA              ; ---------------
 504+ A0CA
 505+ A0CA              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0CA
 507+ A0CA 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0CD
 509+ A0CD CD 1E 91     1 call Extrae_address
 510+ A0D0
 511+ A0D0 13               inc de
 512+ A0D1 13               inc de
 513+ A0D2
 514+ A0D2 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0D6
 516+ A0D6 2D               dec l
 517+ A0D7 7E               ld a,(hl)
 518+ A0D8 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0D9 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0DB
 521+ A0DB              ; ----- ----- ----- -----
 522+ A0DB
 523+ A0DB 2D               dec l
 524+ A0DC CD 1E 91         call Extrae_address
 525+ A0DF E5               push hl
 526+ A0E0
 527+ A0E0 1D               dec e
 528+ A0E1
 529+ A0E1 EB               ex de,hl
 530+ A0E2
 531+ A0E2 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0E3 2D               dec l
 533+ A0E4 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0E5 2D               dec l
 535+ A0E6 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0E7
 537+ A0E7 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0E8
 539+ A0E8              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0E8
 541+ A0E8 FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0EC FD 73 00         ld (iy+0),e
 543+ A0EF FD 70 01         ld (iy+1),b
 544+ A0F2 FD 71 02         ld (iy+2),c
 545+ A0F5
 546+ A0F5 FD 75 03         ld (iy+3),l
 547+ A0F8 FD 74 04         ld (iy+4),h
 548+ A0FB
 549+ A0FB CD E5 99         call NextScan
 550+ A0FE
 551+ A0FE FD 75 05         ld (iy+5),l
 552+ A101 FD 74 06         ld (iy+6),h
 553+ A104
 554+ A104 FD E5            push iy
 555+ A106 E1               pop hl
 556+ A107
 557+ A107 3E 07            ld a,7
 558+ A109 85               add l
 559+ A10A 6F               ld l,a
 560+ A10B
 561+ A10B 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A10E
 563+ A10E              ; ----- ----- ----- -----
 564+ A10E
 565+ A10E              Situa_en_siguiente_caja
 566+ A10E
 567+ A10E 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A10F 3D               dec a
 569+ A110 C8               ret z
 570+ A111
 571+ A111 08               ex af,af
 572+ A112 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A115 18 B6            jr 1B
 574+ A117
 575+ A117              ; --------------------------------------------------------------------------------------
 576+ A117              ;
 577+ A117              ;   12/10/24
 578+ A117              ;
 579+ A117
 580+ A117              Genera_disparo_de_entidad_maldosa
 581+ A117
 582+ A117              ;   Estructura de un disparo de entidades.
 583+ A117
 584+ A117              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A117              ; 	defw 0											; Puntero de impresión.
 586+ A117              ;	defw 0											; Control.
 587+ A117
 588+ A117              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A117              ;   _de la entidad en el momento de disparar.
 590+ A117
 591+ A117              ;   El byte de control muestra la siguiente información:
 592+ A117
 593+ A117              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A117              ;
 595+ A117              ;                        10xx ..... Izquierda.
 596+ A117              ;                        01xx ..... Derecha.
 597+ A117              ;                        00xx ..... Recto.
 598+ A117
 599+ A117              ;*  Exclusiones.
 600+ A117
 601+ A117              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A117              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A117
 604+ A117 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A11A A7               and a
 606+ A11B C8               ret z
 607+ A11C
 608+ A11C 3A F0 8B         ld a,(Coordenada_y)
 609+ A11F A7               and a
 610+ A120 C8               ret z
 611+ A121
 612+ A121 3D               dec a
 613+ A122 C8               ret z
 614+ A123
 615+ A123 FE 10            cp 16
 616+ A125 D0               ret nc
 617+ A126
 618+ A126              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A126              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A126              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A126
 622+ A126 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A129 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A12A
 625+ A12A              ;   Decrementa el numero de disparos de entidades.
 626+ A12A
 627+ A12A 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A12D 35               dec (hl)
 629+ A12E
 630+ A12E 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A131
 632+ A131 CD 1E 91     1 call Extrae_address
 633+ A134
 634+ A134 13               inc de
 635+ A135 13               inc de
 636+ A136
 637+ A136 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A13A
 639+ A13A              ;   Comprobamos si la caja está vacía.
 640+ A13A
 641+ A13A 2D               dec l
 642+ A13B 7E               ld a,(hl)
 643+ A13C A7               and a
 644+ A13D 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A13F 2C               inc l
 646+ A140
 647+ A140              ;   Caja vacía, vamos a generar un disparo.
 648+ A140              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A140
 650+ A140 CD 61 A1         call Genera_byte_inclinacion
 651+ A143
 652+ A143 7E               ld a,(hl)
 653+ A144 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A145
 655+ A145 2D               dec l
 656+ A146
 657+ A146 CD 7D A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A149
 659+ A149 70               ld (hl),b
 660+ A14A 2D               dec l
 661+ A14B 71               ld (hl),c
 662+ A14C
 663+ A14C 2D               dec l
 664+ A14D
 665+ A14D              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A14D
 667+ A14D FD 7E 02         ld a,(iy+02)
 668+ A150 77               ld (hl),a
 669+ A151 2D               dec l
 670+ A152
 671+ A152 FD 7E 01         ld a,(iy+01)
 672+ A155 77               ld (hl),a
 673+ A156 2D               dec l
 674+ A157
 675+ A157 FD 7E 00         ld a,(iy+00)
 676+ A15A 77               ld (hl),a
 677+ A15B
 678+ A15B C9               ret
 679+ A15C
 680+ A15C              ;   --- --- ---
 681+ A15C
 682+ A15C              Situa_en_siguiente_disparo
 683+ A15C
 684+ A15C 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A15F 18 D0            jr 1B
 686+ A161
 687+ A161              ; --------------------------------------------------------------------------------------
 688+ A161              ;
 689+ A161              ;   09/10/24
 690+ A161              ;
 691+ A161
 692+ A161              Genera_byte_inclinacion
 693+ A161
 694+ A161              ; Determina tendencia del disparo.
 695+ A161
 696+ A161 3A B8 89         ld a,(CX_Amadeus)
 697+ A164 47               ld b,a
 698+ A165 3A EF 8B         ld a,(Coordenada_X)
 699+ A168 90               sub b
 700+ A169 38 07            jr c,Disparo_a_derecha
 701+ A16B
 702+ A16B FE 06        Disparo_a_izquierda cp 6
 703+ A16D
 704+ A16D D8               ret c
 705+ A16E C8               ret z
 706+ A16F
 707+ A16F CB FE            set 7,(hl)
 708+ A171 C9               ret
 709+ A172
 710+ A172 47           Disparo_a_derecha ld b,a
 711+ A173 3E FF            ld a,$ff
 712+ A175 90               sub b
 713+ A176
 714+ A176 FE 05            cp 5
 715+ A178
 716+ A178 D8               ret c
 717+ A179 C8               ret z
 718+ A17A
 719+ A17A CB F6            set 6,(hl)
 720+ A17C C9               ret
 721+ A17D
 722+ A17D              ; --------------------------------------------------------------------------------------
 723+ A17D              ;
 724+ A17D              ;   09/10/24
 725+ A17D              ;
 726+ A17D
 727+ A17D              Modifica_puntero_de_impresion
 728+ A17D
 729+ A17D              ;   Puntero de impresión del disparo en BC.
 730+ A17D
 731+ A17D E5               push hl
 732+ A17E
 733+ A17E 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A181 CD E5 99         call NextScan
 735+ A184
 736+ A184 4D               ld c,l
 737+ A185 44               ld b,h
 738+ A186
 739+ A186 E1               pop hl
 740+ A187
 741+ A187 08               ex af,af
 742+ A188 CB 77            bit 6,a
 743+ A18A 28 06            jr z,1F
 744+ A18C
 745+ A18C FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A190 0C               inc c
 747+ A191 C9               ret
 748+ A192
 749+ A192 CB 7F        1 bit 7,a
 750+ A194 28 F6            jr z,2B
 751+ A196
 752+ A196 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A19A 0D               dec c
 754+ A19B
 755+ A19B C9               ret
 756+ A19C
 757+ A19C              ; --------------------------------------------------------------------------------------
 758+ A19C              ;
 759+ A19C              ;   31/08/24
 760+ A19C              ;
 761+ A19C
 762+ A19C              Compara_con_coordenadas_de_disparo
 763+ A19C
 764+ A19C 3A F0 8B         ld a,(Coordenada_y)
 765+ A19F 47               ld b,a
 766+ A1A0 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A1A3 90               sub b
 768+ A1A4
 769+ A1A4              ; A = "0" ok
 770+ A1A4              ; A = "1" ok
 771+ A1A4
 772+ A1A4 28 08            jr z,Comprueba_coordenada_X
 773+ A1A6 3D               dec a
 774+ A1A7 28 05            jr z,Comprueba_coordenada_X
 775+ A1A9
 776+ A1A9              ; A = "$ff" ok
 777+ A1A9
 778+ A1A9 FE FE            cp $fe
 779+ A1AB 28 01            jr z,Comprueba_coordenada_X
 780+ A1AD
 781+ A1AD C9               ret
 782+ A1AE
 783+ A1AE              Comprueba_coordenada_X
 784+ A1AE
 785+ A1AE 3A EF 8B         ld a,(Coordenada_X)
 786+ A1B1 47               ld b,a
 787+ A1B2 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1B5 7E               ld a,(hl)
 789+ A1B6 90               sub b
 790+ A1B7
 791+ A1B7              ; A = "0" ok
 792+ A1B7              ; A = "1" ok
 793+ A1B7
 794+ A1B7 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1B9 3D               dec a
 796+ A1BA 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1BC
 798+ A1BC              ; A = "2" ok
 799+ A1BC
 800+ A1BC 3D               dec a
 801+ A1BD 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1BF
 803+ A1BF              ; A = "$ff"
 804+ A1BF
 805+ A1BF FE FD            cp $fd
 806+ A1C1 C0               ret nz
 807+ A1C2
 808+ A1C2              Activa_Impacto_en_entidad
 809+ A1C2
 810+ A1C2              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1C2
 812+ A1C2 3E 02            ld a,2
 813+ A1C4 32 F2 8B         ld (Impacto),a
 814+ A1C7
 815+ A1C7              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1C7
 817+ A1C7 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1CA 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1CD
 820+ A1CD 73               ld (hl),e
 821+ A1CE 23               inc hl
 822+ A1CF 72               ld (hl),d
 823+ A1D0
 824+ A1D0              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1D0
 826+ A1D0 21 6C 8C         ld hl,Impacto2
 827+ A1D3 CB 9E            res 3,(hl)
 828+ A1D5
 829+ A1D5 C9               ret
 830+ A1D6
 831+ A1D6              ; --------------------------------------------------------------------------------------
 832+ A1D6              ;
 833+ A1D6              ;   13/10/24
 834+ A1D6              ;
 835+ A1D6
 836+ A1D6              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1D6
 838+ A1D6              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1D6
 840+ A1D6 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1D9 06 06            ld b,6
 842+ A1DB AF               xor a
 843+ A1DC 77           1 ld (hl),a
 844+ A1DD 2C               inc l
 845+ A1DE 10 FC            djnz 1B
 846+ A1E0
 847+ A1E0 C9               ret
 848+ A1E1
 849+ A1E1              ; --------------------------------------------------------------------------------------
 850+ A1E1              ;
 851+ A1E1              ;   29/09/24
 852+ A1E1              ;
 853+ A1E1
 854+ A1E1              Calcula_bytes_pintado_disparos
 855+ A1E1
 856+ A1E1 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1E4 45               ld b,l
 858+ A1E5 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1E8 7D               ld a,l
 860+ A1E9
 861+ A1E9 90               sub b
 862+ A1EA 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1ED
 864+ A1ED C9               ret
 865+ A1EE
 866+ A1EE              ; --------------------------------------------------------------------------------------
 867+ A1EE              ;
 868+ A1EE              ;   26/10/24
 869+ A1EE              ;
 870+ A1EE              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1EE              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1EE              ;   _disparos que el álbum del FRAME actual).
 873+ A1EE
 874+ A1EE              Limpia_album_de_pintado_disparos_entidades
 875+ A1EE
 876+ A1EE 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1F1 7E               ld a,(hl)
 878+ A1F2 2D               dec l
 879+ A1F3 46               ld b,(hl)
 880+ A1F4 90               sub b
 881+ A1F5
 882+ A1F5 D8               ret c
 883+ A1F6 C8               ret z
 884+ A1F7
 885+ A1F7 F5               push af
 886+ A1F8 80               add b
 887+ A1F9 77               ld (hl),a
 888+ A1FA F1               pop af
 889+ A1FB
 890+ A1FB              ; Clean.
 891+ A1FB
 892+ A1FB 47           2 ld b,a
 893+ A1FC AF               xor a
 894+ A1FD 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A200 77           1 ld (hl),a
 896+ A201 23               inc hl
 897+ A202 10 FC            djnz 1B
 898+ A204
 899+ A204 C9               ret
 900+ A205
 901+ A205              ; --------------------------------------------------------------------------------------
 902+ A205              ;
 903+ A205              ;   29/09/24
 904+ A205              ;
 905+ A205
 906+ A205              Motor_Disparos_Amadeus
 907+ A205
 908+ A205 21 26 89         ld hl,Disparo_Amad+1
 909+ A208
 910+ A208 34               inc (hl)
 911+ A209 35               dec (hl)
 912+ A20A
 913+ A20A C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A20B
 915+ A20B              ;   Esta caja contiene un disparo.
 916+ A20B
 917+ A20B CD 12 A2         call Consulta_Impacto
 918+ A20E CC 2B A2         call z,Mueve_disparo_Amadeus
 919+ A211
 920+ A211 C9               ret
 921+ A212
 922+ A212              ; ----------------------
 923+ A212              ;
 924+ A212              ;
 925+ A212              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A212              ;
 927+ A212              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A212
 929+ A212
 930+ A212              Consulta_Impacto
 931+ A212
 932+ A212              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A212              ;   _sea lo más coherente posible.
 934+ A212
 935+ A212 E5               push hl
 936+ A213 2B               dec hl
 937+ A214 CD 07 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A217 E1               pop hl
 939+ A218 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A219
 941+ A219 C8               ret z
 942+ A21A
 943+ A21A 3A 6C 8C         ld a,(Impacto2)
 944+ A21D CB DF            set 3,a
 945+ A21F 32 6C 8C         ld (Impacto2),a
 946+ A222
 947+ A222 E5               push hl
 948+ A223 CD F4 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A226 E1               pop hl
 950+ A227 CD 44 A2         call Elimina_disparo_Amadeus
 951+ A22A
 952+ A22A C9               ret
 953+ A22B
 954+ A22B              ; ----------------------
 955+ A22B              ;
 956+ A22B              ;
 957+ A22B              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A22B
 959+ A22B              Mueve_disparo_Amadeus
 960+ A22B
 961+ A22B CD 1E 91         call Extrae_address
 962+ A22E
 963+ A22E CD F4 99         call PreviousScan
 964+ A231 CD F4 99         call PreviousScan
 965+ A234 CD F4 99         call PreviousScan
 966+ A237 CD F4 99         call PreviousScan
 967+ A23A
 968+ A23A              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A23A
 970+ A23A 7C               ld a,h
 971+ A23B D6 40            sub $40
 972+ A23D EB               ex de,hl
 973+ A23E 38 04            jr c,Elimina_disparo_Amadeus
 974+ A240
 975+ A240               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A240
 977+ A240 73               ld (hl),e
 978+ A241 23               inc hl
 979+ A242 72               ld (hl),d
 980+ A243
 981+ A243 C9               ret
 982+ A244
 983+ A244              ; ----------------------
 984+ A244              ;
 985+ A244              ;   29/9/24
 986+ A244
 987+ A244              Elimina_disparo_Amadeus
 988+ A244
 989+ A244              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A244              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A244
 992+ A244              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A244              ;   	defw 0											; Puntero de impresión.
 994+ A244
 995+ A244 2B               dec hl
 996+ A245 2B               dec hl
 997+ A246
 998+ A246 AF               xor a
 999+ A247 77               ld (hl),a
1000+ A248 23               inc hl
1001+ A249 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A24A
1003+ A24A 23               inc hl
1004+ A24B 77               ld (hl),a
1005+ A24C 23               inc hl
1006+ A24D 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A24E
1008+ A24E 3E 01            ld a,1
1009+ A250 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A253
1011+ A253 CD D6 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A256
1013+ A256 AF               xor a
1014+ A257 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A258
1016+ A258 C9               ret
1017+ A259
1018+ A259              ; --------------------------------------------------------------------------------------
1019+ A259              ;
1020+ A259              ;   13/10/24
1021+ A259              ;
1022+ A259
1023+ A259              Pinta_disparos_Amadeus
1024+ A259
1025+ A259 06 02            ld b,2
1026+ A25B ED 73 3D 8C      ld (Stack),sp
1027+ A25F ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A263 D1           3 pop de
1029+ A264 14               inc d
1030+ A265 15               dec d
1031+ A266 28 1C            jr z,1F
1032+ A268 E1               pop hl
1033+ A269
1034+ A269              Imprime_scanlines_en_pantalla
1035+ A269
1036+ A269              ; 1er scanline
1037+ A269
1038+ A269 1A               ld a,(de)
1039+ A26A AE               xor (hl)
1040+ A26B 77               ld (hl),a
1041+ A26C
1042+ A26C 1C               inc e
1043+ A26D 2C               inc l
1044+ A26E
1045+ A26E 1A               ld a,(de)
1046+ A26F AE               xor (hl)
1047+ A270 77               ld (hl),a
1048+ A271
1049+ A271 1D               dec e
1050+ A272 E1               pop hl
1051+ A273
1052+ A273              ; 2º scanline
1053+ A273
1054+ A273 1A               ld a,(de)
1055+ A274 AE               xor (hl)
1056+ A275 77               ld (hl),a
1057+ A276
1058+ A276 1C               inc e
1059+ A277 2C               inc l
1060+ A278
1061+ A278 1A               ld a,(de)
1062+ A279 AE               xor (hl)
1063+ A27A 77               ld (hl),a
1064+ A27B
1065+ A27B 1D               dec e
1066+ A27C
1067+ A27C 18 06            jr 1F
1068+ A27E
1069+ A27E ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A282 18 DF            jr 3B
1071+ A284 10 F8        1 djnz 2B
1072+ A286 ED 7B 3D 8C      ld sp,(Stack)
1073+ A28A C9               ret
1074+ A28B
1075+ A28B              ; --------------------------------------------------------------------------------------
1076+ A28B              ;
1077+ A28B              ;   13/10/24
1078+ A28B              ;
1079+ A28B              ;   Modifica: HL,BC y DE.
1080+ A28B
1081+ A28B
1082+ A28B              Genera_datos_de_impresion_disparos_Amadeus
1083+ A28B
1084+ A28B ED 73 3D 8C      ld (Stack),sp
1085+ A28F 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A292 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A293
1088+ A293 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A294 15               dec d
1090+ A295
1091+ A295 28 0E            jr z,Salida
1092+ A297
1093+ A297              Genera_scanlines_de_disparo_Amadeus
1094+ A297
1095+ A297 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A298              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A298 ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A29C
1099+ A29C C1               pop bc
1100+ A29D C1               pop bc
1101+ A29E C1               pop bc
1102+ A29F
1103+ A29F E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A2A0 CD F4 99         call PreviousScan
1105+ A2A3 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A2A4 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A2A5
1108+ A2A5              Salida
1109+ A2A5
1110+ A2A5 ED 7B 3D 8C      ld sp,(Stack)
1111+ A2A9
1112+ A2A9 C9               ret
1113+ A2AA
1114+ A2AA              ; --------------------------------------------------------------------------------------
1115+ A2AA              ;
1116+ A2AA              ;   12/09/24
1117+ A2AA              ;
1118+ A2AA
1119+ A2AA              Genera_disparo_Amadeus
1120+ A2AA
1121+ A2AA              ;*  Exclusiones.
1122+ A2AA
1123+ A2AA 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A2AD A7               and a
1125+ A2AE C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2AF
1127+ A2AF 3D               dec a
1128+ A2B0 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2B3
1130+ A2B3              Define_puntero_objeto_disparo
1131+ A2B3
1132+ A2B3              ;   Inicializamos contador.
1133+ A2B3
1134+ A2B3 06 00            ld b,0
1135+ A2B5
1136+ A2B5 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A2B8 2C               inc l
1138+ A2B9
1139+ A2B9 3E 80            ld a,$80
1140+ A2BB BE               cp (hl)
1141+ A2BC 28 0D            jr z,1F
1142+ A2BE
1143+ A2BE 04               inc b
1144+ A2BF
1145+ A2BF 3E 60            ld a,$60
1146+ A2C1 BE               cp (hl)
1147+ A2C2 28 07            jr z,1F
1148+ A2C4
1149+ A2C4
1150+ A2C4 04               inc b
1151+ A2C5
1152+ A2C5 3E 18            ld a,$18
1153+ A2C7 BE               cp (hl)
1154+ A2C8 28 01            jr z,1F
1155+ A2CA
1156+ A2CA 04               inc b
1157+ A2CB
1158+ A2CB              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2CB
1160+ A2CB              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2CB
1162+ A2CB CD F4 99     1 call PreviousScan
1163+ A2CE
1164+ A2CE 78               ld a,b
1165+ A2CF CB 3F            srl a
1166+ A2D1 28 03            jr z,4F
1167+ A2D3
1168+ A2D3              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2D3 E5               push hl
1170+ A2D4 18 02            jr 5F
1171+ A2D6 2D           4 dec l
1172+ A2D7 E5               push hl
1173+ A2D8              ; ---
1174+ A2D8
1175+ A2D8              ;   Calcula el Puntero_objeto del disparo.
1176+ A2D8
1177+ A2D8 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2DB 04               inc b
1179+ A2DC 05               dec b
1180+ A2DD 28 04            jr z,2F
1181+ A2DF
1182+ A2DF              ;   Nos desplazamos por el índice de disparos.
1183+ A2DF
1184+ A2DF 2C           3 inc l
1185+ A2E0 2C               inc l
1186+ A2E1 10 FC            djnz 3B
1187+ A2E3
1188+ A2E3              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2E3 CD 1E 91     2 call Extrae_address
1190+ A2E6 E5               push hl
1191+ A2E7              ; ---
1192+ A2E7
1193+ A2E7              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2E7              ; HL en el 1er .db de la caja.
1195+ A2E7
1196+ A2E7 21 25 89         ld hl,Disparo_Amad
1197+ A2EA
1198+ A2EA 06 02            ld b,2
1199+ A2EC
1200+ A2EC D1           6 pop de
1201+ A2ED 73               ld (hl),e
1202+ A2EE 23               inc hl
1203+ A2EF 72               ld (hl),d
1204+ A2F0 23               inc hl
1205+ A2F1
1206+ A2F1 10 F9            djnz 6B
1207+ A2F3
1208+ A2F3 C9               ret
1209+ A2F4
1210+ A2F4              Genera_coordenadas_de_disparo_Amadeus
1211+ A2F4
1212+ A2F4              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2F4              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2F4              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2F4
1216+ A2F4 CD 1E 91         call Extrae_address
1217+ A2F7 CD EB 94         call Genera_coordenadas
1218+ A2FA
1219+ A2FA 3D               dec a
1220+ A2FB
1221+ A2FB 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A2FE 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2FF 23               inc hl
1224+ A300 3A EF 8B         ld a,(Coordenada_X)
1225+ A303 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A304
1227+ A304 AF               xor a
1228+ A305 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A306
1230+ A306 C9               ret
1231+ A307
1232+ A307              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A307              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A307              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A307
1236+ A307              ; ----------------------------------------------
1237+ A307              ;
1238+ A307              ;   27/08/24
1239+ A307              ;
1240+ A307              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A307              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A307
1243+ A307              Detecta_impacto_en_disparo_de_Amadeus
1244+ A307
1245+ A307              Extraccion_de_datos
1246+ A307
1247+ A307 13               inc de
1248+ A308 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A309
1250+ A309 5E               ld e,(hl)
1251+ A30A 23               inc hl
1252+ A30B 56               ld d,(hl)
1253+ A30C
1254+ A30C 23               inc hl
1255+ A30D
1256+ A30D 4E               ld c,(hl)
1257+ A30E 23               inc hl
1258+ A30F 46               ld b,(hl)
1259+ A310
1260+ A310 C5               push bc
1261+ A311 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A312
1263+ A312              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A312
1265+ A312 CD F4 99         call PreviousScan
1266+ A315 CD F4 99         call PreviousScan
1267+ A318
1268+ A318              Detecta_impacto_
1269+ A318
1270+ A318 1A               ld a,(de)
1271+ A319 A6               and (hl)
1272+ A31A C0               ret nz
1273+ A31B
1274+ A31B 13               inc de
1275+ A31C 23               inc hl
1276+ A31D
1277+ A31D 1A               ld a,(de)
1278+ A31E A6               and (hl)
1279+ A31F C9               ret
1280+ A320
1281+ A320              ; -------------------------------------------------------------------------------------------------------------
1282+ A320              ;
1283+ A320              ;   8/8/24
1284+ A320              ;
1285+ A320              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A320              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A320              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A320              ;
1289+ A320              ;   MODIFICA: HL,DE,BC y A.
1290+ A320              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A320              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A320
1293+ A320              Colision_Entidad_Amadeus
1294+ A320
1295+ A320              ; Posible contacto de entidad con Amadeus. ?????
1296+ A320
1297+ A320              ; Exclusiones:
1298+ A320
1299+ A320 3A 8F 8C         ld a,(Shield)
1300+ A323 A7               and a
1301+ A324 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A325
1303+ A325 21 65 8C         ld hl,Ctrl_3
1304+ A328 CB 76            bit 6,(hl)
1305+ A32A C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A32B
1307+ A32B 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A32E CB 56            bit 2,(hl)
1309+ A330 C0               ret nz
1310+ A331
1311+ A331 3A F0 8B     	ld a,(Coordenada_y)
1312+ A334 FE 14        	cp $14
1313+ A336 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A337
1315+ A337 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A33A A7               and a
1317+ A33B C0               ret nz
1318+ A33C
1319+ A33C              Genera_coordenadas_X
1320+ A33C
1321+ A33C              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A33C              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A33C
1324+ A33C              ;   Limpiamos almacenes.
1325+ A33C
1326+ A33C              ;    call Limpia_Coordenadas_X
1327+ A33C
1328+ A33C              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A33C
1330+ A33C 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A33F 3A EF 8B         ld a,(Coordenada_X)
1332+ A342 CD 64 A3         call Guarda_coordenadas_X
1333+ A345
1334+ A345              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A345
1336+ A345 3A B8 89         ld a,(CX_Amadeus)
1337+ A348 CD 64 A3         call Guarda_coordenadas_X
1338+ A34B CD 78 A3         call Compara_coordenadas_X
1339+ A34E C0               ret nz
1340+ A34F
1341+ A34F 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A351 32 F2 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A354
1344+ A354 2A 2E 8C         ld hl,(Puntero_store_caja)
1345+ A357 2C               inc l
1346+ A358 2C               inc l
1347+ A359 2C               inc l
1348+ A35A 2C               inc l
1349+ A35B 22 6D 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A35E
1351+ A35E 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A361 CB D6            set 2,(hl)
1353+ A363
1354+ A363 C9               ret
1355+ A364
1356+ A364               ; ----- ----- ----- ----- -----
1357+ A364
1358+ A364 77           Guarda_coordenadas_X ld (hl),a
1359+ A365 3C               inc a
1360+ A366 2C               inc l
1361+ A367 77               ld (hl),a
1362+ A368 3C               inc a
1363+ A369 2C               inc l
1364+ A36A 77               ld (hl),a
1365+ A36B 2C               inc l
1366+ A36C C9               ret
1367+ A36D
1368+ A36D AF           Limpia_Coordenadas_X xor a
1369+ A36E 06 06            ld b,6
1370+ A370 21 74 8C         ld hl,Coordenadas_X_Amadeus
1371+ A373 77           1 ld (hl),a
1372+ A374 23               inc hl
1373+ A375 10 FC            djnz 1B
1374+ A377 C9               ret
1375+ A378
1376+ A378              ; ----- ----- ----- ----- -----
1377+ A378
1378+ A378              Compara_coordenadas_X
1379+ A378
1380+ A378 DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1381+ A37C DD 7E 00         ld a,(ix+0)
1382+ A37F CD 8D A3         call Comparando
1383+ A382 C8               ret z
1384+ A383
1385+ A383 3C               inc a
1386+ A384 CD 9C A3         call Comparando_1
1387+ A387 C8               ret z
1388+ A388
1389+ A388 3C               inc a
1390+ A389 CD 9C A3         call Comparando_1
1391+ A38C C9               ret
1392+ A38D
1393+ A38D              ; ----- ----- ----- ----- -----
1394+ A38D              ;
1395+ A38D              ;   4/12/23
1396+ A38D              ;
1397+ A38D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A38D
1399+ A38D              Comparando
1400+ A38D
1401+ A38D DD 2C            inc ixl
1402+ A38F DD 2C            inc ixl
1403+ A391 DD 2C            inc ixl
1404+ A393
1405+ A393 DD 46 00         ld b,(ix+0)
1406+ A396 DD 4E 01         ld c,(ix+1)
1407+ A399 DD 56 02         ld d,(ix+2)
1408+ A39C
1409+ A39C B8           Comparando_1 cp b
1410+ A39D C8               ret z
1411+ A39E B9               cp c
1412+ A39F C8               ret z
1413+ A3A0 BA               cp d
1414+ A3A1 C9               ret
1415+ A3A2
1416+ A3A2              ; -----------------------------------------------------------------------
1417+ A3A2              ;
1418+ A3A2              ;   04/7/24
1419+ A3A2              ;
1420+ A3A2
1421+ A3A2              Detecta_colision_nave_entidad
1422+ A3A2
1423+ A3A2              ; Exclusiones:
1424+ A3A2
1425+ A3A2              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A3A2
1427+ A3A2 21 6C 8C     	ld hl,Impacto2
1428+ A3A5 CB 56        	bit 2,(hl)
1429+ A3A7 C8           	ret z
1430+ A3A8
1431+ A3A8              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A3A8
1433+ A3A8 2A BE 89         ld hl,(Pamm_Amadeus)
1434+ A3AB CD 1E 91         call Extrae_address
1435+ A3AE 54               ld d,h
1436+ A3AF 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A3B0
1438+ A3B0 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A3B3 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A3B5 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A3B8
1442+ A3B8 C5           1 push bc
1443+ A3B9 06 03            ld b,3
1444+ A3BB E5               push hl
1445+ A3BC
1446+ A3BC              ; .db
1447+ A3BC
1448+ A3BC 1A           3 ld a,(de)
1449+ A3BD A7               and a
1450+ A3BE 20 03            jr nz,4F
1451+ A3C0
1452+ A3C0 2C               inc l
1453+ A3C1 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A3C3
1455+ A3C3 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A3C5 28 04            jr z,2F
1457+ A3C7
1458+ A3C7              ; Impacto.
1459+ A3C7 FD 2D            dec iyl
1460+ A3C9 28 22            jr z,5F
1461+ A3CB
1462+ A3CB 1C           2 inc e
1463+ A3CC 10 EE            djnz 3B
1464+ A3CE
1465+ A3CE E1               pop hl
1466+ A3CF
1467+ A3CF              ; Hay salto de línea en el puntero de impresión ???
1468+ A3CF
1469+ A3CF 7C               ld a,h
1470+ A3D0 D6 57            sub $57
1471+ A3D2 20 0A            jr nz,6F
1472+ A3D4
1473+ A3D4              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3D4
1475+ A3D4 2A BC 89         ld hl,(p.imp.amadeus)
1476+ A3D7 3E 20            ld a,$20
1477+ A3D9 A7               and a
1478+ A3DA 85               add l
1479+ A3DB 6F               ld l,a
1480+ A3DC 18 01            jr 7F
1481+ A3DE
1482+ A3DE 24           6 inc h
1483+ A3DF
1484+ A3DF C1           7 pop bc
1485+ A3E0 10 D6            djnz 1B
1486+ A3E2
1487+ A3E2              ;   Fin de la comparativa.
1488+ A3E2
1489+ A3E2              ;   NO HAY COLISIÓN !!!!!.
1490+ A3E2              ;
1491+ A3E2              ;   .db (Impacto) de Amadeus a "0".
1492+ A3E2              ;   RES el bit2 de (Impacto2).
1493+ A3E2              ;
1494+ A3E2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3E2              ;   Lo colocamos a "0".
1496+ A3E2
1497+ A3E2 21 6C 8C         ld hl,Impacto2
1498+ A3E5 CB 96            res 2,(hl)
1499+ A3E7 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3EA 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3EC C9               ret
1502+ A3ED
1503+ A3ED              ;   COLISIÓN !!!!!.
1504+ A3ED              ;
1505+ A3ED              ;   .db (Impacto) de Amadeus a "1".
1506+ A3ED              ;   SET el bit3 de (Impacto2).
1507+ A3ED              ;
1508+ A3ED              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3ED
1510+ A3ED E1           5 pop hl
1511+ A3EE C1               pop bc
1512+ A3EF
1513+ A3EF 21 BB 89         ld hl,Impacto_Amadeus
1514+ A3F2 36 01            ld (hl),1
1515+ A3F4 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3F7 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3F9
1518+ A3F9 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3FC 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3FF
1521+ A3FF 23               inc hl
1522+ A400 23               inc hl
1523+ A401 23               inc hl
1524+ A402
1525+ A402 73               ld (hl),e
1526+ A403 23               inc hl
1527+ A404 72               ld (hl),d
1528+ A405
1529+ A405              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A405
1531+ A405 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A408 21 BE 89         ld hl,Pamm_Amadeus
1533+ A40B
1534+ A40B 73               ld (hl),e
1535+ A40C 23               inc hl
1536+ A40D 72               ld (hl),d
1537+ A40E
1538+ A40E C9               ret
1539+ A40F
1540+ A40F
1541+ A40F
# file closed: Disparo.asm
2124  A40F
2125  A40F              	SAVESNA "Pruebas.sna", START
2126  A40F
2127  A40F
2128  A40F
2129  A40F
# file closed: Banco_de_pruebas.asm
