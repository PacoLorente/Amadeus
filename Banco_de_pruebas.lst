# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD A5 8A     	call Frame
  15  A104
  16  A104 3A D9 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8
 206+ 83E8 EE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83EA 1E 84        	defw Explosion_2x3_2
 208+ 83EC 4E 84        	defw Explosion_2x3_3
 209+ 83EE
 210+ 83EE 0D ED E0 0D  Explosion_2x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 210+ 83F2 ED E0 0D ED
 211+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 211+ 83FA 0D ED E0 0D
 212+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 212+ 8402 E0 0D ED E0
 213+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 213+ 840A ED E0 0D ED
 214+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 214+ 8412 0D ED E0 0D
 215+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 215+ 841A E0 0D ED E0
 216+ 841E
 217+ 841E 01 8F 80 01  Explosion_2x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 217+ 8422 8F 80 01 8F
 218+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 218+ 842A 01 8F 80 01
 219+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 219+ 8432 80 01 8F 80
 220+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 220+ 843A 8F 80 01 8F
 221+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 221+ 8442 01 8F 80 01
 222+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 222+ 844A 80 01 8F 80
 223+ 844E
 224+ 844E 01 11 10 01  Explosion_2x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 224+ 8452 11 10 01 11
 225+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 225+ 845A 01 11 10 01
 226+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 226+ 8462 10 01 11 10
 227+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 227+ 846A 11 10 01 11
 228+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 228+ 8472 01 11 10 01
 229+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 229+ 847A 10 01 11 10
 230+ 847E
 231+ 847E              ; ------------------------------------------
 232+ 847E
 233+ 847E 84 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8480 A4 84        	defw Explosion_2x2_2
 235+ 8482 C4 84        	defw Explosion_2x2_3
 236+ 8484
 237+ 8484 DE DE DE DE  Explosion_2x2_1 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 237+ 8488 DE DE DE DE
 238+ 848C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 238+ 8490 DE DE DE DE
 239+ 8494 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 239+ 8498 DE DE DE DE
 240+ 849C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 240+ 84A0 DE DE DE DE
 241+ 84A4
 242+ 84A4 DE DE DE DE  Explosion_2x2_2	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 242+ 84A8 DE DE DE DE
 243+ 84AC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 243+ 84B0 DE DE DE DE
 244+ 84B4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 244+ 84B8 DE DE DE DE
 245+ 84BC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 245+ 84C0 DE DE DE DE
 246+ 84C4
 247+ 84C4 DE DE DE DE  Explosion_2x2_3	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 247+ 84C8 DE DE DE DE
 248+ 84CC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 248+ 84D0 DE DE DE DE
 249+ 84D4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 249+ 84D8 DE DE DE DE
 250+ 84DC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 250+ 84E0 DE DE DE DE
 251+ 84E4
# file closed: Sprites_e_indices.asm
  23  84E4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84E4
   2+ 84E4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84E4
   4+ 84E4              ; 13/05/23
   5+ 84E4
   6+ 84E4              ; Control. %00000001 00000001
   7+ 84E4              ;
   8+ 84E4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84E4              ;                    _ hacen las entidades hacia abajo.
  10+ 84E4              ;
  11+ 84E4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84E4
  13+ 84E4 EA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84E6 F2 84        	defw Disparo_2A
  15+ 84E8 FA 84        	defw Disparo_3A
  16+ 84EA
  17+ 84EA 00 00        Disparo_1A defw 0									; Control.
  18+ 84EC 00 00        	defw 0											; Puntero objeto.
  19+ 84EE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F0 00 00        	defw 0											; Rutina de impresión.
  21+ 84F2
  22+ 84F2 00 00        Disparo_2A defw 0									; Control.
  23+ 84F4 00 00        	defw 0											; Puntero objeto.
  24+ 84F6 00 00        	defw 0											; Puntero de impresión.
  25+ 84F8 00 00        	defw 0											; Rutina de impresión.
  26+ 84FA
  27+ 84FA 00 00        Disparo_3A defw 0
  28+ 84FC
  29+ 84FC 12 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 84FE 1A 85        	defw Disparo_2
  31+ 8500 22 85        	defw Disparo_3
  32+ 8502 2A 85        	defw Disparo_4
  33+ 8504 32 85        	defw Disparo_5
  34+ 8506 3A 85        	defw Disparo_6
  35+ 8508 42 85        	defw Disparo_7
  36+ 850A 4A 85        	defw Disparo_8
  37+ 850C 52 85        	defw Disparo_9
  38+ 850E 5A 85        	defw Disparo_10
  39+ 8510 62 85        	defw Disparo_11
  40+ 8512
  41+ 8512 00 00        Disparo_1 defw 0									; Control.
  42+ 8514 00 00        	defw 0											; Puntero objeto.
  43+ 8516 00 00        	defw 0											; Puntero de impresión.
  44+ 8518 00 00        	defw 0											; Rutina de impresión.
  45+ 851A
  46+ 851A 00 00        Disparo_2 defw 0									; Control.
  47+ 851C 00 00        	defw 0											; Puntero objeto.
  48+ 851E 00 00        	defw 0											; Puntero de impresión.
  49+ 8520 00 00        	defw 0											; Rutina de impresión.
  50+ 8522
  51+ 8522 00 00        Disparo_3 defw 0									; Control.
  52+ 8524 00 00        	defw 0											; Puntero objeto.
  53+ 8526 00 00        	defw 0											; Puntero de impresión.
  54+ 8528 00 00        	defw 0											; Rutina de impresión.
  55+ 852A
  56+ 852A 00 00        Disparo_4 defw 0									; Control.
  57+ 852C 00 00        	defw 0											; Puntero objeto.
  58+ 852E 00 00        	defw 0											; Puntero de impresión.
  59+ 8530 00 00        	defw 0											; Rutina de impresión.
  60+ 8532
  61+ 8532 00 00        Disparo_5 defw 0									; Control.
  62+ 8534 00 00        	defw 0											; Puntero objeto.
  63+ 8536 00 00        	defw 0											; Puntero de impresión.
  64+ 8538 00 00        	defw 0											; Rutina de impresión.
  65+ 853A
  66+ 853A 00 00        Disparo_6 defw 0									; Control.
  67+ 853C 00 00        	defw 0											; Puntero objeto.
  68+ 853E 00 00        	defw 0											; Puntero de impresión.
  69+ 8540 00 00        	defw 0											; Rutina de impresión.
  70+ 8542
  71+ 8542 00 00        Disparo_7 defw 0									; Control.
  72+ 8544 00 00        	defw 0											; Puntero objeto.
  73+ 8546 00 00        	defw 0											; Puntero de impresión.
  74+ 8548 00 00        	defw 0											; Rutina de impresión.
  75+ 854A
  76+ 854A 00 00        Disparo_8 defw 0									; Control.
  77+ 854C 00 00        	defw 0											; Puntero objeto.
  78+ 854E 00 00        	defw 0											; Puntero de impresión.
  79+ 8550 00 00        	defw 0											; Rutina de impresión.
  80+ 8552
  81+ 8552 00 00        Disparo_9 defw 0									; Control.
  82+ 8554 00 00        	defw 0											; Puntero objeto.
  83+ 8556 00 00        	defw 0											; Puntero de impresión.
  84+ 8558 00 00        	defw 0											; Rutina de impresión.
  85+ 855A
  86+ 855A 00 00        Disparo_10 defw 0									; Control.
  87+ 855C 00 00        	defw 0											; Puntero objeto.
  88+ 855E 00 00        	defw 0											; Puntero de impresión.
  89+ 8560 00 00        	defw 0											; Rutina de impresión.
  90+ 8562
  91+ 8562 00 00        Disparo_11 defw 0
  92+ 8564
  93+ 8564              ; -------------------------------------------------------------------------------------
  94+ 8564
  95+ 8564              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8564
  97+ 8564 BA 85        	defw Caja_1
  98+ 8566 F8 85        	defw Caja_2
  99+ 8568 36 86        	defw Caja_3
 100+ 856A 74 86        	defw Caja_4
 101+ 856C B2 86        	defw Caja_5
 102+ 856E F0 86        	defw Caja_6
 103+ 8570 2E 87        	defw Caja_7
 104+ 8572 6C 87        	defw Caja_8
 105+ 8574 AA 87        	defw Caja_9
 106+ 8576 E8 87        	defw Caja_10
 107+ 8578              ;	...
 108+ 8578              ;	...
 109+ 8578              ;	+ entidades ...
 110+ 8578 00 00        	defw 0
 111+ 857A 00 00        	defw 0
 112+ 857C
 113+ 857C              ; ---------- ---------- ---------- ---------- ----------
 114+ 857C
 115+ 857C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 857E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8580 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8582 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8585
 120+ 8585 05           	db %00000101									; (Attr).
 121+ 8586 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8588 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 858A
 124+ 858A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 858C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 858E
 127+ 858E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8590 04           	db 4 											; (Cuad_objeto).
 129+ 8591 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8595
 131+ 8595 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 8596
 133+ 8596 00 00        	db 0,0											; Variables_de_borrado
 134+ 8598 00 00        	defw 0											;	" " " " " " "
 135+ 859A 00 00        	defw 0											;	" " " " " " "
 136+ 859C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A0
 138+ 85A0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00        	defw 0											;	" " " " " " "
 141+ 85A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85AA
 143+ 85AA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85AD
 145+ 85AD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85B4
 148+ 85B4 00           	db 0 											; (Columnas).
 149+ 85B5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85BA
 152+ 85BA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85BA
 154+ 85BA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85BC 00 00        	defw 0											; (Posicion_actual).
 156+ 85BE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85C3
 159+ 85C3 00           	db %00000000 									; (Attr).
 160+ 85C4
 161+ 85C4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85C6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85CC
 166+ 85CC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85CE 00           	db 0											; (Cuad_objeto).
 168+ 85CF
 169+ 85CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85D3
 171+ 85D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85D4
 173+ 85D4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85D6 00 00        	defw 0											;	" " " " " " "
 175+ 85D8 00 00        	defw 0											;	" " " " " " "
 176+ 85DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85DE
 178+ 85DE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85E0 00 00        	defw 0											;	" " " " " " "
 180+ 85E2 00 00        	defw 0											;	" " " " " " "
 181+ 85E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85E8
 183+ 85E8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85EB
 185+ 85EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85F2
 188+ 85F2 00           	db 0 											; (Columnas).
 189+ 85F3 00 00        	defw 0											; (Limite_horizontal).
 190+ 85F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 191+ 85F8
 192+ 85F8              ; ---------- ---------- ---------- ---------- ----------
 193+ 85F8
 194+ 85F8 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85FA 00 00        	defw 0											; (Posicion_actual).
 196+ 85FC 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8601
 199+ 8601 00           	db %00000000 									; (Attr).
 200+ 8602
 201+ 8602 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8604 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8606 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 8608 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Posicion_inicio).
 207+ 860C 00           	db 0											; (Cuad_objeto).
 208+ 860D
 209+ 860D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8611
 211+ 8611 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8612
 213+ 8612 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8614 00 00        	defw 0											;	" " " " " " "
 215+ 8616 00 00        	defw 0											;	" " " " " " "
 216+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 861C
 218+ 861C 00 00        	db 0,0											; Variables_de_pintado
 219+ 861E 00 00        	defw 0											;	" " " " " " "
 220+ 8620 00 00        	defw 0											;	" " " " " " "
 221+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8626
 223+ 8626 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 8629
 225+ 8629 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 862D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8630
 228+ 8630 00           	db 0 											; (Columnas).
 229+ 8631 00 00        	defw 0											; (Limite_horizontal).
 230+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 8636
 232+ 8636              ; ---------- ---------- ---------- ---------- ----------
 233+ 8636
 234+ 8636 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8638 00 00        	defw 0											; (Posicion_actual).
 236+ 863A 00 00        	defw 0 											; (Puntero_objeto).
 237+ 863C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 863F
 239+ 863F 00           	db %00000000 									; (Attr).
 240+ 8640
 241+ 8640 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8642 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8644 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8646 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8648
 246+ 8648 00 00        	defw 0											; (Posicion_inicio).
 247+ 864A 00           	db 0											; (Cuad_objeto).
 248+ 864B
 249+ 864B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 864F
 251+ 864F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8650
 253+ 8650 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8652 00 00        	defw 0											;	" " " " " " "
 255+ 8654 00 00        	defw 0											;	" " " " " " "
 256+ 8656 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 865A
 258+ 865A 00 00        	db 0,0											; Variables_de_pintado
 259+ 865C 00 00        	defw 0											;	" " " " " " "
 260+ 865E 00 00        	defw 0											;	" " " " " " "
 261+ 8660 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8664
 263+ 8664 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8667
 265+ 8667 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 866B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 866E
 268+ 866E 00           	db 0 											; (Columnas).
 269+ 866F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8671 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 271+ 8674
 272+ 8674              ; ---------- ---------- ---------- ---------- ----------
 273+ 8674
 274+ 8674 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8676 00 00        	defw 0											; (Posicion_actual).
 276+ 8678 00 00        	defw 0 											; (Puntero_objeto).
 277+ 867A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 867D
 279+ 867D 00           	db %00000000 									; (Attr).
 280+ 867E
 281+ 867E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8680 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8682 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8684 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8686
 286+ 8686 00 00        	defw 0											; (Posicion_inicio).
 287+ 8688 00           	db 0											; (Cuad_objeto).
 288+ 8689
 289+ 8689 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 868D
 291+ 868D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 868E
 293+ 868E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8690 00 00        	defw 0											;	" " " " " " "
 295+ 8692 00 00        	defw 0											;	" " " " " " "
 296+ 8694 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8698
 298+ 8698 00 00        	db 0,0											; Variables_de_pintado
 299+ 869A 00 00        	defw 0											;	" " " " " " "
 300+ 869C 00 00        	defw 0											;	" " " " " " "
 301+ 869E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 86A2
 303+ 86A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 86A5
 305+ 86A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 86A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 86AC
 308+ 86AC 00           	db 0 											; (Columnas).
 309+ 86AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 86AF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86B2
 312+ 86B2              ; ---------- ---------- ---------- ---------- ----------
 313+ 86B2
 314+ 86B2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86B4 00 00        	defw 0											; (Posicion_actual).
 316+ 86B6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86BB
 319+ 86BB 00           	db %00000000 									; (Attr).
 320+ 86BC
 321+ 86BC 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86BE 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86C4
 326+ 86C4 00 00        	defw 0											; (Posicion_inicio).
 327+ 86C6 00           	db 0											; (Cuad_objeto).
 328+ 86C7
 329+ 86C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86CB
 331+ 86CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86CC
 333+ 86CC 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 86CE 00 00        	defw 0											;	" " " " " " "
 335+ 86D0 00 00        	defw 0											;	" " " " " " "
 336+ 86D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 86D6
 338+ 86D6 00 00        	db 0,0											; Variables_de_pintado
 339+ 86D8 00 00        	defw 0											;	" " " " " " "
 340+ 86DA 00 00        	defw 0											;	" " " " " " "
 341+ 86DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 86E0
 343+ 86E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 86E3
 345+ 86E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86EA
 348+ 86EA 00           	db 0 											; (Columnas).
 349+ 86EB 00 00        	defw 0											; (Limite_horizontal).
 350+ 86ED 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 351+ 86F0
 352+ 86F0              ; ---------- ---------- ---------- ---------- ----------
 353+ 86F0
 354+ 86F0 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86F2 00 00        	defw 0											; (Posicion_actual).
 356+ 86F4 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86F9
 359+ 86F9 00           	db %00000000 									; (Attr).
 360+ 86FA
 361+ 86FA 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86FC 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 8700 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8702
 366+ 8702 00 00        	defw 0											; (Posicion_inicio).
 367+ 8704 00           	db 0											; (Cuad_objeto).
 368+ 8705
 369+ 8705 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8709
 371+ 8709 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 870A
 373+ 870A 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 870C 00 00        	defw 0											;	" " " " " " "
 375+ 870E 00 00        	defw 0											;	" " " " " " "
 376+ 8710 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8714
 378+ 8714 00 00        	db 0,0											; Variables_de_pintado
 379+ 8716 00 00        	defw 0											;	" " " " " " "
 380+ 8718 00 00        	defw 0											;	" " " " " " "
 381+ 871A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 871E
 383+ 871E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 8721
 385+ 8721 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8725 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8728
 388+ 8728 00           	db 0 											; (Columnas).
 389+ 8729 00 00        	defw 0											; (Limite_horizontal).
 390+ 872B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 391+ 872E
 392+ 872E              ; ---------- ---------- ---------- ---------- ----------
 393+ 872E
 394+ 872E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 8730 00 00        	defw 0											; (Posicion_actual).
 396+ 8732 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8734 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8737
 399+ 8737 00           	db %00000000 									; (Attr).
 400+ 8738
 401+ 8738 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 873A 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 873C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 8740
 406+ 8740 00 00        	defw 0											; (Posicion_inicio).
 407+ 8742 00           	db 0											; (Cuad_objeto).
 408+ 8743
 409+ 8743 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8747
 411+ 8747 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8748
 413+ 8748 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 874A 00 00        	defw 0											;	" " " " " " "
 415+ 874C 00 00        	defw 0											;	" " " " " " "
 416+ 874E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8752
 418+ 8752 00 00        	db 0,0											; Variables_de_pintado
 419+ 8754 00 00        	defw 0											;	" " " " " " "
 420+ 8756 00 00        	defw 0											;	" " " " " " "
 421+ 8758 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 875C
 423+ 875C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 875F
 425+ 875F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8763 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8766
 428+ 8766 00           	db 0 											; (Columnas).
 429+ 8767 00 00        	defw 0											; (Limite_horizontal).
 430+ 8769 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 431+ 876C
 432+ 876C              ; ---------- ---------- ---------- ---------- ----------
 433+ 876C
 434+ 876C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 876E 00 00        	defw 0											; (Posicion_actual).
 436+ 8770 00 00        	defw 0 											; (Puntero_objeto).
 437+ 8772 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8775
 439+ 8775 00           	db %00000000 									; (Attr).
 440+ 8776
 441+ 8776 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8778 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 877A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 877C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 877E
 446+ 877E 00 00        	defw 0											; (Posicion_inicio).
 447+ 8780 00           	db 0											; (Cuad_objeto).
 448+ 8781
 449+ 8781 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8785
 451+ 8785 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8786
 453+ 8786 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8788 00 00        	defw 0											;	" " " " " " "
 455+ 878A 00 00        	defw 0											;	" " " " " " "
 456+ 878C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 8790
 458+ 8790 00 00        	db 0,0											; Variables_de_pintado
 459+ 8792 00 00        	defw 0											;	" " " " " " "
 460+ 8794 00 00        	defw 0											;	" " " " " " "
 461+ 8796 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 879A
 463+ 879A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 879D
 465+ 879D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 87A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 87A4
 468+ 87A4 00           	db 0 											; (Columnas).
 469+ 87A5 00 00        	defw 0											; (Limite_horizontal).
 470+ 87A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 471+ 87AA
 472+ 87AA              ; ---------- ---------- ---------- ---------- ----------
 473+ 87AA
 474+ 87AA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 87AC 00 00        	defw 0											; (Posicion_actual).
 476+ 87AE 00 00        	defw 0 											; (Puntero_objeto).
 477+ 87B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 87B3
 479+ 87B3 00           	db %00000000 									; (Attr).
 480+ 87B4
 481+ 87B4 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 87B6 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 87B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 87BC
 486+ 87BC 00 00        	defw 0											; (Posicion_inicio).
 487+ 87BE 00           	db 0											; (Cuad_objeto).
 488+ 87BF
 489+ 87BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 87C3
 491+ 87C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 87C4
 493+ 87C4 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 87C6 00 00        	defw 0											;	" " " " " " "
 495+ 87C8 00 00        	defw 0											;	" " " " " " "
 496+ 87CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 87CE
 498+ 87CE 00 00        	db 0,0											; Variables_de_pintado
 499+ 87D0 00 00        	defw 0											;	" " " " " " "
 500+ 87D2 00 00        	defw 0											;	" " " " " " "
 501+ 87D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 87D8
 503+ 87D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 87DB
 505+ 87DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 87DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 87E2
 508+ 87E2 00           	db 0 											; (Columnas).
 509+ 87E3 00 00        	defw 0											; (Limite_horizontal).
 510+ 87E5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 511+ 87E8
 512+ 87E8              ; ---------- ---------- ---------- ---------- ----------
 513+ 87E8
 514+ 87E8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87EA 00 00        	defw 0											; (Posicion_actual).
 516+ 87EC 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87F1
 519+ 87F1 00           	db %00000000 									; (Attr).
 520+ 87F2
 521+ 87F2 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87F4 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87FA
 526+ 87FA 00 00        	defw 0											; (Posicion_inicio).
 527+ 87FC 00           	db 0											; (Cuad_objeto).
 528+ 87FD
 529+ 87FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 8801
 531+ 8801 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 8802
 533+ 8802 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 8804 00 00        	defw 0											;	" " " " " " "
 535+ 8806 00 00        	defw 0											;	" " " " " " "
 536+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 880C
 538+ 880C 00 00        	db 0,0											; Variables_de_pintado
 539+ 880E 00 00        	defw 0											;	" " " " " " "
 540+ 8810 00 00        	defw 0											;	" " " " " " "
 541+ 8812 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8816
 543+ 8816 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8819
 545+ 8819 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 881D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 8820
 548+ 8820 00           	db 0 											; (Columnas).
 549+ 8821 00 00        	defw 0											; (Limite_horizontal).
 550+ 8823 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8826
 552+ 8826              ; -------------------------------------------------------------------------------------
 553+ 8826              ;
 554+ 8826              ;	20/05/23
 555+ 8826              ;
 556+ 8826              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 8826              ;
 558+ 8826              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 8826              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 8826              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 8826              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 8826
 563+ 8826              Indice_de_entidades
 564+ 8826
 565+ 8826 30 88        	defw Entidad_1
 566+ 8828 40 88        	defw Entidad_2
 567+ 882A 50 88        	defw Entidad_3
 568+ 882C 60 88        	defw Entidad_4
 569+ 882E 70 88        	defw Entidad_5
 570+ 8830
 571+ 8830              ;	BADSAT, (Satélite malvado).
 572+ 8830
 573+ 8830 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 8832 04           	db %00000100									; (Attr).
 575+ 8833 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 8835 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8837 3F 50        	defw $503f	                             	    ; (Posicion_inicio).
 578+ 8839 01           	db 1											; (Cuad_objeto).
 579+ 883A 02 02 01 02  	db 2,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 883E D4 9C        	defw Indice_mov_Escaloncitos_izquierda_arriba   ; (Puntero_indice_mov)
 581+ 8840
 582+ 8840 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 8842 02           	db %00000010									; (Attr).
 584+ 8843 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 8845 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8847 40 50        	defw $5040                                      ; (Posicion_inicio).
 587+ 8849 01           	db 1											; (Cuad_objeto).
 588+ 884A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 884E D8 9C        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 590+ 8850
 591+ 8850 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 8852 04           	db %00000100									; (Attr).
 593+ 8853 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 8855 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8857 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8859 01           	db 1											; (Cuad_objeto).
 597+ 885A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 885E D8 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 599+ 8860
 600+ 8860 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 8862 01           	db %00000001									; (Attr).
 602+ 8863 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 8865 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8867 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8869 01           	db 1											; (Cuad_objeto).
 606+ 886A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 886E D6 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8870
 609+ 8870 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 8872 01           	db %00000001									; (Attr).
 611+ 8873 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 8875 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8877 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8879 01           	db 1											; (Cuad_objeto).
 615+ 887A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 887E D2 9C        	defw Indice_mov_Escaloncitos_derecha_abajo							; (Puntero_indice_mov)
 617+ 8880
# file closed: Cajas_y_disparos.asm
  24  8880              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8880              ; 13/05/23
   2+ 8880
   3+ 8880              Indice_de_niveles
   4+ 8880
   5+ 8880 8E 88        	defw Nivel_1
   6+ 8882 A1 88        	defw Nivel_2
   7+ 8884 AE 88        	defw Nivel_3
   8+ 8886 BE 88        	defw Nivel_4
   9+ 8888 D0 88        	defw Nivel_5
  10+ 888A
  11+ 888A              ;	...
  12+ 888A              ;	...
  13+ 888A              ;	+ Niveles ...
  14+ 888A
  15+ 888A 00 00        	defw 0
  16+ 888C 00 00        	defw 0
  17+ 888E
  18+ 888E 12           Nivel_1 db 18	                                ; Nº de entidades.
  19+ 888F 05 01 04 02  	db 5,1,4,2,3
  19+ 8893 03
  20+ 8894 02 01 03 04  	db 2,1,3,4,5
  20+ 8898 05
  21+ 8899 01 02 03 04  	db 1,2,3,4,5
  21+ 889D 05
  22+ 889E 05 04 03     	db 5,4,3
  23+ 88A1 0C           Nivel_2 db 12									; Nº de entidades.
  24+ 88A2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88A6 01 02
  25+ 88A8 02 01 01 01  	db 2,1,1,1,1,2
  25+ 88AC 01 02
  26+ 88AE 0F           Nivel_3 db 15									; Nº de entidades.
  27+ 88AF 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  27+ 88B3 01
  28+ 88B4 03 01 01 01  	db 3,1,1,1,1
  28+ 88B8 01
  29+ 88B9 03 01 01 01  	db 3,1,1,1,1
  29+ 88BD 01
  30+ 88BE 11           Nivel_4 db 17									; Nº de entidades.
  31+ 88BF 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  31+ 88C3 01
  32+ 88C4 04 01 01 01  	db 4,1,1,1,1
  32+ 88C8 01
  33+ 88C9 04 01 01 01  	db 4,1,1,1,1
  33+ 88CD 01
  34+ 88CE 02 03        	db 2,3
  35+ 88D0 14           Nivel_5 db 20									; Nº de entidades.
  36+ 88D1 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88D5 01
  37+ 88D6 05 01 01 01  	db 5,1,1,1,1
  37+ 88DA 01
  38+ 88DB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  38+ 88DF 01
  39+ 88E0 05 01 01 01  	db 5,1,1,1,1
  39+ 88E4 01
  40+ 88E5
  41+ 88E5              ;---------------------------------------------------------------------------------------------------------------
  42+ 88E5              ;
  43+ 88E5              ;   21/5/23
  44+ 88E5              ;
  45+ 88E5              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  46+ 88E5              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  47+ 88E5              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  48+ 88E5              ;	_en la caja DRAW correspondiente.
  49+ 88E5              ;
  50+ 88E5              ;	MODIFICA: HL,DE y A.
  51+ 88E5              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  52+ 88E5
  53+ 88E5              Inicializa_Punteros_de_nivel
  54+ 88E5
  55+ 88E5 21 80 88     	ld hl,Indice_de_niveles
  56+ 88E8 22 0C 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  57+ 88EB CD F7 8C     	call Extrae_address
  58+ 88EE 7E           	ld a,(hl)
  59+ 88EF 32 E2 89     	ld (Numero_de_entidades),a
  60+ 88F2 23           	inc hl
  61+ 88F3 22 0E 8A     	ld (Datos_de_nivel),hl
  62+ 88F6 C9           	ret
  63+ 88F7
  64+ 88F7              ;---------------------------------------------------------------------------------------------------------------
  65+ 88F7              ;
  66+ 88F7              ;   13/5/23
  67+ 88F7              ;
  68+ 88F7              ;	Destruye A,BC,HL,DE
  69+ 88F7
  70+ 88F7              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  71+ 88F7              ;	_del juego.
  72+ 88F7
  73+ 88F7              Prepara_cajas
  74+ 88F7
  75+ 88F7              ; Preparamos los punteros de las cajas.
  76+ 88F7
  77+ 88F7 21 64 85     	ld hl,Indice_de_cajas
  78+ 88FA CD F7 8C     	call Extrae_address
  79+ 88FD CD 3A 89     	call Avanza_caja
  80+ 8900
  81+ 8900 CD 7E 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  82+ 8903
  83+ 8903 2A 0E 8A     	ld hl,(Datos_de_nivel)
  84+ 8906
  85+ 8906              ; HL está en los datos del nivel correspondiente.
  86+ 8906              ; B actuará como contador de cajas.
  87+ 8906
  88+ 8906 C5           1 push bc
  89+ 8907
  90+ 8907 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  91+ 8908 CD 2B 89     	call PreparaBC
  92+ 890B
  93+ 890B 21 26 88     	ld hl,Indice_de_entidades
  94+ 890E CD 33 89     	call SBC_HL_con_BC_y_Extrae
  95+ 8911 22 E8 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  96+ 8914
  97+ 8914 CD 44 89     	call Datos_de_entidad_a_caja
  98+ 8917
  99+ 8917 2A E0 89     	ld hl,(Indice_restore_caja)
 100+ 891A CD F7 8C     	call Extrae_address
 101+ 891D CD 3A 89     	call Avanza_caja
 102+ 8920
 103+ 8920 2A 0E 8A     	ld hl,(Datos_de_nivel)
 104+ 8923 23           	inc hl
 105+ 8924 22 0E 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 106+ 8927
 107+ 8927 C1           	pop bc
 108+ 8928 10 DC        	djnz 1B
 109+ 892A C9           	ret
 110+ 892B
 111+ 892B CB 27        PreparaBC sla a
 112+ 892D D6 02        	sub 2										; [(Nivel)*2]-2.
 113+ 892F 4F           	ld c,a
 114+ 8930 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 115+ 8932 C9           	ret
 116+ 8933
 117+ 8933 A7           SBC_HL_con_BC_y_Extrae and a
 118+ 8934 ED 4A        	adc hl,bc
 119+ 8936 CD F7 8C     	call Extrae_address
 120+ 8939 C9           	ret
 121+ 893A
 122+ 893A 22 DC 89     Avanza_caja	ld (Puntero_store_caja),hl
 123+ 893D 13           	inc de
 124+ 893E 13           	inc de
 125+ 893F EB           	ex de,hl
 126+ 8940 22 E0 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 127+ 8943 C9           	ret
 128+ 8944
 129+ 8944              Datos_de_entidad_a_caja
 130+ 8944
 131+ 8944              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 132+ 8944
 133+ 8944
 134+ 8944 ED 5B DC 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 135+ 8948
 136+ 8948 01 02 00     	ld bc,2
 137+ 894B ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 138+ 894D
 139+ 894D 01 07 00     	ld bc,7
 140+ 8950 CD 78 89     	call Situa_DE
 141+ 8953
 142+ 8953 01 05 00     	ld bc,5
 143+ 8956 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 144+ 8958
 145+ 8958 01 04 00     	ld bc,4
 146+ 895B CD 78 89     	call Situa_DE
 147+ 895E
 148+ 895E 01 07 00     	ld bc,7
 149+ 8961 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 150+ 8963
 151+ 8963 01 18 00     	ld bc,24
 152+ 8966 CD 78 89     	call Situa_DE
 153+ 8969
 154+ 8969 01 02 00     	ld bc,2
 155+ 896C ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 156+ 896E
 157+ 896E 01 0A 00     	ld bc,10
 158+ 8971 CD 78 89     	call Situa_DE
 159+ 8974
 160+ 8974 3E 03        	ld a,3
 161+ 8976 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8977
 163+ 8977 C9           	ret
 164+ 8978
 165+ 8978 EB           Situa_DE ex de,hl
 166+ 8979 A7           	and a
 167+ 897A ED 4A        	adc hl,bc
 168+ 897C EB           	ex de,hl
 169+ 897D C9           	ret
 170+ 897E
 171+ 897E              ;---------------------------------------------------------------------------------------------------------------
 172+ 897E              ;
 173+ 897E              ;	21/5/23
 174+ 897E              ;
 175+ 897E              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 897E              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 897E              ;
 178+ 897E              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 897E              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 897E              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 897E              ;
 182+ 897E              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 897E              ;	MODIFICA: A y B.
 184+ 897E              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 897E
 186+ 897E              Admin_num_entidades
 187+ 897E
 188+ 897E              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 897E
 190+ 897E 3A E2 89     	ld a,(Numero_de_entidades)
 191+ 8981 A7           	and a
 192+ 8982              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 8982              ;	jr z,$
 194+ 8982              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 8982
 196+ 8982 20 03        	jr nz,3F
 197+ 8984
 198+ 8984              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 8984
 200+ 8984 CD E5 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 8987
 202+ 8987
 203+ 8987 3A E2 89     3 ld a,(Numero_de_entidades)
 204+ 898A FE 0A        	cp 10
 205+ 898C 38 08        	jr c,1F
 206+ 898E
 207+ 898E              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 898E              ; Actualizamos variables.
 209+ 898E
 210+ 898E 3E 0A        	ld a,10
 211+ 8990 32 E3 89     	ld (Numero_parcial_de_entidades),a
 212+ 8993 47           	ld b,a
 213+ 8994 18 04        	jr 2F
 214+ 8996
 215+ 8996              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 8996              ; (Numero_de_entidades)="0".
 217+ 8996
 218+ 8996 32 E3 89     1 ld (Numero_parcial_de_entidades),a
 219+ 8999 47           	ld b,a
 220+ 899A C9           2 ret
# file closed: Niveles.asm
  25  899B
  26  899B              ; ******************************************************************************************************************************************************************************************
  27  899B              ; Constantes.
  28  899B              ; ******************************************************************************************************************************************************************************************
  29  899B              ;
  30  899B              ; 25/05/23
  31  899B              ;
  32  899B              ; Constantes generales.
  33  899B              ;
  34  899B
  35  899B              Sprite_vacio equ $f000
  36  899B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  899B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  899B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  899B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  899B
  41  899B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  899B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  899B              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  899B              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  899B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  899B              ;                               				        ; De momento situamos este almacén en $7060.
  47  899B
  48  899B              ; ******************************************************************************************************************************************************************************************
  49  899B              ; Variables.
  50  899B              ; ******************************************************************************************************************************************************************************************
  51  899B              ;
  52  899B              ; 30/05/23
  53  899B              ;
  54  899B              ; Variables de DRAW. (Motor principal).
  55  899B              ;
  56  899B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  899B
  58  899B 00           Filas db 0												; Filas. [DRAW]
  59  899C 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  899D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  899F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  89A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  89A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  89A3
  65  89A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  89A3
  67  89A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  89A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  89A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  89A4 00           Attr db 0												; Atributos de la entidad:
  71  89A5
  72  89A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  89A5              ;
  74  89A5              ;	COLORES: 0 ..... NEGRO
  75  89A5              ;    		 1 ..... AZUL
  76  89A5              ; 			 2 ..... ROJO
  77  89A5              ;			 3 ..... MAGENTA
  78  89A5              ; 			 4 ..... VERDE
  79  89A5              ; 			 5 ..... CIAN
  80  89A5              ;			 6 ..... AMARILLO
  81  89A5              ; 			 7 ..... BLANCO
  82  89A5
  83  89A5 00 00        Indice_Sprite_der defw 0
  84  89A7 00 00        Indice_Sprite_izq defw 0
  85  89A9 00 00        Puntero_DESPLZ_der defw 0
  86  89AB 00 00        Puntero_DESPLZ_izq defw 0
  87  89AD
  88  89AD 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89AF 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89B0
  91  89B0              ; Variables de objeto. (Características).
  92  89B0
  93  89B0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89B1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89B2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89B3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89B4
  98  89B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89B5
 102  89B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89B9 00 00        	defw 0
 105  89BB 00 00 00 00  	db 0,0,0,0
 106  89BF
 107  89BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89C1 00 00        	defw 0
 109  89C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89C5 00 00 00 00  	db 0,0,0,0
 111  89C9
 112  89C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89C9
 114  89C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89CA              ;
 120  89CA              ; 														DESCRIPCIÖN:
 121  89CA              ;
 122  89CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89CA              ;
 136  89CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89CA
 140  89CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89CB
 142  89CB              ; Movimiento.
 143  89CB
 144  89CB 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89CC 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89CE 00 00        Puntero_mov defw 0
 147  89D0 00           Contador_db_mov db 0
 148  89D1 00           Incrementa_puntero db 0
 149  89D2 00           Repetimos_db db 0
 150  89D3
 151  89D3              ; Variables de funcionamiento. [DRAW].
 152  89D3
 153  89D3 00           Columnas db 0
 154  89D4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89D6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89D6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89D7
 158  89D7              ; variables de control general.
 159  89D7
 160  89D7 00           Ctrl_2 db 0
 161  89D8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89D8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89D8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89D8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89D8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89D8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89D8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89D8              ;
 169  89D8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89D8
 171  89D8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89D9
 173  89D9              ; 62 Bytes por entidad.
 174  89D9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89D9              ;					         		---------;      ;---------
 176  89D9
 177  89D9
 178  89D9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89D9
 180  89D9 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89DA
 182  89DA              ;														DESCRIPCIÓN:
 183  89DA              ;
 184  89DA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89DA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89DA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89DA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89DA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89DA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89DA              ;														BIT 3, Recarga de nueva oleada.
 191  89DA              ;														BIT 4, Recarga de nueva oleada.
 192  89DA
 193  89DA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89DC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89DC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89DC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89DC
 198  89DC
 199  89DC
 200  89DC              ; Gestión de ENTIDADES y CAJAS.
 201  89DC
 202  89DC              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89DC 00 00        Puntero_store_caja defw 0
 204  89DE 00 00        Puntero_restore_caja defw 0
 205  89E0 00 00        Indice_restore_caja defw 0
 206  89E2 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89E3 00           Numero_parcial_de_entidades db 0
 208  89E4 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89E5 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89E6              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89E6              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89E6              ;														; _ (Numero_de_malotes)="0".
 213  89E6 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89E8 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89EA              ;														; _ puntero (Indice_entidades).
 216  89EA
 217  89EA
 218  89EA              ;---------------------------------------------------------------------------------------------------------------
 219  89EA              ;
 220  89EA              ; Sirven para PINTAR.
 221  89EA
 222  89EA 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89EC              ;														; _variable para almacenar lo posición del puntero_
 224  89EC              ; 														; _de pila, SP.
 225  89EC 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89EE              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89EE 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89F0              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89F0              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89F0 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89F2              ;														; _el snapshot de los registros del siguiente disparo.
 232  89F2              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89F2
 234  89F2              ;---------------------------------------------------------------------------------------------------------------
 235  89F2
 236  89F2              ; Gestión de Disparos.
 237  89F2
 238  89F2 00           Numero_de_disparotes db 0
 239  89F3 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89F5 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  89F7 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  89F8              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  89F8              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  89F8 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  89FA              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  89FA              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  89FA              ;														; _produzca colisión.
 248  89FA 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  89FC              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  89FC 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89FF              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  89FF 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  8A02              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  8A02              ;---------------------------------------------------------------------------------------------------------------
 255  8A02
 256  8A02              ; Relojes y temporizaciones.
 257  8A02
 258  8A02 00           Contador_de_frames db 0
 259  8A03 00           Secundero db 0
 260  8A04 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 261  8A05              ;														; Repite la oleada de entidades.
 262  8A05 01           Habilita_disparo_Amadeus db 1
 263  8A06 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 264  8A07 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 265  8A08
 266  8A08 01           Habilita_disparo_entidad db 1
 267  8A09 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 268  8A0A 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 269  8A0B
 270  8A0B              ;---------------------------------------------------------------------------------------------------------------
 271  8A0B
 272  8A0B              ; Gestión de FRAMES.
 273  8A0B
 274  8A0B              ;Switch db 0
 275  8A0B
 276  8A0B              ; Variables de Raster y localización en pantalla.
 277  8A0B
 278  8A0B              ;Temp_Raster defw $ff00
 279  8A0B
 280  8A0B              ;---------------------------------------------------------------------------------------------------------------
 281  8A0B
 282  8A0B              ; Gestión de NIVELES.
 283  8A0B
 284  8A0B 00           Nivel db 0												 ; Nivel actual del juego.
 285  8A0C 00 00        Puntero_indice_NIVELES defw 0
 286  8A0E 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 287  8A10              ; 														 ; _ que definen el NIVEL.
 288  8A10
 289  8A10
 290  8A10              ; Y todo comienza aquí .....
 291  8A10              ;
 292  8A10              ; Rutina principal *************************************************************************************************************************************************************************
 293  8A10              ;
 294  8A10              ;	14/11/22
 295  8A10
 296  8A10              START
 297  8A10
 298  8A10 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 299  8A13 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 300  8A15 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 301  8A17 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 302  8A19 F3           	DI
 303  8A1A
 304  8A1A 3E 07        	ld a,%00000111
 305  8A1C CD AC 98     	call Cls
 306  8A1F
 307  8A1F              ;	call Pinta_marco
 308  8A1F
 309  8A1F CD E5 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 310  8A22 CD D0 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 311  8A25
 312  8A25 CD F7 88     4 call Prepara_cajas
 313  8A28
 314  8A28 CD A3 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 315  8A2B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 316  8A2B CD 80 8D     	call Restore_entidad
 317  8A2E
 318  8A2E 21 E3 89     	ld hl,Numero_parcial_de_entidades
 319  8A31 46           	ld b,(hl)
 320  8A32 04           	inc b
 321  8A33 05           	dec b
 322  8A34 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 323  8A36
 324  8A36              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 325  8A36              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 326  8A36              ;	Pintamos el resto de entidades:
 327  8A36
 328  8A36              ;	INICIA ENTIDADES !!!!!
 329  8A36
 330  8A36 C5           1 push bc  												; Guardo el contador de entidades.
 331  8A37 CD FD 8C     	call Inicia_Puntero_objeto
 332  8A3A CD C0 98     	call Recompone_posicion_inicio
 333  8A3D CD FC 92     	call Draw
 334  8A40 CD A0 7F     	call Guarda_foto_registros
 335  8A43 CD 45 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 336  8A46 C1           	pop bc
 337  8A47 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 338  8A49
 339  8A49              ;	call Pinta_marco
 340  8A49
 341  8A49              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 342  8A49
 343  8A49 3A D9 89     	ld a,(Ctrl_1)
 344  8A4C CB 5F        	bit 3,a
 345  8A4E 20 18        	jr nz,5F											; Loop
 346  8A50
 347  8A50              ; 	INICIA AMADEUS !!!!!
 348  8A50
 349  8A50 CD A7 8D     3 call Restore_Amadeus
 350  8A53 CD FD 8C     	call Inicia_Puntero_objeto
 351  8A56 CD FC 92     	call Draw
 352  8A59 CD A0 7F     	call Guarda_foto_registros
 353  8A5C 11 7C 85     	ld de,Amadeus_db
 354  8A5F CD B9 8D     	call Store_Amadeus
 355  8A62
 356  8A62              ; 	INICIA DISPAROS !!!!!
 357  8A62
 358  8A62 CD B9 8C     	call Inicia_Puntero_Disparo_Entidades
 359  8A65 CD C0 8C     	call Inicia_Puntero_Disparo_Amadeus
 360  8A68
 361  8A68              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 362  8A68
 363  8A68 CD A3 8C     5 call Inicia_punteros_de_cajas
 364  8A6B CD 80 8D     	call Restore_entidad
 365  8A6E
 366  8A6E 3A D9 89     	ld a,(Ctrl_1)
 367  8A71 CB 5F        	bit 3,a
 368  8A73 28 0A        	jr z,6F
 369  8A75
 370  8A75              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 371  8A75
 372  8A75 21 D9 89     	ld hl,Ctrl_1
 373  8A78 CB 9E        	res 3,(hl)
 374  8A7A CD C7 8C     	call Calcula_numero_de_malotes
 375  8A7D 18 07        	jr 7F
 376  8A7F
 377  8A7F              ; ----------
 378  8A7F
 379  8A7F 3A E3 89     6 ld a,(Numero_parcial_de_entidades)
 380  8A82 3C           	inc a
 381  8A83 32 E5 89     	ld (Numero_de_malotes),a
 382  8A86
 383  8A86 AF           7 xor a
 384  8A87 FB           2 ei
 385  8A88 28 FD        	jr z,2B
 386  8A8A
 387  8A8A 3A 03 8A     	ld a,(Secundero)
 388  8A8D 47           	ld b,a
 389  8A8E 3A 04 8A     	ld a,(Activa_recarga_cajas)
 390  8A91 B8           	cp b
 391  8A92 28 08        	jr z,8F
 392  8A94
 393  8A94 21 D9 89     	ld hl,Ctrl_1
 394  8A97 CB E6        	set 4,(hl)
 395  8A99 AF           	xor a
 396  8A9A 18 EB        	jr 2B
 397  8A9C
 398  8A9C 21 D9 89     8 ld hl,Ctrl_1
 399  8A9F CB A6        	res 4,(hl)
 400  8AA1 F3           	di
 401  8AA2
 402  8AA2              ;	jr $
 403  8AA2 C3 25 8A     	jp 4B
 404  8AA5
 405  8AA5              ; -----------------------------------------------------------------------------------
 406  8AA5
 407  8AA5              Frame
 408  8AA5
 409  8AA5              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 410  8AA5              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 411  8AA5
 412  8AA5              ; PINTAMOS.
 413  8AA5
 414  8AA5 3E 02            ld a,2
 415  8AA7 D3 FE            out ($fe),a
 416  8AA9 CD 00 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 417  8AAC CD 39 96     	call Extrae_foto_disparos
 418  8AAF 3E 01            ld a,1
 419  8AB1 D3 FE            out ($fe),a
 420  8AB3
 421  8AB3
 422  8AB3              ;    jr $
 423  8AB3
 424  8AB3              ; ----------------------------------------------------------------------
 425  8AB3
 426  8AB3              ; RELOJES.
 427  8AB3
 428  8AB3 21 02 8A     	ld hl,Contador_de_frames
 429  8AB6 34           	inc (hl)											; 0 - 255
 430  8AB7
 431  8AB7 3E 3C        	ld a,60
 432  8AB9 BE           	cp (hl)
 433  8ABA 20 22        	jr nz,13F
 434  8ABC
 435  8ABC 36 00        	ld (hl),0
 436  8ABE
 437  8ABE 21 03 8A     	ld hl,Secundero
 438  8AC1 34           	inc (hl)
 439  8AC2
 440  8AC2 7E           	ld a,(hl)
 441  8AC3 E6 01        	and %00000001
 442  8AC5 20 10        	jr nz,20F
 443  8AC7
 444  8AC7 3A E3 89     	ld a,(Numero_parcial_de_entidades)
 445  8ACA 47           	ld b,a
 446  8ACB 3A E4 89     	ld a,(Entidades_en_curso)
 447  8ACE B8           	cp b
 448  8ACF 28 06        	jr z,20F
 449  8AD1 30 04        	jr nc,20F
 450  8AD3
 451  8AD3 3C           	inc a
 452  8AD4 32 E4 89     	ld (Entidades_en_curso),a
 453  8AD7
 454  8AD7 3E 3C        20 ld a,60
 455  8AD9 BE           	cp (hl)
 456  8ADA 20 02        	jr nz,13F
 457  8ADC
 458  8ADC 36 00        	ld (hl),0
 459  8ADE
 460  8ADE 21 05 8A     13 ld hl,Habilita_disparo_Amadeus
 461  8AE1 11 07 8A     	ld de,Temporiza_disparo_Amadeus
 462  8AE4 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 463  8AE7
 464  8AE7 21 08 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 465  8AEA 11 0A 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 466  8AED CD D5 7F     	call Habilita_disparos
 467  8AF0
 468  8AF0              ; COLISIONES.
 469  8AF0
 470  8AF0 CD E2 91     	call Selector_de_impactos
 471  8AF3
 472  8AF3              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 473  8AF3              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 474  8AF3              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 475  8AF3
 476  8AF3 AF           	xor a
 477  8AF4 32 F7 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 478  8AF7
 479  8AF7 CD A3 8C     	call Inicia_punteros_de_cajas
 480  8AFA CD 80 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 481  8AFD              ; 														; _ en DRAW.
 482  8AFD 3A 9B 89     	ld a,(Filas)
 483  8B00 A7           	and a
 484  8B01 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 485  8B03 CD 92 8D     	call Incrementa_punteros_de_cajas
 486  8B06 18 F2        	jr 12B
 487  8B08
 488  8B08              ; ---------------------------------------------------------------------------------------
 489  8B08
 490  8B08 CD 60 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 491  8B0B 21 00 70     	ld hl,Album_de_fotos
 492  8B0E 22 EE 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 493  8B11              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 494  8B11 3A E3 89     	ld a,(Numero_parcial_de_entidades)
 495  8B14 47               ld b,a
 496  8B15 A7           	and a
 497  8B16 20 17        	jr nz,2F
 498  8B18
 499  8B18 21 D9 89     	ld hl,Ctrl_1
 500  8B1B CB 66        	bit 4,(hl)
 501  8B1D C2 A3 8B     	jp nz,4F
 502  8B20
 503  8B20 21 D9 89     	ld hl,Ctrl_1
 504  8B23 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 505  8B25 3A 03 8A     	ld a,(Secundero)
 506  8B28 3C           	inc a
 507  8B29 32 04 8A     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 508  8B2C
 509  8B2C C3 A3 8B     	jp 4F
 510  8B2F
 511  8B2F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 512  8B2F
 513  8B2F 3A E4 89     2 ld a,(Entidades_en_curso)
 514  8B32 A7           	and a
 515  8B33 28 6E        	jr z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 516  8B35 47           	ld b,a												; Entidades en curso en B.
 517  8B36
 518  8B36              ; Código que ejecutamos con cada entidad:
 519  8B36              ; Impacto ???
 520  8B36
 521  8B36 C5           15 push bc 												; Nº de entidades en curso.
 522  8B37
 523  8B37 3A B4 89     	ld a,(Impacto)
 524  8B3A A7           	and a
 525  8B3B 28 25        	jr z,8F
 526  8B3D
 527  8B3D              ; Hay Impacto en esta entidad.
 528  8B3D
 529  8B3D CD 5A 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 530  8B40
 531  8B40              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 532  8B40
 533  8B40 3A D7 89     	ld a,(Ctrl_2)
 534  8B43 CB 4F        	bit 1,a
 535  8B45 20 3D        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 536  8B47
 537  8B47 3A A3 89     	ld a,(CTRL_DESPLZ)
 538  8B4A A7           	and a
 539  8B4B 20 08        	jr nz,21F
 540  8B4D
 541  8B4D 21 7C 84     	ld hl,Indice_Explosion_2x2-2
 542  8B50 22 A9 89     	ld (Puntero_DESPLZ_der),hl
 543  8B53 18 06        	jr 22F
 544  8B55
 545  8B55 21 E6 83     21 ld hl,Indice_Explosion_2x3-2
 546  8B58 22 A9 89     	ld (Puntero_DESPLZ_der),hl
 547  8B5B
 548  8B5B 21 D7 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 549  8B5E CB CE        	set 1,(hl)
 550  8B60 18 22        	jr 7F
 551  8B62
 552  8B62              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 553  8B62              ; _con las coordenadas de la entidad almacenada en DRAW.
 554  8B62
 555  8B62 3A D9 89     8 ld a,(Ctrl_1)
 556  8B65 CB 57        	bit 2,a
 557  8B67 28 1B        	jr z,7F
 558  8B69
 559  8B69 2A FA 89     	ld hl,(Coordenadas_disparo_certero)
 560  8B6C EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 561  8B6D              ;														; E contiene la coordenada_X del disparo.
 562  8B6D 2A A1 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 563  8B70              ;														; H FILA, (Coordenada_y de la entidad).
 564  8B70 A7           	and a
 565  8B71 ED 52        	sbc hl,de
 566  8B73
 567  8B73 CD 19 92     	call Determina_resultado_comparativa
 568  8B76
 569  8B76              ;! Debug colisiones
 570  8B76 78           	ld a,b
 571  8B77 A7           	and a
 572  8B78              ;	ld a,(Cuad_objeto)
 573  8B78              ;	inc b
 574  8B78              ;	dec b
 575  8B78 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 576  8B7A              ;	jr z,$
 577  8B7A
 578  8B7A              ;! Debug colisiones
 579  8B7A
 580  8B7A              ; ----- ----- -----
 581  8B7A
 582  8B7A 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 583  8B7C 32 B4 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 584  8B7F
 585  8B7F 21 D9 89     	ld hl,Ctrl_1
 586  8B82 CB 96        	res 2,(hl)
 587  8B84
 588  8B84              ; Limpiamos las coordenadas del disparo asesino. Ya tenemos víctima.
 589  8B84
 590  8B84              ;	ld hl,Coordenadas_disparo_certero
 591  8B84              ;	ld (hl),0
 592  8B84              ;	inc hl
 593  8B84              ;	ld (hl),0
 594  8B84
 595  8B84 CD D6 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 596  8B87
 597  8B87 3A C9 89     	ld a,(Ctrl_0)
 598  8B8A CB 67        	bit 4,a
 599  8B8C 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 600  8B8E
 601  8B8E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 602  8B8E              ; [[[
 603  8B8E CD 1B 8E     	call Detecta_disparo_entidad
 604  8B91              ; ]]]
 605  8B91 CD 6A 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 606  8B94
 607  8B94 21 C9 89     	ld hl,Ctrl_0
 608  8B97 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 609  8B99 AF           	xor a
 610  8B9A 32 CA 89     	ld (Obj_dibujado),a
 611  8B9D
 612  8B9D CD 45 8D     6 call Store_Restore_cajas
 613  8BA0
 614  8BA0 C1           	pop bc
 615  8BA1 10 93        	djnz 15B
 616  8BA3
 617  8BA3              ; ------------------------------------
 618  8BA3
 619  8BA3              ; Hemos gestionado todas las unidades.
 620  8BA3              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 621  8BA3
 622  8BA3              ;	ld hl,Ctrl_1
 623  8BA3              ;	res 2,(hl)
 624  8BA3
 625  8BA3              ; Limpiamos las coordenadas del disparo asesino.
 626  8BA3
 627  8BA3              ;	ld hl,Coordenadas_disparo_certero
 628  8BA3              ;	ld (hl),0
 629  8BA3              ;	inc hl
 630  8BA3              ;	ld (hl),0
 631  8BA3
 632  8BA3              ; ------------------------------------
 633  8BA3
 634  8BA3              ; Tras la gestión de las entidades, ... AMADEUS.
 635  8BA3
 636  8BA3 CD A7 8D     4 call Restore_Amadeus
 637  8BA6
 638  8BA6 3A B4 89     	ld a,(Impacto)
 639  8BA9 A7           	and a
 640  8BAA 20 FE        	jr nz,$
 641  8BAC
 642  8BAC CD 3B 8C     	call Mov_Amadeus
 643  8BAF
 644  8BAF 3A C9 89     	ld a,(Ctrl_0)
 645  8BB2 CB 67        	bit 4,a
 646  8BB4 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 647  8BB6
 648  8BB6 CD 6A 8C     	call Guarda_foto_entidad_a_pintar
 649  8BB9
 650  8BB9 21 C9 89     3 ld hl,Ctrl_0
 651  8BBC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 652  8BBE AF           	xor a
 653  8BBF 32 CA 89     	ld (Obj_dibujado),a
 654  8BC2
 655  8BC2 11 7C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 656  8BC5 CD B9 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 657  8BC8
 658  8BC8 CD 7E 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 659  8BCB
 660  8BCB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 661  8BCB
 662  8BCB CD DF 8C     	call Calcula_numero_de_disparotes
 663  8BCE CD C7 8C     9 call Calcula_numero_de_malotes
 664  8BD1
 665  8BD1 3E 04        	ld a,4
 666  8BD3 D3 FE        	out ($fe),a
 667  8BD5
 668  8BD5 C9           	ret
 669  8BD6
 670  8BD6              ; --------------------------------------------------------------------------------------------------------------
 671  8BD6              ;
 672  8BD6              ;	27/05/23
 673  8BD6
 674  8BD6              Mov_obj
 675  8BD6
 676  8BD6              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 677  8BD6
 678  8BD6 3A D7 89     	ld a,(Ctrl_2)
 679  8BD9 CB 4F        	bit 1,a
 680  8BDB 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 681  8BDD
 682  8BDD              ; Explosión:
 683  8BDD
 684  8BDD 3A D8 89     	ld a,(Frames_explosion)
 685  8BE0 A7           	and a
 686  8BE1 20 11        	jr nz,4F
 687  8BE3
 688  8BE3              ; Una alimaña menos!!!!!!!!!1
 689  8BE3
 690  8BE3 CD C2 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 691  8BE6 21 E3 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 692  8BE9 35           	dec (hl)
 693  8BEA 21 E4 89     	ld hl,Entidades_en_curso
 694  8BED 35           	dec (hl)
 695  8BEE 21 E2 89     	ld hl,Numero_de_entidades
 696  8BF1 35           	dec (hl)
 697  8BF2 18 46        	jr 3F
 698  8BF4
 699  8BF4              ; -----
 700  8BF4
 701  8BF4 2A A9 89     4 ld hl,(Puntero_DESPLZ_der)
 702  8BF7 23           	inc hl
 703  8BF8 23           	inc hl
 704  8BF9 22 A9 89     	ld (Puntero_DESPLZ_der),hl
 705  8BFC CD F7 8C     	call Extrae_address
 706  8BFF 22 9F 89     	ld (Puntero_objeto),hl
 707  8C02
 708  8C02 21 D8 89     	ld hl,Frames_explosion
 709  8C05 35           	dec (hl)
 710  8C06
 711  8C06 CD 5A 8C     	call Guarda_foto_entidad_a_borrar
 712  8C09 18 2F        	jr 3F
 713  8C0B
 714  8C0B AF           2 xor a
 715  8C0C 32 CA 89     	ld (Obj_dibujado),a
 716  8C0F 32 C9 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 717  8C12              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 718  8C12              ; 														; _de la entidad.
 719  8C12 CD 74 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 720  8C15              ;														; Obj_dibujado="0".
 721  8C15              ; Movemos Entidades malignas.
 722  8C15
 723  8C15 21 CC 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 724  8C18 34           	inc (hl)
 725  8C19 35           	dec (hl)                                            ; Salimos de la rutina.
 726  8C1A C8           	ret z
 727  8C1B
 728  8C1B CD DA 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 729  8C1E
 730  8C1E 3A C9 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 731  8C21 CB 67        	bit 4,a
 732  8C23 C8           	ret z
 733  8C24
 734  8C24              ; Ha habido desplazamiento de la entidad maligna.
 735  8C24              ; Ha llegado a zona de AMADEUS ???
 736  8C24
 737  8C24 3A A2 89     	ld a,(Coordenada_y)
 738  8C27 FE 14        	cp $14
 739  8C29 D4 AF 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 740  8C2C              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 741  8C2C              ; ---------
 742  8C2C
 743  8C2C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 744  8C2E 32 CA 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 745  8C31 CD 74 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 746  8C34 CD 8B 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 747  8C37 CD 5A 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 748  8C3A C9           3 ret													; _de la misma.
 749  8C3B
 750  8C3B              ; --------------------------------------------------------------------------------------------------------------
 751  8C3B              ;
 752  8C3B              ;	29/1/23
 753  8C3B
 754  8C3B              Mov_Amadeus
 755  8C3B
 756  8C3B AF           	xor a
 757  8C3C 32 CA 89     	ld (Obj_dibujado),a
 758  8C3F CD 74 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 759  8C42              ;														; Obj_dibujado="0".
 760  8C42              ; Movemos Amadeus.
 761  8C42
 762  8C42 CD E4 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 763  8C45 3A C9 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 764  8C48 CB 67        	bit 4,a
 765  8C4A C8           	ret z
 766  8C4B
 767  8C4B              ; ---------
 768  8C4B
 769  8C4B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 770  8C4D 32 CA 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 771  8C50 CD 74 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 772  8C53 CD 8B 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 773  8C56 CD 5A 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 774  8C59 C9           	ret													; _de la nave.
 775  8C5A
 776  8C5A              ; --------------------------------------------------------------------------------------------------------------
 777  8C5A              ;
 778  8C5A              ;	31/01/23
 779  8C5A              ;
 780  8C5A              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 781  8C5A
 782  8C5A              Guarda_foto_entidad_a_borrar
 783  8C5A
 784  8C5A CD D6 95     	call Prepara_draw
 785  8C5D CD 10 95     	call calcula_CColumnass
 786  8C60 CD 47 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 787  8C63 CD 9C 95     	call Define_rutina_de_impresion
 788  8C66 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 789  8C69 C9           	ret
 790  8C6A
 791  8C6A              ; --------------------------------------------------------------------------------------------------------------
 792  8C6A              ;
 793  8C6A              ;	31/01/23
 794  8C6A              ;
 795  8C6A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 796  8C6A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 797  8C6A
 798  8C6A              Guarda_foto_entidad_a_pintar
 799  8C6A
 800  8C6A CD 97 8C     	call Repone_pintar
 801  8C6D CD FC 92     	call Draw
 802  8C70 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 803  8C73 C9           	ret
 804  8C74
 805  8C74              ; --------------------------------------------------------------------------------------------------------------
 806  8C74              ;
 807  8C74              ;
 808  8C74
 809  8C74 21 9B 89     Prepara_var_pintado_borrado	ld hl,Filas
 810  8C77 3A CA 89     	ld a,(Obj_dibujado)
 811  8C7A A7           	and a
 812  8C7B 28 05        	jr z,1F
 813  8C7D 11 BF 89     	ld de,Variables_de_pintado
 814  8C80 18 03        	jr 2F
 815  8C82 11 B5 89     1 ld de,Variables_de_borrado
 816  8C85 01 08 00     2 ld bc,8
 817  8C88 ED B0        	ldir
 818  8C8A C9           	ret
 819  8C8B
 820  8C8B              ; --------------------------------------------------------------------------------------------------------------
 821  8C8B
 822  8C8B 21 B5 89     Repone_borrar ld hl,Variables_de_borrado
 823  8C8E 11 9B 89     	ld de,Filas
 824  8C91 01 08 00     	ld bc,8
 825  8C94 ED B0        	ldir
 826  8C96 C9           	ret
 827  8C97
 828  8C97 21 BF 89     Repone_pintar ld hl,Variables_de_pintado
 829  8C9A 11 9B 89     	ld de,Filas
 830  8C9D 01 08 00     	ld bc,8
 831  8CA0 ED B0        	ldir
 832  8CA2 C9           	ret
 833  8CA3
 834  8CA3              ; *************************************************************************************************************************************************************
 835  8CA3              ;
 836  8CA3              ; 8/1/23
 837  8CA3              ;
 838  8CA3              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 839  8CA3              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 840  8CA3              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 841  8CA3
 842  8CA3              ; Destruye HL y DE !!!!!
 843  8CA3
 844  8CA3              Inicia_punteros_de_cajas
 845  8CA3
 846  8CA3 21 64 85     	ld hl,Indice_de_cajas
 847  8CA6 CD F7 8C         call Extrae_address
 848  8CA9 22 DC 89         ld (Puntero_store_caja),hl
 849  8CAC 21 66 85     	ld hl,Indice_de_cajas+2
 850  8CAF 22 E0 89     	ld (Indice_restore_caja),hl
 851  8CB2 CD F7 8C     	call Extrae_address
 852  8CB5 22 DE 89     	ld (Puntero_restore_caja),hl
 853  8CB8 C9               ret
 854  8CB9
 855  8CB9              ; *************************************************************************************************************************************************************
 856  8CB9              ;
 857  8CB9              ; 8/1/23
 858  8CB9              ;
 859  8CB9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 860  8CB9
 861  8CB9 21 FC 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 862  8CBC 22 F3 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 863  8CBF C9           	ret
 864  8CC0 21 E4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 865  8CC3 22 F5 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 866  8CC6 C9           	ret
 867  8CC7
 868  8CC7              ; -------------------------------------------------------------------------------------------------------------
 869  8CC7              ;
 870  8CC7              ; 28/2/23
 871  8CC7              ;
 872  8CC7
 873  8CC7              Calcula_numero_de_malotes
 874  8CC7
 875  8CC7 21 00 70     	ld hl,Album_de_fotos
 876  8CCA EB           	ex de,hl
 877  8CCB 2A EE 89     	ld hl,(Stack_snapshot)
 878  8CCE
 879  8CCE 06 00        	ld b,0
 880  8CD0 7D           	ld a,l
 881  8CD1 93           	sub e
 882  8CD2 28 07        	jr z,1F
 883  8CD4
 884  8CD4              ; Nº de malotes no es "0".
 885  8CD4
 886  8CD4 D6 06        2 sub 6
 887  8CD6 04           	inc b
 888  8CD7 A7           	and a
 889  8CD8 20 FA        	jr nz,2B
 890  8CDA 78           	ld a,b
 891  8CDB
 892  8CDB 32 E5 89     1 ld (Numero_de_malotes),a
 893  8CDE C9           	ret
 894  8CDF
 895  8CDF              ; -------------------------------------------------------------------------------------------------------------
 896  8CDF              ;
 897  8CDF              ; 28/2/23
 898  8CDF              ;
 899  8CDF
 900  8CDF              Calcula_numero_de_disparotes
 901  8CDF
 902  8CDF 21 85 70     	ld hl,Album_de_fotos_disparos
 903  8CE2 EB           	ex de,hl
 904  8CE3 2A F0 89     	ld hl,(Stack_snapshot_disparos)
 905  8CE6
 906  8CE6 06 00        	ld b,0
 907  8CE8 7D           	ld a,l
 908  8CE9 93           	sub e
 909  8CEA 28 07        	jr z,1F
 910  8CEC
 911  8CEC              ; Nº de malotes no es "0".
 912  8CEC
 913  8CEC D6 06        2 sub 6
 914  8CEE 04           	inc b
 915  8CEF A7           	and a
 916  8CF0 20 FA        	jr nz,2B
 917  8CF2 78           	ld a,b
 918  8CF3
 919  8CF3 32 F2 89     1 ld (Numero_de_disparotes),a
 920  8CF6 C9           	ret
 921  8CF7              ; *************************************************************************************************************************************************************
 922  8CF7              ;
 923  8CF7              ; 20/10/22
 924  8CF7              ;
 925  8CF7              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 926  8CF7              ;
 927  8CF7              ; Destruye el puntero y DE !!!!!
 928  8CF7
 929  8CF7 5E           Extrae_address ld e,(hl)
 930  8CF8 23           	inc hl
 931  8CF9 56           	ld d,(hl)
 932  8CFA 2B           	dec hl
 933  8CFB EB           	ex de,hl
 934  8CFC C9           	ret
 935  8CFD
 936  8CFD              ; *************************************************************************************************************************************************************
 937  8CFD              ;
 938  8CFD              ;	7/2/23
 939  8CFD              ;
 940  8CFD              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 941  8CFD              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 942  8CFD              ;
 943  8CFD              ;   Destruye HL y BC !!!!!,
 944  8CFD              ;
 945  8CFD              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 946  8CFD              ;					"0" ..... Izquierda.
 947  8CFD
 948  8CFD              Inicia_Puntero_objeto
 949  8CFD
 950  8CFD 3A AF 89     	ld a,(Cuad_objeto)
 951  8D00 E6 01        	and 1
 952  8D02 F5           	push af
 953  8D03 CC 21 8D     	call z,Inicia_puntero_objeto_izq
 954  8D06 F1           	pop af
 955  8D07 28 2B        	jr z,1F
 956  8D09 CD 0E 8D     	call Inicia_puntero_objeto_der
 957  8D0C 18 26        	jr 1F
 958  8D0E
 959  8D0E              ; Arrancamos desde la parte izquierda de la pantalla.
 960  8D0E              ; Iniciamos (Indice_Sprite_der).
 961  8D0E
 962  8D0E 2A A5 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 963  8D11 22 A9 89     	ld (Puntero_DESPLZ_der),hl
 964  8D14 CD F7 8C     	call Extrae_address
 965  8D17 22 9F 89     	ld (Puntero_objeto),hl
 966  8D1A
 967  8D1A 2A A7 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 968  8D1D 22 AB 89     	ld (Puntero_DESPLZ_izq),hl
 969  8D20 C9           	ret
 970  8D21
 971  8D21              ; Arrancamos desde la parte derecha de la pantalla.
 972  8D21              ; Iniciamos (Indice_Sprite_izq).
 973  8D21
 974  8D21 2A A7 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 975  8D24 22 AB 89     	ld (Puntero_DESPLZ_izq),hl
 976  8D27 CD F7 8C     	call Extrae_address
 977  8D2A 22 9F 89     	ld (Puntero_objeto),hl
 978  8D2D
 979  8D2D 2A A5 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 980  8D30 22 A9 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 981  8D33 C9           	ret
 982  8D34
 983  8D34              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 984  8D34
 985  8D34 21 38 83     1 ld hl,Amadeus
 986  8D37 ED 4B 9F 89  	ld bc,(Puntero_objeto)
 987  8D3B B7 ED 42     	sub hl,bc
 988  8D3E C0           	ret nz
 989  8D3F 21 C9 89     	ld hl,Ctrl_0
 990  8D42 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 991  8D44 C9           	ret 												; _de nuestra nave en los extremos.
 992  8D45
 993  8D45              ; *************************************************************************************************************************************************************
 994  8D45              ;
 995  8D45              ;	14/5/23
 996  8D45              ;
 997  8D45              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 998  8D45              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 999  8D45
1000  8D45              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1001  8D45              ;	_de la 2ª y 3ª entidad respectivamente.
1002  8D45
1003  8D45              Store_Restore_cajas
1004  8D45
1005  8D45 E5           	push hl
1006  8D46 D5           	push de
1007  8D47 C5            	push bc
1008  8D48
1009  8D48              ;	STORE !!!!!
1010  8D48              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1011  8D48
1012  8D48 21 9B 89     	ld hl,Filas
1013  8D4B ED 5B DC 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1014  8D4F 01 3E 00     	ld bc,62
1015  8D52 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1016  8D54
1017  8D54              ; 	Entidad_sospechosa. 20/4/23
1018  8D54
1019  8D54 3A B4 89     	ld a,(Impacto)
1020  8D57 A7           	and a
1021  8D58 28 0C        	jr z,1F
1022  8D5A
1023  8D5A 2A DC 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1024  8D5D 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1025  8D60 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1026  8D61 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1027  8D63 22 F8 89     	ld (Entidad_sospechosa_de_colision),hl
1028  8D66
1029  8D66              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1030  8D66
1031  8D66 2A DE 89     1 ld hl,(Puntero_restore_caja)
1032  8D69 7E           	ld a,(hl)
1033  8D6A A7           	and a
1034  8D6B F5           	push af
1035  8D6C 28 08        	jr z,2F
1036  8D6E
1037  8D6E 11 9B 89     	ld de,Filas
1038  8D71 01 3E 00     	ld bc,62
1039  8D74 ED B0        	ldir
1040  8D76
1041  8D76 CD 92 8D     2 call Incrementa_punteros_de_cajas
1042  8D79 F1           	pop af
1043  8D7A 28 EA        	jr z,1B
1044  8D7C
1045  8D7C C1           	pop bc
1046  8D7D D1           	pop de
1047  8D7E E1           	pop hl
1048  8D7F
1049  8D7F C9           	ret
1050  8D80
1051  8D80              ; **************************************************************************************************
1052  8D80              ;
1053  8D80              ;	12/05/23
1054  8D80              ;
1055  8D80              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1056  8D80
1057  8D80 E5           Restore_entidad push hl
1058  8D81 D5           	push de
1059  8D82 C5            	push bc
1060  8D83
1061  8D83 2A DC 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1062  8D86 11 9B 89     	ld de,Filas
1063  8D89 01 3E 00     	ld bc,62
1064  8D8C ED B0        	ldir
1065  8D8E
1066  8D8E C1           	pop bc
1067  8D8F D1           	pop de
1068  8D90 E1           	pop hl
1069  8D91 C9           	ret
1070  8D92
1071  8D92
1072  8D92              ; **************************************************************************************************
1073  8D92              ;
1074  8D92              ;	08/05/23
1075  8D92              ;
1076  8D92              ;	Incrementamos los dos punteros de entidades. (+1).
1077  8D92
1078  8D92 2A DE 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1079  8D95 22 DC 89     	ld (Puntero_store_caja),hl
1080  8D98 2A E0 89     	ld hl,(Indice_restore_caja)
1081  8D9B 23           	inc hl
1082  8D9C 23           	inc hl
1083  8D9D 22 E0 89     	ld (Indice_restore_caja),hl
1084  8DA0 CD F7 8C         call Extrae_address
1085  8DA3 22 DE 89         ld (Puntero_restore_caja),hl
1086  8DA6 C9               ret
1087  8DA7
1088  8DA7              ; **************************************************************************************************
1089  8DA7              ;
1090  8DA7              ;	25/01/23
1091  8DA7              ;
1092  8DA7              ;	Restore_Amadeus
1093  8DA7              ;
1094  8DA7              ;	Cargamos en DRAW los parámetros de Amadeus.
1095  8DA7              ;
1096  8DA7
1097  8DA7 E5           Restore_Amadeus	push hl
1098  8DA8 D5           	push de
1099  8DA9 C5            	push bc
1100  8DAA 21 7C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1101  8DAD 11 9B 89     	ld de,Filas
1102  8DB0 01 3E 00     	ld bc,62
1103  8DB3 ED B0        	ldir
1104  8DB5 C1           	pop bc
1105  8DB6 D1           	pop de
1106  8DB7 E1           	pop hl
1107  8DB8 C9           	ret
1108  8DB9
1109  8DB9              ; *************************************************************************************************************************************************************
1110  8DB9              ;
1111  8DB9              ;	29/04/23
1112  8DB9              ;
1113  8DB9              ;	Store_Amadeus
1114  8DB9              ;
1115  8DB9              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1116  8DB9              ;
1117  8DB9              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1118  8DB9              ;
1119  8DB9              ;	DESTRUYE: HL y BC y DE.
1120  8DB9
1121  8DB9 21 9B 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1122  8DBC 01 3E 00     	ld bc,62
1123  8DBF ED B0        	ldir
1124  8DC1 C9           	ret
1125  8DC2
1126  8DC2              ; -----------------------------------------------------------
1127  8DC2              ;
1128  8DC2              ;	27/04/23
1129  8DC2              ;
1130  8DC2              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1131  8DC2              ;
1132  8DC2              ;	Destruye: HL,BC,DE,A
1133  8DC2
1134  8DC2 21 9B 89     Borra_datos_entidad ld hl,Filas
1135  8DC5 01 3D 00     	ld bc,61
1136  8DC8 AF           	xor a
1137  8DC9 77           	ld (hl),a
1138  8DCA 11 9C 89     	ld de,Filas+1
1139  8DCD ED B0        	ldir
1140  8DCF C9           	ret
1141  8DD0
1142  8DD0              ; -----------------------------------------------------------
1143  8DD0
1144  8DD0              ; Teclado.
1145  8DD0
1146  8DD0 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1147  8DD2 DB FE        	in a,($fe)
1148  8DD4 E6 01        	and $01
1149  8DD6 28 02        	jr z,1f
1150  8DD8 18 F6        	jr Pulsa_ENTER
1151  8DDA C9           1 ret
1152  8DDB
1153  8DDB              ; **************************************************************************************************
1154  8DDB              ;
1155  8DDB              ; Temporización.
1156  8DDB
1157  8DDB              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1158  8DDB              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1159  8DDB              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1160  8DDB              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1161  8DDB
1162  8DDB              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1163  8DDB              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1164  8DDB              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1165  8DDB
1166  8DDB              ; A partir de $4f61 no hace falta DELAY.
1167  8DDB
1168  8DDB              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1169  8DDB
1170  8DDB 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1171  8DDE 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1172  8DDF 78           	LD A,B
1173  8DE0 A7           	AND A
1174  8DE1 20 FB        	JR NZ,wait
1175  8DE3 C9           	RET
1176  8DE4
1177  8DE4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1178  8DE4              ;
1179  8DE4              ;	5/3/23
1180  8DE4              ;
1181  8DE4              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1182  8DE4
1183  8DE4              Movimiento_Amadeus
1184  8DE4
1185  8DE4              ; Disparo.
1186  8DE4
1187  8DE4 3A 05 8A     	ld a,(Habilita_disparo_Amadeus)
1188  8DE7 A7           	and a
1189  8DE8 20 02        	jr nz,1F
1190  8DEA 18 15        	jr 2F
1191  8DEC
1192  8DEC 3E F7        1 ld a,$f7													; "5" para disparar.
1193  8DEE DB FE        	in a,($fe)
1194  8DF0 E6 10        	and $10
1195  8DF2
1196  8DF2 F5           	push af
1197  8DF3 CC 2B 8E     	call z,Genera_disparo
1198  8DF6 F1           	pop af
1199  8DF7 20 08        	jr nz,2F
1200  8DF9
1201  8DF9 3A 05 8A     	ld a,(Habilita_disparo_Amadeus)
1202  8DFC EE 01        	xor 1
1203  8DFE 32 05 8A     	ld (Habilita_disparo_Amadeus),a
1204  8E01
1205  8E01 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1206  8E03 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1207  8E05 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1208  8E07 CC 7A 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1209  8E0A 3E F7        	ld a,$f7
1210  8E0C DB FE        	in a,($fe)
1211  8E0E E6 01        	and $01
1212  8E10 C8           	ret z
1213  8E11
1214  8E11 3E F7        	ld a,$f7
1215  8E13 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1216  8E15 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1217  8E17 CC 5C 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1218  8E1A C9           	ret
1219  8E1B
1220  8E1B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1221  8E1B              ;
1222  8E1B              ;	Rutina provisional para que los malotes cagen balas.
1223  8E1B
1224  8E1B              Detecta_disparo_entidad
1225  8E1B
1226  8E1B 3A 08 8A     	ld a,(Habilita_disparo_entidad)
1227  8E1E A7           	and a
1228  8E1F C8           	ret z
1229  8E20 3E 7F        	ld a,$7f
1230  8E22 DB FE        	in a,($fe)
1231  8E24 E6 01        	and 1
1232  8E26 C0           	ret nz
1233  8E27 CD 2B 8E     	call Genera_disparo
1234  8E2A C9           	ret
1235  8E2B
1236  8E2B              ; ---------------------------------------------------------------
1237  8E2B
1238  8E2B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E2B              ; ******************************************************************************************************************************************************************************************
   2+ 8E2B              ;
   3+ 8E2B              ;   17/04/23
   4+ 8E2B              ;
   5+ 8E2B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E2B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E2B              ;
   8+ 8E2B              ;
   9+ 8E2B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E2B              ;
  11+ 8E2B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E2B              ;               _ hacen las entidades hacia abajo.
  13+ 8E2B              ;
  14+ 8E2B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E2B              ;
  16+ 8E2B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E2B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E2B              ;
  19+ 8E2B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E2B              ;           _ la bala.
  21+ 8E2B              ;
  22+ 8E2B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E2B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E2B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E2B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E2B              ;           _ en el momento de generarse la bala)).
  27+ 8E2B
  28+ 8E2B              Genera_disparo
  29+ 8E2B
  30+ 8E2B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E2B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E2B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E2B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E2B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E2B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E2B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E2B
  38+ 8E2B              ; Exclusiones:
  39+ 8E2B
  40+ 8E2B 3A D3 89         ld a,(Columnas)
  41+ 8E2E 47               ld b,a
  42+ 8E2F 3A 9C 89         ld a,(Columns)
  43+ 8E32 B8               cp b
  44+ 8E33 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E34
  46+ 8E34              ; ----- ----- -----
  47+ 8E34
  48+ 8E34 3A C9 89         ld a,(Ctrl_0)
  49+ 8E37 CB 77            bit 6,a
  50+ 8E39 20 06            jr nz,14F
  51+ 8E3B
  52+ 8E3B 3A A2 89         ld a,(Coordenada_y)
  53+ 8E3E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E40 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E41
  56+ 8E41 21 00 80     14 ld hl,Indice_disparo
  57+ 8E44 3A A3 89         ld a,(CTRL_DESPLZ)
  58+ 8E47 4F               ld c,a
  59+ 8E48 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E4A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E4A              ;                                            ""        ""       "f9", B="1"
  62+ 8E4A              ;                                            ""        ""       "fb", B="2"
  63+ 8E4A              ;                                            ""        ""       "fb", B="3"
  64+ 8E4A A7               and a
  65+ 8E4B 28 10            jr z,1F
  66+ 8E4D E6 01            and 1
  67+ 8E4F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E50
  69+ 8E50 79               ld a,c
  70+ 8E51 16 F9            ld d,$f9
  71+ 8E53 23           2 inc hl
  72+ 8E54 23               inc hl
  73+ 8E55 04               inc b
  74+ 8E56 BA               cp d
  75+ 8E57 28 04            jr z,1F
  76+ 8E59 14               inc d
  77+ 8E5A 14               inc d
  78+ 8E5B 18 F6            jr 2B
  79+ 8E5D
  80+ 8E5D CD F7 8C     1 call Extrae_address
  81+ 8E60 E5               push hl
  82+ 8E61 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E63 DD 21 75 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E67
  85+ 8E67              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E67              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E67
  88+ 8E67 3A C9 89         ld a,(Ctrl_0)
  89+ 8E6A CB 77            bit 6,a
  90+ 8E6C 20 04            jr nz,19F
  91+ 8E6E
  92+ 8E6E AF               xor a
  93+ 8E6F 32 08 8A         ld (Habilita_disparo_entidad),a
  94+ 8E72
  95+ 8E72 3A AF 89     19 ld a,(Cuad_objeto)
  96+ 8E75 FE 02            cp 2
  97+ 8E77 38 66            jr c,3F
  98+ 8E79 28 64            jr z,3F
  99+ 8E7B
 100+ 8E7B              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E7B
 102+ 8E7B E6 01            and 1
 103+ 8E7D 28 30            jr z,4F
 104+ 8E7F
 105+ 8E7F              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E7F              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E7F              ;
 108+ 8E7F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E7F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E7F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E7F
 112+ 8E7F 2A 9D 89     	ld hl,(Posicion_actual)
 113+ 8E82
 114+ 8E82              ;   Amadeus o entidad ???.
 115+ 8E82
 116+ 8E82 3A C9 89         ld a,(Ctrl_0)
 117+ 8E85 CB 77            bit 6,a
 118+ 8E87 28 0A            jr z,8F
 119+ 8E89
 120+ 8E89              ; 	Dispara Amadeus.
 121+ 8E89
 122+ 8E89 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E8B CD F1 95         call PreviousScan
 124+ 8E8E CD F1 95         call PreviousScan
 125+ 8E91
 126+ 8E91              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E91              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E91              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E91              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E91
 131+ 8E91 18 11            jr 10F
 132+ 8E93
 133+ 8E93              ; 	Dispara Entidad.
 134+ 8E93
 135+ 8E93 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E96              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E96
 138+ 8E96              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E96              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E96
 141+ 8E96 C5               push bc
 142+ 8E97 06 10            ld b,16
 143+ 8E99 CD E2 95     9 call NextScan
 144+ 8E9C 10 FB            djnz 9B
 145+ 8E9E C1               pop bc
 146+ 8E9F CD 09 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EA2 18 06            jr 17F
 148+ 8EA4
 149+ 8EA4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EA4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EA4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EA4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EA4
 154+ 8EA4 CD 09 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EA7 CD 7E 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EAA              ;                                                      ; _al generar el disparo.
 157+ 8EAA
 158+ 8EAA              ; 	LLegados a este punto tendremos:
 159+ 8EAA              ;
 160+ 8EAA              ;       Puntero_objeto_disparo en IY.
 161+ 8EAA              ;       Rutinas_de_impresion en IX.
 162+ 8EAA              ;       Puntero_de_impresion en HL.
 163+ 8EAA              ;       Impacto/Dirección en BC.
 164+ 8EAA
 165+ 8EAA CD 11 8F     17 call Almacena_disparo
 166+ 8EAD 18 52            jr 6F                                             ; RET.
 167+ 8EAF
 168+ 8EAF              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EAF              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EAF              ;
 171+ 8EAF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EAF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EAF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EAF
 175+ 8EAF 2A 9D 89     4 ld hl,(Posicion_actual)
 176+ 8EB2
 177+ 8EB2              ;   Amadeus o entidad ???.
 178+ 8EB2
 179+ 8EB2 3A C9 89         ld a,(Ctrl_0)
 180+ 8EB5 CB 77            bit 6,a
 181+ 8EB7 28 0A            jr z,11F
 182+ 8EB9
 183+ 8EB9              ; 	Dispara Amadeus.
 184+ 8EB9
 185+ 8EB9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EBB CD F1 95         call PreviousScan
 187+ 8EBE CD F1 95         call PreviousScan
 188+ 8EC1
 189+ 8EC1              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EC1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EC1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EC1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EC1
 194+ 8EC1 18 11            jr 13F
 195+ 8EC3
 196+ 8EC3              ; 	Dispara Entidad.
 197+ 8EC3
 198+ 8EC3 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EC6              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EC6
 201+ 8EC6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EC6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EC6
 204+ 8EC6 C5               push bc
 205+ 8EC7 06 10            ld b,16
 206+ 8EC9 CD E2 95     12 call NextScan
 207+ 8ECC 10 FB            djnz 12B
 208+ 8ECE C1               pop bc
 209+ 8ECF
 210+ 8ECF CD 02 8F         call Ajusta_disparo_parte_derecha
 211+ 8ED2 18 06            jr 18F
 212+ 8ED4
 213+ 8ED4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8ED4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8ED4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8ED4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8ED4
 218+ 8ED4 CD 02 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8ED7 CD 7E 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EDA              ;                                                       ; _al generar el disparo.
 221+ 8EDA
 222+ 8EDA              ; LLegados a este punto tendremos:
 223+ 8EDA              ;
 224+ 8EDA              ;       Puntero_objeto_disparo en IY.
 225+ 8EDA              ;       Rutinas_de_impresion en IX.
 226+ 8EDA              ;       Puntero_de_impresion en HL.
 227+ 8EDA              ;       Impacto/Dirección en BC.
 228+ 8EDA
 229+ 8EDA CD 11 8F     18 call Almacena_disparo
 230+ 8EDD 18 22            jr 6F                                               ; RET.
 231+ 8EDF
 232+ 8EDF              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EDF
 234+ 8EDF 28 11        3 jr z,5F
 235+ 8EE1
 236+ 8EE1              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EE1              ;
 238+ 8EE1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EE1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EE1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EE1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EE1
 243+ 8EE1              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EE1              ;	   ""        ""       "f9", B="1"
 245+ 8EE1              ;	   ""        ""       "fb", B="2"
 246+ 8EE1              ; 	   ""        ""       "fb", B="3"
 247+ 8EE1
 248+ 8EE1 2A 9D 89     	ld hl,(Posicion_actual)
 249+ 8EE4 CD E2 95     	call NextScan
 250+ 8EE7
 251+ 8EE7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EE7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EE7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EE7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EE7
 256+ 8EE7 CD 09 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EEA
 258+ 8EEA              ; 	No se produce impacto. B="$80"
 259+ 8EEA              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EEA
 261+ 8EEA 01 80 80         ld bc,$8080
 262+ 8EED
 263+ 8EED              ; 	LLegados a este punto tendremos:
 264+ 8EED              ;
 265+ 8EED              ;       Puntero_objeto_disparo en IY.
 266+ 8EED              ;       Rutinas_de_impresion en IX.
 267+ 8EED              ;       Puntero_de_impresion en HL.
 268+ 8EED              ;       Impacto/Dirección en BC.
 269+ 8EED
 270+ 8EED CD 11 8F         call Almacena_disparo
 271+ 8EF0 18 0F            jr 6F                                           ; RET.
 272+ 8EF2
 273+ 8EF2              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EF2              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EF2              ;
 276+ 8EF2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EF2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EF2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EF2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EF2
 281+ 8EF2 2A 9D 89     5 ld hl,(Posicion_actual)
 282+ 8EF5 CD E2 95     	call NextScan
 283+ 8EF8
 284+ 8EF8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EF8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EF8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EF8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EF8
 289+ 8EF8 CD 02 8F         call Ajusta_disparo_parte_derecha
 290+ 8EFB
 291+ 8EFB              ; 	No se produce impacto. B="$80"
 292+ 8EFB              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EFB
 294+ 8EFB 01 80 80     15 ld bc,$8080
 295+ 8EFE
 296+ 8EFE              ; 	LLegados a este punto tendremos:
 297+ 8EFE              ;
 298+ 8EFE              ;       Puntero_objeto_disparo en IY.
 299+ 8EFE              ;       Rutinas_de_impresion en IX.
 300+ 8EFE              ;       Puntero_de_impresion en HL.
 301+ 8EFE              ;       Impacto/Dirección en BC.
 302+ 8EFE
 303+ 8EFE CD 11 8F         call Almacena_disparo
 304+ 8F01
 305+ 8F01 C9           6 ret
 306+ 8F02
 307+ 8F02              ; ----------------------------------------------------------------
 308+ 8F02              ;
 309+ 8F02              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F02              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F02              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F02
 313+ 8F02 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F03 FE 02            cp 2
 315+ 8F05 38 01            jr c,1F
 316+ 8F07 23               inc hl
 317+ 8F08 C9           1 ret
 318+ 8F09
 319+ 8F09 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F0A FE 01        	cp 1
 321+ 8F0C 20 01        	jr nz,1F
 322+ 8F0E 2B           	dec hl
 323+ 8F0F 2B           1 dec hl
 324+ 8F10 C9               ret
 325+ 8F11
 326+ 8F11              ; ----------------------------------------------------------------
 327+ 8F11              ;
 328+ 8F11              ;   25/02/23
 329+ 8F11              ;
 330+ 8F11              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F11              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F11              ;
 333+ 8F11              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F11              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F11
 336+ 8F11              Almacena_disparo
 337+ 8F11
 338+ 8F11 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F12 F1               pop af
 340+ 8F13 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F14
 342+ 8F14 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F15 E6 01            and 1
 344+ 8F17 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F19              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F19              ; 	Dispara AMADEUS.
 347+ 8F19
 348+ 8F19              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F19              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F19              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F19              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F19
 353+ 8F19 C5               push bc
 354+ 8F1A 01 E8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F1D 2A F5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F20 A7               and a
 357+ 8F21 ED 42            sbc hl,bc
 358+ 8F23 CC C0 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F26 C1               pop bc
 360+ 8F27 28 54            jr z,4F
 361+ 8F29
 362+ 8F29 2A F5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F2C 23               inc hl
 364+ 8F2D 23               inc hl
 365+ 8F2E 22 F5 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F31              ;                                                   ; _ Disparo_(+1).
 367+ 8F31 18 18            jr 2F
 368+ 8F33
 369+ 8F33              ; Dispara una entidad.
 370+ 8F33
 371+ 8F33 C5           1 push bc
 372+ 8F34 01 10 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F37 2A F3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F3A A7               and a
 375+ 8F3B ED 42            sbc hl,bc
 376+ 8F3D CC B9 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F40 C1               pop bc
 378+ 8F41 28 3A            jr z,4F
 379+ 8F43
 380+ 8F43 2A F3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F46 23               inc hl
 382+ 8F47 23               inc hl
 383+ 8F48 22 F3 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F4B              ;                                                   ; _ Disparo_(+1).
 385+ 8F4B CD F7 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F4E              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F4E              ;
 388+ 8F4E              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F4E              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F4E              ;                                                     Puntero_de_impresion en HL.
 391+ 8F4E              ;                                                     Impacto/Dirección en BC.
 392+ 8F4E
 393+ 8F4E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F4F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F50 23               inc hl                                          ; _ al siguiente.
 396+ 8F51 A7               and a
 397+ 8F52 20 C0            jr nz,3B
 398+ 8F54
 399+ 8F54 08               ex af,af
 400+ 8F55 ED 73 EA 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F59 F9               ld sp,hl
 402+ 8F5A
 403+ 8F5A DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F5C F5               push af                                         ; Puntero de impresión.
 405+ 8F5D FD E5            push iy                                         ; Puntero objeto.
 406+ 8F5F C5               push bc                                         ; Control.
 407+ 8F60
 408+ 8F60 ED 7B EA 89      ld sp,(Stack)
 409+ 8F64
 410+ 8F64              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F64
 412+ 8F64 21 D9 89     	ld hl,Ctrl_1
 413+ 8F67 CB C6        	set 0,(hl)
 414+ 8F69
 415+ 8F69 DD E5        	push ix
 416+ 8F6B E1               pop hl
 417+ 8F6C F5               push af
 418+ 8F6D DD E1            pop ix
 419+ 8F6F
 420+ 8F6F CD A0 7F     	call Guarda_foto_registros
 421+ 8F72
 422+ 8F72 21 D9 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F75 CB 86        	res 0,(hl)
 424+ 8F77
 425+ 8F77              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F77              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F77
 428+ 8F77 CD C0 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F7A CD B9 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F7D
 431+ 8F7D C9           4 ret
 432+ 8F7E
 433+ 8F7E              ; ----------------------------------------------------------------
 434+ 8F7E              ;
 435+ 8F7E              ;   4/3/23
 436+ 8F7E              ;
 437+ 8F7E              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F7E              ;   _ al generarse el disparo.
 439+ 8F7E              ;
 440+ 8F7E              ;       "$80" ..... No se produce colisión.
 441+ 8F7E              ;       "$81" ..... Se produce colisión.
 442+ 8F7E
 443+ 8F7E              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F7E              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F7E
 446+ 8F7E
 447+ 8F7E FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F80 E5               push hl                                        ; Puntero de impresión.
 449+ 8F81
 450+ 8F81 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F83 CD 9F 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F86
 453+ 8F86 7B               ld a,e
 454+ 8F87 E6 01            and 1
 455+ 8F89 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F8B
 457+ 8F8B E1               pop hl
 458+ 8F8C E5               push hl
 459+ 8F8D CD E2 95         call NextScan
 460+ 8F90
 461+ 8F90 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F91 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F93 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F95              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F95 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F97 CD 9F 8F         call Bucle_2
 467+ 8F9A
 468+ 8F9A 43           2 ld b,e
 469+ 8F9B E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F9C FD E1            pop iy
 471+ 8F9E C9               ret
 472+ 8F9F
 473+ 8F9F               ; ---------- ----------
 474+ 8F9F
 475+ 8F9F 06 02        Bucle_2 ld b,2
 476+ 8FA1 FD 7E 00     2 ld a,(iy)
 477+ 8FA4 A6               and (hl)
 478+ 8FA5 28 02            jr z,1F
 479+ 8FA7 1E 81            ld e,$81
 480+ 8FA9 23           1 inc hl
 481+ 8FAA FD 23            inc iy
 482+ 8FAC 10 F3            djnz 2B
 483+ 8FAE C9               ret
 484+ 8FAF
 485+ 8FAF              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FAF              ;
 487+ 8FAF              ;   11/04/23
 488+ 8FAF              ;
 489+ 8FAF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FAF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FAF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FAF              ;
 493+ 8FAF              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FAF
 495+ 8FAF              Compara_coordenadas_X
 496+ 8FAF
 497+ 8FAF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FAF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FAF
 500+ 8FAF              ; Preparamos registros:
 501+ 8FAF
 502+ 8FAF 21 A1 89         ld hl,Filas+6
 503+ 8FB2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FB3 23               inc hl
 505+ 8FB4 23               inc hl
 506+ 8FB5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FB6 43               ld b,e
 508+ 8FB7 21 AF 89         ld hl,Filas+20
 509+ 8FBA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FBB 21 FF 89         ld hl,Coordenadas_X_Entidad
 511+ 8FBE CD CF 91         call Guarda_coordenadas_X
 512+ 8FC1
 513+ 8FC1              ; Preparamos registros:
 514+ 8FC1
 515+ 8FC1 21 82 85         ld hl,Amadeus_db+6
 516+ 8FC4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FC5 23               inc hl
 518+ 8FC6 23               inc hl
 519+ 8FC7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FC8 7B               ld a,e
 521+ 8FC9 08               ex af,af'
 522+ 8FCA 21 90 85         ld hl,Amadeus_db+20
 523+ 8FCD 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FCE 21 FC 89         ld hl,Coordenadas_X_Amadeus
 525+ 8FD1 CD CF 91         call Guarda_coordenadas_X
 526+ 8FD4
 527+ 8FD4              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FD4              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FD4
 530+ 8FD4 04               inc b
 531+ 8FD5 05               dec b
 532+ 8FD6 28 04            jr z,1F
 533+ 8FD8 06 03            ld b,3
 534+ 8FDA 18 02            jr 2F
 535+ 8FDC 06 02        1 ld b,2
 536+ 8FDE 08           2 ex af,af'
 537+ 8FDF 3C               inc a
 538+ 8FE0 3D               dec a
 539+ 8FE1 28 04            jr z,5F
 540+ 8FE3 0E 03            ld c,3
 541+ 8FE5 18 02            jr 6F
 542+ 8FE7 0E 02        5 ld c,2
 543+ 8FE9 79           6 ld a,c
 544+ 8FEA 08               ex af,af'
 545+ 8FEB 11 FF 89         ld de,Coordenadas_X_Entidad
 546+ 8FEE 1A           4 ld a,(de)
 547+ 8FEF 21 FC 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FF2 BE           3 cp (hl)
 549+ 8FF3 28 0E            jr z,7F
 550+ 8FF5 23               inc hl
 551+ 8FF6 0D               dec c
 552+ 8FF7 20 F9            jr nz,3B
 553+ 8FF9 13               inc de
 554+ 8FFA 08               ex af,af'
 555+ 8FFB 4F               ld c,a
 556+ 8FFC 08               ex af,af'
 557+ 8FFD 10 EF            djnz 4B
 558+ 8FFF
 559+ 8FFF              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8FFF
 561+ 8FFF CD 0E 92     8 call Limpia_Coordenadas_X
 562+ 9002 C9               ret
 563+ 9003
 564+ 9003              7
 565+ 9003 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9005 32 B4 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9008 21 F7 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 900B CB D6            set 2,(hl)
 569+ 900D 18 F0            jr 8B
 570+ 900F
 571+ 900F              ; -----------------------------------------------------------------------
 572+ 900F              ;
 573+ 900F              ;   17/04/23
 574+ 900F              ;
 575+ 900F
 576+ 900F              Detecta_colision_nave_entidad
 577+ 900F
 578+ 900F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 900F
 580+ 900F 2A 9D 89         ld hl,(Posicion_actual)
 581+ 9012 CD 47 95         call Calcula_puntero_de_impresion
 582+ 9015
 583+ 9015              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9015              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9015
 586+ 9015 DD E5            push ix
 587+ 9017 E1               pop hl
 588+ 9018 E5               push hl
 589+ 9019
 590+ 9019              ; ----- ----- -----
 591+ 9019 1E 00            ld e,0                                         ; Indica impacto.
 592+ 901B 06 0A            ld b,10
 593+ 901D CD 4D 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9020 7B               ld a,e
 595+ 9021 FE 05            cp 5
 596+ 9023 38 0E            jr c,3F
 597+ 9025
 598+ 9025              ; LLegados a este punto:
 599+ 9025              ;
 600+ 9025              ;   HAY COLISIÓN !!!!!.
 601+ 9025              ;
 602+ 9025              ;   .db (Impacto) de Amadeus a "1".
 603+ 9025              ;   SET el bit3 de (Impacto2).
 604+ 9025              ;
 605+ 9025              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9025
 607+ 9025 21 95 85         ld hl,Amadeus_db+25
 608+ 9028 36 01            ld (hl),1
 609+ 902A 21 F7 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 902D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 902F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9031 18 18            jr 1F
 613+ 9033
 614+ 9033              ; -----
 615+ 9033
 616+ 9033 E1           3 pop hl
 617+ 9034 CD E2 95         call NextScan
 618+ 9037 E5               push hl
 619+ 9038 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9039 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 903B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 903D 30 0C            jr nc,1F
 623+ 903F              ;                                                  ; _ 2º scanline si esto es así.
 624+ 903F 10 DC            djnz 2B
 625+ 9041
 626+ 9041              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9041
 628+ 9041              ; LLegados a este punto:
 629+ 9041              ;
 630+ 9041              ;   NO HAY COLISIÓN !!!!!.
 631+ 9041              ;
 632+ 9041              ;   .db (Impacto) de Amadeus a "0".
 633+ 9041              ;   RES el bit2 de (Impacto2).
 634+ 9041              ;
 635+ 9041              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9041              ;   Lo colocamos a "0".
 637+ 9041
 638+ 9041 21 F7 89         ld hl,Impacto2
 639+ 9044 CB 96            res 2,(hl)
 640+ 9046 2A F8 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9049 36 00            ld (hl),0
 642+ 904B
 643+ 904B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 904C C9               ret
 645+ 904D
 646+ 904D               ; ---------- ----------
 647+ 904D
 648+ 904D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 904E 3A 9C 89         ld a,(Columns)
 650+ 9051 47               ld b,a
 651+ 9052 FD 7E 00     2 ld a,(iy)
 652+ 9055 BE               cp (hl)
 653+ 9056 28 01            jr z,1F
 654+ 9058
 655+ 9058 1C               inc e
 656+ 9059
 657+ 9059 23           1 inc hl
 658+ 905A FD 23            inc iy
 659+ 905C 10 F4            djnz 2B
 660+ 905E C1               pop bc
 661+ 905F C9               ret
 662+ 9060
 663+ 9060              ; -------------------------------------------------------------------------------------------------------------
 664+ 9060              ;
 665+ 9060              ;   13/03/23
 666+ 9060              ;
 667+ 9060              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9060              ;
 669+ 9060              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9060
 671+ 9060 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9063 7E               ld a,(hl)
 673+ 9064 A7               and a
 674+ 9065 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9066
 676+ 9066 44               ld b,h
 677+ 9067 4D               ld c,l
 678+ 9068 2A F0 89         ld hl,(Stack_snapshot_disparos)
 679+ 906B E5               push hl
 680+ 906C A7               and a
 681+ 906D ED 42            sbc hl,bc
 682+ 906F E5               push hl
 683+ 9070 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9071
 685+ 9071 E1               pop hl
 686+ 9072 54               ld d,h
 687+ 9073 5D               ld e,l
 688+ 9074 1B               dec de
 689+ 9075 ED B8            lddr                                                ; Limpiamos.
 690+ 9077
 691+ 9077 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 907A 22 F0 89         ld (Stack_snapshot_disparos),hl
 693+ 907D
 694+ 907D C9               ret
 695+ 907E
 696+ 907E              ; -------------------------------------------------------------------------------------------------------------
 697+ 907E              ;
 698+ 907E              ;   28/03/23
 699+ 907E              ;
 700+ 907E
 701+ 907E 01 FA 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 9081 2A F5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9084
 704+ 9084 CD F7 8C     2 call Extrae_address
 705+ 9087 7E               ld a,(hl)
 706+ 9088 A7               and a
 707+ 9089 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 908B
 709+ 908B              ; ----- ----- ----- ----- ----- -----
 710+ 908B
 711+ 908B C5               push bc
 712+ 908C CD 48 91         call foto_disparo_a_borrar
 713+ 908F
 714+ 908F              ; Existe colisión con este disparo???
 715+ 908F
 716+ 908F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 9090 7E               ld a,(hl)
 718+ 9091 2B               dec hl
 719+ 9092 E6 01            and 1
 720+ 9094 28 1D            jr z,9F
 721+ 9096
 722+ 9096              ;   En este punto:
 723+ 9096              ;
 724+ 9096              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 9096              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 9096              ;   _con la entidad).
 727+ 9096              ;
 728+ 9096              ;   Disparo_2A defw 0                                ; Control.
 729+ 9096              ;    defw 0                                          ; Puntero objeto.
 730+ 9096              ;    defw 0                                          ; Puntero de impresión.
 731+ 9096              ;    defw 0                                          ; Rutina de impresión.
 732+ 9096
 733+ 9096 E5               push hl
 734+ 9097
 735+ 9097 06 04            ld b,4
 736+ 9099 23           19 inc hl
 737+ 909A 10 FD            djnz 19B
 738+ 909C
 739+ 909C CD F7 8C         call Extrae_address
 740+ 909F CD 39 9C         call Genera_coordenadas_disparo
 741+ 90A2
 742+ 90A2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90A2
 744+ 90A2 21 FA 89         ld hl,Coordenadas_disparo_certero
 745+ 90A5 72               ld (hl),d
 746+ 90A6 23               inc hl
 747+ 90A7 73               ld (hl),e
 748+ 90A8
 749+ 90A8              ; Elimino el disparo de la base de datos.
 750+ 90A8
 751+ 90A8 E1               pop hl
 752+ 90A9 CD C4 91         call Elimina_disparo_de_base_de_datos
 753+ 90AC 21 F7 89         ld hl,Impacto2
 754+ 90AF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90B1
 756+ 90B1 18 06            jr 11F
 757+ 90B3
 758+ 90B3 CD 71 91     9 call Mueve_disparo
 759+ 90B6 CD 48 91         call foto_disparo_a_borrar
 760+ 90B9
 761+ 90B9 C1           11 pop bc
 762+ 90BA 18 04            jr 7F
 763+ 90BC
 764+ 90BC              ; ----- ----- ----- ----- ----- -----
 765+ 90BC
 766+ 90BC ED 42        1 sbc hl,bc
 767+ 90BE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90C0 2A F5 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90C3 23               inc hl
 770+ 90C4 23               inc hl
 771+ 90C5 22 F5 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90C8 18 BA            jr 2B
 773+ 90CA CD C0 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90CD
 775+ 90CD 01 62 85         ld bc,Disparo_11
 776+ 90D0 2A F3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90D3
 778+ 90D3 CD F7 8C     5 call Extrae_address
 779+ 90D6 7E               ld a,(hl)
 780+ 90D7 A7               and a
 781+ 90D8 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90DA
 783+ 90DA              ; ----- ----- ----- ----- ----- -----
 784+ 90DA
 785+ 90DA C5               push bc
 786+ 90DB CD 48 91         call foto_disparo_a_borrar
 787+ 90DE
 788+ 90DE              ; Existe colisión con este disparo???
 789+ 90DE
 790+ 90DE 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90DF 7E               ld a,(hl)
 792+ 90E0 2B               dec hl
 793+ 90E1 E6 01            and 1
 794+ 90E3 28 48            jr z,10F
 795+ 90E5
 796+ 90E5              ; La colisión se produce con Amadeus???
 797+ 90E5              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90E5
 799+ 90E5 E5               push hl
 800+ 90E6
 801+ 90E6 06 04            ld b,4
 802+ 90E8 23           16 inc hl
 803+ 90E9 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90EB CD F7 8C         call Extrae_address
 805+ 90EE CD 39 9C         call Genera_coordenadas_disparo
 806+ 90F1
 807+ 90F1 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90F2 FE 16            cp $16
 809+ 90F4 38 22            jr c,15F
 810+ 90F6
 811+ 90F6              ; (Colisiones en filas 16 y 17).
 812+ 90F6
 813+ 90F6 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90F7
 815+ 90F7              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90F7
 817+ 90F7 21 82 85         ld hl,Amadeus_db+6
 818+ 90FA 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90FB 23               inc hl
 820+ 90FC 23               inc hl
 821+ 90FD 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 90FE 21 90 85         ld hl,Amadeus_db+20
 823+ 9101 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9102 21 FC 89         ld hl,Coordenadas_X_Amadeus
 825+ 9105 CD CF 91         call Guarda_coordenadas_X
 826+ 9108
 827+ 9108 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9109
 829+ 9109              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9109
 831+ 9109 06 03            ld b,3
 832+ 910B 21 FC 89         ld hl,Coordenadas_X_Amadeus
 833+ 910E 7E           18 ld a,(hl)
 834+ 910F BA               cp d
 835+ 9110 20 03            jr nz,17F
 836+ 9112
 837+ 9112              ; Colisión Amadeus !!!!!!!!!!
 838+ 9112
 839+ 9112 E1               pop hl
 840+ 9113 18 09            jr 14F
 841+ 9115
 842+ 9115 23           17 inc hl
 843+ 9116 10 F6            djnz 18B
 844+ 9118
 845+ 9118              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9118              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9118
 848+ 9118 E1           15 pop hl
 849+ 9119 23               inc hl
 850+ 911A 35               dec (hl)
 851+ 911B 2B               dec hl
 852+ 911C 18 0F            jr 10F
 853+ 911E
 854+ 911E              ; -----------------------debug
 855+ 911E
 856+ 911E              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 911E              ; _ almacén de coordenadas_X de Amadeus.
 858+ 911E
 859+ 911E E5           14 push hl
 860+ 911F CD C4 91         call Elimina_disparo_de_base_de_datos
 861+ 9122 21 F7 89         ld hl,Impacto2
 862+ 9125 CB CE            set 1,(hl)
 863+ 9127 CD 0E 92         call Limpia_Coordenadas_X
 864+ 912A
 865+ 912A E1               pop hl
 866+ 912B 18 06            jr 12F
 867+ 912D
 868+ 912D CD 71 91     10 call Mueve_disparo
 869+ 9130 CD 48 91         call foto_disparo_a_borrar
 870+ 9133 C1           12 pop bc
 871+ 9134
 872+ 9134 18 04            jr 8F
 873+ 9136
 874+ 9136              ; ----- ----- ----- ----- ----- -----
 875+ 9136
 876+ 9136 ED 42        4 sbc hl,bc
 877+ 9138 28 0A            jr z,6F
 878+ 913A
 879+ 913A 2A F3 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 913D 23               inc hl
 881+ 913E 23               inc hl
 882+ 913F 22 F3 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9142 18 8F            jr 5B
 884+ 9144
 885+ 9144 CD B9 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9147 C9               ret
 887+ 9148
 888+ 9148              ; ------------------------------------------------------------------
 889+ 9148
 890+ 9148              foto_disparo_a_borrar
 891+ 9148
 892+ 9148 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9149 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 914A C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 914B
 896+ 914B E5               push hl
 897+ 914C 23               inc hl
 898+ 914D 23               inc hl
 899+ 914E ED 73 EA 89      ld (Stack),sp
 900+ 9152 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9153 FD E1            pop iy
 902+ 9155 DD E1            pop ix
 903+ 9157 E1               pop hl
 904+ 9158 ED 7B EA 89      ld sp,(Stack)
 905+ 915C 3A D9 89         ld a,(Ctrl_1)
 906+ 915F CB C7            set 0,a
 907+ 9161 32 D9 89         ld (Ctrl_1),a
 908+ 9164 CD A0 7F         call Guarda_foto_registros
 909+ 9167 3A D9 89         ld a,(Ctrl_1)
 910+ 916A CB 87            res 0,a
 911+ 916C 32 D9 89         ld (Ctrl_1),a
 912+ 916F E1               pop hl
 913+ 9170 C9               ret
 914+ 9171
 915+ 9171 E5           Mueve_disparo push hl
 916+ 9172 7E               ld a,(hl)
 917+ 9173 06 04            ld b,4
 918+ 9175 23           1 inc hl
 919+ 9176 10 FD            djnz 1B
 920+ 9178
 921+ 9178              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9178
 923+ 9178 CD F7 8C         call Extrae_address
 924+ 917B
 925+ 917B E6 01            and 1
 926+ 917D 28 2B            jr z,2F
 927+ 917F
 928+ 917F              ; Disparo hacia arriba, (Amadeus).
 929+ 917F
 930+ 917F              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 917F              ; _ de la dificultad.
 932+ 917F
 933+ 917F CD F1 95         call PreviousScan
 934+ 9182 CD F1 95         call PreviousScan
 935+ 9185 CD F1 95         call PreviousScan
 936+ 9188
 937+ 9188              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9188
 939+ 9188 7C               ld a,h
 940+ 9189 FE 40            cp $40
 941+ 918B 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 918D
 943+ 918D              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 918D
 945+ 918D EB               ex de,hl
 946+ 918E 06 04            ld b,4
 947+ 9190 2B           6 dec hl
 948+ 9191 10 FD            djnz 6B
 949+ 9193
 950+ 9193 CD C4 91         call Elimina_disparo_de_base_de_datos
 951+ 9196 E1               pop hl
 952+ 9197 18 10            jr 7F
 953+ 9199
 954+ 9199              ; Se ha desplazado la bala, compruebo colisión.
 955+ 9199
 956+ 9199 D5           3 push de
 957+ 919A C5               push bc
 958+ 919B
 959+ 919B CD 7E 8F         call Comprueba_Colision
 960+ 919E
 961+ 919E              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 919E
 963+ 919E 78               ld a,b
 964+ 919F
 965+ 919F C1               pop bc
 966+ 91A0 D1               pop de
 967+ 91A1
 968+ 91A1 EB               ex de,hl
 969+ 91A2
 970+ 91A2 73               ld (hl),e
 971+ 91A3 23               inc hl
 972+ 91A4 72               ld (hl),d
 973+ 91A5
 974+ 91A5 E1           4 pop hl
 975+ 91A6 23               inc hl
 976+ 91A7 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 91A8 2B               dec hl
 978+ 91A9 C9           7 ret
 979+ 91AA
 980+ 91AA              ; Disparo hacia abajo, (Entidad).
 981+ 91AA
 982+ 91AA              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 91AA              ; _ de la dificultad.
 984+ 91AA
 985+ 91AA CD E2 95     2 call NextScan
 986+ 91AD CD E2 95         call NextScan
 987+ 91B0 CD E2 95         call NextScan
 988+ 91B3
 989+ 91B3              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 91B3
 991+ 91B3 7C               ld a,h
 992+ 91B4 FE 58            cp $58
 993+ 91B6 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 91B8
 995+ 91B8 EB               ex de,hl
 996+ 91B9 06 04            ld b,4
 997+ 91BB 2B           5 dec hl
 998+ 91BC 10 FD            djnz 5B
 999+ 91BE
1000+ 91BE CD C4 91         call Elimina_disparo_de_base_de_datos
1001+ 91C1 E1               pop hl
1002+ 91C2 18 E5            jr 7B
1003+ 91C4
1004+ 91C4              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 91C4
1006+ 91C4 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 91C7 AF               xor a
1008+ 91C8 77               ld (hl),a
1009+ 91C9 54               ld d,h
1010+ 91CA 5D               ld e,l
1011+ 91CB 13               inc de
1012+ 91CC ED B0            ldir
1013+ 91CE C9               ret
1014+ 91CF
1015+ 91CF              ; -----------------------------------------------------------------
1016+ 91CF              ;
1017+ 91CF              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 91CF              ;
1019+ 91CF              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 91CF              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 91CF              ;
1022+ 91CF              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 91CF              ;
1024+ 91CF              ;   INPUTS:
1025+ 91CF              ;
1026+ 91CF              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 91CF              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 91CF              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 91CF
1030+ 91CF              ;   MODIFICA: A, HL, DE y C
1031+ 91CF
1032+ 91CF 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 91D0 79               ld a,c
1034+ 91D1 E6 01            and 1
1035+ 91D3 20 03            jr nz,1F
1036+ 91D5 14               inc d
1037+ 91D6 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 91D8
1039+ 91D8              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 91D8              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 91D8
1042+ 91D8 15           1 dec d
1043+ 91D9 23           2 inc hl
1044+ 91DA 72               ld (hl),d
1045+ 91DB
1046+ 91DB 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 91DC A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 91DD C8               ret z
1049+ 91DE
1050+ 91DE AF               xor a
1051+ 91DF 5F               ld e,a
1052+ 91E0 18 ED            jr Guarda_coordenadas_X
1053+ 91E2
1054+ 91E2              ; -----------------------------------------------------------------
1055+ 91E2              ;
1056+ 91E2              ;   12/04/23
1057+ 91E2              ;
1058+ 91E2
1059+ 91E2 3A F7 89     Selector_de_impactos ld a,(Impacto2)
1060+ 91E5 A7               and a
1061+ 91E6 C8               ret z
1062+ 91E7
1063+ 91E7 FE 04            cp 4
1064+ 91E9 20 09            jr nz,1F
1065+ 91EB
1066+ 91EB
1067+ 91EB              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 91EB
1069+ 91EB CD 0F 90         call Detecta_colision_nave_entidad
1070+ 91EE
1071+ 91EE 21 F7 89         ld hl,Impacto2
1072+ 91F1 CB 5E            bit 3,(hl)
1073+ 91F3 C0               ret nz                                               ; Existe colisión, RET.
1074+ 91F4
1075+ 91F4              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91F4              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91F4
1078+ 91F4 21 F7 89     1 ld hl,Impacto2
1079+ 91F7 CB 4E            bit 1,(hl)
1080+ 91F9 28 07            jr z,2F
1081+ 91FB
1082+ 91FB 21 95 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 91FE 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 9200 18 0B            jr 3F
1085+ 9202
1086+ 9202 21 F7 89     2 ld hl,Impacto2
1087+ 9205 CB 46            bit 0,(hl)
1088+ 9207 C8               ret z
1089+ 9208
1090+ 9208              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 9208
1092+ 9208 21 D9 89         ld hl,Ctrl_1
1093+ 920B CB D6            set 2,(hl)
1094+ 920D
1095+ 920D C9           3 ret
1096+ 920E
1097+ 920E              ; -----------------------------------------------------------------
1098+ 920E              ;
1099+ 920E              ;   16/04/23
1100+ 920E              ;
1101+ 920E
1102+ 920E AF           Limpia_Coordenadas_X xor a
1103+ 920F 06 06            ld b,6
1104+ 9211 21 FC 89         ld hl,Coordenadas_X_Amadeus
1105+ 9214 77           1 ld (hl),a
1106+ 9215 23               inc hl
1107+ 9216 10 FC            djnz 1B
1108+ 9218 C9               ret
1109+ 9219
1110+ 9219              ; -----------------------------------------------------------------
1111+ 9219              ;
1112+ 9219              ;   25/04/23
1113+ 9219              ;
1114+ 9219
1115+ 9219              Determina_resultado_comparativa
1116+ 9219
1117+ 9219              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 9219              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 9219              ;
1120+ 9219              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 9219              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 9219              ;
1123+ 9219              ;   SBC HL,DE
1124+ 9219
1125+ 9219              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1126+ 9219              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1127+ 9219
1128+ 9219              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1129+ 9219              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1130+ 9219
1131+ 9219
1132+ 9219 3A AF 89         ld a,(Cuad_objeto)
1133+ 921C FE 02            cp 2
1134+ 921E 28 26            jr z,2F
1135+ 9220 38 24            jr c,2F
1136+ 9222
1137+ 9222              ; Cuadrantes 3º y 4º
1138+ 9222
1139+ 9222 E6 01            and 1
1140+ 9224 28 10            jr z,4F
1141+ 9226
1142+ 9226              ; Cuadrante 3º
1143+ 9226
1144+ 9226 7C               ld a,h
1145+ 9227 06 00            ld b,0
1146+ 9229
1147+ 9229 CD B4 92         call Compara_cositas_H3
1148+ 922C
1149+ 922C 04               inc b
1150+ 922D 05               dec b
1151+ 922E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1152+ 922F
1153+ 922F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1154+ 9230 06 00            ld b,0
1155+ 9232
1156+ 9232 CD C6 92         call Compara_cositas_L3
1157+ 9235 C9               ret
1158+ 9236
1159+ 9236              ; Cuadrante 4º
1160+ 9236
1161+ 9236 7C           4 ld a,h
1162+ 9237 06 00            ld b,0
1163+ 9239
1164+ 9239 CD D8 92         call Compara_cositas_H4
1165+ 923C
1166+ 923C 04               inc b
1167+ 923D 05               dec b
1168+ 923E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1169+ 923F
1170+ 923F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1171+ 9240 06 00            ld b,0
1172+ 9242
1173+ 9242 CD EA 92         call Compara_cositas_L4
1174+ 9245 C9               ret
1175+ 9246
1176+ 9246              ; Cuadrantes 1º y 2º.
1177+ 9246
1178+ 9246 28 10        2 jr z,3F
1179+ 9248
1180+ 9248              ; 1er Cuadrante
1181+ 9248
1182+ 9248 7C               ld a,h
1183+ 9249 06 00            ld b,0
1184+ 924B
1185+ 924B CD 8C 92         call Compara_cositas_H1
1186+ 924E
1187+ 924E 04               inc b
1188+ 924F 05               dec b
1189+ 9250 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1190+ 9251
1191+ 9251 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1192+ 9252 06 00            ld b,0
1193+ 9254
1194+ 9254 CD A2 92         call Compara_cositas_L1
1195+ 9257 C9               ret
1196+ 9258
1197+ 9258
1198+ 9258              ; 2º Cuadrante
1199+ 9258
1200+ 9258 7C           3 ld a,h
1201+ 9259 06 00            ld b,0
1202+ 925B
1203+ 925B CD 68 92         call Compara_cositas_H2
1204+ 925E
1205+ 925E 04               inc b
1206+ 925F 05               dec b
1207+ 9260 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1208+ 9261
1209+ 9261 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1210+ 9262 06 00            ld b,0
1211+ 9264
1212+ 9264 CD 7A 92         call Compara_cositas_L2
1213+ 9267 C9               ret
1214+ 9268
1215+ 9268 A7           Compara_cositas_H2 and a
1216+ 9269 28 0D            jr z,1F
1217+ 926B              ;    cp $fd
1218+ 926B              ;    jr z,1F
1219+ 926B              ;    cp $fe
1220+ 926B              ;    jr z,1F
1221+ 926B FE FF            cp $ff
1222+ 926D 28 09            jr z,1F
1223+ 926F FE 01            cp $01
1224+ 9271 28 05            jr z,1F
1225+ 9273 FE 02            cp $02
1226+ 9275 28 01            jr z,1F
1227+ 9277 C0               ret nz
1228+ 9278 04           1 inc b
1229+ 9279 C9               ret
1230+ 927A
1231+ 927A A7           Compara_cositas_L2 and a
1232+ 927B 28 0D            jr z,1F
1233+ 927D              ;    cp $fd
1234+ 927D              ;    jr z,1F
1235+ 927D FE FE            cp $fe
1236+ 927F 28 09            jr z,1F
1237+ 9281 FE FF            cp $ff
1238+ 9283 28 05            jr z,1F
1239+ 9285 FE 01            cp $01
1240+ 9287 28 01            jr z,1F
1241+ 9289              ;    cp $02
1242+ 9289              ;    jr z,1F
1243+ 9289 C0               ret nz
1244+ 928A 04           1 inc b
1245+ 928B C9               ret
1246+ 928C
1247+ 928C A7           Compara_cositas_H1 and a
1248+ 928D 28 11            jr z,1F
1249+ 928F              ;    cp $fd
1250+ 928F              ;    jr z,1F
1251+ 928F              ;    cp $fe
1252+ 928F              ;    jr z,1F
1253+ 928F FE FF            cp $ff
1254+ 9291 28 0D            jr z,1F
1255+ 9293 FE 01            cp $01
1256+ 9295 28 09            jr z,1F
1257+ 9297 FE 02            cp $02
1258+ 9299 28 05            jr z,1F
1259+ 929B FE 03            cp $03
1260+ 929D 28 01            jr z,1F
1261+ 929F C0               ret nz
1262+ 92A0 04           1 inc b
1263+ 92A1 C9               ret
1264+ 92A2
1265+ 92A2 A7           Compara_cositas_L1 and a
1266+ 92A3 28 0D            jr z,1F
1267+ 92A5              ;    cp $fd
1268+ 92A5              ;    jr z,1F
1269+ 92A5              ;    cp $fe
1270+ 92A5              ;    jr z,1F
1271+ 92A5              ;    cp $ff
1272+ 92A5              ;    jr z,1F
1273+ 92A5 FE 01            cp $01
1274+ 92A7 28 09            jr z,1F
1275+ 92A9 FE 02            cp $02
1276+ 92AB 28 05            jr z,1F
1277+ 92AD FE 03            cp $03
1278+ 92AF 28 01            jr z,1F
1279+ 92B1 C0               ret nz
1280+ 92B2 04           1 inc b
1281+ 92B3 C9               ret
1282+ 92B4
1283+ 92B4 A7           Compara_cositas_H3 and a
1284+ 92B5 28 0D            jr z,1F
1285+ 92B7              ;    cp $fd
1286+ 92B7              ;    jr z,1F
1287+ 92B7 FE FE            cp $fe
1288+ 92B9 28 09            jr z,1F
1289+ 92BB FE FF            cp $ff
1290+ 92BD 28 05            jr z,1F
1291+ 92BF FE 01            cp $01
1292+ 92C1 28 01            jr z,1F
1293+ 92C3              ;    cp $02
1294+ 92C3              ;    jr z,1F
1295+ 92C3              ;    cp $03
1296+ 92C3              ;    jr z,1F
1297+ 92C3 C0               ret nz
1298+ 92C4 04           1 inc b
1299+ 92C5 C9               ret
1300+ 92C6
1301+ 92C6 A7           Compara_cositas_L3 and a
1302+ 92C7 28 0D            jr z,1F
1303+ 92C9              ;    cp $fd
1304+ 92C9              ;    jr z,1F
1305+ 92C9              ;    cp $fe
1306+ 92C9              ;    jr z,1F
1307+ 92C9              ;    cp $ff
1308+ 92C9              ;    jr z,1F
1309+ 92C9 FE 01            cp $01
1310+ 92CB 28 09            jr z,1F
1311+ 92CD FE 02            cp $02
1312+ 92CF 28 05            jr z,1F
1313+ 92D1 FE 03            cp $03
1314+ 92D3 28 01            jr z,1F
1315+ 92D5 C0               ret nz
1316+ 92D6 04           1 inc b
1317+ 92D7 C9               ret
1318+ 92D8
1319+ 92D8 A7           Compara_cositas_H4 and a
1320+ 92D9 28 0D            jr z,1F
1321+ 92DB FE FD            cp $fd
1322+ 92DD 28 09            jr z,1F
1323+ 92DF FE FE            cp $fe
1324+ 92E1 28 05            jr z,1F
1325+ 92E3 FE FF            cp $ff
1326+ 92E5 28 01            jr z,1F
1327+ 92E7              ;    cp $01
1328+ 92E7              ;    jr z,1F
1329+ 92E7              ;    cp $02
1330+ 92E7              ;    jr z,1F
1331+ 92E7              ;    cp $03
1332+ 92E7              ;    jr z,1F
1333+ 92E7 C0               ret nz
1334+ 92E8 04           1 inc b
1335+ 92E9 C9               ret
1336+ 92EA
1337+ 92EA A7           Compara_cositas_L4 and a
1338+ 92EB 28 0D            jr z,1F
1339+ 92ED              ;    cp $fd
1340+ 92ED              ;    jr z,1F
1341+ 92ED FE FE            cp $fe
1342+ 92EF 28 09            jr z,1F
1343+ 92F1 FE FF            cp $ff
1344+ 92F3 28 05            jr z,1F
1345+ 92F5 FE 01            cp $01
1346+ 92F7 28 01            jr z,1F
1347+ 92F9              ;    cp $02
1348+ 92F9              ;    jr z,1F
1349+ 92F9              ;    cp $03
1350+ 92F9              ;    jr z,1F
1351+ 92F9 C0               ret nz
1352+ 92FA 04           1 inc b
1353+ 92FB C9               ret
# file closed: Disparo.asm
1239  92FC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92FC              ; ******************************************************************************************************************************************************************************************
   2+ 92FC              ;
   3+ 92FC              ; 01/23
   4+ 92FC              ;
   5+ 92FC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92FC
   7+ 92FC CD D6 95     Draw call Prepara_draw
   8+ 92FF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9300 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9301 28 05        	jr z,2F
  11+ 9303
  12+ 9303 3A AF 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9306 18 0C        	jr 1F
  14+ 9308 2A AD 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 930B 22 9D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 930E CD 9D 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9311              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9311 CD 5C 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9314 3A C9 89     1 ld a,(Ctrl_0)
  20+ 9317 CB 6F        	bit 5,a
  21+ 9319 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 931B
  23+ 931B CD 33 93     	call Comprueba_limite_horizontal
  24+ 931E CD C3 93     	call Comprueba_limite_vertical
  25+ 9321
  26+ 9321              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9321
  28+ 9321 CD 10 95     3 call calcula_CColumnass
  29+ 9324 CD 47 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9327 CD 9C 95     	call Define_rutina_de_impresion
  31+ 932A
  32+ 932A 3A C9 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 932D CB AF        	res 5,a											; _a ser de utilidad.
  34+ 932F 32 C9 89     	ld (Ctrl_0),a
  35+ 9332
  36+ 9332 C9           	ret
  37+ 9333
  38+ 9333              ; *******************************************************************************************************************************************************************************************
  39+ 9333              ;	21/01/23
  40+ 9333              ;
  41+ 9333              ; 	Comprueba_limite_horizontal.
  42+ 9333              ;
  43+ 9333              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9333              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9333              ;
  46+ 9333              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9333              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9333              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9333              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9333
  51+ 9333
  52+ 9333
  53+ 9333 3A C9 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9336 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9338 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 933A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 933C 32 C9 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 933F 18 09            jr 6F
  59+ 9341 CB 5F        1 bit 3,a
  60+ 9343 28 0A            jr z,2F
  61+ 9345 E6 F7            and $f7
  62+ 9347 32 C9 89         ld (Ctrl_0),a
  63+ 934A CD 9D 94     6 call Inicializacion
  64+ 934D 18 5B            jr 5F
  65+ 934F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9350
  67+ 9350              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9350              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9350
  70+ 9350 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9351 2A D4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9354 CD A2 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9357 67           	ld h,a
  74+ 9358 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9359 CD A2 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 935C 67           	ld h,a
  77+ 935D A7           	and a
  78+ 935E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9360 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9361 3A AF 89     	ld a,(Cuad_objeto)
  81+ 9364 FE 02        	cp 2
  82+ 9366 38 1E        	jr c,3F
  83+ 9368 28 1C        	jr z,3F
  84+ 936A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 936B 28 23            jr z,7F
  86+ 936D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 936F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9371 E1           	pop hl
  89+ 9372
  90+ 9372              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9372              ; _para indicar con E="2" en caso necesario.
  92+ 9372
  93+ 9372 E5               push hl
  94+ 9373 C5               push bc
  95+ 9374 CD A2 98     	call calcula_tercio
  96+ 9377 FE 01        	cp 1
  97+ 9379 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 937B CD AB 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 937E 28 26            jr z,9F
 100+ 9380 38 24            jr c,9F
 101+ 9382 1E 00        11 ld e,0
 102+ 9384 18 22            jr 8F
 103+ 9386 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 9387 28 07        	jr z, 7F
 105+ 9389 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 938B 1E 00         	ld e,0
 107+ 938D E1           	pop hl
 108+ 938E 18 04        	jr 4F
 109+ 9390 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9392 18 15            jr 10F
 111+ 9394
 112+ 9394              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9394              ; _para indicar con E="2" en caso necesario.
 114+ 9394
 115+ 9394 E5           4 push hl
 116+ 9395 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9396 CD A2 98     	call calcula_tercio
 118+ 9399 FE 01        	cp 1
 119+ 939B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 939D CD AB 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93A0 28 04            jr z,9F
 122+ 93A2 30 02            jr nc,9F
 123+ 93A4 18 02        	jr 8F
 124+ 93A6 1E 02        9 ld e,2
 125+ 93A8 C1           8 pop bc
 126+ 93A9 E1           10 pop hl
 127+ 93AA C9           5 ret
 128+ 93AB
 129+ 93AB              ; --------------------
 130+ 93AB              ;
 131+ 93AB              ; 25/08/22
 132+ 93AB
 133+ 93AB CD A2 98     Comprueba_centro call calcula_tercio
 134+ 93AE 67               ld h,a
 135+ 93AF 08           	ex af,af
 136+ 93B0 FE 02        	cp 2
 137+ 93B2 38 07        	jr c,1F
 138+ 93B4 28 05        	jr z,1F
 139+ 93B6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93B9 18 03        	jr 2F
 141+ 93BB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93BE 08           2 ex af,af
 143+ 93BF A7               and a
 144+ 93C0 ED 42            sbc hl,bc
 145+ 93C2 C9               ret
 146+ 93C3
 147+ 93C3              ; *********************************************************************************************************************************************************************************************
 148+ 93C3              ;
 149+ 93C3              ;   16/8/22
 150+ 93C3              ;
 151+ 93C3              ;	Comprueba_limite_vertical
 152+ 93C3              ;
 153+ 93C3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93C3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93C3              ;
 156+ 93C3
 157+ 93C3 2A 9D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93C6 7D           	ld a,l
 159+ 93C7 E6 1F        	and $1F
 160+ 93C9 57           	ld d,a
 161+ 93CA 3A D6 89     	ld a,(Limite_vertical)
 162+ 93CD BA           	cp d 											; Límite - Posición.
 163+ 93CE 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93CF 3A AF 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93D2 CB 47        	bit 0,a
 166+ 93D4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93D6
 168+ 93D6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93D6
 170+ 93D6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93D7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 93D9
 173+ 93D9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 93D9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 93D9
 176+ 93D9 3A A1 89         ld a,(Coordenada_X)
 177+ 93DC 16 0F            ld d,Centro_izquierda
 178+ 93DE A7               and a
 179+ 93DF 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 93E0 28 1E            jr z,3F
 181+ 93E2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 93E4              ;                                                    ; _salimos sin modificar nada.
 183+ 93E4 18 0E            jr 2F
 184+ 93E6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 93E7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 93E9
 187+ 93E9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 93E9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 93E9
 190+ 93E9 3A A1 89         ld a,(Coordenada_X)
 191+ 93EC 16 10            ld d,Centro_derecha
 192+ 93EE A7               and a
 193+ 93EF 92               sub d
 194+ 93F0 28 0E            jr z,3F
 195+ 93F2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 93F4              ;                                                    ; _salimos sin modificar nada.
 197+ 93F4 CB 43        2 bit 0,e
 198+ 93F6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 93F8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 93F9 CD 8D 94         call Modificaccionne
 201+ 93FC C1           	pop bc
 202+ 93FD CD 9D 94         call Inicializacion
 203+ 9400 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9401
 205+ 9401              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9401
 207+ 9401 C5           4 push bc
 208+ 9402 01 9C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9405 0A           	ld a,(bc)
 210+ 9406 3D           	dec a
 211+ 9407 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9408 7D           	ld a,l
 213+ 9409 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 940A CB 47        	bit 0,a
 215+ 940C 28 03        	jr z,5F
 216+ 940E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 940F 18 2E        	jr 7F
 218+ 9411
 219+ 9411              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9411
 221+ 9411 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9412 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9413 3A C9 89     	ld a,(Ctrl_0)
 224+ 9416 CB 4F        	bit 1,a
 225+ 9418 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 941A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 941B
 228+ 941B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 941B
 230+ 941B 1C               inc e
 231+ 941C 1D               dec e
 232+ 941D 20 07            jr nz,12F
 233+ 941F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9420 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9421 22 9D 89     	ld (Posicion_actual),hl
 236+ 9424 18 44        13 jr 9F
 237+ 9426 CB 43        12 bit 0,e
 238+ 9428 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 942A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 942A C1           	pop bc
 241+ 942B 18 D3        	jr 3B
 242+ 942D 80           14 add b
 243+ 942E 6F               ld l,a
 244+ 942F 22 9D 89     	ld (Posicion_actual),hl
 245+ 9432 CD 8D 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9435 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9437 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9439 32 C9 89         ld (Ctrl_0),a
 249+ 943C F1           	pop af
 250+ 943D 18 2B        	jr 9F
 251+ 943F
 252+ 943F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 943F
 254+ 943F F5           7 push af
 255+ 9440 3A C9 89     	ld a,(Ctrl_0)
 256+ 9443 CB 47        	bit 0,a
 257+ 9445 20 1D        	jr nz,8F
 258+ 9447 F1           	pop af
 259+ 9448
 260+ 9448              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9448
 262+ 9448 1C           	inc e
 263+ 9449 1D               dec e
 264+ 944A 20 07            jr nz,10F
 265+ 944C 90           	sub b
 266+ 944D 6F               ld l,a
 267+ 944E 22 9D 89     	ld (Posicion_actual),hl
 268+ 9451 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9453              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9453 CB 43        10 bit 0,e
 271+ 9455 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9457              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9457 C1           	pop bc
 274+ 9458 18 A6        	jr 3B
 275+ 945A 90           16 sub b
 276+ 945B 6F               ld l,a
 277+ 945C 22 9D 89     	ld (Posicion_actual),hl
 278+ 945F CD 8D 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9462 18 06            jr 9F
 280+ 9464 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9466 32 C9 89         ld (Ctrl_0),a
 282+ 9469 F1           	pop af
 283+ 946A C1           9 pop bc
 284+ 946B 1E 00        	ld e,0
 285+ 946D CD 9D 94         call Inicializacion
 286+ 9470 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9471 08           	ex af,af
 288+ 9472 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9473 18 8B            jr 3B
 290+ 9475
 291+ 9475              ; --------------------
 292+ 9475
 293+ 9475 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9477 CD F1 95     1 call PreviousScan
 295+ 947A 10 FB            djnz 1B
 296+ 947C 22 9D 89     	ld (Posicion_actual),hl
 297+ 947F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9480 C9           	ret
 299+ 9481
 300+ 9481              ; --------------------
 301+ 9481
 302+ 9481 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9483 CD E2 95     1 call NextScan
 304+ 9486 10 FB            djnz 1B
 305+ 9488 22 9D 89     	ld (Posicion_actual),hl
 306+ 948B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 948C C9           	ret
 308+ 948D
 309+ 948D              ; --------------------
 310+ 948D              ;
 311+ 948D              ;	22/01/23
 312+ 948D              ;
 313+ 948D              ;	E="1". Hemos cambiado de cuadrante.
 314+ 948D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 948D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 948D
 317+ 948D
 318+ 948D              Modificaccionne
 319+ 948D
 320+ 948D 3A AF 89     	ld a,(Cuad_objeto)
 321+ 9490 FE 02        	cp 2
 322+ 9492 CC 75 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9495 DC 75 94         call c,Modifica_Pos_actual
 324+ 9498 C8           	ret z
 325+ 9499 CD 81 94         call Modifica_Pos_actual2
 326+ 949C C9               ret
 327+ 949D
 328+ 949D              ; *************************************************************************************************************************************************************************************************
 329+ 949D              ;
 330+ 949D              ;	13/8/22
 331+ 949D              ;
 332+ 949D              ;	Inicializacion
 333+ 949D              ;
 334+ 949D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 949D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 949D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 949D              ;
 338+ 949D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 949D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 949D              ;	_ desaparece/aparece.
 341+ 949D
 342+ 949D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 949D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 949D              ;
 345+ 949D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 949D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 949D              ; 		   [E] ="0"
 348+ 949D
 349+ 949D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 949D
 351+ 949D CD A2 98     Inicializacion call calcula_tercio
 352+ 94A0 28 36        	jr z,primit
 353+ 94A2 E6 02        	and 2
 354+ 94A4 20 07        	jr nz,segmit
 355+ 94A6 7D           	ld a,l
 356+ 94A7 FE 7F        	cp $7f
 357+ 94A9 38 2D        	jr c,primit
 358+ 94AB 28 2B        	jr z,primit
 359+ 94AD CD 0A 95     segmit call column
 360+ 94B0 38 13        	jr c,tercuad
 361+ 94B2 3E 04        cuarcuad ld a,4
 362+ 94B4 32 AF 89     	ld (Cuad_objeto),a
 363+ 94B7 21 20 48     	ld hl,$4820
 364+ 94BA 22 D4 89     	ld (Limite_horizontal),hl
 365+ 94BD 21 D6 89     	ld hl,Limite_vertical
 366+ 94C0 36 0D        	ld (hl),$0d
 367+ 94C2 08           	ex af,af
 368+ 94C3 18 3C        	jr 1F
 369+ 94C5              tercuad
 370+ 94C5 3E 03        	ld a,3
 371+ 94C7 32 AF 89     	ld (Cuad_objeto),a
 372+ 94CA 21 20 48     	ld hl,$4820
 373+ 94CD 22 D4 89     	ld (Limite_horizontal),hl
 374+ 94D0 21 D6 89     	ld hl,Limite_vertical
 375+ 94D3 36 12        	ld (hl),$12
 376+ 94D5 08           	ex af,af
 377+ 94D6 18 29        	jr 1F
 378+ 94D8 CD 0A 95     primit call column
 379+ 94DB 38 13        	jr c, primcuad
 380+ 94DD              segcuad
 381+ 94DD 3E 02        	ld a,2
 382+ 94DF 32 AF 89     	ld (Cuad_objeto),a
 383+ 94E2 21 C0 4F     	ld hl,$4fc0
 384+ 94E5 22 D4 89     	ld (Limite_horizontal),hl
 385+ 94E8 21 D6 89     	ld hl,Limite_vertical
 386+ 94EB 36 0D        	ld (hl),$0d
 387+ 94ED 08           	ex af,af
 388+ 94EE 18 11        	jr 1F
 389+ 94F0              primcuad
 390+ 94F0 3E 01        	ld a,1
 391+ 94F2 32 AF 89     	ld (Cuad_objeto),a
 392+ 94F5 21 C0 4F     	ld hl,$4fc0
 393+ 94F8 22 D4 89     	ld (Limite_horizontal),hl
 394+ 94FB 21 D6 89     	ld hl,Limite_vertical
 395+ 94FE 36 12        	ld (hl),$12
 396+ 9500 08           	ex af,af
 397+ 9501 CD 0E 9C     1 call Genera_coordenadas
 398+ 9504 21 C9 89     	ld hl,Ctrl_0
 399+ 9507 CB EE        	set 5,(hl)
 400+ 9509 C9           	ret
 401+ 950A
 402+ 950A              ; ------------------------------------------------------------------------------------------------------------------
 403+ 950A
 404+ 950A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 950A              ;
 406+ 950A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 950A
 408+ 950A 7D           column ld a,l
 409+ 950B E6 1F        	and $1f
 410+ 950D FE 10         	cp $10
 411+ 950F C9            	ret
 412+ 9510
 413+ 9510              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9510              ;
 415+ 9510              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9510              ;
 417+ 9510              ; 14/12/22
 418+ 9510              ;
 419+ 9510              ;	Modifica: A y BC.
 420+ 9510
 421+ 9510 3A AF 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9513 E6 01        	and 1
 423+ 9515 28 17        	jr z,1F
 424+ 9517
 425+ 9517              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9517
 427+ 9517 3A A1 89     	ld a,(Coordenada_X)
 428+ 951A 47           	ld b,a
 429+ 951B 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 951C 79           	ld a,c
 431+ 951D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 951E 38 08        	jr c,2F
 433+ 9520 47           	ld b,a
 434+ 9521 79           	ld a,c
 435+ 9522 90           	sub b
 436+ 9523 32 D3 89     	ld (Columnas),a
 437+ 9526 18 1B        	jr 4F
 438+ 9528 79           2 ld a,c
 439+ 9529 32 D3 89     	ld (Columnas),a
 440+ 952C 18 15        	jr 4F
 441+ 952E
 442+ 952E              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 952E
 444+ 952E 3A A1 89     1 ld a,(Coordenada_X)
 445+ 9531 81           	add c
 446+ 9532 3D           	dec a
 447+ 9533 D6 1F        	sub $1f
 448+ 9535 38 08        	jr c,3F
 449+ 9537 47           	ld b,a
 450+ 9538 79           	ld a,c
 451+ 9539 90           	sub b
 452+ 953A 32 D3 89     	ld (Columnas),a
 453+ 953D 18 04        	jr 4F
 454+ 953F 79           3 ld a,c
 455+ 9540 32 D3 89     	ld (Columnas),a
 456+ 9543 D9           4 exx
 457+ 9544 4F           	ld c,a
 458+ 9545 D9           	exx
 459+ 9546 C9            ret
 460+ 9547
 461+ 9547              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9547              ;
 463+ 9547              ; 7/1/23
 464+ 9547              ;
 465+ 9547              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9547              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9547              ;
 468+ 9547              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9547              ;	DESTRUYE: HL,B Y A.
 470+ 9547
 471+ 9547 3A AF 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 954A FE 02        	cp 2
 473+ 954C 38 18        	jr c,1F
 474+ 954E 28 16        	jr z,1F
 475+ 9550 E6 01        	and 1
 476+ 9552 28 0D        	jr z,3F
 477+ 9554
 478+ 9554              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9554
 480+ 9554 CD 90 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9557
 482+ 9557 7D           9 ld a,l
 483+ 9558 E6 1F        	and $1f
 484+ 955A 28 2A        	jr z,7F
 485+ 955C 2B           	dec hl
 486+ 955D 10 F8        	djnz 9B
 487+ 955F 18 25        	jr 7F
 488+ 9561
 489+ 9561              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9561
 491+ 9561 2A 9D 89     3 ld hl,(Posicion_actual)
 492+ 9564 18 20        	jr 7F
 493+ 9566
 494+ 9566 28 14        1 jr z,2F
 495+ 9568
 496+ 9568              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9568
 498+ 9568 CD 90 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 956B
 500+ 956B 7D           4 ld a,l
 501+ 956C E6 1F        	and $1f
 502+ 956E 28 03        	jr z,6F
 503+ 9570 2B           	dec hl
 504+ 9571 10 F8        	djnz 4B
 505+ 9573 06 0F        6 ld b,15
 506+ 9575 CD F1 95     5 call PreviousScan
 507+ 9578 10 FB        	djnz 5B
 508+ 957A 18 0A        	jr 7F
 509+ 957C
 510+ 957C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 957C
 512+ 957C CD 90 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 957F 06 0F        	ld b,15
 514+ 9581 CD F1 95     8 call PreviousScan
 515+ 9584 10 FB        	djnz 8B
 516+ 9586
 517+ 9586 E5           7 push hl
 518+ 9587 DD E1        	pop ix
 519+ 9589
 520+ 9589 2A 9F 89     	ld hl,(Puntero_objeto)
 521+ 958C E5           	push hl
 522+ 958D FD E1        	pop iy
 523+ 958F
 524+ 958F C9           	ret
 525+ 9590
 526+ 9590              ; --------------------------------------------------------------------------------------------------------------------
 527+ 9590              ;
 528+ 9590              ;	2/1/23
 529+ 9590              ;
 530+ 9590              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 9590              ;
 532+ 9590              ;	Tras esta rutina tenemos:
 533+ 9590              ;
 534+ 9590              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 9590              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 9590              ;
 537+ 9590              ;	DESTRUYE!!!!! HL,B y A.
 538+ 9590
 539+ 9590 2A 9D 89     Operandos ld hl,(Posicion_actual)
 540+ 9593 3A D3 89     	ld a,(Columnas)
 541+ 9596 3D           	dec a
 542+ 9597 20 01        	jr nz,1F
 543+ 9599 3C           	inc a
 544+ 959A 47           1 ld b,a
 545+ 959B C9           	ret
 546+ 959C
 547+ 959C              ; --------------------------------------------------------------------------------------------------------------------
 548+ 959C              ;
 549+ 959C              ;	3/1/23
 550+ 959C              ;
 551+ 959C              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 959C              ;
 553+ 959C              ;	Destruye: A,B,HL y DE.
 554+ 959C
 555+ 959C              Define_rutina_de_impresion
 556+ 959C
 557+ 959C 3A 9C 89     	ld a,(Columns)
 558+ 959F 47           	ld b,a
 559+ 95A0 3A D3 89     	ld a,(Columnas)
 560+ 95A3 B8           	cp b
 561+ 95A4 20 0D        	jr nz,2f
 562+ 95A6
 563+ 95A6              ;	La entidad se imprime entera.
 564+ 95A6
 565+ 95A6 21 72 96     	ld hl, Indice_entidades_completas
 566+ 95A9 E6 01        	and 1
 567+ 95AB 28 02        	jr z,1F
 568+ 95AD
 569+ 95AD 23           	inc hl
 570+ 95AE 23           	inc hl
 571+ 95AF
 572+ 95AF CD F7 8C     1 call Extrae_address
 573+ 95B2 C9           	ret		;	ret
 574+ 95B3
 575+ 95B3              ;	La entidad no se imprime entera en pantalla.
 576+ 95B3
 577+ 95B3 3A AF 89     2 ld a,(Cuad_objeto)
 578+ 95B6 E6 01        	and 1
 579+ 95B8 28 17        	jr z,3F
 580+ 95BA
 581+ 95BA              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95BA
 583+ 95BA 21 76 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95BD 3A 9C 89     4 ld a,(Columns)
 585+ 95C0 E6 01        	and 1
 586+ 95C2 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95C4
 588+ 95C4 23           	inc hl
 589+ 95C5 23           	inc hl
 590+ 95C6
 591+ 95C6 3A D3 89     	ld a,(Columnas)
 592+ 95C9 E6 01        	and 1
 593+ 95CB 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95CD
 595+ 95CD 23           	inc hl
 596+ 95CE 23           	inc hl
 597+ 95CF
 598+ 95CF 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95D1
 600+ 95D1 21 7C 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95D4 18 E7        	jr 4B
 602+ 95D6
 603+ 95D6              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95D6              ;
 605+ 95D6              ;	Prepara_draw
 606+ 95D6              ;
 607+ 95D6              ;	Es una rutina de carga.
 608+ 95D6              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95D6              ;
 610+ 95D6              ;	FUNCIONAMIENTO:
 611+ 95D6              ;
 612+ 95D6              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95D6              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95D6              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95D6              ;
 616+ 95D6              ;	DESTRUYE:
 617+ 95D6              ;
 618+ 95D6              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95D6
 620+ 95D6 21 9B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 95D9 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 95DA 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 95DB 4E           	ld c,(hl)
 624+ 95DC 2A 9D 89     	ld hl,(Posicion_actual)
 625+ 95DF 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 95E1 C9           	ret
 627+ 95E2
 628+ 95E2              ;----------------------------------------------------------------------------------------------------------------
 629+ 95E2              ;
 630+ 95E2              ;	5/08/22
 631+ 95E2              ;
 632+ 95E2              ;   NextScan.
 633+ 95E2              ;
 634+ 95E2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 95E2              ;
 636+ 95E2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 95E2              ;
 638+ 95E2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 95E2              ;
 640+ 95E2              ;       DESTRUIDOS: AF y HL !!!
 641+ 95E2              ;
 642+ 95E2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 95E2              ;
 644+ 95E2
 645+ 95E2 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 95E3 7C               ld a,h
 647+ 95E4 E6 07            and 7
 648+ 95E6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 95E7
 650+ 95E7 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 95E8 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 95EA 6F               ld l,a
 653+ 95EB D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 95EC
 655+ 95EC 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 95ED D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 95EF 67               ld h,a
 658+ 95F0 C9               ret
 659+ 95F1
 660+ 95F1              ;----------------------------------------------------------------------------------------------------------------
 661+ 95F1              ;
 662+ 95F1              ;	5/08/22
 663+ 95F1              ;
 664+ 95F1              ;   PreviousScan.
 665+ 95F1              ;
 666+ 95F1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 95F1              ;
 668+ 95F1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 95F1              ;
 670+ 95F1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 95F1              ;
 672+ 95F1              ;       DESTRUIDOS: AF y HL !!!
 673+ 95F1              ;
 674+ 95F1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 95F1              ;
 676+ 95F1
 677+ 95F1 7C           PreviousScan ld a,h
 678+ 95F2 25               dec h               ; Dec H.
 679+ 95F3 E6 07            and 7
 680+ 95F5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 95F6
 682+ 95F6 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 95F7 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 95F9 6F               ld l,a
 685+ 95FA D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 95FB
 687+ 95FB 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 95FC C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 95FE 67               ld h,a
 690+ 95FF C9               ret
 691+ 9600
 692+ 9600              ; -----------------------------------------------------------------------------------
 693+ 9600              ;
 694+ 9600              ;	28/2/23
 695+ 9600              ;
 696+ 9600              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9600              ;	Extrae fotos de Album_de_fotos.
 698+ 9600
 699+ 9600 3A E5 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 9603 A7           	and a
 701+ 9604 C8           	ret z
 702+ 9605 ED 73 EA 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9609 31 00 70     	ld sp,Album_de_fotos
 704+ 960C
 705+ 960C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 960E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 960F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9610
 709+ 9610 ED 73 EC 89  	ld (Stack_2),sp
 710+ 9614 ED 7B EA 89  	ld sp,(Stack)
 711+ 9618
 712+ 9618              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9618
 714+ 9618 3E CD        	ld a,$cd
 715+ 961A 32 22 96     	ld (Imprime),a
 716+ 961D EB           	ex de,hl
 717+ 961E 22 23 96     	ld (Imprime+1),hl
 718+ 9621 EB           	ex de,hl
 719+ 9622
 720+ 9622              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9622
 722+ 9622 00 00 00     Imprime db 0,0,0
 723+ 9625
 724+ 9625 3A E5 89     	ld a,(Numero_de_malotes)
 725+ 9628 3D           	dec a
 726+ 9629 28 09        	jr z,1F
 727+ 962B 32 E5 89      	ld (Numero_de_malotes),a
 728+ 962E
 729+ 962E ED 7B EC 89   	ld sp,(Stack_2)
 730+ 9632 18 D8        	jr 2B
 731+ 9634
 732+ 9634 AF           1 xor a
 733+ 9635 32 EC 89     	ld (Stack_2),a
 734+ 9638 C9           	ret
 735+ 9639
 736+ 9639              ; -----------------------------------------------------------------------------------
 737+ 9639              ;
 738+ 9639              ;	28/2/23
 739+ 9639              ;
 740+ 9639              ;	Pinta los disparos generados.
 741+ 9639
 742+ 9639              Extrae_foto_disparos
 743+ 9639
 744+ 9639 3A F2 89     	ld a,(Numero_de_disparotes)
 745+ 963C A7           	and a
 746+ 963D C8           	ret z
 747+ 963E ED 73 EA 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9642 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9645
 750+ 9645 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9647 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9648 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9649
 754+ 9649 ED 73 EC 89  	ld (Stack_2),sp
 755+ 964D ED 7B EA 89  	ld sp,(Stack)
 756+ 9651
 757+ 9651              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9651
 759+ 9651 3E CD        	ld a,$cd
 760+ 9653 32 5B 96     	ld (Imprime2),a
 761+ 9656 EB           	ex de,hl
 762+ 9657 22 5C 96     	ld (Imprime2+1),hl
 763+ 965A EB           	ex de,hl
 764+ 965B
 765+ 965B              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 965B
 767+ 965B 00 00 00     Imprime2 db 0,0,0
 768+ 965E
 769+ 965E 3A F2 89     	ld a,(Numero_de_disparotes)
 770+ 9661 3D           	dec a
 771+ 9662 28 09        	jr z,1F
 772+ 9664 32 F2 89      	ld (Numero_de_disparotes),a
 773+ 9667
 774+ 9667 ED 7B EC 89  	ld sp,(Stack_2)
 775+ 966B 18 D8        	jr 2B
 776+ 966D
 777+ 966D AF           1 xor a
 778+ 966E 32 EC 89     	ld (Stack_2),a
 779+ 9671 C9           	ret
 780+ 9672
# file closed: Draw_XOR.asm
1240  9672              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9672              ;   índices de Rutinas de impresión.
   2+ 9672
   3+ 9672 82 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9674 AF 96            defw Pinta_Amadeus_3x2
   5+ 9676
   6+ 9676 05 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9678 A5 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 967A 59 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 967C
  10+ 967C 2F 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 967E 33 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9680 E7 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9682
  14+ 9682
  15+ 9682              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9682              ;
  17+ 9682              ;   12/12/22
  18+ 9682              ;
  19+ 9682              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9682              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9682              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9682              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9682              ;
  24+ 9682              ;   Modifica: DE y HL.
  25+ 9682
  26+ 9682 ED 73 EA 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9686 FD F9        	ld sp,iy
  28+ 9688 06 10            ld b,16
  29+ 968A D1           1 pop de
  30+ 968B 7B               ld a,e
  31+ 968C AE               xor (hl)
  32+ 968D 77           	ld (hl),a
  33+ 968E 23           	inc hl
  34+ 968F 7A               ld a,d
  35+ 9690 AE               xor (hl)
  36+ 9691 77           	ld (hl),a
  37+ 9692 2B           	dec hl
  38+ 9693 24           	inc h
  39+ 9694 7C               ld a,h
  40+ 9695 E6 07            and 7
  41+ 9697 20 0A            jr nz,2F
  42+ 9699 7D               ld a,l
  43+ 969A C6 20            add a,$20
  44+ 969C 6F               ld l,a
  45+ 969D 38 04            jr c,2F
  46+ 969F 7C               ld a,h
  47+ 96A0 D6 08            sub 8
  48+ 96A2 67               ld h,a
  49+ 96A3 7C           2 ld a,h
  50+ 96A4 FE 58            cp $58
  51+ 96A6 28 02            jr z,3F
  52+ 96A8 10 E0            djnz 1B
  53+ 96AA ED 7B EA 89  3 ld sp,(Stack)
  54+ 96AE C9           	ret
  55+ 96AF
  56+ 96AF ED 73 EA 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96B3 FD F9        	ld sp,iy
  58+ 96B5 06 08            ld b,8
  59+ 96B7 D1           1 pop de
  60+ 96B8 7B               ld a,e
  61+ 96B9 AE               xor (hl)
  62+ 96BA 77           	ld (hl),a
  63+ 96BB 23           	inc hl
  64+ 96BC 7A               ld a,d
  65+ 96BD AE               xor (hl)
  66+ 96BE 77           	ld (hl),a
  67+ 96BF 23           	inc hl
  68+ 96C0 D1           	pop de
  69+ 96C1 7B               ld a,e
  70+ 96C2 AE               xor (hl)
  71+ 96C3 77           	ld (hl),a
  72+ 96C4 2B           	dec hl
  73+ 96C5 2B           	dec hl
  74+ 96C6 24           	inc h
  75+ 96C7 7C               ld a,h
  76+ 96C8 E6 07            and 7
  77+ 96CA 20 0A            jr nz,2F
  78+ 96CC 7D               ld a,l
  79+ 96CD C6 20            add a,$20
  80+ 96CF 6F               ld l,a
  81+ 96D0 38 04            jr c,2F
  82+ 96D2 7C               ld a,h
  83+ 96D3 D6 08            sub 8
  84+ 96D5 67               ld h,a
  85+ 96D6 7C           2 ld a,h
  86+ 96D7 FE 58            cp $58
  87+ 96D9 28 25            jr z,4F
  88+ 96DB 7A               ld a,d
  89+ 96DC AE               xor (hl)
  90+ 96DD 77               ld (hl),a
  91+ 96DE D1           	pop de
  92+ 96DF 23           	inc hl
  93+ 96E0 7B               ld a,e
  94+ 96E1 AE               xor (hl)
  95+ 96E2 77           	ld (hl),a
  96+ 96E3 23           	inc hl
  97+ 96E4 7A               ld a,d
  98+ 96E5 AE               xor (hl)
  99+ 96E6 77           	ld (hl),a
 100+ 96E7 2B           	dec hl
 101+ 96E8 2B           	dec hl
 102+ 96E9 24           	inc h
 103+ 96EA 7C               ld a,h
 104+ 96EB E6 07            and 7
 105+ 96ED 20 0A            jr nz,3F
 106+ 96EF 7D               ld a,l
 107+ 96F0 C6 20            add a,$20
 108+ 96F2 6F               ld l,a
 109+ 96F3 38 04            jr c,3F
 110+ 96F5 7C               ld a,h
 111+ 96F6 D6 08            sub 8
 112+ 96F8 67               ld h,a
 113+ 96F9 7C           3 ld a,h
 114+ 96FA FE 58            cp $58
 115+ 96FC 28 02            jr z,4F
 116+ 96FE 10 B7            djnz 1B
 117+ 9700 ED 7B EA 89  4 ld sp,(Stack)
 118+ 9704 C9           	ret
 119+ 9705
 120+ 9705              ; ---------------------------------------------------
 121+ 9705
 122+ 9705 ED 73 EA 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9709 FD F9        	ld sp,iy
 124+ 970B
 125+ 970B              ; >>>
 126+ 970B
 127+ 970B 06 10            ld b,16
 128+ 970D D1           1 pop de
 129+ 970E 7A           	ld a,d
 130+ 970F AE           	xor (hl)
 131+ 9710 77           	ld (hl),a
 132+ 9711 24           	inc h
 133+ 9712 7C               ld a,h
 134+ 9713 E6 07            and 7
 135+ 9715 20 0C            jr nz,2F
 136+ 9717 7D               ld a,l
 137+ 9718 C6 20            add a,$20
 138+ 971A 6F               ld l,a
 139+ 971B 38 06            jr c,2F
 140+ 971D 7C               ld a,h
 141+ 971E D6 08            sub 8
 142+ 9720 67               ld h,a
 143+ 9721 18 00            jr 2F
 144+ 9723 7C           2 ld a,h
 145+ 9724 FE 58            cp $58
 146+ 9726 28 02            jr z,3F
 147+ 9728 10 E3            djnz 1B
 148+ 972A ED 7B EA 89  3 ld sp,(Stack)
 149+ 972E C9           	ret
 150+ 972F
 151+ 972F ED 73 EA 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9733 FD F9        	ld sp,iy
 153+ 9735
 154+ 9735              ; >>>
 155+ 9735
 156+ 9735 06 10            ld b,16
 157+ 9737 D1           1 pop de
 158+ 9738 7B           	ld a,e
 159+ 9739 AE           	xor (hl)
 160+ 973A 77           	ld (hl),a
 161+ 973B 24           	inc h
 162+ 973C 7C               ld a,h
 163+ 973D E6 07            and 7
 164+ 973F 20 0C            jr nz,2F
 165+ 9741 7D               ld a,l
 166+ 9742 C6 20            add a,$20
 167+ 9744 6F               ld l,a
 168+ 9745 38 06            jr c,2F
 169+ 9747 7C               ld a,h
 170+ 9748 D6 08            sub 8
 171+ 974A 67               ld h,a
 172+ 974B 18 00            jr 2F
 173+ 974D 7C           2 ld a,h
 174+ 974E FE 58            cp $58
 175+ 9750 28 02            jr z,3F
 176+ 9752 10 E3            djnz 1B
 177+ 9754 ED 7B EA 89  3 ld sp,(Stack)
 178+ 9758 C9           	ret
 179+ 9759
 180+ 9759              ; ---------------------------------------------------
 181+ 9759
 182+ 9759 ED 73 EA 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 975D FD F9        	ld sp,iy
 184+ 975F 06 08            ld b,8
 185+ 9761 D1           1 pop de
 186+ 9762 7A           	ld a,d
 187+ 9763 AE           	xor (hl)
 188+ 9764 77           	ld (hl),a
 189+ 9765 23           	inc hl
 190+ 9766 D1           	pop de
 191+ 9767 7B           	ld a,e
 192+ 9768 AE           	xor (hl)
 193+ 9769 77           	ld (hl),a
 194+ 976A 2B           	dec hl
 195+ 976B 24            	inc h
 196+ 976C 7C               ld a,h
 197+ 976D E6 07            and 7
 198+ 976F 20 0A            jr nz,2F
 199+ 9771 7D               ld a,l
 200+ 9772 C6 20            add a,$20
 201+ 9774 6F               ld l,a
 202+ 9775 38 04            jr c,2F
 203+ 9777 7C               ld a,h
 204+ 9778 D6 08            sub 8
 205+ 977A 67               ld h,a
 206+ 977B 7C           2 ld a,h
 207+ 977C FE 58            cp $58
 208+ 977E 28 20            jr z,4F
 209+ 9780 D1               pop de
 210+ 9781 7B           	ld a,e
 211+ 9782 AE           	xor (hl)
 212+ 9783 77           	ld (hl),a
 213+ 9784 23           	inc hl
 214+ 9785 7A           	ld a,d
 215+ 9786 AE           	xor (hl)
 216+ 9787 77           	ld (hl),a
 217+ 9788 2B           	dec hl
 218+ 9789 24           	inc h
 219+ 978A 7C               ld a,h
 220+ 978B E6 07            and 7
 221+ 978D 20 0A            jr nz,3F
 222+ 978F 7D               ld a,l
 223+ 9790 C6 20            add a,$20
 224+ 9792 6F               ld l,a
 225+ 9793 38 04            jr c,3F
 226+ 9795 7C               ld a,h
 227+ 9796 D6 08            sub 8
 228+ 9798 67               ld h,a
 229+ 9799 7C           3 ld a,h
 230+ 979A FE 58            cp $58
 231+ 979C 28 02            jr z,4F
 232+ 979E 10 C1            djnz 1B
 233+ 97A0 ED 7B EA 89  4 ld sp,(Stack)
 234+ 97A4 C9           	ret
 235+ 97A5
 236+ 97A5 ED 73 EA 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97A9 FD F9        	ld sp,iy
 238+ 97AB 06 08            ld b,8
 239+ 97AD D1           1 pop de
 240+ 97AE D1           	pop de
 241+ 97AF 7B           	ld a,e
 242+ 97B0 AE           	xor (hl)
 243+ 97B1 77           	ld (hl),a
 244+ 97B2 24            	inc h
 245+ 97B3 7C               ld a,h
 246+ 97B4 E6 07            and 7
 247+ 97B6 20 0A            jr nz,2F
 248+ 97B8 7D               ld a,l
 249+ 97B9 C6 20            add a,$20
 250+ 97BB 6F               ld l,a
 251+ 97BC 38 04            jr c,2F
 252+ 97BE 7C               ld a,h
 253+ 97BF D6 08            sub 8
 254+ 97C1 67               ld h,a
 255+ 97C2 7C           2 ld a,h
 256+ 97C3 FE 58            cp $58
 257+ 97C5 28 1B            jr z,4F
 258+ 97C7 D1               pop de
 259+ 97C8 7A           	ld a,d
 260+ 97C9 AE           	xor (hl)
 261+ 97CA 77           	ld (hl),a
 262+ 97CB 24           	inc h
 263+ 97CC 7C               ld a,h
 264+ 97CD E6 07            and 7
 265+ 97CF 20 0A            jr nz,3F
 266+ 97D1 7D               ld a,l
 267+ 97D2 C6 20            add a,$20
 268+ 97D4 6F               ld l,a
 269+ 97D5 38 04            jr c,3F
 270+ 97D7 7C               ld a,h
 271+ 97D8 D6 08            sub 8
 272+ 97DA 67               ld h,a
 273+ 97DB 7C           3 ld a,h
 274+ 97DC FE 58            cp $58
 275+ 97DE 28 02            jr z,4F
 276+ 97E0 10 CB            djnz 1B
 277+ 97E2 ED 7B EA 89  4 ld sp,(Stack)
 278+ 97E6 C9           	ret
 279+ 97E7
 280+ 97E7 ED 73 EA 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97EB FD F9        	ld sp,iy
 282+ 97ED 06 08            ld b,8
 283+ 97EF D1           1 pop de
 284+ 97F0 7B           	ld a,e
 285+ 97F1 AE           	xor (hl)
 286+ 97F2 77           	ld (hl),a
 287+ 97F3 23           	inc hl
 288+ 97F4 7A           	ld a,d
 289+ 97F5 AE           	xor (hl)
 290+ 97F6 77           	ld (hl),a
 291+ 97F7 2B           	dec hl
 292+ 97F8 24             	inc h
 293+ 97F9 7C               ld a,h
 294+ 97FA E6 07            and 7
 295+ 97FC 20 0A            jr nz,2F
 296+ 97FE 7D               ld a,l
 297+ 97FF C6 20            add a,$20
 298+ 9801 6F               ld l,a
 299+ 9802 38 04            jr c,2F
 300+ 9804 7C               ld a,h
 301+ 9805 D6 08            sub 8
 302+ 9807 67               ld h,a
 303+ 9808 7C           2 ld a,h
 304+ 9809 FE 58            cp $58
 305+ 980B 28 21            jr z,4F
 306+ 980D D1               pop de
 307+ 980E 7A           	ld a,d
 308+ 980F AE           	xor (hl)
 309+ 9810 77           	ld (hl),a
 310+ 9811 23           	inc hl
 311+ 9812 D1               pop de
 312+ 9813 7B           	ld a,e
 313+ 9814 AE           	xor (hl)
 314+ 9815 77           	ld (hl),a
 315+ 9816 2B           	dec hl
 316+ 9817 24           	inc h
 317+ 9818 7C               ld a,h
 318+ 9819 E6 07            and 7
 319+ 981B 20 0A            jr nz,3F
 320+ 981D 7D               ld a,l
 321+ 981E C6 20            add a,$20
 322+ 9820 6F               ld l,a
 323+ 9821 38 04            jr c,3F
 324+ 9823 7C               ld a,h
 325+ 9824 D6 08            sub 8
 326+ 9826 67               ld h,a
 327+ 9827 7C           3 ld a,h
 328+ 9828 FE 58            cp $58
 329+ 982A 28 02            jr z,4F
 330+ 982C 10 C1            djnz 1B
 331+ 982E ED 7B EA 89  4 ld sp,(Stack)
 332+ 9832 C9           	ret
 333+ 9833
 334+ 9833 ED 73 EA 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9837 FD F9        	ld sp,iy
 336+ 9839 06 08            ld b,8
 337+ 983B D1           1 pop de
 338+ 983C 7B           	ld a,e
 339+ 983D AE           	xor (hl)
 340+ 983E 77           	ld (hl),a
 341+ 983F 24            	inc h
 342+ 9840 7C               ld a,h
 343+ 9841 E6 07            and 7
 344+ 9843 20 0A            jr nz,2F
 345+ 9845 7D               ld a,l
 346+ 9846 C6 20            add a,$20
 347+ 9848 6F               ld l,a
 348+ 9849 38 04            jr c,2F
 349+ 984B 7C               ld a,h
 350+ 984C D6 08            sub 8
 351+ 984E 67               ld h,a
 352+ 984F 7C           2 ld a,h
 353+ 9850 FE 58            cp $58
 354+ 9852 28 1C            jr z,4F
 355+ 9854 D1               pop de
 356+ 9855 7A           	ld a,d
 357+ 9856 AE           	xor (hl)
 358+ 9857 77           	ld (hl),a
 359+ 9858 24           	inc h
 360+ 9859 7C               ld a,h
 361+ 985A E6 07            and 7
 362+ 985C 20 0A            jr nz,3F
 363+ 985E 7D               ld a,l
 364+ 985F C6 20            add a,$20
 365+ 9861 6F               ld l,a
 366+ 9862 38 04            jr c,3F
 367+ 9864 7C               ld a,h
 368+ 9865 D6 08            sub 8
 369+ 9867 67               ld h,a
 370+ 9868 7C           3 ld a,h
 371+ 9869 FE 58            cp $58
 372+ 986B 28 03            jr z,4F
 373+ 986D D1               pop de
 374+ 986E 10 CB            djnz 1B
 375+ 9870 ED 7B EA 89  4 ld sp,(Stack)
 376+ 9874 C9           	ret
 377+ 9875
 378+ 9875              ; ---------------------------------------------------
 379+ 9875              ;
 380+ 9875              ;   27/02/23
 381+ 9875              ;
 382+ 9875              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9875              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9875              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9875
 386+ 9875 ED 73 EA 89  Pinta_Disparo ld (Stack),sp
 387+ 9879 FD F9            ld sp,iy
 388+ 987B 06 02            ld b,2
 389+ 987D D1           1 pop de
 390+ 987E 7B               ld a,e
 391+ 987F AE               xor (hl)
 392+ 9880 77               ld (hl),a
 393+ 9881 23               inc hl
 394+ 9882 7A               ld a,d
 395+ 9883 AE               xor (hl)
 396+ 9884 77               ld (hl),a
 397+ 9885 2B               dec hl
 398+ 9886
 399+ 9886 24               inc h
 400+ 9887 7C               ld a,h
 401+ 9888 E6 07            and 7
 402+ 988A 20 0A            jr nz,2F
 403+ 988C 7D               ld a,l
 404+ 988D C6 20            add a,$20
 405+ 988F 6F               ld l,a
 406+ 9890 38 04            jr c,2F
 407+ 9892 7C               ld a,h
 408+ 9893 D6 08            sub 8
 409+ 9895 67               ld h,a
 410+ 9896 7C           2 ld a,h
 411+ 9897 FE 58            cp $58
 412+ 9899 28 02            jr z,3F
 413+ 989B
 414+ 989B 10 E0            djnz 1B
 415+ 989D ED 7B EA 89  3 ld sp,(Stack)
 416+ 98A1 C9               ret
 417+ 98A2
# file closed: Rutinas_de_impresion_sprites.asm
1241  98A2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98A2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98A2              ;
   3+ 98A2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98A2              ;
   5+ 98A2              ; *****************************************************************************************************************************************************************************************
   6+ 98A2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98A2
   8+ 98A2 7C           calcula_tercio ld a,h
   9+ 98A3 E6 18        	and $18
  10+ 98A5 CB 2F        	sra a
  11+ 98A7 CB 2F        	sra a
  12+ 98A9 CB 2F        	sra a
  13+ 98AB C9           	ret
  14+ 98AC
# file closed: calcula_tercio.asm
1242  98AC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98AC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98AC              ;
   3+ 98AC              ;
   4+ 98AC              ;	CLS.
   5+ 98AC              ;
   6+ 98AC              ;	Limpia la pantalla y define sus atributos.
   7+ 98AC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98AC              ;
   9+ 98AC              ;	COLORES: 0 ..... NEGRO
  10+ 98AC              ;    		 1 ..... AZUL
  11+ 98AC              ; 			 2 ..... ROJO
  12+ 98AC              ;			 3 ..... MAGENTA
  13+ 98AC              ; 			 4 ..... VERDE
  14+ 98AC              ; 			 5 ..... CIAN
  15+ 98AC              ;			 6 ..... AMARILLO
  16+ 98AC              ; 			 7 ..... BLANCO
  17+ 98AC              ;
  18+ 98AC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98AC              ;
  20+ 98AC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98AC
  22+ 98AC
  23+ 98AC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98AF 11 01 40     	LD DE,$4001
  25+ 98B2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98B5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98B7 ED B0        	LDIR
  28+ 98B9 01 FF 02     	LD BC,767
  29+ 98BC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98BD ED B0        	LDIR
  31+ 98BF C9           	ret
  32+ 98C0
# file closed: Cls.asm
1243  98C0              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98C0              ; ******************************************************************************************************************************************************************************************
   2+ 98C0              ;
   3+ 98C0              ;   20/05/23
   4+ 98C0              ;
   5+ 98C0              ;	Recompone_posicion_inicio
   6+ 98C0              ;
   7+ 98C0              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98C0              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98C0              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98C0              ;	_ a una u otra rutina.
  11+ 98C0
  12+ 98C0              Recompone_posicion_inicio
  13+ 98C0
  14+ 98C0 2A AD 89     	ld hl,(Posicion_inicio)
  15+ 98C3 7D           	ld a,l
  16+ 98C4 E6 1F        	and $1f
  17+ 98C6 28 16        	jr z,1F
  18+ 98C8
  19+ 98C8 FE 1F        	cp $1f
  20+ 98CA 28 0D        	jr z,3F
  21+ 98CC
  22+ 98CC 21 D7 89     	ld hl,Ctrl_2
  23+ 98CF CB C6        	set 0,(hl)
  24+ 98D1 2A 9F 89     	ld hl,(Puntero_objeto)
  25+ 98D4 22 DA 89     	ld (Repone_puntero_objeto),hl
  26+ 98D7 18 08        	jr 2F
  27+ 98D9
  28+ 98D9 CD 7A 9A     3 call Mov_left
  29+ 98DC 18 03        	jr 2F
  30+ 98DE
  31+ 98DE CD 5C 99     1 call Mov_right
  32+ 98E1 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98E4 22 9F 89     	ld (Puntero_objeto),hl
  34+ 98E7 C9           	ret
  35+ 98E8
  36+ 98E8              ; ******************************************************************************************************************************************************************************************
  37+ 98E8              ;
  38+ 98E8              ;   27/05/23
  39+ 98E8              ;
  40+ 98E8              ;	Mov_down
  41+ 98E8              ;
  42+ 98E8              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98E8              ;
  44+ 98E8              ;
  45+ 98E8              Mov_down
  46+ 98E8
  47+ 98E8 CD 4A 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98EB              ;																	; _ repone (Puntero_objeto).
  49+ 98EB 21 C9 89     	ld hl,Ctrl_0
  50+ 98EE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98F0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98F0              ; 																	; _ en el caso de que no lo haya.
  53+ 98F0 3A B3 89     	ld a,(Vel_down)
  54+ 98F3 47           	ld b,a
  55+ 98F4 2A 9D 89         ld hl,(Posicion_actual)
  56+ 98F7 CD A2 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98FA E6 02        	and 2
  58+ 98FC 28 0F        	jr z,1F
  59+ 98FE
  60+ 98FE              ; Nos encontramos en el último tercio de pantalla.
  61+ 98FE              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98FE
  63+ 98FE 7C           	ld a,h
  64+ 98FF FE 57        	cp $57
  65+ 9901 20 0A        	jr nz,1F
  66+ 9903 7D           	ld a,l
  67+ 9904 C6 20        	add $20
  68+ 9906 30 05        	jr nc,1F
  69+ 9908
  70+ 9908              ; ------------------------------
  71+ 9908 CD F8 9B     	call Reaparece_arriba
  72+ 990B              ;	call Reinicio
  73+ 990B              ; ------------------------------
  74+ 990B
  75+ 990B 18 08        	jr 3F
  76+ 990D CD E2 95     1 call NextScan
  77+ 9910 22 9D 89     	ld (Posicion_actual),hl
  78+ 9913 10 E2            djnz 2B
  79+ 9915 CD 0E 9C     3 call Genera_coordenadas
  80+ 9918 C9           	ret
  81+ 9919
  82+ 9919              ; ******************************************************************************************************************************************************************************************
  83+ 9919              ;
  84+ 9919              ;   27/05/23
  85+ 9919              ;
  86+ 9919              ;	Mov_up
  87+ 9919              ;
  88+ 9919              ; 	Mueve el Sprite hacia arriba.
  89+ 9919              ;
  90+ 9919              ;
  91+ 9919              Mov_up
  92+ 9919
  93+ 9919 CD 4A 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 991C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 991C 21 C9 89     	ld hl,Ctrl_0
  96+ 991F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9921              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9921              ; 																		; _ en el caso de que no lo haya.
  99+ 9921 3A B2 89     	ld a,(Vel_up)
 100+ 9924 47           	ld b,a
 101+ 9925 2A 9D 89     	ld hl,(Posicion_actual)
 102+ 9928 CD A2 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 992B A7           	and a
 104+ 992C 20 10        	jr nz,1F
 105+ 992E
 106+ 992E              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 992E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 992E
 109+ 992E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 992F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9931 20 0B            jr nz,1F
 112+ 9933 7D               ld a,l
 113+ 9934 D6 20            sub $20
 114+ 9936 30 06            jr nc,1F
 115+ 9938 25               dec h
 116+ 9939
 117+ 9939              ; -----------------------------
 118+ 9939 CD E8 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 993C              ;	call Reinicio
 120+ 993C              ; -----------------------------
 121+ 993C
 122+ 993C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 993E CD F1 95     1 call PreviousScan
 124+ 9941 22 9D 89     	ld (Posicion_actual),hl
 125+ 9944 10 E2            djnz 3B
 126+ 9946 CD 0E 9C     2 call Genera_coordenadas
 127+ 9949 C9           	ret
 128+ 994A
 129+ 994A              ; -----------------------------
 130+ 994A              ;
 131+ 994A              ;	27/5/23
 132+ 994A              ;
 133+ 994A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 994A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 994A              ;
 136+ 994A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 994A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 994A              ;
 139+ 994A              ;	Modifica: A y (Puntero_objeto).
 140+ 994A
 141+ 994A 3A D7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 994D CB 47        	bit 0,a
 143+ 994F C8           	ret z
 144+ 9950 CB 87        	res 0,a
 145+ 9952 32 D7 89     	ld (Ctrl_2),a
 146+ 9955 2A DA 89     	ld hl,(Repone_puntero_objeto)
 147+ 9958 22 9F 89     	ld (Puntero_objeto),hl
 148+ 995B C9           	ret
 149+ 995C
 150+ 995C              ; ******************************************************************************************************************************************************************************************
 151+ 995C              ;
 152+ 995C              ;	19/10/22
 153+ 995C              ;
 154+ 995C              ;	Mov_right.
 155+ 995C              ;
 156+ 995C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 995C              ;
 158+ 995C
 159+ 995C 21 C9 89     Mov_right ld hl,Ctrl_0
 160+ 995F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9961              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9961              ; 																	; _ en el caso de que no lo haya.
 163+ 9961 3A C9 89     	ld a,(Ctrl_0)
 164+ 9964 CB 77        	bit 6,a
 165+ 9966 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9968
 167+ 9968 CD 96 9B     	call Stop_Amadeus_right
 168+ 996B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 996C 18 4D        	jr 8F
 170+ 996E
 171+ 996E 3A A1 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 9971 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 9973 20 46        	jr nz,8F
 174+ 9975
 175+ 9975 3A A3 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 9978 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 9979 28 40        	jr z,8F
 178+ 997B
 179+ 997B              ; ---------- ---------- ----------
 180+ 997B              ;
 181+ 997B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 997B
 183+ 997B 3A B1 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 997E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 9980 28 11        	jr z,1F
 186+ 9982 38 06        	jr c,6F
 187+ 9984 FE 04        	cp 4
 188+ 9986 28 14        	jr z,7F
 189+ 9988 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 998A
 191+ 998A              ; ---------- ---------- ----------
 192+ 998A              ;
 193+ 998A              ; Perfiles de velocidad
 194+ 998A              ;
 195+ 998A
 196+ 998A 3A A3 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 998D FE FE        	cp $fe
 198+ 998F 20 2A        	jr nz,8F
 199+ 9991 18 10        	jr 3F
 200+ 9993 3A A3 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 9996 FE FD        	cp $fd
 202+ 9998 20 21        	jr nz,8F
 203+ 999A 18 07        	jr 3F
 204+ 999C 3A A3 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 999F FE FB        	cp $fb
 206+ 99A1 20 18        	jr nz,8F
 207+ 99A3
 208+ 99A3              ; ---------- ---------- ----------
 209+ 99A3
 210+ 99A3              3
 211+ 99A3 CD D6 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99A6              ;	call Reinicio
 213+ 99A6
 214+ 99A6              ; ---------- ---------- ----------
 215+ 99A6              ;
 216+ 99A6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99A6
 218+ 99A6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99A8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99A9 CD C2 99     	call DESPLZ_DER
 221+ 99AC C1           	pop bc
 222+ 99AD 10 F9        	djnz 5B
 223+ 99AF 2A 9D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99B2 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99B3 22 9D 89     	ld (Posicion_actual),hl
 226+ 99B6 CD 0E 9C     	call Genera_coordenadas
 227+ 99B9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99BB
 229+ 99BB              ; ---------- ---------- ----------
 230+ 99BB
 231+ 99BB 2A 9D 89     8 ld hl,(Posicion_actual)
 232+ 99BE CD C2 99     	call DESPLZ_DER
 233+ 99C1 C9           2 ret
 234+ 99C2
 235+ 99C2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99C2              ;
 237+ 99C2              ;	22/9/22
 238+ 99C2              ;
 239+ 99C2
 240+ 99C2 CD D1 99     DESPLZ_DER call Desplaza_derecha
 241+ 99C5 CD 1D 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99C8 CD 46 9A         call Ciclo_completo
 243+ 99CB 21 C9 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99CE CB FE        	set 7,(hl)
 245+ 99D0 C9           	ret
 246+ 99D1
 247+ 99D1              ; ******************************************************************************************************************************************************************************************
 248+ 99D1              ;	15/02/23
 249+ 99D1              ;
 250+ 99D1
 251+ 99D1 3A B1 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99D4 47           	ld b,a
 253+ 99D5 2A A9 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 99D8 23           1 inc hl
 255+ 99D9 23           	inc hl
 256+ 99DA 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 99DC 22 A9 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 99DF CD F7 8C     	call Extrae_address
 259+ 99E2 22 9F 89     	ld (Puntero_objeto),hl
 260+ 99E5
 261+ 99E5              ; Modifica (Puntero_DESPLZ_izq).
 262+ 99E5
 263+ 99E5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 99E5              ; Cuántos movimientos hemos hecho ??
 265+ 99E5              ; DE contiene (Puntero_DESPLZ_der).
 266+ 99E5
 267+ 99E5 2A A5 89     7 ld hl,(Indice_Sprite_der)
 268+ 99E8 EB           	ex de,hl
 269+ 99E9 A7           	and a
 270+ 99EA ED 52        	sbc hl,de
 271+ 99EC CB 3D        	srl l
 272+ 99EE 3E 08        6 ld a,8
 273+ 99F0 95           	sub l
 274+ 99F1 30 1E        	jr nc,3F
 275+ 99F3
 276+ 99F3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 99F3              ; B="0".
 278+ 99F3
 279+ 99F3 04           4 inc b
 280+ 99F4 3C           	inc a
 281+ 99F5 20 FC        	jr nz,4B
 282+ 99F7 78           	ld a,b
 283+ 99F8 08           	ex af,af
 284+ 99F9 2A A5 89     	ld hl,(Indice_Sprite_der)
 285+ 99FC 23           5 inc hl
 286+ 99FD 23           	inc hl
 287+ 99FE 10 FC        	djnz 5B
 288+ 9A00 22 A9 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A03 CD F7 8C     	call Extrae_address
 290+ 9A06 22 9F 89     	ld (Puntero_objeto),hl
 291+ 9A09
 292+ 9A09              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A09              ; _(Posicion_actual).
 294+ 9A09
 295+ 9A09 21 9D 89     	ld hl,Posicion_actual
 296+ 9A0C 34           	inc (hl)
 297+ 9A0D 08               ex af,af
 298+ 9A0E 6F           	ld l,a
 299+ 9A0F 18 DD        	jr 6B
 300+ 9A11
 301+ 9A11              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A11
 303+ 9A11 47           3 ld b,a
 304+ 9A12 2A A7 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A15 23           2 inc hl
 306+ 9A16 23           	inc hl
 307+ 9A17 10 FC        	djnz 2B
 308+ 9A19 22 AB 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A1C C9           8 ret
 310+ 9A1D
 311+ 9A1D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A1D              ;
 313+ 9A1D              ;	24/7/22
 314+ 9A1D              ;
 315+ 9A1D              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A1D              ;
 317+ 9A1D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A1D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A1D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A1D
 321+ 9A1D 3A A3 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A20 A7           	and a
 323+ 9A21 20 1F        	jr nz,1F
 324+ 9A23 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A25 32 A3 89         ld (CTRL_DESPLZ),a
 326+ 9A28
 327+ 9A28 21 9C 89     	ld hl,Columns
 328+ 9A2B 34           	inc (hl)
 329+ 9A2C 3A AF 89     	ld a,(Cuad_objeto)
 330+ 9A2F E6 01        	and 1
 331+ 9A31 28 0F        	jr z,1F
 332+ 9A33 2A 9D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A36 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A37 22 9D 89     	ld (Posicion_actual),hl
 335+ 9A3A CD 0E 9C     	call Genera_coordenadas
 336+ 9A3D CD A2 9B     	call Inc_CTRL_DESPLZ
 337+ 9A40 18 03        	jr 2F
 338+ 9A42 CD A2 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A45 C9           2 ret
 340+ 9A46
 341+ 9A46              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A46              ;
 343+ 9A46              ;	24/7/22
 344+ 9A46              ;
 345+ 9A46              ;	Ciclo_completo.
 346+ 9A46              ;
 347+ 9A46              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A46              ;
 349+ 9A46              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A46              ; 	Decrementamos (Columns).
 351+ 9A46              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A46              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A46
 354+ 9A46
 355+ 9A46 3A A3 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A49 FE FF        	cp $ff
 357+ 9A4B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A4D E6 F0        	and $f0
 359+ 9A4F 20 28        	jr nz,3F
 360+ 9A51
 361+ 9A51              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A51
 363+ 9A51 3A A3 89     	ld a,(CTRL_DESPLZ)
 364+ 9A54 47           	ld b,a
 365+ 9A55 3E F8        	ld a,$f8
 366+ 9A57 80           	add b
 367+ 9A58 32 A3 89     	ld (CTRL_DESPLZ),a
 368+ 9A5B 18 1C        	jr 3F
 369+ 9A5D 21 9C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A60 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A61 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A62 32 A3 89     	ld (CTRL_DESPLZ),a
 373+ 9A65 3A AF 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A68 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A6A 20 0A        	jr nz,2F
 376+ 9A6C 2A 9D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A6F 23           	inc hl
 378+ 9A70 22 9D 89     	ld (Posicion_actual),hl
 379+ 9A73 CD 0E 9C     	call Genera_coordenadas
 380+ 9A76
 381+ 9A76              ; Inicia el puntero de Sprite.
 382+ 9A76
 383+ 9A76 CD 0E 8D     2 call Inicia_puntero_objeto_der
 384+ 9A79 C9           3 ret
 385+ 9A7A
 386+ 9A7A              ; ******************************************************************************************************************************************************************************************
 387+ 9A7A              ;
 388+ 9A7A              ;	15/02/23
 389+ 9A7A              ;
 390+ 9A7A              ;	Mov_left.
 391+ 9A7A              ;
 392+ 9A7A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9A7A              ;
 394+ 9A7A 21 C9 89     Mov_left ld hl,Ctrl_0
 395+ 9A7D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9A7F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9A7F              ; 																	; _ en el caso de que no lo haya.
 398+ 9A7F 3A C9 89     	ld a,(Ctrl_0)
 399+ 9A82 CB 77        	bit 6,a
 400+ 9A84 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9A86
 402+ 9A86 CD 9C 9B     	call Stop_Amadeus_left
 403+ 9A89 C8           	ret z
 404+ 9A8A 20 4A        	jr nz,8F
 405+ 9A8C
 406+ 9A8C 3A A1 89     11 ld a,(Coordenada_X)
 407+ 9A8F A7           	and a
 408+ 9A90 20 44        	jr nz,8F
 409+ 9A92
 410+ 9A92 3A A3 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9A95 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9A96 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9A98
 414+ 9A98              ; ---------- ---------- ----------
 415+ 9A98
 416+ 9A98 3A B0 89     	ld a,(Vel_left)
 417+ 9A9B FE 02        	cp 2
 418+ 9A9D 28 0F        	jr z,1F
 419+ 9A9F 38 04        	jr c,6F
 420+ 9AA1 FE 04        	cp 4
 421+ 9AA3 28 12        	jr z,7F
 422+ 9AA5
 423+ 9AA5              ; ---------- ---------- ----------
 424+ 9AA5
 425+ 9AA5 3A A3 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AA8 FE F8        	cp $f8
 427+ 9AAA 20 2A        	jr nz,8F
 428+ 9AAC 18 10        	jr 4F
 429+ 9AAE 3A A3 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AB1 FE F9        	cp $f9
 431+ 9AB3 20 21        	jr nz,8F
 432+ 9AB5 18 07        	jr 4F
 433+ 9AB7 3A A3 89     7 ld a,(CTRL_DESPLZ)
 434+ 9ABA FE FB        	cp $fb
 435+ 9ABC 20 18        	jr nz,8F
 436+ 9ABE
 437+ 9ABE              ; ---------- ---------- ----------
 438+ 9ABE
 439+ 9ABE              4
 440+ 9ABE CD C4 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AC1              ;	call Reinicio
 442+ 9AC1
 443+ 9AC1              ; ---------- ---------- ----------
 444+ 9AC1
 445+ 9AC1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AC3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9AC4
 448+ 9AC4              ;	ld hl,(Indice_Sprite_izq)
 449+ 9AC4              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9AC4
 451+ 9AC4 CD DD 9A     	call DESPLZ_IZQ
 452+ 9AC7 C1           	pop bc
 453+ 9AC8 10 F9        	djnz 5B
 454+ 9ACA 2A 9D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9ACD 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9ACE 22 9D 89     	ld (Posicion_actual),hl
 457+ 9AD1 CD 0E 9C     	call Genera_coordenadas
 458+ 9AD4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9AD6
 460+ 9AD6              ; ---------- ---------- ----------
 461+ 9AD6
 462+ 9AD6              ; Movemos, no hay recolocación.
 463+ 9AD6
 464+ 9AD6 2A 9D 89     8 ld hl,(Posicion_actual)
 465+ 9AD9 CD DD 9A     	call DESPLZ_IZQ
 466+ 9ADC C9           2 ret
 467+ 9ADD
 468+ 9ADD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9ADD              ;
 470+ 9ADD              ;	22/9/22
 471+ 9ADD
 472+ 9ADD              DESPLZ_IZQ
 473+ 9ADD
 474+ 9ADD CD EC 9A     	call Desplaza_izquierda
 475+ 9AE0 CD 38 9B         call modifica_parametros_1er_DESPLZ
 476+ 9AE3 CD 60 9B     	call Ciclo_completo_2
 477+ 9AE6 21 C9 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9AE9 CB BE        	res 7,(hl)
 479+ 9AEB C9           	ret
 480+ 9AEC
 481+ 9AEC              Desplaza_izquierda
 482+ 9AEC
 483+ 9AEC 3A B0 89     	ld a,(Vel_left)
 484+ 9AEF 47           	ld b,a
 485+ 9AF0 2A AB 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9AF3 23           1 inc hl
 487+ 9AF4 23           	inc hl
 488+ 9AF5 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9AF7 22 AB 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9AFA CD F7 8C     	call Extrae_address
 491+ 9AFD 22 9F 89     	ld (Puntero_objeto),hl
 492+ 9B00
 493+ 9B00              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B00
 495+ 9B00              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B00              ; Cuántos movimientos hemos hecho ??
 497+ 9B00              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B00
 499+ 9B00 2A A7 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B03 EB           	ex de,hl
 501+ 9B04 A7           	and a
 502+ 9B05 ED 52        	sbc hl,de
 503+ 9B07 CB 3D        	srl l
 504+ 9B09 3E 08        6 ld a,8
 505+ 9B0B 95           	sub l
 506+ 9B0C 30 1E        	jr nc,3F
 507+ 9B0E
 508+ 9B0E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B0E              ; B="0".
 510+ 9B0E
 511+ 9B0E 04           4 inc b
 512+ 9B0F 3C           	inc a
 513+ 9B10 20 FC        	jr nz,4B
 514+ 9B12 78           	ld a,b
 515+ 9B13 08           	ex af,af
 516+ 9B14 2A A7 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B17 23           5 inc hl
 518+ 9B18 23           	inc hl
 519+ 9B19 10 FC        	djnz 5B
 520+ 9B1B 22 AB 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B1E CD F7 8C     	call Extrae_address
 522+ 9B21 22 9F 89     	ld (Puntero_objeto),hl
 523+ 9B24
 524+ 9B24              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B24              ; _(Posicion_actual).
 526+ 9B24
 527+ 9B24 21 9D 89     	ld hl,Posicion_actual
 528+ 9B27 35           	dec (hl)
 529+ 9B28 08           	ex af,af
 530+ 9B29 6F           	ld l,a
 531+ 9B2A 18 DD        	jr 6B
 532+ 9B2C
 533+ 9B2C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B2C
 535+ 9B2C 47           3 ld b,a
 536+ 9B2D 2A A5 89     	ld hl,(Indice_Sprite_der)
 537+ 9B30 23           2 inc hl
 538+ 9B31 23           	inc hl
 539+ 9B32 10 FC        	djnz 2B
 540+ 9B34 22 A9 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B37 C9           8 ret
 542+ 9B38
 543+ 9B38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B38              ;
 545+ 9B38              ;	modifica_parametros_1er_DESPLZ
 546+ 9B38              ;
 547+ 9B38              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B38              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B38              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B38
 551+ 9B38 3A A3 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B3B A7           	and a
 553+ 9B3C 20 1E        	jr nz,1F
 554+ 9B3E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B3F 32 A3 89         ld (CTRL_DESPLZ),a
 556+ 9B42 21 9C 89     	ld hl,Columns
 557+ 9B45 34           	inc (hl)
 558+ 9B46 3A AF 89     	ld a,(Cuad_objeto)
 559+ 9B49 E6 01        	and 1
 560+ 9B4B 20 0F        	jr nz,1F
 561+ 9B4D 2A 9D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B50 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B51 22 9D 89     	ld (Posicion_actual),hl
 564+ 9B54 CD 0E 9C     	call Genera_coordenadas
 565+ 9B57 CD B3 9B     	call Dec_CTRL_DESPLZ
 566+ 9B5A 18 03        	jr 2F
 567+ 9B5C CD B3 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B5F C9           2 ret
 569+ 9B60
 570+ 9B60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B60
 572+ 9B60 3A A3 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B63 FE F7        	cp $f7
 574+ 9B65 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B67 30 2C        	jr nc,3F
 576+ 9B69
 577+ 9B69              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B69
 579+ 9B69 06 00        	ld b,0
 580+ 9B6B 04           4 inc b
 581+ 9B6C 3C           	inc a
 582+ 9B6D FE F7        	cp $f7
 583+ 9B6F 20 FA        	jr nz,4B
 584+ 9B71 3E FF        	ld a,$ff
 585+ 9B73 90           	sub b
 586+ 9B74 32 A3 89     	ld (CTRL_DESPLZ),a
 587+ 9B77 18 1C        	jr 3F
 588+ 9B79
 589+ 9B79              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9B79
 591+ 9B79 21 9C 89     1 ld hl,Columns
 592+ 9B7C 35           	dec (hl)
 593+ 9B7D AF           	xor a
 594+ 9B7E 32 A3 89     	ld (CTRL_DESPLZ),a
 595+ 9B81 3A AF 89     	ld a,(Cuad_objeto)
 596+ 9B84 E6 01        	and 1
 597+ 9B86 28 0A        	jr z,2F
 598+ 9B88 2A 9D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9B8B 2B           	dec hl
 600+ 9B8C 22 9D 89     	ld (Posicion_actual),hl
 601+ 9B8F CD 0E 9C     	call Genera_coordenadas
 602+ 9B92
 603+ 9B92              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9B92
 605+ 9B92 CD 21 8D     2 call Inicia_puntero_objeto_izq
 606+ 9B95 C9           3 ret
 607+ 9B96
 608+ 9B96              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9B96              ;
 610+ 9B96              ;	19/10/22
 611+ 9B96              ;
 612+ 9B96              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9B96              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9B96
 615+ 9B96 3A A1 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9B99 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9B9B C9           	ret
 618+ 9B9C
 619+ 9B9C              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9B9C              ;
 621+ 9B9C              ;	19/10/22
 622+ 9B9C              ;
 623+ 9B9C              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9B9C              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9B9C
 626+ 9B9C 3A A1 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9B9F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BA1 C9           	ret
 629+ 9BA2
 630+ 9BA2              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BA2              ;
 632+ 9BA2              ;	24/7/22
 633+ 9BA2              ;
 634+ 9BA2              ;	Inc_CTRL_DESPLZ
 635+ 9BA2              ;
 636+ 9BA2              ;
 637+ 9BA2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BA2
 639+ 9BA2 21 A3 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BA5 3A B1 89     	ld a,(Vel_right)
 641+ 9BA8 A7           	and a
 642+ 9BA9 28 06        	jr z,1F
 643+ 9BAB 47           	ld b,a
 644+ 9BAC 34           3 inc (hl)
 645+ 9BAD 10 FD        	djnz 3B
 646+ 9BAF 18 01        	jr 2F
 647+ 9BB1 34           1 inc (hl)
 648+ 9BB2 C9           2 ret
 649+ 9BB3
 650+ 9BB3              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BB3              ;
 652+ 9BB3              ;	5/2/23
 653+ 9BB3              ;
 654+ 9BB3              ;	Dec_CTRL_DESPLZ
 655+ 9BB3              ;
 656+ 9BB3              ;
 657+ 9BB3              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BB3
 659+ 9BB3 21 A3 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BB6 3A B0 89     	ld a,(Vel_left)
 661+ 9BB9 A7           	and a
 662+ 9BBA 28 06        	jr z,1F
 663+ 9BBC 47           	ld b,a
 664+ 9BBD 35           3 dec (hl)
 665+ 9BBE 10 FD        	djnz 3B
 666+ 9BC0 18 01        	jr 2F
 667+ 9BC2 35           1 dec (hl)
 668+ 9BC3 C9           2 ret
 669+ 9BC4
 670+ 9BC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BC4
 672+ 9BC4 2A 9D 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BC7 01 1F 00     	ld bc,31
 674+ 9BCA A7           	and a
 675+ 9BCB ED 4A        	adc hl,bc
 676+ 9BCD 22 9D 89     	ld (Posicion_actual),hl
 677+ 9BD0 21 C9 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BD3 CB C6        	set 0,(hl)
 679+ 9BD5 C9           	ret
 680+ 9BD6
 681+ 9BD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BD6
 683+ 9BD6 2A 9D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9BD9 01 1F 00     	ld bc,31
 685+ 9BDC A7           	and a
 686+ 9BDD ED 42        	sbc hl,bc
 687+ 9BDF 22 9D 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9BE2 21 C9 89     	ld hl,Ctrl_0
 689+ 9BE5 CB CE        	set 1,(hl)
 690+ 9BE7 C9           	ret
 691+ 9BE8
 692+ 9BE8              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9BE8
 694+ 9BE8 24           Reaparece_abajo inc h
 695+ 9BE9 01 E0 17     	ld bc,$17e0
 696+ 9BEC A7           	and a
 697+ 9BED ED 4A        	adc hl,bc
 698+ 9BEF 22 9D 89     	ld (Posicion_actual),hl
 699+ 9BF2 21 C9 89     	ld hl,Ctrl_0
 700+ 9BF5 CB D6        	set 2,(hl)
 701+ 9BF7 C9           	ret
 702+ 9BF8
 703+ 9BF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9BF8
 705+ 9BF8 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9BFB A7           	and a
 707+ 9BFC ED 42        	sbc hl,bc
 708+ 9BFE 22 9D 89     	ld (Posicion_actual),hl
 709+ 9C01 21 C9 89     	ld hl,Ctrl_0
 710+ 9C04 CB DE        	set 3,(hl)
 711+ 9C06 C9           	ret
 712+ 9C07
 713+ 9C07              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C07
 715+ 9C07 2A AD 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C0A 22 9D 89     	ld (Posicion_actual),hl
 717+ 9C0D C9           	ret
# file closed: Direcciones.asm
1244  9C0E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C0E              ; ------------------------------------------------------------------------
   2+ 9C0E              ;
   3+ 9C0E              ;	02/04/23
   4+ 9C0E              ;
   5+ 9C0E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C0E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C0E              ;
   8+ 9C0E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C0E              ;
  10+ 9C0E              ;	Modifica: A,BC y DE.
  11+ 9C0E
  12+ 9C0E C5           Genera_coordenadas push bc
  13+ 9C0F E5           	push hl
  14+ 9C10 D5           	push de
  15+ 9C11
  16+ 9C11 2A 9D 89     	ld hl,(Posicion_actual)
  17+ 9C14
  18+ 9C14 7D           	ld a,l
  19+ 9C15 E6 1F        	and $1f
  20+ 9C17 32 A1 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C1A
  22+ 9C1A CD A2 98     	call calcula_tercio
  23+ 9C1D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C1E
  25+ 9C1E 1E 00        	ld e,0
  26+ 9C20 7D           	ld a,l
  27+ 9C21 E6 E0        	and $e0
  28+ 9C23 28 01        	jr z,1F
  29+ 9C25 04           	inc b
  30+ 9C26
  31+ 9C26 04           1 inc b
  32+ 9C27 05           	dec b
  33+ 9C28 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C2A              ;														; _ , salimos.
  35+ 9C2A 1C           3 inc e
  36+ 9C2B D6 20        	sub 32
  37+ 9C2D 20 FB        	jr nz,3B
  38+ 9C2F 10 F5        	djnz 1B
  39+ 9C31
  40+ 9C31 7B           2 ld a,e
  41+ 9C32 32 A2 89     	ld (Coordenada_y),a
  42+ 9C35
  43+ 9C35 D1           	pop de
  44+ 9C36 E1           	pop hl
  45+ 9C37 C1           	pop bc
  46+ 9C38
  47+ 9C38 C9           	ret
  48+ 9C39
  49+ 9C39              ; ------------------------------------------------------------------------
  50+ 9C39              ;	28/05/23
  51+ 9C39              ;
  52+ 9C39              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C39              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C39              ;
  55+ 9C39              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C39              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C39              ;
  58+ 9C39              ;		DE="$120d"
  59+ 9C39              ;
  60+ 9C39              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C39              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C39              ;
  63+ 9C39              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C39
  65+ 9C39              ;	Modifica: A,BC y DE.
  66+ 9C39
  67+ 9C39
  68+ 9C39              Genera_coordenadas_disparo
  69+ 9C39
  70+ 9C39              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C39
  72+ 9C39 7D           	ld a,l
  73+ 9C3A E6 1F        	and $1f
  74+ 9C3C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C3D CD A2 98     	call calcula_tercio
  76+ 9C40 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C41 1E 00        	ld e,0
  78+ 9C43 7D           	ld a,l
  79+ 9C44 E6 E0        	and $e0
  80+ 9C46 28 01        	jr z,1F
  81+ 9C48 04           	inc b
  82+ 9C49 1C           1 inc e
  83+ 9C4A D6 20        	sub 32
  84+ 9C4C 20 FB        	jr nz,1B
  85+ 9C4E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C50 C9           	ret
  87+ 9C51
# file closed: Genera_coordenadas.asm
1245  9C51              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C51
   2+ 9C51
   3+ 9C51              ;   11/8/22
   4+ 9C51              ;
   5+ 9C51              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C51              ;
   7+ 9C51              ;   Mov_obj.asm
   8+ 9C51              ;
   9+ 9C51              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C51              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C51              ;
  12+ 9C51              ;   Codificación:
  13+ 9C51              ;
  14+ 9C51              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C51
  16+ 9C51              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C51
  18+ 9C51 02 40 00     Arriba db 2,%01000000,0
  19+ 9C54 02 80 00     Abajo db 2,%10000000,0
  20+ 9C57 02 20 00     Derecha db 2,%00100000,0
  21+ 9C5A 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C5D 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C61 60 42 60 40
  22+ 9C65 63
  23+ 9C66 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9C6A 22 A3 80 A0
  24+ 9C6E 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9C72 84 A0 83 A0
  25+ 9C76 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9C7A 80 A3 22 A0
  26+ 9C7E 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9C82 40 60 42 60
  27+ 9C86 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9C8A
  29+ 9C8A 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9C8E 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9C92 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9C96 84 00
  32+ 9C98 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9C9C 84 00
  33+ 9C9E 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9CA2 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9CA6 1F 1F 1F 1F
  35+ 9CAA 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9CAE 1F 1F 1F 1F
  35+ 9CB2 1F
  36+ 9CB3 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CB7 2F 2F 2F 2F
  36+ 9CBB 2F 2F
  37+ 9CBD 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CC1 2F 2F 00
  38+ 9CC4
  39+ 9CC4              ; ----- ----- ----- ----- -----
  40+ 9CC4
  41+ 9CC4 A2 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9CC6 9E 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9CC8 5A 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9CCA 57 9C        Indice_mov_Derecha defw Derecha
  45+ 9CCC 54 9C        Indice_mov_Abajo defw Abajo
  46+ 9CCE 51 9C        Indice_mov_Arriba defw Arriba
  47+ 9CD0 8E 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9CD2 92 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9CD4 8A 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9CD6 98 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9CD8 5D 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9CDA              ; ----- ----- ----- ----- -----
  53+ 9CDA
  54+ 9CDA 3A D0 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9CDD A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9CDE 28 02            jr z,1F
  57+ 9CE0 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9CE2 3A D1 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9CE5 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9CE7 32 D1 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9CEA              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9CEA 2A CE 89         ld hl,(Puntero_mov)
  63+ 9CED 7E               ld a,(hl)
  64+ 9CEE 32 D0 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9CF1 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9CF2 22 CE 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9CF5
  68+ 9CF5 3A D2 89     Decoder ld a,(Repetimos_db)
  69+ 9CF8 A7               and a
  70+ 9CF9 20 0C            jr nz,12F
  71+ 9CFB 2A CE 89         ld hl,(Puntero_mov)
  72+ 9CFE 7E               ld a,(hl)
  73+ 9CFF A7               and a
  74+ 9D00 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9D02 E6 0F            and $0f
  76+ 9D04 32 D2 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9D07              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9D07 2A CE 89     12 ld hl,(Puntero_mov)
  79+ 9D0A CB 7E            bit 7,(hl)
  80+ 9D0C 28 03            jr z,2F
  81+ 9D0E CD E8 98         call Mov_down
  82+ 9D11 2A CE 89     2 ld hl, (Puntero_mov)
  83+ 9D14 CB 76            bit 6,(hl)
  84+ 9D16 28 03            jr z,3F
  85+ 9D18 CD 19 99         call Mov_up
  86+ 9D1B 2A CE 89     3 ld hl, (Puntero_mov)
  87+ 9D1E CB 6E            bit 5,(hl)
  88+ 9D20 28 03            jr z,4F
  89+ 9D22 CD 5C 99         call Mov_right
  90+ 9D25 2A CE 89     4 ld hl, (Puntero_mov)
  91+ 9D28 CB 66            bit 4,(hl)
  92+ 9D2A 28 03            jr z,5F
  93+ 9D2C CD 7A 9A         call Mov_left
  94+ 9D2F
  95+ 9D2F              ; ---------- --------- --------- ---------- ----------
  96+ 9D2F
  97+ 9D2F 3A D2 89     5 ld a,(Repetimos_db)
  98+ 9D32 A7               and a
  99+ 9D33 28 07            jr z,6F
 100+ 9D35 3D               dec a
 101+ 9D36 32 D2 89         ld (Repetimos_db),a
 102+ 9D39 28 01            jr z,6f
 103+ 9D3B C9           11 ret
 104+ 9D3C 21 D0 89     6 ld hl,Contador_db_mov
 105+ 9D3F 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D40 2A CE 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D43 23               inc hl
 108+ 9D44 22 CE 89         ld (Puntero_mov),hl
 109+ 9D47 18 F2            jr 11B
 110+ 9D49 2A CC 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D4C 3A D1 89         ld a,(Incrementa_puntero)
 112+ 9D4F 47               ld b,a
 113+ 9D50 23           8 inc hl
 114+ 9D51 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D53 5E               ld e,(hl)
 116+ 9D54 23               inc hl
 117+ 9D55 56               ld d,(hl)
 118+ 9D56 EB               ex de,hl
 119+ 9D57 22 CE 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D5A 18 DF            jr 11B
 121+ 9D5C
 122+ 9D5C              ; ---------- --------- --------- ---------- ----------
 123+ 9D5C              ;
 124+ 9D5C              ;   11/8/22
 125+ 9D5C              ;
 126+ 9D5C              ;   Prepara_Puntero_mov
 127+ 9D5C
 128+ 9D5C E5           Prepara_Puntero_mov push hl
 129+ 9D5D D5               push de
 130+ 9D5E 2A CC 89         ld hl,(Puntero_indice_mov)
 131+ 9D61 5E               ld e,(hl)
 132+ 9D62 23               inc hl
 133+ 9D63 56               ld d,(hl)
 134+ 9D64 EB               ex de,hl
 135+ 9D65 22 CE 89         ld (Puntero_mov),hl
 136+ 9D68 D1               pop de
 137+ 9D69 E1               pop hl
 138+ 9D6A C9               ret
 139+ 9D6B
 140+ 9D6B              ; ---------- --------- --------- ---------- ----------
 141+ 9D6B              ;
 142+ 9D6B              ;   11/8/22
 143+ 9D6B              ;
 144+ 9D6B              ;   Reinicia_el_movimiento
 145+ 9D6B
 146+ 9D6B CD 5C 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9D6E AF               xor a
 148+ 9D6F 32 D0 89         ld (Contador_db_mov),a
 149+ 9D72 32 D1 89         ld (Incrementa_puntero),a
 150+ 9D75 C3 DA 9C         jp Movimiento
 151+ 9D78 C9               ret
 152+ 9D79              ; ---------- --------- --------- ---------- ----------
 153+ 9D79
 154+ 9D79
 155+ 9D79
 156+ 9D79
 157+ 9D79
 158+ 9D79
 159+ 9D79
 160+ 9D79
 161+ 9D79
 162+ 9D79
 163+ 9D79
 164+ 9D79
 165+ 9D79
 166+ 9D79
 167+ 9D79
 168+ 9D79
 169+ 9D79
 170+ 9D79
# file closed: Patrones_de_mov.asm
1246  9D79              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9D79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9D79              ;
   3+ 9D79              ;	3/1/23
   4+ 9D79              ;
   5+ 9D79              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9D79
   7+ 9D79              ;	ADC HL,SP	LD (addr),SP
   8+ 9D79              ;	ADD HL,SP	LD SP,(addr)
   9+ 9D79              ;	ADD IX,SP	LD SP,nn
  10+ 9D79              ; 	ADD IY,SP	LD SP,HL
  11+ 9D79              ;				LD SP,IX
  12+ 9D79              ;	DEC SP		LD SP,IY
  13+ 9D79
  14+ 9D79              ;	EX (SP),HL
  15+ 9D79              ;	EX (SP),IX
  16+ 9D79              ;	EX (SP),IY
  17+ 9D79
  18+ 9D79              ;	INC SP
  19+ 9D79
  20+ 9D79
  21+ 9D79                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 EA 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D9 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A F0 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A EE 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 F0 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 EE 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B EA 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1247  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1248  7FE6
1249  7FE6              	SAVESNA "Pruebas.sna", START
1250  7FE6
1251  7FE6
1252  7FE6
1253  7FE6
# file closed: Banco_de_pruebas.asm
