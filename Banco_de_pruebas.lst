# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 19 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;! Debuggg
  41  AA15 3A 51 89     	ld a,(Contador_de_frames_2)
  42  AA18 FE 01        	cp 1
  43  AA1A 20 09        	jr nz,1F
  44  AA1C 3A 50 89     	ld a,(Contador_de_frames)
  45  AA1F FE 93        	cp $93
  46  AA21 20 02        	jr nz,1F
  47  AA23
  48  AA23 18 FE        	jr $
  49  AA25
  50  AA25 CD 88 8E     1 call Guarda_parametros_DRAW
  51  AA28
  52  AA28              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  53  AA28              ; Pintamos Amadeus.
  54  AA28
  55  AA28 CD 67 8E     	call Pinta_entidades
  56  AA2B CD 59 8E     	call Pinta_Amadeus
  57  AA2E CD 0E 8E     	call Gestiona_entidades
  58  AA31 CD E0 8A     	call Gestiona_Amadeus
  59  AA34
  60  AA34              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA34
  62  AA34 CD 7A 8E     	call Actualiza_relojes
  63  AA37
  64  AA37 CD 94 8E     	call Recupera_parametros_DRAW
  65  AA3A
  66  AA3A FD E1        	pop iy
  67  AA3C DD E1        	pop ix
  68  AA3E F1           	pop af
  69  AA3F C1           	pop bc
  70  AA40 D1           	pop de
  71  AA41 E1           	pop hl
  72  AA42 D9           	exx
  73  AA43 C1           	pop bc
  74  AA44 D1           	pop de
  75  AA45 E1           	pop hl
  76  AA46 08           	ex af,af'
  77  AA47 F1           	pop af
  78  AA48 08           	ex af,af'
  79  AA49 D9           	exx
  80  AA4A
  81  AA4A ED 7B 19 89  	ld sp,(Stack_3)
  82  AA4E
  83  AA4E FB           	ei
  84  AA4F ED 4D        	reti
  85  AA51
  86  AA51              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  87  AA51
  88  AA51              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA51              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA51              ;
   3+ AA51              ;	17/02/23
   4+ AA51              ;
   5+ AA51              ;	Sprites e índices.
   6+ AA51
   7+ AA51              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  89  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 76 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 76 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  90  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 9F 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 9F 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 9F 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 9F 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  91  88C6
  92  88C6              ; ******************************************************************************************************************************************************************************************
  93  88C6              ; Constantes.
  94  88C6              ; ******************************************************************************************************************************************************************************************
  95  88C6              ;
  96  88C6              ; 4/9/23
  97  88C6              ;
  98  88C6              ; Constantes generales.
  99  88C6              ;
 100  88C6
 101  88C6              Sprite_vacio equ $f000
 102  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 103  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 104  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 105  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 106  88C6
 107  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 108  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 109  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 110  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 111  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 112  88C6              ;
 113  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 114  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 115  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 116  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 117  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 118  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 119  88C6
 120  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 121  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 122  88C6
 123  88C6
 124  88C6
 125  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 126  88C6
 127  88C6              ; ******************************************************************************************************************************************************************************************
 128  88C6              ; Variables.
 129  88C6              ; ******************************************************************************************************************************************************************************************
 130  88C6              ;
 131  88C6              ; 28/07/23
 132  88C6              ;
 133  88C6              ; Variables de DRAW. (Motor principal).
 134  88C6              ;
 135  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 136  88C6
 137  88C6 00           Filas db 0												; Filas. [DRAW]
 138  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 139  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 140  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 141  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 142  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 143  88CE
 144  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 145  88CE
 146  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 147  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 148  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 149  88CF 00           Attr db 0												; Atributos de la entidad:
 150  88D0
 151  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 152  88D0              ;
 153  88D0              ;	COLORES: 0 ..... NEGRO
 154  88D0              ;    		 1 ..... AZUL
 155  88D0              ; 			 2 ..... ROJO
 156  88D0              ;			 3 ..... MAGENTA
 157  88D0              ; 			 4 ..... VERDE
 158  88D0              ; 			 5 ..... CIAN
 159  88D0              ;			 6 ..... AMARILLO
 160  88D0              ; 			 7 ..... BLANCO
 161  88D0
 162  88D0 00 00        Indice_Sprite_der defw 0
 163  88D2 00 00        Indice_Sprite_izq defw 0
 164  88D4 00 00        Puntero_DESPLZ_der defw 0
 165  88D6 00 00        Puntero_DESPLZ_izq defw 0
 166  88D8
 167  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 168  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 169  88DB
 170  88DB              ; Variables de objeto. (Características).
 171  88DB
 172  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 173  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 174  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 175  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 176  88DF
 177  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  88E0 00 00 00...  Variables_de_borrado ds 6
 181  88E6
 182  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 183  88E8 00 00        	defw 0
 184  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 185  88EC 00 00 00 00  	db 0,0,0,0
 186  88F0
 187  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  88F0
 189  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 190  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 191  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 192  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 193  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 194  88F1              ;
 195  88F1              ; 														DESCRIPCIÖN:
 196  88F1              ;
 197  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 198  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 199  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 200  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 201  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 202  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 203  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 204  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 205  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 206  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 207  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 208  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 209  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 210  88F1              ;
 211  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 212  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 213  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 214  88F1
 215  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 216  88F1
 217  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 218  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 219  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 220  88F7              ;
 221  88F7              ;
 222  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 223  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 224  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 225  88F8 00           Incrementa_puntero_backup db 0
 226  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 227  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 228  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 229  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 230  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 231  88FD              ;
 232  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 233  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 234  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 235  88FD              ;
 236  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 237  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 238  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 239  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 240  88FD              ;
 241  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 242  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 243  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 244  88FD
 245  88FD
 246  88FD              ; Variables de funcionamiento. [DRAW].
 247  88FD
 248  88FD 00           Columnas db 0
 249  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 250  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 251  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8901
 253  8901              ; variables de control general.
 254  8901
 255  8901 00           Ctrl_2 db 0
 256  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 257  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 258  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 259  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 260  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 261  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 262  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 263  8902              ;
 264  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 265  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 266  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 267  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 268  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 269  8902
 270  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 271  8903
 272  8903              ;! 61 Bytes por entidad.
 273  8903
 274  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 275  8903              ;					         		---------;      ;---------
 276  8903
 277  8903
 278  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 279  8903
 280  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 281  8904
 282  8904              ;														DESCRIPCIÓN:
 283  8904              ;
 284  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 285  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 286  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 287  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 288  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 289  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 290  8904
 291  8904              ;														BIT 3, Recarga de nueva oleada.
 292  8904              ;														BIT 4, Recarga de nueva oleada.
 293  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 294  8904              ;														BIT 6, **** Frame completo.
 295  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 296  8904
 297  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 298  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 299  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 300  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 301  8906
 302  8906 00           Ctrl_3 db 0												; Byte de control de propósito general.
 303  8907
 304  8907              ;														DESCRIPCIÓN:
 305  8907              ;
 306  8907              ;														BIT 0,
 307  8907
 308  8907              ; Gestión de ENTIDADES y CAJAS.
 309  8907
 310  8907 00 00        Puntero_store_caja defw 0
 311  8909 00 00        Puntero_restore_caja defw 0
 312  890B 00 00        Indice_restore_caja defw 0
 313  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 314  890E 00           Numero_parcial_de_entidades db 0
 315  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 316  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 317  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 318  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 319  8911              ;														; _ (Numero_de_malotes)="0".
 320  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 321  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 322  8915              ;														; _ puntero (Indice_entidades).
 323  8915
 324  8915
 325  8915              ;---------------------------------------------------------------------------------------------------------------
 326  8915              ;
 327  8915              ;	2/9/23
 328  8915              ;
 329  8915              ;	Álbumes.
 330  8915
 331  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 332  8917              ;														; _variable para almacenar lo posición del puntero_
 333  8917              ; 														; _de pila, SP.
 334  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 335  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 336  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 337  891B 00 00        Stack_snapshot defw 0
 338  891D 00 00        Stack_snapshot_disparos defw 0
 339  891F
 340  891F 00 00        End_Snapshot defw 0
 341  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 342  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 343  8923              ;														; _el snapshot de los registros del siguiente disparo.
 344  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 345  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 346  8925 00 00        End_Snapshot_1 defw 0
 347  8927 00 00        End_Snapshot_disparos_1 defw 0
 348  8929 00 00        End_Snapshot_2 defw 0
 349  892B 00 00        End_Snapshot_disparos_2 defw 0
 350  892D 00 00        End_Snapshot_3 defw 0
 351  892F 00 00        End_Snapshot_disparos_3 defw 0
 352  8931
 353  8931 00 00        Puntero_indice_album_de_fotos defw 0
 354  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 355  8935
 356  8935 00 00        Puntero_indice_End_Snapshot defw 0
 357  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 358  8939 00 00        Puntero_de_End_Snapshot defw 0
 359  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 360  893D
 361  893D              ;---------------------------------------------------------------------------------------------------------------
 362  893D
 363  893D              ; Gestión de Disparos.
 364  893D
 365  893D 00           Numero_de_disparotes db 0
 366  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 367  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 368  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 369  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 370  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 371  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 372  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 373  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 374  8945              ;														; _produzca colisión.
 375  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 376  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 377  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 378  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 379  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 380  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 381  894D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 382  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 383  8950
 384  8950              ;---------------------------------------------------------------------------------------------------------------
 385  8950
 386  8950              ; Relojes y temporizaciones.
 387  8950
 388  8950 00           Contador_de_frames db 0
 389  8951 00           Contador_de_frames_2 db 0
 390  8952
 391  8952 04           Clock_explosion db 4
 392  8953 1E           Clock_Entidades_en_curso db 30
 393  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 394  8955              ;														; Repite la oleada de entidades.
 395  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 396  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 397  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 398  8958
 399  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 400  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 401  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 402  895B
 403  895B              ;---------------------------------------------------------------------------------------------------------------
 404  895B
 405  895B              ; Gestión de NIVELES.
 406  895B
 407  895B 00           Nivel db 0												; Nivel actual del juego.
 408  895C 00 00        Puntero_indice_NIVELES defw 0
 409  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 410  8960              ; 														; _ que definen el NIVEL.
 411  8960              ; Y todo comienza aquí .....
 412  8960              ;
 413  8960              ; Rutina principal *************************************************************************************************************************************************************************
 414  8960              ;
 415  8960              ;	14/11/22
 416  8960
 417  8960              START
 418  8960
 419  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 420  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 421  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 422  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 423  8969 F3           	DI
 424  896A
 425  896A 3E 07        	ld a,%00000111
 426  896C CD A3 99     	call Cls
 427  896F
 428  896F CD 78 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 429  8972
 430  8972              ; INICIALIZACIÓN.
 431  8972
 432  8972 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 433  8975
 434  8975 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 435  8978
 436  8978 CD A0 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 437  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 438  897B CD B6 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 439  897E              ;													     ; _ malotes antes de guardar ninguna foto.
 440  897E              ; ----------
 441  897E
 442  897E CD 28 8D     	call Restore_entidad
 443  8981
 444  8981 21 0E 89     	ld hl,Numero_parcial_de_entidades
 445  8984 46           	ld b,(hl)
 446  8985 04           	inc b
 447  8986 05           	dec b
 448  8987 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 449  8989
 450  8989              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 451  8989              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 452  8989              ;	Pintamos el resto de entidades:
 453  8989
 454  8989              ;	INICIA ENTIDADES !!!!!
 455  8989
 456  8989 C5           1 push bc  												; Guardo el contador de entidades.
 457  898A CD 6D 8B     	call Inicia_entidad
 458  898D C1           	pop bc
 459  898E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 460  8990
 461  8990              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 462  8990              ; (Esto se dá cuando se inicia una nueva oleada).
 463  8990
 464  8990 3A 03 89     	ld a,(Ctrl_1)
 465  8993 CB 5F        	bit 3,a
 466  8995 20 15        	jr nz,5F											; Loop
 467  8997
 468  8997              ; 	INICIA AMADEUS !!!!!
 469  8997
 470  8997 CD 4F 8D     3 call Restore_Amadeus
 471  899A CD A5 8C     	call Inicia_Puntero_objeto
 472  899D CD 96 93     	call Draw
 473  89A0 CD A0 7F     	call Guarda_foto_registros
 474  89A3 CD DB 8D     	call Guarda_datos_de_borrado_Amadeus
 475  89A6
 476  89A6 11 9E 85     	ld de,Amadeus_db
 477  89A9 CD 61 8D     	call Store_Amadeus
 478  89AC
 479  89AC              ; 	INICIA DISPAROS !!!!!
 480  89AC
 481  89AC              ;	call Inicia_Puntero_Disparo_Entidades
 482  89AC              ;	call Inicia_Puntero_Disparo_Amadeus
 483  89AC
 484  89AC              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 485  89AC
 486  89AC CD A0 8B     5 call Inicia_punteros_de_cajas
 487  89AF CD 28 8D     	call Restore_entidad
 488  89B2
 489  89B2 3A 03 89     	ld a,(Ctrl_1)
 490  89B5 CB 5F        	bit 3,a
 491  89B7 28 07        	jr z,6F
 492  89B9
 493  89B9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 494  89B9
 495  89B9 21 03 89     	ld hl,Ctrl_1
 496  89BC CB 9E        	res 3,(hl)
 497  89BE 18 04        	jr Main
 498  89C0
 499  89C0
 500  89C0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 501  89C0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 502  89C0              ; _ para situarnos en el siguiente album.
 503  89C0
 504  89C0 CD E7 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 505  89C3 F3           	di
 506  89C4
 507  89C4              ; ------------------------------------
 508  89C4
 509  89C4              Main
 510  89C4              ;
 511  89C4              ;	3/8/23
 512  89C4
 513  89C4 3E 01            ld a,1
 514  89C6 D3 FE        	out ($fe),a											; Azul.
 515  89C8
 516  89C8 FB           	ei
 517  89C9
 518  89C9 3A 53 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 519  89CC 47           	ld b,a
 520  89CD 3A 50 89     	ld a,(Contador_de_frames)
 521  89D0 B8           	cp b
 522  89D1 20 18        	jr nz,13F
 523  89D3
 524  89D3 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 525  89D6 47           	ld b,a
 526  89D7 3A 0F 89     	ld a,(Entidades_en_curso)
 527  89DA B8           	cp b
 528  89DB 28 0E        	jr z,13F
 529  89DD 30 0C        	jr nc,13F
 530  89DF
 531  89DF 3C           	inc a
 532  89E0 32 0F 89     	ld (Entidades_en_curso),a
 533  89E3
 534  89E3 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 535  89E6
 536  89E6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 537  89E6              ;! _ IMPREDECIBLE !!!!
 538  89E6
 539  89E6 C6 64        	add 100
 540  89E8 32 53 89     	ld (Clock_Entidades_en_curso),a
 541  89EB
 542  89EB              ; Habilita disparos.
 543  89EB
 544  89EB 21 55 89     13 ld hl,Disparo_Amadeus
 545  89EE 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 546  89F1 CD 67 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 547  89F4
 548  89F4 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 549  89F7 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 550  89FA CD 67 9D     	call Habilita_disparos
 551  89FD
 552  89FD              ; COLISIONES.
 553  89FD
 554  89FD CD 78 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 555  8A00
 556  8A00              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 557  8A00              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 558  8A00              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 559  8A00
 560  8A00 AF           	xor a
 561  8A01 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 562  8A04
 563  8A04 CD A0 8B     	call Inicia_punteros_de_cajas
 564  8A07 CD 28 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 565  8A0A              ; 														; _ en DRAW.
 566  8A0A 3A C6 88     	ld a,(Filas)
 567  8A0D A7           	and a
 568  8A0E 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 569  8A10 CD 3A 8D     	call Incrementa_punteros_de_cajas
 570  8A13 18 F2        	jr 12B
 571  8A15
 572  8A15              ; ---------------------------------------------------------------------------------------
 573  8A15
 574  8A15 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 575  8A18 47               ld b,a
 576  8A19 A7           	and a
 577  8A1A 20 14        	jr nz,11F
 578  8A1C
 579  8A1C 21 03 89     	ld hl,Ctrl_1
 580  8A1F CB 66        	bit 4,(hl)
 581  8A21 C2 B1 8A     	jp nz,16F
 582  8A24
 583  8A24 21 03 89     	ld hl,Ctrl_1
 584  8A27 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 585  8A29
 586  8A29 3A 50 89     	ld a,(Contador_de_frames)
 587  8A2C 3C           	inc a
 588  8A2D 32 54 89     	ld (Activa_recarga_cajas),a
 589  8A30
 590  8A30              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 591  8A30
 592  8A30 3A 0F 89     11 ld a,(Entidades_en_curso)
 593  8A33 A7           	and a
 594  8A34 CA B1 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 595  8A37 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 596  8A38
 597  8A38              ; Código que ejecutamos con cada entidad:
 598  8A38              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 599  8A38
 600  8A38 C5           15 push bc 												; Nº de entidades en curso.
 601  8A39
 602  8A39              ; Impacto ???
 603  8A39
 604  8A39 3A DF 88     	ld a,(Impacto)
 605  8A3C A7           	and a
 606  8A3D 28 32        	jr z,8F
 607  8A3F
 608  8A3F              ; Hay Impacto en esta entidad.
 609  8A3F
 610  8A3F 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 611  8A42 35           	dec (hl)
 612  8A43 20 66        	jr nz,17F
 613  8A45
 614  8A45              ;! Velocidad de la animación de la explosión.
 615  8A45
 616  8A45 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 617  8A47              ;														; _,(velocidad de la explosión).
 618  8A47
 619  8A47              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 620  8A47 18 FE        	jr $
 621  8A49
 622  8A49 CD FB 8D     	call Repone_datos_de_borrado
 623  8A4C CD 41 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 624  8A4F
 625  8A4F
 626  8A4F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 627  8A4F
 628  8A4F 3A 01 89     	ld a,(Ctrl_2)
 629  8A52 CB 4F        	bit 1,a
 630  8A54 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 631  8A56
 632  8A56              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 633  8A56
 634  8A56 3A CE 88     	ld a,(CTRL_DESPLZ)
 635  8A59 A7           	and a
 636  8A5A 20 08        	jr nz,18F
 637  8A5C
 638  8A5C 21 84 84     	ld hl,Indice_Explosion_2x2-2
 639  8A5F 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 640  8A62 18 06        	jr 19F
 641  8A64
 642  8A64 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 643  8A67 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 644  8A6A
 645  8A6A 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 646  8A6D CB CE        	set 1,(hl)
 647  8A6F 18 22        	jr 7F
 648  8A71
 649  8A71              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 650  8A71              ; _con las coordenadas de la entidad almacenada en DRAW.
 651  8A71
 652  8A71 3A 03 89     8 ld a,(Ctrl_1)
 653  8A74 CB 57        	bit 2,a
 654  8A76 28 1B        	jr z,7F
 655  8A78
 656  8A78 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 657  8A7B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 658  8A7C              ;														; E contiene la coordenada_X del disparo.
 659  8A7C 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 660  8A7F              ;														; H FILA, (Coordenada_y de la entidad).
 661  8A7F A7           	and a
 662  8A80 ED 52        	sbc hl,de
 663  8A82
 664  8A82 CD AF 92     	call Determina_resultado_comparativa
 665  8A85
 666  8A85 78           	ld a,b
 667  8A86 A7           	and a
 668  8A87 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 669  8A89
 670  8A89              ; ----- ----- -----
 671  8A89
 672  8A89 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 673  8A8B 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 674  8A8E
 675  8A8E 21 03 89     	ld hl,Ctrl_1
 676  8A91 CB 96        	res 2,(hl)
 677  8A93
 678  8A93 CD 09 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 679  8A96
 680  8A96 3A F0 88     	ld a,(Ctrl_0)
 681  8A99 CB 67        	bit 4,a
 682  8A9B 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 683  8A9D
 684  8A9D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 685  8A9D              ; [[[
 686  8A9D CD C3 8D     	call Detecta_disparo_entidad
 687  8AA0              ; ]]]
 688  8AA0
 689  8AA0 CD 81 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 690  8AA3 CD C9 8D     	call Guarda_datos_de_borrado
 691  8AA6
 692  8AA6 21 F0 88     	ld hl,Ctrl_0
 693  8AA9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 694  8AAB
 695  8AAB CD ED 8C     17 call Store_Restore_cajas
 696  8AAE
 697  8AAE C1           	pop bc
 698  8AAF 10 87        	djnz 15B
 699  8AB1
 700  8AB1              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 701  8AB1              ; Hemos gestionado todas las unidades.
 702  8AB1              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 703  8AB1
 704  8AB1              ;	ld hl,Ctrl_1
 705  8AB1              ;	res 2,(hl)
 706  8AB1
 707  8AB1 CD E7 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 708  8AB4              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 709  8AB4              ;														; _ interrupción.
 710  8AB4              ; ----------------------------------------
 711  8AB4
 712  8AB4 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 713  8AB7 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 714  8AB9 CA C4 89     	jp z,Main
 715  8ABC
 716  8ABC 3A 50 89     	ld a,(Contador_de_frames)
 717  8ABF 47           	ld b,a
 718  8AC0 3A 54 89     	ld a,(Activa_recarga_cajas)
 719  8AC3 B8           	cp b
 720  8AC4 28 08        	jr z,20F
 721  8AC6
 722  8AC6 21 03 89     	ld hl,Ctrl_1
 723  8AC9 CB E6        	set 4,(hl)
 724  8ACB C3 C4 89     	jp Main
 725  8ACE
 726  8ACE 21 03 89     20 ld hl,Ctrl_1
 727  8AD1 CB A6        	res 4,(hl)
 728  8AD3
 729  8AD3 F3           	di
 730  8AD4
 731  8AD4 3A 50 89     	ld a,(Contador_de_frames)
 732  8AD7
 733  8AD7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 734  8AD7              ;! _ IMPREDECIBLE !!!!
 735  8AD7
 736  8AD7 C6 0A        	add 10
 737  8AD9 32 53 89     	ld (Clock_Entidades_en_curso),a
 738  8ADC
 739  8ADC C3 75 89     	jp 4B
 740  8ADF
 741  8ADF C9           	ret
 742  8AE0
 743  8AE0              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 744  8AE0
 745  8AE0              Gestiona_Amadeus
 746  8AE0
 747  8AE0 3E 04            ld a,4
 748  8AE2 D3 FE        	out ($fe),a											; Azul.
 749  8AE4
 750  8AE4 CD 4F 8D     	call Restore_Amadeus
 751  8AE7
 752  8AE7              ;! Activa/desactiva impacto con Amadeus.
 753  8AE7
 754  8AE7 3A DF 88     	ld a,(Impacto)
 755  8AEA A7           	and a
 756  8AEB 20 FE        	jr nz,$
 757  8AED
 758  8AED CD 5A 8B     	call Mov_Amadeus
 759  8AF0
 760  8AF0 3A F0 88     	ld a,(Ctrl_0)
 761  8AF3 CB 67        	bit 4,a
 762  8AF5 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 763  8AF7
 764  8AF7 CD 81 8B     	call Guarda_foto_entidad_a_pintar
 765  8AFA CD DB 8D     	call Guarda_datos_de_borrado_Amadeus
 766  8AFD
 767  8AFD 21 F0 88     14 ld hl,Ctrl_0
 768  8B00 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 769  8B02
 770  8B02 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 771  8B05 CD 61 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 772  8B08
 773  8B08              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 774  8B08
 775  8B08              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 776  8B08
 777  8B08              ;	call Calcula_numero_de_disparotes
 778  8B08
 779  8B08 C9           	ret
 780  8B09
 781  8B09              ; --------------------------------------------------------------------------------------------------------------
 782  8B09              ;
 783  8B09              ;	27/05/23
 784  8B09
 785  8B09              Mov_obj
 786  8B09
 787  8B09 3A 01 89     	ld a,(Ctrl_2)
 788  8B0C CB 4F        	bit 1,a
 789  8B0E 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 790  8B10
 791  8B10              ; Explosión:
 792  8B10
 793  8B10 3A 02 89     	ld a,(Frames_explosion)
 794  8B13 A7           	and a
 795  8B14 20 11        	jr nz,4F
 796  8B16
 797  8B16              ; Una alimaña menos!!!!!!!!!1
 798  8B16
 799  8B16 CD 6A 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 800  8B19 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 801  8B1C 35           	dec (hl)
 802  8B1D 21 0F 89     	ld hl,Entidades_en_curso
 803  8B20 35           	dec (hl)
 804  8B21 21 0D 89     	ld hl,Numero_de_entidades
 805  8B24 35           	dec (hl)
 806  8B25 18 32        	jr 3F
 807  8B27
 808  8B27              ; -----
 809  8B27
 810  8B27              ;	`Movemos´ la explosión.
 811  8B27
 812  8B27 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 813  8B2A 23           	inc hl
 814  8B2B 23           	inc hl
 815  8B2C 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 816  8B2F CD 9F 8C     	call Extrae_address
 817  8B32 22 CA 88     	ld (Puntero_objeto),hl
 818  8B35
 819  8B35 21 02 89     	ld hl,Frames_explosion
 820  8B38 35           	dec (hl)
 821  8B39
 822  8B39              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 823  8B39 18 1E        	jr 3F
 824  8B3B
 825  8B3B AF           2 xor a
 826  8B3C 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 827  8B3F
 828  8B3F              ; Movemos Entidades malignas.
 829  8B3F
 830  8B3F CD 12 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 831  8B42
 832  8B42 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 833  8B45 CB 67        	bit 4,a
 834  8B47 C8           	ret z
 835  8B48
 836  8B48              ; Ha habido desplazamiento de la entidad maligna.
 837  8B48              ; Ha llegado a zona de AMADEUS ???
 838  8B48
 839  8B48 3A CD 88     	ld a,(Coordenada_y)
 840  8B4B FE 14        	cp $14
 841  8B4D D4 3D 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 842  8B50              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 843  8B50              ; ---------
 844  8B50
 845  8B50 CD 88 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 846  8B53 CD FB 8D     	call Repone_datos_de_borrado
 847  8B56 CD 41 8C     	call Limpia_Variables_de_borrado
 848  8B59
 849  8B59 C9           3 ret													; _de la misma.
 850  8B5A
 851  8B5A              ; --------------------------------------------------------------------------------------------------------------
 852  8B5A              ;
 853  8B5A              ;	29/1/23
 854  8B5A
 855  8B5A              Mov_Amadeus
 856  8B5A
 857  8B5A CD 8C 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 858  8B5D
 859  8B5D 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 860  8B60 CB 67        	bit 4,a
 861  8B62 C8           	ret z
 862  8B63
 863  8B63              ; ---------
 864  8B63
 865  8B63 CD 88 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 866  8B66 CD EB 8D     	call Repone_datos_de_borrado_Amadeus
 867  8B69 CD 41 8C     	call Limpia_Variables_de_borrado
 868  8B6C
 869  8B6C C9           	ret
 870  8B6D
 871  8B6D              ; -----------------------------------------------------------------------------------
 872  8B6D
 873  8B6D CD A5 8C     Inicia_entidad	call Inicia_Puntero_objeto
 874  8B70 CD B7 99     	call Recompone_posicion_inicio
 875  8B73 CD 96 93     	call Draw
 876  8B76 CD A0 7F     	call Guarda_foto_registros
 877  8B79 CD C9 8D     	call Guarda_datos_de_borrado
 878  8B7C F3           	di
 879  8B7D CD ED 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 880  8B80 C9           	ret
 881  8B81
 882  8B81              ; --------------------------------------------------------------------------------------------------------------
 883  8B81              ;
 884  8B81              ;	31/08/23
 885  8B81              ;
 886  8B81              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 887  8B81              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 888  8B81
 889  8B81              Guarda_foto_entidad_a_pintar
 890  8B81
 891  8B81              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 892  8B81
 893  8B81 CD 96 93     	call Draw
 894  8B84 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 895  8B87 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 896  8B88
 897  8B88              ; --------------------------------------------------------------------------------------------------------------
 898  8B88              ;
 899  8B88              ;	19/9/23
 900  8B88
 901  8B88 21 C6 88     Prepara_var_pintado ld hl,Filas
 902  8B8B 11 E6 88     	ld de,Variables_de_pintado
 903  8B8E 01 08 00     	ld bc,8
 904  8B91 ED B0        	ldir
 905  8B93 C9           	ret
 906  8B94
 907  8B94              ; --------------------------------------------------------------------------------------------------------------
 908  8B94
 909  8B94 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 910  8B97 11 C6 88     	ld de,Filas
 911  8B9A 01 08 00     	ld bc,8
 912  8B9D ED B0        	ldir
 913  8B9F C9           	ret
 914  8BA0
 915  8BA0              ; *************************************************************************************************************************************************************
 916  8BA0              ;
 917  8BA0              ; 8/1/23
 918  8BA0              ;
 919  8BA0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 920  8BA0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 921  8BA0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 922  8BA0
 923  8BA0              ; Destruye HL y DE !!!!!
 924  8BA0
 925  8BA0              Inicia_punteros_de_cajas
 926  8BA0
 927  8BA0 21 8C 85     	ld hl,Indice_de_cajas
 928  8BA3 CD 9F 8C         call Extrae_address
 929  8BA6 22 07 89         ld (Puntero_store_caja),hl
 930  8BA9 21 8E 85     	ld hl,Indice_de_cajas+2
 931  8BAC 22 0B 89     	ld (Indice_restore_caja),hl
 932  8BAF CD 9F 8C     	call Extrae_address
 933  8BB2 22 09 89     	ld (Puntero_restore_caja),hl
 934  8BB5 C9               ret
 935  8BB6
 936  8BB6              ; ---------------------------------------------------------------
 937  8BB6              ;
 938  8BB6              ;	9/8/23
 939  8BB6              ;
 940  8BB6              ;	Inicialización y gestión de álbumes de fotos y cajas.
 941  8BB6
 942  8BB6              Inicia_punteros_de_albumes_y_malotes
 943  8BB6
 944  8BB6 21 EC 84     	ld hl,Indice_album_de_fotos
 945  8BB9 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 946  8BBC CD 9F 8C     	call Extrae_address
 947  8BBF 22 1B 89     	ld (Stack_snapshot),hl
 948  8BC2
 949  8BC2 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 950  8BC5 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 951  8BC8 CD 9F 8C     	call Extrae_address
 952  8BCB 22 1D 89     	ld (Stack_snapshot_disparos),hl
 953  8BCE
 954  8BCE 21 FC 84     	ld hl,Indice_End_Snapshot
 955  8BD1 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 956  8BD4 CD 9F 8C     	call Extrae_address
 957  8BD7 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 958  8BDA
 959  8BDA 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 960  8BDD 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 961  8BE0 CD 9F 8C     	call Extrae_address
 962  8BE3 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 963  8BE6
 964  8BE6 C9           	ret
 965  8BE7
 966  8BE7              ;	23/9/23
 967  8BE7
 968  8BE7              Avanza_puntero_de_album_de_fotos_y_malotes
 969  8BE7
 970  8BE7              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 971  8BE7
 972  8BE7              ; Estamos en el último álbum del índice???.
 973  8BE7
 974  8BE7 F3           	di
 975  8BE8 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 976  8BEB 01 F2 84     	ld bc,Indice_album_de_fotos+6
 977  8BEE A7           	and a
 978  8BEF ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 979  8BF1 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 980  8BF3 FB           	ei
 981  8BF4
 982  8BF4 21 03 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 983  8BF7 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 984  8BF9 76           	halt
 985  8BFA C9           	ret
 986  8BFB
 987  8BFB 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
 988  8BFE 23           	inc hl
 989  8BFF 23           	inc hl
 990  8C00 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 991  8C03 CD 9F 8C     	call Extrae_address
 992  8C06 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 993  8C09
 994  8C09 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
 995  8C0C 23           	inc hl
 996  8C0D 23           	inc hl
 997  8C0E 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 998  8C11 CD 9F 8C     	call Extrae_address
 999  8C14 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1000  8C17
1001  8C17 FB           	ei
1002  8C18 C9           	ret
1003  8C19
1004  8C19              ; *************************************************************************************************************************************************************
1005  8C19              ;
1006  8C19              ; 8/1/23
1007  8C19              ;
1008  8C19              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1009  8C19
1010  8C19 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1011  8C1C 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1012  8C1F C9           	ret
1013  8C20 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1014  8C23 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1015  8C26 C9           	ret
1016  8C27
1017  8C27              ; -------------------------------------------------------------------------------------------------------------
1018  8C27              ;
1019  8C27              ; 21/9/23
1020  8C27              ;
1021  8C27
1022  8C27              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1023  8C27
1024  8C27              Limpia_album_Amadeus
1025  8C27
1026  8C27 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1027  8C2A 7E           	ld a,(hl)
1028  8C2B A7           	and a
1029  8C2C C8           	ret z
1030  8C2D
1031  8C2D 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1032  8C30 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1033  8C33 01 0B 00     	ld bc,11
1034  8C36 AF           	xor a
1035  8C37 77           	ld (hl),a
1036  8C38 ED B0        	ldir
1037  8C3A
1038  8C3A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1039  8C3D 22 23 89     	ld (End_Snapshot_Amadeus),hl
1040  8C40
1041  8C40 C9           	ret
1042  8C41
1043  8C41 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1044  8C44 11 E1 88     	ld de,Variables_de_borrado+1
1045  8C47 01 05 00     	ld bc,5
1046  8C4A AF           	xor a
1047  8C4B 77           	ld (hl),a
1048  8C4C ED B0        	ldir
1049  8C4E C9           	ret
1050  8C4F
1051  8C4F              ; -------------------------------------------------------------------------------------------------------------
1052  8C4F              ;
1053  8C4F              ; 8/9/23
1054  8C4F              ;
1055  8C4F
1056  8C4F              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1057  8C4F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1058  8C4F
1059  8C4F              Calcula_numero_de_malotes
1060  8C4F
1061  8C4F 21 00 70     	ld hl,Album_de_fotos
1062  8C52 EB           	ex de,hl
1063  8C53 2A 1F 89     	ld hl,(End_Snapshot)
1064  8C56
1065  8C56 7C           	ld a,h
1066  8C57 A7           	and a
1067  8C58 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1068  8C5A
1069  8C5A 06 00        4 ld b,0
1070  8C5C 7D           	ld a,l
1071  8C5D 93           	sub e
1072  8C5E 28 07        	jr z,1F
1073  8C60
1074  8C60              ; Nº de malotes no es "0".
1075  8C60
1076  8C60 D6 06        2 sub 6
1077  8C62 04           	inc b
1078  8C63 A7           	and a
1079  8C64 20 FA        	jr nz,2B
1080  8C66 78           	ld a,b
1081  8C67
1082  8C67 32 10 89     1 ld (Numero_de_malotes),a
1083  8C6A C9           	ret
1084  8C6B
1085  8C6B              ; -------------------------------------------------------------------------------------------------------------
1086  8C6B              ;
1087  8C6B              ; 8/9/23
1088  8C6B              ;
1089  8C6B
1090  8C6B              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1091  8C6B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1092  8C6B
1093  8C6B              Calcula_malotes_Amadeus
1094  8C6B
1095  8C6B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1096  8C6E EB           	ex de,hl
1097  8C6F 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1098  8C72
1099  8C72 7C           	ld a,h
1100  8C73 A7           	and a
1101  8C74 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1102  8C76
1103  8C76 06 00        	ld b,0
1104  8C78 7D           	ld a,l
1105  8C79 93           	sub e
1106  8C7A 28 07        	jr z,1F
1107  8C7C
1108  8C7C              ; Nº de malotes no es "0".
1109  8C7C
1110  8C7C D6 06        2 sub 6
1111  8C7E 04           	inc b
1112  8C7F A7           	and a
1113  8C80 20 FA        	jr nz,2B
1114  8C82 78           	ld a,b
1115  8C83
1116  8C83 32 10 89     1 ld (Numero_de_malotes),a
1117  8C86 C9           	ret
1118  8C87
1119  8C87              ; -------------------------------------------------------------------------------------------------------------
1120  8C87              ;
1121  8C87              ; 28/2/23
1122  8C87              ;
1123  8C87
1124  8C87              Calcula_numero_de_disparotes
1125  8C87
1126  8C87 21 50 71     	ld hl,Album_de_fotos_disparos
1127  8C8A EB           	ex de,hl
1128  8C8B 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1129  8C8E
1130  8C8E 06 00        	ld b,0
1131  8C90 7D           	ld a,l
1132  8C91 93           	sub e
1133  8C92 28 07        	jr z,1F
1134  8C94
1135  8C94              ; Nº de malotes no es "0".
1136  8C94
1137  8C94 D6 06        2 sub 6
1138  8C96 04           	inc b
1139  8C97 A7           	and a
1140  8C98 20 FA        	jr nz,2B
1141  8C9A 78           	ld a,b
1142  8C9B
1143  8C9B 32 3D 89     1 ld (Numero_de_disparotes),a
1144  8C9E C9           	ret
1145  8C9F
1146  8C9F              ; *************************************************************************************************************************************************************
1147  8C9F              ;
1148  8C9F              ; 20/10/22
1149  8C9F              ;
1150  8C9F              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1151  8C9F              ;
1152  8C9F              ; Destruye el puntero y DE !!!!!
1153  8C9F
1154  8C9F 5E           Extrae_address ld e,(hl)
1155  8CA0 23           	inc hl
1156  8CA1 56           	ld d,(hl)
1157  8CA2 2B           	dec hl
1158  8CA3 EB           	ex de,hl
1159  8CA4 C9           	ret
1160  8CA5
1161  8CA5              ; *************************************************************************************************************************************************************
1162  8CA5              ;
1163  8CA5              ;	7/2/23
1164  8CA5              ;
1165  8CA5              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1166  8CA5              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1167  8CA5              ;
1168  8CA5              ;   Destruye HL y BC !!!!!,
1169  8CA5              ;
1170  8CA5              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1171  8CA5              ;					"0" ..... Izquierda.
1172  8CA5
1173  8CA5              Inicia_Puntero_objeto
1174  8CA5
1175  8CA5 3A DA 88     	ld a,(Cuad_objeto)
1176  8CA8 E6 01        	and 1
1177  8CAA F5           	push af
1178  8CAB CC C9 8C     	call z,Inicia_puntero_objeto_izq
1179  8CAE F1           	pop af
1180  8CAF 28 2B        	jr z,1F
1181  8CB1 CD B6 8C     	call Inicia_puntero_objeto_der
1182  8CB4 18 26        	jr 1F
1183  8CB6
1184  8CB6              ; Arrancamos desde la parte izquierda de la pantalla.
1185  8CB6              ; Iniciamos (Indice_Sprite_der).
1186  8CB6
1187  8CB6 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1188  8CB9 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1189  8CBC CD 9F 8C     	call Extrae_address
1190  8CBF 22 CA 88     	ld (Puntero_objeto),hl
1191  8CC2
1192  8CC2 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1193  8CC5 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1194  8CC8 C9           	ret
1195  8CC9
1196  8CC9              ; Arrancamos desde la parte derecha de la pantalla.
1197  8CC9              ; Iniciamos (Indice_Sprite_izq).
1198  8CC9
1199  8CC9 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1200  8CCC 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1201  8CCF CD 9F 8C     	call Extrae_address
1202  8CD2 22 CA 88     	ld (Puntero_objeto),hl
1203  8CD5
1204  8CD5 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1205  8CD8 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1206  8CDB C9           	ret
1207  8CDC
1208  8CDC              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1209  8CDC
1210  8CDC 21 40 83     1 ld hl,Amadeus
1211  8CDF ED 4B CA 88  	ld bc,(Puntero_objeto)
1212  8CE3 B7 ED 42     	sub hl,bc
1213  8CE6 C0           	ret nz
1214  8CE7 21 F0 88     	ld hl,Ctrl_0
1215  8CEA CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1216  8CEC C9           	ret 												; _de nuestra nave en los extremos.
1217  8CED
1218  8CED              ; *************************************************************************************************************************************************************
1219  8CED              ;
1220  8CED              ;	14/5/23
1221  8CED              ;
1222  8CED              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1223  8CED              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1224  8CED
1225  8CED              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1226  8CED              ;	_de la 2ª y 3ª entidad respectivamente.
1227  8CED
1228  8CED              Store_Restore_cajas
1229  8CED
1230  8CED E5           	push hl
1231  8CEE D5           	push de
1232  8CEF C5            	push bc
1233  8CF0
1234  8CF0              ;	STORE !!!!!
1235  8CF0              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1236  8CF0
1237  8CF0 21 C6 88     	ld hl,Filas
1238  8CF3 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1239  8CF7 01 3D 00     	ld bc,61
1240  8CFA ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1241  8CFC
1242  8CFC              ; 	Entidad_sospechosa. 20/4/23
1243  8CFC
1244  8CFC 3A DF 88     	ld a,(Impacto)
1245  8CFF A7           	and a
1246  8D00 28 0C        	jr z,1F
1247  8D02
1248  8D02 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1249  8D05 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1250  8D08 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1251  8D09 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1252  8D0B 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1253  8D0E
1254  8D0E              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1255  8D0E
1256  8D0E 2A 09 89     1 ld hl,(Puntero_restore_caja)
1257  8D11 7E           	ld a,(hl)
1258  8D12 A7           	and a
1259  8D13 F5           	push af
1260  8D14 28 08        	jr z,2F
1261  8D16
1262  8D16 11 C6 88     	ld de,Filas
1263  8D19 01 3D 00     	ld bc,61
1264  8D1C ED B0        	ldir
1265  8D1E
1266  8D1E CD 3A 8D     2 call Incrementa_punteros_de_cajas
1267  8D21
1268  8D21 F1           	pop af
1269  8D22 28 EA        	jr z,1B
1270  8D24
1271  8D24 C1           	pop bc
1272  8D25 D1           	pop de
1273  8D26 E1           	pop hl
1274  8D27
1275  8D27 C9           	ret
1276  8D28
1277  8D28              ; **************************************************************************************************
1278  8D28              ;
1279  8D28              ;	12/05/23
1280  8D28              ;
1281  8D28              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1282  8D28
1283  8D28 E5           Restore_entidad push hl
1284  8D29 D5           	push de
1285  8D2A C5            	push bc
1286  8D2B
1287  8D2B 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1288  8D2E 11 C6 88     	ld de,Filas
1289  8D31 01 3D 00     	ld bc,61
1290  8D34 ED B0        	ldir
1291  8D36
1292  8D36 C1           	pop bc
1293  8D37 D1           	pop de
1294  8D38 E1           	pop hl
1295  8D39 C9           	ret
1296  8D3A
1297  8D3A              ; **************************************************************************************************
1298  8D3A              ;
1299  8D3A              ;	08/05/23
1300  8D3A              ;
1301  8D3A              ;	Incrementamos los dos punteros de entidades. (+1).
1302  8D3A
1303  8D3A              Incrementa_punteros_de_cajas
1304  8D3A
1305  8D3A 2A 09 89     	ld hl,(Puntero_restore_caja)
1306  8D3D 22 07 89     	ld (Puntero_store_caja),hl
1307  8D40 2A 0B 89     	ld hl,(Indice_restore_caja)
1308  8D43 23           	inc hl
1309  8D44 23           	inc hl
1310  8D45 22 0B 89     	ld (Indice_restore_caja),hl
1311  8D48 CD 9F 8C         call Extrae_address
1312  8D4B 22 09 89         ld (Puntero_restore_caja),hl
1313  8D4E C9               ret
1314  8D4F
1315  8D4F              ; **************************************************************************************************
1316  8D4F              ;
1317  8D4F              ;	25/01/23
1318  8D4F              ;
1319  8D4F              ;	Restore_Amadeus
1320  8D4F              ;
1321  8D4F              ;	Cargamos en DRAW los parámetros de Amadeus.
1322  8D4F              ;
1323  8D4F
1324  8D4F E5           Restore_Amadeus	push hl
1325  8D50 D5           	push de
1326  8D51 C5            	push bc
1327  8D52 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1328  8D55 11 C6 88     	ld de,Filas
1329  8D58 01 3D 00     	ld bc,61
1330  8D5B ED B0        	ldir
1331  8D5D C1           	pop bc
1332  8D5E D1           	pop de
1333  8D5F E1           	pop hl
1334  8D60 C9           	ret
1335  8D61
1336  8D61              ; *************************************************************************************************************************************************************
1337  8D61              ;
1338  8D61              ;	29/04/23
1339  8D61              ;
1340  8D61              ;	Store_Amadeus
1341  8D61              ;
1342  8D61              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1343  8D61              ;
1344  8D61              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1345  8D61              ;
1346  8D61              ;	DESTRUYE: HL y BC y DE.
1347  8D61
1348  8D61 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1349  8D64 01 3D 00     	ld bc,61
1350  8D67 ED B0        	ldir
1351  8D69 C9           	ret
1352  8D6A
1353  8D6A              ; -----------------------------------------------------------
1354  8D6A              ;
1355  8D6A              ;	27/04/23
1356  8D6A              ;
1357  8D6A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1358  8D6A              ;
1359  8D6A              ;	Destruye: HL,BC,DE,A
1360  8D6A
1361  8D6A 21 C6 88     Borra_datos_entidad ld hl,Filas
1362  8D6D 01 3C 00     	ld bc,60
1363  8D70 AF           	xor a
1364  8D71 77           	ld (hl),a
1365  8D72 11 C7 88     	ld de,Filas+1
1366  8D75 ED B0        	ldir
1367  8D77 C9           	ret
1368  8D78
1369  8D78              ; -----------------------------------------------------------
1370  8D78
1371  8D78              ; Teclado.
1372  8D78
1373  8D78 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1374  8D7A DB FE        	in a,($fe)
1375  8D7C E6 01        	and $01
1376  8D7E 28 02        	jr z,1f
1377  8D80 18 F6        	jr Pulsa_ENTER
1378  8D82 C9           1 ret
1379  8D83
1380  8D83              ; **************************************************************************************************
1381  8D83              ;
1382  8D83              ; Temporización.
1383  8D83
1384  8D83              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1385  8D83              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1386  8D83              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1387  8D83              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1388  8D83
1389  8D83              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1390  8D83              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1391  8D83              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1392  8D83
1393  8D83              ; A partir de $4f61 no hace falta DELAY.
1394  8D83
1395  8D83              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1396  8D83
1397  8D83 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1398  8D86 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1399  8D87 78           	LD A,B
1400  8D88 A7           	AND A
1401  8D89 20 FB        	JR NZ,wait
1402  8D8B C9           	RET
1403  8D8C
1404  8D8C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1405  8D8C              ;
1406  8D8C              ;	5/3/23
1407  8D8C              ;
1408  8D8C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1409  8D8C
1410  8D8C              Movimiento_Amadeus
1411  8D8C
1412  8D8C              ; Disparo.
1413  8D8C
1414  8D8C 3A 55 89     	ld a,(Disparo_Amadeus)
1415  8D8F A7           	and a
1416  8D90 20 02        	jr nz,1F
1417  8D92 18 15        	jr 2F
1418  8D94
1419  8D94 3E F7        1 ld a,$f7													; "5" para disparar.
1420  8D96 DB FE        	in a,($fe)
1421  8D98 E6 10        	and $10
1422  8D9A
1423  8D9A F5           	push af
1424  8D9B CC A0 8E     	call z,Genera_disparo
1425  8D9E F1           	pop af
1426  8D9F 20 08        	jr nz,2F
1427  8DA1
1428  8DA1 3A 55 89     	ld a,(Disparo_Amadeus)
1429  8DA4 EE 01        	xor 1
1430  8DA6 32 55 89     	ld (Disparo_Amadeus),a
1431  8DA9
1432  8DA9 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1433  8DAB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1434  8DAD E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1435  8DAF CC 71 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1436  8DB2
1437  8DB2 3E F7        	ld a,$f7
1438  8DB4 DB FE        	in a,($fe)
1439  8DB6 E6 01        	and $01
1440  8DB8 C8           	ret z
1441  8DB9
1442  8DB9 3E F7        	ld a,$f7
1443  8DBB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1444  8DBD E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1445  8DBF CC 53 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1446  8DC2 C9           	ret
1447  8DC3
1448  8DC3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1449  8DC3              ;
1450  8DC3              ;	Rutina provisional para que los malotes cagen balas.
1451  8DC3
1452  8DC3              Detecta_disparo_entidad
1453  8DC3
1454  8DC3 3A 58 89     	ld a,(Disparo_entidad)
1455  8DC6 A7           	and a
1456  8DC7 C8           	ret z
1457  8DC8
1458  8DC8              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1459  8DC8
1460  8DC8              ;	ld a,$7f				; Detecta SPACE.
1461  8DC8              ;	in a,($fe)
1462  8DC8              ;	and 1
1463  8DC8              ;	ret nz
1464  8DC8
1465  8DC8              ;	call Genera_disparo
1466  8DC8 C9           	ret
1467  8DC9
1468  8DC9              ; ----------------------------------------------------------------------
1469  8DC9              ;
1470  8DC9              ;	8/9/23
1471  8DC9
1472  8DC9              Guarda_datos_de_borrado
1473  8DC9
1474  8DC9 F3           	di
1475  8DCA
1476  8DCA 2A 1B 89     	ld hl,(Stack_snapshot)
1477  8DCD
1478  8DCD 2B           	dec hl
1479  8DCE 7E           	ld a,(hl)
1480  8DCF A7           	and a
1481  8DD0 C8           	ret z										; Salimos si es álbum está vacío.
1482  8DD1
1483  8DD1 11 E5 88     	ld de,Variables_de_borrado+5
1484  8DD4 01 06 00     	ld bc,6
1485  8DD7 ED B8        	lddr
1486  8DD9
1487  8DD9 FB           	ei
1488  8DDA
1489  8DDA C9           	ret
1490  8DDB
1491  8DDB              ; ----------------------------------------------------------------------
1492  8DDB              ;
1493  8DDB              ;	8/9/23
1494  8DDB
1495  8DDB 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1496  8DDE 2B            	dec hl
1497  8DDF 7E           	ld a,(hl)
1498  8DE0 A7           	and a
1499  8DE1 C8           	ret z										; Salimos si es álbum está vacío.
1500  8DE2
1501  8DE2 11 E5 88     	ld de,Variables_de_borrado+5
1502  8DE5 01 06 00     	ld bc,6
1503  8DE8 ED B8        	lddr
1504  8DEA C9           	ret
1505  8DEB
1506  8DEB              ; ----------------------------------------------------------------------
1507  8DEB              ;
1508  8DEB              ;	9/9/23
1509  8DEB
1510  8DEB              Repone_datos_de_borrado_Amadeus
1511  8DEB
1512  8DEB 21 E0 88     	ld hl,Variables_de_borrado
1513  8DEE 11 A0 72     	ld de,Album_de_fotos_Amadeus
1514  8DF1 01 06 00     	ld bc,6
1515  8DF4 ED B0        	ldir
1516  8DF6
1517  8DF6 EB           	ex de,hl
1518  8DF7 22 23 89     	ld (End_Snapshot_Amadeus),hl
1519  8DFA
1520  8DFA C9           	ret
1521  8DFB
1522  8DFB              ; ----------------------------------------------------------------------
1523  8DFB              ;
1524  8DFB              ;	18/9/23
1525  8DFB              ;
1526  8DFB
1527  8DFB              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1528  8DFB              ;	_ Album_de_fotos correspondiente.
1529  8DFB
1530  8DFB              ;	DI.
1531  8DFB
1532  8DFB              Repone_datos_de_borrado
1533  8DFB
1534  8DFB F3           	di
1535  8DFC
1536  8DFC ED 5B 1B 89  	ld de,(Stack_snapshot)
1537  8E00 21 E0 88     	ld hl,Variables_de_borrado
1538  8E03 01 06 00     	ld bc,6
1539  8E06 ED B0        	ldir
1540  8E08
1541  8E08 EB           	ex de,hl
1542  8E09 22 1B 89     	ld (Stack_snapshot),hl
1543  8E0C
1544  8E0C FB           	ei
1545  8E0D
1546  8E0D C9           	ret
1547  8E0E
1548  8E0E              ; ----------------------------------------------------------------------
1549  8E0E              ;
1550  8E0E              ;	11/8/23
1551  8E0E
1552  8E0E              Gestiona_entidades
1553  8E0E
1554  8E0E 3E 02        	ld a,2
1555  8E10 D3 FE            out ($fe),a											; Rojo.
1556  8E12
1557  8E12              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1558  8E12              ; _ , no gestionamos los álbumes de fotos.
1559  8E12
1560  8E12 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1561  8E15 01 EC 84     	ld bc,Indice_album_de_fotos
1562  8E18 A7           	and a
1563  8E19 ED 42        	sbc hl,bc
1564  8E1B
1565  8E1B 28 FE        	jr z,$
1566  8E1D C8           	ret z
1567  8E1E
1568  8E1E              ;	call Extrae_foto_disparos
1569  8E1E              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1570  8E1E
1571  8E1E CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1572  8E21
1573  8E21              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1574  8E21
1575  8E21 3A 03 89     	ld a,(Ctrl_1)
1576  8E24 CB 6F        	bit 5,a
1577  8E26 20 22        	jr nz,1F
1578  8E28
1579  8E28              ; No hemos terminado de guardar el último FRAME.
1580  8E28
1581  8E28 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1582  8E2B 2B           	dec hl
1583  8E2C 2B           	dec hl
1584  8E2D 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1585  8E30
1586  8E30 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1587  8E33 2B           	dec hl
1588  8E34 2B           	dec hl
1589  8E35 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1590  8E38 CD 9F 8C     	call Extrae_address
1591  8E3B 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1592  8E3E
1593  8E3E CD 9F 8C     	call Extrae_address
1594  8E41
1595  8E41              ; Esta vacío este album???
1596  8E41
1597  8E41 24           	inc h
1598  8E42 25           	dec h
1599  8E43 28 05        	jr z,1F
1600  8E45
1601  8E45              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1602  8E45
1603  8E45 22 1B 89     	ld (Stack_snapshot),hl
1604  8E48 18 09        	jr 2F
1605  8E4A
1606  8E4A              ; FRAME completo.
1607  8E4A
1608  8E4A 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1609  8E4D CD 9F 8C     	call Extrae_address
1610  8E50 22 1B 89     	ld (Stack_snapshot),hl
1611  8E53
1612  8E53              ;	En este punto:
1613  8E53
1614  8E53              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1615  8E53              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1616  8E53
1617  8E53 21 03 89     2 ld hl,Ctrl_1
1618  8E56 CB AE        	res 5,(hl)
1619  8E58
1620  8E58 C9           	ret
1621  8E59
1622  8E59              ; -----------------------------------------------------------------------------------
1623  8E59
1624  8E59              Pinta_Amadeus
1625  8E59
1626  8E59 3E 06        	ld a,6
1627  8E5B D3 FE            out ($fe),a										; Amarillo
1628  8E5D
1629  8E5D CD 6B 8C        	call Calcula_malotes_Amadeus
1630  8E60 CD 26 97     	call Extrae_foto_Amadeus
1631  8E63 CD 27 8C     	call Limpia_album_Amadeus
1632  8E66
1633  8E66 C9           	ret
1634  8E67
1635  8E67              Pinta_entidades
1636  8E67
1637  8E67 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1638  8E6A 01 EC 84     	ld bc,Indice_album_de_fotos
1639  8E6D A7           	and a
1640  8E6E ED 42        	sbc hl,bc
1641  8E70
1642  8E70 28 FE        	jr z,$
1643  8E72 C8           	ret z
1644  8E73
1645  8E73              ; Pintamos siempre que esté completo Album_de_fotos.
1646  8E73
1647  8E73 CD 4F 8C     	call Calcula_numero_de_malotes
1648  8E76 CD A4 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1649  8E79
1650  8E79 C9           	ret
1651  8E7A
1652  8E7A              ; -----------------------------------------------------------------------------------
1653  8E7A
1654  8E7A              Actualiza_relojes
1655  8E7A
1656  8E7A 21 50 89     	ld hl,Contador_de_frames
1657  8E7D 7E           	ld a,(hl)
1658  8E7E FE FF        	cp $ff
1659  8E80 20 04        	jr nz,1F
1660  8E82 34           	inc (hl)
1661  8E83 21 51 89     	ld hl,Contador_de_frames_2
1662  8E86 34           1 inc (hl)											; 0 - 255
1663  8E87 C9           	ret
1664  8E88
1665  8E88              ; ---------------------------------------------------------------
1666  8E88              ;
1667  8E88              ;	27/9/23
1668  8E88
1669  8E88              Guarda_parametros_DRAW
1670  8E88
1671  8E88 21 C6 88     	ld hl,Filas
1672  8E8B 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1673  8E8E 01 3D 00     	ld bc,61
1674  8E91 ED B0        	ldir
1675  8E93 C9           	ret
1676  8E94
1677  8E94              Recupera_parametros_DRAW
1678  8E94
1679  8E94 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1680  8E97 11 C6 88     	ld de,Filas
1681  8E9A 01 3D 00     	ld bc,61
1682  8E9D ED B0        	ldir
1683  8E9F C9           	ret
1684  8EA0
1685  8EA0              ; ---------------------------------------------------------------
1686  8EA0
1687  8EA0
1688  8EA0              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EA0              ; ******************************************************************************************************************************************************************************************
   2+ 8EA0              ;
   3+ 8EA0              ;   21/07/23
   4+ 8EA0              ;
   5+ 8EA0              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EA0              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EA0              ;
   8+ 8EA0              ;
   9+ 8EA0              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EA0              ;
  11+ 8EA0              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EA0              ;               _ hacen las entidades hacia abajo.
  13+ 8EA0              ;
  14+ 8EA0              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EA0              ;
  16+ 8EA0              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EA0              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EA0              ;
  19+ 8EA0              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EA0              ;           _ la bala.
  21+ 8EA0              ;
  22+ 8EA0              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EA0              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EA0              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EA0              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EA0              ;           _ en el momento de generarse la bala)).
  27+ 8EA0
  28+ 8EA0              Genera_disparo
  29+ 8EA0
  30+ 8EA0              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EA0              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EA0              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EA0              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EA0              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EA0              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EA0              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EA0
  38+ 8EA0              ; Exclusiones:
  39+ 8EA0
  40+ 8EA0 3A DE 88         ld a,(Vel_down)
  41+ 8EA3 47               ld b,a
  42+ 8EA4 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EA7 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EA8 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EA9 3A FD 88         ld a,(Columnas)
  46+ 8EAC 47               ld b,a
  47+ 8EAD 3A C7 88         ld a,(Columns)
  48+ 8EB0 B8               cp b
  49+ 8EB1 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EB2
  51+ 8EB2              ; ----- ----- -----
  52+ 8EB2
  53+ 8EB2 3A F0 88         ld a,(Ctrl_0)
  54+ 8EB5 CB 77            bit 6,a
  55+ 8EB7 20 06            jr nz,14F
  56+ 8EB9
  57+ 8EB9 3A CD 88         ld a,(Coordenada_y)
  58+ 8EBC FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EBE D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EBF
  61+ 8EBF 21 00 80     14 ld hl,Indice_disparo
  62+ 8EC2 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8EC5 4F               ld c,a
  64+ 8EC6 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EC8              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EC8              ;                                            ""        ""       "f9", B="1"
  67+ 8EC8              ;                                            ""        ""       "fb", B="2"
  68+ 8EC8              ;                                            ""        ""       "fb", B="3"
  69+ 8EC8 A7               and a
  70+ 8EC9 28 10            jr z,1F
  71+ 8ECB E6 01            and 1
  72+ 8ECD C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8ECE
  74+ 8ECE 79               ld a,c
  75+ 8ECF 16 F9            ld d,$f9
  76+ 8ED1 23           2 inc hl
  77+ 8ED2 23               inc hl
  78+ 8ED3 04               inc b
  79+ 8ED4 BA               cp d
  80+ 8ED5 28 04            jr z,1F
  81+ 8ED7 14               inc d
  82+ 8ED8 14               inc d
  83+ 8ED9 18 F6            jr 2B
  84+ 8EDB
  85+ 8EDB CD 9F 8C     1 call Extrae_address
  86+ 8EDE E5               push hl
  87+ 8EDF FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EE1 DD 21 6C 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EE5
  90+ 8EE5              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EE5              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EE5
  93+ 8EE5 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EE8 CB 77            bit 6,a
  95+ 8EEA 20 04            jr nz,19F
  96+ 8EEC
  97+ 8EEC AF               xor a
  98+ 8EED 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EF0
 100+ 8EF0 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8EF3 FE 02            cp 2
 102+ 8EF5 38 66            jr c,3F
 103+ 8EF7 28 64            jr z,3F
 104+ 8EF9
 105+ 8EF9              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EF9
 107+ 8EF9 E6 01            and 1
 108+ 8EFB 28 30            jr z,4F
 109+ 8EFD
 110+ 8EFD              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EFD              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EFD              ;
 113+ 8EFD              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EFD              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EFD              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EFD
 117+ 8EFD 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8F00
 119+ 8F00              ;   Amadeus o entidad ???.
 120+ 8F00
 121+ 8F00 3A F0 88         ld a,(Ctrl_0)
 122+ 8F03 CB 77            bit 6,a
 123+ 8F05 28 0A            jr z,8F
 124+ 8F07
 125+ 8F07              ; 	Dispara Amadeus.
 126+ 8F07
 127+ 8F07 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F09 CD 95 96         call PreviousScan
 129+ 8F0C CD 95 96         call PreviousScan
 130+ 8F0F
 131+ 8F0F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F0F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F0F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F0F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F0F
 136+ 8F0F 18 11            jr 10F
 137+ 8F11
 138+ 8F11              ; 	Dispara Entidad.
 139+ 8F11
 140+ 8F11 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F14              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F14
 143+ 8F14              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F14              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F14
 146+ 8F14 C5               push bc
 147+ 8F15 06 10            ld b,16
 148+ 8F17 CD 86 96     9 call NextScan
 149+ 8F1A 10 FB            djnz 9B
 150+ 8F1C C1               pop bc
 151+ 8F1D CD 87 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F20 18 06            jr 17F
 153+ 8F22
 154+ 8F22              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F22              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F22              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F22              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F22
 159+ 8F22 CD 87 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F25 CD FC 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F28              ;                                                      ; _al generar el disparo.
 162+ 8F28
 163+ 8F28              ; 	LLegados a este punto tendremos:
 164+ 8F28              ;
 165+ 8F28              ;       Puntero_objeto_disparo en IY.
 166+ 8F28              ;       Rutinas_de_impresion en IX.
 167+ 8F28              ;       Puntero_de_impresion en HL.
 168+ 8F28              ;       Impacto/Dirección en BC.
 169+ 8F28
 170+ 8F28 CD 8F 8F     17 call Almacena_disparo
 171+ 8F2B 18 52            jr 6F                                             ; RET.
 172+ 8F2D
 173+ 8F2D              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F2D              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F2D              ;
 176+ 8F2D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F2D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F2D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F2D
 180+ 8F2D 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8F30
 182+ 8F30              ;   Amadeus o entidad ???.
 183+ 8F30
 184+ 8F30 3A F0 88         ld a,(Ctrl_0)
 185+ 8F33 CB 77            bit 6,a
 186+ 8F35 28 0A            jr z,11F
 187+ 8F37
 188+ 8F37              ; 	Dispara Amadeus.
 189+ 8F37
 190+ 8F37 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F39 CD 95 96         call PreviousScan
 192+ 8F3C CD 95 96         call PreviousScan
 193+ 8F3F
 194+ 8F3F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F3F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F3F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F3F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F3F
 199+ 8F3F 18 11            jr 13F
 200+ 8F41
 201+ 8F41              ; 	Dispara Entidad.
 202+ 8F41
 203+ 8F41 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F44              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F44
 206+ 8F44              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F44              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F44
 209+ 8F44 C5               push bc
 210+ 8F45 06 10            ld b,16
 211+ 8F47 CD 86 96     12 call NextScan
 212+ 8F4A 10 FB            djnz 12B
 213+ 8F4C C1               pop bc
 214+ 8F4D
 215+ 8F4D CD 80 8F         call Ajusta_disparo_parte_derecha
 216+ 8F50 18 06            jr 18F
 217+ 8F52
 218+ 8F52              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F52              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F52              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F52              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F52
 223+ 8F52 CD 80 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F55 CD FC 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F58              ;                                                       ; _al generar el disparo.
 226+ 8F58
 227+ 8F58              ; LLegados a este punto tendremos:
 228+ 8F58              ;
 229+ 8F58              ;       Puntero_objeto_disparo en IY.
 230+ 8F58              ;       Rutinas_de_impresion en IX.
 231+ 8F58              ;       Puntero_de_impresion en HL.
 232+ 8F58              ;       Impacto/Dirección en BC.
 233+ 8F58
 234+ 8F58 CD 8F 8F     18 call Almacena_disparo
 235+ 8F5B 18 22            jr 6F                                               ; RET.
 236+ 8F5D
 237+ 8F5D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F5D
 239+ 8F5D 28 11        3 jr z,5F
 240+ 8F5F
 241+ 8F5F              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F5F              ;
 243+ 8F5F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F5F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F5F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F5F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F5F
 248+ 8F5F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F5F              ;	   ""        ""       "f9", B="1"
 250+ 8F5F              ;	   ""        ""       "fb", B="2"
 251+ 8F5F              ; 	   ""        ""       "fb", B="3"
 252+ 8F5F
 253+ 8F5F 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8F62 CD 86 96     	call NextScan
 255+ 8F65
 256+ 8F65              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F65              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F65              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F65              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F65
 261+ 8F65 CD 87 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F68
 263+ 8F68              ; 	No se produce impacto. B="$80"
 264+ 8F68              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F68
 266+ 8F68 01 80 80         ld bc,$8080
 267+ 8F6B
 268+ 8F6B              ; 	LLegados a este punto tendremos:
 269+ 8F6B              ;
 270+ 8F6B              ;       Puntero_objeto_disparo en IY.
 271+ 8F6B              ;       Rutinas_de_impresion en IX.
 272+ 8F6B              ;       Puntero_de_impresion en HL.
 273+ 8F6B              ;       Impacto/Dirección en BC.
 274+ 8F6B
 275+ 8F6B CD 8F 8F         call Almacena_disparo
 276+ 8F6E 18 0F            jr 6F                                           ; RET.
 277+ 8F70
 278+ 8F70              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F70              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F70              ;
 281+ 8F70              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F70              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F70              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F70              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F70
 286+ 8F70 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F73 CD 86 96     	call NextScan
 288+ 8F76
 289+ 8F76              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F76              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F76              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F76              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F76
 294+ 8F76 CD 80 8F         call Ajusta_disparo_parte_derecha
 295+ 8F79
 296+ 8F79              ; 	No se produce impacto. B="$80"
 297+ 8F79              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F79
 299+ 8F79 01 80 80     15 ld bc,$8080
 300+ 8F7C
 301+ 8F7C              ; 	LLegados a este punto tendremos:
 302+ 8F7C              ;
 303+ 8F7C              ;       Puntero_objeto_disparo en IY.
 304+ 8F7C              ;       Rutinas_de_impresion en IX.
 305+ 8F7C              ;       Puntero_de_impresion en HL.
 306+ 8F7C              ;       Impacto/Dirección en BC.
 307+ 8F7C
 308+ 8F7C CD 8F 8F         call Almacena_disparo
 309+ 8F7F
 310+ 8F7F C9           6 ret
 311+ 8F80
 312+ 8F80              ; ----------------------------------------------------------------
 313+ 8F80              ;
 314+ 8F80              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F80              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F80              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F80
 318+ 8F80 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F81 FE 02            cp 2
 320+ 8F83 38 01            jr c,1F
 321+ 8F85 23               inc hl
 322+ 8F86 C9           1 ret
 323+ 8F87
 324+ 8F87 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F88 FE 01        	cp 1
 326+ 8F8A 20 01        	jr nz,1F
 327+ 8F8C 2B           	dec hl
 328+ 8F8D 2B           1 dec hl
 329+ 8F8E C9               ret
 330+ 8F8F
 331+ 8F8F              ; ----------------------------------------------------------------
 332+ 8F8F              ;
 333+ 8F8F              ;   25/02/23
 334+ 8F8F              ;
 335+ 8F8F              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F8F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F8F              ;
 338+ 8F8F              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F8F              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F8F
 341+ 8F8F              Almacena_disparo
 342+ 8F8F
 343+ 8F8F E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F90 F1               pop af
 345+ 8F91 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F92
 347+ 8F92 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F93 E6 01            and 1
 349+ 8F95 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F97              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F97              ; 	Dispara AMADEUS.
 352+ 8F97
 353+ 8F97              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F97              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F97              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F97              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F97
 358+ 8F97 C5               push bc
 359+ 8F98 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F9B 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F9E A7               and a
 362+ 8F9F ED 42            sbc hl,bc
 363+ 8FA1 CC 20 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FA4 C1               pop bc
 365+ 8FA5 28 54            jr z,4F
 366+ 8FA7
 367+ 8FA7 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FAA 23               inc hl
 369+ 8FAB 23               inc hl
 370+ 8FAC 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FAF              ;                                                   ; _ Disparo_(+1).
 372+ 8FAF 18 18            jr 2F
 373+ 8FB1
 374+ 8FB1              ; Dispara una entidad.
 375+ 8FB1
 376+ 8FB1 C5           1 push bc
 377+ 8FB2 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FB5 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FB8 A7               and a
 380+ 8FB9 ED 42            sbc hl,bc
 381+ 8FBB CC 19 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FBE C1               pop bc
 383+ 8FBF 28 3A            jr z,4F
 384+ 8FC1
 385+ 8FC1 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FC4 23               inc hl
 387+ 8FC5 23               inc hl
 388+ 8FC6 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FC9              ;                                                   ; _ Disparo_(+1).
 390+ 8FC9 CD 9F 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FCC              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FCC              ;
 393+ 8FCC              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FCC              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FCC              ;                                                     Puntero_de_impresion en HL.
 396+ 8FCC              ;                                                     Impacto/Dirección en BC.
 397+ 8FCC
 398+ 8FCC 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FCD 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FCE 23               inc hl                                          ; _ al siguiente.
 401+ 8FCF A7               and a
 402+ 8FD0 20 C0            jr nz,3B
 403+ 8FD2
 404+ 8FD2 08               ex af,af
 405+ 8FD3 ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FD7 F9               ld sp,hl
 407+ 8FD8
 408+ 8FD8 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FDA F5               push af                                         ; Puntero de impresión.
 410+ 8FDB FD E5            push iy                                         ; Puntero objeto.
 411+ 8FDD C5               push bc                                         ; Control.
 412+ 8FDE
 413+ 8FDE ED 7B 15 89      ld sp,(Stack)
 414+ 8FE2
 415+ 8FE2              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FE2
 417+ 8FE2 21 03 89     	ld hl,Ctrl_1
 418+ 8FE5 CB C6        	set 0,(hl)
 419+ 8FE7
 420+ 8FE7 DD E5        	push ix
 421+ 8FE9 E1               pop hl
 422+ 8FEA F5               push af
 423+ 8FEB DD E1            pop ix
 424+ 8FED
 425+ 8FED CD A0 7F     	call Guarda_foto_registros
 426+ 8FF0
 427+ 8FF0 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FF3 CB 86        	res 0,(hl)
 429+ 8FF5
 430+ 8FF5              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FF5              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FF5
 433+ 8FF5 CD 20 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FF8 CD 19 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FFB
 436+ 8FFB C9           4 ret
 437+ 8FFC
 438+ 8FFC              ; ----------------------------------------------------------------
 439+ 8FFC              ;
 440+ 8FFC              ;   4/3/23
 441+ 8FFC              ;
 442+ 8FFC              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FFC              ;   _ al generarse el disparo.
 444+ 8FFC              ;
 445+ 8FFC              ;       "$80" ..... No se produce colisión.
 446+ 8FFC              ;       "$81" ..... Se produce colisión.
 447+ 8FFC              ;
 448+ 8FFC              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FFC              ;         _ que forman el disparo.
 450+ 8FFC
 451+ 8FFC
 452+ 8FFC              Comprueba_Colision
 453+ 8FFC
 454+ 8FFC              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FFC
 456+ 8FFC FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FFE E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FFF
 459+ 8FFF CD 35 90         call Modifica_H_Velocidad_disparo
 460+ 9002
 461+ 9002 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9003 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9005 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9007
 465+ 9007 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9009 CD 25 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 900C
 468+ 900C 7B               ld a,e
 469+ 900D E6 01            and 1
 470+ 900F 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9011              ;                                                  ; _ para activar IMPACTO.
 472+ 9011 E1               pop hl
 473+ 9012 E5               push hl
 474+ 9013 CD 86 96         call NextScan
 475+ 9016
 476+ 9016 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9017 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9019 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 901B              ;                                                  ; _ 2º scanline si esto es así.
 480+ 901B 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 901D CD 25 90         call Bucle_2
 482+ 9020
 483+ 9020 43           1 ld b,e
 484+ 9021 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9022 FD E1            pop iy
 486+ 9024 C9               ret
 487+ 9025
 488+ 9025              ; ---------- ----------
 489+ 9025
 490+ 9025 06 02        Bucle_2 ld b,2
 491+ 9027 FD 7E 00     2 ld a,(iy)
 492+ 902A A6               and (hl)
 493+ 902B 28 02            jr z,1F
 494+ 902D 1E 81            ld e,$81
 495+ 902F 23           1 inc hl
 496+ 9030 FD 23            inc iy
 497+ 9032 10 F3            djnz 2B
 498+ 9034 C9               ret
 499+ 9035
 500+ 9035              ; ---------- ----------
 501+ 9035              ;
 502+ 9035              ;   21/7/23
 503+ 9035
 504+ 9035              Modifica_H_Velocidad_disparo
 505+ 9035
 506+ 9035 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9038 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 903A D0               ret nc                                         ; _ incrementamos H.
 509+ 903B 24               inc h
 510+ 903C
 511+ 903C C9               ret
 512+ 903D
 513+ 903D              ; -------------------------------------------------------------------------------------------------------------
 514+ 903D              ;
 515+ 903D              ;   11/04/23
 516+ 903D              ;
 517+ 903D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 903D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 903D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 903D              ;
 521+ 903D              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 903D
 523+ 903D              Compara_coordenadas_X
 524+ 903D
 525+ 903D              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 903D              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 903D
 528+ 903D              ; Preparamos registros:
 529+ 903D
 530+ 903D 21 CC 88         ld hl,Filas+6
 531+ 9040 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9041 23               inc hl
 533+ 9042 23               inc hl
 534+ 9043 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9044 43               ld b,e
 536+ 9045
 537+ 9045 21 DA 88         ld hl,Filas+20
 538+ 9048 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9049 21 4A 89         ld hl,Coordenadas_X_Entidad
 540+ 904C CD 68 92         call Guarda_coordenadas_X
 541+ 904F
 542+ 904F              ; Preparamos registros:
 543+ 904F
 544+ 904F 21 A4 85         ld hl,Amadeus_db+6
 545+ 9052 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9053 23               inc hl
 547+ 9054 23               inc hl
 548+ 9055 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9056 7B               ld a,e
 550+ 9057 08               ex af,af'
 551+ 9058 21 B2 85         ld hl,Amadeus_db+20
 552+ 905B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 905C 21 47 89         ld hl,Coordenadas_X_Amadeus
 554+ 905F CD 68 92         call Guarda_coordenadas_X
 555+ 9062
 556+ 9062              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9062              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9062
 559+ 9062 04               inc b
 560+ 9063 05               dec b
 561+ 9064 28 04            jr z,1F
 562+ 9066 06 03            ld b,3
 563+ 9068 18 02            jr 2F
 564+ 906A 06 02        1 ld b,2
 565+ 906C 08           2 ex af,af'
 566+ 906D 3C               inc a
 567+ 906E 3D               dec a
 568+ 906F 28 04            jr z,5F
 569+ 9071 0E 03            ld c,3
 570+ 9073 18 02            jr 6F
 571+ 9075 0E 02        5 ld c,2
 572+ 9077 79           6 ld a,c
 573+ 9078 08               ex af,af'
 574+ 9079 11 4A 89         ld de,Coordenadas_X_Entidad
 575+ 907C 1A           4 ld a,(de)
 576+ 907D 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 9080 BE           3 cp (hl)
 578+ 9081 28 0E            jr z,7F
 579+ 9083 23               inc hl
 580+ 9084 0D               dec c
 581+ 9085 20 F9            jr nz,3B
 582+ 9087 13               inc de
 583+ 9088 08               ex af,af'
 584+ 9089 4F               ld c,a
 585+ 908A 08               ex af,af'
 586+ 908B 10 EF            djnz 4B
 587+ 908D
 588+ 908D              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 908D
 590+ 908D CD A4 92     8 call Limpia_Coordenadas_X
 591+ 9090 C9               ret
 592+ 9091
 593+ 9091 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9093 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9096 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9099 CB D6            set 2,(hl)
 597+ 909B 18 F0            jr 8B
 598+ 909D
 599+ 909D              ; -----------------------------------------------------------------------
 600+ 909D              ;
 601+ 909D              ;   17/04/23
 602+ 909D              ;
 603+ 909D
 604+ 909D              Detecta_colision_nave_entidad
 605+ 909D
 606+ 909D              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 909D
 608+ 909D 2A C8 88         ld hl,(Posicion_actual)
 609+ 90A0 CD E1 95         call Calcula_puntero_de_impresion
 610+ 90A3
 611+ 90A3              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90A3              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90A3
 614+ 90A3 DD E5            push ix
 615+ 90A5 E1               pop hl
 616+ 90A6 E5               push hl
 617+ 90A7
 618+ 90A7              ; ----- ----- -----
 619+ 90A7 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90A9 06 0A            ld b,10
 621+ 90AB CD DB 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90AE 7B               ld a,e
 623+ 90AF FE 05            cp 5
 624+ 90B1 38 0E            jr c,3F
 625+ 90B3
 626+ 90B3              ; LLegados a este punto:
 627+ 90B3              ;
 628+ 90B3              ;   HAY COLISIÓN !!!!!.
 629+ 90B3              ;
 630+ 90B3              ;   .db (Impacto) de Amadeus a "1".
 631+ 90B3              ;   SET el bit3 de (Impacto2).
 632+ 90B3              ;
 633+ 90B3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90B3
 635+ 90B3 21 B7 85         ld hl,Amadeus_db+25
 636+ 90B6 36 01            ld (hl),1
 637+ 90B8 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90BB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90BD CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90BF 18 18            jr 1F
 641+ 90C1
 642+ 90C1              ; -----
 643+ 90C1
 644+ 90C1 E1           3 pop hl
 645+ 90C2 CD 86 96         call NextScan
 646+ 90C5 E5               push hl
 647+ 90C6 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90C7 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90C9 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90CB 30 0C            jr nc,1F
 651+ 90CD              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90CD 10 DC            djnz 2B
 653+ 90CF
 654+ 90CF              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90CF
 656+ 90CF              ; LLegados a este punto:
 657+ 90CF              ;
 658+ 90CF              ;   NO HAY COLISIÓN !!!!!.
 659+ 90CF              ;
 660+ 90CF              ;   .db (Impacto) de Amadeus a "0".
 661+ 90CF              ;   RES el bit2 de (Impacto2).
 662+ 90CF              ;
 663+ 90CF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90CF              ;   Lo colocamos a "0".
 665+ 90CF
 666+ 90CF 21 42 89         ld hl,Impacto2
 667+ 90D2 CB 96            res 2,(hl)
 668+ 90D4 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90D7 36 00            ld (hl),0
 670+ 90D9
 671+ 90D9 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90DA C9               ret
 673+ 90DB
 674+ 90DB               ; ---------- ----------
 675+ 90DB
 676+ 90DB C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90DC 3A C7 88         ld a,(Columns)
 678+ 90DF 47               ld b,a
 679+ 90E0 FD 7E 00     2 ld a,(iy)
 680+ 90E3 BE               cp (hl)
 681+ 90E4 28 01            jr z,1F
 682+ 90E6
 683+ 90E6 1C               inc e
 684+ 90E7
 685+ 90E7 23           1 inc hl
 686+ 90E8 FD 23            inc iy
 687+ 90EA 10 F4            djnz 2B
 688+ 90EC C1               pop bc
 689+ 90ED C9               ret
 690+ 90EE
 691+ 90EE              ; -------------------------------------------------------------------------------------------------------------
 692+ 90EE              ;
 693+ 90EE              ;   13/03/23
 694+ 90EE              ;
 695+ 90EE              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90EE              ;
 697+ 90EE              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90EE
 699+ 90EE 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90F1 7E               ld a,(hl)
 701+ 90F2 A7               and a
 702+ 90F3 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90F4
 704+ 90F4 44               ld b,h
 705+ 90F5 4D               ld c,l
 706+ 90F6 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 90F9 E5               push hl
 708+ 90FA A7               and a
 709+ 90FB ED 42            sbc hl,bc
 710+ 90FD E5               push hl
 711+ 90FE C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90FF
 713+ 90FF E1               pop hl
 714+ 9100 54               ld d,h
 715+ 9101 5D               ld e,l
 716+ 9102 1B               dec de
 717+ 9103 ED B8            lddr                                                ; Limpiamos.
 718+ 9105
 719+ 9105 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9108 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 910B
 722+ 910B C9               ret
 723+ 910C
 724+ 910C              ; -------------------------------------------------------------------------------------------------------------
 725+ 910C              ;
 726+ 910C              ;   18/07/23
 727+ 910C              ;
 728+ 910C
 729+ 910C              Motor_de_disparos
 730+ 910C
 731+ 910C              ; Gestiona DISPAROS DE AMADEUS.
 732+ 910C
 733+ 910C 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 910F 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9112
 736+ 9112 CD 9F 8C     2 call Extrae_address
 737+ 9115 7E               ld a,(hl)
 738+ 9116 A7               and a
 739+ 9117 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9119
 741+ 9119              ; ----- ----- ----- ----- ----- -----
 742+ 9119
 743+ 9119 C5               push bc
 744+ 911A CD DE 91         call foto_disparo_a_borrar
 745+ 911D
 746+ 911D              ; Existe colisión con este disparo???
 747+ 911D
 748+ 911D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 911E 7E               ld a,(hl)
 750+ 911F 2B               dec hl
 751+ 9120 E6 01            and 1
 752+ 9122 28 1D            jr z,9F
 753+ 9124
 754+ 9124              ;   En este punto:
 755+ 9124              ;
 756+ 9124              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9124              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9124              ;   _con la entidad).
 759+ 9124              ;
 760+ 9124              ;   Disparo_2A defw 0                                ; Control.
 761+ 9124              ;    defw 0                                          ; Puntero objeto.
 762+ 9124              ;    defw 0                                          ; Puntero de impresión.
 763+ 9124              ;    defw 0                                          ; Rutina de impresión.
 764+ 9124
 765+ 9124 E5               push hl
 766+ 9125
 767+ 9125 06 04            ld b,4
 768+ 9127 23           19 inc hl
 769+ 9128 10 FD            djnz 19B
 770+ 912A
 771+ 912A CD 9F 8C         call Extrae_address
 772+ 912D CD 4F 9D         call Genera_coordenadas_disparo
 773+ 9130
 774+ 9130              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9130
 776+ 9130 21 45 89         ld hl,Coordenadas_disparo_certero
 777+ 9133 72               ld (hl),d
 778+ 9134 23               inc hl
 779+ 9135 73               ld (hl),e
 780+ 9136
 781+ 9136              ; Elimino el disparo de la base de datos.
 782+ 9136
 783+ 9136 E1               pop hl
 784+ 9137 CD 5D 92         call Elimina_disparo_de_base_de_datos
 785+ 913A 21 42 89         ld hl,Impacto2
 786+ 913D CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 913F
 788+ 913F 18 06            jr 11F
 789+ 9141
 790+ 9141 CD 07 92     9 call Mueve_disparo
 791+ 9144 CD DE 91         call foto_disparo_a_borrar
 792+ 9147
 793+ 9147 C1           11 pop bc
 794+ 9148 18 04            jr 7F
 795+ 914A
 796+ 914A              ; ----- ----- ----- ----- ----- -----
 797+ 914A
 798+ 914A ED 42        1 sbc hl,bc
 799+ 914C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 914E
 801+ 914E 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9151 23               inc hl
 803+ 9152 23               inc hl
 804+ 9153 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9156 18 BA            jr 2B
 806+ 9158
 807+ 9158 CD 20 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 915B              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 915B
 810+ 915B              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 915B
 812+ 915B 01 8A 85         ld bc,Disparo_11
 813+ 915E 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9161
 815+ 9161 CD 9F 8C     5 call Extrae_address
 816+ 9164 7E               ld a,(hl)
 817+ 9165 A7               and a
 818+ 9166 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9168
 820+ 9168              ; ----- ----- ----- ----- ----- -----
 821+ 9168
 822+ 9168 C5               push bc
 823+ 9169 CD DE 91         call foto_disparo_a_borrar
 824+ 916C
 825+ 916C              ; Existe colisión con este disparo???
 826+ 916C
 827+ 916C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 916D 7E               ld a,(hl)
 829+ 916E 2B               dec hl
 830+ 916F E6 01            and 1
 831+ 9171 28 4D            jr z,10F
 832+ 9173
 833+ 9173              ;! La colisión se produce con Amadeus???
 834+ 9173              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9173
 836+ 9173 E5               push hl
 837+ 9174
 838+ 9174 06 04            ld b,4
 839+ 9176 23           16 inc hl
 840+ 9177 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9179
 842+ 9179 CD 9F 8C         call Extrae_address
 843+ 917C CD 4F 9D         call Genera_coordenadas_disparo
 844+ 917F
 845+ 917F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9180 FE 16            cp $16
 847+ 9182 38 2A            jr c,15F
 848+ 9184
 849+ 9184
 850+ 9184              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9184
 852+ 9184 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9185
 854+ 9185              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9185
 856+ 9185
 857+ 9185 2A 4D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9188
 859+ 9188              ; Coordenada X de Amadeus en D.
 860+ 9188
 861+ 9188 7D               ld a,l
 862+ 9189 E6 1F            and $1F
 863+ 918B 57               ld d,a
 864+ 918C
 865+ 918C 21 A6 85         ld hl,Amadeus_db+8
 866+ 918F 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9190
 868+ 9190 21 47 89         ld hl,Coordenadas_X_Amadeus
 869+ 9193 CD 68 92         call Guarda_coordenadas_X
 870+ 9196
 871+ 9196 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9197
 873+ 9197              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9197
 875+ 9197 06 02            ld b,2
 876+ 9199 C5           20 push bc
 877+ 919A
 878+ 919A 06 03            ld b,3
 879+ 919C 21 47 89         ld hl,Coordenadas_X_Amadeus
 880+ 919F 7E           18 ld a,(hl)
 881+ 91A0 BA               cp d
 882+ 91A1 20 04            jr nz,17F
 883+ 91A3
 884+ 91A3              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91A3
 886+ 91A3 C1               pop bc
 887+ 91A4 E1               pop hl
 888+ 91A5 18 0D            jr 14F
 889+ 91A7
 890+ 91A7 23           17 inc hl
 891+ 91A8 10 F5            djnz 18B
 892+ 91AA
 893+ 91AA 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91AB
 895+ 91AB C1               pop bc
 896+ 91AC 10 EB            djnz 20B
 897+ 91AE
 898+ 91AE
 899+ 91AE              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91AE              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91AE
 902+ 91AE E1           15 pop hl
 903+ 91AF 23               inc hl
 904+ 91B0 35               dec (hl)
 905+ 91B1 2B               dec hl
 906+ 91B2 18 0C            jr 10F
 907+ 91B4
 908+ 91B4              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91B4              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91B4
 911+ 91B4 E5           14 push hl
 912+ 91B5 CD 5D 92         call Elimina_disparo_de_base_de_datos
 913+ 91B8 21 42 89         ld hl,Impacto2
 914+ 91BB CB CE            set 1,(hl)
 915+ 91BD E1               pop hl
 916+ 91BE 18 06            jr 12F
 917+ 91C0
 918+ 91C0              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91C0
 920+ 91C0 CD 07 92     10 call Mueve_disparo
 921+ 91C3 CD DE 91         call foto_disparo_a_borrar
 922+ 91C6 C1           12 pop bc
 923+ 91C7
 924+ 91C7 18 04            jr 8F
 925+ 91C9
 926+ 91C9              ; ----- ----- ----- ----- ----- -----
 927+ 91C9
 928+ 91C9 ED 42        4 sbc hl,bc
 929+ 91CB 28 0A            jr z,6F
 930+ 91CD
 931+ 91CD 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91D0 23               inc hl
 933+ 91D1 23               inc hl
 934+ 91D2 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91D5 18 8A            jr 5B
 936+ 91D7
 937+ 91D7 CD 19 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91DA CD A4 92         call Limpia_Coordenadas_X
 939+ 91DD C9               ret
 940+ 91DE
 941+ 91DE              ; ------------------------------------------------------------------
 942+ 91DE
 943+ 91DE              foto_disparo_a_borrar
 944+ 91DE
 945+ 91DE 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91DF A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91E0 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91E1
 949+ 91E1 E5               push hl
 950+ 91E2 23               inc hl
 951+ 91E3 23               inc hl
 952+ 91E4 ED 73 15 89      ld (Stack),sp
 953+ 91E8 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91E9 FD E1            pop iy
 955+ 91EB DD E1            pop ix
 956+ 91ED E1               pop hl
 957+ 91EE ED 7B 15 89      ld sp,(Stack)
 958+ 91F2 3A 03 89         ld a,(Ctrl_1)
 959+ 91F5 CB C7            set 0,a
 960+ 91F7 32 03 89         ld (Ctrl_1),a
 961+ 91FA CD A0 7F         call Guarda_foto_registros
 962+ 91FD 3A 03 89         ld a,(Ctrl_1)
 963+ 9200 CB 87            res 0,a
 964+ 9202 32 03 89         ld (Ctrl_1),a
 965+ 9205 E1               pop hl
 966+ 9206 C9               ret
 967+ 9207
 968+ 9207              ;---------------------------------------------------
 969+ 9207              ;
 970+ 9207              ;   18/07/23
 971+ 9207              ;
 972+ 9207
 973+ 9207              Mueve_disparo
 974+ 9207
 975+ 9207              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9207              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9207              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9207
 979+ 9207 E5               push hl
 980+ 9208
 981+ 9208 7E               ld a,(hl)
 982+ 9209
 983+ 9209 06 04            ld b,4
 984+ 920B 23           1 inc hl
 985+ 920C 10 FD            djnz 1B
 986+ 920E
 987+ 920E              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 920E
 989+ 920E CD 9F 8C         call Extrae_address
 990+ 9211
 991+ 9211 E6 01            and 1
 992+ 9213 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9215
 994+ 9215              ; Disparo hacia arriba, (Amadeus).
 995+ 9215
 996+ 9215              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9215              ; _ de la dificultad.
 998+ 9215
 999+ 9215 CD 95 96         call PreviousScan
1000+ 9218 CD 95 96         call PreviousScan
1001+ 921B CD 95 96         call PreviousScan
1002+ 921E CD 95 96         call PreviousScan
1003+ 9221
1004+ 9221              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9221
1006+ 9221 7C               ld a,h
1007+ 9222 FE 40            cp $40
1008+ 9224 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9226
1010+ 9226              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9226
1012+ 9226 EB               ex de,hl
1013+ 9227 06 04            ld b,4
1014+ 9229 2B           6 dec hl
1015+ 922A 10 FD            djnz 6B
1016+ 922C
1017+ 922C CD 5D 92         call Elimina_disparo_de_base_de_datos
1018+ 922F E1               pop hl
1019+ 9230 18 10            jr 7F
1020+ 9232
1021+ 9232              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9232              ; HL contiene el puntero de impresión del disparo.
1023+ 9232              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9232
1025+ 9232 D5           3 push de
1026+ 9233 C5               push bc
1027+ 9234
1028+ 9234 CD FC 8F         call Comprueba_Colision
1029+ 9237
1030+ 9237              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9237
1032+ 9237 78               ld a,b
1033+ 9238
1034+ 9238 C1               pop bc
1035+ 9239 D1               pop de
1036+ 923A
1037+ 923A EB               ex de,hl
1038+ 923B
1039+ 923B 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 923C 23               inc hl                                      ; _ movimiento.
1041+ 923D 72               ld (hl),d
1042+ 923E
1043+ 923E E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 923F
1045+ 923F 23               inc hl                                      ; _ en curso.
1046+ 9240 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9241 2B               dec hl
1048+ 9242
1049+ 9242 C9           7 ret
1050+ 9243
1051+ 9243              ; Disparo hacia abajo, (Entidad).
1052+ 9243
1053+ 9243 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9246 47               ld b,a
1055+ 9247
1056+ 9247 CD 86 96     4 call NextScan
1057+ 924A 10 FB            djnz 4B
1058+ 924C
1059+ 924C              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 924C
1061+ 924C 7C               ld a,h
1062+ 924D FE 58            cp $58
1063+ 924F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9251
1065+ 9251 EB               ex de,hl
1066+ 9252 06 04            ld b,4
1067+ 9254 2B           5 dec hl
1068+ 9255 10 FD            djnz 5B
1069+ 9257
1070+ 9257 CD 5D 92         call Elimina_disparo_de_base_de_datos
1071+ 925A E1               pop hl
1072+ 925B 18 E5            jr 7B
1073+ 925D
1074+ 925D              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 925D
1076+ 925D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9260 AF               xor a
1078+ 9261 77               ld (hl),a
1079+ 9262 54               ld d,h
1080+ 9263 5D               ld e,l
1081+ 9264 13               inc de
1082+ 9265 ED B0            ldir
1083+ 9267 C9               ret
1084+ 9268
1085+ 9268              ; -----------------------------------------------------------------
1086+ 9268              ;
1087+ 9268              ;   19/7/23
1088+ 9268              ;
1089+ 9268              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9268              ;
1091+ 9268              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9268              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9268              ;
1094+ 9268              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9268              ;
1096+ 9268              ;   INPUTS:
1097+ 9268              ;
1098+ 9268              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9268              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9268
1101+ 9268              ;   MODIFICA: A, HL, BC y DE.
1102+ 9268
1103+ 9268              Guarda_coordenadas_X
1104+ 9268
1105+ 9268 7B               ld a,e
1106+ 9269 A7               and a
1107+ 926A 20 04            jr nz,1F
1108+ 926C
1109+ 926C 06 02            ld b,2
1110+ 926E 18 02            jr 2F
1111+ 9270
1112+ 9270 06 03        1 ld b,3
1113+ 9272 72           2 ld (hl),d
1114+ 9273 23               inc hl
1115+ 9274 14               inc d
1116+ 9275 10 FB            djnz 2B
1117+ 9277
1118+ 9277 C9               ret
1119+ 9278
1120+ 9278              ; -----------------------------------------------------------------
1121+ 9278              ;
1122+ 9278              ;   12/04/23
1123+ 9278              ;
1124+ 9278
1125+ 9278 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1126+ 927B A7               and a
1127+ 927C C8               ret z
1128+ 927D
1129+ 927D FE 04            cp 4
1130+ 927F 20 09            jr nz,1F
1131+ 9281
1132+ 9281
1133+ 9281              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9281
1135+ 9281 CD 9D 90         call Detecta_colision_nave_entidad
1136+ 9284
1137+ 9284 21 42 89         ld hl,Impacto2
1138+ 9287 CB 5E            bit 3,(hl)
1139+ 9289 C0               ret nz                                               ; Existe colisión, RET.
1140+ 928A
1141+ 928A              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 928A              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 928A
1144+ 928A 21 42 89     1 ld hl,Impacto2
1145+ 928D CB 4E            bit 1,(hl)
1146+ 928F 28 07            jr z,2F
1147+ 9291
1148+ 9291 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9294 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9296 18 0B            jr 3F
1151+ 9298
1152+ 9298 21 42 89     2 ld hl,Impacto2
1153+ 929B CB 46            bit 0,(hl)
1154+ 929D C8               ret z
1155+ 929E
1156+ 929E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 929E
1158+ 929E 21 03 89         ld hl,Ctrl_1
1159+ 92A1 CB D6            set 2,(hl)
1160+ 92A3
1161+ 92A3 C9           3 ret
1162+ 92A4
1163+ 92A4              ; -----------------------------------------------------------------
1164+ 92A4              ;
1165+ 92A4              ;   19/7/23
1166+ 92A4              ;
1167+ 92A4              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92A4
1169+ 92A4 AF           Limpia_Coordenadas_X xor a
1170+ 92A5 06 06            ld b,6
1171+ 92A7 21 47 89         ld hl,Coordenadas_X_Amadeus
1172+ 92AA 77           1 ld (hl),a
1173+ 92AB 23               inc hl
1174+ 92AC 10 FC            djnz 1B
1175+ 92AE C9               ret
1176+ 92AF
1177+ 92AF              ; -----------------------------------------------------------------
1178+ 92AF              ;
1179+ 92AF              ;   25/04/23
1180+ 92AF              ;
1181+ 92AF
1182+ 92AF              Determina_resultado_comparativa
1183+ 92AF
1184+ 92AF              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92AF              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92AF              ;
1187+ 92AF              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92AF              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92AF              ;
1190+ 92AF              ;   SBC HL,DE
1191+ 92AF
1192+ 92AF              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92AF              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92AF
1195+ 92AF              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92AF              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92AF
1198+ 92AF
1199+ 92AF 3A DA 88         ld a,(Cuad_objeto)
1200+ 92B2 FE 02            cp 2
1201+ 92B4 28 26            jr z,2F
1202+ 92B6 38 24            jr c,2F
1203+ 92B8
1204+ 92B8              ; Cuadrantes 3º y 4º
1205+ 92B8
1206+ 92B8 E6 01            and 1
1207+ 92BA 28 10            jr z,4F
1208+ 92BC
1209+ 92BC              ; Cuadrante 3º
1210+ 92BC
1211+ 92BC 7C               ld a,h
1212+ 92BD 06 00            ld b,0
1213+ 92BF
1214+ 92BF CD 4A 93         call Compara_cositas_H3
1215+ 92C2
1216+ 92C2 04               inc b
1217+ 92C3 05               dec b
1218+ 92C4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92C5
1220+ 92C5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92C6 06 00            ld b,0
1222+ 92C8
1223+ 92C8 CD 5C 93         call Compara_cositas_L3
1224+ 92CB C9               ret
1225+ 92CC
1226+ 92CC              ; Cuadrante 4º
1227+ 92CC
1228+ 92CC 7C           4 ld a,h
1229+ 92CD 06 00            ld b,0
1230+ 92CF
1231+ 92CF CD 6E 93         call Compara_cositas_H4
1232+ 92D2
1233+ 92D2 04               inc b
1234+ 92D3 05               dec b
1235+ 92D4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92D5
1237+ 92D5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92D6 06 00            ld b,0
1239+ 92D8
1240+ 92D8 CD 84 93         call Compara_cositas_L4
1241+ 92DB C9               ret
1242+ 92DC
1243+ 92DC              ; Cuadrantes 1º y 2º.
1244+ 92DC
1245+ 92DC 28 10        2 jr z,3F
1246+ 92DE
1247+ 92DE              ; 1er Cuadrante
1248+ 92DE
1249+ 92DE 7C               ld a,h
1250+ 92DF 06 00            ld b,0
1251+ 92E1
1252+ 92E1 CD 22 93         call Compara_cositas_H1
1253+ 92E4
1254+ 92E4 04               inc b
1255+ 92E5 05               dec b
1256+ 92E6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92E7
1258+ 92E7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92E8 06 00            ld b,0
1260+ 92EA
1261+ 92EA CD 38 93         call Compara_cositas_L1
1262+ 92ED C9               ret
1263+ 92EE
1264+ 92EE
1265+ 92EE              ; 2º Cuadrante
1266+ 92EE
1267+ 92EE 7C           3 ld a,h
1268+ 92EF 06 00            ld b,0
1269+ 92F1
1270+ 92F1 CD FE 92         call Compara_cositas_H2
1271+ 92F4
1272+ 92F4 04               inc b
1273+ 92F5 05               dec b
1274+ 92F6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92F7
1276+ 92F7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92F8 06 00            ld b,0
1278+ 92FA
1279+ 92FA CD 10 93         call Compara_cositas_L2
1280+ 92FD C9               ret
1281+ 92FE
1282+ 92FE A7           Compara_cositas_H2 and a
1283+ 92FF 28 0D            jr z,1F
1284+ 9301              ;    cp $fd
1285+ 9301              ;    jr z,1F
1286+ 9301              ;    cp $fe
1287+ 9301              ;    jr z,1F
1288+ 9301 FE FF            cp $ff
1289+ 9303 28 09            jr z,1F
1290+ 9305 FE 01            cp $01
1291+ 9307 28 05            jr z,1F
1292+ 9309 FE 02            cp $02
1293+ 930B 28 01            jr z,1F
1294+ 930D C0               ret nz
1295+ 930E 04           1 inc b
1296+ 930F C9               ret
1297+ 9310
1298+ 9310 A7           Compara_cositas_L2 and a
1299+ 9311 28 0D            jr z,1F
1300+ 9313              ;    cp $fd
1301+ 9313              ;    jr z,1F
1302+ 9313 FE FE            cp $fe
1303+ 9315 28 09            jr z,1F
1304+ 9317 FE FF            cp $ff
1305+ 9319 28 05            jr z,1F
1306+ 931B FE 01            cp $01
1307+ 931D 28 01            jr z,1F
1308+ 931F              ;    cp $02
1309+ 931F              ;    jr z,1F
1310+ 931F C0               ret nz
1311+ 9320 04           1 inc b
1312+ 9321 C9               ret
1313+ 9322
1314+ 9322 A7           Compara_cositas_H1 and a
1315+ 9323 28 11            jr z,1F
1316+ 9325              ;    cp $fd
1317+ 9325              ;    jr z,1F
1318+ 9325              ;    cp $fe
1319+ 9325              ;    jr z,1F
1320+ 9325 FE FF            cp $ff
1321+ 9327 28 0D            jr z,1F
1322+ 9329 FE 01            cp $01
1323+ 932B 28 09            jr z,1F
1324+ 932D FE 02            cp $02
1325+ 932F 28 05            jr z,1F
1326+ 9331 FE 03            cp $03
1327+ 9333 28 01            jr z,1F
1328+ 9335 C0               ret nz
1329+ 9336 04           1 inc b
1330+ 9337 C9               ret
1331+ 9338
1332+ 9338 A7           Compara_cositas_L1 and a
1333+ 9339 28 0D            jr z,1F
1334+ 933B              ;    cp $fd
1335+ 933B              ;    jr z,1F
1336+ 933B              ;    cp $fe
1337+ 933B              ;    jr z,1F
1338+ 933B              ;    cp $ff
1339+ 933B              ;    jr z,1F
1340+ 933B FE 01            cp $01
1341+ 933D 28 09            jr z,1F
1342+ 933F FE 02            cp $02
1343+ 9341 28 05            jr z,1F
1344+ 9343 FE 03            cp $03
1345+ 9345 28 01            jr z,1F
1346+ 9347 C0               ret nz
1347+ 9348 04           1 inc b
1348+ 9349 C9               ret
1349+ 934A
1350+ 934A A7           Compara_cositas_H3 and a
1351+ 934B 28 0D            jr z,1F
1352+ 934D              ;    cp $fd
1353+ 934D              ;    jr z,1F
1354+ 934D FE FE            cp $fe
1355+ 934F 28 09            jr z,1F
1356+ 9351 FE FF            cp $ff
1357+ 9353 28 05            jr z,1F
1358+ 9355 FE 01            cp $01
1359+ 9357 28 01            jr z,1F
1360+ 9359              ;    cp $02
1361+ 9359              ;    jr z,1F
1362+ 9359              ;    cp $03
1363+ 9359              ;    jr z,1F
1364+ 9359 C0               ret nz
1365+ 935A 04           1 inc b
1366+ 935B C9               ret
1367+ 935C
1368+ 935C A7           Compara_cositas_L3 and a
1369+ 935D 28 0D            jr z,1F
1370+ 935F              ;    cp $fd
1371+ 935F              ;    jr z,1F
1372+ 935F              ;    cp $fe
1373+ 935F              ;    jr z,1F
1374+ 935F              ;    cp $ff
1375+ 935F              ;    jr z,1F
1376+ 935F FE 01            cp $01
1377+ 9361 28 09            jr z,1F
1378+ 9363 FE 02            cp $02
1379+ 9365 28 05            jr z,1F
1380+ 9367 FE 03            cp $03
1381+ 9369 28 01            jr z,1F
1382+ 936B C0               ret nz
1383+ 936C 04           1 inc b
1384+ 936D C9               ret
1385+ 936E
1386+ 936E A7           Compara_cositas_H4 and a
1387+ 936F 28 11            jr z,1F
1388+ 9371 FE FD            cp $fd
1389+ 9373 28 0D            jr z,1F
1390+ 9375 FE FE            cp $fe
1391+ 9377 28 09            jr z,1F
1392+ 9379 FE FF            cp $ff
1393+ 937B 28 05            jr z,1F
1394+ 937D FE 01            cp $01
1395+ 937F 28 01            jr z,1F
1396+ 9381              ;    cp $02
1397+ 9381              ;    jr z,1F
1398+ 9381              ;    cp $03
1399+ 9381              ;    jr z,1F
1400+ 9381 C0               ret nz
1401+ 9382 04           1 inc b
1402+ 9383 C9               ret
1403+ 9384
1404+ 9384 A7           Compara_cositas_L4 and a
1405+ 9385 28 0D            jr z,1F
1406+ 9387              ;    cp $fd
1407+ 9387              ;    jr z,1F
1408+ 9387 FE FE            cp $fe
1409+ 9389 28 09            jr z,1F
1410+ 938B FE FF            cp $ff
1411+ 938D 28 05            jr z,1F
1412+ 938F FE 01            cp $01
1413+ 9391 28 01            jr z,1F
1414+ 9393              ;    cp $02
1415+ 9393              ;    jr z,1F
1416+ 9393              ;    cp $03
1417+ 9393              ;    jr z,1F
1418+ 9393 C0               ret nz
1419+ 9394 04           1 inc b
1420+ 9395 C9               ret
# file closed: Disparo.asm
1689  9396              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9396              ; ******************************************************************************************************************************************************************************************
   2+ 9396              ;
   3+ 9396              ; 26/06/23
   4+ 9396              ;
   5+ 9396              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9396
   7+ 9396 CD 7A 96     Draw call Prepara_draw
   8+ 9399 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 939A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 939B 28 05        	jr z,2F
  11+ 939D
  12+ 939D 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93A0 18 0C        	jr 1F
  14+ 93A2
  15+ 93A2 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93A5 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93A8 CD 37 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93AB              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93AB CD DC 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93AE
  21+ 93AE 3A F0 88     1 ld a,(Ctrl_0)
  22+ 93B1 CB 6F        	bit 5,a
  23+ 93B3 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93B5
  25+ 93B5 CD CD 93     	call Comprueba_limite_horizontal
  26+ 93B8 CD 5D 94     	call Comprueba_limite_vertical
  27+ 93BB
  28+ 93BB              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93BB              ; -----------------------
  30+ 93BB              ; -----------------------
  31+ 93BB              ; -----------------------
  32+ 93BB
  33+ 93BB CD AA 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93BE CD E1 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93C1 CD 40 96     	call Define_rutina_de_impresion
  36+ 93C4
  37+ 93C4 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93C7 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93C9 32 F0 88     	ld (Ctrl_0),a
  40+ 93CC
  41+ 93CC C9           	ret
  42+ 93CD
  43+ 93CD              ; *******************************************************************************************************************************************************************************************
  44+ 93CD              ;	21/01/23
  45+ 93CD              ;
  46+ 93CD              ; 	Comprueba_limite_horizontal.
  47+ 93CD              ;
  48+ 93CD              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93CD              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93CD              ;
  51+ 93CD              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93CD              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93CD              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93CD              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93CD
  56+ 93CD
  57+ 93CD
  58+ 93CD 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93D0 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93D2 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93D4 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93D6 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93D9 18 09            jr 6F
  64+ 93DB CB 5F        1 bit 3,a
  65+ 93DD 28 0A            jr z,2F
  66+ 93DF E6 F7            and $f7
  67+ 93E1 32 F0 88         ld (Ctrl_0),a
  68+ 93E4 CD 37 95     6 call Inicializacion
  69+ 93E7 18 5B            jr 5F
  70+ 93E9 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93EA
  72+ 93EA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93EA              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93EA
  75+ 93EA EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93EB 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93EE CD 99 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93F1 67           	ld h,a
  79+ 93F2 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93F3 CD 99 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93F6 67           	ld h,a
  82+ 93F7 A7           	and a
  83+ 93F8 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93FA 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93FB 3A DA 88     	ld a,(Cuad_objeto)
  86+ 93FE FE 02        	cp 2
  87+ 9400 38 1E        	jr c,3F
  88+ 9402 28 1C        	jr z,3F
  89+ 9404 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9405 28 23            jr z,7F
  91+ 9407 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9409 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 940B E1           	pop hl
  94+ 940C
  95+ 940C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 940C              ; _para indicar con E="2" en caso necesario.
  97+ 940C
  98+ 940C E5               push hl
  99+ 940D C5               push bc
 100+ 940E CD 99 99     	call calcula_tercio
 101+ 9411 FE 01        	cp 1
 102+ 9413 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9415 CD 45 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9418 28 26            jr z,9F
 105+ 941A 38 24            jr c,9F
 106+ 941C 1E 00        11 ld e,0
 107+ 941E 18 22            jr 8F
 108+ 9420 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9421 28 07        	jr z, 7F
 110+ 9423 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9425 1E 00         	ld e,0
 112+ 9427 E1           	pop hl
 113+ 9428 18 04        	jr 4F
 114+ 942A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 942C 18 15            jr 10F
 116+ 942E
 117+ 942E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 942E              ; _para indicar con E="2" en caso necesario.
 119+ 942E
 120+ 942E E5           4 push hl
 121+ 942F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9430 CD 99 99     	call calcula_tercio
 123+ 9433 FE 01        	cp 1
 124+ 9435 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9437 CD 45 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 943A 28 04            jr z,9F
 127+ 943C 30 02            jr nc,9F
 128+ 943E 18 02        	jr 8F
 129+ 9440 1E 02        9 ld e,2
 130+ 9442 C1           8 pop bc
 131+ 9443 E1           10 pop hl
 132+ 9444 C9           5 ret
 133+ 9445
 134+ 9445              ; --------------------
 135+ 9445              ;
 136+ 9445              ; 25/08/22
 137+ 9445
 138+ 9445 CD 99 99     Comprueba_centro call calcula_tercio
 139+ 9448 67               ld h,a
 140+ 9449 08           	ex af,af
 141+ 944A FE 02        	cp 2
 142+ 944C 38 07        	jr c,1F
 143+ 944E 28 05        	jr z,1F
 144+ 9450 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9453 18 03        	jr 2F
 146+ 9455 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9458 08           2 ex af,af
 148+ 9459 A7               and a
 149+ 945A ED 42            sbc hl,bc
 150+ 945C C9               ret
 151+ 945D
 152+ 945D              ; *********************************************************************************************************************************************************************************************
 153+ 945D              ;
 154+ 945D              ;   16/8/22
 155+ 945D              ;
 156+ 945D              ;	Comprueba_limite_vertical
 157+ 945D              ;
 158+ 945D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 945D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 945D              ;
 161+ 945D
 162+ 945D 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9460 7D           	ld a,l
 164+ 9461 E6 1F        	and $1F
 165+ 9463 57           	ld d,a
 166+ 9464 3A 00 89     	ld a,(Limite_vertical)
 167+ 9467 BA           	cp d 											; Límite - Posición.
 168+ 9468 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9469 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 946C CB 47        	bit 0,a
 171+ 946E 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9470
 173+ 9470              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9470
 175+ 9470 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9471 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9473
 178+ 9473              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9473              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9473
 181+ 9473 3A CC 88         ld a,(Coordenada_X)
 182+ 9476 16 0F            ld d,Centro_izquierda
 183+ 9478 A7               and a
 184+ 9479 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 947A 28 1E            jr z,3F
 186+ 947C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 947E              ;                                                    ; _salimos sin modificar nada.
 188+ 947E 18 0E            jr 2F
 189+ 9480 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9481 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9483
 192+ 9483              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9483              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9483
 195+ 9483 3A CC 88         ld a,(Coordenada_X)
 196+ 9486 16 10            ld d,Centro_derecha
 197+ 9488 A7               and a
 198+ 9489 92               sub d
 199+ 948A 28 0E            jr z,3F
 200+ 948C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 948E              ;                                                    ; _salimos sin modificar nada.
 202+ 948E CB 43        2 bit 0,e
 203+ 9490 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9492 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9493 CD 27 95         call Modificaccionne
 206+ 9496 C1           	pop bc
 207+ 9497 CD 37 95         call Inicializacion
 208+ 949A C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 949B
 210+ 949B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 949B
 212+ 949B C5           4 push bc
 213+ 949C 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 949F 0A           	ld a,(bc)
 215+ 94A0 3D           	dec a
 216+ 94A1 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94A2 7D           	ld a,l
 218+ 94A3 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94A4 CB 47        	bit 0,a
 220+ 94A6 28 03        	jr z,5F
 221+ 94A8 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94A9 18 2E        	jr 7F
 223+ 94AB
 224+ 94AB              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94AB
 226+ 94AB 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94AC F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94AD 3A F0 88     	ld a,(Ctrl_0)
 229+ 94B0 CB 4F        	bit 1,a
 230+ 94B2 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94B4 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94B5
 233+ 94B5              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94B5
 235+ 94B5 1C               inc e
 236+ 94B6 1D               dec e
 237+ 94B7 20 07            jr nz,12F
 238+ 94B9 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94BA 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94BB 22 C8 88     	ld (Posicion_actual),hl
 241+ 94BE 18 44        13 jr 9F
 242+ 94C0 CB 43        12 bit 0,e
 243+ 94C2 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94C4              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94C4 C1           	pop bc
 246+ 94C5 18 D3        	jr 3B
 247+ 94C7 80           14 add b
 248+ 94C8 6F               ld l,a
 249+ 94C9 22 C8 88     	ld (Posicion_actual),hl
 250+ 94CC CD 27 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94CF 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94D1 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94D3 32 F0 88         ld (Ctrl_0),a
 254+ 94D6 F1           	pop af
 255+ 94D7 18 2B        	jr 9F
 256+ 94D9
 257+ 94D9              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94D9
 259+ 94D9 F5           7 push af
 260+ 94DA 3A F0 88     	ld a,(Ctrl_0)
 261+ 94DD CB 47        	bit 0,a
 262+ 94DF 20 1D        	jr nz,8F
 263+ 94E1 F1           	pop af
 264+ 94E2
 265+ 94E2              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94E2
 267+ 94E2 1C           	inc e
 268+ 94E3 1D               dec e
 269+ 94E4 20 07            jr nz,10F
 270+ 94E6 90           	sub b
 271+ 94E7 6F               ld l,a
 272+ 94E8 22 C8 88     	ld (Posicion_actual),hl
 273+ 94EB 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94ED              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94ED CB 43        10 bit 0,e
 276+ 94EF 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94F1              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94F1 C1           	pop bc
 279+ 94F2 18 A6        	jr 3B
 280+ 94F4 90           16 sub b
 281+ 94F5 6F               ld l,a
 282+ 94F6 22 C8 88     	ld (Posicion_actual),hl
 283+ 94F9 CD 27 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94FC 18 06            jr 9F
 285+ 94FE E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9500 32 F0 88         ld (Ctrl_0),a
 287+ 9503 F1           	pop af
 288+ 9504 C1           9 pop bc
 289+ 9505 1E 00        	ld e,0
 290+ 9507 CD 37 95         call Inicializacion
 291+ 950A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 950B 08           	ex af,af
 293+ 950C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 950D 18 8B            jr 3B
 295+ 950F
 296+ 950F              ; --------------------
 297+ 950F
 298+ 950F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9511 CD 95 96     1 call PreviousScan
 300+ 9514 10 FB            djnz 1B
 301+ 9516 22 C8 88     	ld (Posicion_actual),hl
 302+ 9519 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 951A C9           	ret
 304+ 951B
 305+ 951B              ; --------------------
 306+ 951B
 307+ 951B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 951D CD 86 96     1 call NextScan
 309+ 9520 10 FB            djnz 1B
 310+ 9522 22 C8 88     	ld (Posicion_actual),hl
 311+ 9525 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9526 C9           	ret
 313+ 9527
 314+ 9527              ; --------------------
 315+ 9527              ;
 316+ 9527              ;	22/01/23
 317+ 9527              ;
 318+ 9527              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9527              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9527              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9527
 322+ 9527
 323+ 9527              Modificaccionne
 324+ 9527
 325+ 9527 3A DA 88     	ld a,(Cuad_objeto)
 326+ 952A FE 02        	cp 2
 327+ 952C CC 0F 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 952F DC 0F 95         call c,Modifica_Pos_actual
 329+ 9532 C8           	ret z
 330+ 9533 CD 1B 95         call Modifica_Pos_actual2
 331+ 9536 C9               ret
 332+ 9537
 333+ 9537              ; *************************************************************************************************************************************************************************************************
 334+ 9537              ;
 335+ 9537              ;	13/8/22
 336+ 9537              ;
 337+ 9537              ;	Inicializacion
 338+ 9537              ;
 339+ 9537              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9537              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9537              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9537              ;
 343+ 9537              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9537              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9537              ;	_ desaparece/aparece.
 346+ 9537
 347+ 9537              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9537              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9537              ;
 350+ 9537              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9537              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9537              ; 		   [E] ="0"
 353+ 9537
 354+ 9537              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9537
 356+ 9537 CD 99 99     Inicializacion call calcula_tercio
 357+ 953A 28 36        	jr z,primit
 358+ 953C E6 02        	and 2
 359+ 953E 20 07        	jr nz,segmit
 360+ 9540 7D           	ld a,l
 361+ 9541 FE 7F        	cp $7f
 362+ 9543 38 2D        	jr c,primit
 363+ 9545 28 2B        	jr z,primit
 364+ 9547 CD A4 95     segmit call column
 365+ 954A 38 13        	jr c,tercuad
 366+ 954C 3E 04        cuarcuad ld a,4
 367+ 954E 32 DA 88     	ld (Cuad_objeto),a
 368+ 9551 21 20 48     	ld hl,$4820
 369+ 9554 22 FE 88     	ld (Limite_horizontal),hl
 370+ 9557 21 00 89     	ld hl,Limite_vertical
 371+ 955A 36 0D        	ld (hl),$0d
 372+ 955C 08           	ex af,af
 373+ 955D 18 3C        	jr 1F
 374+ 955F              tercuad
 375+ 955F 3E 03        	ld a,3
 376+ 9561 32 DA 88     	ld (Cuad_objeto),a
 377+ 9564 21 20 48     	ld hl,$4820
 378+ 9567 22 FE 88     	ld (Limite_horizontal),hl
 379+ 956A 21 00 89     	ld hl,Limite_vertical
 380+ 956D 36 12        	ld (hl),$12
 381+ 956F 08           	ex af,af
 382+ 9570 18 29        	jr 1F
 383+ 9572 CD A4 95     primit call column
 384+ 9575 38 13        	jr c, primcuad
 385+ 9577              segcuad
 386+ 9577 3E 02        	ld a,2
 387+ 9579 32 DA 88     	ld (Cuad_objeto),a
 388+ 957C 21 C0 4F     	ld hl,$4fc0
 389+ 957F 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9582 21 00 89     	ld hl,Limite_vertical
 391+ 9585 36 0D        	ld (hl),$0d
 392+ 9587 08           	ex af,af
 393+ 9588 18 11        	jr 1F
 394+ 958A              primcuad
 395+ 958A 3E 01        	ld a,1
 396+ 958C 32 DA 88     	ld (Cuad_objeto),a
 397+ 958F 21 C0 4F     	ld hl,$4fc0
 398+ 9592 22 FE 88     	ld (Limite_horizontal),hl
 399+ 9595 21 00 89     	ld hl,Limite_vertical
 400+ 9598 36 12        	ld (hl),$12
 401+ 959A 08           	ex af,af
 402+ 959B CD 24 9D     1 call Genera_coordenadas
 403+ 959E 21 F0 88     	ld hl,Ctrl_0
 404+ 95A1 CB EE        	set 5,(hl)
 405+ 95A3 C9           	ret
 406+ 95A4
 407+ 95A4              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95A4
 409+ 95A4              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95A4              ;
 411+ 95A4              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95A4
 413+ 95A4 7D           column ld a,l
 414+ 95A5 E6 1F        	and $1f
 415+ 95A7 FE 10         	cp $10
 416+ 95A9 C9            	ret
 417+ 95AA
 418+ 95AA              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95AA              ;
 420+ 95AA              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95AA              ;
 422+ 95AA              ; 14/12/22
 423+ 95AA              ;
 424+ 95AA              ;	Modifica: A y BC.
 425+ 95AA
 426+ 95AA 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95AD E6 01        	and 1
 428+ 95AF 28 17        	jr z,1F
 429+ 95B1
 430+ 95B1              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95B1
 432+ 95B1 3A CC 88     	ld a,(Coordenada_X)
 433+ 95B4 47           	ld b,a
 434+ 95B5 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95B6 79           	ld a,c
 436+ 95B7 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95B8 38 08        	jr c,2F
 438+ 95BA 47           	ld b,a
 439+ 95BB 79           	ld a,c
 440+ 95BC 90           	sub b
 441+ 95BD 32 FD 88     	ld (Columnas),a
 442+ 95C0 18 1B        	jr 4F
 443+ 95C2 79           2 ld a,c
 444+ 95C3 32 FD 88     	ld (Columnas),a
 445+ 95C6 18 15        	jr 4F
 446+ 95C8
 447+ 95C8              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95C8
 449+ 95C8 3A CC 88     1 ld a,(Coordenada_X)
 450+ 95CB 81           	add c
 451+ 95CC 3D           	dec a
 452+ 95CD D6 1F        	sub $1f
 453+ 95CF 38 08        	jr c,3F
 454+ 95D1 47           	ld b,a
 455+ 95D2 79           	ld a,c
 456+ 95D3 90           	sub b
 457+ 95D4 32 FD 88     	ld (Columnas),a
 458+ 95D7 18 04        	jr 4F
 459+ 95D9 79           3 ld a,c
 460+ 95DA 32 FD 88     	ld (Columnas),a
 461+ 95DD D9           4 exx
 462+ 95DE 4F           	ld c,a
 463+ 95DF D9           	exx
 464+ 95E0 C9            ret
 465+ 95E1
 466+ 95E1              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95E1              ;
 468+ 95E1              ;   19/7/23
 469+ 95E1              ;
 470+ 95E1              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95E1              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95E1              ;
 473+ 95E1              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95E1              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95E1              ;
 476+ 95E1              ;	DESTRUYE: HL,B Y A.
 477+ 95E1
 478+ 95E1 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95E4 FE 02        	cp 2
 480+ 95E6 38 18        	jr c,1F
 481+ 95E8 28 16        	jr z,1F
 482+ 95EA E6 01        	and 1
 483+ 95EC 28 0D        	jr z,3F
 484+ 95EE
 485+ 95EE              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95EE
 487+ 95EE CD 34 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95F1
 489+ 95F1 7D           9 ld a,l
 490+ 95F2 E6 1F        	and $1f
 491+ 95F4 28 2A        	jr z,7F
 492+ 95F6 2B           	dec hl
 493+ 95F7 10 F8        	djnz 9B
 494+ 95F9 18 25        	jr 7F
 495+ 95FB
 496+ 95FB              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95FB
 498+ 95FB 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 95FE 18 20        	jr 7F
 500+ 9600
 501+ 9600 28 14        1 jr z,2F
 502+ 9602
 503+ 9602              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9602
 505+ 9602 CD 34 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9605
 507+ 9605 7D           4 ld a,l
 508+ 9606 E6 1F        	and $1f
 509+ 9608 28 03        	jr z,6F
 510+ 960A 2B           	dec hl
 511+ 960B 10 F8        	djnz 4B
 512+ 960D 06 0F        6 ld b,15
 513+ 960F CD 95 96     5 call PreviousScan
 514+ 9612 10 FB        	djnz 5B
 515+ 9614 18 0A        	jr 7F
 516+ 9616
 517+ 9616              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9616
 519+ 9616 CD 34 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9619 06 0F        	ld b,15
 521+ 961B CD 95 96     8 call PreviousScan
 522+ 961E 10 FB        	djnz 8B
 523+ 9620
 524+ 9620 E5           7 push hl
 525+ 9621 DD E1        	pop ix
 526+ 9623
 527+ 9623 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 9626 E5           	push hl
 529+ 9627 FD E1        	pop iy
 530+ 9629
 531+ 9629              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9629
 533+ 9629 3A F0 88     	ld a,(Ctrl_0)
 534+ 962C CB 77        	bit 6,a
 535+ 962E C8           	ret z
 536+ 962F
 537+ 962F              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 962F              ; _ entidad / Amadeus´.
 539+ 962F
 540+ 962F DD 22 4D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9633
 542+ 9633 C9           	ret
 543+ 9634
 544+ 9634              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9634              ;
 546+ 9634              ;	2/1/23
 547+ 9634              ;
 548+ 9634              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9634              ;
 550+ 9634              ;	Tras esta rutina tenemos:
 551+ 9634              ;
 552+ 9634              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9634              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9634              ;
 555+ 9634              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9634
 557+ 9634 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 9637 3A FD 88     	ld a,(Columnas)
 559+ 963A 3D           	dec a
 560+ 963B 20 01        	jr nz,1F
 561+ 963D 3C           	inc a
 562+ 963E 47           1 ld b,a
 563+ 963F C9           	ret
 564+ 9640
 565+ 9640              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9640              ;
 567+ 9640              ;	3/1/23
 568+ 9640              ;
 569+ 9640              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9640              ;
 571+ 9640              ;	Destruye: A,B,HL y DE.
 572+ 9640
 573+ 9640              Define_rutina_de_impresion
 574+ 9640
 575+ 9640 3A C7 88     	ld a,(Columns)
 576+ 9643 47           	ld b,a
 577+ 9644 3A FD 88     	ld a,(Columnas)
 578+ 9647 B8           	cp b
 579+ 9648 20 0D        	jr nz,2f
 580+ 964A
 581+ 964A              ;	La entidad se imprime entera.
 582+ 964A
 583+ 964A 21 69 97     	ld hl, Indice_entidades_completas
 584+ 964D E6 01        	and 1
 585+ 964F 28 02        	jr z,1F
 586+ 9651
 587+ 9651 23           	inc hl
 588+ 9652 23           	inc hl
 589+ 9653
 590+ 9653 CD 9F 8C     1 call Extrae_address
 591+ 9656 C9           	ret		;	ret
 592+ 9657
 593+ 9657              ;	La entidad no se imprime entera en pantalla.
 594+ 9657
 595+ 9657 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 965A E6 01        	and 1
 597+ 965C 28 17        	jr z,3F
 598+ 965E
 599+ 965E              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 965E
 601+ 965E 21 6D 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9661 3A C7 88     4 ld a,(Columns)
 603+ 9664 E6 01        	and 1
 604+ 9666 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9668
 606+ 9668 23           	inc hl
 607+ 9669 23           	inc hl
 608+ 966A
 609+ 966A 3A FD 88     	ld a,(Columnas)
 610+ 966D E6 01        	and 1
 611+ 966F 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9671
 613+ 9671 23           	inc hl
 614+ 9672 23           	inc hl
 615+ 9673
 616+ 9673 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9675
 618+ 9675 21 73 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9678 18 E7        	jr 4B
 620+ 967A
 621+ 967A              ; --------------------------------------------------------------------------------------------------------------------
 622+ 967A              ;
 623+ 967A              ;	Prepara_draw
 624+ 967A              ;
 625+ 967A              ;	Es una rutina de carga.
 626+ 967A              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 967A              ;
 628+ 967A              ;	FUNCIONAMIENTO:
 629+ 967A              ;
 630+ 967A              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 967A              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 967A              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 967A              ;
 634+ 967A              ;	DESTRUYE:
 635+ 967A              ;
 636+ 967A              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 967A
 638+ 967A 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 967D 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 967E 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 967F 4E           	ld c,(hl)
 642+ 9680 2A C8 88     	ld hl,(Posicion_actual)
 643+ 9683 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9685 C9           	ret
 645+ 9686
 646+ 9686              ;----------------------------------------------------------------------------------------------------------------
 647+ 9686              ;
 648+ 9686              ;	5/08/22
 649+ 9686              ;
 650+ 9686              ;   NextScan.
 651+ 9686              ;
 652+ 9686              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9686              ;
 654+ 9686              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9686              ;
 656+ 9686              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9686              ;
 658+ 9686              ;       DESTRUIDOS: AF y HL !!!
 659+ 9686              ;
 660+ 9686              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9686              ;
 662+ 9686
 663+ 9686 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9687 7C               ld a,h
 665+ 9688 E6 07            and 7
 666+ 968A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 968B
 668+ 968B 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 968C C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 968E 6F               ld l,a
 671+ 968F D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9690
 673+ 9690 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9691 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9693 67               ld h,a
 676+ 9694 C9               ret
 677+ 9695
 678+ 9695              ;----------------------------------------------------------------------------------------------------------------
 679+ 9695              ;
 680+ 9695              ;	5/08/22
 681+ 9695              ;
 682+ 9695              ;   PreviousScan.
 683+ 9695              ;
 684+ 9695              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9695              ;
 686+ 9695              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9695              ;
 688+ 9695              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9695              ;
 690+ 9695              ;       DESTRUIDOS: AF y HL !!!
 691+ 9695              ;
 692+ 9695              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9695              ;
 694+ 9695
 695+ 9695 7C           PreviousScan ld a,h
 696+ 9696 25               dec h               ; Dec H.
 697+ 9697 E6 07            and 7
 698+ 9699 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 969A
 700+ 969A 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 969B D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 969D 6F               ld l,a
 703+ 969E D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 969F
 705+ 969F 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96A0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96A2 67               ld h,a
 708+ 96A3 C9               ret
 709+ 96A4
 710+ 96A4              ; -----------------------------------------------------------------------------------
 711+ 96A4              ;
 712+ 96A4              ;	31/7/23
 713+ 96A4              ;
 714+ 96A4              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96A4              ;	Extrae fotos de Album_de_fotos.
 716+ 96A4
 717+ 96A4              Extrae_foto_entidades
 718+ 96A4
 719+ 96A4 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96A7 7E           	ld a,(hl)
 721+ 96A8 A7           	and a
 722+ 96A9 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96AA
 724+ 96AA 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96AD A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96AE C8           	ret z
 727+ 96AF
 728+ 96AF              ; -----------------------------------
 729+ 96AF
 730+ 96AF ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96B3 31 00 70     	ld sp,Album_de_fotos
 732+ 96B6
 733+ 96B6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96B8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96B9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96BA
 737+ 96BA ED 73 17 89  	ld (Stack_2),sp
 738+ 96BE ED 7B 15 89  	ld sp,(Stack)
 739+ 96C2
 740+ 96C2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96C2
 742+ 96C2 3E CD        	ld a,$cd
 743+ 96C4 32 CC 96     	ld (Imprime),a
 744+ 96C7 EB           	ex de,hl
 745+ 96C8 22 CD 96     	ld (Imprime+1),hl
 746+ 96CB EB           	ex de,hl
 747+ 96CC
 748+ 96CC              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96CC
 750+ 96CC 00 00 00     Imprime db 0,0,0
 751+ 96CF
 752+ 96CF ED 73 15 89  	ld (Stack),sp
 753+ 96D3
 754+ 96D3 3A 10 89     	ld a,(Numero_de_malotes)
 755+ 96D6 3D           	dec a
 756+ 96D7 28 09        	jr z,1F
 757+ 96D9 32 10 89      	ld (Numero_de_malotes),a
 758+ 96DC
 759+ 96DC ED 7B 17 89  	ld sp,(Stack_2)
 760+ 96E0 18 D4        	jr 2B
 761+ 96E2
 762+ 96E2 AF           1 xor a
 763+ 96E3 32 17 89     	ld (Stack_2),a
 764+ 96E6
 765+ 96E6 C9           	ret
 766+ 96E7
 767+ 96E7              ; -----------------------------------------------------------------------------------
 768+ 96E7              ;
 769+ 96E7              ;	28/2/23
 770+ 96E7              ;
 771+ 96E7              ;	Pinta los disparos generados.
 772+ 96E7
 773+ 96E7              Extrae_foto_disparos
 774+ 96E7
 775+ 96E7 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96EA 7E               ld a,(hl)
 777+ 96EB A7               and a
 778+ 96EC C8               ret z
 779+ 96ED
 780+ 96ED 3A 3D 89     	ld a,(Numero_de_disparotes)
 781+ 96F0 A7           	and a
 782+ 96F1 C8           	ret z
 783+ 96F2 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96F6 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96F9
 786+ 96F9 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96FB E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96FC D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96FD
 790+ 96FD ED 73 17 89  	ld (Stack_2),sp
 791+ 9701 ED 7B 15 89  	ld sp,(Stack)
 792+ 9705
 793+ 9705              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9705
 795+ 9705 3E CD        	ld a,$cd
 796+ 9707 32 0F 97     	ld (Imprime2),a
 797+ 970A EB           	ex de,hl
 798+ 970B 22 10 97     	ld (Imprime2+1),hl
 799+ 970E EB           	ex de,hl
 800+ 970F
 801+ 970F              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 970F
 803+ 970F 00 00 00     Imprime2 db 0,0,0
 804+ 9712
 805+ 9712 3A 3D 89     	ld a,(Numero_de_disparotes)
 806+ 9715 3D           	dec a
 807+ 9716 28 09        	jr z,1F
 808+ 9718 32 3D 89      	ld (Numero_de_disparotes),a
 809+ 971B
 810+ 971B ED 7B 17 89  	ld sp,(Stack_2)
 811+ 971F 18 D8        	jr 2B
 812+ 9721
 813+ 9721 AF           1 xor a
 814+ 9722 32 17 89     	ld (Stack_2),a
 815+ 9725 C9           	ret
 816+ 9726
 817+ 9726              ; -----------------------------------------------------------------------------------
 818+ 9726              ;
 819+ 9726              ;	4/9/23
 820+ 9726              ;
 821+ 9726              ;	Rutina principal de pintado de Amadeus.
 822+ 9726              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9726
 824+ 9726 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 9729 7E           	ld a,(hl)
 826+ 972A A7           	and a
 827+ 972B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 972C
 829+ 972C 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 972F A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 9730 C8           	ret z
 832+ 9731
 833+ 9731              ; -----------------------------------
 834+ 9731
 835+ 9731 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 9735 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 9738
 838+ 9738 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 973A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 973B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 973C
 842+ 973C ED 73 17 89  	ld (Stack_2),sp
 843+ 9740 ED 7B 15 89  	ld sp,(Stack)
 844+ 9744
 845+ 9744              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 9744
 847+ 9744 3E CD        	ld a,$cd
 848+ 9746 32 4E 97     	ld (Imprime_Amadeus),a
 849+ 9749 EB           	ex de,hl
 850+ 974A 22 4F 97     	ld (Imprime_Amadeus+1),hl
 851+ 974D EB           	ex de,hl
 852+ 974E
 853+ 974E              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 974E
 855+ 974E 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9751
 857+ 9751 ED 73 15 89  	ld (Stack),sp
 858+ 9755
 859+ 9755 3A 10 89     	ld a,(Numero_de_malotes)
 860+ 9758 3D           	dec a
 861+ 9759 28 09        	jr z,1F
 862+ 975B 32 10 89      	ld (Numero_de_malotes),a
 863+ 975E
 864+ 975E ED 7B 17 89  	ld sp,(Stack_2)
 865+ 9762 18 D4        	jr 2B
 866+ 9764
 867+ 9764 AF           1 xor a
 868+ 9765 32 17 89     	ld (Stack_2),a
 869+ 9768
 870+ 9768 C9           	ret
# file closed: Draw_XOR.asm
1690  9769              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9769              ;   índices de Rutinas de impresión.
   2+ 9769
   3+ 9769 79 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 976B A6 97            defw Pinta_Amadeus_3x2
   5+ 976D
   6+ 976D FC 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 976F 9C 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9771 50 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9773
  10+ 9773 26 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9775 2A 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9777 DE 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9779
  14+ 9779
  15+ 9779              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9779              ;
  17+ 9779              ;   12/12/22
  18+ 9779              ;
  19+ 9779              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9779              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9779              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9779              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9779              ;
  24+ 9779              ;   Modifica: DE y HL.
  25+ 9779
  26+ 9779 ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 977D FD F9        	ld sp,iy
  28+ 977F 06 10            ld b,16
  29+ 9781 D1           1 pop de
  30+ 9782 7B               ld a,e
  31+ 9783 AE               xor (hl)
  32+ 9784 77           	ld (hl),a
  33+ 9785 23           	inc hl
  34+ 9786 7A               ld a,d
  35+ 9787 AE               xor (hl)
  36+ 9788 77           	ld (hl),a
  37+ 9789 2B           	dec hl
  38+ 978A 24           	inc h
  39+ 978B 7C               ld a,h
  40+ 978C E6 07            and 7
  41+ 978E 20 0A            jr nz,2F
  42+ 9790 7D               ld a,l
  43+ 9791 C6 20            add a,$20
  44+ 9793 6F               ld l,a
  45+ 9794 38 04            jr c,2F
  46+ 9796 7C               ld a,h
  47+ 9797 D6 08            sub 8
  48+ 9799 67               ld h,a
  49+ 979A 7C           2 ld a,h
  50+ 979B FE 58            cp $58
  51+ 979D 28 02            jr z,3F
  52+ 979F 10 E0            djnz 1B
  53+ 97A1 ED 7B 15 89  3 ld sp,(Stack)
  54+ 97A5 C9           	ret
  55+ 97A6
  56+ 97A6 ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97AA FD F9        	ld sp,iy
  58+ 97AC 06 08            ld b,8
  59+ 97AE D1           1 pop de
  60+ 97AF 7B               ld a,e
  61+ 97B0 AE               xor (hl)
  62+ 97B1 77           	ld (hl),a
  63+ 97B2 23           	inc hl
  64+ 97B3 7A               ld a,d
  65+ 97B4 AE               xor (hl)
  66+ 97B5 77           	ld (hl),a
  67+ 97B6 23           	inc hl
  68+ 97B7 D1           	pop de
  69+ 97B8 7B               ld a,e
  70+ 97B9 AE               xor (hl)
  71+ 97BA 77           	ld (hl),a
  72+ 97BB 2B           	dec hl
  73+ 97BC 2B           	dec hl
  74+ 97BD 24           	inc h
  75+ 97BE 7C               ld a,h
  76+ 97BF E6 07            and 7
  77+ 97C1 20 0A            jr nz,2F
  78+ 97C3 7D               ld a,l
  79+ 97C4 C6 20            add a,$20
  80+ 97C6 6F               ld l,a
  81+ 97C7 38 04            jr c,2F
  82+ 97C9 7C               ld a,h
  83+ 97CA D6 08            sub 8
  84+ 97CC 67               ld h,a
  85+ 97CD 7C           2 ld a,h
  86+ 97CE FE 58            cp $58
  87+ 97D0 28 25            jr z,4F
  88+ 97D2 7A               ld a,d
  89+ 97D3 AE               xor (hl)
  90+ 97D4 77               ld (hl),a
  91+ 97D5 D1           	pop de
  92+ 97D6 23           	inc hl
  93+ 97D7 7B               ld a,e
  94+ 97D8 AE               xor (hl)
  95+ 97D9 77           	ld (hl),a
  96+ 97DA 23           	inc hl
  97+ 97DB 7A               ld a,d
  98+ 97DC AE               xor (hl)
  99+ 97DD 77           	ld (hl),a
 100+ 97DE 2B           	dec hl
 101+ 97DF 2B           	dec hl
 102+ 97E0 24           	inc h
 103+ 97E1 7C               ld a,h
 104+ 97E2 E6 07            and 7
 105+ 97E4 20 0A            jr nz,3F
 106+ 97E6 7D               ld a,l
 107+ 97E7 C6 20            add a,$20
 108+ 97E9 6F               ld l,a
 109+ 97EA 38 04            jr c,3F
 110+ 97EC 7C               ld a,h
 111+ 97ED D6 08            sub 8
 112+ 97EF 67               ld h,a
 113+ 97F0 7C           3 ld a,h
 114+ 97F1 FE 58            cp $58
 115+ 97F3 28 02            jr z,4F
 116+ 97F5 10 B7            djnz 1B
 117+ 97F7 ED 7B 15 89  4 ld sp,(Stack)
 118+ 97FB C9           	ret
 119+ 97FC
 120+ 97FC              ; ---------------------------------------------------
 121+ 97FC
 122+ 97FC ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9800 FD F9        	ld sp,iy
 124+ 9802
 125+ 9802              ; >>>
 126+ 9802
 127+ 9802 06 10            ld b,16
 128+ 9804 D1           1 pop de
 129+ 9805 7A           	ld a,d
 130+ 9806 AE           	xor (hl)
 131+ 9807 77           	ld (hl),a
 132+ 9808 24           	inc h
 133+ 9809 7C               ld a,h
 134+ 980A E6 07            and 7
 135+ 980C 20 0C            jr nz,2F
 136+ 980E 7D               ld a,l
 137+ 980F C6 20            add a,$20
 138+ 9811 6F               ld l,a
 139+ 9812 38 06            jr c,2F
 140+ 9814 7C               ld a,h
 141+ 9815 D6 08            sub 8
 142+ 9817 67               ld h,a
 143+ 9818 18 00            jr 2F
 144+ 981A 7C           2 ld a,h
 145+ 981B FE 58            cp $58
 146+ 981D 28 02            jr z,3F
 147+ 981F 10 E3            djnz 1B
 148+ 9821 ED 7B 15 89  3 ld sp,(Stack)
 149+ 9825 C9           	ret
 150+ 9826
 151+ 9826 ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 982A FD F9        	ld sp,iy
 153+ 982C
 154+ 982C              ; >>>
 155+ 982C
 156+ 982C 06 10            ld b,16
 157+ 982E D1           1 pop de
 158+ 982F 7B           	ld a,e
 159+ 9830 AE           	xor (hl)
 160+ 9831 77           	ld (hl),a
 161+ 9832 24           	inc h
 162+ 9833 7C               ld a,h
 163+ 9834 E6 07            and 7
 164+ 9836 20 0C            jr nz,2F
 165+ 9838 7D               ld a,l
 166+ 9839 C6 20            add a,$20
 167+ 983B 6F               ld l,a
 168+ 983C 38 06            jr c,2F
 169+ 983E 7C               ld a,h
 170+ 983F D6 08            sub 8
 171+ 9841 67               ld h,a
 172+ 9842 18 00            jr 2F
 173+ 9844 7C           2 ld a,h
 174+ 9845 FE 58            cp $58
 175+ 9847 28 02            jr z,3F
 176+ 9849 10 E3            djnz 1B
 177+ 984B ED 7B 15 89  3 ld sp,(Stack)
 178+ 984F C9           	ret
 179+ 9850
 180+ 9850              ; ---------------------------------------------------
 181+ 9850
 182+ 9850 ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9854 FD F9        	ld sp,iy
 184+ 9856 06 08            ld b,8
 185+ 9858 D1           1 pop de
 186+ 9859 7A           	ld a,d
 187+ 985A AE           	xor (hl)
 188+ 985B 77           	ld (hl),a
 189+ 985C 23           	inc hl
 190+ 985D D1           	pop de
 191+ 985E 7B           	ld a,e
 192+ 985F AE           	xor (hl)
 193+ 9860 77           	ld (hl),a
 194+ 9861 2B           	dec hl
 195+ 9862 24            	inc h
 196+ 9863 7C               ld a,h
 197+ 9864 E6 07            and 7
 198+ 9866 20 0A            jr nz,2F
 199+ 9868 7D               ld a,l
 200+ 9869 C6 20            add a,$20
 201+ 986B 6F               ld l,a
 202+ 986C 38 04            jr c,2F
 203+ 986E 7C               ld a,h
 204+ 986F D6 08            sub 8
 205+ 9871 67               ld h,a
 206+ 9872 7C           2 ld a,h
 207+ 9873 FE 58            cp $58
 208+ 9875 28 20            jr z,4F
 209+ 9877 D1               pop de
 210+ 9878 7B           	ld a,e
 211+ 9879 AE           	xor (hl)
 212+ 987A 77           	ld (hl),a
 213+ 987B 23           	inc hl
 214+ 987C 7A           	ld a,d
 215+ 987D AE           	xor (hl)
 216+ 987E 77           	ld (hl),a
 217+ 987F 2B           	dec hl
 218+ 9880 24           	inc h
 219+ 9881 7C               ld a,h
 220+ 9882 E6 07            and 7
 221+ 9884 20 0A            jr nz,3F
 222+ 9886 7D               ld a,l
 223+ 9887 C6 20            add a,$20
 224+ 9889 6F               ld l,a
 225+ 988A 38 04            jr c,3F
 226+ 988C 7C               ld a,h
 227+ 988D D6 08            sub 8
 228+ 988F 67               ld h,a
 229+ 9890 7C           3 ld a,h
 230+ 9891 FE 58            cp $58
 231+ 9893 28 02            jr z,4F
 232+ 9895 10 C1            djnz 1B
 233+ 9897 ED 7B 15 89  4 ld sp,(Stack)
 234+ 989B C9           	ret
 235+ 989C
 236+ 989C ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98A0 FD F9        	ld sp,iy
 238+ 98A2 06 08            ld b,8
 239+ 98A4 D1           1 pop de
 240+ 98A5 D1           	pop de
 241+ 98A6 7B           	ld a,e
 242+ 98A7 AE           	xor (hl)
 243+ 98A8 77           	ld (hl),a
 244+ 98A9 24            	inc h
 245+ 98AA 7C               ld a,h
 246+ 98AB E6 07            and 7
 247+ 98AD 20 0A            jr nz,2F
 248+ 98AF 7D               ld a,l
 249+ 98B0 C6 20            add a,$20
 250+ 98B2 6F               ld l,a
 251+ 98B3 38 04            jr c,2F
 252+ 98B5 7C               ld a,h
 253+ 98B6 D6 08            sub 8
 254+ 98B8 67               ld h,a
 255+ 98B9 7C           2 ld a,h
 256+ 98BA FE 58            cp $58
 257+ 98BC 28 1B            jr z,4F
 258+ 98BE D1               pop de
 259+ 98BF 7A           	ld a,d
 260+ 98C0 AE           	xor (hl)
 261+ 98C1 77           	ld (hl),a
 262+ 98C2 24           	inc h
 263+ 98C3 7C               ld a,h
 264+ 98C4 E6 07            and 7
 265+ 98C6 20 0A            jr nz,3F
 266+ 98C8 7D               ld a,l
 267+ 98C9 C6 20            add a,$20
 268+ 98CB 6F               ld l,a
 269+ 98CC 38 04            jr c,3F
 270+ 98CE 7C               ld a,h
 271+ 98CF D6 08            sub 8
 272+ 98D1 67               ld h,a
 273+ 98D2 7C           3 ld a,h
 274+ 98D3 FE 58            cp $58
 275+ 98D5 28 02            jr z,4F
 276+ 98D7 10 CB            djnz 1B
 277+ 98D9 ED 7B 15 89  4 ld sp,(Stack)
 278+ 98DD C9           	ret
 279+ 98DE
 280+ 98DE ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98E2 FD F9        	ld sp,iy
 282+ 98E4 06 08            ld b,8
 283+ 98E6 D1           1 pop de
 284+ 98E7 7B           	ld a,e
 285+ 98E8 AE           	xor (hl)
 286+ 98E9 77           	ld (hl),a
 287+ 98EA 23           	inc hl
 288+ 98EB 7A           	ld a,d
 289+ 98EC AE           	xor (hl)
 290+ 98ED 77           	ld (hl),a
 291+ 98EE 2B           	dec hl
 292+ 98EF 24             	inc h
 293+ 98F0 7C               ld a,h
 294+ 98F1 E6 07            and 7
 295+ 98F3 20 0A            jr nz,2F
 296+ 98F5 7D               ld a,l
 297+ 98F6 C6 20            add a,$20
 298+ 98F8 6F               ld l,a
 299+ 98F9 38 04            jr c,2F
 300+ 98FB 7C               ld a,h
 301+ 98FC D6 08            sub 8
 302+ 98FE 67               ld h,a
 303+ 98FF 7C           2 ld a,h
 304+ 9900 FE 58            cp $58
 305+ 9902 28 21            jr z,4F
 306+ 9904 D1               pop de
 307+ 9905 7A           	ld a,d
 308+ 9906 AE           	xor (hl)
 309+ 9907 77           	ld (hl),a
 310+ 9908 23           	inc hl
 311+ 9909 D1               pop de
 312+ 990A 7B           	ld a,e
 313+ 990B AE           	xor (hl)
 314+ 990C 77           	ld (hl),a
 315+ 990D 2B           	dec hl
 316+ 990E 24           	inc h
 317+ 990F 7C               ld a,h
 318+ 9910 E6 07            and 7
 319+ 9912 20 0A            jr nz,3F
 320+ 9914 7D               ld a,l
 321+ 9915 C6 20            add a,$20
 322+ 9917 6F               ld l,a
 323+ 9918 38 04            jr c,3F
 324+ 991A 7C               ld a,h
 325+ 991B D6 08            sub 8
 326+ 991D 67               ld h,a
 327+ 991E 7C           3 ld a,h
 328+ 991F FE 58            cp $58
 329+ 9921 28 02            jr z,4F
 330+ 9923 10 C1            djnz 1B
 331+ 9925 ED 7B 15 89  4 ld sp,(Stack)
 332+ 9929 C9           	ret
 333+ 992A
 334+ 992A ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 992E FD F9        	ld sp,iy
 336+ 9930 06 08            ld b,8
 337+ 9932 D1           1 pop de
 338+ 9933 7B           	ld a,e
 339+ 9934 AE           	xor (hl)
 340+ 9935 77           	ld (hl),a
 341+ 9936 24            	inc h
 342+ 9937 7C               ld a,h
 343+ 9938 E6 07            and 7
 344+ 993A 20 0A            jr nz,2F
 345+ 993C 7D               ld a,l
 346+ 993D C6 20            add a,$20
 347+ 993F 6F               ld l,a
 348+ 9940 38 04            jr c,2F
 349+ 9942 7C               ld a,h
 350+ 9943 D6 08            sub 8
 351+ 9945 67               ld h,a
 352+ 9946 7C           2 ld a,h
 353+ 9947 FE 58            cp $58
 354+ 9949 28 1C            jr z,4F
 355+ 994B D1               pop de
 356+ 994C 7A           	ld a,d
 357+ 994D AE           	xor (hl)
 358+ 994E 77           	ld (hl),a
 359+ 994F 24           	inc h
 360+ 9950 7C               ld a,h
 361+ 9951 E6 07            and 7
 362+ 9953 20 0A            jr nz,3F
 363+ 9955 7D               ld a,l
 364+ 9956 C6 20            add a,$20
 365+ 9958 6F               ld l,a
 366+ 9959 38 04            jr c,3F
 367+ 995B 7C               ld a,h
 368+ 995C D6 08            sub 8
 369+ 995E 67               ld h,a
 370+ 995F 7C           3 ld a,h
 371+ 9960 FE 58            cp $58
 372+ 9962 28 03            jr z,4F
 373+ 9964 D1               pop de
 374+ 9965 10 CB            djnz 1B
 375+ 9967 ED 7B 15 89  4 ld sp,(Stack)
 376+ 996B C9           	ret
 377+ 996C
 378+ 996C              ; ---------------------------------------------------
 379+ 996C              ;
 380+ 996C              ;   27/02/23
 381+ 996C              ;
 382+ 996C              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 996C              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 996C              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 996C
 386+ 996C ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 9970 FD F9            ld sp,iy
 388+ 9972 06 03            ld b,3
 389+ 9974 D1           1 pop de
 390+ 9975 7B               ld a,e
 391+ 9976 AE               xor (hl)
 392+ 9977 77               ld (hl),a
 393+ 9978 23               inc hl
 394+ 9979 7A               ld a,d
 395+ 997A AE               xor (hl)
 396+ 997B 77               ld (hl),a
 397+ 997C 2B               dec hl
 398+ 997D
 399+ 997D 24               inc h
 400+ 997E 7C               ld a,h
 401+ 997F E6 07            and 7
 402+ 9981 20 0A            jr nz,2F
 403+ 9983 7D               ld a,l
 404+ 9984 C6 20            add a,$20
 405+ 9986 6F               ld l,a
 406+ 9987 38 04            jr c,2F
 407+ 9989 7C               ld a,h
 408+ 998A D6 08            sub 8
 409+ 998C 67               ld h,a
 410+ 998D 7C           2 ld a,h
 411+ 998E FE 58            cp $58
 412+ 9990 28 02            jr z,3F
 413+ 9992
 414+ 9992 10 E0            djnz 1B
 415+ 9994 ED 7B 15 89  3 ld sp,(Stack)
 416+ 9998 C9               ret
 417+ 9999
# file closed: Rutinas_de_impresion_sprites.asm
1691  9999              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9999              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9999              ;
   3+ 9999              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9999              ;
   5+ 9999              ; *****************************************************************************************************************************************************************************************
   6+ 9999              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9999
   8+ 9999 7C           calcula_tercio ld a,h
   9+ 999A E6 18        	and $18
  10+ 999C CB 2F        	sra a
  11+ 999E CB 2F        	sra a
  12+ 99A0 CB 2F        	sra a
  13+ 99A2 C9           	ret
  14+ 99A3
# file closed: calcula_tercio.asm
1692  99A3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99A3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99A3              ;
   3+ 99A3              ;
   4+ 99A3              ;	CLS.
   5+ 99A3              ;
   6+ 99A3              ;	Limpia la pantalla y define sus atributos.
   7+ 99A3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99A3              ;
   9+ 99A3              ;	COLORES: 0 ..... NEGRO
  10+ 99A3              ;    		 1 ..... AZUL
  11+ 99A3              ; 			 2 ..... ROJO
  12+ 99A3              ;			 3 ..... MAGENTA
  13+ 99A3              ; 			 4 ..... VERDE
  14+ 99A3              ; 			 5 ..... CIAN
  15+ 99A3              ;			 6 ..... AMARILLO
  16+ 99A3              ; 			 7 ..... BLANCO
  17+ 99A3              ;
  18+ 99A3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99A3              ;
  20+ 99A3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99A3
  22+ 99A3
  23+ 99A3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99A6 11 01 40     	LD DE,$4001
  25+ 99A9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99AC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99AE ED B0        	LDIR
  28+ 99B0 01 FF 02     	LD BC,767
  29+ 99B3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99B4 ED B0        	LDIR
  31+ 99B6 C9           	ret
  32+ 99B7
# file closed: Cls.asm
1693  99B7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99B7              ; ******************************************************************************************************************************************************************************************
   2+ 99B7              ;
   3+ 99B7              ;   20/05/23
   4+ 99B7              ;
   5+ 99B7              ;	Recompone_posicion_inicio
   6+ 99B7              ;
   7+ 99B7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99B7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99B7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99B7              ;	_ a una u otra rutina.
  11+ 99B7
  12+ 99B7              Recompone_posicion_inicio
  13+ 99B7
  14+ 99B7 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 99BA 7D           	ld a,l
  16+ 99BB E6 1F        	and $1f
  17+ 99BD 28 16        	jr z,1F
  18+ 99BF
  19+ 99BF FE 1F        	cp $1f
  20+ 99C1 28 0D        	jr z,3F
  21+ 99C3
  22+ 99C3 21 01 89     	ld hl,Ctrl_2
  23+ 99C6 CB C6        	set 0,(hl)
  24+ 99C8 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 99CB 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 99CE 18 08        	jr 2F
  27+ 99D0
  28+ 99D0 CD 71 9B     3 call Mov_left
  29+ 99D3 18 03        	jr 2F
  30+ 99D5
  31+ 99D5 CD 53 9A     1 call Mov_right
  32+ 99D8 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99DB 22 CA 88     	ld (Puntero_objeto),hl
  34+ 99DE C9           	ret
  35+ 99DF
  36+ 99DF              ; ******************************************************************************************************************************************************************************************
  37+ 99DF              ;
  38+ 99DF              ;   27/05/23
  39+ 99DF              ;
  40+ 99DF              ;	Mov_down
  41+ 99DF              ;
  42+ 99DF              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99DF              ;
  44+ 99DF              ;
  45+ 99DF              Mov_down
  46+ 99DF
  47+ 99DF CD 41 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99E2              ;																	; _ repone (Puntero_objeto).
  49+ 99E2 21 F0 88     	ld hl,Ctrl_0
  50+ 99E5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99E7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99E7              ; 																	; _ en el caso de que no lo haya.
  53+ 99E7 3A DE 88     	ld a,(Vel_down)
  54+ 99EA 47           	ld b,a
  55+ 99EB 2A C8 88         ld hl,(Posicion_actual)
  56+ 99EE CD 99 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99F1 E6 02        	and 2
  58+ 99F3 28 0F        	jr z,1F
  59+ 99F5
  60+ 99F5              ; Nos encontramos en el último tercio de pantalla.
  61+ 99F5              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99F5
  63+ 99F5 7C           	ld a,h
  64+ 99F6 FE 57        	cp $57
  65+ 99F8 20 0A        	jr nz,1F
  66+ 99FA
  67+ 99FA 7D           	ld a,l
  68+ 99FB C6 20        	add $20
  69+ 99FD 30 05        	jr nc,1F
  70+ 99FF
  71+ 99FF              ; ------------------------------
  72+ 99FF              ;	call Reaparece_arriba
  73+ 99FF CD FE 9C     	call Reinicio
  74+ 9A02              ; ------------------------------
  75+ 9A02
  76+ 9A02 18 08        	jr 3F
  77+ 9A04 CD 86 96     1 call NextScan
  78+ 9A07 22 C8 88     	ld (Posicion_actual),hl
  79+ 9A0A 10 E2            djnz 2B
  80+ 9A0C CD 24 9D     3 call Genera_coordenadas
  81+ 9A0F C9           	ret
  82+ 9A10
  83+ 9A10              ; ******************************************************************************************************************************************************************************************
  84+ 9A10              ;
  85+ 9A10              ;   27/05/23
  86+ 9A10              ;
  87+ 9A10              ;	Mov_up
  88+ 9A10              ;
  89+ 9A10              ; 	Mueve el Sprite hacia arriba.
  90+ 9A10              ;
  91+ 9A10              ;
  92+ 9A10              Mov_up
  93+ 9A10
  94+ 9A10 CD 41 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A13              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A13 21 F0 88     	ld hl,Ctrl_0
  97+ 9A16 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A18              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A18              ; 																		; _ en el caso de que no lo haya.
 100+ 9A18 3A DD 88     	ld a,(Vel_up)
 101+ 9A1B 47           	ld b,a
 102+ 9A1C 2A C8 88     	ld hl,(Posicion_actual)
 103+ 9A1F CD 99 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A22 A7           	and a
 105+ 9A23 20 10        	jr nz,1F
 106+ 9A25
 107+ 9A25              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A25              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A25
 110+ 9A25 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A26 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A28 20 0B            jr nz,1F
 113+ 9A2A 7D               ld a,l
 114+ 9A2B D6 20            sub $20
 115+ 9A2D 30 06            jr nc,1F
 116+ 9A2F 25               dec h
 117+ 9A30
 118+ 9A30              ; -----------------------------
 119+ 9A30 CD DF 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A33              ;	call Reinicio
 121+ 9A33              ; -----------------------------
 122+ 9A33
 123+ 9A33 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A35 CD 95 96     1 call PreviousScan
 125+ 9A38 22 C8 88     	ld (Posicion_actual),hl
 126+ 9A3B 10 E2            djnz 3B
 127+ 9A3D CD 24 9D     2 call Genera_coordenadas
 128+ 9A40 C9           	ret
 129+ 9A41
 130+ 9A41              ; -----------------------------
 131+ 9A41              ;
 132+ 9A41              ;	27/5/23
 133+ 9A41              ;
 134+ 9A41              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A41              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A41              ;
 137+ 9A41              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A41              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A41              ;
 140+ 9A41              ;	Modifica: A y (Puntero_objeto).
 141+ 9A41
 142+ 9A41 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A44 CB 47        	bit 0,a
 144+ 9A46 C8           	ret z
 145+ 9A47 CB 87        	res 0,a
 146+ 9A49 32 01 89     	ld (Ctrl_2),a
 147+ 9A4C 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A4F 22 CA 88     	ld (Puntero_objeto),hl
 149+ 9A52 C9           	ret
 150+ 9A53
 151+ 9A53              ; ******************************************************************************************************************************************************************************************
 152+ 9A53              ;
 153+ 9A53              ;	19/10/22
 154+ 9A53              ;
 155+ 9A53              ;	Mov_right.
 156+ 9A53              ;
 157+ 9A53              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A53              ;
 159+ 9A53
 160+ 9A53 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 9A56 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A58              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A58              ; 																	; _ en el caso de que no lo haya.
 164+ 9A58 3A F0 88     	ld a,(Ctrl_0)
 165+ 9A5B CB 77        	bit 6,a
 166+ 9A5D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A5F
 168+ 9A5F CD 8D 9C     	call Stop_Amadeus_right
 169+ 9A62 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A63 18 4D        	jr 8F
 171+ 9A65
 172+ 9A65 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A68 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A6A 20 46        	jr nz,8F
 175+ 9A6C
 176+ 9A6C 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A6F A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A70 28 40        	jr z,8F
 179+ 9A72
 180+ 9A72              ; ---------- ---------- ----------
 181+ 9A72              ;
 182+ 9A72              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A72
 184+ 9A72 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A75 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A77 28 11        	jr z,1F
 187+ 9A79 38 06        	jr c,6F
 188+ 9A7B FE 04        	cp 4
 189+ 9A7D 28 14        	jr z,7F
 190+ 9A7F 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A81
 192+ 9A81              ; ---------- ---------- ----------
 193+ 9A81              ;
 194+ 9A81              ; Perfiles de velocidad
 195+ 9A81              ;
 196+ 9A81
 197+ 9A81 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A84 FE FE        	cp $fe
 199+ 9A86 20 2A        	jr nz,8F
 200+ 9A88 18 10        	jr 3F
 201+ 9A8A 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A8D FE FD        	cp $fd
 203+ 9A8F 20 21        	jr nz,8F
 204+ 9A91 18 07        	jr 3F
 205+ 9A93 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A96 FE FB        	cp $fb
 207+ 9A98 20 18        	jr nz,8F
 208+ 9A9A
 209+ 9A9A              ; ---------- ---------- ----------
 210+ 9A9A
 211+ 9A9A              3
 212+ 9A9A CD CD 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A9D              ;	call Reinicio
 214+ 9A9D
 215+ 9A9D              ; ---------- ---------- ----------
 216+ 9A9D              ;
 217+ 9A9D              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A9D
 219+ 9A9D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A9F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AA0 CD B9 9A     	call DESPLZ_DER
 222+ 9AA3 C1           	pop bc
 223+ 9AA4 10 F9        	djnz 5B
 224+ 9AA6 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AA9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AAA 22 C8 88     	ld (Posicion_actual),hl
 227+ 9AAD CD 24 9D     	call Genera_coordenadas
 228+ 9AB0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AB2
 230+ 9AB2              ; ---------- ---------- ----------
 231+ 9AB2
 232+ 9AB2 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9AB5 CD B9 9A     	call DESPLZ_DER
 234+ 9AB8 C9           2 ret
 235+ 9AB9
 236+ 9AB9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AB9              ;
 238+ 9AB9              ;	22/9/22
 239+ 9AB9              ;
 240+ 9AB9
 241+ 9AB9 CD C8 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9ABC CD 14 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9ABF CD 3D 9B         call Ciclo_completo
 244+ 9AC2 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AC5 CB FE        	set 7,(hl)
 246+ 9AC7 C9           	ret
 247+ 9AC8
 248+ 9AC8              ; ******************************************************************************************************************************************************************************************
 249+ 9AC8              ;	15/02/23
 250+ 9AC8              ;
 251+ 9AC8
 252+ 9AC8 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9ACB 47           	ld b,a
 254+ 9ACC 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9ACF 23           1 inc hl
 256+ 9AD0 23           	inc hl
 257+ 9AD1 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AD3 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AD6 CD 9F 8C     	call Extrae_address
 260+ 9AD9 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9ADC
 262+ 9ADC              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9ADC
 264+ 9ADC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9ADC              ; Cuántos movimientos hemos hecho ??
 266+ 9ADC              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9ADC
 268+ 9ADC 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9ADF EB           	ex de,hl
 270+ 9AE0 A7           	and a
 271+ 9AE1 ED 52        	sbc hl,de
 272+ 9AE3 CB 3D        	srl l
 273+ 9AE5 3E 08        6 ld a,8
 274+ 9AE7 95           	sub l
 275+ 9AE8 30 1E        	jr nc,3F
 276+ 9AEA
 277+ 9AEA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AEA              ; B="0".
 279+ 9AEA
 280+ 9AEA 04           4 inc b
 281+ 9AEB 3C           	inc a
 282+ 9AEC 20 FC        	jr nz,4B
 283+ 9AEE 78           	ld a,b
 284+ 9AEF 08           	ex af,af
 285+ 9AF0 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9AF3 23           5 inc hl
 287+ 9AF4 23           	inc hl
 288+ 9AF5 10 FC        	djnz 5B
 289+ 9AF7 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AFA CD 9F 8C     	call Extrae_address
 291+ 9AFD 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9B00
 293+ 9B00              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B00              ; _(Posicion_actual).
 295+ 9B00
 296+ 9B00 21 C8 88     	ld hl,Posicion_actual
 297+ 9B03 34           	inc (hl)
 298+ 9B04 08               ex af,af
 299+ 9B05 6F           	ld l,a
 300+ 9B06 18 DD        	jr 6B
 301+ 9B08
 302+ 9B08              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B08
 304+ 9B08 47           3 ld b,a
 305+ 9B09 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B0C 23           2 inc hl
 307+ 9B0D 23           	inc hl
 308+ 9B0E 10 FC        	djnz 2B
 309+ 9B10 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B13 C9           8 ret
 311+ 9B14
 312+ 9B14              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B14              ;
 314+ 9B14              ;	24/7/22
 315+ 9B14              ;
 316+ 9B14              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B14              ;
 318+ 9B14              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B14              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B14              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B14
 322+ 9B14 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B17 A7           	and a
 324+ 9B18 20 1F        	jr nz,1F
 325+ 9B1A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B1C 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9B1F
 328+ 9B1F 21 C7 88     	ld hl,Columns
 329+ 9B22 34           	inc (hl)
 330+ 9B23 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9B26 E6 01        	and 1
 332+ 9B28 28 0F        	jr z,1F
 333+ 9B2A 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B2D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B2E 22 C8 88     	ld (Posicion_actual),hl
 336+ 9B31 CD 24 9D     	call Genera_coordenadas
 337+ 9B34 CD 99 9C     	call Inc_CTRL_DESPLZ
 338+ 9B37 18 03        	jr 2F
 339+ 9B39 CD 99 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B3C C9           2 ret
 341+ 9B3D
 342+ 9B3D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B3D              ;
 344+ 9B3D              ;	24/7/22
 345+ 9B3D              ;
 346+ 9B3D              ;	Ciclo_completo.
 347+ 9B3D              ;
 348+ 9B3D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B3D              ;
 350+ 9B3D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B3D              ; 	Decrementamos (Columns).
 352+ 9B3D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B3D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B3D
 355+ 9B3D
 356+ 9B3D 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B40 FE FF        	cp $ff
 358+ 9B42 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B44 E6 F0        	and $f0
 360+ 9B46 20 28        	jr nz,3F
 361+ 9B48
 362+ 9B48              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B48
 364+ 9B48 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9B4B 47           	ld b,a
 366+ 9B4C 3E F8        	ld a,$f8
 367+ 9B4E 80           	add b
 368+ 9B4F 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9B52 18 1C        	jr 3F
 370+ 9B54 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B57 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B58 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B59 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9B5C 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B5F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B61 20 0A        	jr nz,2F
 377+ 9B63 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B66 23           	inc hl
 379+ 9B67 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B6A CD 24 9D     	call Genera_coordenadas
 381+ 9B6D
 382+ 9B6D              ; Inicia el puntero de Sprite.
 383+ 9B6D
 384+ 9B6D CD B6 8C     2 call Inicia_puntero_objeto_der
 385+ 9B70 C9           3 ret
 386+ 9B71
 387+ 9B71              ; ******************************************************************************************************************************************************************************************
 388+ 9B71              ;
 389+ 9B71              ;	15/02/23
 390+ 9B71              ;
 391+ 9B71              ;	Mov_left.
 392+ 9B71              ;
 393+ 9B71              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B71              ;
 395+ 9B71              Mov_left
 396+ 9B71
 397+ 9B71 21 F0 88     	ld hl,Ctrl_0
 398+ 9B74 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B76              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B76              ; 																	; _ en el caso de que no lo haya.
 401+ 9B76 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B79 CB 77        	bit 6,a
 403+ 9B7B 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B7D
 405+ 9B7D CD 93 9C     	call Stop_Amadeus_left
 406+ 9B80 C8           	ret z
 407+ 9B81 20 4A        	jr nz,8F
 408+ 9B83
 409+ 9B83 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B86 A7           	and a
 411+ 9B87 20 44        	jr nz,8F
 412+ 9B89
 413+ 9B89 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B8C A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B8D 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B8F
 417+ 9B8F              ; ---------- ---------- ----------
 418+ 9B8F
 419+ 9B8F 3A DB 88     	ld a,(Vel_left)
 420+ 9B92 FE 02        	cp 2
 421+ 9B94 28 0F        	jr z,1F
 422+ 9B96 38 04        	jr c,6F
 423+ 9B98 FE 04        	cp 4
 424+ 9B9A 28 12        	jr z,7F
 425+ 9B9C
 426+ 9B9C              ; ---------- ---------- ----------
 427+ 9B9C
 428+ 9B9C 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B9F FE F8        	cp $f8
 430+ 9BA1 20 2A        	jr nz,8F
 431+ 9BA3 18 10        	jr 4F
 432+ 9BA5 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BA8 FE F9        	cp $f9
 434+ 9BAA 20 21        	jr nz,8F
 435+ 9BAC 18 07        	jr 4F
 436+ 9BAE 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BB1 FE FB        	cp $fb
 438+ 9BB3 20 18        	jr nz,8F
 439+ 9BB5
 440+ 9BB5              ; ---------- ---------- ----------
 441+ 9BB5
 442+ 9BB5              4
 443+ 9BB5 CD BB 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BB8              ;	call Reinicio
 445+ 9BB8
 446+ 9BB8              ; ---------- ---------- ----------
 447+ 9BB8
 448+ 9BB8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BBA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BBB
 451+ 9BBB              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BBB              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BBB
 454+ 9BBB CD D4 9B     	call DESPLZ_IZQ
 455+ 9BBE C1           	pop bc
 456+ 9BBF 10 F9        	djnz 5B
 457+ 9BC1 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BC4 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BC5 22 C8 88     	ld (Posicion_actual),hl
 460+ 9BC8 CD 24 9D     	call Genera_coordenadas
 461+ 9BCB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BCD
 463+ 9BCD              ; ---------- ---------- ----------
 464+ 9BCD
 465+ 9BCD              ; Movemos, no hay recolocación.
 466+ 9BCD
 467+ 9BCD 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9BD0 CD D4 9B     	call DESPLZ_IZQ
 469+ 9BD3 C9           2 ret
 470+ 9BD4
 471+ 9BD4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BD4              ;
 473+ 9BD4              ;	22/9/22
 474+ 9BD4
 475+ 9BD4              DESPLZ_IZQ
 476+ 9BD4
 477+ 9BD4 CD E3 9B     	call Desplaza_izquierda
 478+ 9BD7 CD 2F 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BDA CD 57 9C     	call Ciclo_completo_2
 480+ 9BDD 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BE0 CB BE        	res 7,(hl)
 482+ 9BE2 C9           	ret
 483+ 9BE3
 484+ 9BE3              Desplaza_izquierda
 485+ 9BE3
 486+ 9BE3 3A DB 88     	ld a,(Vel_left)
 487+ 9BE6 47           	ld b,a
 488+ 9BE7 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BEA 23           1 inc hl
 490+ 9BEB 23           	inc hl
 491+ 9BEC 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BEE 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BF1 CD 9F 8C     	call Extrae_address
 494+ 9BF4 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9BF7
 496+ 9BF7              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BF7
 498+ 9BF7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BF7              ; Cuántos movimientos hemos hecho ??
 500+ 9BF7              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BF7
 502+ 9BF7 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BFA EB           	ex de,hl
 504+ 9BFB A7           	and a
 505+ 9BFC ED 52        	sbc hl,de
 506+ 9BFE CB 3D        	srl l
 507+ 9C00 3E 08        6 ld a,8
 508+ 9C02 95           	sub l
 509+ 9C03 30 1E        	jr nc,3F
 510+ 9C05
 511+ 9C05              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C05              ; B="0".
 513+ 9C05
 514+ 9C05 04           4 inc b
 515+ 9C06 3C           	inc a
 516+ 9C07 20 FC        	jr nz,4B
 517+ 9C09 78           	ld a,b
 518+ 9C0A 08           	ex af,af
 519+ 9C0B 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C0E 23           5 inc hl
 521+ 9C0F 23           	inc hl
 522+ 9C10 10 FC        	djnz 5B
 523+ 9C12 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C15 CD 9F 8C     	call Extrae_address
 525+ 9C18 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9C1B
 527+ 9C1B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C1B              ; _(Posicion_actual).
 529+ 9C1B
 530+ 9C1B 21 C8 88     	ld hl,Posicion_actual
 531+ 9C1E 35           	dec (hl)
 532+ 9C1F 08           	ex af,af
 533+ 9C20 6F           	ld l,a
 534+ 9C21 18 DD        	jr 6B
 535+ 9C23
 536+ 9C23              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C23
 538+ 9C23 47           3 ld b,a
 539+ 9C24 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9C27 23           2 inc hl
 541+ 9C28 23           	inc hl
 542+ 9C29 10 FC        	djnz 2B
 543+ 9C2B 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C2E C9           8 ret
 545+ 9C2F
 546+ 9C2F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C2F              ;
 548+ 9C2F              ;	modifica_parametros_1er_DESPLZ
 549+ 9C2F              ;
 550+ 9C2F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C2F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C2F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C2F
 554+ 9C2F 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C32 A7           	and a
 556+ 9C33 20 1E        	jr nz,1F
 557+ 9C35 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C36 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9C39 21 C7 88     	ld hl,Columns
 560+ 9C3C 34           	inc (hl)
 561+ 9C3D 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9C40 E6 01        	and 1
 563+ 9C42 20 0F        	jr nz,1F
 564+ 9C44 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C47 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C48 22 C8 88     	ld (Posicion_actual),hl
 567+ 9C4B CD 24 9D     	call Genera_coordenadas
 568+ 9C4E CD AA 9C     	call Dec_CTRL_DESPLZ
 569+ 9C51 18 03        	jr 2F
 570+ 9C53 CD AA 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C56 C9           2 ret
 572+ 9C57
 573+ 9C57              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C57
 575+ 9C57 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C5A FE F7        	cp $f7
 577+ 9C5C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C5E 30 2C        	jr nc,3F
 579+ 9C60
 580+ 9C60              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C60
 582+ 9C60 06 00        	ld b,0
 583+ 9C62 04           4 inc b
 584+ 9C63 3C           	inc a
 585+ 9C64 FE F7        	cp $f7
 586+ 9C66 20 FA        	jr nz,4B
 587+ 9C68 3E FF        	ld a,$ff
 588+ 9C6A 90           	sub b
 589+ 9C6B 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C6E 18 1C        	jr 3F
 591+ 9C70
 592+ 9C70              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C70
 594+ 9C70 21 C7 88     1 ld hl,Columns
 595+ 9C73 35           	dec (hl)
 596+ 9C74 AF           	xor a
 597+ 9C75 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C78 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C7B E6 01        	and 1
 600+ 9C7D 28 0A        	jr z,2F
 601+ 9C7F 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C82 2B           	dec hl
 603+ 9C83 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C86 CD 24 9D     	call Genera_coordenadas
 605+ 9C89
 606+ 9C89              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C89
 608+ 9C89 CD C9 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C8C C9           3 ret
 610+ 9C8D
 611+ 9C8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C8D              ;
 613+ 9C8D              ;	19/10/22
 614+ 9C8D              ;
 615+ 9C8D              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C8D              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C8D
 618+ 9C8D 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C90 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C92 C9           	ret
 621+ 9C93
 622+ 9C93              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C93              ;
 624+ 9C93              ;	19/10/22
 625+ 9C93              ;
 626+ 9C93              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C93              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C93
 629+ 9C93 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C96 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C98 C9           	ret
 632+ 9C99
 633+ 9C99              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C99              ;
 635+ 9C99              ;	24/7/22
 636+ 9C99              ;
 637+ 9C99              ;	Inc_CTRL_DESPLZ
 638+ 9C99              ;
 639+ 9C99              ;
 640+ 9C99              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C99
 642+ 9C99 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C9C 3A DC 88     	ld a,(Vel_right)
 644+ 9C9F A7           	and a
 645+ 9CA0 28 06        	jr z,1F
 646+ 9CA2 47           	ld b,a
 647+ 9CA3 34           3 inc (hl)
 648+ 9CA4 10 FD        	djnz 3B
 649+ 9CA6 18 01        	jr 2F
 650+ 9CA8 34           1 inc (hl)
 651+ 9CA9 C9           2 ret
 652+ 9CAA
 653+ 9CAA              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CAA              ;
 655+ 9CAA              ;	5/2/23
 656+ 9CAA              ;
 657+ 9CAA              ;	Dec_CTRL_DESPLZ
 658+ 9CAA              ;
 659+ 9CAA              ;
 660+ 9CAA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CAA
 662+ 9CAA 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CAD 3A DB 88     	ld a,(Vel_left)
 664+ 9CB0 A7           	and a
 665+ 9CB1 28 06        	jr z,1F
 666+ 9CB3 47           	ld b,a
 667+ 9CB4 35           3 dec (hl)
 668+ 9CB5 10 FD        	djnz 3B
 669+ 9CB7 18 01        	jr 2F
 670+ 9CB9 35           1 dec (hl)
 671+ 9CBA C9           2 ret
 672+ 9CBB
 673+ 9CBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CBB
 675+ 9CBB 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CBE 01 1F 00     	ld bc,31
 677+ 9CC1 A7           	and a
 678+ 9CC2 ED 4A        	adc hl,bc
 679+ 9CC4 22 C8 88     	ld (Posicion_actual),hl
 680+ 9CC7 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CCA CB C6        	set 0,(hl)
 682+ 9CCC C9           	ret
 683+ 9CCD
 684+ 9CCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CCD
 686+ 9CCD 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CD0 01 1F 00     	ld bc,31
 688+ 9CD3 A7           	and a
 689+ 9CD4 ED 42        	sbc hl,bc
 690+ 9CD6 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CD9 21 F0 88     	ld hl,Ctrl_0
 692+ 9CDC CB CE        	set 1,(hl)
 693+ 9CDE C9           	ret
 694+ 9CDF
 695+ 9CDF              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CDF
 697+ 9CDF 24           Reaparece_abajo inc h
 698+ 9CE0 01 E0 17     	ld bc,$17e0
 699+ 9CE3 A7           	and a
 700+ 9CE4 ED 4A        	adc hl,bc
 701+ 9CE6 22 C8 88     	ld (Posicion_actual),hl
 702+ 9CE9 21 F0 88     	ld hl,Ctrl_0
 703+ 9CEC CB D6        	set 2,(hl)
 704+ 9CEE C9           	ret
 705+ 9CEF
 706+ 9CEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CEF
 708+ 9CEF 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CF2 A7           	and a
 710+ 9CF3 ED 42        	sbc hl,bc
 711+ 9CF5 22 C8 88     	ld (Posicion_actual),hl
 712+ 9CF8 21 F0 88     	ld hl,Ctrl_0
 713+ 9CFB CB DE        	set 3,(hl)
 714+ 9CFD C9           	ret
 715+ 9CFE
 716+ 9CFE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CFE              ;
 718+ 9CFE              ;	15/07/23
 719+ 9CFE
 720+ 9CFE              Reinicio
 721+ 9CFE
 722+ 9CFE              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CFE
 724+ 9CFE AF           	xor a
 725+ 9CFF 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D02 CD 20 9D     	call Limpia_contenido_hl
 727+ 9D05
 728+ 9D05 21 C8 88     	ld hl,Posicion_actual
 729+ 9D08 CD 20 9D     	call Limpia_contenido_hl
 730+ 9D0B
 731+ 9D0B CD 52 A0     	call Inicializa_Puntero_indice_mov
 732+ 9D0E CD DC 9F     	call Inicia_Puntero_mov
 733+ 9D11
 734+ 9D11 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9D14 06 05        	ld b,5
 736+ 9D16 77           1 ld (hl),a
 737+ 9D17 23           	inc hl
 738+ 9D18 10 FC        	djnz 1B
 739+ 9D1A
 740+ 9D1A 21 01 89     	ld hl,Ctrl_2
 741+ 9D1D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D1F
 743+ 9D1F C9           	ret
 744+ 9D20
 745+ 9D20 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D21 23           	inc hl
 747+ 9D22 77           	ld (hl),a
 748+ 9D23 C9           	ret
 749+ 9D24
 750+ 9D24
# file closed: Direcciones.asm
1694  9D24              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D24              ; ------------------------------------------------------------------------
   2+ 9D24              ;
   3+ 9D24              ;	02/04/23
   4+ 9D24              ;
   5+ 9D24              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D24              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D24              ;
   8+ 9D24              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D24              ;
  10+ 9D24              ;	Modifica: A,BC y DE.
  11+ 9D24
  12+ 9D24 C5           Genera_coordenadas push bc
  13+ 9D25 E5           	push hl
  14+ 9D26 D5           	push de
  15+ 9D27
  16+ 9D27 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9D2A
  18+ 9D2A 7D           	ld a,l
  19+ 9D2B E6 1F        	and $1f
  20+ 9D2D 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D30
  22+ 9D30 CD 99 99     	call calcula_tercio
  23+ 9D33 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D34
  25+ 9D34 1E 00        	ld e,0
  26+ 9D36 7D           	ld a,l
  27+ 9D37 E6 E0        	and $e0
  28+ 9D39 28 01        	jr z,1F
  29+ 9D3B 04           	inc b
  30+ 9D3C
  31+ 9D3C 04           1 inc b
  32+ 9D3D 05           	dec b
  33+ 9D3E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D40              ;														; _ , salimos.
  35+ 9D40 1C           3 inc e
  36+ 9D41 D6 20        	sub 32
  37+ 9D43 20 FB        	jr nz,3B
  38+ 9D45 10 F5        	djnz 1B
  39+ 9D47
  40+ 9D47 7B           2 ld a,e
  41+ 9D48 32 CD 88     	ld (Coordenada_y),a
  42+ 9D4B
  43+ 9D4B D1           	pop de
  44+ 9D4C E1           	pop hl
  45+ 9D4D C1           	pop bc
  46+ 9D4E
  47+ 9D4E C9           	ret
  48+ 9D4F
  49+ 9D4F              ; ------------------------------------------------------------------------
  50+ 9D4F              ;	28/05/23
  51+ 9D4F              ;
  52+ 9D4F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D4F              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D4F              ;
  55+ 9D4F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D4F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D4F              ;
  58+ 9D4F              ;		DE="$120d"
  59+ 9D4F              ;
  60+ 9D4F              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D4F              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D4F              ;
  63+ 9D4F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D4F
  65+ 9D4F              ;	Modifica: A,BC y DE.
  66+ 9D4F
  67+ 9D4F
  68+ 9D4F              Genera_coordenadas_disparo
  69+ 9D4F
  70+ 9D4F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D4F
  72+ 9D4F 7D           	ld a,l
  73+ 9D50 E6 1F        	and $1f
  74+ 9D52 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D53 CD 99 99     	call calcula_tercio
  76+ 9D56 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D57 1E 00        	ld e,0
  78+ 9D59 7D           	ld a,l
  79+ 9D5A E6 E0        	and $e0
  80+ 9D5C 28 01        	jr z,1F
  81+ 9D5E 04           	inc b
  82+ 9D5F 1C           1 inc e
  83+ 9D60 D6 20        	sub 32
  84+ 9D62 20 FB        	jr nz,1B
  85+ 9D64 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D66 C9           	ret
  87+ 9D67
# file closed: Genera_coordenadas.asm
1695  9D67              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D67              ; Relojes y temporizaciones.
   2+ 9D67
   3+ 9D67              ; ------------------------------------------------------
   4+ 9D67              ;
   5+ 9D67              ;	16/7/23
   6+ 9D67              ;
   7+ 9D67              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D67              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D67              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D67              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D67              ;
  12+ 9D67              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D67              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D67
  15+ 9D67              ; Disparo_entidad db 1
  16+ 9D67              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D67              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D67
  19+ 9D67              Habilita_disparos
  20+ 9D67
  21+ 9D67 7E           	ld a,(hl)
  22+ 9D68 A7           	and a
  23+ 9D69 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D6A
  25+ 9D6A EB           	ex de,hl
  26+ 9D6B
  27+ 9D6B 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D6C C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D6D
  30+ 9D6D              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D6D
  32+ 9D6D 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D6E 7E           	ld a,(hl)
  34+ 9D6F 23           	inc hl
  35+ 9D70 77           	ld (hl),a
  36+ 9D71
  37+ 9D71 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D72 3E 01        	ld a,1
  39+ 9D74 77           	ld (hl),a
  40+ 9D75 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1696  9D76              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D76
   2+ 9D76
   3+ 9D76              ;   07/07/23
   4+ 9D76              ;
   5+ 9D76              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D76              ;
   7+ 9D76              ;   Codificación:
   8+ 9D76              ;
   9+ 9D76              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D76              ;
  11+ 9D76              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D76              ;
  13+ 9D76              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D76              ;
  15+ 9D76              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D76              ;
  17+ 9D76              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D76              ;                               ..... %01000010 Vel_up 4
  19+ 9D76              ;                                               Vel_down 2
  20+ 9D76              ;                               ..... $42
  21+ 9D76              ;
  22+ 9D76              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D76              ;
  24+ 9D76              ;                               ..... %01000010 Vel_left 4
  25+ 9D76              ;                                               Vel_right 2
  26+ 9D76              ;                               ..... $42
  27+ 9D76              ;
  28+ 9D76              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D76              ;
  30+ 9D76              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D76              ;
  32+ 9D76              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D76              ;
  34+ 9D76              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D76              ;                                     $53
  36+ 9D76              ;
  37+ 9D76              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D76              ;
  39+ 9D76              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D76              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D76              ;
  42+ 9D76              ;                       Arriba ..... $81
  43+ 9D76              ;                       Arriba - izquierda ..... $a1
  44+ 9D76              ;                       Arriba - derecha ..... $91
  45+ 9D76              ;
  46+ 9D76              ;                       Abajo ..... $41
  47+ 9D76              ;                       Abajo - izquierda ..... $61
  48+ 9D76              ;                       Abajo - derecha ..... $51
  49+ 9D76              ;
  50+ 9D76              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D76              ;
  52+ 9D76              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D76              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D76              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D76              ;
  56+ 9D76              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D76              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D76              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D76              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D76              ;
  61+ 9D76              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D76              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D76              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D76              ;
  65+ 9D76              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D76              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D76              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D76              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D76
  70+ 9D76              ; ----- ----- ----- ----- -----
  71+ 9D76
  72+ 9D76 A2 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D78 AA 9D            defw F_1
  74+ 9D7A B4 9D            defw F_2
  75+ 9D7C BE 9D            defw Codo_abajo_derecha
  76+ 9D7E F2 9D            defw Derecha_y_subiendo
  77+ 9D80 FC 9D            defw Derecha_y_subiendo_1
  78+ 9D82 06 9E            defw F_3
  79+ 9D84 10 9E            defw F_4
  80+ 9D86 1A 9E            defw Derecha_y_bajando
  81+ 9D88 24 9E            defw Derecha_y_bajando_1
  82+ 9D8A 2E 9E            defw Derecha_y_bajando_2
  83+ 9D8C 38 9E            defw Codo_derecha_abajo
  84+ 9D8E 68 9E            defw Codo_abajo_izq.
  85+ 9D90 9C 9E            defw Izquierda_y_subiendo
  86+ 9D92 A6 9E            defw Izquierda_y_subiendo_1
  87+ 9D94 B0 9E            defw F_5
  88+ 9D96 BA 9E            defw F_6
  89+ 9D98 C4 9E            defw Izquierda_y_bajando
  90+ 9D9A CE 9E            defw Izquierda_y_bajando_1
  91+ 9D9C D8 9E            defw Izquierda_y_bajando_2
  92+ 9D9E E2 9E            defw Codo_izquierda_abajo
  93+ 9DA0 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DA2
  95+ 9DA2 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DA6 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DAA
  98+ 9DAA 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DAE 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DB2 08 00
 100+ 9DB4 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DB8 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DBC 0F FE
 102+ 9DBE
 103+ 9DBE 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DC2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DC6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DCA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DCE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DD2 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DD6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DDA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DDE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DE2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DE6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DEA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DEE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DF2
 117+ 9DF2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DF6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DFA 06 00
 119+ 9DFC
 120+ 9DFC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E00 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E04 02 00
 122+ 9E06
 123+ 9E06 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E0A 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E0E 04 00
 125+ 9E10 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E14 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E18 08 00
 127+ 9E1A
 128+ 9E1A 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E1E 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E22 02 00
 130+ 9E24
 131+ 9E24 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E28 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E2C 06 00
 133+ 9E2E
 134+ 9E2E 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E32 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E36 06 00
 136+ 9E38
 137+ 9E38              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E38
 139+ 9E38 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E3C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E40 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E44 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E4C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E54 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E5C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E64 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E68
 152+ 9E68 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E6C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E70 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E74 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E78 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E7C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E80 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E84 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E88 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E8C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E90 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E94 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E98 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E9C
 166+ 9E9C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EA0 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EA4 06 00
 168+ 9EA6
 169+ 9EA6 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EAA 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EAE 02 00
 171+ 9EB0
 172+ 9EB0 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EB4 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EB8 04 00
 174+ 9EBA 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EBE 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EC2 08 00
 176+ 9EC4
 177+ 9EC4 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EC8 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9ECC 02 00
 179+ 9ECE
 180+ 9ECE 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9ED2 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9ED6 06 00
 182+ 9ED8
 183+ 9ED8 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EDC 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EE0 06 00
 185+ 9EE2
 186+ 9EE2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EE6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EEA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EEE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EF2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EF6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EFA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EFE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F02 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F06 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F0A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F0E 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F12
 199+ 9F12              ; ----- ----- ----- ----- -----
 200+ 9F12              ;
 201+ 9F12              ;   27/06/23
 202+ 9F12
 203+ 9F12              Movimiento
 204+ 9F12
 205+ 9F12              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F12
 207+ 9F12              ;    ld hl,(Posicion_actual)
 208+ 9F12
 209+ 9F12 FB               ei
 210+ 9F13
 211+ 9F13 3A 01 89         ld a,(Ctrl_2)
 212+ 9F16 CB 57            bit 2,a
 213+ 9F18 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F1A
 215+ 9F1A 2A F3 88         ld hl,(Puntero_mov)
 216+ 9F1D 7E               ld a,(hl)
 217+ 9F1E
 218+ 9F1E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F1E
 220+ 9F1E              Inicia_desplazamiento.
 221+ 9F1E
 222+ 9F1E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F1E
 224+ 9F1E CD 13 A0         call Ajusta_velocidad_desplazamiento
 225+ 9F21
 226+ 9F21              ; Iniciamos (Repetimos_mov).
 227+ 9F21
 228+ 9F21 7E               ld a,(hl)
 229+ 9F22 E6 0F            and $0f
 230+ 9F24 32 F9 88         ld (Repetimos_desplazamiento),a
 231+ 9F27 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F2A
 233+ 9F2A              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F2A
 235+ 9F2A 23               inc hl
 236+ 9F2B 7E               ld a,(hl)
 237+ 9F2C 32 FC 88         ld (Cola_de_desplazamiento),a
 238+ 9F2F 2B               dec hl
 239+ 9F30
 240+ 9F30 21 01 89         ld hl,Ctrl_2
 241+ 9F33 CB D6            set 2,(hl)
 242+ 9F35
 243+ 9F35              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F35              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F35
 246+ 9F35              Desplazamiento_iniciado
 247+ 9F35
 248+ 9F35 CD E7 9F         call Aplica_desplazamiento
 249+ 9F38
 250+ 9F38 3A 01 89         ld a,(Ctrl_2)
 251+ 9F3B CB 67            bit 4,a
 252+ 9F3D C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F3E
 254+ 9F3E 21 F9 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F41 35               dec (hl)
 256+ 9F42 C0               ret nz
 257+ 9F43
 258+ 9F43              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F43              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F43              ; Analiza (Cola_de_desplazamiento).
 261+ 9F43
 262+ 9F43 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F46 A7               and a
 264+ 9F47 CC 3C A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F4A 28 30            jr z,Reinicia_el_movimiento
 266+ 9F4C
 267+ 9F4C FE FF            cp $ff
 268+ 9F4E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F50
 270+ 9F50 FE FE            cp $fe
 271+ 9F52 CC C0 9F         call z,Fijamos_bucle
 272+ 9F55 28 25            jr z,Reinicia_el_movimiento
 273+ 9F57
 274+ 9F57 FE FD            cp $fd
 275+ 9F59 20 11            jr nz,1F
 276+ 9F5B
 277+ 9F5B              ; ---
 278+ 9F5B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F5B
 280+ 9F5B 3A 01 89         ld a,(Ctrl_2)
 281+ 9F5E CB 5F            bit 3,a
 282+ 9F60 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F62
 284+ 9F62              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F62
 286+ 9F62 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F65 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F67
 289+ 9F67 CD D1 9F         call Inicia_Repetimos_movimiento
 290+ 9F6A 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F6C              ; ---
 292+ 9F6C
 293+ 9F6C FE 01        1 cp 1
 294+ 9F6E CA AA 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F71
 296+ 9F71 3D               dec a
 297+ 9F72 32 FC 88         ld (Cola_de_desplazamiento),a
 298+ 9F75
 299+ 9F75 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F78 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F7B              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F7B C9               ret
 303+ 9F7C
 304+ 9F7C              Reinicia_el_movimiento
 305+ 9F7C
 306+ 9F7C F3               di
 307+ 9F7D
 308+ 9F7D 3A 01 89         ld a,(Ctrl_2)
 309+ 9F80 CB 5F            bit 3,a
 310+ 9F82 28 1B            jr z,2F
 311+ 9F84
 312+ 9F84              ; (Cola_de_desplazamiento)="254".
 313+ 9F84
 314+ 9F84 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F87 35               dec (hl)
 316+ 9F88 20 15            jr nz,2F
 317+ 9F8A
 318+ 9F8A              ; Fin de las repeticiones del último movimiento.
 319+ 9F8A
 320+ 9F8A 21 01 89         ld hl,Ctrl_2
 321+ 9F8D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F8F
 323+ 9F8F 2A F3 88         ld hl,(Puntero_mov)
 324+ 9F92 23               inc hl
 325+ 9F93 23               inc hl
 326+ 9F94 23               inc hl
 327+ 9F95 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F98              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F98 7E               ld a,(hl)
 330+ 9F99 32 FC 88         ld (Cola_de_desplazamiento),a
 331+ 9F9C
 332+ 9F9C C3 43 9F         jp Cola
 333+ 9F9F
 334+ 9F9F CD DC 9F     2 call Inicia_Puntero_mov
 335+ 9FA2
 336+ 9FA2 21 01 89         ld hl,Ctrl_2
 337+ 9FA5 CB 96            res 2,(hl)
 338+ 9FA7
 339+ 9FA7 C3 12 9F         jp Movimiento
 340+ 9FAA
 341+ 9FAA              Siguiente_desplazamiento
 342+ 9FAA
 343+ 9FAA              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FAA              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FAA
 346+ 9FAA 21 01 89         ld hl,Ctrl_2
 347+ 9FAD CB 96            res 2,(hl)
 348+ 9FAF
 349+ 9FAF 2A F3 88         ld hl,(Puntero_mov)
 350+ 9FB2 23               inc hl
 351+ 9FB3 23               inc hl
 352+ 9FB4 22 F3 88         ld (Puntero_mov),hl
 353+ 9FB7
 354+ 9FB7 7E               ld a,(hl)
 355+ 9FB8 A7               and a
 356+ 9FB9 CC 3C A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FBC CA 7C 9F         jp z,Reinicia_el_movimiento
 358+ 9FBF
 359+ 9FBF C9               ret
 360+ 9FC0              ; Subrutinas -----------------------------------------
 361+ 9FC0              ; ---------- --------- --------- ---------- ----------
 362+ 9FC0              ;
 363+ 9FC0              ;   24/07/23
 364+ 9FC0              ;
 365+ 9FC0              ;   Fijamos_bucle
 366+ 9FC0              ;
 367+ 9FC0              ;
 368+ 9FC0
 369+ 9FC0              Fijamos_bucle
 370+ 9FC0
 371+ 9FC0 3A F7 88         ld a,(Incrementa_puntero)
 372+ 9FC3 3C               inc a
 373+ 9FC4 32 F8 88         ld (Incrementa_puntero_backup),a
 374+ 9FC7
 375+ 9FC7 CD 3C A0         call Incrementa_Puntero_indice_mov
 376+ 9FCA 2A F1 88         ld hl,(Puntero_indice_mov)
 377+ 9FCD 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FD0 C9               ret
 379+ 9FD1
 380+ 9FD1              ; ---------- --------- --------- ---------- ----------
 381+ 9FD1              ;
 382+ 9FD1              ;   07/7/23
 383+ 9FD1              ;
 384+ 9FD1              ;   Inicia_Repetimos_movimiento
 385+ 9FD1              ;
 386+ 9FD1              ;
 387+ 9FD1
 388+ 9FD1              Inicia_Repetimos_movimiento
 389+ 9FD1
 390+ 9FD1              ; Iniciamos (Repetimos_movimiento).
 391+ 9FD1
 392+ 9FD1 DD 2A F3 88      ld ix,(Puntero_mov)
 393+ 9FD5 DD 7E 02         ld a,(ix+2)
 394+ 9FD8 32 FB 88         ld (Repetimos_movimiento),a
 395+ 9FDB
 396+ 9FDB C9               ret
 397+ 9FDC
 398+ 9FDC              ; ---------- --------- --------- ---------- ----------
 399+ 9FDC              ;
 400+ 9FDC              ;   26/6/23
 401+ 9FDC              ;
 402+ 9FDC              ;   Inicia_Puntero_mov
 403+ 9FDC              ;
 404+ 9FDC              ;
 405+ 9FDC
 406+ 9FDC 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FDF 5E               ld e,(hl)
 408+ 9FE0 23               inc hl
 409+ 9FE1 56               ld d,(hl)
 410+ 9FE2 EB               ex de,hl
 411+ 9FE3 22 F3 88         ld (Puntero_mov),hl
 412+ 9FE6 C9               ret
 413+ 9FE7
 414+ 9FE7              ; ---------- --------- --------- ---------- ----------
 415+ 9FE7              ;
 416+ 9FE7              ;   27/06/23
 417+ 9FE7              ;
 418+ 9FE7              ;   Aplica_movimiento.
 419+ 9FE7
 420+ 9FE7              Aplica_desplazamiento
 421+ 9FE7
 422+ 9FE7              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FE7
 424+ 9FE7 2A F3 88         ld hl, (Puntero_mov)
 425+ 9FEA
 426+ 9FEA 7E               ld a,(hl)
 427+ 9FEB E6 F0            and $f0
 428+ 9FED C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FEE
 430+ 9FEE CB 7E            bit 7,(hl)
 431+ 9FF0 28 03            jr z,1F
 432+ 9FF2 CD 10 9A         call Mov_up
 433+ 9FF5 2A F3 88     1 ld hl, (Puntero_mov)
 434+ 9FF8 CB 76            bit 6,(hl)
 435+ 9FFA 28 03            jr z,2F
 436+ 9FFC CD DF 99         call Mov_down
 437+ 9FFF 2A F3 88     2 ld hl, (Puntero_mov)
 438+ A002 CB 6E            bit 5,(hl)
 439+ A004 28 03            jr z,3F
 440+ A006 CD 71 9B         call Mov_left
 441+ A009 2A F3 88     3 ld hl, (Puntero_mov)
 442+ A00C CB 66            bit 4,(hl)
 443+ A00E C8               ret z
 444+ A00F CD 53 9A         call Mov_right
 445+ A012 C9               ret
 446+ A013
 447+ A013              ; ---------- --------- --------- ---------- ----------
 448+ A013              ;
 449+ A013              ;   26/06/23
 450+ A013              ;
 451+ A013              ;   Ajusta_velocidad_desplazamiento.
 452+ A013
 453+ A013              Ajusta_velocidad_desplazamiento
 454+ A013
 455+ A013              ; 1er byte de la cadena de movimiento.
 456+ A013              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A013
 458+ A013 CD 31 A0         call Extrae_nibble_alto
 459+ A016
 460+ A016 32 DD 88         ld (Vel_up),a
 461+ A019 79               ld a,c
 462+ A01A E6 0F            and $0f
 463+ A01C 32 DE 88         ld (Vel_down),a
 464+ A01F
 465+ A01F              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A01F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A01F
 468+ A01F 23               inc hl
 469+ A020 CD 31 A0         call Extrae_nibble_alto
 470+ A023
 471+ A023 32 DB 88         ld (Vel_left),a
 472+ A026 79               ld a,c
 473+ A027 E6 0F            and $0f
 474+ A029 32 DC 88         ld (Vel_right),a
 475+ A02C
 476+ A02C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A02C
 478+ A02C 23               inc hl
 479+ A02D 22 F3 88         ld (Puntero_mov),hl
 480+ A030 C9               ret
 481+ A031
 482+ A031 06 04        Extrae_nibble_alto ld b,4
 483+ A033 7E               ld a,(hl)
 484+ A034 4F               ld c,a
 485+ A035 E6 F0            and $f0
 486+ A037 CB 3F        1 srl a
 487+ A039 10 FC            djnz 1B
 488+ A03B C9               ret
 489+ A03C
 490+ A03C              ; ---------- --------- --------- ---------- ----------
 491+ A03C              ;
 492+ A03C              ;   5/7/23
 493+ A03C              ;
 494+ A03C              ;   Incrementa_Puntero_indice_mov
 495+ A03C
 496+ A03C              Incrementa_Puntero_indice_mov
 497+ A03C
 498+ A03C 21 F7 88         ld hl,Incrementa_puntero
 499+ A03F 34               inc (hl)
 500+ A040
 501+ A040 2A F1 88         ld hl,(Puntero_indice_mov)
 502+ A043 01 02 00         ld bc,2
 503+ A046 A7               and a
 504+ A047 09               add hl,bc
 505+ A048 22 F1 88         ld (Puntero_indice_mov),hl
 506+ A04B
 507+ A04B 7E               ld a,(hl)
 508+ A04C A7               and a
 509+ A04D
 510+ A04D              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A04D
 512+ A04D              ;    jr z,$
 513+ A04D
 514+ A04D              ;! Reinicia el Patrón de movimiento.
 515+ A04D
 516+ A04D CC 52 A0         call z,Inicializa_Puntero_indice_mov
 517+ A050
 518+ A050 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A051
 520+ A051 C9               ret
 521+ A052
 522+ A052
 523+ A052              ; ---------- --------- --------- ---------- ----------
 524+ A052              ;
 525+ A052              ;   24/07/23
 526+ A052              ;
 527+ A052              ;   Inicializa_Puntero_indice_mov
 528+ A052
 529+ A052              Inicializa_Puntero_indice_mov
 530+ A052
 531+ A052              ; Existe etiqueta de bucle principal???
 532+ A052
 533+ A052 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A055 24               inc h
 535+ A056 25               dec h
 536+ A057 28 05            jr z,2F
 537+ A059
 538+ A059 22 F1 88         ld (Puntero_indice_mov),hl
 539+ A05C 18 14            jr 3F
 540+ A05E
 541+ A05E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A05E
 543+ A05E 3A F7 88     2 ld a,(Incrementa_puntero)
 544+ A061 47               ld b,a
 545+ A062
 546+ A062 2A F1 88         ld hl,(Puntero_indice_mov)
 547+ A065 2B           1 dec hl
 548+ A066 2B               dec hl
 549+ A067 10 FC            djnz 1B
 550+ A069 22 F1 88         ld (Puntero_indice_mov),hl
 551+ A06C
 552+ A06C AF               xor a
 553+ A06D 32 F7 88         ld (Incrementa_puntero),a
 554+ A070 18 06            jr 4F
 555+ A072
 556+ A072 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 557+ A075 32 F7 88         ld (Incrementa_puntero),a
 558+ A078 C9           4 ret
 559+ A079
 560+ A079
 561+ A079
# file closed: Patrones_de_mov.asm
1697  A079              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A079              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A079              ;
   3+ A079              ;	4/9/23
   4+ A079              ;
   5+ A079              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A079
   7+ A079              ;	ADC HL,SP	LD (addr),SP
   8+ A079              ;	ADD HL,SP	LD SP,(addr)
   9+ A079              ;	ADD IX,SP	LD SP,nn
  10+ A079              ; 	ADD IY,SP	LD SP,HL
  11+ A079              ;				LD SP,IX
  12+ A079              ;	DEC SP		LD SP,IY
  13+ A079
  14+ A079              ;	EX (SP),HL
  15+ A079              ;	EX (SP),IX
  16+ A079              ;	EX (SP),IY
  17+ A079
  18+ A079              ;	INC SP
  19+ A079
  20+ A079                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 03 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A F0 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 03 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1D 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A F0 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 23 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 15 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 1B 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 15 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 113+ 7FFE
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ec
 118+ 72EC
 119+ 72EC              Gestiona_albumes_de_fotos
 120+ 72EC
 121+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72EC              ;   Vaciamos Album_de_fotos.
 123+ 72EC
 124+ 72EC              ;   Album_de_fotos. Contiene datos ???
 125+ 72EC
 126+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72EF 7E               ld a,(hl)
 128+ 72F0 A7               and a
 129+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72F3
 131+ 72F3 2A 1F 89         ld hl,(End_Snapshot)
 132+ 72F6 01 00 70         ld bc,Album_de_fotos
 133+ 72F9 11 01 70         ld de,Album_de_fotos+1
 134+ 72FC AF               xor a
 135+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72FE
 137+ 72FE CD 8E 73         call Limpia_album
 138+ 7301
 139+ 7301 21 00 00         ld hl,0
 140+ 7304 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 7307
 142+ 7307              ; ----- ----- ----- -----
 143+ 7307
 144+ 7307              ;   Album_de_fotos_1. Contiene datos ???
 145+ 7307
 146+ 7307 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 730A 7E               ld a,(hl)
 148+ 730B A7               and a
 149+ 730C 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 730E              ;                               ; _ información del album2 al album1.
 151+ 730E
 152+ 730E              ; ----- ----- ----- -----
 153+ 730E              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 730E
 155+ 730E 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 7311 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 7314 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 7317
 159+ 7317 CD 8E 73         call Limpia_album
 160+ 731A
 161+ 731A              ;   Calculamos (End_Snapshot)
 162+ 731A
 163+ 731A A7               and a
 164+ 731B ED 4A            adc hl,bc
 165+ 731D 22 1F 89         ld (End_Snapshot),hl
 166+ 7320
 167+ 7320              ;   Limpiamos Album_de_fotos_1.
 168+ 7320
 169+ 7320 2A 25 89         ld hl,(End_Snapshot_1)
 170+ 7323 01 54 70         ld bc,Album_de_fotos_1
 171+ 7326 11 55 70         ld de,Album_de_fotos_1+1
 172+ 7329 AF               xor a
 173+ 732A 02               ld (bc),a
 174+ 732B
 175+ 732B CD 8E 73         call Limpia_album
 176+ 732E
 177+ 732E 21 00 00         ld hl,0
 178+ 7331 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 7334
 180+ 7334              ; ----- ----- ----- -----
 181+ 7334
 182+ 7334              ;   Album_de_fotos_2. Contiene datos ???
 183+ 7334
 184+ 7334 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 7337 7E               ld a,(hl)
 186+ 7338 A7               and a
 187+ 7339 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 733B              ;                               ; _ información del album3 al album2.
 189+ 733B              ; ----- ----- ----- -----
 190+ 733B              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 733B
 192+ 733B 2A 29 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 733E 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7341 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7344
 196+ 7344 CD 8E 73         call Limpia_album
 197+ 7347
 198+ 7347              ;   Calculamos (End_Snapshot_1):
 199+ 7347
 200+ 7347 A7               and a
 201+ 7348 ED 4A            adc hl,bc
 202+ 734A 22 25 89         ld (End_Snapshot_1),hl
 203+ 734D
 204+ 734D              ;   Limpiamos Album_de_fotos_2.
 205+ 734D
 206+ 734D 2A 29 89         ld hl,(End_Snapshot_2)
 207+ 7350 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7353 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7356 AF               xor a
 210+ 7357 02               ld (bc),a
 211+ 7358
 212+ 7358 CD 8E 73         call Limpia_album
 213+ 735B
 214+ 735B 21 00 00         ld hl,0
 215+ 735E 22 29 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7361
 217+ 7361              ; ----- ----- ----- -----
 218+ 7361
 219+ 7361              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7361
 221+ 7361 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7364 7E               ld a,(hl)
 223+ 7365 A7               and a
 224+ 7366 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7367
 226+ 7367              ; ----- ----- ----- -----
 227+ 7367              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7367
 229+ 7367 2A 2D 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 736A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 736D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7370
 233+ 7370 CD 8E 73         call Limpia_album
 234+ 7373
 235+ 7373              ;   Calculamos (End_Snapshot_2):
 236+ 7373
 237+ 7373 A7               and a
 238+ 7374 ED 4A            adc hl,bc
 239+ 7376 22 29 89         ld (End_Snapshot_2),hl
 240+ 7379
 241+ 7379              ;   Limpiamos Album_de_fotos_3.
 242+ 7379
 243+ 7379 2A 2D 89         ld hl,(End_Snapshot_3)
 244+ 737C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 737F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7382 AF               xor a
 247+ 7383 02               ld (bc),a
 248+ 7384
 249+ 7384 CD 8E 73         call Limpia_album
 250+ 7387
 251+ 7387 21 00 00         ld hl,0
 252+ 738A 22 2D 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 738D C9               ret
 254+ 738E
 255+ 738E              ; ----------------------------------------------------
 256+ 738E              ;
 257+ 738E              ;   10/8/23
 258+ 738E              ;
 259+ 738E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 738E              ;
 261+ 738E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 738E              ;           BC ..... Dirección de inicio del álbum.
 263+ 738E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 738E
 265+ 738E              ;    ld hl,(End_Snapshot)
 266+ 738E              ;    ld bc,Album_de_fotos
 267+ 738E              ;    ld de,Album_de_fotos+1
 268+ 738E
 269+ 738E              ;   MODIFICA: A,HL,BC y DE.
 270+ 738E
 271+ 738E              Limpia_album
 272+ 738E D5               push de                     ; Guardo DESTINO.
 273+ 738F C5               push bc                     ; Guardo ORIGEN.
 274+ 7390 ED 42            sbc hl,bc
 275+ 7392 4D               ld c,l
 276+ 7393 44               ld b,h
 277+ 7394 E1               pop hl
 278+ 7395 C5               push bc
 279+ 7396 ED B0            ldir
 280+ 7398 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7399 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 739A C9               ret                         ; _ a otro).
 283+ 739B              ;
 284+ 739B
 285+ 739B              ; -----------------------------------------------
 286+ 739B
 287+ 739B
 288+ 739B
 289+ 739B
 290+ 739B
# file closed: Guarda_foto_registros.asm
1698  739B
1699  739B              	SAVESNA "Pruebas.sna", START
1700  739B
1701  739B
1702  739B
1703  739B
# file closed: Banco_de_pruebas.asm
