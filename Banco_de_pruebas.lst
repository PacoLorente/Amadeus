# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD E4 8A     	call Frame
  15  A104
  16  A104 3A 0A 8A     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 0C 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110
  23  A110 ED 4D        	reti
  24  A112
  25  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  26  A112
  27  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
# file closed: Sprites_e_indices.asm
  28  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C
  95+ 856C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 856C
  97+ 856C C7 85        	defw Caja_1
  98+ 856E 0A 86        	defw Caja_2
  99+ 8570 4D 86        	defw Caja_3
 100+ 8572 90 86        	defw Caja_4
 101+ 8574 D3 86        	defw Caja_5
 102+ 8576 16 87        	defw Caja_6
 103+ 8578 59 87        	defw Caja_7
 104+ 857A 9C 87        	defw Caja_8
 105+ 857C DF 87        	defw Caja_9
 106+ 857E 22 88        	defw Caja_10
 107+ 8580              ;	...
 108+ 8580              ;	...
 109+ 8580              ;	+ entidades ...
 110+ 8580 00 00        	defw 0
 111+ 8582 00 00        	defw 0
 112+ 8584
 113+ 8584              ; ---------- ---------- ---------- ---------- ----------
 114+ 8584
 115+ 8584 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8586 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8588 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 858A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 858D
 120+ 858D 05           	db %00000101									; (Attr).
 121+ 858E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8590 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8592
 124+ 8592 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8594 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8596
 127+ 8596 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8598 04           	db 4 											; (Cuad_objeto).
 129+ 8599 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 859D
 131+ 859D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 859E
 133+ 859E 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A0 00 00        	defw 0											;	" " " " " " "
 135+ 85A2 00 00        	defw 0											;	" " " " " " "
 136+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A8
 138+ 85A8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85AA 00 00        	defw 0											;	" " " " " " "
 140+ 85AC 00 00        	defw 0											;	" " " " " " "
 141+ 85AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85B2
 143+ 85B2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85B4
 145+ 85B4 00           	db 0											; (Autoriza_movimiento).
 146+ 85B5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B9 00 00
 147+ 85BB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85BE
 149+ 85BE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85C0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85C1
 152+ 85C1 00           	db 0 											; (Columnas).
 153+ 85C2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85C4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85C7
 156+ 85C7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85C7
 158+ 85C7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85C9 00 00        	defw 0											; (Posicion_actual).
 160+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85D0
 163+ 85D0 00           	db %00000000 									; (Attr).
 164+ 85D1
 165+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85D9
 170+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85DB 00           	db 0											; (Cuad_objeto).
 172+ 85DC
 173+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 85E0
 175+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 85E1
 177+ 85E1 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 85E3 00 00        	defw 0											;	" " " " " " "
 179+ 85E5 00 00        	defw 0											;	" " " " " " "
 180+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85EB
 182+ 85EB 00 00        	db 0,0											; Variables_de_pintado
 183+ 85ED 00 00        	defw 0											;	" " " " " " "
 184+ 85EF 00 00        	defw 0											;	" " " " " " "
 185+ 85F1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85F5
 187+ 85F5 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 85F7
 189+ 85F7 00           	db 0											; (Autoriza_movimiento).
 190+ 85F8 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 85FC 00 00
 191+ 85FE 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8601
 193+ 8601 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8603 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8604
 196+ 8604 00           	db 0 											; (Columnas).
 197+ 8605 00 00        	defw 0											; (Limite_horizontal).
 198+ 8607 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 860A
 200+ 860A              ; ---------- ---------- ---------- ---------- ----------
 201+ 860A
 202+ 860A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 860C 00 00        	defw 0											; (Posicion_actual).
 204+ 860E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8610 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8613
 207+ 8613 00           	db %00000000 									; (Attr).
 208+ 8614
 209+ 8614 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8616 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 861A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 861C
 214+ 861C 00 00        	defw 0											; (Posicion_inicio).
 215+ 861E 00           	db 0											; (Cuad_objeto).
 216+ 861F
 217+ 861F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8623
 219+ 8623 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8624
 221+ 8624 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8626 00 00        	defw 0											;	" " " " " " "
 223+ 8628 00 00        	defw 0											;	" " " " " " "
 224+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 862E
 226+ 862E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8630 00 00        	defw 0											;	" " " " " " "
 228+ 8632 00 00        	defw 0											;	" " " " " " "
 229+ 8634 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8638
 231+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 863A
 233+ 863A 00           	db 0											; (Autoriza_movimiento).
 234+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 863F 00 00
 235+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8644
 237+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8647
 240+ 8647 00           	db 0 											; (Columnas).
 241+ 8648 00 00        	defw 0											; (Limite_horizontal).
 242+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 864D
 244+ 864D              ; ---------- ---------- ---------- ---------- ----------
 245+ 864D
 246+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 864F 00 00        	defw 0											; (Posicion_actual).
 248+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8656
 251+ 8656 00           	db %00000000 									; (Attr).
 252+ 8657
 253+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 865F
 258+ 865F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8661 00           	db 0											; (Cuad_objeto).
 260+ 8662
 261+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8666
 263+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8667
 265+ 8667 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8669 00 00        	defw 0											;	" " " " " " "
 267+ 866B 00 00        	defw 0											;	" " " " " " "
 268+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8671
 270+ 8671 00 00        	db 0,0											; Variables_de_pintado
 271+ 8673 00 00        	defw 0											;	" " " " " " "
 272+ 8675 00 00        	defw 0											;	" " " " " " "
 273+ 8677 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 867B
 275+ 867B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 867D
 277+ 867D 00           	db 0											; (Autoriza_movimiento).
 278+ 867E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 8682 00 00
 279+ 8684 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 8687
 281+ 8687 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 8689 00           	db 0											; (Cola_de_desplazamiento).
 283+ 868A
 284+ 868A 00           	db 0 											; (Columnas).
 285+ 868B 00 00        	defw 0											; (Limite_horizontal).
 286+ 868D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 8690
 288+ 8690              ; ---------- ---------- ---------- ---------- ----------
 289+ 8690
 290+ 8690 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 8692 00 00        	defw 0											; (Posicion_actual).
 292+ 8694 00 00        	defw 0 											; (Puntero_objeto).
 293+ 8696 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 8699
 295+ 8699 00           	db %00000000 									; (Attr).
 296+ 869A
 297+ 869A 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 869C 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 869E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86A2
 302+ 86A2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86A4 00           	db 0											; (Cuad_objeto).
 304+ 86A5
 305+ 86A5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86A9
 307+ 86A9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86AA
 309+ 86AA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86AC 00 00        	defw 0											;	" " " " " " "
 311+ 86AE 00 00        	defw 0											;	" " " " " " "
 312+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86B4
 314+ 86B4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86B6 00 00        	defw 0											;	" " " " " " "
 316+ 86B8 00 00        	defw 0											;	" " " " " " "
 317+ 86BA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86BE
 319+ 86BE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86C0
 321+ 86C0 00           	db 0											; (Autoriza_movimiento).
 322+ 86C1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86C5 00 00
 323+ 86C7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86CA
 325+ 86CA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86CC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86CD
 328+ 86CD 00           	db 0 											; (Columnas).
 329+ 86CE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86D0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86D3
 332+ 86D3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86D3
 334+ 86D3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86D5 00 00        	defw 0											; (Posicion_actual).
 336+ 86D7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86D9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86DC
 339+ 86DC 00           	db %00000000 									; (Attr).
 340+ 86DD
 341+ 86DD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86DF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 86E1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 86E3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 86E5
 346+ 86E5 00 00        	defw 0											; (Posicion_inicio).
 347+ 86E7 00           	db 0											; (Cuad_objeto).
 348+ 86E8
 349+ 86E8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 86EC
 351+ 86EC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 86ED
 353+ 86ED 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 86EF 00 00        	defw 0											;	" " " " " " "
 355+ 86F1 00 00        	defw 0											;	" " " " " " "
 356+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86F7
 358+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 359+ 86F9 00 00        	defw 0											;	" " " " " " "
 360+ 86FB 00 00        	defw 0											;	" " " " " " "
 361+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8701
 363+ 8701 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8703
 365+ 8703 00           	db 0											; (Autoriza_movimiento).
 366+ 8704 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8708 00 00
 367+ 870A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 870D
 369+ 870D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 870F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8710
 372+ 8710 00           	db 0 											; (Columnas).
 373+ 8711 00 00        	defw 0											; (Limite_horizontal).
 374+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8716
 376+ 8716              ; ---------- ---------- ---------- ---------- ----------
 377+ 8716
 378+ 8716 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8718 00 00        	defw 0											; (Posicion_actual).
 380+ 871A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 871C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 871F
 383+ 871F 00           	db %00000000 									; (Attr).
 384+ 8720
 385+ 8720 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8722 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8724 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8728
 390+ 8728 00 00        	defw 0											; (Posicion_inicio).
 391+ 872A 00           	db 0											; (Cuad_objeto).
 392+ 872B
 393+ 872B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 872F
 395+ 872F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8730
 397+ 8730 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8732 00 00        	defw 0											;	" " " " " " "
 399+ 8734 00 00        	defw 0											;	" " " " " " "
 400+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 873A
 402+ 873A 00 00        	db 0,0											; Variables_de_pintado
 403+ 873C 00 00        	defw 0											;	" " " " " " "
 404+ 873E 00 00        	defw 0											;	" " " " " " "
 405+ 8740 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8744
 407+ 8744 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8746
 409+ 8746 00           	db 0											; (Autoriza_movimiento).
 410+ 8747 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 874B 00 00
 411+ 874D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8750
 413+ 8750 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8752 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8753
 416+ 8753 00           	db 0 											; (Columnas).
 417+ 8754 00 00        	defw 0											; (Limite_horizontal).
 418+ 8756 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8759
 420+ 8759              ; ---------- ---------- ---------- ---------- ----------
 421+ 8759
 422+ 8759 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 875B 00 00        	defw 0											; (Posicion_actual).
 424+ 875D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 875F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8762
 427+ 8762 00           	db %00000000 									; (Attr).
 428+ 8763
 429+ 8763 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8765 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8769 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 876B
 434+ 876B 00 00        	defw 0											; (Posicion_inicio).
 435+ 876D 00           	db 0											; (Cuad_objeto).
 436+ 876E
 437+ 876E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8772
 439+ 8772 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8773
 441+ 8773 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8775 00 00        	defw 0											;	" " " " " " "
 443+ 8777 00 00        	defw 0											;	" " " " " " "
 444+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 877D
 446+ 877D 00 00        	db 0,0											; Variables_de_pintado
 447+ 877F 00 00        	defw 0											;	" " " " " " "
 448+ 8781 00 00        	defw 0											;	" " " " " " "
 449+ 8783 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 8787
 451+ 8787 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 8789
 453+ 8789 00           	db 0											; (Autoriza_movimiento).
 454+ 878A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 878E 00 00
 455+ 8790 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 8793
 457+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 459+ 8796
 460+ 8796 00           	db 0 											; (Columnas).
 461+ 8797 00 00        	defw 0											; (Limite_horizontal).
 462+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 879C
 464+ 879C              ; ---------- ---------- ---------- ---------- ----------
 465+ 879C
 466+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 879E 00 00        	defw 0											; (Posicion_actual).
 468+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87A5
 471+ 87A5 00           	db %00000000 									; (Attr).
 472+ 87A6
 473+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87AE
 478+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87B0 00           	db 0											; (Cuad_objeto).
 480+ 87B1
 481+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87B5
 483+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87B6
 485+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87B8 00 00        	defw 0											;	" " " " " " "
 487+ 87BA 00 00        	defw 0											;	" " " " " " "
 488+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87C0
 490+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87C2 00 00        	defw 0											;	" " " " " " "
 492+ 87C4 00 00        	defw 0											;	" " " " " " "
 493+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87CA
 495+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87CC
 497+ 87CC 00           	db 0											; (Autoriza_movimiento).
 498+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87D1 00 00
 499+ 87D3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87D6
 501+ 87D6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87D8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87D9
 504+ 87D9 00           	db 0 											; (Columnas).
 505+ 87DA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87DC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87DF
 508+ 87DF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87DF
 510+ 87DF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 87E1 00 00        	defw 0											; (Posicion_actual).
 512+ 87E3 00 00        	defw 0 											; (Puntero_objeto).
 513+ 87E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 87E8
 515+ 87E8 00           	db %00000000 									; (Attr).
 516+ 87E9
 517+ 87E9 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 87EB 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 87ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 87EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 87F1
 522+ 87F1 00 00        	defw 0											; (Posicion_inicio).
 523+ 87F3 00           	db 0											; (Cuad_objeto).
 524+ 87F4
 525+ 87F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 87F8
 527+ 87F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 87F9
 529+ 87F9 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 87FB 00 00        	defw 0											;	" " " " " " "
 531+ 87FD 00 00        	defw 0											;	" " " " " " "
 532+ 87FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8803
 534+ 8803 00 00        	db 0,0											; Variables_de_pintado
 535+ 8805 00 00        	defw 0											;	" " " " " " "
 536+ 8807 00 00        	defw 0											;	" " " " " " "
 537+ 8809 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 880D
 539+ 880D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 880F
 541+ 880F 00           	db 0											; (Autoriza_movimiento).
 542+ 8810 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8814 00 00
 543+ 8816 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8819
 545+ 8819 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 881B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 881C
 548+ 881C 00           	db 0 											; (Columnas).
 549+ 881D 00 00        	defw 0											; (Limite_horizontal).
 550+ 881F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8822
 552+ 8822              ; ---------- ---------- ---------- ---------- ----------
 553+ 8822
 554+ 8822 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8824 00 00        	defw 0											; (Posicion_actual).
 556+ 8826 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8828 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 882B
 559+ 882B 00           	db %00000000 									; (Attr).
 560+ 882C
 561+ 882C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 882E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8832 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8834
 566+ 8834 00 00        	defw 0											; (Posicion_inicio).
 567+ 8836 00           	db 0											; (Cuad_objeto).
 568+ 8837
 569+ 8837 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 883B
 571+ 883B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 883C
 573+ 883C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 883E 00 00        	defw 0											;	" " " " " " "
 575+ 8840 00 00        	defw 0											;	" " " " " " "
 576+ 8842 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8846
 578+ 8846 00 00        	db 0,0											; Variables_de_pintado
 579+ 8848 00 00        	defw 0											;	" " " " " " "
 580+ 884A 00 00        	defw 0											;	" " " " " " "
 581+ 884C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8850
 583+ 8850 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8852
 585+ 8852 00           	db 0											; (Autoriza_movimiento).
 586+ 8853 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8857 00 00
 587+ 8859 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 885C
 589+ 885C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 885E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 885F
 592+ 885F 00           	db 0 											; (Columnas).
 593+ 8860 00 00        	defw 0											; (Limite_horizontal).
 594+ 8862 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8865
 596+ 8865              ; -------------------------------------------------------------------------------------
 597+ 8865              ;
 598+ 8865              ;	20/05/23
 599+ 8865              ;
 600+ 8865              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8865              ;
 602+ 8865              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8865              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8865              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8865              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8865
 607+ 8865              Indice_de_entidades
 608+ 8865
 609+ 8865 6F 88        	defw Entidad_1
 610+ 8867 7F 88        	defw Entidad_2
 611+ 8869 8F 88        	defw Entidad_3
 612+ 886B 9F 88        	defw Entidad_4
 613+ 886D AF 88        	defw Entidad_5
 614+ 886F
 615+ 886F              ;	BADSAT, (Satélite malvado).
 616+ 886F
 617+ 886F 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 618+ 8871 04           	db %00000100									; (Attr).
 619+ 8872 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 620+ 8874 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 621+ 8876 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 622+ 8878 01           	db 1											; (Cuad_objeto).
 623+ 8879 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 624+ 887D EA 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 625+ 887F
 626+ 887F 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 627+ 8881 02           	db %00000010									; (Attr).
 628+ 8882 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 629+ 8884 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 630+ 8886 40 50        	defw $5040                                      ; (Posicion_inicio).
 631+ 8888 01           	db 1											; (Cuad_objeto).
 632+ 8889 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 633+ 888D EA 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 634+ 888F
 635+ 888F 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 636+ 8891 04           	db %00000100									; (Attr).
 637+ 8892 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 638+ 8894 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 639+ 8896 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 640+ 8898 01           	db 1											; (Cuad_objeto).
 641+ 8899 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 642+ 889D EA 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 643+ 889F
 644+ 889F 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 645+ 88A1 01           	db %00000001									; (Attr).
 646+ 88A2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 647+ 88A4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 648+ 88A6 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 649+ 88A8 01           	db 1											; (Cuad_objeto).
 650+ 88A9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 651+ 88AD EA 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 652+ 88AF
 653+ 88AF 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 654+ 88B1 01           	db %00000001									; (Attr).
 655+ 88B2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 656+ 88B4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 657+ 88B6 07 40        	defw $4007                                      ; (Posicion_inicio).
 658+ 88B8 01           	db 1											; (Cuad_objeto).
 659+ 88B9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 660+ 88BD EA 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 661+ 88BF
# file closed: Cajas_y_disparos.asm
  29  88BF              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BF              ; 13/05/23
   2+ 88BF
   3+ 88BF              Indice_de_niveles
   4+ 88BF
   5+ 88BF CD 88        	defw Nivel_1
   6+ 88C1 CF 88        	defw Nivel_2
   7+ 88C3 DC 88        	defw Nivel_3
   8+ 88C5 EC 88        	defw Nivel_4
   9+ 88C7 FE 88        	defw Nivel_5
  10+ 88C9
  11+ 88C9              ;	...
  12+ 88C9              ;	...
  13+ 88C9              ;	+ Niveles ...
  14+ 88C9
  15+ 88C9 00 00        	defw 0
  16+ 88CB 00 00        	defw 0
  17+ 88CD
  18+ 88CD 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CE 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88CF 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88D0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D4 01 02
  22+ 88D6 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88DA 01 02
  23+ 88DC 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88E1 01
  25+ 88E2 03 01 01 01  	db 3,1,1,1,1
  25+ 88E6 01
  26+ 88E7 03 01 01 01  	db 3,1,1,1,1
  26+ 88EB 01
  27+ 88EC 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88ED 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88F1 01
  29+ 88F2 04 01 01 01  	db 4,1,1,1,1
  29+ 88F6 01
  30+ 88F7 04 01 01 01  	db 4,1,1,1,1
  30+ 88FB 01
  31+ 88FC 02 03        	db 2,3
  32+ 88FE 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FF 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8903 01
  34+ 8904 05 01 01 01  	db 5,1,1,1,1
  34+ 8908 01
  35+ 8909 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890D 01
  36+ 890E 05 01 01 01  	db 5,1,1,1,1
  36+ 8912 01
  37+ 8913
  38+ 8913              ;---------------------------------------------------------------------------------------------------------------
  39+ 8913              ;
  40+ 8913              ;   21/5/23
  41+ 8913              ;
  42+ 8913              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8913              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8913              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8913              ;	_en la caja DRAW correspondiente.
  46+ 8913              ;
  47+ 8913              ;	MODIFICA: HL,DE y A.
  48+ 8913              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8913
  50+ 8913              Inicializa_Punteros_de_nivel
  51+ 8913
  52+ 8913 21 BF 88     	ld hl,Indice_de_niveles
  53+ 8916 22 4F 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8919 CD 44 8D     	call Extrae_address
  55+ 891C 7E           	ld a,(hl)
  56+ 891D 32 15 8A     	ld (Numero_de_entidades),a
  57+ 8920 23           	inc hl
  58+ 8921 22 51 8A     	ld (Datos_de_nivel),hl
  59+ 8924 C9           	ret
  60+ 8925
  61+ 8925              ;---------------------------------------------------------------------------------------------------------------
  62+ 8925              ;
  63+ 8925              ;   13/5/23
  64+ 8925              ;
  65+ 8925              ;	Destruye A,BC,HL,DE
  66+ 8925
  67+ 8925              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8925              ;	_del juego.
  69+ 8925
  70+ 8925              Prepara_cajas
  71+ 8925
  72+ 8925              ; Preparamos los punteros de las cajas.
  73+ 8925
  74+ 8925 21 6C 85     	ld hl,Indice_de_cajas
  75+ 8928 CD 44 8D     	call Extrae_address
  76+ 892B CD 68 89     	call Avanza_caja
  77+ 892E
  78+ 892E CD AC 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8931
  80+ 8931 2A 51 8A     	ld hl,(Datos_de_nivel)
  81+ 8934
  82+ 8934              ; HL está en los datos del nivel correspondiente.
  83+ 8934              ; B actuará como contador de cajas.
  84+ 8934
  85+ 8934 C5           1 push bc
  86+ 8935
  87+ 8935 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8936 CD 59 89     	call PreparaBC
  89+ 8939
  90+ 8939 21 65 88     	ld hl,Indice_de_entidades
  91+ 893C CD 61 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893F 22 1B 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8942
  94+ 8942 CD 72 89     	call Datos_de_entidad_a_caja
  95+ 8945
  96+ 8945 2A 13 8A     	ld hl,(Indice_restore_caja)
  97+ 8948 CD 44 8D     	call Extrae_address
  98+ 894B CD 68 89     	call Avanza_caja
  99+ 894E
 100+ 894E 2A 51 8A     	ld hl,(Datos_de_nivel)
 101+ 8951 23           	inc hl
 102+ 8952 22 51 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8955
 104+ 8955 C1           	pop bc
 105+ 8956 10 DC        	djnz 1B
 106+ 8958 C9           	ret
 107+ 8959
 108+ 8959 CB 27        PreparaBC sla a
 109+ 895B D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895D 4F           	ld c,a
 111+ 895E 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8960 C9           	ret
 113+ 8961
 114+ 8961 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8962 ED 4A        	adc hl,bc
 116+ 8964 CD 44 8D     	call Extrae_address
 117+ 8967 C9           	ret
 118+ 8968
 119+ 8968 22 0F 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 896B 13           	inc de
 121+ 896C 13           	inc de
 122+ 896D EB           	ex de,hl
 123+ 896E 22 13 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8971 C9           	ret
 125+ 8972
 126+ 8972              Datos_de_entidad_a_caja
 127+ 8972
 128+ 8972              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8972
 130+ 8972
 131+ 8972 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8976
 133+ 8976 01 02 00     	ld bc,2
 134+ 8979 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 897B
 136+ 897B 01 07 00     	ld bc,7
 137+ 897E CD A6 89     	call Situa_DE
 138+ 8981
 139+ 8981 01 05 00     	ld bc,5
 140+ 8984 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8986
 142+ 8986 01 04 00     	ld bc,4
 143+ 8989 CD A6 89     	call Situa_DE
 144+ 898C
 145+ 898C 01 07 00     	ld bc,7
 146+ 898F ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8991
 148+ 8991 01 18 00     	ld bc,24
 149+ 8994 CD A6 89     	call Situa_DE
 150+ 8997
 151+ 8997 01 02 00     	ld bc,2
 152+ 899A ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 899C
 154+ 899C              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 899C              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 899C
 157+ 899C 01 0F 00     	ld bc,15									; *****
 158+ 899F CD A6 89     	call Situa_DE
 159+ 89A2
 160+ 89A2 3E 03        	ld a,3
 161+ 89A4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A5
 163+ 89A5 C9           	ret
 164+ 89A6
 165+ 89A6 EB           Situa_DE ex de,hl
 166+ 89A7 A7           	and a
 167+ 89A8 ED 4A        	adc hl,bc
 168+ 89AA EB           	ex de,hl
 169+ 89AB C9           	ret
 170+ 89AC
 171+ 89AC              ;---------------------------------------------------------------------------------------------------------------
 172+ 89AC              ;
 173+ 89AC              ;	21/5/23
 174+ 89AC              ;
 175+ 89AC              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89AC              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89AC              ;
 178+ 89AC              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89AC              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89AC              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89AC              ;
 182+ 89AC              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89AC              ;	MODIFICA: A y B.
 184+ 89AC              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89AC
 186+ 89AC              Admin_num_entidades
 187+ 89AC
 188+ 89AC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89AC
 190+ 89AC 3A 15 8A     	ld a,(Numero_de_entidades)
 191+ 89AF A7           	and a
 192+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89B0              ;	jr z,$
 194+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89B0
 196+ 89B0 20 03        	jr nz,3F
 197+ 89B2
 198+ 89B2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89B2
 200+ 89B2 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B5
 202+ 89B5
 203+ 89B5 3A 15 8A     3 ld a,(Numero_de_entidades)
 204+ 89B8 FE 0A        	cp 10
 205+ 89BA 38 08        	jr c,1F
 206+ 89BC
 207+ 89BC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89BC              ; Actualizamos variables.
 209+ 89BC
 210+ 89BC 3E 0A        	ld a,10
 211+ 89BE 32 16 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89C1 47           	ld b,a
 213+ 89C2 18 04        	jr 2F
 214+ 89C4
 215+ 89C4              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C4              ; (Numero_de_entidades)="0".
 217+ 89C4
 218+ 89C4 32 16 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C7 47           	ld b,a
 220+ 89C8 C9           2 ret
# file closed: Niveles.asm
  30  89C9
  31  89C9              ; ******************************************************************************************************************************************************************************************
  32  89C9              ; Constantes.
  33  89C9              ; ******************************************************************************************************************************************************************************************
  34  89C9              ;
  35  89C9              ; 25/05/23
  36  89C9              ;
  37  89C9              ; Constantes generales.
  38  89C9              ;
  39  89C9
  40  89C9              Sprite_vacio equ $f000
  41  89C9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  42  89C9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  43  89C9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  44  89C9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  45  89C9
  46  89C9              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  47  89C9              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  48  89C9              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  49  89C9              Album_de_fotos_disparos equ $7211						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  50  89C9              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  51  89C9              ;                               				        ; De momento situamos este almacén en $7060.
  52  89C9              Album_de_fotos_1 equ $7085
  53  89C9              Album_de_fotos_disparos_1 equ $7295						;Termina en 71fah (10 disparos).
  54  89C9              Album_de_fotos_2 equ $7109
  55  89C9              Album_de_fotos_disparos_2 equ $7319
  56  89C9              Album_de_fotos_3 equ $718d
  57  89C9              Album_de_fotos_disparos_3 equ $739d
  58  89C9
  59  89C9              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  60  89C9              ; 78h es el espacio necesario en (Album_de_fotos_disparos) para 10 disparos en pantalla.
  61  89C9
  62  89C9              ; ******************************************************************************************************************************************************************************************
  63  89C9              ; Variables.
  64  89C9              ; ******************************************************************************************************************************************************************************************
  65  89C9              ;
  66  89C9              ; 28/07/23
  67  89C9              ;
  68  89C9              ; Variables de DRAW. (Motor principal).
  69  89C9              ;
  70  89C9              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  71  89C9
  72  89C9 00           Filas db 0												; Filas. [DRAW]
  73  89CA 00           Columns db 0  											; Nº de columnas. [DRAW]
  74  89CB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  75  89CD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  76  89CF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  77  89D0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  78  89D1
  79  89D1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  80  89D1
  81  89D1 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  82  89D2              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  83  89D2              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  84  89D2 00           Attr db 0												; Atributos de la entidad:
  85  89D3
  86  89D3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  87  89D3              ;
  88  89D3              ;	COLORES: 0 ..... NEGRO
  89  89D3              ;    		 1 ..... AZUL
  90  89D3              ; 			 2 ..... ROJO
  91  89D3              ;			 3 ..... MAGENTA
  92  89D3              ; 			 4 ..... VERDE
  93  89D3              ; 			 5 ..... CIAN
  94  89D3              ;			 6 ..... AMARILLO
  95  89D3              ; 			 7 ..... BLANCO
  96  89D3
  97  89D3 00 00        Indice_Sprite_der defw 0
  98  89D5 00 00        Indice_Sprite_izq defw 0
  99  89D7 00 00        Puntero_DESPLZ_der defw 0
 100  89D9 00 00        Puntero_DESPLZ_izq defw 0
 101  89DB
 102  89DB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 103  89DD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 104  89DE
 105  89DE              ; Variables de objeto. (Características).
 106  89DE
 107  89DE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 108  89DF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 109  89E0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 110  89E1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 111  89E2
 112  89E2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 113  89E3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 114  89E3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 115  89E3
 116  89E3 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 117  89E5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 118  89E7 00 00        	defw 0
 119  89E9 00 00 00 00  	db 0,0,0,0
 120  89ED
 121  89ED 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 122  89EF 00 00        	defw 0
 123  89F1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 124  89F3 00 00 00 00  	db 0,0,0,0
 125  89F7
 126  89F7              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 127  89F7
 128  89F7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 129  89F8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 130  89F8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 131  89F8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 132  89F8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 133  89F8              ;
 134  89F8              ; 														DESCRIPCIÖN:
 135  89F8              ;
 136  89F8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 137  89F8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 138  89F8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 139  89F8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 140  89F8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 141  89F8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 142  89F8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 143  89F8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 144  89F8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 145  89F8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 146  89F8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 147  89F8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 148  89F8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 149  89F8              ;
 150  89F8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 151  89F8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 152  89F8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 153  89F8
 154  89F8 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 155  89F9
 156  89F9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 157  89F9
 158  89F9 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 159  89FA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 160  89FC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 161  89FE 00 00        Puntero_indice_mov_bucle defw 0							;
 162  8A00              ;
 163  8A00              ;
 164  8A00 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 165  8A01              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 166  8A01              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 167  8A01 00           Incrementa_puntero_backup db 0
 168  8A02 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 169  8A03              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 170  8A03 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 171  8A04 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 172  8A05 00           Cola_de_desplazamiento db 0								; Este byte indica:
 173  8A06              ;
 174  8A06              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 175  8A06              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 176  8A06              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 177  8A06              ;
 178  8A06              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 179  8A06              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 180  8A06              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 181  8A06              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 182  8A06              ;
 183  8A06              ;														;	"$ff" ..... Bucle infinito de repetición.
 184  8A06              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 185  8A06              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 186  8A06
 187  8A06
 188  8A06              ; Variables de funcionamiento. [DRAW].
 189  8A06
 190  8A06 00           Columnas db 0
 191  8A07 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 192  8A09              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 193  8A09 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 194  8A0A
 195  8A0A              ; variables de control general.
 196  8A0A
 197  8A0A 00           Ctrl_2 db 0
 198  8A0B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 199  8A0B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 200  8A0B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 201  8A0B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 202  8A0B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 203  8A0B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 204  8A0B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 205  8A0B              ;
 206  8A0B              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 207  8A0B              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 208  8A0B              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 209  8A0B              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 210  8A0B              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 211  8A0B
 212  8A0B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 213  8A0C
 214  8A0C              ;! 67 Bytes por entidad.
 215  8A0C
 216  8A0C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 217  8A0C              ;					         		---------;      ;---------
 218  8A0C
 219  8A0C
 220  8A0C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 221  8A0C
 222  8A0C 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 223  8A0D
 224  8A0D              ;														DESCRIPCIÓN:
 225  8A0D              ;
 226  8A0D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 227  8A0D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 228  8A0D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 229  8A0D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 230  8A0D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 231  8A0D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 232  8A0D              ;														BIT 3, Recarga de nueva oleada.
 233  8A0D              ;														BIT 4, Recarga de nueva oleada.
 234  8A0D
 235  8A0D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 236  8A0F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 237  8A0F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 238  8A0F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 239  8A0F
 240  8A0F
 241  8A0F
 242  8A0F              ; Gestión de ENTIDADES y CAJAS.
 243  8A0F
 244  8A0F 00 00        Puntero_store_caja defw 0
 245  8A11 00 00        Puntero_restore_caja defw 0
 246  8A13 00 00        Indice_restore_caja defw 0
 247  8A15 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 248  8A16 00           Numero_parcial_de_entidades db 0
 249  8A17 00           Entidades_en_curso db 0									; ..... ..... .....
 250  8A18 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 251  8A19              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 252  8A19              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 253  8A19              ;														; _ (Numero_de_malotes)="0".
 254  8A19 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 255  8A1B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 256  8A1D              ;														; _ puntero (Indice_entidades).
 257  8A1D
 258  8A1D
 259  8A1D              ;---------------------------------------------------------------------------------------------------------------
 260  8A1D              ;
 261  8A1D              ; Sirven para PINTAR.
 262  8A1D
 263  8A1D 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 264  8A1F              ;															; _variable para almacenar lo posición del puntero_
 265  8A1F              ; 															; _de pila, SP.
 266  8A1F 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 267  8A21              ;															; La utiliza la rutina [Extrae_foto_registros].
 268  8A21 00 70        Stack_snapshot defw Album_de_fotos							; Puntero que indica la posición de memoria donde vamos a guardar_
 269  8A23              ;															; _el snapshot de los registros de la siguiente entidad.
 270  8A23              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 271  8A23 11 72        Stack_snapshot_disparos defw Album_de_fotos_disparos		; Puntero que indica la posición de memoria donde vamos a guardar_
 272  8A25              ;															; _el snapshot de los registros del siguiente disparo.
 273  8A25              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 274  8A25 85 70        Stack_snapshot_1 defw Album_de_fotos_1
 275  8A27 95 72        Stack_snapshot_disparos_1 defw Album_de_fotos_disparos_1
 276  8A29 09 71        Stack_snapshot_2 defw Album_de_fotos_2
 277  8A2B 19 73        Stack_snapshot_disparos_2 defw Album_de_fotos_disparos_2
 278  8A2D 8D 71        Stack_snapshot_3 defw Album_de_fotos_3
 279  8A2F 9D 73        Stack_snapshot_disparos_3 defw Album_de_fotos_disparos_3
 280  8A31
 281  8A31              ;---------------------------------------------------------------------------------------------------------------
 282  8A31
 283  8A31              ; Gestión de Disparos.
 284  8A31
 285  8A31 00           Numero_de_disparotes db 0
 286  8A32 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 287  8A34 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 288  8A36 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 289  8A37              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 290  8A37              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 291  8A37 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 292  8A39              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 293  8A39              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 294  8A39              ;														; _produzca colisión.
 295  8A39 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 296  8A3B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 297  8A3B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 298  8A3E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 299  8A3E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 300  8A41              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 301  8A41 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 302  8A43 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 303  8A44
 304  8A44              ;---------------------------------------------------------------------------------------------------------------
 305  8A44
 306  8A44              ; Relojes y temporizaciones.
 307  8A44
 308  8A44 00           Contador_de_frames db 0
 309  8A45 04           Clock_explosion db 4
 310  8A46 1E           Clock_Entidades_en_curso db 30
 311  8A47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 312  8A48              ;														; Repite la oleada de entidades.
 313  8A48 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 314  8A49 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 315  8A4A 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 316  8A4B
 317  8A4B 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 318  8A4C 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 319  8A4D 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 320  8A4E
 321  8A4E              ;---------------------------------------------------------------------------------------------------------------
 322  8A4E
 323  8A4E              ; Gestión de NIVELES.
 324  8A4E
 325  8A4E 00           Nivel db 0												; Nivel actual del juego.
 326  8A4F 00 00        Puntero_indice_NIVELES defw 0
 327  8A51 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 328  8A53              ; 														; _ que definen el NIVEL.
 329  8A53              ; Y todo comienza aquí .....
 330  8A53              ;
 331  8A53              ; Rutina principal *************************************************************************************************************************************************************************
 332  8A53              ;
 333  8A53              ;	14/11/22
 334  8A53
 335  8A53              START
 336  8A53
 337  8A53 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 338  8A56 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 339  8A58 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 340  8A5A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 341  8A5C F3           	DI
 342  8A5D
 343  8A5D 3E 07        	ld a,%00000111
 344  8A5F CD 24 99     	call Cls
 345  8A62
 346  8A62              ;	call Pinta_marco
 347  8A62
 348  8A62
 349  8A62 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 350  8A65
 351  8A65 CD 1D 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 352  8A68
 353  8A68 CD 25 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 354  8A6B
 355  8A6B CD F0 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 356  8A6E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 357  8A6E CD CD 8D     	call Restore_entidad
 358  8A71
 359  8A71 21 16 8A     	ld hl,Numero_parcial_de_entidades
 360  8A74 46           	ld b,(hl)
 361  8A75 04           	inc b
 362  8A76 05           	dec b
 363  8A77 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 364  8A79
 365  8A79              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 366  8A79              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 367  8A79              ;	Pintamos el resto de entidades:
 368  8A79
 369  8A79              ;	INICIA ENTIDADES !!!!!
 370  8A79
 371  8A79 C5           1 push bc  												; Guardo el contador de entidades.
 372  8A7A
 373  8A7A CD 97 8C     	call Inicia_entidad
 374  8A7D
 375  8A7D C1           	pop bc
 376  8A7E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 377  8A80
 378  8A80              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 379  8A80              ; (Esto se dá cuando se inicia una nueva oleada).
 380  8A80
 381  8A80 3A 0C 8A     	ld a,(Ctrl_1)
 382  8A83 CB 5F        	bit 3,a
 383  8A85 20 18        	jr nz,5F											; Loop
 384  8A87
 385  8A87              ; 	INICIA AMADEUS !!!!!
 386  8A87
 387  8A87 CD F4 8D     3 call Restore_Amadeus
 388  8A8A CD 4A 8D     	call Inicia_Puntero_objeto
 389  8A8D CD 64 93     	call Draw
 390  8A90 CD A0 7F     	call Guarda_foto_registros
 391  8A93 11 84 85     	ld de,Amadeus_db
 392  8A96 CD 06 8E     	call Store_Amadeus
 393  8A99
 394  8A99              ; 	INICIA DISPAROS !!!!!
 395  8A99
 396  8A99 CD 06 8D     	call Inicia_Puntero_Disparo_Entidades
 397  8A9C CD 0D 8D     	call Inicia_Puntero_Disparo_Amadeus
 398  8A9F
 399  8A9F              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 400  8A9F
 401  8A9F CD F0 8C     5 call Inicia_punteros_de_cajas
 402  8AA2 CD CD 8D     	call Restore_entidad
 403  8AA5
 404  8AA5 3A 0C 8A     	ld a,(Ctrl_1)
 405  8AA8 CB 5F        	bit 3,a
 406  8AAA 28 0A        	jr z,6F
 407  8AAC
 408  8AAC              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 409  8AAC
 410  8AAC 21 0C 8A     	ld hl,Ctrl_1
 411  8AAF CB 9E        	res 3,(hl)
 412  8AB1 CD 14 8D     	call Calcula_numero_de_malotes
 413  8AB4 18 07        	jr 7F
 414  8AB6
 415  8AB6              ; ----------
 416  8AB6
 417  8AB6 3A 16 8A     6 ld a,(Numero_parcial_de_entidades)
 418  8AB9 3C           	inc a
 419  8ABA 32 18 8A     	ld (Numero_de_malotes),a
 420  8ABD
 421  8ABD              ; --- el 1er FRAME, (inicio).
 422  8ABD
 423  8ABD              7
 424  8ABD              ;	ld de,Album_de_fotos									; Vamos a imprimir el 1er FRAME. Volcamos los datos_
 425  8ABD              ;	call Imprime_inicio 									; _ de Album_de_fotos_3 a Album_de_fotos.
 426  8ABD
 427  8ABD              ;	ld hl,(Stack_snapshot_2)
 428  8ABD              ;	ld (Stack_snapshot),hl
 429  8ABD
 430  8ABD              ;	ld hl,Album_de_fotos_2
 431  8ABD              ;	ld (Stack_snapshot_2),hl
 432  8ABD              ; ------------------
 433  8ABD
 434  8ABD              ; ------------------------------------
 435  8ABD AF           	xor a
 436  8ABE FB           2 ei ; Interrupciones habilitadas.
 437  8ABF 28 FD        	jr z,2B
 438  8AC1              ; ------------------------------------
 439  8AC1
 440  8AC1 3A 44 8A     	ld a,(Contador_de_frames)
 441  8AC4 47           	ld b,a
 442  8AC5 3A 47 8A     	ld a,(Activa_recarga_cajas)
 443  8AC8 B8           	cp b
 444  8AC9 28 08        	jr z,8F
 445  8ACB
 446  8ACB 21 0C 8A     	ld hl,Ctrl_1
 447  8ACE CB E6        	set 4,(hl)
 448  8AD0 AF           	xor a
 449  8AD1 18 EB        	jr 2B
 450  8AD3
 451  8AD3 21 0C 8A     8 ld hl,Ctrl_1
 452  8AD6 CB A6        	res 4,(hl)
 453  8AD8 F3           	di
 454  8AD9
 455  8AD9 3A 44 8A     	ld a,(Contador_de_frames)
 456  8ADC
 457  8ADC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 458  8ADC              ;! _ IMPREDECIBLE !!!!
 459  8ADC
 460  8ADC C6 0A        	add 10
 461  8ADE 32 46 8A     	ld (Clock_Entidades_en_curso),a
 462  8AE1
 463  8AE1 C3 68 8A     	jp 4B
 464  8AE4
 465  8AE4
 466  8AE4              ; ----------------------------------------------------------------------
 467  8AE4
 468  8AE4              Frame
 469  8AE4
 470  8AE4              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 471  8AE4              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 472  8AE4
 473  8AE4              ; PINTAMOS.
 474  8AE4
 475  8AE4 3E 02            ld a,2
 476  8AE6 D3 FE            out ($fe),a											; Rojo.
 477  8AE8 CD 72 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 478  8AEB CD B1 96     	call Extrae_foto_disparos
 479  8AEE 3E 01            ld a,1
 480  8AF0 D3 FE            out ($fe),a											; Azul.
 481  8AF2
 482  8AF2              ; ----------------------------------------------------------------------
 483  8AF2
 484  8AF2 CD BC 90     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 485  8AF5
 486  8AF5 21 00 70     	ld hl,Album_de_fotos
 487  8AF8 22 21 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 488  8AFB              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 489  8AFB              ; Gestiona los álbumes de fotos.
 490  8AFB
 491  8AFB CD D5 7F     	call Gestiona_albumes_de_fotos
 492  8AFE
 493  8AFE              ; RELOJES.
 494  8AFE
 495  8AFE 21 44 8A     	ld hl,Contador_de_frames
 496  8B01 34           	inc (hl)											; 0 - 255
 497  8B02
 498  8B02 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 499  8B05 47           	ld b,a
 500  8B06 3A 44 8A     	ld a,(Contador_de_frames)
 501  8B09 B8           	cp b
 502  8B0A 20 18        	jr nz,13F
 503  8B0C
 504  8B0C 3A 16 8A     	ld a,(Numero_parcial_de_entidades)
 505  8B0F 47           	ld b,a
 506  8B10 3A 17 8A     	ld a,(Entidades_en_curso)
 507  8B13 B8           	cp b
 508  8B14 28 0E        	jr z,13F
 509  8B16 30 0C        	jr nc,13F
 510  8B18
 511  8B18 3C           	inc a
 512  8B19 32 17 8A     	ld (Entidades_en_curso),a
 513  8B1C
 514  8B1C 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 515  8B1F
 516  8B1F              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 517  8B1F              ;! _ IMPREDECIBLE !!!!
 518  8B1F
 519  8B1F C6 64        	add 100
 520  8B21 32 46 8A     	ld (Clock_Entidades_en_curso),a
 521  8B24
 522  8B24              ; Habilita disparos.
 523  8B24
 524  8B24 21 48 8A     13 ld hl,Disparo_Amadeus
 525  8B27 11 4A 8A     	ld de,CLOCK_repone_disparo_Amadeus
 526  8B2A CD EB 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 527  8B2D
 528  8B2D 21 4B 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 529  8B30 11 4D 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 530  8B33 CD EB 9F     	call Habilita_disparos
 531  8B36
 532  8B36              ; COLISIONES.
 533  8B36
 534  8B36 CD 46 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 535  8B39
 536  8B39              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 537  8B39              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 538  8B39              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 539  8B39
 540  8B39 AF           	xor a
 541  8B3A 32 36 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 542  8B3D
 543  8B3D CD F0 8C     	call Inicia_punteros_de_cajas
 544  8B40 CD CD 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 545  8B43              ; 														; _ en DRAW.
 546  8B43 3A C9 89     	ld a,(Filas)
 547  8B46 A7           	and a
 548  8B47 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 549  8B49 CD DF 8D     	call Incrementa_punteros_de_cajas
 550  8B4C 18 F2        	jr 12B
 551  8B4E
 552  8B4E              ; ---------------------------------------------------------------------------------------
 553  8B4E
 554  8B4E 3A 16 8A     10 ld a,(Numero_parcial_de_entidades)
 555  8B51 47               ld b,a
 556  8B52 A7           	and a
 557  8B53 20 14        	jr nz,2F
 558  8B55
 559  8B55 21 0C 8A     	ld hl,Ctrl_1
 560  8B58 CB 66        	bit 4,(hl)
 561  8B5A C2 E6 8B     	jp nz,4F
 562  8B5D
 563  8B5D 21 0C 8A     	ld hl,Ctrl_1
 564  8B60 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 565  8B62
 566  8B62 3A 44 8A     	ld a,(Contador_de_frames)
 567  8B65 3C           	inc a
 568  8B66 32 47 8A     	ld (Activa_recarga_cajas),a
 569  8B69
 570  8B69              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 571  8B69
 572  8B69 3A 17 8A     2 ld a,(Entidades_en_curso)
 573  8B6C A7           	and a
 574  8B6D CA E6 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 575  8B70 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 576  8B71
 577  8B71              ; Código que ejecutamos con cada entidad:
 578  8B71              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 579  8B71
 580  8B71 C5           15 push bc 												; Nº de entidades en curso.
 581  8B72
 582  8B72              ; Impacto ???
 583  8B72
 584  8B72 3A E2 89     33 ld a,(Impacto)
 585  8B75 A7           	and a
 586  8B76 28 2D        	jr z,8F
 587  8B78
 588  8B78              ; Hay Impacto en esta entidad.
 589  8B78
 590  8B78 21 45 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 591  8B7B 35           	dec (hl)
 592  8B7C 20 62        	jr nz,6F
 593  8B7E
 594  8B7E              ;! Velocidad de la animación de la explosión.
 595  8B7E
 596  8B7E 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 597  8B80              ;														; _,(velocidad de la explosión).
 598  8B80 CD A7 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 599  8B83
 600  8B83              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 601  8B83
 602  8B83 3A 0A 8A     	ld a,(Ctrl_2)
 603  8B86 CB 4F        	bit 1,a
 604  8B88 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 605  8B8A
 606  8B8A              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 607  8B8A
 608  8B8A 3A D1 89     	ld a,(CTRL_DESPLZ)
 609  8B8D A7           	and a
 610  8B8E 20 08        	jr nz,21F
 611  8B90
 612  8B90 21 84 84     	ld hl,Indice_Explosion_2x2-2
 613  8B93 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 614  8B96 18 06        	jr 22F
 615  8B98
 616  8B98 21 EE 83     21 ld hl,Indice_Explosion_2x3-2
 617  8B9B 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 618  8B9E
 619  8B9E 21 0A 8A     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 620  8BA1 CB CE        	set 1,(hl)
 621  8BA3 18 22        	jr 7F
 622  8BA5
 623  8BA5              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 624  8BA5              ; _con las coordenadas de la entidad almacenada en DRAW.
 625  8BA5
 626  8BA5 3A 0C 8A     8 ld a,(Ctrl_1)
 627  8BA8 CB 57        	bit 2,a
 628  8BAA 28 1B        	jr z,7F
 629  8BAC
 630  8BAC 2A 39 8A     	ld hl,(Coordenadas_disparo_certero)
 631  8BAF EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 632  8BB0              ;														; E contiene la coordenada_X del disparo.
 633  8BB0 2A CF 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 634  8BB3              ;														; H FILA, (Coordenada_y de la entidad).
 635  8BB3 A7           	and a
 636  8BB4 ED 52        	sbc hl,de
 637  8BB6
 638  8BB6 CD 7D 92     	call Determina_resultado_comparativa
 639  8BB9
 640  8BB9 78           	ld a,b
 641  8BBA A7           	and a
 642  8BBB 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 643  8BBD
 644  8BBD              ; ----- ----- -----
 645  8BBD
 646  8BBD 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 647  8BBF 32 E2 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 648  8BC2
 649  8BC2 21 0C 8A     	ld hl,Ctrl_1
 650  8BC5 CB 96        	res 2,(hl)
 651  8BC7
 652  8BC7 CD 19 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 653  8BCA
 654  8BCA 3A F7 89     	ld a,(Ctrl_0)
 655  8BCD CB 67        	bit 4,a
 656  8BCF 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 657  8BD1
 658  8BD1              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 659  8BD1              ; [[[
 660  8BD1 CD 68 8E     	call Detecta_disparo_entidad
 661  8BD4              ; ]]]
 662  8BD4 CD B7 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 663  8BD7
 664  8BD7 21 F7 89     	ld hl,Ctrl_0
 665  8BDA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 666  8BDC AF           	xor a
 667  8BDD 32 F8 89     	ld (Obj_dibujado),a
 668  8BE0
 669  8BE0 CD 92 8D     6 call Store_Restore_cajas
 670  8BE3
 671  8BE3 C1           	pop bc
 672  8BE4 10 8B        	djnz 15B
 673  8BE6
 674  8BE6              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 675  8BE6
 676  8BE6              ;	ld a,2
 677  8BE6              ;	ld (Limitador_de_entidades_x_frame),a
 678  8BE6
 679  8BE6              ; ------------------------------------
 680  8BE6              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 681  8BE6              ; Hemos gestionado todas las unidades.
 682  8BE6              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 683  8BE6
 684  8BE6              ;	ld hl,Ctrl_1
 685  8BE6              ;	res 2,(hl)
 686  8BE6
 687  8BE6              ; ------------------------------------
 688  8BE6
 689  8BE6              ; Tras la gestión de las entidades, ... AMADEUS.
 690  8BE6
 691  8BE6 CD F4 8D     4 call Restore_Amadeus
 692  8BE9
 693  8BE9 3A E2 89     	ld a,(Impacto)
 694  8BEC A7           	and a
 695  8BED 20 FE        	jr nz,$
 696  8BEF
 697  8BEF CD 78 8C     	call Mov_Amadeus
 698  8BF2
 699  8BF2 3A F7 89     	ld a,(Ctrl_0)
 700  8BF5 CB 67        	bit 4,a
 701  8BF7 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 702  8BF9
 703  8BF9 CD B7 8C     	call Guarda_foto_entidad_a_pintar
 704  8BFC
 705  8BFC 21 F7 89     3 ld hl,Ctrl_0
 706  8BFF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 707  8C01 AF           	xor a
 708  8C02 32 F8 89     	ld (Obj_dibujado),a
 709  8C05
 710  8C05 11 84 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 711  8C08 CD 06 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 712  8C0B
 713  8C0B CD DA 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 714  8C0E
 715  8C0E              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 716  8C0E
 717  8C0E CD 2C 8D     	call Calcula_numero_de_disparotes
 718  8C11 CD 14 8D     9 call Calcula_numero_de_malotes
 719  8C14
 720  8C14 3E 04        	ld a,4
 721  8C16 D3 FE        	out ($fe),a
 722  8C18
 723  8C18 C9           	ret
 724  8C19
 725  8C19              ; -----------------------------------------------------------------------------------
 726  8C19
 727  8C19              ; --------------------------------------------------------------------------------------------------------------
 728  8C19              ;
 729  8C19              ;	27/05/23
 730  8C19
 731  8C19              Mov_obj
 732  8C19
 733  8C19              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 734  8C19
 735  8C19 3A 0A 8A     	ld a,(Ctrl_2)
 736  8C1C CB 4F        	bit 1,a
 737  8C1E 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 738  8C20
 739  8C20              ; Explosión:
 740  8C20
 741  8C20 3A 0B 8A     	ld a,(Frames_explosion)
 742  8C23 A7           	and a
 743  8C24 20 11        	jr nz,4F
 744  8C26
 745  8C26              ; Una alimaña menos!!!!!!!!!1
 746  8C26
 747  8C26 CD 0F 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 748  8C29 21 16 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 749  8C2C 35           	dec (hl)
 750  8C2D 21 17 8A     	ld hl,Entidades_en_curso
 751  8C30 35           	dec (hl)
 752  8C31 21 15 8A     	ld hl,Numero_de_entidades
 753  8C34 35           	dec (hl)
 754  8C35 18 40        	jr 3F
 755  8C37
 756  8C37              ; -----
 757  8C37
 758  8C37              ;	`Movemos´ la explosión.
 759  8C37
 760  8C37 2A D7 89     4 ld hl,(Puntero_DESPLZ_der)
 761  8C3A 23           	inc hl
 762  8C3B 23           	inc hl
 763  8C3C 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 764  8C3F CD 44 8D     	call Extrae_address
 765  8C42 22 CD 89     	ld (Puntero_objeto),hl
 766  8C45
 767  8C45 21 0B 8A     	ld hl,Frames_explosion
 768  8C48 35           	dec (hl)
 769  8C49
 770  8C49 CD A7 8C     	call Guarda_foto_entidad_a_borrar
 771  8C4C 18 29        	jr 3F
 772  8C4E
 773  8C4E AF           2 xor a
 774  8C4F 32 F8 89     	ld (Obj_dibujado),a
 775  8C52 32 F7 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 776  8C55              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 777  8C55              ; 														; _de la entidad.
 778  8C55 CD C1 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 779  8C58              ;														; Obj_dibujado="0".
 780  8C58              ; Movemos Entidades malignas.
 781  8C58
 782  8C58              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 783  8C58              ;	and a 												; _a movernos. (Limitador_de_entidades).
 784  8C58              ;	ret z
 785  8C58
 786  8C58 CD 86 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 787  8C5B
 788  8C5B 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 789  8C5E CB 67        	bit 4,a
 790  8C60 C8           	ret z
 791  8C61
 792  8C61              ; Ha habido desplazamiento de la entidad maligna.
 793  8C61              ; Ha llegado a zona de AMADEUS ???
 794  8C61
 795  8C61 3A D0 89     	ld a,(Coordenada_y)
 796  8C64 FE 14        	cp $14
 797  8C66 D4 0B 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 798  8C69              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 799  8C69              ; ---------
 800  8C69
 801  8C69 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 802  8C6B 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 803  8C6E CD C1 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 804  8C71 CD D8 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 805  8C74 CD A7 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 806  8C77 C9           3 ret													; _de la misma.
 807  8C78
 808  8C78              ; --------------------------------------------------------------------------------------------------------------
 809  8C78              ;
 810  8C78              ;	29/1/23
 811  8C78
 812  8C78              Mov_Amadeus
 813  8C78
 814  8C78 AF           	xor a
 815  8C79 32 F8 89     	ld (Obj_dibujado),a
 816  8C7C CD C1 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 817  8C7F              ;														; Obj_dibujado="0".
 818  8C7F              ; Movemos Amadeus.
 819  8C7F
 820  8C7F CD 31 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 821  8C82 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 822  8C85 CB 67        	bit 4,a
 823  8C87 C8           	ret z
 824  8C88
 825  8C88              ; ---------
 826  8C88
 827  8C88 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 828  8C8A 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 829  8C8D CD C1 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 830  8C90 CD D8 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 831  8C93 CD A7 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 832  8C96 C9           	ret													; _de la nave.
 833  8C97
 834  8C97              ; -----------------------------------------------------------------------------------
 835  8C97
 836  8C97 CD 4A 8D     Inicia_entidad	call Inicia_Puntero_objeto
 837  8C9A CD 38 99     	call Recompone_posicion_inicio
 838  8C9D CD 64 93     	call Draw
 839  8CA0 CD A0 7F     	call Guarda_foto_registros
 840  8CA3 CD 92 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 841  8CA6 C9           	ret
 842  8CA7
 843  8CA7              ; --------------------------------------------------------------------------------------------------------------
 844  8CA7              ;
 845  8CA7              ;	31/01/23
 846  8CA7              ;
 847  8CA7              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 848  8CA7
 849  8CA7              Guarda_foto_entidad_a_borrar
 850  8CA7
 851  8CA7 CD 48 96     	call Prepara_draw
 852  8CAA CD 78 95     	call calcula_CColumnass
 853  8CAD CD AF 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 854  8CB0 CD 0E 96     	call Define_rutina_de_impresion
 855  8CB3 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 856  8CB6 C9           	ret
 857  8CB7
 858  8CB7              ; --------------------------------------------------------------------------------------------------------------
 859  8CB7              ;
 860  8CB7              ;	31/01/23
 861  8CB7              ;
 862  8CB7              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 863  8CB7              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 864  8CB7
 865  8CB7              Guarda_foto_entidad_a_pintar
 866  8CB7
 867  8CB7 CD E4 8C     	call Repone_pintar
 868  8CBA CD 64 93     	call Draw
 869  8CBD CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 870  8CC0 C9           	ret
 871  8CC1
 872  8CC1              ; --------------------------------------------------------------------------------------------------------------
 873  8CC1              ;
 874  8CC1              ;
 875  8CC1
 876  8CC1 21 C9 89     Prepara_var_pintado_borrado	ld hl,Filas
 877  8CC4 3A F8 89     	ld a,(Obj_dibujado)
 878  8CC7 A7           	and a
 879  8CC8 28 05        	jr z,1F
 880  8CCA 11 ED 89     	ld de,Variables_de_pintado
 881  8CCD 18 03        	jr 2F
 882  8CCF 11 E3 89     1 ld de,Variables_de_borrado
 883  8CD2 01 08 00     2 ld bc,8
 884  8CD5 ED B0        	ldir
 885  8CD7 C9           	ret
 886  8CD8
 887  8CD8              ; --------------------------------------------------------------------------------------------------------------
 888  8CD8
 889  8CD8 21 E3 89     Repone_borrar ld hl,Variables_de_borrado
 890  8CDB 11 C9 89     	ld de,Filas
 891  8CDE 01 08 00     	ld bc,8
 892  8CE1 ED B0        	ldir
 893  8CE3 C9           	ret
 894  8CE4
 895  8CE4 21 ED 89     Repone_pintar ld hl,Variables_de_pintado
 896  8CE7 11 C9 89     	ld de,Filas
 897  8CEA 01 08 00     	ld bc,8
 898  8CED ED B0        	ldir
 899  8CEF C9           	ret
 900  8CF0
 901  8CF0              ; *************************************************************************************************************************************************************
 902  8CF0              ;
 903  8CF0              ; 8/1/23
 904  8CF0              ;
 905  8CF0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 906  8CF0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 907  8CF0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 908  8CF0
 909  8CF0              ; Destruye HL y DE !!!!!
 910  8CF0
 911  8CF0              Inicia_punteros_de_cajas
 912  8CF0
 913  8CF0 21 6C 85     	ld hl,Indice_de_cajas
 914  8CF3 CD 44 8D         call Extrae_address
 915  8CF6 22 0F 8A         ld (Puntero_store_caja),hl
 916  8CF9 21 6E 85     	ld hl,Indice_de_cajas+2
 917  8CFC 22 13 8A     	ld (Indice_restore_caja),hl
 918  8CFF CD 44 8D     	call Extrae_address
 919  8D02 22 11 8A     	ld (Puntero_restore_caja),hl
 920  8D05 C9               ret
 921  8D06
 922  8D06              ; *************************************************************************************************************************************************************
 923  8D06              ;
 924  8D06              ; 8/1/23
 925  8D06              ;
 926  8D06              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 927  8D06
 928  8D06 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 929  8D09 22 32 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 930  8D0C C9           	ret
 931  8D0D 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 932  8D10 22 34 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 933  8D13 C9           	ret
 934  8D14
 935  8D14              ; -------------------------------------------------------------------------------------------------------------
 936  8D14              ;
 937  8D14              ; 28/2/23
 938  8D14              ;
 939  8D14
 940  8D14              Calcula_numero_de_malotes
 941  8D14
 942  8D14 21 00 70     	ld hl,Album_de_fotos
 943  8D17 EB           	ex de,hl
 944  8D18 2A 21 8A     	ld hl,(Stack_snapshot)
 945  8D1B
 946  8D1B 06 00        	ld b,0
 947  8D1D 7D           	ld a,l
 948  8D1E 93           	sub e
 949  8D1F 28 07        	jr z,1F
 950  8D21
 951  8D21              ; Nº de malotes no es "0".
 952  8D21
 953  8D21 D6 06        2 sub 6
 954  8D23 04           	inc b
 955  8D24 A7           	and a
 956  8D25 20 FA        	jr nz,2B
 957  8D27 78           	ld a,b
 958  8D28
 959  8D28 32 18 8A     1 ld (Numero_de_malotes),a
 960  8D2B C9           	ret
 961  8D2C
 962  8D2C              ; -------------------------------------------------------------------------------------------------------------
 963  8D2C              ;
 964  8D2C              ; 28/2/23
 965  8D2C              ;
 966  8D2C
 967  8D2C              Calcula_numero_de_disparotes
 968  8D2C
 969  8D2C 21 11 72     	ld hl,Album_de_fotos_disparos
 970  8D2F EB           	ex de,hl
 971  8D30 2A 23 8A     	ld hl,(Stack_snapshot_disparos)
 972  8D33
 973  8D33 06 00        	ld b,0
 974  8D35 7D           	ld a,l
 975  8D36 93           	sub e
 976  8D37 28 07        	jr z,1F
 977  8D39
 978  8D39              ; Nº de malotes no es "0".
 979  8D39
 980  8D39 D6 06        2 sub 6
 981  8D3B 04           	inc b
 982  8D3C A7           	and a
 983  8D3D 20 FA        	jr nz,2B
 984  8D3F 78           	ld a,b
 985  8D40
 986  8D40 32 31 8A     1 ld (Numero_de_disparotes),a
 987  8D43 C9           	ret
 988  8D44              ; *************************************************************************************************************************************************************
 989  8D44              ;
 990  8D44              ; 20/10/22
 991  8D44              ;
 992  8D44              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 993  8D44              ;
 994  8D44              ; Destruye el puntero y DE !!!!!
 995  8D44
 996  8D44 5E           Extrae_address ld e,(hl)
 997  8D45 23           	inc hl
 998  8D46 56           	ld d,(hl)
 999  8D47 2B           	dec hl
1000  8D48 EB           	ex de,hl
1001  8D49 C9           	ret
1002  8D4A
1003  8D4A              ; *************************************************************************************************************************************************************
1004  8D4A              ;
1005  8D4A              ;	7/2/23
1006  8D4A              ;
1007  8D4A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1008  8D4A              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1009  8D4A              ;
1010  8D4A              ;   Destruye HL y BC !!!!!,
1011  8D4A              ;
1012  8D4A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1013  8D4A              ;					"0" ..... Izquierda.
1014  8D4A
1015  8D4A              Inicia_Puntero_objeto
1016  8D4A
1017  8D4A 3A DD 89     	ld a,(Cuad_objeto)
1018  8D4D E6 01        	and 1
1019  8D4F F5           	push af
1020  8D50 CC 6E 8D     	call z,Inicia_puntero_objeto_izq
1021  8D53 F1           	pop af
1022  8D54 28 2B        	jr z,1F
1023  8D56 CD 5B 8D     	call Inicia_puntero_objeto_der
1024  8D59 18 26        	jr 1F
1025  8D5B
1026  8D5B              ; Arrancamos desde la parte izquierda de la pantalla.
1027  8D5B              ; Iniciamos (Indice_Sprite_der).
1028  8D5B
1029  8D5B 2A D3 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1030  8D5E 22 D7 89     	ld (Puntero_DESPLZ_der),hl
1031  8D61 CD 44 8D     	call Extrae_address
1032  8D64 22 CD 89     	ld (Puntero_objeto),hl
1033  8D67
1034  8D67 2A D5 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1035  8D6A 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
1036  8D6D C9           	ret
1037  8D6E
1038  8D6E              ; Arrancamos desde la parte derecha de la pantalla.
1039  8D6E              ; Iniciamos (Indice_Sprite_izq).
1040  8D6E
1041  8D6E 2A D5 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1042  8D71 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
1043  8D74 CD 44 8D     	call Extrae_address
1044  8D77 22 CD 89     	ld (Puntero_objeto),hl
1045  8D7A
1046  8D7A 2A D3 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1047  8D7D 22 D7 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1048  8D80 C9           	ret
1049  8D81
1050  8D81              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1051  8D81
1052  8D81 21 40 83     1 ld hl,Amadeus
1053  8D84 ED 4B CD 89  	ld bc,(Puntero_objeto)
1054  8D88 B7 ED 42     	sub hl,bc
1055  8D8B C0           	ret nz
1056  8D8C 21 F7 89     	ld hl,Ctrl_0
1057  8D8F CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1058  8D91 C9           	ret 												; _de nuestra nave en los extremos.
1059  8D92
1060  8D92              ; *************************************************************************************************************************************************************
1061  8D92              ;
1062  8D92              ;	14/5/23
1063  8D92              ;
1064  8D92              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1065  8D92              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1066  8D92
1067  8D92              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1068  8D92              ;	_de la 2ª y 3ª entidad respectivamente.
1069  8D92
1070  8D92              Store_Restore_cajas
1071  8D92
1072  8D92 E5           	push hl
1073  8D93 D5           	push de
1074  8D94 C5            	push bc
1075  8D95
1076  8D95              ;	STORE !!!!!
1077  8D95              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1078  8D95
1079  8D95 21 C9 89     	ld hl,Filas
1080  8D98 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1081  8D9C 01 43 00     	ld bc,67
1082  8D9F ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1083  8DA1
1084  8DA1              ; 	Entidad_sospechosa. 20/4/23
1085  8DA1
1086  8DA1 3A E2 89     	ld a,(Impacto)
1087  8DA4 A7           	and a
1088  8DA5 28 0C        	jr z,1F
1089  8DA7
1090  8DA7 2A 0F 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1091  8DAA 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1092  8DAD A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1093  8DAE ED 4A        	adc hl,bc 											; _ "0" más adelante.
1094  8DB0 22 37 8A     	ld (Entidad_sospechosa_de_colision),hl
1095  8DB3
1096  8DB3              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1097  8DB3
1098  8DB3 2A 11 8A     1 ld hl,(Puntero_restore_caja)
1099  8DB6 7E           	ld a,(hl)
1100  8DB7 A7           	and a
1101  8DB8 F5           	push af
1102  8DB9 28 08        	jr z,2F
1103  8DBB
1104  8DBB 11 C9 89     	ld de,Filas
1105  8DBE 01 43 00     	ld bc,67
1106  8DC1 ED B0        	ldir
1107  8DC3
1108  8DC3 CD DF 8D     2 call Incrementa_punteros_de_cajas
1109  8DC6 F1           	pop af
1110  8DC7 28 EA        	jr z,1B
1111  8DC9
1112  8DC9 C1           	pop bc
1113  8DCA D1           	pop de
1114  8DCB E1           	pop hl
1115  8DCC
1116  8DCC C9           	ret
1117  8DCD
1118  8DCD              ; **************************************************************************************************
1119  8DCD              ;
1120  8DCD              ;	12/05/23
1121  8DCD              ;
1122  8DCD              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1123  8DCD
1124  8DCD E5           Restore_entidad push hl
1125  8DCE D5           	push de
1126  8DCF C5            	push bc
1127  8DD0
1128  8DD0 2A 0F 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1129  8DD3 11 C9 89     	ld de,Filas
1130  8DD6 01 43 00     	ld bc,67
1131  8DD9 ED B0        	ldir
1132  8DDB
1133  8DDB C1           	pop bc
1134  8DDC D1           	pop de
1135  8DDD E1           	pop hl
1136  8DDE C9           	ret
1137  8DDF
1138  8DDF
1139  8DDF              ; **************************************************************************************************
1140  8DDF              ;
1141  8DDF              ;	08/05/23
1142  8DDF              ;
1143  8DDF              ;	Incrementamos los dos punteros de entidades. (+1).
1144  8DDF
1145  8DDF 2A 11 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1146  8DE2 22 0F 8A     	ld (Puntero_store_caja),hl
1147  8DE5 2A 13 8A     	ld hl,(Indice_restore_caja)
1148  8DE8 23           	inc hl
1149  8DE9 23           	inc hl
1150  8DEA 22 13 8A     	ld (Indice_restore_caja),hl
1151  8DED CD 44 8D         call Extrae_address
1152  8DF0 22 11 8A         ld (Puntero_restore_caja),hl
1153  8DF3 C9               ret
1154  8DF4
1155  8DF4              ; **************************************************************************************************
1156  8DF4              ;
1157  8DF4              ;	25/01/23
1158  8DF4              ;
1159  8DF4              ;	Restore_Amadeus
1160  8DF4              ;
1161  8DF4              ;	Cargamos en DRAW los parámetros de Amadeus.
1162  8DF4              ;
1163  8DF4
1164  8DF4 E5           Restore_Amadeus	push hl
1165  8DF5 D5           	push de
1166  8DF6 C5            	push bc
1167  8DF7 21 84 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1168  8DFA 11 C9 89     	ld de,Filas
1169  8DFD 01 43 00     	ld bc,67
1170  8E00 ED B0        	ldir
1171  8E02 C1           	pop bc
1172  8E03 D1           	pop de
1173  8E04 E1           	pop hl
1174  8E05 C9           	ret
1175  8E06
1176  8E06              ; *************************************************************************************************************************************************************
1177  8E06              ;
1178  8E06              ;	29/04/23
1179  8E06              ;
1180  8E06              ;	Store_Amadeus
1181  8E06              ;
1182  8E06              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1183  8E06              ;
1184  8E06              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1185  8E06              ;
1186  8E06              ;	DESTRUYE: HL y BC y DE.
1187  8E06
1188  8E06 21 C9 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1189  8E09 01 43 00     	ld bc,67
1190  8E0C ED B0        	ldir
1191  8E0E C9           	ret
1192  8E0F
1193  8E0F              ; -----------------------------------------------------------
1194  8E0F              ;
1195  8E0F              ;	27/04/23
1196  8E0F              ;
1197  8E0F              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1198  8E0F              ;
1199  8E0F              ;	Destruye: HL,BC,DE,A
1200  8E0F
1201  8E0F 21 C9 89     Borra_datos_entidad ld hl,Filas
1202  8E12 01 42 00     	ld bc,66
1203  8E15 AF           	xor a
1204  8E16 77           	ld (hl),a
1205  8E17 11 CA 89     	ld de,Filas+1
1206  8E1A ED B0        	ldir
1207  8E1C C9           	ret
1208  8E1D
1209  8E1D              ; -----------------------------------------------------------
1210  8E1D
1211  8E1D              ; Teclado.
1212  8E1D
1213  8E1D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1214  8E1F DB FE        	in a,($fe)
1215  8E21 E6 01        	and $01
1216  8E23 28 02        	jr z,1f
1217  8E25 18 F6        	jr Pulsa_ENTER
1218  8E27 C9           1 ret
1219  8E28
1220  8E28              ; **************************************************************************************************
1221  8E28              ;
1222  8E28              ; Temporización.
1223  8E28
1224  8E28              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1225  8E28              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1226  8E28              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1227  8E28              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1228  8E28
1229  8E28              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1230  8E28              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1231  8E28              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1232  8E28
1233  8E28              ; A partir de $4f61 no hace falta DELAY.
1234  8E28
1235  8E28              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1236  8E28
1237  8E28 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1238  8E2B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1239  8E2C 78           	LD A,B
1240  8E2D A7           	AND A
1241  8E2E 20 FB        	JR NZ,wait
1242  8E30 C9           	RET
1243  8E31
1244  8E31              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1245  8E31              ;
1246  8E31              ;	5/3/23
1247  8E31              ;
1248  8E31              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1249  8E31
1250  8E31              Movimiento_Amadeus
1251  8E31
1252  8E31              ; Disparo.
1253  8E31
1254  8E31 3A 48 8A     	ld a,(Disparo_Amadeus)
1255  8E34 A7           	and a
1256  8E35 20 02        	jr nz,1F
1257  8E37 18 15        	jr 2F
1258  8E39
1259  8E39 3E F7        1 ld a,$f7													; "5" para disparar.
1260  8E3B DB FE        	in a,($fe)
1261  8E3D E6 10        	and $10
1262  8E3F
1263  8E3F F5           	push af
1264  8E40 CC 6E 8E     	call z,Genera_disparo
1265  8E43 F1           	pop af
1266  8E44 20 08        	jr nz,2F
1267  8E46
1268  8E46 3A 48 8A     	ld a,(Disparo_Amadeus)
1269  8E49 EE 01        	xor 1
1270  8E4B 32 48 8A     	ld (Disparo_Amadeus),a
1271  8E4E
1272  8E4E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1273  8E50 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1274  8E52 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1275  8E54 CC F2 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1276  8E57 3E F7        	ld a,$f7
1277  8E59 DB FE        	in a,($fe)
1278  8E5B E6 01        	and $01
1279  8E5D C8           	ret z
1280  8E5E
1281  8E5E 3E F7        	ld a,$f7
1282  8E60 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1283  8E62 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1284  8E64 CC D4 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1285  8E67 C9           	ret
1286  8E68
1287  8E68              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1288  8E68              ;
1289  8E68              ;	Rutina provisional para que los malotes cagen balas.
1290  8E68
1291  8E68              Detecta_disparo_entidad
1292  8E68
1293  8E68 3A 4B 8A     	ld a,(Disparo_entidad)
1294  8E6B A7           	and a
1295  8E6C C8           	ret z
1296  8E6D
1297  8E6D              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1298  8E6D
1299  8E6D              ;	ld a,$7f				; Detecta SPACE.
1300  8E6D              ;	in a,($fe)
1301  8E6D              ;	and 1
1302  8E6D              ;	ret nz
1303  8E6D
1304  8E6D              ;	call Genera_disparo
1305  8E6D C9           	ret
1306  8E6E
1307  8E6E              ; ---------------------------------------------------------------
1308  8E6E
1309  8E6E              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E6E              ; ******************************************************************************************************************************************************************************************
   2+ 8E6E              ;
   3+ 8E6E              ;   21/07/23
   4+ 8E6E              ;
   5+ 8E6E              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E6E              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E6E              ;
   8+ 8E6E              ;
   9+ 8E6E              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E6E              ;
  11+ 8E6E              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E6E              ;               _ hacen las entidades hacia abajo.
  13+ 8E6E              ;
  14+ 8E6E              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E6E              ;
  16+ 8E6E              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E6E              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E6E              ;
  19+ 8E6E              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E6E              ;           _ la bala.
  21+ 8E6E              ;
  22+ 8E6E              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E6E              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E6E              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E6E              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E6E              ;           _ en el momento de generarse la bala)).
  27+ 8E6E
  28+ 8E6E              Genera_disparo
  29+ 8E6E
  30+ 8E6E              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E6E              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E6E              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E6E              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E6E              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E6E              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E6E              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E6E
  38+ 8E6E              ; Exclusiones:
  39+ 8E6E
  40+ 8E6E 3A E1 89         ld a,(Vel_down)
  41+ 8E71 47               ld b,a
  42+ 8E72 3A 43 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E75 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E76 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E77 3A 06 8A         ld a,(Columnas)
  46+ 8E7A 47               ld b,a
  47+ 8E7B 3A CA 89         ld a,(Columns)
  48+ 8E7E B8               cp b
  49+ 8E7F C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E80
  51+ 8E80              ; ----- ----- -----
  52+ 8E80
  53+ 8E80 3A F7 89         ld a,(Ctrl_0)
  54+ 8E83 CB 77            bit 6,a
  55+ 8E85 20 06            jr nz,14F
  56+ 8E87
  57+ 8E87 3A D0 89         ld a,(Coordenada_y)
  58+ 8E8A FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E8C D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E8D
  61+ 8E8D 21 00 80     14 ld hl,Indice_disparo
  62+ 8E90 3A D1 89         ld a,(CTRL_DESPLZ)
  63+ 8E93 4F               ld c,a
  64+ 8E94 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E96              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E96              ;                                            ""        ""       "f9", B="1"
  67+ 8E96              ;                                            ""        ""       "fb", B="2"
  68+ 8E96              ;                                            ""        ""       "fb", B="3"
  69+ 8E96 A7               and a
  70+ 8E97 28 10            jr z,1F
  71+ 8E99 E6 01            and 1
  72+ 8E9B C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E9C
  74+ 8E9C 79               ld a,c
  75+ 8E9D 16 F9            ld d,$f9
  76+ 8E9F 23           2 inc hl
  77+ 8EA0 23               inc hl
  78+ 8EA1 04               inc b
  79+ 8EA2 BA               cp d
  80+ 8EA3 28 04            jr z,1F
  81+ 8EA5 14               inc d
  82+ 8EA6 14               inc d
  83+ 8EA7 18 F6            jr 2B
  84+ 8EA9
  85+ 8EA9 CD 44 8D     1 call Extrae_address
  86+ 8EAC E5               push hl
  87+ 8EAD FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EAF DD 21 ED 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EB3
  90+ 8EB3              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EB3              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EB3
  93+ 8EB3 3A F7 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EB6 CB 77            bit 6,a
  95+ 8EB8 20 04            jr nz,19F
  96+ 8EBA
  97+ 8EBA AF               xor a
  98+ 8EBB 32 4B 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EBE
 100+ 8EBE 3A DD 89     19 ld a,(Cuad_objeto)
 101+ 8EC1 FE 02            cp 2
 102+ 8EC3 38 66            jr c,3F
 103+ 8EC5 28 64            jr z,3F
 104+ 8EC7
 105+ 8EC7              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EC7
 107+ 8EC7 E6 01            and 1
 108+ 8EC9 28 30            jr z,4F
 109+ 8ECB
 110+ 8ECB              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8ECB              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8ECB              ;
 113+ 8ECB              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8ECB              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8ECB              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8ECB
 117+ 8ECB 2A CB 89     	ld hl,(Posicion_actual)
 118+ 8ECE
 119+ 8ECE              ;   Amadeus o entidad ???.
 120+ 8ECE
 121+ 8ECE 3A F7 89         ld a,(Ctrl_0)
 122+ 8ED1 CB 77            bit 6,a
 123+ 8ED3 28 0A            jr z,8F
 124+ 8ED5
 125+ 8ED5              ; 	Dispara Amadeus.
 126+ 8ED5
 127+ 8ED5 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8ED7 CD 63 96         call PreviousScan
 129+ 8EDA CD 63 96         call PreviousScan
 130+ 8EDD
 131+ 8EDD              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EDD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EDD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EDD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EDD
 136+ 8EDD 18 11            jr 10F
 137+ 8EDF
 138+ 8EDF              ; 	Dispara Entidad.
 139+ 8EDF
 140+ 8EDF 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EE2              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EE2
 143+ 8EE2              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EE2              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EE2
 146+ 8EE2 C5               push bc
 147+ 8EE3 06 10            ld b,16
 148+ 8EE5 CD 54 96     9 call NextScan
 149+ 8EE8 10 FB            djnz 9B
 150+ 8EEA C1               pop bc
 151+ 8EEB CD 55 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EEE 18 06            jr 17F
 153+ 8EF0
 154+ 8EF0              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EF0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EF0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EF0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EF0
 159+ 8EF0 CD 55 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EF3 CD CA 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EF6              ;                                                      ; _al generar el disparo.
 162+ 8EF6
 163+ 8EF6              ; 	LLegados a este punto tendremos:
 164+ 8EF6              ;
 165+ 8EF6              ;       Puntero_objeto_disparo en IY.
 166+ 8EF6              ;       Rutinas_de_impresion en IX.
 167+ 8EF6              ;       Puntero_de_impresion en HL.
 168+ 8EF6              ;       Impacto/Dirección en BC.
 169+ 8EF6
 170+ 8EF6 CD 5D 8F     17 call Almacena_disparo
 171+ 8EF9 18 52            jr 6F                                             ; RET.
 172+ 8EFB
 173+ 8EFB              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EFB              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EFB              ;
 176+ 8EFB              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EFB              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EFB              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EFB
 180+ 8EFB 2A CB 89     4 ld hl,(Posicion_actual)
 181+ 8EFE
 182+ 8EFE              ;   Amadeus o entidad ???.
 183+ 8EFE
 184+ 8EFE 3A F7 89         ld a,(Ctrl_0)
 185+ 8F01 CB 77            bit 6,a
 186+ 8F03 28 0A            jr z,11F
 187+ 8F05
 188+ 8F05              ; 	Dispara Amadeus.
 189+ 8F05
 190+ 8F05 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F07 CD 63 96         call PreviousScan
 192+ 8F0A CD 63 96         call PreviousScan
 193+ 8F0D
 194+ 8F0D              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F0D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F0D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F0D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F0D
 199+ 8F0D 18 11            jr 13F
 200+ 8F0F
 201+ 8F0F              ; 	Dispara Entidad.
 202+ 8F0F
 203+ 8F0F 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F12              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F12
 206+ 8F12              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F12              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F12
 209+ 8F12 C5               push bc
 210+ 8F13 06 10            ld b,16
 211+ 8F15 CD 54 96     12 call NextScan
 212+ 8F18 10 FB            djnz 12B
 213+ 8F1A C1               pop bc
 214+ 8F1B
 215+ 8F1B CD 4E 8F         call Ajusta_disparo_parte_derecha
 216+ 8F1E 18 06            jr 18F
 217+ 8F20
 218+ 8F20              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F20              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F20              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F20              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F20
 223+ 8F20 CD 4E 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F23 CD CA 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F26              ;                                                       ; _al generar el disparo.
 226+ 8F26
 227+ 8F26              ; LLegados a este punto tendremos:
 228+ 8F26              ;
 229+ 8F26              ;       Puntero_objeto_disparo en IY.
 230+ 8F26              ;       Rutinas_de_impresion en IX.
 231+ 8F26              ;       Puntero_de_impresion en HL.
 232+ 8F26              ;       Impacto/Dirección en BC.
 233+ 8F26
 234+ 8F26 CD 5D 8F     18 call Almacena_disparo
 235+ 8F29 18 22            jr 6F                                               ; RET.
 236+ 8F2B
 237+ 8F2B              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F2B
 239+ 8F2B 28 11        3 jr z,5F
 240+ 8F2D
 241+ 8F2D              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F2D              ;
 243+ 8F2D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F2D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F2D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F2D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F2D
 248+ 8F2D              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F2D              ;	   ""        ""       "f9", B="1"
 250+ 8F2D              ;	   ""        ""       "fb", B="2"
 251+ 8F2D              ; 	   ""        ""       "fb", B="3"
 252+ 8F2D
 253+ 8F2D 2A CB 89     	ld hl,(Posicion_actual)
 254+ 8F30 CD 54 96     	call NextScan
 255+ 8F33
 256+ 8F33              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F33              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F33              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F33              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F33
 261+ 8F33 CD 55 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F36
 263+ 8F36              ; 	No se produce impacto. B="$80"
 264+ 8F36              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F36
 266+ 8F36 01 80 80         ld bc,$8080
 267+ 8F39
 268+ 8F39              ; 	LLegados a este punto tendremos:
 269+ 8F39              ;
 270+ 8F39              ;       Puntero_objeto_disparo en IY.
 271+ 8F39              ;       Rutinas_de_impresion en IX.
 272+ 8F39              ;       Puntero_de_impresion en HL.
 273+ 8F39              ;       Impacto/Dirección en BC.
 274+ 8F39
 275+ 8F39 CD 5D 8F         call Almacena_disparo
 276+ 8F3C 18 0F            jr 6F                                           ; RET.
 277+ 8F3E
 278+ 8F3E              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F3E              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F3E              ;
 281+ 8F3E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F3E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F3E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F3E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F3E
 286+ 8F3E 2A CB 89     5 ld hl,(Posicion_actual)
 287+ 8F41 CD 54 96     	call NextScan
 288+ 8F44
 289+ 8F44              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F44              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F44              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F44              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F44
 294+ 8F44 CD 4E 8F         call Ajusta_disparo_parte_derecha
 295+ 8F47
 296+ 8F47              ; 	No se produce impacto. B="$80"
 297+ 8F47              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F47
 299+ 8F47 01 80 80     15 ld bc,$8080
 300+ 8F4A
 301+ 8F4A              ; 	LLegados a este punto tendremos:
 302+ 8F4A              ;
 303+ 8F4A              ;       Puntero_objeto_disparo en IY.
 304+ 8F4A              ;       Rutinas_de_impresion en IX.
 305+ 8F4A              ;       Puntero_de_impresion en HL.
 306+ 8F4A              ;       Impacto/Dirección en BC.
 307+ 8F4A
 308+ 8F4A CD 5D 8F         call Almacena_disparo
 309+ 8F4D
 310+ 8F4D C9           6 ret
 311+ 8F4E
 312+ 8F4E              ; ----------------------------------------------------------------
 313+ 8F4E              ;
 314+ 8F4E              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F4E              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F4E              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F4E
 318+ 8F4E 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F4F FE 02            cp 2
 320+ 8F51 38 01            jr c,1F
 321+ 8F53 23               inc hl
 322+ 8F54 C9           1 ret
 323+ 8F55
 324+ 8F55 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F56 FE 01        	cp 1
 326+ 8F58 20 01        	jr nz,1F
 327+ 8F5A 2B           	dec hl
 328+ 8F5B 2B           1 dec hl
 329+ 8F5C C9               ret
 330+ 8F5D
 331+ 8F5D              ; ----------------------------------------------------------------
 332+ 8F5D              ;
 333+ 8F5D              ;   25/02/23
 334+ 8F5D              ;
 335+ 8F5D              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F5D              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F5D              ;
 338+ 8F5D              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F5D              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F5D
 341+ 8F5D              Almacena_disparo
 342+ 8F5D
 343+ 8F5D E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F5E F1               pop af
 345+ 8F5F 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F60
 347+ 8F60 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F61 E6 01            and 1
 349+ 8F63 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F65              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F65              ; 	Dispara AMADEUS.
 352+ 8F65
 353+ 8F65              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F65              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F65              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F65              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F65
 358+ 8F65 C5               push bc
 359+ 8F66 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F69 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F6C A7               and a
 362+ 8F6D ED 42            sbc hl,bc
 363+ 8F6F CC 0D 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F72 C1               pop bc
 365+ 8F73 28 54            jr z,4F
 366+ 8F75
 367+ 8F75 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F78 23               inc hl
 369+ 8F79 23               inc hl
 370+ 8F7A 22 34 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F7D              ;                                                   ; _ Disparo_(+1).
 372+ 8F7D 18 18            jr 2F
 373+ 8F7F
 374+ 8F7F              ; Dispara una entidad.
 375+ 8F7F
 376+ 8F7F C5           1 push bc
 377+ 8F80 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F83 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F86 A7               and a
 380+ 8F87 ED 42            sbc hl,bc
 381+ 8F89 CC 06 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F8C C1               pop bc
 383+ 8F8D 28 3A            jr z,4F
 384+ 8F8F
 385+ 8F8F 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F92 23               inc hl
 387+ 8F93 23               inc hl
 388+ 8F94 22 32 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F97              ;                                                   ; _ Disparo_(+1).
 390+ 8F97 CD 44 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F9A              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F9A              ;
 393+ 8F9A              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F9A              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F9A              ;                                                     Puntero_de_impresion en HL.
 396+ 8F9A              ;                                                     Impacto/Dirección en BC.
 397+ 8F9A
 398+ 8F9A 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F9B 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F9C 23               inc hl                                          ; _ al siguiente.
 401+ 8F9D A7               and a
 402+ 8F9E 20 C0            jr nz,3B
 403+ 8FA0
 404+ 8FA0 08               ex af,af
 405+ 8FA1 ED 73 1D 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FA5 F9               ld sp,hl
 407+ 8FA6
 408+ 8FA6 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FA8 F5               push af                                         ; Puntero de impresión.
 410+ 8FA9 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FAB C5               push bc                                         ; Control.
 412+ 8FAC
 413+ 8FAC ED 7B 1D 8A      ld sp,(Stack)
 414+ 8FB0
 415+ 8FB0              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FB0
 417+ 8FB0 21 0C 8A     	ld hl,Ctrl_1
 418+ 8FB3 CB C6        	set 0,(hl)
 419+ 8FB5
 420+ 8FB5 DD E5        	push ix
 421+ 8FB7 E1               pop hl
 422+ 8FB8 F5               push af
 423+ 8FB9 DD E1            pop ix
 424+ 8FBB
 425+ 8FBB CD A0 7F     	call Guarda_foto_registros
 426+ 8FBE
 427+ 8FBE 21 0C 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FC1 CB 86        	res 0,(hl)
 429+ 8FC3
 430+ 8FC3              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FC3              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FC3
 433+ 8FC3 CD 0D 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FC6 CD 06 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 8FC9
 436+ 8FC9 C9           4 ret
 437+ 8FCA
 438+ 8FCA              ; ----------------------------------------------------------------
 439+ 8FCA              ;
 440+ 8FCA              ;   4/3/23
 441+ 8FCA              ;
 442+ 8FCA              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FCA              ;   _ al generarse el disparo.
 444+ 8FCA              ;
 445+ 8FCA              ;       "$80" ..... No se produce colisión.
 446+ 8FCA              ;       "$81" ..... Se produce colisión.
 447+ 8FCA              ;
 448+ 8FCA              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FCA              ;         _ que forman el disparo.
 450+ 8FCA
 451+ 8FCA
 452+ 8FCA              Comprueba_Colision
 453+ 8FCA
 454+ 8FCA              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FCA
 456+ 8FCA FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FCC E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FCD
 459+ 8FCD CD 03 90         call Modifica_H_Velocidad_disparo
 460+ 8FD0
 461+ 8FD0 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FD1 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FD3 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FD5
 465+ 8FD5 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FD7 CD F3 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FDA
 468+ 8FDA 7B               ld a,e
 469+ 8FDB E6 01            and 1
 470+ 8FDD 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FDF              ;                                                  ; _ para activar IMPACTO.
 472+ 8FDF E1               pop hl
 473+ 8FE0 E5               push hl
 474+ 8FE1 CD 54 96         call NextScan
 475+ 8FE4
 476+ 8FE4 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FE5 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FE7 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FE9              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FE9 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FEB CD F3 8F         call Bucle_2
 482+ 8FEE
 483+ 8FEE 43           1 ld b,e
 484+ 8FEF E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FF0 FD E1            pop iy
 486+ 8FF2 C9               ret
 487+ 8FF3
 488+ 8FF3              ; ---------- ----------
 489+ 8FF3
 490+ 8FF3 06 02        Bucle_2 ld b,2
 491+ 8FF5 FD 7E 00     2 ld a,(iy)
 492+ 8FF8 A6               and (hl)
 493+ 8FF9 28 02            jr z,1F
 494+ 8FFB 1E 81            ld e,$81
 495+ 8FFD 23           1 inc hl
 496+ 8FFE FD 23            inc iy
 497+ 9000 10 F3            djnz 2B
 498+ 9002 C9               ret
 499+ 9003
 500+ 9003              ; ---------- ----------
 501+ 9003              ;
 502+ 9003              ;   21/7/23
 503+ 9003
 504+ 9003              Modifica_H_Velocidad_disparo
 505+ 9003
 506+ 9003 3A 43 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9006 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9008 D0               ret nc                                         ; _ incrementamos H.
 509+ 9009 24               inc h
 510+ 900A
 511+ 900A C9               ret
 512+ 900B
 513+ 900B              ; -------------------------------------------------------------------------------------------------------------
 514+ 900B              ;
 515+ 900B              ;   11/04/23
 516+ 900B              ;
 517+ 900B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 900B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 900B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 900B              ;
 521+ 900B              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 900B
 523+ 900B              Compara_coordenadas_X
 524+ 900B
 525+ 900B              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 900B              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 900B
 528+ 900B              ; Preparamos registros:
 529+ 900B
 530+ 900B 21 CF 89         ld hl,Filas+6
 531+ 900E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 900F 23               inc hl
 533+ 9010 23               inc hl
 534+ 9011 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9012 43               ld b,e
 536+ 9013
 537+ 9013 21 DD 89         ld hl,Filas+20
 538+ 9016 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9017 21 3E 8A         ld hl,Coordenadas_X_Entidad
 540+ 901A CD 36 92         call Guarda_coordenadas_X
 541+ 901D
 542+ 901D              ; Preparamos registros:
 543+ 901D
 544+ 901D 21 8A 85         ld hl,Amadeus_db+6
 545+ 9020 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9021 23               inc hl
 547+ 9022 23               inc hl
 548+ 9023 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9024 7B               ld a,e
 550+ 9025 08               ex af,af'
 551+ 9026 21 98 85         ld hl,Amadeus_db+20
 552+ 9029 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 902A 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 554+ 902D CD 36 92         call Guarda_coordenadas_X
 555+ 9030
 556+ 9030              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9030              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9030
 559+ 9030 04               inc b
 560+ 9031 05               dec b
 561+ 9032 28 04            jr z,1F
 562+ 9034 06 03            ld b,3
 563+ 9036 18 02            jr 2F
 564+ 9038 06 02        1 ld b,2
 565+ 903A 08           2 ex af,af'
 566+ 903B 3C               inc a
 567+ 903C 3D               dec a
 568+ 903D 28 04            jr z,5F
 569+ 903F 0E 03            ld c,3
 570+ 9041 18 02            jr 6F
 571+ 9043 0E 02        5 ld c,2
 572+ 9045 79           6 ld a,c
 573+ 9046 08               ex af,af'
 574+ 9047 11 3E 8A         ld de,Coordenadas_X_Entidad
 575+ 904A 1A           4 ld a,(de)
 576+ 904B 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 577+ 904E BE           3 cp (hl)
 578+ 904F 28 0E            jr z,7F
 579+ 9051 23               inc hl
 580+ 9052 0D               dec c
 581+ 9053 20 F9            jr nz,3B
 582+ 9055 13               inc de
 583+ 9056 08               ex af,af'
 584+ 9057 4F               ld c,a
 585+ 9058 08               ex af,af'
 586+ 9059 10 EF            djnz 4B
 587+ 905B
 588+ 905B              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 905B
 590+ 905B CD 72 92     8 call Limpia_Coordenadas_X
 591+ 905E C9               ret
 592+ 905F
 593+ 905F 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9061 32 E2 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9064 21 36 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9067 CB D6            set 2,(hl)
 597+ 9069 18 F0            jr 8B
 598+ 906B
 599+ 906B              ; -----------------------------------------------------------------------
 600+ 906B              ;
 601+ 906B              ;   17/04/23
 602+ 906B              ;
 603+ 906B
 604+ 906B              Detecta_colision_nave_entidad
 605+ 906B
 606+ 906B              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 906B
 608+ 906B 2A CB 89         ld hl,(Posicion_actual)
 609+ 906E CD AF 95         call Calcula_puntero_de_impresion
 610+ 9071
 611+ 9071              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9071              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9071
 614+ 9071 DD E5            push ix
 615+ 9073 E1               pop hl
 616+ 9074 E5               push hl
 617+ 9075
 618+ 9075              ; ----- ----- -----
 619+ 9075 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9077 06 0A            ld b,10
 621+ 9079 CD A9 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 907C 7B               ld a,e
 623+ 907D FE 05            cp 5
 624+ 907F 38 0E            jr c,3F
 625+ 9081
 626+ 9081              ; LLegados a este punto:
 627+ 9081              ;
 628+ 9081              ;   HAY COLISIÓN !!!!!.
 629+ 9081              ;
 630+ 9081              ;   .db (Impacto) de Amadeus a "1".
 631+ 9081              ;   SET el bit3 de (Impacto2).
 632+ 9081              ;
 633+ 9081              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9081
 635+ 9081 21 9D 85         ld hl,Amadeus_db+25
 636+ 9084 36 01            ld (hl),1
 637+ 9086 21 36 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9089 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 908B CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 908D 18 18            jr 1F
 641+ 908F
 642+ 908F              ; -----
 643+ 908F
 644+ 908F E1           3 pop hl
 645+ 9090 CD 54 96         call NextScan
 646+ 9093 E5               push hl
 647+ 9094 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9095 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9097 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9099 30 0C            jr nc,1F
 651+ 909B              ;                                                  ; _ 2º scanline si esto es así.
 652+ 909B 10 DC            djnz 2B
 653+ 909D
 654+ 909D              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 909D
 656+ 909D              ; LLegados a este punto:
 657+ 909D              ;
 658+ 909D              ;   NO HAY COLISIÓN !!!!!.
 659+ 909D              ;
 660+ 909D              ;   .db (Impacto) de Amadeus a "0".
 661+ 909D              ;   RES el bit2 de (Impacto2).
 662+ 909D              ;
 663+ 909D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 909D              ;   Lo colocamos a "0".
 665+ 909D
 666+ 909D 21 36 8A         ld hl,Impacto2
 667+ 90A0 CB 96            res 2,(hl)
 668+ 90A2 2A 37 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90A5 36 00            ld (hl),0
 670+ 90A7
 671+ 90A7 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90A8 C9               ret
 673+ 90A9
 674+ 90A9               ; ---------- ----------
 675+ 90A9
 676+ 90A9 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90AA 3A CA 89         ld a,(Columns)
 678+ 90AD 47               ld b,a
 679+ 90AE FD 7E 00     2 ld a,(iy)
 680+ 90B1 BE               cp (hl)
 681+ 90B2 28 01            jr z,1F
 682+ 90B4
 683+ 90B4 1C               inc e
 684+ 90B5
 685+ 90B5 23           1 inc hl
 686+ 90B6 FD 23            inc iy
 687+ 90B8 10 F4            djnz 2B
 688+ 90BA C1               pop bc
 689+ 90BB C9               ret
 690+ 90BC
 691+ 90BC              ; -------------------------------------------------------------------------------------------------------------
 692+ 90BC              ;
 693+ 90BC              ;   13/03/23
 694+ 90BC              ;
 695+ 90BC              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90BC              ;
 697+ 90BC              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90BC
 699+ 90BC 21 11 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90BF 7E               ld a,(hl)
 701+ 90C0 A7               and a
 702+ 90C1 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90C2
 704+ 90C2 44               ld b,h
 705+ 90C3 4D               ld c,l
 706+ 90C4 2A 23 8A         ld hl,(Stack_snapshot_disparos)
 707+ 90C7 E5               push hl
 708+ 90C8 A7               and a
 709+ 90C9 ED 42            sbc hl,bc
 710+ 90CB E5               push hl
 711+ 90CC C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90CD
 713+ 90CD E1               pop hl
 714+ 90CE 54               ld d,h
 715+ 90CF 5D               ld e,l
 716+ 90D0 1B               dec de
 717+ 90D1 ED B8            lddr                                                ; Limpiamos.
 718+ 90D3
 719+ 90D3 21 11 72         ld hl,Album_de_fotos_disparos
 720+ 90D6 22 23 8A         ld (Stack_snapshot_disparos),hl
 721+ 90D9
 722+ 90D9 C9               ret
 723+ 90DA
 724+ 90DA              ; -------------------------------------------------------------------------------------------------------------
 725+ 90DA              ;
 726+ 90DA              ;   18/07/23
 727+ 90DA              ;
 728+ 90DA
 729+ 90DA              Motor_de_disparos
 730+ 90DA
 731+ 90DA              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90DA
 733+ 90DA 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90DD 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90E0
 736+ 90E0 CD 44 8D     2 call Extrae_address
 737+ 90E3 7E               ld a,(hl)
 738+ 90E4 A7               and a
 739+ 90E5 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90E7
 741+ 90E7              ; ----- ----- ----- ----- ----- -----
 742+ 90E7
 743+ 90E7 C5               push bc
 744+ 90E8 CD AC 91         call foto_disparo_a_borrar
 745+ 90EB
 746+ 90EB              ; Existe colisión con este disparo???
 747+ 90EB
 748+ 90EB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90EC 7E               ld a,(hl)
 750+ 90ED 2B               dec hl
 751+ 90EE E6 01            and 1
 752+ 90F0 28 1D            jr z,9F
 753+ 90F2
 754+ 90F2              ;   En este punto:
 755+ 90F2              ;
 756+ 90F2              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90F2              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90F2              ;   _con la entidad).
 759+ 90F2              ;
 760+ 90F2              ;   Disparo_2A defw 0                                ; Control.
 761+ 90F2              ;    defw 0                                          ; Puntero objeto.
 762+ 90F2              ;    defw 0                                          ; Puntero de impresión.
 763+ 90F2              ;    defw 0                                          ; Rutina de impresión.
 764+ 90F2
 765+ 90F2 E5               push hl
 766+ 90F3
 767+ 90F3 06 04            ld b,4
 768+ 90F5 23           19 inc hl
 769+ 90F6 10 FD            djnz 19B
 770+ 90F8
 771+ 90F8 CD 44 8D         call Extrae_address
 772+ 90FB CD D2 9C         call Genera_coordenadas_disparo
 773+ 90FE
 774+ 90FE              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90FE
 776+ 90FE 21 39 8A         ld hl,Coordenadas_disparo_certero
 777+ 9101 72               ld (hl),d
 778+ 9102 23               inc hl
 779+ 9103 73               ld (hl),e
 780+ 9104
 781+ 9104              ; Elimino el disparo de la base de datos.
 782+ 9104
 783+ 9104 E1               pop hl
 784+ 9105 CD 2B 92         call Elimina_disparo_de_base_de_datos
 785+ 9108 21 36 8A         ld hl,Impacto2
 786+ 910B CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 910D
 788+ 910D 18 06            jr 11F
 789+ 910F
 790+ 910F CD D5 91     9 call Mueve_disparo
 791+ 9112 CD AC 91         call foto_disparo_a_borrar
 792+ 9115
 793+ 9115 C1           11 pop bc
 794+ 9116 18 04            jr 7F
 795+ 9118
 796+ 9118              ; ----- ----- ----- ----- ----- -----
 797+ 9118
 798+ 9118 ED 42        1 sbc hl,bc
 799+ 911A 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 911C
 801+ 911C 2A 34 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 911F 23               inc hl
 803+ 9120 23               inc hl
 804+ 9121 22 34 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9124 18 BA            jr 2B
 806+ 9126
 807+ 9126 CD 0D 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9129              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9129
 810+ 9129              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9129
 812+ 9129 01 6A 85         ld bc,Disparo_11
 813+ 912C 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 912F
 815+ 912F CD 44 8D     5 call Extrae_address
 816+ 9132 7E               ld a,(hl)
 817+ 9133 A7               and a
 818+ 9134 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9136
 820+ 9136              ; ----- ----- ----- ----- ----- -----
 821+ 9136
 822+ 9136 C5               push bc
 823+ 9137 CD AC 91         call foto_disparo_a_borrar
 824+ 913A
 825+ 913A              ; Existe colisión con este disparo???
 826+ 913A
 827+ 913A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 913B 7E               ld a,(hl)
 829+ 913C 2B               dec hl
 830+ 913D E6 01            and 1
 831+ 913F 28 4D            jr z,10F
 832+ 9141
 833+ 9141              ;! La colisión se produce con Amadeus???
 834+ 9141              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9141
 836+ 9141 E5               push hl
 837+ 9142
 838+ 9142 06 04            ld b,4
 839+ 9144 23           16 inc hl
 840+ 9145 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9147
 842+ 9147 CD 44 8D         call Extrae_address
 843+ 914A CD D2 9C         call Genera_coordenadas_disparo
 844+ 914D
 845+ 914D 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 914E FE 16            cp $16
 847+ 9150 38 2A            jr c,15F
 848+ 9152
 849+ 9152
 850+ 9152              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9152
 852+ 9152 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9153
 854+ 9153              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9153
 856+ 9153
 857+ 9153 2A 41 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9156
 859+ 9156              ; Coordenada X de Amadeus en D.
 860+ 9156
 861+ 9156 7D               ld a,l
 862+ 9157 E6 1F            and $1F
 863+ 9159 57               ld d,a
 864+ 915A
 865+ 915A 21 8C 85         ld hl,Amadeus_db+8
 866+ 915D 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 915E
 868+ 915E 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9161 CD 36 92         call Guarda_coordenadas_X
 870+ 9164
 871+ 9164 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9165
 873+ 9165              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9165
 875+ 9165 06 02            ld b,2
 876+ 9167 C5           20 push bc
 877+ 9168
 878+ 9168 06 03            ld b,3
 879+ 916A 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 880+ 916D 7E           18 ld a,(hl)
 881+ 916E BA               cp d
 882+ 916F 20 04            jr nz,17F
 883+ 9171
 884+ 9171              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9171
 886+ 9171 C1               pop bc
 887+ 9172 E1               pop hl
 888+ 9173 18 0D            jr 14F
 889+ 9175
 890+ 9175 23           17 inc hl
 891+ 9176 10 F5            djnz 18B
 892+ 9178
 893+ 9178 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9179
 895+ 9179 C1               pop bc
 896+ 917A 10 EB            djnz 20B
 897+ 917C
 898+ 917C
 899+ 917C              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 917C              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 917C
 902+ 917C E1           15 pop hl
 903+ 917D 23               inc hl
 904+ 917E 35               dec (hl)
 905+ 917F 2B               dec hl
 906+ 9180 18 0C            jr 10F
 907+ 9182
 908+ 9182              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9182              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9182
 911+ 9182 E5           14 push hl
 912+ 9183 CD 2B 92         call Elimina_disparo_de_base_de_datos
 913+ 9186 21 36 8A         ld hl,Impacto2
 914+ 9189 CB CE            set 1,(hl)
 915+ 918B E1               pop hl
 916+ 918C 18 06            jr 12F
 917+ 918E
 918+ 918E              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 918E
 920+ 918E CD D5 91     10 call Mueve_disparo
 921+ 9191 CD AC 91         call foto_disparo_a_borrar
 922+ 9194 C1           12 pop bc
 923+ 9195
 924+ 9195 18 04            jr 8F
 925+ 9197
 926+ 9197              ; ----- ----- ----- ----- ----- -----
 927+ 9197
 928+ 9197 ED 42        4 sbc hl,bc
 929+ 9199 28 0A            jr z,6F
 930+ 919B
 931+ 919B 2A 32 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 919E 23               inc hl
 933+ 919F 23               inc hl
 934+ 91A0 22 32 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91A3 18 8A            jr 5B
 936+ 91A5
 937+ 91A5 CD 06 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91A8 CD 72 92         call Limpia_Coordenadas_X
 939+ 91AB C9               ret
 940+ 91AC
 941+ 91AC              ; ------------------------------------------------------------------
 942+ 91AC
 943+ 91AC              foto_disparo_a_borrar
 944+ 91AC
 945+ 91AC 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91AD A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91AE C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91AF
 949+ 91AF E5               push hl
 950+ 91B0 23               inc hl
 951+ 91B1 23               inc hl
 952+ 91B2 ED 73 1D 8A      ld (Stack),sp
 953+ 91B6 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91B7 FD E1            pop iy
 955+ 91B9 DD E1            pop ix
 956+ 91BB E1               pop hl
 957+ 91BC ED 7B 1D 8A      ld sp,(Stack)
 958+ 91C0 3A 0C 8A         ld a,(Ctrl_1)
 959+ 91C3 CB C7            set 0,a
 960+ 91C5 32 0C 8A         ld (Ctrl_1),a
 961+ 91C8 CD A0 7F         call Guarda_foto_registros
 962+ 91CB 3A 0C 8A         ld a,(Ctrl_1)
 963+ 91CE CB 87            res 0,a
 964+ 91D0 32 0C 8A         ld (Ctrl_1),a
 965+ 91D3 E1               pop hl
 966+ 91D4 C9               ret
 967+ 91D5
 968+ 91D5              ;---------------------------------------------------
 969+ 91D5              ;
 970+ 91D5              ;   18/07/23
 971+ 91D5              ;
 972+ 91D5
 973+ 91D5              Mueve_disparo
 974+ 91D5
 975+ 91D5              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91D5              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91D5              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91D5
 979+ 91D5 E5               push hl
 980+ 91D6
 981+ 91D6 7E               ld a,(hl)
 982+ 91D7
 983+ 91D7 06 04            ld b,4
 984+ 91D9 23           1 inc hl
 985+ 91DA 10 FD            djnz 1B
 986+ 91DC
 987+ 91DC              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91DC
 989+ 91DC CD 44 8D         call Extrae_address
 990+ 91DF
 991+ 91DF E6 01            and 1
 992+ 91E1 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91E3
 994+ 91E3              ; Disparo hacia arriba, (Amadeus).
 995+ 91E3
 996+ 91E3              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91E3              ; _ de la dificultad.
 998+ 91E3
 999+ 91E3 CD 63 96         call PreviousScan
1000+ 91E6 CD 63 96         call PreviousScan
1001+ 91E9 CD 63 96         call PreviousScan
1002+ 91EC CD 63 96         call PreviousScan
1003+ 91EF
1004+ 91EF              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91EF
1006+ 91EF 7C               ld a,h
1007+ 91F0 FE 40            cp $40
1008+ 91F2 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91F4
1010+ 91F4              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91F4
1012+ 91F4 EB               ex de,hl
1013+ 91F5 06 04            ld b,4
1014+ 91F7 2B           6 dec hl
1015+ 91F8 10 FD            djnz 6B
1016+ 91FA
1017+ 91FA CD 2B 92         call Elimina_disparo_de_base_de_datos
1018+ 91FD E1               pop hl
1019+ 91FE 18 10            jr 7F
1020+ 9200
1021+ 9200              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9200              ; HL contiene el puntero de impresión del disparo.
1023+ 9200              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9200
1025+ 9200 D5           3 push de
1026+ 9201 C5               push bc
1027+ 9202
1028+ 9202 CD CA 8F         call Comprueba_Colision
1029+ 9205
1030+ 9205              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9205
1032+ 9205 78               ld a,b
1033+ 9206
1034+ 9206 C1               pop bc
1035+ 9207 D1               pop de
1036+ 9208
1037+ 9208 EB               ex de,hl
1038+ 9209
1039+ 9209 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 920A 23               inc hl                                      ; _ movimiento.
1041+ 920B 72               ld (hl),d
1042+ 920C
1043+ 920C E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 920D
1045+ 920D 23               inc hl                                      ; _ en curso.
1046+ 920E 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 920F 2B               dec hl
1048+ 9210
1049+ 9210 C9           7 ret
1050+ 9211
1051+ 9211              ; Disparo hacia abajo, (Entidad).
1052+ 9211
1053+ 9211 3A 43 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 9214 47               ld b,a
1055+ 9215
1056+ 9215 CD 54 96     4 call NextScan
1057+ 9218 10 FB            djnz 4B
1058+ 921A
1059+ 921A              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 921A
1061+ 921A 7C               ld a,h
1062+ 921B FE 58            cp $58
1063+ 921D 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 921F
1065+ 921F EB               ex de,hl
1066+ 9220 06 04            ld b,4
1067+ 9222 2B           5 dec hl
1068+ 9223 10 FD            djnz 5B
1069+ 9225
1070+ 9225 CD 2B 92         call Elimina_disparo_de_base_de_datos
1071+ 9228 E1               pop hl
1072+ 9229 18 E5            jr 7B
1073+ 922B
1074+ 922B              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 922B
1076+ 922B 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 922E AF               xor a
1078+ 922F 77               ld (hl),a
1079+ 9230 54               ld d,h
1080+ 9231 5D               ld e,l
1081+ 9232 13               inc de
1082+ 9233 ED B0            ldir
1083+ 9235 C9               ret
1084+ 9236
1085+ 9236              ; -----------------------------------------------------------------
1086+ 9236              ;
1087+ 9236              ;   19/7/23
1088+ 9236              ;
1089+ 9236              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9236              ;
1091+ 9236              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9236              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9236              ;
1094+ 9236              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9236              ;
1096+ 9236              ;   INPUTS:
1097+ 9236              ;
1098+ 9236              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9236              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9236
1101+ 9236              ;   MODIFICA: A, HL, BC y DE.
1102+ 9236
1103+ 9236              Guarda_coordenadas_X
1104+ 9236
1105+ 9236 7B               ld a,e
1106+ 9237 A7               and a
1107+ 9238 20 04            jr nz,1F
1108+ 923A
1109+ 923A 06 02            ld b,2
1110+ 923C 18 02            jr 2F
1111+ 923E
1112+ 923E 06 03        1 ld b,3
1113+ 9240 72           2 ld (hl),d
1114+ 9241 23               inc hl
1115+ 9242 14               inc d
1116+ 9243 10 FB            djnz 2B
1117+ 9245
1118+ 9245 C9               ret
1119+ 9246
1120+ 9246              ; -----------------------------------------------------------------
1121+ 9246              ;
1122+ 9246              ;   12/04/23
1123+ 9246              ;
1124+ 9246
1125+ 9246 3A 36 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9249 A7               and a
1127+ 924A C8               ret z
1128+ 924B
1129+ 924B FE 04            cp 4
1130+ 924D 20 09            jr nz,1F
1131+ 924F
1132+ 924F
1133+ 924F              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 924F
1135+ 924F CD 6B 90         call Detecta_colision_nave_entidad
1136+ 9252
1137+ 9252 21 36 8A         ld hl,Impacto2
1138+ 9255 CB 5E            bit 3,(hl)
1139+ 9257 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9258
1141+ 9258              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9258              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9258
1144+ 9258 21 36 8A     1 ld hl,Impacto2
1145+ 925B CB 4E            bit 1,(hl)
1146+ 925D 28 07            jr z,2F
1147+ 925F
1148+ 925F 21 9D 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9262 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9264 18 0B            jr 3F
1151+ 9266
1152+ 9266 21 36 8A     2 ld hl,Impacto2
1153+ 9269 CB 46            bit 0,(hl)
1154+ 926B C8               ret z
1155+ 926C
1156+ 926C              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 926C
1158+ 926C 21 0C 8A         ld hl,Ctrl_1
1159+ 926F CB D6            set 2,(hl)
1160+ 9271
1161+ 9271 C9           3 ret
1162+ 9272
1163+ 9272              ; -----------------------------------------------------------------
1164+ 9272              ;
1165+ 9272              ;   19/7/23
1166+ 9272              ;
1167+ 9272              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9272
1169+ 9272 AF           Limpia_Coordenadas_X xor a
1170+ 9273 06 06            ld b,6
1171+ 9275 21 3B 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9278 77           1 ld (hl),a
1173+ 9279 23               inc hl
1174+ 927A 10 FC            djnz 1B
1175+ 927C C9               ret
1176+ 927D
1177+ 927D              ; -----------------------------------------------------------------
1178+ 927D              ;
1179+ 927D              ;   25/04/23
1180+ 927D              ;
1181+ 927D
1182+ 927D              Determina_resultado_comparativa
1183+ 927D
1184+ 927D              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 927D              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 927D              ;
1187+ 927D              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 927D              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 927D              ;
1190+ 927D              ;   SBC HL,DE
1191+ 927D
1192+ 927D              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 927D              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 927D
1195+ 927D              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 927D              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 927D
1198+ 927D
1199+ 927D 3A DD 89         ld a,(Cuad_objeto)
1200+ 9280 FE 02            cp 2
1201+ 9282 28 26            jr z,2F
1202+ 9284 38 24            jr c,2F
1203+ 9286
1204+ 9286              ; Cuadrantes 3º y 4º
1205+ 9286
1206+ 9286 E6 01            and 1
1207+ 9288 28 10            jr z,4F
1208+ 928A
1209+ 928A              ; Cuadrante 3º
1210+ 928A
1211+ 928A 7C               ld a,h
1212+ 928B 06 00            ld b,0
1213+ 928D
1214+ 928D CD 18 93         call Compara_cositas_H3
1215+ 9290
1216+ 9290 04               inc b
1217+ 9291 05               dec b
1218+ 9292 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9293
1220+ 9293 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9294 06 00            ld b,0
1222+ 9296
1223+ 9296 CD 2A 93         call Compara_cositas_L3
1224+ 9299 C9               ret
1225+ 929A
1226+ 929A              ; Cuadrante 4º
1227+ 929A
1228+ 929A 7C           4 ld a,h
1229+ 929B 06 00            ld b,0
1230+ 929D
1231+ 929D CD 3C 93         call Compara_cositas_H4
1232+ 92A0
1233+ 92A0 04               inc b
1234+ 92A1 05               dec b
1235+ 92A2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92A3
1237+ 92A3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92A4 06 00            ld b,0
1239+ 92A6
1240+ 92A6 CD 52 93         call Compara_cositas_L4
1241+ 92A9 C9               ret
1242+ 92AA
1243+ 92AA              ; Cuadrantes 1º y 2º.
1244+ 92AA
1245+ 92AA 28 10        2 jr z,3F
1246+ 92AC
1247+ 92AC              ; 1er Cuadrante
1248+ 92AC
1249+ 92AC 7C               ld a,h
1250+ 92AD 06 00            ld b,0
1251+ 92AF
1252+ 92AF CD F0 92         call Compara_cositas_H1
1253+ 92B2
1254+ 92B2 04               inc b
1255+ 92B3 05               dec b
1256+ 92B4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92B5
1258+ 92B5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92B6 06 00            ld b,0
1260+ 92B8
1261+ 92B8 CD 06 93         call Compara_cositas_L1
1262+ 92BB C9               ret
1263+ 92BC
1264+ 92BC
1265+ 92BC              ; 2º Cuadrante
1266+ 92BC
1267+ 92BC 7C           3 ld a,h
1268+ 92BD 06 00            ld b,0
1269+ 92BF
1270+ 92BF CD CC 92         call Compara_cositas_H2
1271+ 92C2
1272+ 92C2 04               inc b
1273+ 92C3 05               dec b
1274+ 92C4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92C5
1276+ 92C5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92C6 06 00            ld b,0
1278+ 92C8
1279+ 92C8 CD DE 92         call Compara_cositas_L2
1280+ 92CB C9               ret
1281+ 92CC
1282+ 92CC A7           Compara_cositas_H2 and a
1283+ 92CD 28 0D            jr z,1F
1284+ 92CF              ;    cp $fd
1285+ 92CF              ;    jr z,1F
1286+ 92CF              ;    cp $fe
1287+ 92CF              ;    jr z,1F
1288+ 92CF FE FF            cp $ff
1289+ 92D1 28 09            jr z,1F
1290+ 92D3 FE 01            cp $01
1291+ 92D5 28 05            jr z,1F
1292+ 92D7 FE 02            cp $02
1293+ 92D9 28 01            jr z,1F
1294+ 92DB C0               ret nz
1295+ 92DC 04           1 inc b
1296+ 92DD C9               ret
1297+ 92DE
1298+ 92DE A7           Compara_cositas_L2 and a
1299+ 92DF 28 0D            jr z,1F
1300+ 92E1              ;    cp $fd
1301+ 92E1              ;    jr z,1F
1302+ 92E1 FE FE            cp $fe
1303+ 92E3 28 09            jr z,1F
1304+ 92E5 FE FF            cp $ff
1305+ 92E7 28 05            jr z,1F
1306+ 92E9 FE 01            cp $01
1307+ 92EB 28 01            jr z,1F
1308+ 92ED              ;    cp $02
1309+ 92ED              ;    jr z,1F
1310+ 92ED C0               ret nz
1311+ 92EE 04           1 inc b
1312+ 92EF C9               ret
1313+ 92F0
1314+ 92F0 A7           Compara_cositas_H1 and a
1315+ 92F1 28 11            jr z,1F
1316+ 92F3              ;    cp $fd
1317+ 92F3              ;    jr z,1F
1318+ 92F3              ;    cp $fe
1319+ 92F3              ;    jr z,1F
1320+ 92F3 FE FF            cp $ff
1321+ 92F5 28 0D            jr z,1F
1322+ 92F7 FE 01            cp $01
1323+ 92F9 28 09            jr z,1F
1324+ 92FB FE 02            cp $02
1325+ 92FD 28 05            jr z,1F
1326+ 92FF FE 03            cp $03
1327+ 9301 28 01            jr z,1F
1328+ 9303 C0               ret nz
1329+ 9304 04           1 inc b
1330+ 9305 C9               ret
1331+ 9306
1332+ 9306 A7           Compara_cositas_L1 and a
1333+ 9307 28 0D            jr z,1F
1334+ 9309              ;    cp $fd
1335+ 9309              ;    jr z,1F
1336+ 9309              ;    cp $fe
1337+ 9309              ;    jr z,1F
1338+ 9309              ;    cp $ff
1339+ 9309              ;    jr z,1F
1340+ 9309 FE 01            cp $01
1341+ 930B 28 09            jr z,1F
1342+ 930D FE 02            cp $02
1343+ 930F 28 05            jr z,1F
1344+ 9311 FE 03            cp $03
1345+ 9313 28 01            jr z,1F
1346+ 9315 C0               ret nz
1347+ 9316 04           1 inc b
1348+ 9317 C9               ret
1349+ 9318
1350+ 9318 A7           Compara_cositas_H3 and a
1351+ 9319 28 0D            jr z,1F
1352+ 931B              ;    cp $fd
1353+ 931B              ;    jr z,1F
1354+ 931B FE FE            cp $fe
1355+ 931D 28 09            jr z,1F
1356+ 931F FE FF            cp $ff
1357+ 9321 28 05            jr z,1F
1358+ 9323 FE 01            cp $01
1359+ 9325 28 01            jr z,1F
1360+ 9327              ;    cp $02
1361+ 9327              ;    jr z,1F
1362+ 9327              ;    cp $03
1363+ 9327              ;    jr z,1F
1364+ 9327 C0               ret nz
1365+ 9328 04           1 inc b
1366+ 9329 C9               ret
1367+ 932A
1368+ 932A A7           Compara_cositas_L3 and a
1369+ 932B 28 0D            jr z,1F
1370+ 932D              ;    cp $fd
1371+ 932D              ;    jr z,1F
1372+ 932D              ;    cp $fe
1373+ 932D              ;    jr z,1F
1374+ 932D              ;    cp $ff
1375+ 932D              ;    jr z,1F
1376+ 932D FE 01            cp $01
1377+ 932F 28 09            jr z,1F
1378+ 9331 FE 02            cp $02
1379+ 9333 28 05            jr z,1F
1380+ 9335 FE 03            cp $03
1381+ 9337 28 01            jr z,1F
1382+ 9339 C0               ret nz
1383+ 933A 04           1 inc b
1384+ 933B C9               ret
1385+ 933C
1386+ 933C A7           Compara_cositas_H4 and a
1387+ 933D 28 11            jr z,1F
1388+ 933F FE FD            cp $fd
1389+ 9341 28 0D            jr z,1F
1390+ 9343 FE FE            cp $fe
1391+ 9345 28 09            jr z,1F
1392+ 9347 FE FF            cp $ff
1393+ 9349 28 05            jr z,1F
1394+ 934B FE 01            cp $01
1395+ 934D 28 01            jr z,1F
1396+ 934F              ;    cp $02
1397+ 934F              ;    jr z,1F
1398+ 934F              ;    cp $03
1399+ 934F              ;    jr z,1F
1400+ 934F C0               ret nz
1401+ 9350 04           1 inc b
1402+ 9351 C9               ret
1403+ 9352
1404+ 9352 A7           Compara_cositas_L4 and a
1405+ 9353 28 0D            jr z,1F
1406+ 9355              ;    cp $fd
1407+ 9355              ;    jr z,1F
1408+ 9355 FE FE            cp $fe
1409+ 9357 28 09            jr z,1F
1410+ 9359 FE FF            cp $ff
1411+ 935B 28 05            jr z,1F
1412+ 935D FE 01            cp $01
1413+ 935F 28 01            jr z,1F
1414+ 9361              ;    cp $02
1415+ 9361              ;    jr z,1F
1416+ 9361              ;    cp $03
1417+ 9361              ;    jr z,1F
1418+ 9361 C0               ret nz
1419+ 9362 04           1 inc b
1420+ 9363 C9               ret
# file closed: Disparo.asm
1310  9364              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9364              ; ******************************************************************************************************************************************************************************************
   2+ 9364              ;
   3+ 9364              ; 26/06/23
   4+ 9364              ;
   5+ 9364              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9364
   7+ 9364 CD 48 96     Draw call Prepara_draw
   8+ 9367 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9368 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9369 28 05        	jr z,2F
  11+ 936B
  12+ 936B 3A DD 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 936E 18 0C        	jr 1F
  14+ 9370
  15+ 9370 2A DB 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9373 22 CB 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9376 CD 05 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9379              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9379 CD 4E 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 937C
  21+ 937C 3A F7 89     1 ld a,(Ctrl_0)
  22+ 937F CB 6F        	bit 5,a
  23+ 9381 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9383
  25+ 9383 CD 9B 93     	call Comprueba_limite_horizontal
  26+ 9386 CD 2B 94     	call Comprueba_limite_vertical
  27+ 9389
  28+ 9389              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9389              ; -----------------------
  30+ 9389              ; -----------------------
  31+ 9389              ; -----------------------
  32+ 9389
  33+ 9389 CD 78 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 938C CD AF 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 938F CD 0E 96     	call Define_rutina_de_impresion
  36+ 9392
  37+ 9392 3A F7 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9395 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9397 32 F7 89     	ld (Ctrl_0),a
  40+ 939A
  41+ 939A C9           	ret
  42+ 939B
  43+ 939B              ; *******************************************************************************************************************************************************************************************
  44+ 939B              ;	21/01/23
  45+ 939B              ;
  46+ 939B              ; 	Comprueba_limite_horizontal.
  47+ 939B              ;
  48+ 939B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 939B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 939B              ;
  51+ 939B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 939B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 939B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 939B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 939B
  56+ 939B
  57+ 939B
  58+ 939B 3A F7 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 939E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93A0 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93A2 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93A4 32 F7 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93A7 18 09            jr 6F
  64+ 93A9 CB 5F        1 bit 3,a
  65+ 93AB 28 0A            jr z,2F
  66+ 93AD E6 F7            and $f7
  67+ 93AF 32 F7 89         ld (Ctrl_0),a
  68+ 93B2 CD 05 95     6 call Inicializacion
  69+ 93B5 18 5B            jr 5F
  70+ 93B7 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93B8
  72+ 93B8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93B8              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93B8
  75+ 93B8 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93B9 2A 07 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93BC CD 1A 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93BF 67           	ld h,a
  79+ 93C0 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93C1 CD 1A 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93C4 67           	ld h,a
  82+ 93C5 A7           	and a
  83+ 93C6 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93C8 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93C9 3A DD 89     	ld a,(Cuad_objeto)
  86+ 93CC FE 02        	cp 2
  87+ 93CE 38 1E        	jr c,3F
  88+ 93D0 28 1C        	jr z,3F
  89+ 93D2 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93D3 28 23            jr z,7F
  91+ 93D5 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93D7 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93D9 E1           	pop hl
  94+ 93DA
  95+ 93DA              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93DA              ; _para indicar con E="2" en caso necesario.
  97+ 93DA
  98+ 93DA E5               push hl
  99+ 93DB C5               push bc
 100+ 93DC CD 1A 99     	call calcula_tercio
 101+ 93DF FE 01        	cp 1
 102+ 93E1 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93E3 CD 13 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93E6 28 26            jr z,9F
 105+ 93E8 38 24            jr c,9F
 106+ 93EA 1E 00        11 ld e,0
 107+ 93EC 18 22            jr 8F
 108+ 93EE 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93EF 28 07        	jr z, 7F
 110+ 93F1 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93F3 1E 00         	ld e,0
 112+ 93F5 E1           	pop hl
 113+ 93F6 18 04        	jr 4F
 114+ 93F8 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93FA 18 15            jr 10F
 116+ 93FC
 117+ 93FC              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93FC              ; _para indicar con E="2" en caso necesario.
 119+ 93FC
 120+ 93FC E5           4 push hl
 121+ 93FD C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93FE CD 1A 99     	call calcula_tercio
 123+ 9401 FE 01        	cp 1
 124+ 9403 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9405 CD 13 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9408 28 04            jr z,9F
 127+ 940A 30 02            jr nc,9F
 128+ 940C 18 02        	jr 8F
 129+ 940E 1E 02        9 ld e,2
 130+ 9410 C1           8 pop bc
 131+ 9411 E1           10 pop hl
 132+ 9412 C9           5 ret
 133+ 9413
 134+ 9413              ; --------------------
 135+ 9413              ;
 136+ 9413              ; 25/08/22
 137+ 9413
 138+ 9413 CD 1A 99     Comprueba_centro call calcula_tercio
 139+ 9416 67               ld h,a
 140+ 9417 08           	ex af,af
 141+ 9418 FE 02        	cp 2
 142+ 941A 38 07        	jr c,1F
 143+ 941C 28 05        	jr z,1F
 144+ 941E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9421 18 03        	jr 2F
 146+ 9423 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9426 08           2 ex af,af
 148+ 9427 A7               and a
 149+ 9428 ED 42            sbc hl,bc
 150+ 942A C9               ret
 151+ 942B
 152+ 942B              ; *********************************************************************************************************************************************************************************************
 153+ 942B              ;
 154+ 942B              ;   16/8/22
 155+ 942B              ;
 156+ 942B              ;	Comprueba_limite_vertical
 157+ 942B              ;
 158+ 942B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 942B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 942B              ;
 161+ 942B
 162+ 942B 2A CB 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 942E 7D           	ld a,l
 164+ 942F E6 1F        	and $1F
 165+ 9431 57           	ld d,a
 166+ 9432 3A 09 8A     	ld a,(Limite_vertical)
 167+ 9435 BA           	cp d 											; Límite - Posición.
 168+ 9436 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9437 3A DD 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 943A CB 47        	bit 0,a
 171+ 943C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 943E
 173+ 943E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 943E
 175+ 943E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 943F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9441
 178+ 9441              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9441              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9441
 181+ 9441 3A CF 89         ld a,(Coordenada_X)
 182+ 9444 16 0F            ld d,Centro_izquierda
 183+ 9446 A7               and a
 184+ 9447 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9448 28 1E            jr z,3F
 186+ 944A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 944C              ;                                                    ; _salimos sin modificar nada.
 188+ 944C 18 0E            jr 2F
 189+ 944E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 944F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9451
 192+ 9451              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9451              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9451
 195+ 9451 3A CF 89         ld a,(Coordenada_X)
 196+ 9454 16 10            ld d,Centro_derecha
 197+ 9456 A7               and a
 198+ 9457 92               sub d
 199+ 9458 28 0E            jr z,3F
 200+ 945A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 945C              ;                                                    ; _salimos sin modificar nada.
 202+ 945C CB 43        2 bit 0,e
 203+ 945E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9460 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9461 CD F5 94         call Modificaccionne
 206+ 9464 C1           	pop bc
 207+ 9465 CD 05 95         call Inicializacion
 208+ 9468 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9469
 210+ 9469              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9469
 212+ 9469 C5           4 push bc
 213+ 946A 01 CA 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 946D 0A           	ld a,(bc)
 215+ 946E 3D           	dec a
 216+ 946F 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9470 7D           	ld a,l
 218+ 9471 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9472 CB 47        	bit 0,a
 220+ 9474 28 03        	jr z,5F
 221+ 9476 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9477 18 2E        	jr 7F
 223+ 9479
 224+ 9479              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9479
 226+ 9479 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 947A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 947B 3A F7 89     	ld a,(Ctrl_0)
 229+ 947E CB 4F        	bit 1,a
 230+ 9480 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9482 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9483
 233+ 9483              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9483
 235+ 9483 1C               inc e
 236+ 9484 1D               dec e
 237+ 9485 20 07            jr nz,12F
 238+ 9487 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9488 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9489 22 CB 89     	ld (Posicion_actual),hl
 241+ 948C 18 44        13 jr 9F
 242+ 948E CB 43        12 bit 0,e
 243+ 9490 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9492              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9492 C1           	pop bc
 246+ 9493 18 D3        	jr 3B
 247+ 9495 80           14 add b
 248+ 9496 6F               ld l,a
 249+ 9497 22 CB 89     	ld (Posicion_actual),hl
 250+ 949A CD F5 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 949D 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 949F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94A1 32 F7 89         ld (Ctrl_0),a
 254+ 94A4 F1           	pop af
 255+ 94A5 18 2B        	jr 9F
 256+ 94A7
 257+ 94A7              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94A7
 259+ 94A7 F5           7 push af
 260+ 94A8 3A F7 89     	ld a,(Ctrl_0)
 261+ 94AB CB 47        	bit 0,a
 262+ 94AD 20 1D        	jr nz,8F
 263+ 94AF F1           	pop af
 264+ 94B0
 265+ 94B0              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94B0
 267+ 94B0 1C           	inc e
 268+ 94B1 1D               dec e
 269+ 94B2 20 07            jr nz,10F
 270+ 94B4 90           	sub b
 271+ 94B5 6F               ld l,a
 272+ 94B6 22 CB 89     	ld (Posicion_actual),hl
 273+ 94B9 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94BB              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94BB CB 43        10 bit 0,e
 276+ 94BD 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94BF              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94BF C1           	pop bc
 279+ 94C0 18 A6        	jr 3B
 280+ 94C2 90           16 sub b
 281+ 94C3 6F               ld l,a
 282+ 94C4 22 CB 89     	ld (Posicion_actual),hl
 283+ 94C7 CD F5 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94CA 18 06            jr 9F
 285+ 94CC E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94CE 32 F7 89         ld (Ctrl_0),a
 287+ 94D1 F1           	pop af
 288+ 94D2 C1           9 pop bc
 289+ 94D3 1E 00        	ld e,0
 290+ 94D5 CD 05 95         call Inicializacion
 291+ 94D8 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94D9 08           	ex af,af
 293+ 94DA F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94DB 18 8B            jr 3B
 295+ 94DD
 296+ 94DD              ; --------------------
 297+ 94DD
 298+ 94DD 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94DF CD 63 96     1 call PreviousScan
 300+ 94E2 10 FB            djnz 1B
 301+ 94E4 22 CB 89     	ld (Posicion_actual),hl
 302+ 94E7 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94E8 C9           	ret
 304+ 94E9
 305+ 94E9              ; --------------------
 306+ 94E9
 307+ 94E9 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94EB CD 54 96     1 call NextScan
 309+ 94EE 10 FB            djnz 1B
 310+ 94F0 22 CB 89     	ld (Posicion_actual),hl
 311+ 94F3 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94F4 C9           	ret
 313+ 94F5
 314+ 94F5              ; --------------------
 315+ 94F5              ;
 316+ 94F5              ;	22/01/23
 317+ 94F5              ;
 318+ 94F5              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94F5              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94F5              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94F5
 322+ 94F5
 323+ 94F5              Modificaccionne
 324+ 94F5
 325+ 94F5 3A DD 89     	ld a,(Cuad_objeto)
 326+ 94F8 FE 02        	cp 2
 327+ 94FA CC DD 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94FD DC DD 94         call c,Modifica_Pos_actual
 329+ 9500 C8           	ret z
 330+ 9501 CD E9 94         call Modifica_Pos_actual2
 331+ 9504 C9               ret
 332+ 9505
 333+ 9505              ; *************************************************************************************************************************************************************************************************
 334+ 9505              ;
 335+ 9505              ;	13/8/22
 336+ 9505              ;
 337+ 9505              ;	Inicializacion
 338+ 9505              ;
 339+ 9505              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9505              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9505              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9505              ;
 343+ 9505              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9505              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9505              ;	_ desaparece/aparece.
 346+ 9505
 347+ 9505              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9505              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9505              ;
 350+ 9505              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9505              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9505              ; 		   [E] ="0"
 353+ 9505
 354+ 9505              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9505
 356+ 9505 CD 1A 99     Inicializacion call calcula_tercio
 357+ 9508 28 36        	jr z,primit
 358+ 950A E6 02        	and 2
 359+ 950C 20 07        	jr nz,segmit
 360+ 950E 7D           	ld a,l
 361+ 950F FE 7F        	cp $7f
 362+ 9511 38 2D        	jr c,primit
 363+ 9513 28 2B        	jr z,primit
 364+ 9515 CD 72 95     segmit call column
 365+ 9518 38 13        	jr c,tercuad
 366+ 951A 3E 04        cuarcuad ld a,4
 367+ 951C 32 DD 89     	ld (Cuad_objeto),a
 368+ 951F 21 20 48     	ld hl,$4820
 369+ 9522 22 07 8A     	ld (Limite_horizontal),hl
 370+ 9525 21 09 8A     	ld hl,Limite_vertical
 371+ 9528 36 0D        	ld (hl),$0d
 372+ 952A 08           	ex af,af
 373+ 952B 18 3C        	jr 1F
 374+ 952D              tercuad
 375+ 952D 3E 03        	ld a,3
 376+ 952F 32 DD 89     	ld (Cuad_objeto),a
 377+ 9532 21 20 48     	ld hl,$4820
 378+ 9535 22 07 8A     	ld (Limite_horizontal),hl
 379+ 9538 21 09 8A     	ld hl,Limite_vertical
 380+ 953B 36 12        	ld (hl),$12
 381+ 953D 08           	ex af,af
 382+ 953E 18 29        	jr 1F
 383+ 9540 CD 72 95     primit call column
 384+ 9543 38 13        	jr c, primcuad
 385+ 9545              segcuad
 386+ 9545 3E 02        	ld a,2
 387+ 9547 32 DD 89     	ld (Cuad_objeto),a
 388+ 954A 21 C0 4F     	ld hl,$4fc0
 389+ 954D 22 07 8A     	ld (Limite_horizontal),hl
 390+ 9550 21 09 8A     	ld hl,Limite_vertical
 391+ 9553 36 0D        	ld (hl),$0d
 392+ 9555 08           	ex af,af
 393+ 9556 18 11        	jr 1F
 394+ 9558              primcuad
 395+ 9558 3E 01        	ld a,1
 396+ 955A 32 DD 89     	ld (Cuad_objeto),a
 397+ 955D 21 C0 4F     	ld hl,$4fc0
 398+ 9560 22 07 8A     	ld (Limite_horizontal),hl
 399+ 9563 21 09 8A     	ld hl,Limite_vertical
 400+ 9566 36 12        	ld (hl),$12
 401+ 9568 08           	ex af,af
 402+ 9569 CD A7 9C     1 call Genera_coordenadas
 403+ 956C 21 F7 89     	ld hl,Ctrl_0
 404+ 956F CB EE        	set 5,(hl)
 405+ 9571 C9           	ret
 406+ 9572
 407+ 9572              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9572
 409+ 9572              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9572              ;
 411+ 9572              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9572
 413+ 9572 7D           column ld a,l
 414+ 9573 E6 1F        	and $1f
 415+ 9575 FE 10         	cp $10
 416+ 9577 C9            	ret
 417+ 9578
 418+ 9578              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9578              ;
 420+ 9578              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9578              ;
 422+ 9578              ; 14/12/22
 423+ 9578              ;
 424+ 9578              ;	Modifica: A y BC.
 425+ 9578
 426+ 9578 3A DD 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 957B E6 01        	and 1
 428+ 957D 28 17        	jr z,1F
 429+ 957F
 430+ 957F              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 957F
 432+ 957F 3A CF 89     	ld a,(Coordenada_X)
 433+ 9582 47           	ld b,a
 434+ 9583 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9584 79           	ld a,c
 436+ 9585 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9586 38 08        	jr c,2F
 438+ 9588 47           	ld b,a
 439+ 9589 79           	ld a,c
 440+ 958A 90           	sub b
 441+ 958B 32 06 8A     	ld (Columnas),a
 442+ 958E 18 1B        	jr 4F
 443+ 9590 79           2 ld a,c
 444+ 9591 32 06 8A     	ld (Columnas),a
 445+ 9594 18 15        	jr 4F
 446+ 9596
 447+ 9596              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9596
 449+ 9596 3A CF 89     1 ld a,(Coordenada_X)
 450+ 9599 81           	add c
 451+ 959A 3D           	dec a
 452+ 959B D6 1F        	sub $1f
 453+ 959D 38 08        	jr c,3F
 454+ 959F 47           	ld b,a
 455+ 95A0 79           	ld a,c
 456+ 95A1 90           	sub b
 457+ 95A2 32 06 8A     	ld (Columnas),a
 458+ 95A5 18 04        	jr 4F
 459+ 95A7 79           3 ld a,c
 460+ 95A8 32 06 8A     	ld (Columnas),a
 461+ 95AB D9           4 exx
 462+ 95AC 4F           	ld c,a
 463+ 95AD D9           	exx
 464+ 95AE C9            ret
 465+ 95AF
 466+ 95AF              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95AF              ;
 468+ 95AF              ;   19/7/23
 469+ 95AF              ;
 470+ 95AF              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95AF              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95AF              ;
 473+ 95AF              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95AF              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95AF              ;
 476+ 95AF              ;	DESTRUYE: HL,B Y A.
 477+ 95AF
 478+ 95AF 3A DD 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95B2 FE 02        	cp 2
 480+ 95B4 38 18        	jr c,1F
 481+ 95B6 28 16        	jr z,1F
 482+ 95B8 E6 01        	and 1
 483+ 95BA 28 0D        	jr z,3F
 484+ 95BC
 485+ 95BC              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95BC
 487+ 95BC CD 02 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95BF
 489+ 95BF 7D           9 ld a,l
 490+ 95C0 E6 1F        	and $1f
 491+ 95C2 28 2A        	jr z,7F
 492+ 95C4 2B           	dec hl
 493+ 95C5 10 F8        	djnz 9B
 494+ 95C7 18 25        	jr 7F
 495+ 95C9
 496+ 95C9              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95C9
 498+ 95C9 2A CB 89     3 ld hl,(Posicion_actual)
 499+ 95CC 18 20        	jr 7F
 500+ 95CE
 501+ 95CE 28 14        1 jr z,2F
 502+ 95D0
 503+ 95D0              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95D0
 505+ 95D0 CD 02 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95D3
 507+ 95D3 7D           4 ld a,l
 508+ 95D4 E6 1F        	and $1f
 509+ 95D6 28 03        	jr z,6F
 510+ 95D8 2B           	dec hl
 511+ 95D9 10 F8        	djnz 4B
 512+ 95DB 06 0F        6 ld b,15
 513+ 95DD CD 63 96     5 call PreviousScan
 514+ 95E0 10 FB        	djnz 5B
 515+ 95E2 18 0A        	jr 7F
 516+ 95E4
 517+ 95E4              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95E4
 519+ 95E4 CD 02 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95E7 06 0F        	ld b,15
 521+ 95E9 CD 63 96     8 call PreviousScan
 522+ 95EC 10 FB        	djnz 8B
 523+ 95EE
 524+ 95EE E5           7 push hl
 525+ 95EF DD E1        	pop ix
 526+ 95F1
 527+ 95F1 2A CD 89     	ld hl,(Puntero_objeto)
 528+ 95F4 E5           	push hl
 529+ 95F5 FD E1        	pop iy
 530+ 95F7
 531+ 95F7              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95F7
 533+ 95F7 3A F7 89     	ld a,(Ctrl_0)
 534+ 95FA CB 77        	bit 6,a
 535+ 95FC C8           	ret z
 536+ 95FD
 537+ 95FD              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95FD              ; _ entidad / Amadeus´.
 539+ 95FD
 540+ 95FD DD 22 41 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9601
 542+ 9601 C9           	ret
 543+ 9602
 544+ 9602              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9602              ;
 546+ 9602              ;	2/1/23
 547+ 9602              ;
 548+ 9602              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9602              ;
 550+ 9602              ;	Tras esta rutina tenemos:
 551+ 9602              ;
 552+ 9602              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9602              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9602              ;
 555+ 9602              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9602
 557+ 9602 2A CB 89     Operandos ld hl,(Posicion_actual)
 558+ 9605 3A 06 8A     	ld a,(Columnas)
 559+ 9608 3D           	dec a
 560+ 9609 20 01        	jr nz,1F
 561+ 960B 3C           	inc a
 562+ 960C 47           1 ld b,a
 563+ 960D C9           	ret
 564+ 960E
 565+ 960E              ; --------------------------------------------------------------------------------------------------------------------
 566+ 960E              ;
 567+ 960E              ;	3/1/23
 568+ 960E              ;
 569+ 960E              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 960E              ;
 571+ 960E              ;	Destruye: A,B,HL y DE.
 572+ 960E
 573+ 960E              Define_rutina_de_impresion
 574+ 960E
 575+ 960E 3A CA 89     	ld a,(Columns)
 576+ 9611 47           	ld b,a
 577+ 9612 3A 06 8A     	ld a,(Columnas)
 578+ 9615 B8           	cp b
 579+ 9616 20 0D        	jr nz,2f
 580+ 9618
 581+ 9618              ;	La entidad se imprime entera.
 582+ 9618
 583+ 9618 21 EA 96     	ld hl, Indice_entidades_completas
 584+ 961B E6 01        	and 1
 585+ 961D 28 02        	jr z,1F
 586+ 961F
 587+ 961F 23           	inc hl
 588+ 9620 23           	inc hl
 589+ 9621
 590+ 9621 CD 44 8D     1 call Extrae_address
 591+ 9624 C9           	ret		;	ret
 592+ 9625
 593+ 9625              ;	La entidad no se imprime entera en pantalla.
 594+ 9625
 595+ 9625 3A DD 89     2 ld a,(Cuad_objeto)
 596+ 9628 E6 01        	and 1
 597+ 962A 28 17        	jr z,3F
 598+ 962C
 599+ 962C              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 962C
 601+ 962C 21 EE 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 962F 3A CA 89     4 ld a,(Columns)
 603+ 9632 E6 01        	and 1
 604+ 9634 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9636
 606+ 9636 23           	inc hl
 607+ 9637 23           	inc hl
 608+ 9638
 609+ 9638 3A 06 8A     	ld a,(Columnas)
 610+ 963B E6 01        	and 1
 611+ 963D 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 963F
 613+ 963F 23           	inc hl
 614+ 9640 23           	inc hl
 615+ 9641
 616+ 9641 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9643
 618+ 9643 21 F4 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9646 18 E7        	jr 4B
 620+ 9648
 621+ 9648              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9648              ;
 623+ 9648              ;	Prepara_draw
 624+ 9648              ;
 625+ 9648              ;	Es una rutina de carga.
 626+ 9648              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9648              ;
 628+ 9648              ;	FUNCIONAMIENTO:
 629+ 9648              ;
 630+ 9648              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9648              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9648              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9648              ;
 634+ 9648              ;	DESTRUYE:
 635+ 9648              ;
 636+ 9648              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9648
 638+ 9648 21 C9 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 964B 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 964C 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 964D 4E           	ld c,(hl)
 642+ 964E 2A CB 89     	ld hl,(Posicion_actual)
 643+ 9651 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9653 C9           	ret
 645+ 9654
 646+ 9654              ;----------------------------------------------------------------------------------------------------------------
 647+ 9654              ;
 648+ 9654              ;	5/08/22
 649+ 9654              ;
 650+ 9654              ;   NextScan.
 651+ 9654              ;
 652+ 9654              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9654              ;
 654+ 9654              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9654              ;
 656+ 9654              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9654              ;
 658+ 9654              ;       DESTRUIDOS: AF y HL !!!
 659+ 9654              ;
 660+ 9654              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9654              ;
 662+ 9654
 663+ 9654 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9655 7C               ld a,h
 665+ 9656 E6 07            and 7
 666+ 9658 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9659
 668+ 9659 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 965A C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 965C 6F               ld l,a
 671+ 965D D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 965E
 673+ 965E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 965F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9661 67               ld h,a
 676+ 9662 C9               ret
 677+ 9663
 678+ 9663              ;----------------------------------------------------------------------------------------------------------------
 679+ 9663              ;
 680+ 9663              ;	5/08/22
 681+ 9663              ;
 682+ 9663              ;   PreviousScan.
 683+ 9663              ;
 684+ 9663              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9663              ;
 686+ 9663              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9663              ;
 688+ 9663              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9663              ;
 690+ 9663              ;       DESTRUIDOS: AF y HL !!!
 691+ 9663              ;
 692+ 9663              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9663              ;
 694+ 9663
 695+ 9663 7C           PreviousScan ld a,h
 696+ 9664 25               dec h               ; Dec H.
 697+ 9665 E6 07            and 7
 698+ 9667 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9668
 700+ 9668 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9669 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 966B 6F               ld l,a
 703+ 966C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 966D
 705+ 966D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 966E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9670 67               ld h,a
 708+ 9671 C9               ret
 709+ 9672
 710+ 9672              ; -----------------------------------------------------------------------------------
 711+ 9672              ;
 712+ 9672              ;	31/7/23
 713+ 9672              ;
 714+ 9672              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9672              ;	Extrae fotos de Album_de_fotos.
 716+ 9672
 717+ 9672              Extrae_foto_entidades
 718+ 9672
 719+ 9672 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9675 7E               ld a,(hl)
 721+ 9676 A7               and a
 722+ 9677 C8               ret z																	; Salimos si no hay DATOS en el álbum.
 723+ 9678
 724+ 9678 3A 18 8A     	ld a,(Numero_de_malotes)												; Salimos si no hay MOVIMIENTO.
 725+ 967B A7           	and a
 726+ 967C C8           	ret z
 727+ 967D
 728+ 967D              ; -----------------------------------
 729+ 967D
 730+ 967D ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9681 31 00 70     	ld sp,Album_de_fotos
 732+ 9684
 733+ 9684 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9686 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9687 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9688
 737+ 9688 ED 73 1F 8A  	ld (Stack_2),sp
 738+ 968C ED 7B 1D 8A  	ld sp,(Stack)
 739+ 9690
 740+ 9690              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9690
 742+ 9690 3E CD        	ld a,$cd
 743+ 9692 32 9A 96     	ld (Imprime),a
 744+ 9695 EB           	ex de,hl
 745+ 9696 22 9B 96     	ld (Imprime+1),hl
 746+ 9699 EB           	ex de,hl
 747+ 969A
 748+ 969A              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 969A
 750+ 969A 00 00 00     Imprime db 0,0,0
 751+ 969D
 752+ 969D 3A 18 8A     	ld a,(Numero_de_malotes)
 753+ 96A0 3D           	dec a
 754+ 96A1 28 09        	jr z,1F
 755+ 96A3 32 18 8A      	ld (Numero_de_malotes),a
 756+ 96A6
 757+ 96A6 ED 7B 1F 8A   	ld sp,(Stack_2)
 758+ 96AA 18 D8        	jr 2B
 759+ 96AC
 760+ 96AC AF           1 xor a
 761+ 96AD 32 1F 8A     	ld (Stack_2),a
 762+ 96B0 C9           	ret
 763+ 96B1
 764+ 96B1              ; -----------------------------------------------------------------------------------
 765+ 96B1              ;
 766+ 96B1              ;	28/2/23
 767+ 96B1              ;
 768+ 96B1              ;	Pinta los disparos generados.
 769+ 96B1
 770+ 96B1              Extrae_foto_disparos
 771+ 96B1
 772+ 96B1 3A 31 8A     	ld a,(Numero_de_disparotes)
 773+ 96B4 A7           	and a
 774+ 96B5 C8           	ret z
 775+ 96B6 ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 776+ 96BA 31 11 72     	ld sp,Album_de_fotos_disparos
 777+ 96BD
 778+ 96BD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 779+ 96BF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 780+ 96C0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 781+ 96C1
 782+ 96C1 ED 73 1F 8A  	ld (Stack_2),sp
 783+ 96C5 ED 7B 1D 8A  	ld sp,(Stack)
 784+ 96C9
 785+ 96C9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 786+ 96C9
 787+ 96C9 3E CD        	ld a,$cd
 788+ 96CB 32 D3 96     	ld (Imprime2),a
 789+ 96CE EB           	ex de,hl
 790+ 96CF 22 D4 96     	ld (Imprime2+1),hl
 791+ 96D2 EB           	ex de,hl
 792+ 96D3
 793+ 96D3              ; Ejecuta la llamada:	CALL $xx,xx
 794+ 96D3
 795+ 96D3 00 00 00     Imprime2 db 0,0,0
 796+ 96D6
 797+ 96D6 3A 31 8A     	ld a,(Numero_de_disparotes)
 798+ 96D9 3D           	dec a
 799+ 96DA 28 09        	jr z,1F
 800+ 96DC 32 31 8A      	ld (Numero_de_disparotes),a
 801+ 96DF
 802+ 96DF ED 7B 1F 8A  	ld sp,(Stack_2)
 803+ 96E3 18 D8        	jr 2B
 804+ 96E5
 805+ 96E5 AF           1 xor a
 806+ 96E6 32 1F 8A     	ld (Stack_2),a
 807+ 96E9 C9           	ret
 808+ 96EA
# file closed: Draw_XOR.asm
1311  96EA              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96EA              ;   índices de Rutinas de impresión.
   2+ 96EA
   3+ 96EA FA 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96EC 27 97            defw Pinta_Amadeus_3x2
   5+ 96EE
   6+ 96EE 7D 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96F0 1D 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96F2 D1 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96F4
  10+ 96F4 A7 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96F6 AB 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96F8 5F 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96FA
  14+ 96FA
  15+ 96FA              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96FA              ;
  17+ 96FA              ;   12/12/22
  18+ 96FA              ;
  19+ 96FA              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96FA              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96FA              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96FA              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96FA              ;
  24+ 96FA              ;   Modifica: DE y HL.
  25+ 96FA
  26+ 96FA ED 73 1D 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96FE FD F9        	ld sp,iy
  28+ 9700 06 10            ld b,16
  29+ 9702 D1           1 pop de
  30+ 9703 7B               ld a,e
  31+ 9704 AE               xor (hl)
  32+ 9705 77           	ld (hl),a
  33+ 9706 23           	inc hl
  34+ 9707 7A               ld a,d
  35+ 9708 AE               xor (hl)
  36+ 9709 77           	ld (hl),a
  37+ 970A 2B           	dec hl
  38+ 970B 24           	inc h
  39+ 970C 7C               ld a,h
  40+ 970D E6 07            and 7
  41+ 970F 20 0A            jr nz,2F
  42+ 9711 7D               ld a,l
  43+ 9712 C6 20            add a,$20
  44+ 9714 6F               ld l,a
  45+ 9715 38 04            jr c,2F
  46+ 9717 7C               ld a,h
  47+ 9718 D6 08            sub 8
  48+ 971A 67               ld h,a
  49+ 971B 7C           2 ld a,h
  50+ 971C FE 58            cp $58
  51+ 971E 28 02            jr z,3F
  52+ 9720 10 E0            djnz 1B
  53+ 9722 ED 7B 1D 8A  3 ld sp,(Stack)
  54+ 9726 C9           	ret
  55+ 9727
  56+ 9727 ED 73 1D 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 972B FD F9        	ld sp,iy
  58+ 972D 06 08            ld b,8
  59+ 972F D1           1 pop de
  60+ 9730 7B               ld a,e
  61+ 9731 AE               xor (hl)
  62+ 9732 77           	ld (hl),a
  63+ 9733 23           	inc hl
  64+ 9734 7A               ld a,d
  65+ 9735 AE               xor (hl)
  66+ 9736 77           	ld (hl),a
  67+ 9737 23           	inc hl
  68+ 9738 D1           	pop de
  69+ 9739 7B               ld a,e
  70+ 973A AE               xor (hl)
  71+ 973B 77           	ld (hl),a
  72+ 973C 2B           	dec hl
  73+ 973D 2B           	dec hl
  74+ 973E 24           	inc h
  75+ 973F 7C               ld a,h
  76+ 9740 E6 07            and 7
  77+ 9742 20 0A            jr nz,2F
  78+ 9744 7D               ld a,l
  79+ 9745 C6 20            add a,$20
  80+ 9747 6F               ld l,a
  81+ 9748 38 04            jr c,2F
  82+ 974A 7C               ld a,h
  83+ 974B D6 08            sub 8
  84+ 974D 67               ld h,a
  85+ 974E 7C           2 ld a,h
  86+ 974F FE 58            cp $58
  87+ 9751 28 25            jr z,4F
  88+ 9753 7A               ld a,d
  89+ 9754 AE               xor (hl)
  90+ 9755 77               ld (hl),a
  91+ 9756 D1           	pop de
  92+ 9757 23           	inc hl
  93+ 9758 7B               ld a,e
  94+ 9759 AE               xor (hl)
  95+ 975A 77           	ld (hl),a
  96+ 975B 23           	inc hl
  97+ 975C 7A               ld a,d
  98+ 975D AE               xor (hl)
  99+ 975E 77           	ld (hl),a
 100+ 975F 2B           	dec hl
 101+ 9760 2B           	dec hl
 102+ 9761 24           	inc h
 103+ 9762 7C               ld a,h
 104+ 9763 E6 07            and 7
 105+ 9765 20 0A            jr nz,3F
 106+ 9767 7D               ld a,l
 107+ 9768 C6 20            add a,$20
 108+ 976A 6F               ld l,a
 109+ 976B 38 04            jr c,3F
 110+ 976D 7C               ld a,h
 111+ 976E D6 08            sub 8
 112+ 9770 67               ld h,a
 113+ 9771 7C           3 ld a,h
 114+ 9772 FE 58            cp $58
 115+ 9774 28 02            jr z,4F
 116+ 9776 10 B7            djnz 1B
 117+ 9778 ED 7B 1D 8A  4 ld sp,(Stack)
 118+ 977C C9           	ret
 119+ 977D
 120+ 977D              ; ---------------------------------------------------
 121+ 977D
 122+ 977D ED 73 1D 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9781 FD F9        	ld sp,iy
 124+ 9783
 125+ 9783              ; >>>
 126+ 9783
 127+ 9783 06 10            ld b,16
 128+ 9785 D1           1 pop de
 129+ 9786 7A           	ld a,d
 130+ 9787 AE           	xor (hl)
 131+ 9788 77           	ld (hl),a
 132+ 9789 24           	inc h
 133+ 978A 7C               ld a,h
 134+ 978B E6 07            and 7
 135+ 978D 20 0C            jr nz,2F
 136+ 978F 7D               ld a,l
 137+ 9790 C6 20            add a,$20
 138+ 9792 6F               ld l,a
 139+ 9793 38 06            jr c,2F
 140+ 9795 7C               ld a,h
 141+ 9796 D6 08            sub 8
 142+ 9798 67               ld h,a
 143+ 9799 18 00            jr 2F
 144+ 979B 7C           2 ld a,h
 145+ 979C FE 58            cp $58
 146+ 979E 28 02            jr z,3F
 147+ 97A0 10 E3            djnz 1B
 148+ 97A2 ED 7B 1D 8A  3 ld sp,(Stack)
 149+ 97A6 C9           	ret
 150+ 97A7
 151+ 97A7 ED 73 1D 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97AB FD F9        	ld sp,iy
 153+ 97AD
 154+ 97AD              ; >>>
 155+ 97AD
 156+ 97AD 06 10            ld b,16
 157+ 97AF D1           1 pop de
 158+ 97B0 7B           	ld a,e
 159+ 97B1 AE           	xor (hl)
 160+ 97B2 77           	ld (hl),a
 161+ 97B3 24           	inc h
 162+ 97B4 7C               ld a,h
 163+ 97B5 E6 07            and 7
 164+ 97B7 20 0C            jr nz,2F
 165+ 97B9 7D               ld a,l
 166+ 97BA C6 20            add a,$20
 167+ 97BC 6F               ld l,a
 168+ 97BD 38 06            jr c,2F
 169+ 97BF 7C               ld a,h
 170+ 97C0 D6 08            sub 8
 171+ 97C2 67               ld h,a
 172+ 97C3 18 00            jr 2F
 173+ 97C5 7C           2 ld a,h
 174+ 97C6 FE 58            cp $58
 175+ 97C8 28 02            jr z,3F
 176+ 97CA 10 E3            djnz 1B
 177+ 97CC ED 7B 1D 8A  3 ld sp,(Stack)
 178+ 97D0 C9           	ret
 179+ 97D1
 180+ 97D1              ; ---------------------------------------------------
 181+ 97D1
 182+ 97D1 ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97D5 FD F9        	ld sp,iy
 184+ 97D7 06 08            ld b,8
 185+ 97D9 D1           1 pop de
 186+ 97DA 7A           	ld a,d
 187+ 97DB AE           	xor (hl)
 188+ 97DC 77           	ld (hl),a
 189+ 97DD 23           	inc hl
 190+ 97DE D1           	pop de
 191+ 97DF 7B           	ld a,e
 192+ 97E0 AE           	xor (hl)
 193+ 97E1 77           	ld (hl),a
 194+ 97E2 2B           	dec hl
 195+ 97E3 24            	inc h
 196+ 97E4 7C               ld a,h
 197+ 97E5 E6 07            and 7
 198+ 97E7 20 0A            jr nz,2F
 199+ 97E9 7D               ld a,l
 200+ 97EA C6 20            add a,$20
 201+ 97EC 6F               ld l,a
 202+ 97ED 38 04            jr c,2F
 203+ 97EF 7C               ld a,h
 204+ 97F0 D6 08            sub 8
 205+ 97F2 67               ld h,a
 206+ 97F3 7C           2 ld a,h
 207+ 97F4 FE 58            cp $58
 208+ 97F6 28 20            jr z,4F
 209+ 97F8 D1               pop de
 210+ 97F9 7B           	ld a,e
 211+ 97FA AE           	xor (hl)
 212+ 97FB 77           	ld (hl),a
 213+ 97FC 23           	inc hl
 214+ 97FD 7A           	ld a,d
 215+ 97FE AE           	xor (hl)
 216+ 97FF 77           	ld (hl),a
 217+ 9800 2B           	dec hl
 218+ 9801 24           	inc h
 219+ 9802 7C               ld a,h
 220+ 9803 E6 07            and 7
 221+ 9805 20 0A            jr nz,3F
 222+ 9807 7D               ld a,l
 223+ 9808 C6 20            add a,$20
 224+ 980A 6F               ld l,a
 225+ 980B 38 04            jr c,3F
 226+ 980D 7C               ld a,h
 227+ 980E D6 08            sub 8
 228+ 9810 67               ld h,a
 229+ 9811 7C           3 ld a,h
 230+ 9812 FE 58            cp $58
 231+ 9814 28 02            jr z,4F
 232+ 9816 10 C1            djnz 1B
 233+ 9818 ED 7B 1D 8A  4 ld sp,(Stack)
 234+ 981C C9           	ret
 235+ 981D
 236+ 981D ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9821 FD F9        	ld sp,iy
 238+ 9823 06 08            ld b,8
 239+ 9825 D1           1 pop de
 240+ 9826 D1           	pop de
 241+ 9827 7B           	ld a,e
 242+ 9828 AE           	xor (hl)
 243+ 9829 77           	ld (hl),a
 244+ 982A 24            	inc h
 245+ 982B 7C               ld a,h
 246+ 982C E6 07            and 7
 247+ 982E 20 0A            jr nz,2F
 248+ 9830 7D               ld a,l
 249+ 9831 C6 20            add a,$20
 250+ 9833 6F               ld l,a
 251+ 9834 38 04            jr c,2F
 252+ 9836 7C               ld a,h
 253+ 9837 D6 08            sub 8
 254+ 9839 67               ld h,a
 255+ 983A 7C           2 ld a,h
 256+ 983B FE 58            cp $58
 257+ 983D 28 1B            jr z,4F
 258+ 983F D1               pop de
 259+ 9840 7A           	ld a,d
 260+ 9841 AE           	xor (hl)
 261+ 9842 77           	ld (hl),a
 262+ 9843 24           	inc h
 263+ 9844 7C               ld a,h
 264+ 9845 E6 07            and 7
 265+ 9847 20 0A            jr nz,3F
 266+ 9849 7D               ld a,l
 267+ 984A C6 20            add a,$20
 268+ 984C 6F               ld l,a
 269+ 984D 38 04            jr c,3F
 270+ 984F 7C               ld a,h
 271+ 9850 D6 08            sub 8
 272+ 9852 67               ld h,a
 273+ 9853 7C           3 ld a,h
 274+ 9854 FE 58            cp $58
 275+ 9856 28 02            jr z,4F
 276+ 9858 10 CB            djnz 1B
 277+ 985A ED 7B 1D 8A  4 ld sp,(Stack)
 278+ 985E C9           	ret
 279+ 985F
 280+ 985F ED 73 1D 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9863 FD F9        	ld sp,iy
 282+ 9865 06 08            ld b,8
 283+ 9867 D1           1 pop de
 284+ 9868 7B           	ld a,e
 285+ 9869 AE           	xor (hl)
 286+ 986A 77           	ld (hl),a
 287+ 986B 23           	inc hl
 288+ 986C 7A           	ld a,d
 289+ 986D AE           	xor (hl)
 290+ 986E 77           	ld (hl),a
 291+ 986F 2B           	dec hl
 292+ 9870 24             	inc h
 293+ 9871 7C               ld a,h
 294+ 9872 E6 07            and 7
 295+ 9874 20 0A            jr nz,2F
 296+ 9876 7D               ld a,l
 297+ 9877 C6 20            add a,$20
 298+ 9879 6F               ld l,a
 299+ 987A 38 04            jr c,2F
 300+ 987C 7C               ld a,h
 301+ 987D D6 08            sub 8
 302+ 987F 67               ld h,a
 303+ 9880 7C           2 ld a,h
 304+ 9881 FE 58            cp $58
 305+ 9883 28 21            jr z,4F
 306+ 9885 D1               pop de
 307+ 9886 7A           	ld a,d
 308+ 9887 AE           	xor (hl)
 309+ 9888 77           	ld (hl),a
 310+ 9889 23           	inc hl
 311+ 988A D1               pop de
 312+ 988B 7B           	ld a,e
 313+ 988C AE           	xor (hl)
 314+ 988D 77           	ld (hl),a
 315+ 988E 2B           	dec hl
 316+ 988F 24           	inc h
 317+ 9890 7C               ld a,h
 318+ 9891 E6 07            and 7
 319+ 9893 20 0A            jr nz,3F
 320+ 9895 7D               ld a,l
 321+ 9896 C6 20            add a,$20
 322+ 9898 6F               ld l,a
 323+ 9899 38 04            jr c,3F
 324+ 989B 7C               ld a,h
 325+ 989C D6 08            sub 8
 326+ 989E 67               ld h,a
 327+ 989F 7C           3 ld a,h
 328+ 98A0 FE 58            cp $58
 329+ 98A2 28 02            jr z,4F
 330+ 98A4 10 C1            djnz 1B
 331+ 98A6 ED 7B 1D 8A  4 ld sp,(Stack)
 332+ 98AA C9           	ret
 333+ 98AB
 334+ 98AB ED 73 1D 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98AF FD F9        	ld sp,iy
 336+ 98B1 06 08            ld b,8
 337+ 98B3 D1           1 pop de
 338+ 98B4 7B           	ld a,e
 339+ 98B5 AE           	xor (hl)
 340+ 98B6 77           	ld (hl),a
 341+ 98B7 24            	inc h
 342+ 98B8 7C               ld a,h
 343+ 98B9 E6 07            and 7
 344+ 98BB 20 0A            jr nz,2F
 345+ 98BD 7D               ld a,l
 346+ 98BE C6 20            add a,$20
 347+ 98C0 6F               ld l,a
 348+ 98C1 38 04            jr c,2F
 349+ 98C3 7C               ld a,h
 350+ 98C4 D6 08            sub 8
 351+ 98C6 67               ld h,a
 352+ 98C7 7C           2 ld a,h
 353+ 98C8 FE 58            cp $58
 354+ 98CA 28 1C            jr z,4F
 355+ 98CC D1               pop de
 356+ 98CD 7A           	ld a,d
 357+ 98CE AE           	xor (hl)
 358+ 98CF 77           	ld (hl),a
 359+ 98D0 24           	inc h
 360+ 98D1 7C               ld a,h
 361+ 98D2 E6 07            and 7
 362+ 98D4 20 0A            jr nz,3F
 363+ 98D6 7D               ld a,l
 364+ 98D7 C6 20            add a,$20
 365+ 98D9 6F               ld l,a
 366+ 98DA 38 04            jr c,3F
 367+ 98DC 7C               ld a,h
 368+ 98DD D6 08            sub 8
 369+ 98DF 67               ld h,a
 370+ 98E0 7C           3 ld a,h
 371+ 98E1 FE 58            cp $58
 372+ 98E3 28 03            jr z,4F
 373+ 98E5 D1               pop de
 374+ 98E6 10 CB            djnz 1B
 375+ 98E8 ED 7B 1D 8A  4 ld sp,(Stack)
 376+ 98EC C9           	ret
 377+ 98ED
 378+ 98ED              ; ---------------------------------------------------
 379+ 98ED              ;
 380+ 98ED              ;   27/02/23
 381+ 98ED              ;
 382+ 98ED              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98ED              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98ED              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98ED
 386+ 98ED ED 73 1D 8A  Pinta_Disparo ld (Stack),sp
 387+ 98F1 FD F9            ld sp,iy
 388+ 98F3 06 03            ld b,3
 389+ 98F5 D1           1 pop de
 390+ 98F6 7B               ld a,e
 391+ 98F7 AE               xor (hl)
 392+ 98F8 77               ld (hl),a
 393+ 98F9 23               inc hl
 394+ 98FA 7A               ld a,d
 395+ 98FB AE               xor (hl)
 396+ 98FC 77               ld (hl),a
 397+ 98FD 2B               dec hl
 398+ 98FE
 399+ 98FE 24               inc h
 400+ 98FF 7C               ld a,h
 401+ 9900 E6 07            and 7
 402+ 9902 20 0A            jr nz,2F
 403+ 9904 7D               ld a,l
 404+ 9905 C6 20            add a,$20
 405+ 9907 6F               ld l,a
 406+ 9908 38 04            jr c,2F
 407+ 990A 7C               ld a,h
 408+ 990B D6 08            sub 8
 409+ 990D 67               ld h,a
 410+ 990E 7C           2 ld a,h
 411+ 990F FE 58            cp $58
 412+ 9911 28 02            jr z,3F
 413+ 9913
 414+ 9913 10 E0            djnz 1B
 415+ 9915 ED 7B 1D 8A  3 ld sp,(Stack)
 416+ 9919 C9               ret
 417+ 991A
# file closed: Rutinas_de_impresion_sprites.asm
1312  991A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 991A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 991A              ;
   3+ 991A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 991A              ;
   5+ 991A              ; *****************************************************************************************************************************************************************************************
   6+ 991A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 991A
   8+ 991A 7C           calcula_tercio ld a,h
   9+ 991B E6 18        	and $18
  10+ 991D CB 2F        	sra a
  11+ 991F CB 2F        	sra a
  12+ 9921 CB 2F        	sra a
  13+ 9923 C9           	ret
  14+ 9924
# file closed: calcula_tercio.asm
1313  9924              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9924              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9924              ;
   3+ 9924              ;
   4+ 9924              ;	CLS.
   5+ 9924              ;
   6+ 9924              ;	Limpia la pantalla y define sus atributos.
   7+ 9924              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9924              ;
   9+ 9924              ;	COLORES: 0 ..... NEGRO
  10+ 9924              ;    		 1 ..... AZUL
  11+ 9924              ; 			 2 ..... ROJO
  12+ 9924              ;			 3 ..... MAGENTA
  13+ 9924              ; 			 4 ..... VERDE
  14+ 9924              ; 			 5 ..... CIAN
  15+ 9924              ;			 6 ..... AMARILLO
  16+ 9924              ; 			 7 ..... BLANCO
  17+ 9924              ;
  18+ 9924              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9924              ;
  20+ 9924              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9924
  22+ 9924
  23+ 9924 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9927 11 01 40     	LD DE,$4001
  25+ 992A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 992D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 992F ED B0        	LDIR
  28+ 9931 01 FF 02     	LD BC,767
  29+ 9934 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9935 ED B0        	LDIR
  31+ 9937 C9           	ret
  32+ 9938
# file closed: Cls.asm
1314  9938              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9938              ; ******************************************************************************************************************************************************************************************
   2+ 9938              ;
   3+ 9938              ;   20/05/23
   4+ 9938              ;
   5+ 9938              ;	Recompone_posicion_inicio
   6+ 9938              ;
   7+ 9938              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9938              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9938              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9938              ;	_ a una u otra rutina.
  11+ 9938
  12+ 9938              Recompone_posicion_inicio
  13+ 9938
  14+ 9938 2A DB 89     	ld hl,(Posicion_inicio)
  15+ 993B 7D           	ld a,l
  16+ 993C E6 1F        	and $1f
  17+ 993E 28 16        	jr z,1F
  18+ 9940
  19+ 9940 FE 1F        	cp $1f
  20+ 9942 28 0D        	jr z,3F
  21+ 9944
  22+ 9944 21 0A 8A     	ld hl,Ctrl_2
  23+ 9947 CB C6        	set 0,(hl)
  24+ 9949 2A CD 89     	ld hl,(Puntero_objeto)
  25+ 994C 22 0D 8A     	ld (Repone_puntero_objeto),hl
  26+ 994F 18 08        	jr 2F
  27+ 9951
  28+ 9951 CD F2 9A     3 call Mov_left
  29+ 9954 18 03        	jr 2F
  30+ 9956
  31+ 9956 CD D4 99     1 call Mov_right
  32+ 9959 21 00 F0     2 ld hl,Sprite_vacio
  33+ 995C 22 CD 89     	ld (Puntero_objeto),hl
  34+ 995F C9           	ret
  35+ 9960
  36+ 9960              ; ******************************************************************************************************************************************************************************************
  37+ 9960              ;
  38+ 9960              ;   27/05/23
  39+ 9960              ;
  40+ 9960              ;	Mov_down
  41+ 9960              ;
  42+ 9960              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9960              ;
  44+ 9960              ;
  45+ 9960              Mov_down
  46+ 9960
  47+ 9960 CD C2 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9963              ;																	; _ repone (Puntero_objeto).
  49+ 9963 21 F7 89     	ld hl,Ctrl_0
  50+ 9966 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9968              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9968              ; 																	; _ en el caso de que no lo haya.
  53+ 9968 3A E1 89     	ld a,(Vel_down)
  54+ 996B 47           	ld b,a
  55+ 996C 2A CB 89         ld hl,(Posicion_actual)
  56+ 996F CD 1A 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9972 E6 02        	and 2
  58+ 9974 28 0F        	jr z,1F
  59+ 9976
  60+ 9976              ; Nos encontramos en el último tercio de pantalla.
  61+ 9976              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9976
  63+ 9976 7C           	ld a,h
  64+ 9977 FE 57        	cp $57
  65+ 9979 20 0A        	jr nz,1F
  66+ 997B
  67+ 997B 7D           	ld a,l
  68+ 997C C6 20        	add $20
  69+ 997E 30 05        	jr nc,1F
  70+ 9980
  71+ 9980              ; ------------------------------
  72+ 9980              ;	call Reaparece_arriba
  73+ 9980 CD 81 9C     	call Reinicio
  74+ 9983              ; ------------------------------
  75+ 9983
  76+ 9983 18 08        	jr 3F
  77+ 9985 CD 54 96     1 call NextScan
  78+ 9988 22 CB 89     	ld (Posicion_actual),hl
  79+ 998B 10 E2            djnz 2B
  80+ 998D CD A7 9C     3 call Genera_coordenadas
  81+ 9990 C9           	ret
  82+ 9991
  83+ 9991              ; ******************************************************************************************************************************************************************************************
  84+ 9991              ;
  85+ 9991              ;   27/05/23
  86+ 9991              ;
  87+ 9991              ;	Mov_up
  88+ 9991              ;
  89+ 9991              ; 	Mueve el Sprite hacia arriba.
  90+ 9991              ;
  91+ 9991              ;
  92+ 9991              Mov_up
  93+ 9991
  94+ 9991 CD C2 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9994              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9994 21 F7 89     	ld hl,Ctrl_0
  97+ 9997 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9999              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9999              ; 																		; _ en el caso de que no lo haya.
 100+ 9999 3A E0 89     	ld a,(Vel_up)
 101+ 999C 47           	ld b,a
 102+ 999D 2A CB 89     	ld hl,(Posicion_actual)
 103+ 99A0 CD 1A 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99A3 A7           	and a
 105+ 99A4 20 10        	jr nz,1F
 106+ 99A6
 107+ 99A6              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99A6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99A6
 110+ 99A6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99A7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99A9 20 0B            jr nz,1F
 113+ 99AB 7D               ld a,l
 114+ 99AC D6 20            sub $20
 115+ 99AE 30 06            jr nc,1F
 116+ 99B0 25               dec h
 117+ 99B1
 118+ 99B1              ; -----------------------------
 119+ 99B1 CD 62 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99B4              ;	call Reinicio
 121+ 99B4              ; -----------------------------
 122+ 99B4
 123+ 99B4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99B6 CD 63 96     1 call PreviousScan
 125+ 99B9 22 CB 89     	ld (Posicion_actual),hl
 126+ 99BC 10 E2            djnz 3B
 127+ 99BE CD A7 9C     2 call Genera_coordenadas
 128+ 99C1 C9           	ret
 129+ 99C2
 130+ 99C2              ; -----------------------------
 131+ 99C2              ;
 132+ 99C2              ;	27/5/23
 133+ 99C2              ;
 134+ 99C2              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99C2              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99C2              ;
 137+ 99C2              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99C2              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99C2              ;
 140+ 99C2              ;	Modifica: A y (Puntero_objeto).
 141+ 99C2
 142+ 99C2 3A 0A 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99C5 CB 47        	bit 0,a
 144+ 99C7 C8           	ret z
 145+ 99C8 CB 87        	res 0,a
 146+ 99CA 32 0A 8A     	ld (Ctrl_2),a
 147+ 99CD 2A 0D 8A     	ld hl,(Repone_puntero_objeto)
 148+ 99D0 22 CD 89     	ld (Puntero_objeto),hl
 149+ 99D3 C9           	ret
 150+ 99D4
 151+ 99D4              ; ******************************************************************************************************************************************************************************************
 152+ 99D4              ;
 153+ 99D4              ;	19/10/22
 154+ 99D4              ;
 155+ 99D4              ;	Mov_right.
 156+ 99D4              ;
 157+ 99D4              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99D4              ;
 159+ 99D4
 160+ 99D4 21 F7 89     Mov_right ld hl,Ctrl_0
 161+ 99D7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99D9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99D9              ; 																	; _ en el caso de que no lo haya.
 164+ 99D9 3A F7 89     	ld a,(Ctrl_0)
 165+ 99DC CB 77        	bit 6,a
 166+ 99DE 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99E0
 168+ 99E0 CD 10 9C     	call Stop_Amadeus_right
 169+ 99E3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99E4 18 4D        	jr 8F
 171+ 99E6
 172+ 99E6 3A CF 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99E9 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99EB 20 46        	jr nz,8F
 175+ 99ED
 176+ 99ED 3A D1 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 99F0 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 99F1 28 40        	jr z,8F
 179+ 99F3
 180+ 99F3              ; ---------- ---------- ----------
 181+ 99F3              ;
 182+ 99F3              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 99F3
 184+ 99F3 3A DF 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 99F6 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 99F8 28 11        	jr z,1F
 187+ 99FA 38 06        	jr c,6F
 188+ 99FC FE 04        	cp 4
 189+ 99FE 28 14        	jr z,7F
 190+ 9A00 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A02
 192+ 9A02              ; ---------- ---------- ----------
 193+ 9A02              ;
 194+ 9A02              ; Perfiles de velocidad
 195+ 9A02              ;
 196+ 9A02
 197+ 9A02 3A D1 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A05 FE FE        	cp $fe
 199+ 9A07 20 2A        	jr nz,8F
 200+ 9A09 18 10        	jr 3F
 201+ 9A0B 3A D1 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A0E FE FD        	cp $fd
 203+ 9A10 20 21        	jr nz,8F
 204+ 9A12 18 07        	jr 3F
 205+ 9A14 3A D1 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A17 FE FB        	cp $fb
 207+ 9A19 20 18        	jr nz,8F
 208+ 9A1B
 209+ 9A1B              ; ---------- ---------- ----------
 210+ 9A1B
 211+ 9A1B              3
 212+ 9A1B CD 50 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A1E              ;	call Reinicio
 214+ 9A1E
 215+ 9A1E              ; ---------- ---------- ----------
 216+ 9A1E              ;
 217+ 9A1E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A1E
 219+ 9A1E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A20 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A21 CD 3A 9A     	call DESPLZ_DER
 222+ 9A24 C1           	pop bc
 223+ 9A25 10 F9        	djnz 5B
 224+ 9A27 2A CB 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A2A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A2B 22 CB 89     	ld (Posicion_actual),hl
 227+ 9A2E CD A7 9C     	call Genera_coordenadas
 228+ 9A31 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A33
 230+ 9A33              ; ---------- ---------- ----------
 231+ 9A33
 232+ 9A33 2A CB 89     8 ld hl,(Posicion_actual)
 233+ 9A36 CD 3A 9A     	call DESPLZ_DER
 234+ 9A39 C9           2 ret
 235+ 9A3A
 236+ 9A3A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A3A              ;
 238+ 9A3A              ;	22/9/22
 239+ 9A3A              ;
 240+ 9A3A
 241+ 9A3A CD 49 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A3D CD 95 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A40 CD BE 9A         call Ciclo_completo
 244+ 9A43 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A46 CB FE        	set 7,(hl)
 246+ 9A48 C9           	ret
 247+ 9A49
 248+ 9A49              ; ******************************************************************************************************************************************************************************************
 249+ 9A49              ;	15/02/23
 250+ 9A49              ;
 251+ 9A49
 252+ 9A49 3A DF 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A4C 47           	ld b,a
 254+ 9A4D 2A D7 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A50 23           1 inc hl
 256+ 9A51 23           	inc hl
 257+ 9A52 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A54 22 D7 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A57 CD 44 8D     	call Extrae_address
 260+ 9A5A 22 CD 89     	ld (Puntero_objeto),hl
 261+ 9A5D
 262+ 9A5D              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A5D
 264+ 9A5D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A5D              ; Cuántos movimientos hemos hecho ??
 266+ 9A5D              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A5D
 268+ 9A5D 2A D3 89     7 ld hl,(Indice_Sprite_der)
 269+ 9A60 EB           	ex de,hl
 270+ 9A61 A7           	and a
 271+ 9A62 ED 52        	sbc hl,de
 272+ 9A64 CB 3D        	srl l
 273+ 9A66 3E 08        6 ld a,8
 274+ 9A68 95           	sub l
 275+ 9A69 30 1E        	jr nc,3F
 276+ 9A6B
 277+ 9A6B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A6B              ; B="0".
 279+ 9A6B
 280+ 9A6B 04           4 inc b
 281+ 9A6C 3C           	inc a
 282+ 9A6D 20 FC        	jr nz,4B
 283+ 9A6F 78           	ld a,b
 284+ 9A70 08           	ex af,af
 285+ 9A71 2A D3 89     	ld hl,(Indice_Sprite_der)
 286+ 9A74 23           5 inc hl
 287+ 9A75 23           	inc hl
 288+ 9A76 10 FC        	djnz 5B
 289+ 9A78 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9A7B CD 44 8D     	call Extrae_address
 291+ 9A7E 22 CD 89     	ld (Puntero_objeto),hl
 292+ 9A81
 293+ 9A81              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A81              ; _(Posicion_actual).
 295+ 9A81
 296+ 9A81 21 CB 89     	ld hl,Posicion_actual
 297+ 9A84 34           	inc (hl)
 298+ 9A85 08               ex af,af
 299+ 9A86 6F           	ld l,a
 300+ 9A87 18 DD        	jr 6B
 301+ 9A89
 302+ 9A89              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A89
 304+ 9A89 47           3 ld b,a
 305+ 9A8A 2A D5 89     	ld hl,(Indice_Sprite_izq)
 306+ 9A8D 23           2 inc hl
 307+ 9A8E 23           	inc hl
 308+ 9A8F 10 FC        	djnz 2B
 309+ 9A91 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A94 C9           8 ret
 311+ 9A95
 312+ 9A95              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A95              ;
 314+ 9A95              ;	24/7/22
 315+ 9A95              ;
 316+ 9A95              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A95              ;
 318+ 9A95              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A95              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A95              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A95
 322+ 9A95 3A D1 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A98 A7           	and a
 324+ 9A99 20 1F        	jr nz,1F
 325+ 9A9B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A9D 32 D1 89         ld (CTRL_DESPLZ),a
 327+ 9AA0
 328+ 9AA0 21 CA 89     	ld hl,Columns
 329+ 9AA3 34           	inc (hl)
 330+ 9AA4 3A DD 89     	ld a,(Cuad_objeto)
 331+ 9AA7 E6 01        	and 1
 332+ 9AA9 28 0F        	jr z,1F
 333+ 9AAB 2A CB 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AAE 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AAF 22 CB 89     	ld (Posicion_actual),hl
 336+ 9AB2 CD A7 9C     	call Genera_coordenadas
 337+ 9AB5 CD 1C 9C     	call Inc_CTRL_DESPLZ
 338+ 9AB8 18 03        	jr 2F
 339+ 9ABA CD 1C 9C     1 call Inc_CTRL_DESPLZ
 340+ 9ABD C9           2 ret
 341+ 9ABE
 342+ 9ABE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9ABE              ;
 344+ 9ABE              ;	24/7/22
 345+ 9ABE              ;
 346+ 9ABE              ;	Ciclo_completo.
 347+ 9ABE              ;
 348+ 9ABE              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9ABE              ;
 350+ 9ABE              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9ABE              ; 	Decrementamos (Columns).
 352+ 9ABE              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9ABE              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9ABE
 355+ 9ABE
 356+ 9ABE 3A D1 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AC1 FE FF        	cp $ff
 358+ 9AC3 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AC5 E6 F0        	and $f0
 360+ 9AC7 20 28        	jr nz,3F
 361+ 9AC9
 362+ 9AC9              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AC9
 364+ 9AC9 3A D1 89     	ld a,(CTRL_DESPLZ)
 365+ 9ACC 47           	ld b,a
 366+ 9ACD 3E F8        	ld a,$f8
 367+ 9ACF 80           	add b
 368+ 9AD0 32 D1 89     	ld (CTRL_DESPLZ),a
 369+ 9AD3 18 1C        	jr 3F
 370+ 9AD5 21 CA 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AD8 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AD9 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9ADA 32 D1 89     	ld (CTRL_DESPLZ),a
 374+ 9ADD 3A DD 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AE0 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AE2 20 0A        	jr nz,2F
 377+ 9AE4 2A CB 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AE7 23           	inc hl
 379+ 9AE8 22 CB 89     	ld (Posicion_actual),hl
 380+ 9AEB CD A7 9C     	call Genera_coordenadas
 381+ 9AEE
 382+ 9AEE              ; Inicia el puntero de Sprite.
 383+ 9AEE
 384+ 9AEE CD 5B 8D     2 call Inicia_puntero_objeto_der
 385+ 9AF1 C9           3 ret
 386+ 9AF2
 387+ 9AF2              ; ******************************************************************************************************************************************************************************************
 388+ 9AF2              ;
 389+ 9AF2              ;	15/02/23
 390+ 9AF2              ;
 391+ 9AF2              ;	Mov_left.
 392+ 9AF2              ;
 393+ 9AF2              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9AF2              ;
 395+ 9AF2 21 F7 89     Mov_left ld hl,Ctrl_0
 396+ 9AF5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9AF7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9AF7              ; 																	; _ en el caso de que no lo haya.
 399+ 9AF7 3A F7 89     	ld a,(Ctrl_0)
 400+ 9AFA CB 77        	bit 6,a
 401+ 9AFC 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9AFE
 403+ 9AFE CD 16 9C     	call Stop_Amadeus_left
 404+ 9B01 C8           	ret z
 405+ 9B02 20 4A        	jr nz,8F
 406+ 9B04
 407+ 9B04 3A CF 89     11 ld a,(Coordenada_X)
 408+ 9B07 A7           	and a
 409+ 9B08 20 44        	jr nz,8F
 410+ 9B0A
 411+ 9B0A 3A D1 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B0D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B0E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B10
 415+ 9B10              ; ---------- ---------- ----------
 416+ 9B10
 417+ 9B10 3A DE 89     	ld a,(Vel_left)
 418+ 9B13 FE 02        	cp 2
 419+ 9B15 28 0F        	jr z,1F
 420+ 9B17 38 04        	jr c,6F
 421+ 9B19 FE 04        	cp 4
 422+ 9B1B 28 12        	jr z,7F
 423+ 9B1D
 424+ 9B1D              ; ---------- ---------- ----------
 425+ 9B1D
 426+ 9B1D 3A D1 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B20 FE F8        	cp $f8
 428+ 9B22 20 2A        	jr nz,8F
 429+ 9B24 18 10        	jr 4F
 430+ 9B26 3A D1 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B29 FE F9        	cp $f9
 432+ 9B2B 20 21        	jr nz,8F
 433+ 9B2D 18 07        	jr 4F
 434+ 9B2F 3A D1 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B32 FE FB        	cp $fb
 436+ 9B34 20 18        	jr nz,8F
 437+ 9B36
 438+ 9B36              ; ---------- ---------- ----------
 439+ 9B36
 440+ 9B36              4
 441+ 9B36 CD 3E 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B39              ;	call Reinicio
 443+ 9B39
 444+ 9B39              ; ---------- ---------- ----------
 445+ 9B39
 446+ 9B39 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B3B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B3C
 449+ 9B3C              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B3C              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B3C
 452+ 9B3C CD 55 9B     	call DESPLZ_IZQ
 453+ 9B3F C1           	pop bc
 454+ 9B40 10 F9        	djnz 5B
 455+ 9B42 2A CB 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B45 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B46 22 CB 89     	ld (Posicion_actual),hl
 458+ 9B49 CD A7 9C     	call Genera_coordenadas
 459+ 9B4C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B4E
 461+ 9B4E              ; ---------- ---------- ----------
 462+ 9B4E
 463+ 9B4E              ; Movemos, no hay recolocación.
 464+ 9B4E
 465+ 9B4E 2A CB 89     8 ld hl,(Posicion_actual)
 466+ 9B51 CD 55 9B     	call DESPLZ_IZQ
 467+ 9B54 C9           2 ret
 468+ 9B55
 469+ 9B55              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B55              ;
 471+ 9B55              ;	22/9/22
 472+ 9B55
 473+ 9B55              DESPLZ_IZQ
 474+ 9B55
 475+ 9B55 CD 64 9B     	call Desplaza_izquierda
 476+ 9B58 CD B2 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B5B CD DA 9B     	call Ciclo_completo_2
 478+ 9B5E 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B61 CB BE        	res 7,(hl)
 480+ 9B63 C9           	ret
 481+ 9B64
 482+ 9B64              Desplaza_izquierda
 483+ 9B64
 484+ 9B64 18 FE        	jr $
 485+ 9B66
 486+ 9B66 3A DE 89     	ld a,(Vel_left)
 487+ 9B69 47           	ld b,a
 488+ 9B6A 2A D9 89     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B6D 23           1 inc hl
 490+ 9B6E 23           	inc hl
 491+ 9B6F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B71 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B74 CD 44 8D     	call Extrae_address
 494+ 9B77 22 CD 89     	ld (Puntero_objeto),hl
 495+ 9B7A
 496+ 9B7A              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B7A
 498+ 9B7A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B7A              ; Cuántos movimientos hemos hecho ??
 500+ 9B7A              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B7A
 502+ 9B7A 2A D5 89     7 ld hl,(Indice_Sprite_izq)
 503+ 9B7D EB           	ex de,hl
 504+ 9B7E A7           	and a
 505+ 9B7F ED 52        	sbc hl,de
 506+ 9B81 CB 3D        	srl l
 507+ 9B83 3E 08        6 ld a,8
 508+ 9B85 95           	sub l
 509+ 9B86 30 1E        	jr nc,3F
 510+ 9B88
 511+ 9B88              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B88              ; B="0".
 513+ 9B88
 514+ 9B88 04           4 inc b
 515+ 9B89 3C           	inc a
 516+ 9B8A 20 FC        	jr nz,4B
 517+ 9B8C 78           	ld a,b
 518+ 9B8D 08           	ex af,af
 519+ 9B8E 2A D5 89     	ld hl,(Indice_Sprite_izq)
 520+ 9B91 23           5 inc hl
 521+ 9B92 23           	inc hl
 522+ 9B93 10 FC        	djnz 5B
 523+ 9B95 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B98 CD 44 8D     	call Extrae_address
 525+ 9B9B 22 CD 89     	ld (Puntero_objeto),hl
 526+ 9B9E
 527+ 9B9E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B9E              ; _(Posicion_actual).
 529+ 9B9E
 530+ 9B9E 21 CB 89     	ld hl,Posicion_actual
 531+ 9BA1 35           	dec (hl)
 532+ 9BA2 08           	ex af,af
 533+ 9BA3 6F           	ld l,a
 534+ 9BA4 18 DD        	jr 6B
 535+ 9BA6
 536+ 9BA6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BA6
 538+ 9BA6 47           3 ld b,a
 539+ 9BA7 2A D3 89     	ld hl,(Indice_Sprite_der)
 540+ 9BAA 23           2 inc hl
 541+ 9BAB 23           	inc hl
 542+ 9BAC 10 FC        	djnz 2B
 543+ 9BAE 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 544+ 9BB1 C9           8 ret
 545+ 9BB2
 546+ 9BB2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BB2              ;
 548+ 9BB2              ;	modifica_parametros_1er_DESPLZ
 549+ 9BB2              ;
 550+ 9BB2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BB2              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BB2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BB2
 554+ 9BB2 3A D1 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BB5 A7           	and a
 556+ 9BB6 20 1E        	jr nz,1F
 557+ 9BB8 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BB9 32 D1 89         ld (CTRL_DESPLZ),a
 559+ 9BBC 21 CA 89     	ld hl,Columns
 560+ 9BBF 34           	inc (hl)
 561+ 9BC0 3A DD 89     	ld a,(Cuad_objeto)
 562+ 9BC3 E6 01        	and 1
 563+ 9BC5 20 0F        	jr nz,1F
 564+ 9BC7 2A CB 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BCA 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BCB 22 CB 89     	ld (Posicion_actual),hl
 567+ 9BCE CD A7 9C     	call Genera_coordenadas
 568+ 9BD1 CD 2D 9C     	call Dec_CTRL_DESPLZ
 569+ 9BD4 18 03        	jr 2F
 570+ 9BD6 CD 2D 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BD9 C9           2 ret
 572+ 9BDA
 573+ 9BDA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BDA
 575+ 9BDA 3A D1 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BDD FE F7        	cp $f7
 577+ 9BDF 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BE1 30 2C        	jr nc,3F
 579+ 9BE3
 580+ 9BE3              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BE3
 582+ 9BE3 06 00        	ld b,0
 583+ 9BE5 04           4 inc b
 584+ 9BE6 3C           	inc a
 585+ 9BE7 FE F7        	cp $f7
 586+ 9BE9 20 FA        	jr nz,4B
 587+ 9BEB 3E FF        	ld a,$ff
 588+ 9BED 90           	sub b
 589+ 9BEE 32 D1 89     	ld (CTRL_DESPLZ),a
 590+ 9BF1 18 1C        	jr 3F
 591+ 9BF3
 592+ 9BF3              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9BF3
 594+ 9BF3 21 CA 89     1 ld hl,Columns
 595+ 9BF6 35           	dec (hl)
 596+ 9BF7 AF           	xor a
 597+ 9BF8 32 D1 89     	ld (CTRL_DESPLZ),a
 598+ 9BFB 3A DD 89     	ld a,(Cuad_objeto)
 599+ 9BFE E6 01        	and 1
 600+ 9C00 28 0A        	jr z,2F
 601+ 9C02 2A CB 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C05 2B           	dec hl
 603+ 9C06 22 CB 89     	ld (Posicion_actual),hl
 604+ 9C09 CD A7 9C     	call Genera_coordenadas
 605+ 9C0C
 606+ 9C0C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C0C
 608+ 9C0C CD 6E 8D     2 call Inicia_puntero_objeto_izq
 609+ 9C0F C9           3 ret
 610+ 9C10
 611+ 9C10              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C10              ;
 613+ 9C10              ;	19/10/22
 614+ 9C10              ;
 615+ 9C10              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C10              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C10
 618+ 9C10 3A CF 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C13 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C15 C9           	ret
 621+ 9C16
 622+ 9C16              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C16              ;
 624+ 9C16              ;	19/10/22
 625+ 9C16              ;
 626+ 9C16              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C16              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C16
 629+ 9C16 3A CF 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C19 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C1B C9           	ret
 632+ 9C1C
 633+ 9C1C              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C1C              ;
 635+ 9C1C              ;	24/7/22
 636+ 9C1C              ;
 637+ 9C1C              ;	Inc_CTRL_DESPLZ
 638+ 9C1C              ;
 639+ 9C1C              ;
 640+ 9C1C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C1C
 642+ 9C1C 21 D1 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C1F 3A DF 89     	ld a,(Vel_right)
 644+ 9C22 A7           	and a
 645+ 9C23 28 06        	jr z,1F
 646+ 9C25 47           	ld b,a
 647+ 9C26 34           3 inc (hl)
 648+ 9C27 10 FD        	djnz 3B
 649+ 9C29 18 01        	jr 2F
 650+ 9C2B 34           1 inc (hl)
 651+ 9C2C C9           2 ret
 652+ 9C2D
 653+ 9C2D              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C2D              ;
 655+ 9C2D              ;	5/2/23
 656+ 9C2D              ;
 657+ 9C2D              ;	Dec_CTRL_DESPLZ
 658+ 9C2D              ;
 659+ 9C2D              ;
 660+ 9C2D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C2D
 662+ 9C2D 21 D1 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C30 3A DE 89     	ld a,(Vel_left)
 664+ 9C33 A7           	and a
 665+ 9C34 28 06        	jr z,1F
 666+ 9C36 47           	ld b,a
 667+ 9C37 35           3 dec (hl)
 668+ 9C38 10 FD        	djnz 3B
 669+ 9C3A 18 01        	jr 2F
 670+ 9C3C 35           1 dec (hl)
 671+ 9C3D C9           2 ret
 672+ 9C3E
 673+ 9C3E              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C3E
 675+ 9C3E 2A CB 89     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C41 01 1F 00     	ld bc,31
 677+ 9C44 A7           	and a
 678+ 9C45 ED 4A        	adc hl,bc
 679+ 9C47 22 CB 89     	ld (Posicion_actual),hl
 680+ 9C4A 21 F7 89     	ld hl,Ctrl_0														; $xxx1
 681+ 9C4D CB C6        	set 0,(hl)
 682+ 9C4F C9           	ret
 683+ 9C50
 684+ 9C50              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C50
 686+ 9C50 2A CB 89     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C53 01 1F 00     	ld bc,31
 688+ 9C56 A7           	and a
 689+ 9C57 ED 42        	sbc hl,bc
 690+ 9C59 22 CB 89     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C5C 21 F7 89     	ld hl,Ctrl_0
 692+ 9C5F CB CE        	set 1,(hl)
 693+ 9C61 C9           	ret
 694+ 9C62
 695+ 9C62              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C62
 697+ 9C62 24           Reaparece_abajo inc h
 698+ 9C63 01 E0 17     	ld bc,$17e0
 699+ 9C66 A7           	and a
 700+ 9C67 ED 4A        	adc hl,bc
 701+ 9C69 22 CB 89     	ld (Posicion_actual),hl
 702+ 9C6C 21 F7 89     	ld hl,Ctrl_0
 703+ 9C6F CB D6        	set 2,(hl)
 704+ 9C71 C9           	ret
 705+ 9C72
 706+ 9C72              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C72
 708+ 9C72 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C75 A7           	and a
 710+ 9C76 ED 42        	sbc hl,bc
 711+ 9C78 22 CB 89     	ld (Posicion_actual),hl
 712+ 9C7B 21 F7 89     	ld hl,Ctrl_0
 713+ 9C7E CB DE        	set 3,(hl)
 714+ 9C80 C9           	ret
 715+ 9C81
 716+ 9C81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C81              ;
 718+ 9C81              ;	15/07/23
 719+ 9C81
 720+ 9C81              Reinicio
 721+ 9C81
 722+ 9C81              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C81
 724+ 9C81 AF           	xor a
 725+ 9C82 21 FE 89     	ld hl,Puntero_indice_mov_bucle
 726+ 9C85 CD A3 9C     	call Limpia_contenido_hl
 727+ 9C88
 728+ 9C88 21 CB 89     	ld hl,Posicion_actual
 729+ 9C8B CD A3 9C     	call Limpia_contenido_hl
 730+ 9C8E
 731+ 9C8E CD C4 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C91 CD 4E 9F     	call Inicia_Puntero_mov
 733+ 9C94
 734+ 9C94 21 00 8A     	ld hl,Incrementa_puntero
 735+ 9C97 06 05        	ld b,5
 736+ 9C99 77           1 ld (hl),a
 737+ 9C9A 23           	inc hl
 738+ 9C9B 10 FC        	djnz 1B
 739+ 9C9D
 740+ 9C9D 21 0A 8A     	ld hl,Ctrl_2
 741+ 9CA0 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CA2
 743+ 9CA2 C9           	ret
 744+ 9CA3
 745+ 9CA3 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CA4 23           	inc hl
 747+ 9CA5 77           	ld (hl),a
 748+ 9CA6 C9           	ret
 749+ 9CA7
 750+ 9CA7
# file closed: Direcciones.asm
1315  9CA7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CA7              ; ------------------------------------------------------------------------
   2+ 9CA7              ;
   3+ 9CA7              ;	02/04/23
   4+ 9CA7              ;
   5+ 9CA7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CA7              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CA7              ;
   8+ 9CA7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CA7              ;
  10+ 9CA7              ;	Modifica: A,BC y DE.
  11+ 9CA7
  12+ 9CA7 C5           Genera_coordenadas push bc
  13+ 9CA8 E5           	push hl
  14+ 9CA9 D5           	push de
  15+ 9CAA
  16+ 9CAA 2A CB 89     	ld hl,(Posicion_actual)
  17+ 9CAD
  18+ 9CAD 7D           	ld a,l
  19+ 9CAE E6 1F        	and $1f
  20+ 9CB0 32 CF 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CB3
  22+ 9CB3 CD 1A 99     	call calcula_tercio
  23+ 9CB6 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CB7
  25+ 9CB7 1E 00        	ld e,0
  26+ 9CB9 7D           	ld a,l
  27+ 9CBA E6 E0        	and $e0
  28+ 9CBC 28 01        	jr z,1F
  29+ 9CBE 04           	inc b
  30+ 9CBF
  31+ 9CBF 04           1 inc b
  32+ 9CC0 05           	dec b
  33+ 9CC1 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CC3              ;														; _ , salimos.
  35+ 9CC3 1C           3 inc e
  36+ 9CC4 D6 20        	sub 32
  37+ 9CC6 20 FB        	jr nz,3B
  38+ 9CC8 10 F5        	djnz 1B
  39+ 9CCA
  40+ 9CCA 7B           2 ld a,e
  41+ 9CCB 32 D0 89     	ld (Coordenada_y),a
  42+ 9CCE
  43+ 9CCE D1           	pop de
  44+ 9CCF E1           	pop hl
  45+ 9CD0 C1           	pop bc
  46+ 9CD1
  47+ 9CD1 C9           	ret
  48+ 9CD2
  49+ 9CD2              ; ------------------------------------------------------------------------
  50+ 9CD2              ;	28/05/23
  51+ 9CD2              ;
  52+ 9CD2              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CD2              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CD2              ;
  55+ 9CD2              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CD2              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CD2              ;
  58+ 9CD2              ;		DE="$120d"
  59+ 9CD2              ;
  60+ 9CD2              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CD2              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CD2              ;
  63+ 9CD2              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CD2
  65+ 9CD2              ;	Modifica: A,BC y DE.
  66+ 9CD2
  67+ 9CD2
  68+ 9CD2              Genera_coordenadas_disparo
  69+ 9CD2
  70+ 9CD2              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CD2
  72+ 9CD2 7D           	ld a,l
  73+ 9CD3 E6 1F        	and $1f
  74+ 9CD5 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CD6 CD 1A 99     	call calcula_tercio
  76+ 9CD9 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CDA 1E 00        	ld e,0
  78+ 9CDC 7D           	ld a,l
  79+ 9CDD E6 E0        	and $e0
  80+ 9CDF 28 01        	jr z,1F
  81+ 9CE1 04           	inc b
  82+ 9CE2 1C           1 inc e
  83+ 9CE3 D6 20        	sub 32
  84+ 9CE5 20 FB        	jr nz,1B
  85+ 9CE7 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CE9 C9           	ret
  87+ 9CEA
# file closed: Genera_coordenadas.asm
1316  9CEA              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CEA
   2+ 9CEA
   3+ 9CEA              ;   07/07/23
   4+ 9CEA              ;
   5+ 9CEA              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CEA              ;
   7+ 9CEA              ;   Codificación:
   8+ 9CEA              ;
   9+ 9CEA              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CEA              ;
  11+ 9CEA              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CEA              ;
  13+ 9CEA              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CEA              ;
  15+ 9CEA              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CEA              ;
  17+ 9CEA              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CEA              ;                               ..... %01000010 Vel_up 4
  19+ 9CEA              ;                                               Vel_down 2
  20+ 9CEA              ;                               ..... $42
  21+ 9CEA              ;
  22+ 9CEA              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CEA              ;
  24+ 9CEA              ;                               ..... %01000010 Vel_left 4
  25+ 9CEA              ;                                               Vel_right 2
  26+ 9CEA              ;                               ..... $42
  27+ 9CEA              ;
  28+ 9CEA              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CEA              ;
  30+ 9CEA              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CEA              ;
  32+ 9CEA              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CEA              ;
  34+ 9CEA              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CEA              ;                                     $53
  36+ 9CEA              ;
  37+ 9CEA              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CEA              ;
  39+ 9CEA              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CEA              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CEA              ;
  42+ 9CEA              ;                       Arriba ..... $81
  43+ 9CEA              ;                       Arriba - izquierda ..... $a1
  44+ 9CEA              ;                       Arriba - derecha ..... $91
  45+ 9CEA              ;
  46+ 9CEA              ;                       Abajo ..... $41
  47+ 9CEA              ;                       Abajo - izquierda ..... $61
  48+ 9CEA              ;                       Abajo - derecha ..... $51
  49+ 9CEA              ;
  50+ 9CEA              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CEA              ;
  52+ 9CEA              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CEA              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CEA              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CEA              ;
  56+ 9CEA              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CEA              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CEA              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CEA              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CEA              ;
  61+ 9CEA              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CEA              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CEA              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CEA              ;
  65+ 9CEA              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CEA              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CEA              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CEA              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CEA
  70+ 9CEA              ; ----- ----- ----- ----- -----
  71+ 9CEA
  72+ 9CEA 16 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CEC 1E 9D            defw F_1
  74+ 9CEE 28 9D            defw F_2
  75+ 9CF0 32 9D            defw Codo_abajo_derecha
  76+ 9CF2 66 9D            defw Derecha_y_subiendo
  77+ 9CF4 70 9D            defw Derecha_y_subiendo_1
  78+ 9CF6 7A 9D            defw F_3
  79+ 9CF8 84 9D            defw F_4
  80+ 9CFA 8E 9D            defw Derecha_y_bajando
  81+ 9CFC 98 9D            defw Derecha_y_bajando_1
  82+ 9CFE A2 9D            defw Derecha_y_bajando_2
  83+ 9D00 AC 9D            defw Codo_derecha_abajo
  84+ 9D02 DC 9D            defw Codo_abajo_izq.
  85+ 9D04 10 9E            defw Izquierda_y_subiendo
  86+ 9D06 1A 9E            defw Izquierda_y_subiendo_1
  87+ 9D08 24 9E            defw F_5
  88+ 9D0A 2E 9E            defw F_6
  89+ 9D0C 38 9E            defw Izquierda_y_bajando
  90+ 9D0E 42 9E            defw Izquierda_y_bajando_1
  91+ 9D10 4C 9E            defw Izquierda_y_bajando_2
  92+ 9D12 56 9E            defw Codo_izquierda_abajo
  93+ 9D14 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D16
  95+ 9D16 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D1A 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D1E
  98+ 9D1E 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D22 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D26 08 00
 100+ 9D28 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D2C 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D30 0F FE
 102+ 9D32
 103+ 9D32 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D36 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D3A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D3E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D42 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D46 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D4A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D4E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D52 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D56 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D5A 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D5E 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D62 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D66
 117+ 9D66 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D6A 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D6E 06 00
 119+ 9D70
 120+ 9D70 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D74 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D78 02 00
 122+ 9D7A
 123+ 9D7A 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D7E 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D82 04 00
 125+ 9D84 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D88 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D8C 08 00
 127+ 9D8E
 128+ 9D8E 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D92 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D96 02 00
 130+ 9D98
 131+ 9D98 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D9C 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DA0 06 00
 133+ 9DA2
 134+ 9DA2 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DA6 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DAA 06 00
 136+ 9DAC
 137+ 9DAC              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DAC
 139+ 9DAC 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DB0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DB4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DB8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DBC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DC0 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DC4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DC8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DCC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DD0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DD4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DD8 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DDC
 152+ 9DDC 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DE0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DE4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DE8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DEC 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9DF0 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9DF4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9DF8 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9DFC 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E00 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E04 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E08 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E0C 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E10
 166+ 9E10 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E14 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E18 06 00
 168+ 9E1A
 169+ 9E1A 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E1E 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E22 02 00
 171+ 9E24
 172+ 9E24 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E28 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E2C 04 00
 174+ 9E2E 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E32 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E36 08 00
 176+ 9E38
 177+ 9E38 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E3C 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E40 02 00
 179+ 9E42
 180+ 9E42 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E46 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E4A 06 00
 182+ 9E4C
 183+ 9E4C 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E50 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E54 06 00
 185+ 9E56
 186+ 9E56 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E5A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E5E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E62 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E66 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E6A 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E6E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E72 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E76 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E7A 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E7E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E82 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E86
 199+ 9E86              ; ----- ----- ----- ----- -----
 200+ 9E86              ;
 201+ 9E86              ;   27/06/23
 202+ 9E86
 203+ 9E86              Movimiento
 204+ 9E86
 205+ 9E86              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E86
 207+ 9E86              ;    ld hl,(Posicion_actual)
 208+ 9E86
 209+ 9E86 3A 0A 8A         ld a,(Ctrl_2)
 210+ 9E89 CB 57            bit 2,a
 211+ 9E8B 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E8D
 213+ 9E8D 2A FC 89         ld hl,(Puntero_mov)
 214+ 9E90 7E               ld a,(hl)
 215+ 9E91
 216+ 9E91              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E91
 218+ 9E91              Inicia_desplazamiento.
 219+ 9E91
 220+ 9E91              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E91
 222+ 9E91 CD 85 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E94
 224+ 9E94              ; Iniciamos (Repetimos_mov).
 225+ 9E94
 226+ 9E94 7E               ld a,(hl)
 227+ 9E95 E6 0F            and $0f
 228+ 9E97 32 02 8A         ld (Repetimos_desplazamiento),a
 229+ 9E9A 32 03 8A         ld (Repetimos_desplazamiento_backup),a
 230+ 9E9D
 231+ 9E9D              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E9D
 233+ 9E9D 23               inc hl
 234+ 9E9E 7E               ld a,(hl)
 235+ 9E9F 32 05 8A         ld (Cola_de_desplazamiento),a
 236+ 9EA2 2B               dec hl
 237+ 9EA3
 238+ 9EA3 21 0A 8A         ld hl,Ctrl_2
 239+ 9EA6 CB D6            set 2,(hl)
 240+ 9EA8
 241+ 9EA8              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EA8              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EA8
 244+ 9EA8              Desplazamiento_iniciado
 245+ 9EA8
 246+ 9EA8 CD 59 9F         call Aplica_desplazamiento
 247+ 9EAB
 248+ 9EAB 3A 0A 8A         ld a,(Ctrl_2)
 249+ 9EAE CB 67            bit 4,a
 250+ 9EB0 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EB1
 252+ 9EB1 21 02 8A     3 ld hl,Repetimos_desplazamiento
 253+ 9EB4 35               dec (hl)
 254+ 9EB5 C0               ret nz
 255+ 9EB6
 256+ 9EB6              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EB6              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EB6              ; Analiza (Cola_de_desplazamiento).
 259+ 9EB6
 260+ 9EB6 3A 05 8A     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EB9 A7               and a
 262+ 9EBA CC AE 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EBD 28 30            jr z,Reinicia_el_movimiento
 264+ 9EBF
 265+ 9EBF FE FF            cp $ff
 266+ 9EC1 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EC3
 268+ 9EC3 FE FE            cp $fe
 269+ 9EC5 CC 32 9F         call z,Fijamos_bucle
 270+ 9EC8 28 25            jr z,Reinicia_el_movimiento
 271+ 9ECA
 272+ 9ECA FE FD            cp $fd
 273+ 9ECC 20 11            jr nz,1F
 274+ 9ECE
 275+ 9ECE              ; ---
 276+ 9ECE              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9ECE
 278+ 9ECE 3A 0A 8A         ld a,(Ctrl_2)
 279+ 9ED1 CB 5F            bit 3,a
 280+ 9ED3 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9ED5
 282+ 9ED5              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9ED5
 284+ 9ED5 21 0A 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9ED8 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EDA
 287+ 9EDA CD 43 9F         call Inicia_Repetimos_movimiento
 288+ 9EDD 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EDF              ; ---
 290+ 9EDF
 291+ 9EDF FE 01        1 cp 1
 292+ 9EE1 CA 1C 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9EE4
 294+ 9EE4 3D               dec a
 295+ 9EE5 32 05 8A         ld (Cola_de_desplazamiento),a
 296+ 9EE8
 297+ 9EE8 3A 03 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9EEB 32 02 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9EEE              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9EEE C9               ret
 301+ 9EEF
 302+ 9EEF              Reinicia_el_movimiento
 303+ 9EEF
 304+ 9EEF 3A 0A 8A         ld a,(Ctrl_2)
 305+ 9EF2 CB 5F            bit 3,a
 306+ 9EF4 28 1B            jr z,2F
 307+ 9EF6
 308+ 9EF6              ; (Cola_de_desplazamiento)="254".
 309+ 9EF6
 310+ 9EF6 21 04 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9EF9 35               dec (hl)
 312+ 9EFA 20 15            jr nz,2F
 313+ 9EFC
 314+ 9EFC              ; Fin de las repeticiones del último movimiento.
 315+ 9EFC
 316+ 9EFC 21 0A 8A         ld hl,Ctrl_2
 317+ 9EFF CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F01
 319+ 9F01 2A FC 89         ld hl,(Puntero_mov)
 320+ 9F04 23               inc hl
 321+ 9F05 23               inc hl
 322+ 9F06 23               inc hl
 323+ 9F07 22 FC 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F0A              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F0A 7E               ld a,(hl)
 326+ 9F0B 32 05 8A         ld (Cola_de_desplazamiento),a
 327+ 9F0E
 328+ 9F0E C3 B6 9E         jp Cola
 329+ 9F11
 330+ 9F11
 331+ 9F11 CD 4E 9F     2 call Inicia_Puntero_mov
 332+ 9F14
 333+ 9F14 21 0A 8A         ld hl,Ctrl_2
 334+ 9F17 CB 96            res 2,(hl)
 335+ 9F19
 336+ 9F19 C3 86 9E         jp Movimiento
 337+ 9F1C
 338+ 9F1C              Siguiente_desplazamiento
 339+ 9F1C
 340+ 9F1C              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F1C              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F1C
 343+ 9F1C 21 0A 8A         ld hl,Ctrl_2
 344+ 9F1F CB 96            res 2,(hl)
 345+ 9F21
 346+ 9F21 2A FC 89         ld hl,(Puntero_mov)
 347+ 9F24 23               inc hl
 348+ 9F25 23               inc hl
 349+ 9F26 22 FC 89         ld (Puntero_mov),hl
 350+ 9F29
 351+ 9F29 7E               ld a,(hl)
 352+ 9F2A A7               and a
 353+ 9F2B CC AE 9F         call z,Incrementa_Puntero_indice_mov
 354+ 9F2E CA EF 9E         jp z,Reinicia_el_movimiento
 355+ 9F31
 356+ 9F31 C9               ret
 357+ 9F32              ; Subrutinas -----------------------------------------
 358+ 9F32              ; ---------- --------- --------- ---------- ----------
 359+ 9F32              ;
 360+ 9F32              ;   24/07/23
 361+ 9F32              ;
 362+ 9F32              ;   Fijamos_bucle
 363+ 9F32              ;
 364+ 9F32              ;
 365+ 9F32
 366+ 9F32              Fijamos_bucle
 367+ 9F32
 368+ 9F32 3A 00 8A         ld a,(Incrementa_puntero)
 369+ 9F35 3C               inc a
 370+ 9F36 32 01 8A         ld (Incrementa_puntero_backup),a
 371+ 9F39
 372+ 9F39 CD AE 9F         call Incrementa_Puntero_indice_mov
 373+ 9F3C 2A FA 89         ld hl,(Puntero_indice_mov)
 374+ 9F3F 22 FE 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9F42 C9               ret
 376+ 9F43
 377+ 9F43              ; ---------- --------- --------- ---------- ----------
 378+ 9F43              ;
 379+ 9F43              ;   07/7/23
 380+ 9F43              ;
 381+ 9F43              ;   Inicia_Repetimos_movimiento
 382+ 9F43              ;
 383+ 9F43              ;
 384+ 9F43
 385+ 9F43              Inicia_Repetimos_movimiento
 386+ 9F43
 387+ 9F43              ; Iniciamos (Repetimos_movimiento).
 388+ 9F43
 389+ 9F43 DD 2A FC 89      ld ix,(Puntero_mov)
 390+ 9F47 DD 7E 02         ld a,(ix+2)
 391+ 9F4A 32 04 8A         ld (Repetimos_movimiento),a
 392+ 9F4D
 393+ 9F4D C9               ret
 394+ 9F4E
 395+ 9F4E              ; ---------- --------- --------- ---------- ----------
 396+ 9F4E              ;
 397+ 9F4E              ;   26/6/23
 398+ 9F4E              ;
 399+ 9F4E              ;   Inicia_Puntero_mov
 400+ 9F4E              ;
 401+ 9F4E              ;
 402+ 9F4E
 403+ 9F4E 2A FA 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F51 5E               ld e,(hl)
 405+ 9F52 23               inc hl
 406+ 9F53 56               ld d,(hl)
 407+ 9F54 EB               ex de,hl
 408+ 9F55 22 FC 89         ld (Puntero_mov),hl
 409+ 9F58 C9               ret
 410+ 9F59
 411+ 9F59              ; ---------- --------- --------- ---------- ----------
 412+ 9F59              ;
 413+ 9F59              ;   27/06/23
 414+ 9F59              ;
 415+ 9F59              ;   Aplica_movimiento.
 416+ 9F59
 417+ 9F59              Aplica_desplazamiento
 418+ 9F59
 419+ 9F59              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F59
 421+ 9F59 2A FC 89         ld hl, (Puntero_mov)
 422+ 9F5C
 423+ 9F5C 7E               ld a,(hl)
 424+ 9F5D E6 F0            and $f0
 425+ 9F5F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F60
 427+ 9F60 CB 7E            bit 7,(hl)
 428+ 9F62 28 03            jr z,1F
 429+ 9F64 CD 91 99         call Mov_up
 430+ 9F67 2A FC 89     1 ld hl, (Puntero_mov)
 431+ 9F6A CB 76            bit 6,(hl)
 432+ 9F6C 28 03            jr z,2F
 433+ 9F6E CD 60 99         call Mov_down
 434+ 9F71 2A FC 89     2 ld hl, (Puntero_mov)
 435+ 9F74 CB 6E            bit 5,(hl)
 436+ 9F76 28 03            jr z,3F
 437+ 9F78 CD F2 9A         call Mov_left
 438+ 9F7B 2A FC 89     3 ld hl, (Puntero_mov)
 439+ 9F7E CB 66            bit 4,(hl)
 440+ 9F80 C8               ret z
 441+ 9F81 CD D4 99         call Mov_right
 442+ 9F84 C9               ret
 443+ 9F85
 444+ 9F85              ; ---------- --------- --------- ---------- ----------
 445+ 9F85              ;
 446+ 9F85              ;   26/06/23
 447+ 9F85              ;
 448+ 9F85              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F85
 450+ 9F85              Ajusta_velocidad_desplazamiento
 451+ 9F85
 452+ 9F85              ; 1er byte de la cadena de movimiento.
 453+ 9F85              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F85
 455+ 9F85 CD A3 9F         call Extrae_nibble_alto
 456+ 9F88
 457+ 9F88 32 E0 89         ld (Vel_up),a
 458+ 9F8B 79               ld a,c
 459+ 9F8C E6 0F            and $0f
 460+ 9F8E 32 E1 89         ld (Vel_down),a
 461+ 9F91
 462+ 9F91              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F91              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F91
 465+ 9F91 23               inc hl
 466+ 9F92 CD A3 9F         call Extrae_nibble_alto
 467+ 9F95
 468+ 9F95 32 DE 89         ld (Vel_left),a
 469+ 9F98 79               ld a,c
 470+ 9F99 E6 0F            and $0f
 471+ 9F9B 32 DF 89         ld (Vel_right),a
 472+ 9F9E
 473+ 9F9E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F9E
 475+ 9F9E 23               inc hl
 476+ 9F9F 22 FC 89         ld (Puntero_mov),hl
 477+ 9FA2 C9               ret
 478+ 9FA3
 479+ 9FA3 06 04        Extrae_nibble_alto ld b,4
 480+ 9FA5 7E               ld a,(hl)
 481+ 9FA6 4F               ld c,a
 482+ 9FA7 E6 F0            and $f0
 483+ 9FA9 CB 3F        1 srl a
 484+ 9FAB 10 FC            djnz 1B
 485+ 9FAD C9               ret
 486+ 9FAE
 487+ 9FAE              ; ---------- --------- --------- ---------- ----------
 488+ 9FAE              ;
 489+ 9FAE              ;   5/7/23
 490+ 9FAE              ;
 491+ 9FAE              ;   Incrementa_Puntero_indice_mov
 492+ 9FAE
 493+ 9FAE              Incrementa_Puntero_indice_mov
 494+ 9FAE
 495+ 9FAE 21 00 8A         ld hl,Incrementa_puntero
 496+ 9FB1 34               inc (hl)
 497+ 9FB2
 498+ 9FB2 2A FA 89         ld hl,(Puntero_indice_mov)
 499+ 9FB5 01 02 00         ld bc,2
 500+ 9FB8 A7               and a
 501+ 9FB9 09               add hl,bc
 502+ 9FBA 22 FA 89         ld (Puntero_indice_mov),hl
 503+ 9FBD
 504+ 9FBD 7E               ld a,(hl)
 505+ 9FBE A7               and a
 506+ 9FBF
 507+ 9FBF              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FBF
 509+ 9FBF              ;    jr z,$
 510+ 9FBF
 511+ 9FBF              ;! Reinicia el Patrón de movimiento.
 512+ 9FBF
 513+ 9FBF CC C4 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FC2
 515+ 9FC2 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FC3
 517+ 9FC3 C9               ret
 518+ 9FC4
 519+ 9FC4
 520+ 9FC4              ; ---------- --------- --------- ---------- ----------
 521+ 9FC4              ;
 522+ 9FC4              ;   24/07/23
 523+ 9FC4              ;
 524+ 9FC4              ;   Inicializa_Puntero_indice_mov
 525+ 9FC4
 526+ 9FC4              Inicializa_Puntero_indice_mov
 527+ 9FC4
 528+ 9FC4              ; Existe etiqueta de bucle principal???
 529+ 9FC4
 530+ 9FC4 2A FE 89         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FC7 24               inc h
 532+ 9FC8 25               dec h
 533+ 9FC9 28 05            jr z,2F
 534+ 9FCB
 535+ 9FCB 22 FA 89         ld (Puntero_indice_mov),hl
 536+ 9FCE 18 14            jr 3F
 537+ 9FD0
 538+ 9FD0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FD0
 540+ 9FD0 3A 00 8A     2 ld a,(Incrementa_puntero)
 541+ 9FD3 47               ld b,a
 542+ 9FD4
 543+ 9FD4 2A FA 89         ld hl,(Puntero_indice_mov)
 544+ 9FD7 2B           1 dec hl
 545+ 9FD8 2B               dec hl
 546+ 9FD9 10 FC            djnz 1B
 547+ 9FDB 22 FA 89         ld (Puntero_indice_mov),hl
 548+ 9FDE
 549+ 9FDE AF               xor a
 550+ 9FDF 32 00 8A         ld (Incrementa_puntero),a
 551+ 9FE2 18 06            jr 4F
 552+ 9FE4
 553+ 9FE4 3A 01 8A     3 ld a,(Incrementa_puntero_backup)
 554+ 9FE7 32 00 8A         ld (Incrementa_puntero),a
 555+ 9FEA C9           4 ret
 556+ 9FEB
 557+ 9FEB
 558+ 9FEB
# file closed: Patrones_de_mov.asm
1317  9FEB              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9FEB              ; Relojes y temporizaciones.
   2+ 9FEB
   3+ 9FEB              ; ------------------------------------------------------
   4+ 9FEB              ;
   5+ 9FEB              ;	16/7/23
   6+ 9FEB              ;
   7+ 9FEB              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9FEB              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9FEB              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9FEB              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9FEB              ;
  12+ 9FEB              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9FEB              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9FEB
  15+ 9FEB              ; Disparo_entidad db 1
  16+ 9FEB              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9FEB              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9FEB
  19+ 9FEB              Habilita_disparos
  20+ 9FEB
  21+ 9FEB 7E           	ld a,(hl)
  22+ 9FEC A7           	and a
  23+ 9FED C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9FEE
  25+ 9FEE EB           	ex de,hl
  26+ 9FEF
  27+ 9FEF 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9FF0 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9FF1
  30+ 9FF1              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9FF1
  32+ 9FF1 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9FF2 7E           	ld a,(hl)
  34+ 9FF3 23           	inc hl
  35+ 9FF4 77           	ld (hl),a
  36+ 9FF5
  37+ 9FF5 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9FF6 3E 01        	ld a,1
  39+ 9FF8 77           	ld (hl),a
  40+ 9FF9 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1318  9FFA              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FFA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FFA              ;
   3+ 9FFA              ;	3/1/23
   4+ 9FFA              ;
   5+ 9FFA              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FFA
   7+ 9FFA              ;	ADC HL,SP	LD (addr),SP
   8+ 9FFA              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FFA              ;	ADD IX,SP	LD SP,nn
  10+ 9FFA              ; 	ADD IY,SP	LD SP,HL
  11+ 9FFA              ;				LD SP,IX
  12+ 9FFA              ;	DEC SP		LD SP,IY
  13+ 9FFA
  14+ 9FFA              ;	EX (SP),HL
  15+ 9FFA              ;	EX (SP),IX
  16+ 9FFA              ;	EX (SP),IY
  17+ 9FFA
  18+ 9FFA              ;	INC SP
  19+ 9FFA
  20+ 9FFA
  21+ 9FFA                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 1D 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 0C 8A         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 2F 8A         ld hl,(Stack_snapshot_disparos_3)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 2D 8A     2 ld hl,(Stack_snapshot_3)                        ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB
  49+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBD
  51+ 7FBD D1           1 pop de
  52+ 7FBE 73               ld (hl),e
  53+ 7FBF 23               inc hl
  54+ 7FC0 72               ld (hl),d
  55+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC2 10 F9            djnz 1B
  57+ 7FC4
  58+ 7FC4 CB 47            bit 0,a
  59+ 7FC6 28 05            jr z,5F
  60+ 7FC8
  61+ 7FC8 22 2F 8A         ld (Stack_snapshot_disparos_3),hl
  62+ 7FCB 18 03            jr 6F
  63+ 7FCD
  64+ 7FCD 22 2D 8A     5 ld (Stack_snapshot_3),hl
  65+ 7FD0 ED 7B 1D 8A  6 ld sp,(Stack)
  66+ 7FD4
  67+ 7FD4 C9               ret
  68+ 7FD5
  69+ 7FD5              ; ------------------------------------------------
  70+ 7FD5              ;
  71+ 7FD5              ;   31/07/23
  72+ 7FD5              ;
  73+ 7FD5              Gestiona_albumes_de_fotos
  74+ 7FD5
  75+ 7FD5              ; Desplazamos álbumes.
  76+ 7FD5
  77+ 7FD5              ; (Album_de_fotos_1) --- (Album_de_fotos).
  78+ 7FD5
  79+ 7FD5              ;   El álbum_1 contiene datos?
  80+ 7FD5
  81+ 7FD5 21 86 70         ld hl,Album_de_fotos_1+1
  82+ 7FD8 7E               ld a,(hl)
  83+ 7FD9 A7               and a
  84+ 7FDA 28 05            jr z,1F
  85+ 7FDC
  86+ 7FDC              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
  87+ 7FDC
  88+ 7FDC CD A6 80         call Album_1_a_Album_de_fotos
  89+ 7FDF 18 1A            jr 2F
  90+ 7FE1
  91+ 7FE1              ; El álbum_1 está vacío.
  92+ 7FE1              ; Album_de_fotos contiene datos?
  93+ 7FE1
  94+ 7FE1 21 01 70     1 ld hl,Album_de_fotos+1
  95+ 7FE4 7E               ld a,(hl)
  96+ 7FE5 A7               and a
  97+ 7FE6 28 13            jr z,2F
  98+ 7FE8
  99+ 7FE8              ; Limpiamos Album_de_fotos.
 100+ 7FE8
 101+ 7FE8 21 00 70         ld hl,Album_de_fotos
 102+ 7FEB 36 00            ld (hl),0
 103+ 7FED 11 01 70         ld de,Album_de_fotos+1
 104+ 7FF0 01 83 00         ld bc,$83
 105+ 7FF3 ED B0            ldir
 106+ 7FF5 21 00 70         ld hl,Album_de_fotos
 107+ 7FF8 22 21 8A         ld (Stack_snapshot),hl
 108+ 7FFB
 109+ 7FFB              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 110+ 7FFB
 111+ 7FFB              ;   El álbum_2 contiene datos?
 112+ 7FFB
 113+ 7FFB 21 0A 71     2 ld hl,Album_de_fotos_2+1
 114+ 7FFE 7E               ld a,(hl)
 115+ 7FFF A7               and a
 116+ 8000 28 05            jr z,3F
 117+ 8002
 118+ 8002              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 119+ 8002
 120+ 8002 CD 8B 80         call Album_2_a_Album_1
 121+ 8005 18 1A            jr 4F
 122+ 8007
 123+ 8007              ; El álbum_2 está vacío.
 124+ 8007              ; álbum_1 contiene datos?
 125+ 8007
 126+ 8007 21 86 70     3 ld hl,Album_de_fotos_1+1
 127+ 800A 7E               ld a,(hl)
 128+ 800B A7               and a
 129+ 800C 28 13            jr z,4F
 130+ 800E
 131+ 800E              ; Limpiamos Album_de_fotos_1.
 132+ 800E
 133+ 800E 21 85 70         ld hl,Album_de_fotos_1
 134+ 8011 36 00            ld (hl),0
 135+ 8013 11 86 70         ld de,Album_de_fotos_1+1
 136+ 8016 01 83 00         ld bc,$83
 137+ 8019 ED B0            ldir
 138+ 801B 21 85 70         ld hl,Album_de_fotos_1
 139+ 801E 22 25 8A         ld (Stack_snapshot_1),hl
 140+ 8021
 141+ 8021              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 142+ 8021
 143+ 8021              ;   El álbum_3 contiene datos?
 144+ 8021
 145+ 8021 21 8E 71     4 ld hl,Album_de_fotos_3+1
 146+ 8024 7E               ld a,(hl)
 147+ 8025 A7               and a
 148+ 8026 28 05            jr z,5F
 149+ 8028
 150+ 8028              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 151+ 8028
 152+ 8028 CD 70 80         call Album_3_a_Album_2
 153+ 802B 18 1A            jr 6F
 154+ 802D
 155+ 802D              ; El álbum_3 está vacío.
 156+ 802D              ; álbum_2 contiene datos?
 157+ 802D
 158+ 802D 21 0A 71     5 ld hl,Album_de_fotos_2+1
 159+ 8030 7E               ld a,(hl)
 160+ 8031 A7               and a
 161+ 8032 28 13            jr z,6F
 162+ 8034
 163+ 8034              ; Limpiamos Album_de_fotos_2.
 164+ 8034
 165+ 8034 21 09 71         ld hl,Album_de_fotos_2
 166+ 8037 36 00            ld (hl),0
 167+ 8039 11 0A 71         ld de,Album_de_fotos_2+1
 168+ 803C 01 83 00         ld bc,$83
 169+ 803F ED B0            ldir
 170+ 8041 21 09 71         ld hl,Album_de_fotos_2
 171+ 8044 22 29 8A         ld (Stack_snapshot_2),hl
 172+ 8047
 173+ 8047 C9           6 ret
 174+ 8048
 175+ 8048              ; ----------------------------------------------
 176+ 8048              ;
 177+ 8048              ;   31/7/23
 178+ 8048              ;
 179+ 8048              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 180+ 8048              ;
 181+ 8048              ;   Para pasar datos de un album a otro:
 182+ 8048              ;
 183+ 8048              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 184+ 8048              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 185+ 8048              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 186+ 8048
 187+ 8048 C5           Trasbase_de_datos push bc
 188+ 8049 A7               and a
 189+ 804A ED 42            sbc hl,bc
 190+ 804C E5               push hl
 191+ 804D C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 192+ 804E E1               pop hl
 193+ 804F ED B0            ldir
 194+ 8051 C9               ret
 195+ 8052
 196+ 8052              ; Paquetitos.
 197+ 8052
 198+ 8052 2A 2D 8A     Trasbase_3a2 ld hl,(Stack_snapshot_3)
 199+ 8055 01 8D 71         ld bc,Album_de_fotos_3
 200+ 8058 CD 48 80         call Trasbase_de_datos
 201+ 805B C9               ret
 202+ 805C
 203+ 805C 2A 29 8A     Trasbase_2a1 ld hl,(Stack_snapshot_2)
 204+ 805F 01 09 71         ld bc,Album_de_fotos_2
 205+ 8062 CD 48 80         call Trasbase_de_datos
 206+ 8065 C9               ret
 207+ 8066
 208+ 8066 2A 25 8A     Trasbase_1a0 ld hl,(Stack_snapshot_1)
 209+ 8069 01 85 70         ld bc,Album_de_fotos_1
 210+ 806C CD 48 80         call Trasbase_de_datos
 211+ 806F C9               ret
 212+ 8070
 213+ 8070              ; ----------------------------------------------
 214+ 8070
 215+ 8070              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 216+ 8070              ; _ limpiamos (Album_de_fotos_3).
 217+ 8070              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 218+ 8070
 219+ 8070              ;   Datos de álbum_3 a álbum_2.
 220+ 8070
 221+ 8070 11 09 71     Album_3_a_Album_2 ld de,Album_de_fotos_2
 222+ 8073 CD 52 80         call Trasbase_3a2
 223+ 8076
 224+ 8076              ;   Actualizamos (Stack_snapshot_2).
 225+ 8076
 226+ 8076 EB               ex de,hl
 227+ 8077 22 29 8A         ld (Stack_snapshot_2),hl
 228+ 807A
 229+ 807A              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 230+ 807A
 231+ 807A AF               xor a
 232+ 807B 32 8D 71         ld (Album_de_fotos_3),a
 233+ 807E 11 8E 71         ld de,Album_de_fotos_3+1
 234+ 8081 CD 52 80         call Trasbase_3a2
 235+ 8084
 236+ 8084 21 8D 71         ld hl,Album_de_fotos_3
 237+ 8087 22 2D 8A         ld (Stack_snapshot_3),hl
 238+ 808A C9               ret
 239+ 808B
 240+ 808B 11 85 70     Album_2_a_Album_1 ld de,Album_de_fotos_1
 241+ 808E CD 5C 80         call Trasbase_2a1
 242+ 8091
 243+ 8091              ;   Actualizamos (Stack_snapshot_1).
 244+ 8091
 245+ 8091 EB               ex de,hl
 246+ 8092 22 25 8A         ld (Stack_snapshot_1),hl
 247+ 8095
 248+ 8095              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 249+ 8095
 250+ 8095 AF               xor a
 251+ 8096 32 09 71         ld (Album_de_fotos_2),a
 252+ 8099 11 0A 71         ld de,Album_de_fotos_2+1
 253+ 809C CD 5C 80         call Trasbase_2a1
 254+ 809F
 255+ 809F 21 09 71         ld hl,Album_de_fotos_2
 256+ 80A2 22 29 8A         ld (Stack_snapshot_2),hl
 257+ 80A5 C9               ret
 258+ 80A6
 259+ 80A6 11 00 70     Album_1_a_Album_de_fotos ld de,Album_de_fotos
 260+ 80A9 CD 66 80         call Trasbase_1a0
 261+ 80AC
 262+ 80AC              ;   Actualizamos (Stack_snapshot).
 263+ 80AC
 264+ 80AC EB               ex de,hl
 265+ 80AD 22 21 8A         ld (Stack_snapshot),hl
 266+ 80B0
 267+ 80B0               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 268+ 80B0
 269+ 80B0 AF               xor a
 270+ 80B1 32 85 70         ld (Album_de_fotos_1),a
 271+ 80B4 11 86 70         ld de,Album_de_fotos_1+1
 272+ 80B7 CD 66 80         call Trasbase_1a0
 273+ 80BA
 274+ 80BA 21 85 70         ld hl,Album_de_fotos_1
 275+ 80BD 22 25 8A         ld (Stack_snapshot_1),hl
 276+ 80C0 C9               ret
 277+ 80C1
# file closed: Guarda_foto_registros.asm
1319  80C1
1320  80C1              	SAVESNA "Pruebas.sna", START
1321  80C1
1322  80C1
1323  80C1
1324  80C1
# file closed: Banco_de_pruebas.asm
