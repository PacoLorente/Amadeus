# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 62 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD EC A4     	call Pinta_disparos_Amadeus
  74  82F6 CD B7 A1     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8B 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 4D 92     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 89 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 89 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 8C 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 6B 92     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 24								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8918
  20+ 8918              ;	db 0, defw 0, db 0
  21+ 8918              ;	.....
  22+ 8918
  23+ 8918 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  24+ 891A 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  25+ 891C              ;	defw ...
  26+ 891C              ; 	defw ...
  27+ 891C 00 00        	defw 0
  28+ 891E
  29+ 891E 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  30+ 8920              ;	defw ...
  31+ 8920              ; 	defw ...
  32+ 8920 00 00        	defw 0
  33+ 8922
  34+ 8922              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  35+ 8922
  36+ 8922 00 00        Disparo_Amad defw 0									; Puntero objeto.
  37+ 8924 00 00        	defw 0											; Puntero de impresión.
  38+ 8926
  39+ 8926 5D 89        Indice_de_disparos_entidades defw Disparo_1
  40+ 8928 57 89        	defw Disparo_2
  41+ 892A 51 89        	defw Disparo_3
  42+ 892C 4B 89        	defw Disparo_4
  43+ 892E 45 89        	defw Disparo_5
  44+ 8930 3F 89        	defw Disparo_6
  45+ 8932 39 89        	defw Disparo_7
  46+ 8934
  47+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  48+ 8937 00 00        	defw 0									; Puntero de impresión.
  49+ 8939 00           Disparo_7 db 0	     						; Control.
  50+ 893A
  51+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  52+ 893D 00 00        	defw 0									; Puntero de impresión.
  53+ 893F 00           Disparo_6 db 0		    					; Control.
  54+ 8940
  55+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  56+ 8943 00 00        	defw 0									; Puntero de impresión.
  57+ 8945 00           Disparo_5 db 0			    				; Control.
  58+ 8946
  59+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  60+ 8949 00 00        	defw 0									; Puntero de impresión.
  61+ 894B 00           Disparo_4 db 0				     			; Control.
  62+ 894C
  63+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  64+ 894F 00 00        	defw 0									; Puntero de impresión.
  65+ 8951 00           Disparo_3 db 0					    		; Control.
  66+ 8952
  67+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  68+ 8955 00 00        	defw 0									; Puntero de impresión.
  69+ 8957 00           Disparo_2 db 0						    	; Control.
  70+ 8958
  71+ 8958 00 00 00     	db 0,0,0								; Puntero objeto.
  72+ 895B 00 00        	defw 0									; Puntero de impresión.
  73+ 895D 00           Disparo_1 db 0							    ; Control.
  74+ 895E
  75+ 895E              ; -------------------------------------------------------------------------------------
  76+ 895E              ;
  77+ 895E              ;	Índice de cajas_Masters.
  78+ 895E              ;
  79+ 895E              ;	11/11/24
  80+ 895E              ;
  81+ 895E              ;	12 bytes.
  82+ 895E
  83+ 895E              Indice_de_cajas_master
  84+ 895E
  85+ 895E 68 89        	defw Caja_master_1
  86+ 8960 74 89        	defw Caja_master_2
  87+ 8962 80 89        	defw Caja_master_3
  88+ 8964 8C 89        	defw Caja_master_4
  89+ 8966 98 89        	defw Caja_master_5
  90+ 8968
  91+ 8968 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  92+ 896B 00           	db 0												; (Contador_de_vueltas).
  93+ 896C 00           	db 0												; (Impacto).
  94+ 896D 00 00        	defw 0												; (Puntero_de_impresion).
  95+ 896F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
  96+ 8971 00 00        	defw 0 												; (Contador_de_mov_masticados).
  97+ 8973 00           	db 0												; (Velocidad).
  98+ 8974
  99+ 8974              ; ---------- ---------- ---------- ---------- ----------
 100+ 8974
 101+ 8974 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 102+ 8977 00           	db 0 												; (Contador_de_vueltas).
 103+ 8978 00           	db 0												; (Impacto).
 104+ 8979 00 00        	defw 0												; (Puntero_de_impresion).
 105+ 897B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 106+ 897D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 107+ 897F 00           	db 0												; (Velocidad).
 108+ 8980
 109+ 8980              ; ---------- ---------- ---------- ---------- ----------
 110+ 8980
 111+ 8980 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 112+ 8983 00           	db 0 												; (Contador_de_vueltas).
 113+ 8984 00           	db 0												; (Impacto).
 114+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 115+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 116+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 117+ 898B 00           	db 0												; (Velocidad).
 118+ 898C
 119+ 898C              ; ---------- ---------- ---------- ---------- ----------
 120+ 898C
 121+ 898C 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 122+ 898F 00           	db 0 												; (Contador_de_vueltas).
 123+ 8990 00           	db 0												; (Impacto).
 124+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 125+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 126+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 127+ 8997 00           	db 0												; (Velocidad).
 128+ 8998
 129+ 8998              ; ---------- ---------- ---------- ---------- ----------
 130+ 8998
 131+ 8998 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 132+ 899B 00           	db 0 												; (Contador_de_vueltas).
 133+ 899C 00           	db 0												; (Impacto).
 134+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 135+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 136+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 137+ 89A3 00           	db 0												; (Velocidad).
 138+ 89A4
 139+ 89A4              ; -------------------------------------------------------------------------------------
 140+ 89A4              ;
 141+ 89A4              ;	Índice de cajas de entidades.
 142+ 89A4              ;
 143+ 89A4              ;	18/1/24
 144+ 89A4              ;
 145+ 89A4
 146+ 89A4              Indice_de_cajas_de_entidades
 147+ 89A4
 148+ 89A4 C0 89        	defw Caja_1
 149+ 89A6 CC 89        	defw Caja_2
 150+ 89A8 D8 89        	defw Caja_3
 151+ 89AA E4 89        	defw Caja_4
 152+ 89AC F0 89        	defw Caja_5
 153+ 89AE 00 8A        	defw Caja_6
 154+ 89B0              ;	defw Caja_7
 155+ 89B0
 156+ 89B0 00 00        	defw 0
 157+ 89B2 00 00        	defw 0
 158+ 89B4
 159+ 89B4              ; -------------------------
 160+ 89B4
 161+ 89B4              ; Relleno para que no se corrompa el movimiento. ?????
 162+ 89B4
 163+ 89B4              ;	db 0
 164+ 89B4
 165+ 89B4              ; ---------- ---------- ---------- ---------- ----------
 166+ 89B4              ;
 167+ 89B4              ;	28/05/24
 168+ 89B4              ;
 169+ 89B4              ; 	Cada caja tiene 14 bytes !!!
 170+ 89B4              ;
 171+ 89B4              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 172+ 89B4
 173+ 89B4 00           Amadeus_BOX db 0										; (Tipo).
 174+ 89B5 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 175+ 89B7 00           	db 0												; (Contador_de_vueltas).
 176+ 89B8 00           Impacto_Amadeus	db 0									; (Impacto).
 177+ 89B9 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 178+ 89BB 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 179+ 89BD 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 180+ 89BF 00           	db 0												; (Velocidad).
 181+ 89C0
 182+ 89C0              ; ---------- ---------- ---------- ---------- ----------
 183+ 89C0              ;
 184+ 89C0              ;	22/01/24
 185+ 89C0              ;
 186+ 89C0              ; 	Cada caja tiene 12 bytes !!!
 187+ 89C0              ;
 188+ 89C0              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 189+ 89C0
 190+ 89C0
 191+ 89C0 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 192+ 89C3 00           	db 0												; (Contador_de_vueltas).
 193+ 89C4 00           	db 0												; (Impacto).
 194+ 89C5 00 00        	defw 0												; (Puntero_de_impresion).
 195+ 89C7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 196+ 89C9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 197+ 89CB 00           	db 0												; (Velocidad).
 198+ 89CC
 199+ 89CC              ; ---------- ---------- ---------- ---------- ----------
 200+ 89CC
 201+ 89CC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 202+ 89CF 00           	db 0 												; (Contador_de_vueltas).
 203+ 89D0 00           	db 0												; (Impacto).
 204+ 89D1 00 00        	defw 0												; (Puntero_de_impresion).
 205+ 89D3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 206+ 89D5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 207+ 89D7 00           	db 0												; (Velocidad).
 208+ 89D8
 209+ 89D8              ; ---------- ---------- ---------- ---------- ----------
 210+ 89D8
 211+ 89D8 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 212+ 89DB 00           	db 0 												; (Contador_de_vueltas).
 213+ 89DC 00           	db 0												; (Impacto).
 214+ 89DD 00 00        	defw 0												; (Puntero_de_impresion).
 215+ 89DF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 216+ 89E1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 217+ 89E3 00           	db 0												; (Velocidad).
 218+ 89E4
 219+ 89E4              ; ---------- ---------- ---------- ---------- ----------
 220+ 89E4
 221+ 89E4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 222+ 89E7 00           	db 0 												; (Contador_de_vueltas).
 223+ 89E8 00           	db 0												; (Impacto).
 224+ 89E9 00 00        	defw 0												; (Puntero_de_impresion).
 225+ 89EB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 226+ 89ED 00 00        	defw 0 												; (Contador_de_mov_masticados).
 227+ 89EF 00           	db 0												; (Velocidad).
 228+ 89F0
 229+ 89F0              ; ---------- ---------- ---------- ---------- ----------
 230+ 89F0
 231+ 89F0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 232+ 89F3 00           	db 0 												; (Contador_de_vueltas).
 233+ 89F4 00           	db 0												; (Impacto).
 234+ 89F5 00 00        	defw 0												; (Puntero_de_impresion).
 235+ 89F7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 236+ 89F9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 237+ 89FB 00           	db 0												; (Velocidad).
 238+ 89FC
 239+ 89FC              	org $8a00
 240+ 8A00
 241+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 242+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 243+ 8A04 00           	db 0												; (Impacto).
 244+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 245+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 246+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 247+ 8A0B 00           	db 0												; (Velocidad).
 248+ 8A0C
 249+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 250+ 8A0C
 251+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 252+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 253+ 8A0C              ;	db 0												; (Impacto).
 254+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 255+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 256+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 257+ 8A0C              ;	db 0												; (Velocidad).
 258+ 8A0C
 259+ 8A0C              ; -------------------------------------------------------------------------------------
 260+ 8A0C              ;
 261+ 8A0C              ;	06/12/24
 262+ 8A0C              ;
 263+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 264+ 8A0C              ;
 265+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 266+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 267+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 268+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 269+ 8A0C
 270+ 8A0C              Indice_de_definiciones_de_entidades
 271+ 8A0C
 272+ 8A0C 10 8A        	defw Entidad_1
 273+ 8A0E 1D 8A        	defw Entidad_2
 274+ 8A10
 275+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 276+ 8A10
 277+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 278+ 8A10
 279+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 280+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 281+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 282+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 283+ 8A18
 284+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 285+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 286+ 8A18
 287+ 8A18 14 40        Pos_inicio_entidad1	defw $4014	                        ; (Posicion_inicio).
 288+ 8A1A 00           	db 0												; (Cuad_objeto).
 289+ 8A1B
 290+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 291+ 8A1D
 292+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 293+ 8A1D
 294+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 295+ 8A20 01           	db 1												; (Contador_de_vueltas).
 296+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 297+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 298+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 299+ 8A27 01           	db 1												; (Cuad_objeto).
 300+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 301+ 8A2A
 302+ 8A2A              ; -------------------------------------------------------------------------------------
 303+ 8A2A              ;
 304+ 8A2A              ;	28/05/24
 305+ 8A2A              ;
 306+ 8A2A              ;	Definición de Amadeus.
 307+ 8A2A              ;
 308+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 309+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 310+ 8A2A
 311+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 312+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 313+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 314+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 315+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 316+ 8A34 03           	db 3												; (Cuad_objeto).
 317+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  96+ 8A63
  97+ 8A63              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  98+ 8A63
  99+ 8A63              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
 100+ 8A63              ;                               Izquierda_y_subiendo+8 (11)
 101+ 8A63              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
 102+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 103+ 8A63              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
 104+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 105+ 8A63              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
 106+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 107+ 8A63              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
 108+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 109+ 8A63              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
 110+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 111+ 8A63              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
 112+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 113+ 8A63              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
 114+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 115+ 8A63
 116+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 117+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 118+ 8A6B
 119+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 120+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 120+ 8A73 08 00
 121+ 8A75
 122+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 123+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 123+ 8A7D 0F FE
 124+ 8A7F
 125+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 126+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 127+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 128+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 129+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 130+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 131+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 132+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 133+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 134+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 135+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 136+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 137+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 138+ 8AB3
 139+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 140+ 8AB7 11 11 91 FD      db $11,$11,$91,253,15,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 140+ 8ABB 0F 00
 141+ 8ABD
 142+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 143+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 143+ 8AC5 02 00
 144+ 8AC7
 145+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 146+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 146+ 8ACF 04 00
 147+ 8AD1
 148+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 149+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 149+ 8AD9 08 00
 150+ 8ADB
 151+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 152+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 152+ 8AE3 02 00
 153+ 8AE5
 154+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 155+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 155+ 8AED 06 00
 156+ 8AEF
 157+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 158+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 158+ 8AF7 06 00
 159+ 8AF9
 160+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 161+ 8AF9
 162+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 163+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 164+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 165+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 166+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 167+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 168+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 169+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 170+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 171+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 172+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 173+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 174+ 8B29
 175+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 176+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 177+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 178+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 179+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 180+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 181+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 182+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 183+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 184+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 185+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 186+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 187+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 188+ 8B5D
 189+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 190+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,15,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 190+ 8B65 0F 00
 191+ 8B67
 192+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 193+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 193+ 8B6F 02 00
 194+ 8B71
 195+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 196+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 196+ 8B79 04 00
 197+ 8B7B
 198+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 199+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 199+ 8B83 08 00
 200+ 8B85
 201+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 202+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 202+ 8B8D 02 00
 203+ 8B8F
 204+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 205+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 205+ 8B97 06 00
 206+ 8B99
 207+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 208+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 208+ 8BA1 06 00
 209+ 8BA3
 210+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 211+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 212+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 213+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 214+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 215+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 216+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 217+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 218+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 219+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 220+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 221+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 222+ 8BD3
 223+ 8BD3
 224+ 8BD3
 225+ 8BD3
 226+ 8BD3
 227+ 8BD3
 228+ 8BD3
 229+ 8BD3
 230+ 8BD3
 231+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 DD 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BDC 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BDD
  18+ 8BDD 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BDE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE2 01 02
  20+ 8BE4 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BE8 01 02
  21+ 8BEA
# file closed: Niveles.asm
 150  8BEA
 151  8BEA              ; --------------------------------------------------------------------------------
 152  8BEA              ;
 153  8BEA              ; 12/05/24
 154  8BEA              ;
 155  8BEA              ; Parámetros DRAW.
 156  8BEA              ;
 157  8BEA
 158  8BEA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEA
 160  8BEA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEB              ;															- Patrón de movimiento.
 162  8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BEC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BED
 165  8BED 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BEE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BEE
 168  8BEE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BEE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BEE              ; Ejemplos.
 171  8BEE
 172  8BEE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BEE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BEE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BEE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BEE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BEE
 178  8BEE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BEF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BEF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BEF
 182  8BEF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF1
 185  8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF3
 187  8BF3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF3
 189  8BF3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF5              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF5
 192  8BF5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF5
 194  8BF5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF6
 200  8BF6 00           Ctrl_2 db 0
 201  8BF7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF7              ;
 209  8BF7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF7              ;														BIT 4, ???
 215  8BF7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF7
 217  8BF7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF8              ;
 223  8BF8              ; 														DESCRIPCIÖN:
 224  8BF8              ;
 225  8BF8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BF8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BF8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BF8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BF8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BF8              ;
 239  8BF8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BF8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BF8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BF8
 243  8BF8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BF8
 245  8BF8 00           Filas db 0												; Filas. [DRAW]
 246  8BF9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BFC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BFE
 250  8BFE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BFE
 252  8BFE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BFF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BFF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BFF
 256  8BFF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BFF
 258  8BFF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BFF              ;
 260  8BFF              ;	COLORES: 0 ..... NEGRO
 261  8BFF              ;    		 1 ..... AZUL
 262  8BFF              ; 			 2 ..... ROJO
 263  8BFF              ;			 3 ..... MAGENTA
 264  8BFF              ; 			 4 ..... VERDE
 265  8BFF              ; 			 5 ..... CIAN
 266  8BFF              ;			 6 ..... AMARILLO
 267  8BFF              ; 			 7 ..... BLANCO
 268  8BFF
 269  8BFF 00 00        Indice_Sprite_der defw 0
 270  8C01 00 00        Indice_Sprite_izq defw 0
 271  8C03 00 00        Puntero_DESPLZ_der defw 0
 272  8C05 00 00        Puntero_DESPLZ_izq defw 0
 273  8C07
 274  8C07 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C09 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0A 00           Columnas db 0
 277  8C0B
 278  8C0B 00           Columnitas db 0
 279  8C0C
 280  8C0C 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 281  8C0E              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 282  8C0E 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 283  8C0F
 284  8C0F              ; variables de control general.
 285  8C0F
 286  8C0F 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 287  8C10
 288  8C10              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 289  8C10
 290  8C10              Perfiles_de_velocidad
 291  8C10
 292  8C10 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 293  8C11 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 294  8C12 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 295  8C13 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 296  8C14
 297  8C14              ; Contadores de 16 bits.
 298  8C14
 299  8C14 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 300  8C16 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 301  8C18 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 302  8C1A 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 303  8C1C
 304  8C1C              ; Movimiento. ------------------------------------------------------------------------------------------------------
 305  8C1C
 306  8C1C 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 307  8C1E 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 308  8C20 00 00        Puntero_indice_mov_bucle defw 0							;
 309  8C22              ;
 310  8C22              ;
 311  8C22 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 312  8C23              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 313  8C23              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 314  8C23 00           Incrementa_puntero_backup db 0
 315  8C24 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 316  8C25              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 317  8C25 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 318  8C26 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 319  8C27 00           Cola_de_desplazamiento db 0								; Este byte indica:
 320  8C28              ;
 321  8C28              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 322  8C28              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 323  8C28              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 324  8C28              ;
 325  8C28              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 326  8C28              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 327  8C28              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 328  8C28              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 329  8C28              ;
 330  8C28              ;														;	"$ff" ..... Bucle infinito de repetición.
 331  8C28              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 332  8C28              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 333  8C28
 334  8C28 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 335  8C29
 336  8C29              ;														DESCRIPCIÓN:
 337  8C29              ;
 338  8C29              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 339  8C29              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 340  8C29              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 341  8C29              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 342  8C29              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 343  8C29              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 344  8C29
 345  8C29              ;														BIT 3, Recarga de nueva oleada.
 346  8C29              ;														BIT 4, Recarga de nueva oleada.
 347  8C29              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 348  8C29              ;														BIT 6, **** Frame completo.
 349  8C29              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 350  8C29
 351  8C29 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 352  8C2B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 353  8C2B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 354  8C2B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 355  8C2B
 356  8C2B              ; Gestión de ENTIDADES y CAJAS.
 357  8C2B
 358  8C2B 00 00        Puntero_store_caja defw 0
 359  8C2D 00 00        Puntero_restore_caja defw 0
 360  8C2F 00 00        Indice_restore_caja defw 0
 361  8C31 00 00        Puntero_indice_master defw 0
 362  8C33
 363  8C33 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 364  8C34 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 365  8C35 00           Entidades_en_curso db 0									; Entidades en pantalla.
 366  8C36
 367  8C36 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 368  8C38 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 369  8C3A              ;														; _ puntero (Indice_entidades).
 370  8C3A
 371  8C3A              ;---------------------------------------------------------------------------------------------------------------
 372  8C3A              ;
 373  8C3A              ;	13/10/24
 374  8C3A              ;
 375  8C3A              ;	Álbumes.
 376  8C3A
 377  8C3A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 378  8C3C              ;														; _variable para almacenar lo posición del puntero_
 379  8C3C              ; 														; _de pila, SP.
 380  8C3C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 381  8C3E              ;														; La utiliza la rutina [Extrae_foto_registros].
 382  8C3E
 383  8C3E              ; Impresión. ----------------------------------------------------------------------------------------------------
 384  8C3E
 385  8C3E 00 00        Album_de_pintado defw 0
 386  8C40 00 00        Album_de_borrado defw 0
 387  8C42 00 00        Album_de_pintado_Amadeus defw 0
 388  8C44 00 00        Album_de_borrado_Amadeus defw 0
 389  8C46
 390  8C46 00 00        Album_de_pintado_disparos_Amadeus defw 0
 391  8C48 00 00        Album_de_borrado_disparos_Amadeus defw 0
 392  8C4A
 393  8C4A 00 00        Album_de_pintado_disparos_Entidades defw 0
 394  8C4C 00 00        Album_de_borrado_disparos_Entidades defw 0
 395  8C4E
 396  8C4E
 397  8C4E 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 398  8C50
 399  8C50 00           Num_de_bytes_album_de_disparos db 0
 400  8C51 00           Num_de_bytes_album_de_disparos_borrado db 0
 401  8C52
 402  8C52 07           Numero_de_disparos_de_entidades db 7
 403  8C53
 404  8C53 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 405  8C54 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 406  8C55
 407  8C55 00 00        Techo_Scanlines_album defw 0
 408  8C57 00 00        Techo_Scanlines_album_2 defw 0
 409  8C59 00           Switch db 0
 410  8C5A 00 00        Techo defw 0
 411  8C5C 00 00        Scanlines_album_SP defw 0
 412  8C5E 00 89        India_SP defw Tabla_de_pintado
 413  8C60 03 89        India_2_SP defw Tabla_de_pintado+3
 414  8C62
 415  8C62 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 416  8C63              ;
 417  8C63              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 418  8C63              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 419  8C63              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 420  8C63              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 421  8C63              ;																Habilita el borrado/pintado de sprites.
 422  8C63              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 423  8C63              ;																_ a la baja.
 424  8C63              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 425  8C63              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 426  8C63              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 427  8C63              ; 																_ el último frame de la explosión de nuestra nave.
 428  8C63              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 429  8C63              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 430  8C63
 431  8C63 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 432  8C64              ;
 433  8C64              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 434  8C64
 435  8C64 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 436  8C65              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 437  8C65              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 438  8C65
 439  8C65              ; Gestión de Disparos.
 440  8C65
 441  8C65 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 442  8C67 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 443  8C69 00           Impacto2 db 0											; Byte de control de impactos.
 444  8C6A
 445  8C6A              ;
 446  8C6A              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 447  8C6A              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 448  8C6A              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 449  8C6A              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 450  8C6A
 451  8C6A
 452  8C6A
 453  8C6A
 454  8C6A
 455  8C6A
 456  8C6A
 457  8C6A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 458  8C6C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 459  8C6C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 460  8C6C
 461  8C6C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 462  8C6E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 463  8C6E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C71              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 465  8C71 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C74              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 467  8C74
 468  8C74              ;---------------------------------------------------------------------------------------------------------------
 469  8C74
 470  8C74              ; Relojes y temporizaciones.
 471  8C74
 472  8C74 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 473  8C75 05           Clock_explosion_Amadeus db 5
 474  8C76 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 475  8C77
 476  8C77 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 477  8C79 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 478  8C7B 00           Numero_rnd_disparos db 0
 479  8C7C
 480  8C7C 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 481  8C7E A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 482  8C7F A0           CLOCK_disparos_de_entidades db $a0
 483  8C80
 484  8C80              ;---------------------------------------------------------------------------------------------------------------
 485  8C80
 486  8C80              ; Gestión de NIVELES.
 487  8C80
 488  8C80 00           Nivel db 0												; Nivel actual del juego.
 489  8C81 00 00        Puntero_indice_NIVELES defw 0
 490  8C83 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 491  8C85              ; 														; _ que definen el NIVEL.
 492  8C85
 493  8C85              ; ---------------------------------------------------------------------------------------------------------------
 494  8C85
 495  8C85              ; Temporizaciones Shield.
 496  8C85
 497  8C85 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 498  8C89 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 499  8C8B 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 500  8C8C 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 501  8C8D 00           Shield_3 db 0
 502  8C8E
 503  8C8E 07           Lives db 7
 504  8C8F
 505  8C8F              ; 	INICIO  *************************************************************************************************************************************************************************
 506  8C8F              ;
 507  8C8F              ;	13/11/24
 508  8C8F
 509  8C8F              START
 510  8C8F
 511  8C8F 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 512  8C92 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 513  8C94 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 514  8C96 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 515  8C98 F3           	DI
 516  8C99
 517  8C99              ; Limpiamos pantalla.
 518  8C99
 519  8C99              ;	ld a,%00000111
 520  8C99              ;	call Cls
 521  8C99 CD 42 92     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 522  8C9C
 523  8C9C              INICIALIZACION
 524  8C9C
 525  8C9C 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 526  8C9E CD 0E 94     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 527  8CA1 CD 23 8F     	call Extrae_numero_aleatorio_y_avanza
 528  8CA4 6F           	ld l,a
 529  8CA5 26 00        	ld h,0
 530  8CA7 22 7C 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 531  8CAA
 532  8CAA              ;	Inicia los álbumes de líneas.
 533  8CAA
 534  8CAA CD 94 91     	call Inicia_albumes_de_lineas
 535  8CAD CD A4 91     	call Inicia_albumes_de_lineas_Amadeus
 536  8CB0 CD B1 91     	call Inicia_albumes_de_disparos
 537  8CB3
 538  8CB3              ;	Inicia 1er Nivel.
 539  8CB3
 540  8CB3 CD 70 94     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 541  8CB6 CD 3E 94     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 542  8CB9              ;														   _reponiendo entidades eliminadas.
 543  8CB9 CD A4 94     	call Prepara_Cajas_de_Entidades
 544  8CBC
 545  8CBC CD F4 94     	call Inicia_Amadeus
 546  8CBF
 547  8CBF              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 548  8CBF              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 549  8CBF              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 550  8CBF 11 B4 89     	ld de,Amadeus_BOX
 551  8CC2 CD E3 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CC5 CD 37 95     	call Limpiamos_bandeja_DRAW
 553  8CC8
 554  8CC8              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CC8
 556  8CC8 06 3C        	ld b,60
 557  8CCA CD 09 A0     2 call Amadeus_a_izquierda
 558  8CCD 10 FB        	djnz 2B
 559  8CCF
 560  8CCF CD 72 91     	call Genera_datos_de_impresion_Amadeus
 561  8CD2
 562  8CD2              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CD2
 564  8CD2 CD CD 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CD5
 566  8CD5 CD 4D 92     	call Inicia_Shield
 567  8CD8
 568  8CD8 2A 5C 8C     6 ld hl,(Scanlines_album_SP)
 569  8CDB 22 55 8C     	ld (Techo_Scanlines_album),hl
 570  8CDE
 571  8CDE 2A 40 8C     	ld hl,(Album_de_borrado)
 572  8CE1 22 5C 8C     	ld (Scanlines_album_SP),hl
 573  8CE4
 574  8CE4 21 00 89     	ld hl,Tabla_de_pintado
 575  8CE7 22 5E 8C     	ld (India_SP),hl
 576  8CEA
 577  8CEA 21 62 8C     	ld hl,Ctrl_3
 578  8CED CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CEF CB D6        	set 2,(hl)
 580  8CF1 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CF3
 582  8CF3 FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CF4
 584  8CF4 76           	halt
 585  8CF5
 586  8CF5              ; ------------------------------------
 587  8CF5
 588  8CF5              Main
 589  8CF5
 590  8CF5              ;
 591  8CF5              ; 07/11/24.
 592  8CF5
 593  8CF5              ; Gestión de disparos.
 594  8CF5
 595  8CF5 CD F8 8E     25 call Change_Disparos								; Intercambiamos los álbumes de disparos.
 596  8CF8 CD FD A1     	call Motor_de_disparos_entidades
 597  8CFB CD 98 A4     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 598  8CFE
 599  8CFE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 600  8CFE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 601  8CFE              ; Este hecho lo indica el bit2 de (Impacto2).
 602  8CFE
 603  8CFE CD 39 A6     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 604  8D01
 605  8D01              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 606  8D01
 607  8D01 21 7F 8C     	ld hl,CLOCK_disparos_de_entidades
 608  8D04 35           	dec (hl)
 609  8D05 CC 39 8E     	call z,Autoriza_disparo_de_entidades
 610  8D08
 611  8D08 2A 7C 8C     	ld hl,(Clock_next_entity)
 612  8D0B ED 4B 78 5C  	ld bc,(FRAMES)
 613  8D0F A7           	and a
 614  8D10 ED 42        	sbc hl,bc
 615  8D12 20 21        	jr nz,1F
 616  8D14
 617  8D14              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 618  8D14
 619  8D14 CD 23 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 620  8D17 CD 3A 8F     	call Define_Clock_next_entity
 621  8D1A
 622  8D1A              ; GESTIÓN DE ENTIDADES.
 623  8D1A
 624  8D1A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 625  8D1A              ; _ (Clock_next_entity) para la siguiente entidad.
 626  8D1A
 627  8D1A              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 628  8D1A              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 629  8D1A              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 630  8D1A
 631  8D1A 21 34 8C     	ld hl,Numero_parcial_de_entidades
 632  8D1D 46           	ld b,(hl)
 633  8D1E
 634  8D1E 04           	inc b
 635  8D1F 05           	dec b
 636  8D20
 637  8D20 F3           	di
 638  8D21 28 FE        	jr z,$													;! Nivel superado !!!!!
 639  8D23 FB           	ei
 640  8D24
 641  8D24 3A 35 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 642  8D27 B8           	cp b
 643  8D28 28 0B        	jr z,1F
 644  8D2A 30 09        	jr nc,1F
 645  8D2C
 646  8D2C              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 647  8D2C
 648  8D2C 3C           	inc a
 649  8D2D 32 35 8C     	ld (Entidades_en_curso),a
 650  8D30
 651  8D30 21 63 8C     	ld hl,Ctrl_4
 652  8D33 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 653  8D35
 654  8D35              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 655  8D35
 656  8D35              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 657  8D35              ;	call Define_Clock_next_entity
 658  8D35
 659  8D35 3A 35 8C     1 ld a,(Entidades_en_curso)
 660  8D38 A7           	and a
 661  8D39 CA DF 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 662  8D3C 47           	ld b,a													; No hay entidades que gestionar.
 663  8D3D
 664  8D3D              ; ( Código que ejecutamos con cada entidad: ).
 665  8D3D
 666  8D3D              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 667  8D3D              ;
 668  8D3D              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 669  8D3D
 670  8D3D 21 00 89     	ld hl,Tabla_de_pintado
 671  8D40 22 5E 8C     	ld (India_SP),hl
 672  8D43
 673  8D43 21 62 8C     	ld hl,Ctrl_3
 674  8D46 CB D6        	set 2,(hl)
 675  8D48 CD CD 8E     	call Change
 676  8D4B
 677  8D4B C5           2 push bc 												; Nº de entidades en curso.
 678  8D4C
 679  8D4C DD 2A 2B 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 680  8D50 CD 1E 92     	call Salta_caja_de_entidades_vacia
 681  8D53
 682  8D53              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 683  8D53
 684  8D53 DD 7E 00     	ld a,(ix+0)
 685  8D56 CB 7F        	bit 7,a
 686  8D58 28 11        	jr z,5F
 687  8D5A
 688  8D5A              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 689  8D5A
 690  8D5A 21 63 8C     	ld hl,Ctrl_4
 691  8D5D CB 46        	bit 0,(hl)
 692  8D5F CC 2D 92     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 693  8D62 28 E8        	jr z,6B
 694  8D64
 695  8D64 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 696  8D66 CB BF        	res 7,a
 697  8D68 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 698  8D6B
 699  8D6B              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 700  8D6B              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 701  8D6B
 702  8D6B 3A 69 8C     5 ld a,(Impacto2)
 703  8D6E CB 5F        	bit 3,a
 704  8D70 C4 2F A4     	call nz,Compara_con_coordenadas_de_disparo
 705  8D73
 706  8D73              ; Existe colisión entre esta entidad y Amadeus ???
 707  8D73
 708  8D73 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 709  8D76 CB 4F        	bit 1,a
 710  8D78 C4 69 93     	call nz,Genera_explosion
 711  8D7B 20 45        	jr nz,Gestiona_siguiente_entidad
 712  8D7D
 713  8D7D DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 714  8D80 A7           	and a
 715  8D81 28 0C        	jr z,3F
 716  8D83
 717  8D83              ; IMPACTO en entidad por colisión con Amadeus.
 718  8D83
 719  8D83              ; 5/7/24
 720  8D83              ; Nota importante:
 721  8D83              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 722  8D83              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 723  8D83              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 724  8D83
 725  8D83 3A B8 89     	ld a,(Impacto_Amadeus)
 726  8D86 A7           	and a
 727  8D87 C4 69 93     	call nz,Genera_explosion
 728  8D8A 20 36        	jr nz,Gestiona_siguiente_entidad
 729  8D8C
 730  8D8C              ; Falsa colisión !!!
 731  8D8C
 732  8D8C 32 EE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 733  8D8F
 734  8D8F              ; -------------------------------------------
 735  8D8F
 736  8D8F CD EC 90     3 call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 737  8D92
 738  8D92 D5           	push de
 739  8D93 CD 7E 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 740  8D96 CD A5 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 741  8D99 D1           	pop de
 742  8D9A
 743  8D9A DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 744  8D9C DD 2A EF 8B  	ld ix,(Puntero_de_impresion)
 745  8DA0 CD 54 96     	call Genera_datos_de_impresion
 746  8DA3 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 747  8DA5
 748  8DA5 CD 5A 95     	call Decrementa_Contador_de_mov_masticados
 749  8DA8
 750  8DA8              ; -------------------------------------------
 751  8DA8
 752  8DA8              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 753  8DA8
 754  8DA8 2A EF 8B     	ld hl,(Puntero_de_impresion)
 755  8DAB CD 28 96     	call Genera_coordenadas
 756  8DAE
 757  8DAE ED 4B EB 8B  	ld bc,(Coordenada_X)
 758  8DB2
 759  8DB2 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 760  8DB5 DD 70 02     	ld (ix+2),b
 761  8DB8
 762  8DB8              ; TODO: Generamos disparo ???
 763  8DB8
 764  8DB8 3A 54 8C     	ld a,(Permiso_de_disparo_Entidades)
 765  8DBB A7           	and a
 766  8DBC C4 4E 8E     	call nz,Entidad_genera_disparo_si_procede
 767  8DBF
 768  8DBF CD B3 A5     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 769  8DC2
 770  8DC2              Gestiona_siguiente_entidad
 771  8DC2
 772  8DC2 CD 2D 92     	call Incrementa_punteros_de_cajas
 773  8DC5
 774  8DC5 C1           	pop bc
 775  8DC6 10 83        	djnz 2B
 776  8DC8
 777  8DC8              ; Hemos gestionado todas las entidades.
 778  8DC8              ; ----- ----- -----
 779  8DC8
 780  8DC8 CD 97 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 781  8DCB CD AE 8F     	call Ordena_tabla_de_impresion
 782  8DCE CD CD 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 783  8DD1
 784  8DD1 CD 4F 8F     	call Borra_diferencia
 785  8DD4
 786  8DD4 3A 62 8C     	ld a,(Ctrl_3)
 787  8DD7 CB 5F        	bit 3,a
 788  8DD9 20 04        	jr nz,Gestion_de_Amadeus
 789  8DDB
 790  8DDB EB           	ex de,hl
 791  8DDC 71           	ld (hl),c
 792  8DDD 2C           	inc l
 793  8DDE 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 794  8DDF
 795  8DDF              ;! GESTIONA AMADEUS !!!!!!!!!!
 796  8DDF
 797  8DDF              Gestion_de_Amadeus
 798  8DDF
 799  8DDF 21 62 8C     	ld hl,Ctrl_3
 800  8DE2 CB 76        	bit 6,(hl)
 801  8DE4 28 13        	jr z,Amadeus_vivo
 802  8DE6
 803  8DE6              ; Amadeus ha sido destruido.
 804  8DE6              ; Decrementa (Temp_new_live).
 805  8DE6
 806  8DE6 21 76 8C     	ld hl,Temp_new_live
 807  8DE9 35           	dec (hl)
 808  8DEA 20 26        	jr nz,End_frame
 809  8DEC
 810  8DEC              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 811  8DEC
 812  8DEC 21 8E 8C     	ld hl,Lives
 813  8DEF 35           	dec (hl)
 814  8DF0
 815  8DF0              ;! Fin del juego
 816  8DF0
 817  8DF0 F3           	di
 818  8DF1 28 FE        	jr z,$														;! GAME OVER !!!!!
 819  8DF3 FB           	ei
 820  8DF4
 821  8DF4              ; Nueva nave.
 822  8DF4
 823  8DF4 CD 6B 8E     	call Reinicia_Amadeus
 824  8DF7 18 19        	jr End_frame
 825  8DF9
 826  8DF9              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 827  8DF9
 828  8DF9              Amadeus_vivo
 829  8DF9
 830  8DF9 3A B8 89     	ld a,(Impacto_Amadeus)
 831  8DFC A7           	and a
 832  8DFD C4 D9 93     	call nz, Genera_explosion_Amadeus
 833  8E00 20 10        	jr nz, End_frame
 834  8E02
 835  8E02 CD 46 93     	call Teclado
 836  8E05 21 62 8C     	ld hl,Ctrl_3
 837  8E08
 838  8E08 CB 6E        	bit 5,(hl)
 839  8E0A 28 06        	jr z,End_frame
 840  8E0C
 841  8E0C              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 842  8E0C
 843  8E0C CD E8 8E     	call Change_Amadeus
 844  8E0F CD 72 91     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 845  8E12
 846  8E12              End_frame
 847  8E12
 848  8E12              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 849  8E12              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 850  8E12
 851  8E12 CD 5A A3     	call Genera_datos_de_impresion_disparos_Entidades
 852  8E15 CD 1E A5     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 853  8E18 CD 74 A4     	call Calcula_bytes_pintado_disparos
 854  8E1B CD 81 A4     	call Limpia_album_de_pintado_disparos_entidades
 855  8E1E
 856  8E1E              ; ------------ ------------- --------------
 857  8E1E
 858  8E1E 2A 40 8C     	ld hl,(Album_de_borrado)
 859  8E21 22 5C 8C     	ld (Scanlines_album_SP),hl
 860  8E24
 861  8E24 21 62 8C     	ld hl,Ctrl_3
 862  8E27 CB C6        	set 0,(hl) 											; Indica Frame completo.
 863  8E29 CB 9E        	res 3,(hl)
 864  8E2B CB A6        	res 4,(hl)
 865  8E2D
 866  8E2D 21 63 8C     	ld hl,Ctrl_4
 867  8E30 CB 86        	res 0,(hl)
 868  8E32
 869  8E32 AF           	xor a
 870  8E33 D3 FE        	out ($fe),a
 871  8E35
 872  8E35 76           	halt
 873  8E36
 874  8E36 C3 F5 8C     	jp Main
 875  8E39
 876  8E39              ;------------------------------------------
 877  8E39              ;
 878  8E39              ;	07/11/24
 879  8E39
 880  8E39              Autoriza_disparo_de_entidades
 881  8E39
 882  8E39 3E 01        	ld a,1
 883  8E3B 32 54 8C     	ld (Permiso_de_disparo_Entidades),a
 884  8E3E
 885  8E3E 3A 7E 8C     	ld a,(Repone_CLOCK_disparos)
 886  8E41 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 887  8E43 38 02        	jr c,1F
 888  8E45
 889  8E45              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 890  8E45              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 891  8E45              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 892  8E45
 893  8E45 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 894  8E47
 895  8E47 32 7E 8C     1 ld (Repone_CLOCK_disparos),a
 896  8E4A 32 7F 8C     	ld (CLOCK_disparos_de_entidades),a
 897  8E4D
 898  8E4D C9           	ret
 899  8E4E
 900  8E4E              ;------------------------------------------
 901  8E4E              ;
 902  8E4E              ;	14/09/24
 903  8E4E              ;
 904  8E4E              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 905  8E4E
 906  8E4E              Entidad_genera_disparo_si_procede
 907  8E4E
 908  8E4E 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 909  8E51 CB 06        	rlc (hl)
 910  8E53
 911  8E53 DC AA A3     	call c,Genera_disparo_de_entidad_maldosa
 912  8E56
 913  8E56 C9           	ret
 914  8E57
 915  8E57              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 916  8E57              ;
 917  8E57              ;	30/09/24
 918  8E57
 919  8E57              Actuaiza_sp_de_disparos_de_entidades
 920  8E57
 921  8E57 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 922  8E5A 23           	inc hl
 923  8E5B 22 79 8C     	ld (Puntero_num_aleatorios_disparos),hl
 924  8E5E
 925  8E5E 11 FD 88     	ld de,Numeros_aleatorios+7
 926  8E61 7B           	ld a,e
 927  8E62 95           	sub l
 928  8E63 C0           	ret nz
 929  8E64
 930  8E64 21 F6 88     1 ld hl,Numeros_aleatorios
 931  8E67 22 79 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 932  8E6A C9           	ret
 933  8E6B
 934  8E6B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 935  8E6B              ;
 936  8E6B              ;	24/07/24
 937  8E6B
 938  8E6B              Reinicia_Amadeus
 939  8E6B
 940  8E6B              ;	Reinicia posición y estado.
 941  8E6B
 942  8E6B 21 CF 50     	ld hl,$50cf
 943  8E6E 22 B9 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 944  8E71 21 CC DC     	ld hl,$dccc
 945  8E74 22 BB 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 946  8E77 21 3D 00     	ld hl,$003d
 947  8E7A 22 BD 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 948  8E7D
 949  8E7D              ;	limpiamos el álbum de borrado.
 950  8E7D
 951  8E7D 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
 952  8E80
 953  8E80 AF           	xor a
 954  8E81 77           	ld (hl),a
 955  8E82
 956  8E82 E5           	push hl
 957  8E83 D1           	pop de
 958  8E84 13           	inc de
 959  8E85
 960  8E85 01 23 00     	ld bc,35
 961  8E88 ED B0        	ldir
 962  8E8A
 963  8E8A CD 72 91     	call Genera_datos_de_impresion_Amadeus
 964  8E8D
 965  8E8D              ;	Reinicia temporizaciones.
 966  8E8D
 967  8E8D CD 4D 92     	call Inicia_Shield
 968  8E90
 969  8E90 3E 5A        	ld a,90
 970  8E92 32 8B 8C     	ld (Shield),a
 971  8E95
 972  8E95 3E 64        	ld a,100
 973  8E97 32 76 8C     	ld (Temp_new_live),a
 974  8E9A
 975  8E9A              ; 	Restauramos el FLAG: Amadeus vivo.
 976  8E9A
 977  8E9A 21 62 8C     	ld hl,Ctrl_3
 978  8E9D CB B6        	res 6,(hl)
 979  8E9F
 980  8E9F              ;	Fuerza la impresión de la nave en el siguiente frame.
 981  8E9F
 982  8E9F 21 62 8C      	ld hl,Ctrl_3
 983  8EA2 CB EE        	set 5,(hl)
 984  8EA4
 985  8EA4 C9           	ret
 986  8EA5
 987  8EA5              ; --------------------------------------------------------------------------------------------------------------
 988  8EA5              ;
 989  8EA5              ;	23/11/24
 990  8EA5
 991  8EA5              Ajusta_velocidad_entidad
 992  8EA5
 993  8EA5 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 994  8EA8 A7           	and a
 995  8EA9 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 996  8EAA              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 997  8EAA              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 998  8EAA
 999  8EAA
1000  8EAA              ; Incrementa (Contador_de_vueltas)x2.
1001  8EAA              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
1002  8EAA
1003  8EAA              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
1004  8EAA              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
1005  8EAA              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
1006  8EAA              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1007  8EAA              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1008  8EAA
1009  8EAA
1010  8EAA CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1011  8EAC DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1012  8EAF E6 10        	and $10
1013  8EB1 C8           	ret z
1014  8EB2
1015  8EB2              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1016  8EB2
1017  8EB2 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1018  8EB5 CB 2F        	sra a
1019  8EB7 CB 2F        	sra a
1020  8EB9 DD 77 0B     	ld (ix+11),a
1021  8EBC
1022  8EBC DD 6E 07     	ld l,(ix+7)
1023  8EBF DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1024  8EC2
1025  8EC2              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1026  8EC2 23           	inc hl
1027  8EC3 23           	inc hl
1028  8EC4 23           	inc hl
1029  8EC5 23           	inc hl
1030  8EC6              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1031  8EC6
1032  8EC6 DD 75 07     	ld (ix+7),l
1033  8EC9 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1034  8ECC
1035  8ECC C9           	ret
1036  8ECD
1037  8ECD              ; --------------------------------------------------------------------------------------------------------------
1038  8ECD              ;
1039  8ECD              ;	25/08/24
1040  8ECD
1041  8ECD              Change
1042  8ECD
1043  8ECD 3A 59 8C     	ld a,(Switch)
1044  8ED0 EE 01        	xor 1
1045  8ED2 32 59 8C     	ld (Switch),a
1046  8ED5 2A 3E 8C     	ld hl,(Album_de_pintado)
1047  8ED8 ED 5B 40 8C  	ld de,(Album_de_borrado)
1048  8EDC EB           	ex de,hl
1049  8EDD 22 3E 8C     	ld (Album_de_pintado),hl
1050  8EE0 22 5C 8C     	ld (Scanlines_album_SP),hl
1051  8EE3 ED 53 40 8C  	ld (Album_de_borrado),de
1052  8EE7 C9           	ret
1053  8EE8
1054  8EE8              Change_Amadeus
1055  8EE8
1056  8EE8 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1057  8EEB ED 5B 44 8C  	ld de,(Album_de_borrado_Amadeus)
1058  8EEF EB           	ex de,hl
1059  8EF0 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1060  8EF3 ED 53 44 8C  	ld (Album_de_borrado_Amadeus),de
1061  8EF7 C9           	ret
1062  8EF8
1063  8EF8              Change_Disparos
1064  8EF8
1065  8EF8              ; Álbumes de Amadeus.
1066  8EF8
1067  8EF8 2A 46 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1068  8EFB ED 5B 48 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1069  8EFF EB           	ex de,hl
1070  8F00 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1071  8F03 ED 53 48 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1072  8F07 CD 69 A4     	call Limpia_album_de_pintado_disparos_Amadeus
1073  8F0A
1074  8F0A              ; Álbumes de entidades.
1075  8F0A
1076  8F0A 2A 4A 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1077  8F0D ED 5B 4C 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1078  8F11 EB           	ex de,hl
1079  8F12 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1080  8F15 ED 53 4C 8C  	ld (Album_de_borrado_disparos_Entidades),de
1081  8F19 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1082  8F1C
1083  8F1C 3A 50 8C     	ld a,(Num_de_bytes_album_de_disparos)
1084  8F1F 32 51 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1085  8F22
1086  8F22 C9           	ret
1087  8F23
1088  8F23              ; ------------------------------------
1089  8F23              ;
1090  8F23              ; 1/05/24
1091  8F23
1092  8F23              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1093  8F23              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1094  8F23
1095  8F23              ;	DESTRUYE: HL,DE,A
1096  8F23              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1097  8F23
1098  8F23              ;	Variables implicadas: (RND_SP).
1099  8F23
1100  8F23              Extrae_numero_aleatorio_y_avanza
1101  8F23
1102  8F23 21 FD 88     	ld hl,Numeros_aleatorios+7
1103  8F26 EB           	ex de,hl
1104  8F27 2A 77 8C     	ld hl,(RND_SP)
1105  8F2A
1106  8F2A 7B           	ld a,e
1107  8F2B 95           	sub l
1108  8F2C 20 06        	jr nz,1F
1109  8F2E
1110  8F2E              ; Sitúa HL al principio de la tabla de nº aleatorios.
1111  8F2E
1112  8F2E 21 F6 88     	ld hl,Numeros_aleatorios
1113  8F31 22 77 8C     	ld (RND_SP),HL
1114  8F34
1115  8F34              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1116  8F34
1117  8F34 7E           1 ld a,(hl)
1118  8F35 23           	inc hl
1119  8F36 22 77 8C     	ld (RND_SP),hl
1120  8F39 C9           	ret
1121  8F3A
1122  8F3A              ; ------------------------------------
1123  8F3A              ;
1124  8F3A              ; 1/05/24
1125  8F3A
1126  8F3A              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1127  8F3A              ; (1 a 4 segundos).
1128  8F3A              ; Actualizamos (Clock_next_entity) con A.
1129  8F3A
1130  8F3A              ;	DESTRUYE: A y B.
1131  8F3A              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1132  8F3A              ;			 Actualiza (Clock_next_entity) con A.
1133  8F3A
1134  8F3A              ;	Variables implicadas: (Clock_next_entity).
1135  8F3A
1136  8F3A              ; Notas:
1137  8F3A
1138  8F3A              ; 	$32 1 seg.
1139  8F3A              ; 	$64 2 seg.
1140  8F3A              ; 	$96 3 seg.
1141  8F3A              ; 	$c8 4 seg.
1142  8F3A              ; 	$fa 5 seg.
1143  8F3A
1144  8F3A              ; $ffff 1310,7 seg, 22 minutos.
1145  8F3A
1146  8F3A              ;	$0100  5 seg. aproximadamente.
1147  8F3A              ;	$0200 10 seg. aproximadamente.
1148  8F3A              ;	$0300 15 seg. aproximadamente.
1149  8F3A              ;	$0400 20 seg. aproximadamente.
1150  8F3A              ;	$0500 25 seg. aproximadamente.
1151  8F3A              ;	$0600 30 seg. aproximadamente.
1152  8F3A
1153  8F3A              Define_Clock_next_entity
1154  8F3A
1155  8F3A FE 34        	cp $34
1156  8F3C 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1157  8F3E
1158  8F3E              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1159  8F3E
1160  8F3E 4F           3 ld c,a
1161  8F3F 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1162  8F41 2A 78 5C     	ld hl,(FRAMES)
1163  8F44 A7           	and a
1164  8F45 ED 4A        	adc hl,bc
1165  8F47 22 7C 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1166  8F4A C9           	ret
1167  8F4B
1168  8F4B 3E 34        1 ld a,$34
1169  8F4D 18 EF        	jr 3B
1170  8F4F
1171  8F4F              ; ------------------------------------
1172  8F4F              ;
1173  8F4F              ; 18/03/24
1174  8F4F
1175  8F4F              Borra_diferencia
1176  8F4F
1177  8F4F ED 4B 5C 8C  	ld bc,(Scanlines_album_SP)
1178  8F53
1179  8F53 3A 59 8C     	ld a,(Switch)
1180  8F56 A7           	and a
1181  8F57 28 08        	jr z,2F
1182  8F59
1183  8F59 2A 57 8C     	ld hl,(Techo_Scanlines_album_2)
1184  8F5C 11 57 8C     	ld de,Techo_Scanlines_album_2
1185  8F5F 18 06        	jr 3F
1186  8F61
1187  8F61 2A 55 8C     2 ld hl,(Techo_Scanlines_album)
1188  8F64 11 55 8C     	ld de,Techo_Scanlines_album
1189  8F67
1190  8F67              ; Diferencia.
1191  8F67
1192  8F67 ED 42        3 sbc hl,bc
1193  8F69
1194  8F69 C8           	ret z
1195  8F6A D8           	ret c
1196  8F6B
1197  8F6B              ; Nuevo techo, (más bajo que el anterior).
1198  8F6B              ; Fijamos nuevo techo y borramos bytes sobrantes.
1199  8F6B
1200  8F6B EB           	ex de,hl
1201  8F6C
1202  8F6C 71           	ld (hl),c
1203  8F6D 2C           	inc l
1204  8F6E 70           	ld (hl),b
1205  8F6F
1206  8F6F AF           	xor a
1207  8F70 43           	ld b,e
1208  8F71
1209  8F71 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1210  8F74
1211  8F74 77           1 ld (hl),a
1212  8F75 23           	inc hl
1213  8F76 10 FC        	djnz 1B
1214  8F78
1215  8F78              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1216  8F78
1217  8F78 21 62 8C     	ld hl,Ctrl_3
1218  8F7B CB DE        	set 3,(hl)
1219  8F7D
1220  8F7D C9           	ret
1221  8F7E
1222  8F7E              ; --------------------------------------------------------------------------------------------------------------
1223  8F7E              ;
1224  8F7E              ;	23/11/24
1225  8F7E              ;
1226  8F7E              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1227  8F7E
1228  8F7E              Entidad_a_Tabla_de_pintado
1229  8F7E
1230  8F7E              ; Almacena la Coordenada Y de la entidad en curso.
1231  8F7E
1232  8F7E              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1233  8F7E
1234  8F7E DD 7E 02     	ld a,(ix+2)
1235  8F81 2A 5E 8C     	ld hl,(India_SP)
1236  8F84 77           	ld (hl),a
1237  8F85 2C           	inc l
1238  8F86
1239  8F86              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1240  8F86
1241  8F86 ED 5B 5C 8C  	ld de,(Scanlines_album_SP)
1242  8F8A
1243  8F8A 73           	ld (hl),e
1244  8F8B 2C           	inc l
1245  8F8C 72           	ld (hl),d
1246  8F8D 2C           	inc l
1247  8F8E
1248  8F8E              ; El 4º .db de la tabla será (Columnas).
1249  8F8E
1250  8F8E 3A 0A 8C     	ld a,(Columnas)
1251  8F91 77           	ld (hl),a
1252  8F92 2C           	inc l
1253  8F93 22 5E 8C     	ld (India_SP),hl
1254  8F96
1255  8F96 C9           	ret
1256  8F97
1257  8F97              ; --------------------------------------------------------------------------------------------------------------
1258  8F97              ;
1259  8F97              ;	27/03/24
1260  8F97              ;
1261  8F97
1262  8F97              Inicializa_India_y_limpia_Tabla_de_impresion
1263  8F97
1264  8F97 2A 5E 8C     	ld hl,(India_SP)
1265  8F9A 01 17 89     	ld bc,Indice_de_almacenes_de_mov_masticados-1							; Bytes de (Tabla_de_pintado)-1.
1266  8F9D
1267  8F9D 79           	ld a,c
1268  8F9E 95           	sub l
1269  8F9F 28 06        	jr z,2F
1270  8FA1 47           	ld b,a																	; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1271  8FA2              ;																			; _ y pasamos a inicializar (India_SP).
1272  8FA2 AF           	xor a
1273  8FA3
1274  8FA3 77           1 ld (hl),a
1275  8FA4 2C           	inc l
1276  8FA5 10 FC        	djnz 1B																	; Limpia Tabla.
1277  8FA7
1278  8FA7 21 00 89     2 ld hl,Tabla_de_pintado													; Inicializa (India_SP).
1279  8FAA 22 5E 8C     	ld (India_SP),hl
1280  8FAD
1281  8FAD C9           	ret
1282  8FAE
1283  8FAE              ; --------------------------------------------------------------------------------------------------------------
1284  8FAE              ;
1285  8FAE              ;	31/3/24
1286  8FAE
1287  8FAE              Ordena_tabla_de_impresion
1288  8FAE
1289  8FAE              ; 5794 T/states.
1290  8FAE              ; 6278 T/states.
1291  8FAE              ; 5310 T/states.
1292  8FAE
1293  8FAE              ; Inicializamos punteros (India_SP) e (India_2_SP).
1294  8FAE              ; Inicializamos contador de comparaciones, [C].
1295  8FAE              ; Cargamos los registros A y B para efectuar comparación.
1296  8FAE
1297  8FAE FD 2E 00     	ld iyl,0
1298  8FB1
1299  8FB1 3A 35 8C     	ld a,(Entidades_en_curso)
1300  8FB4 FE 04        	cp 4 	;	4
1301  8FB6 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1302  8FB7
1303  8FB7 3D           	dec a
1304  8FB8 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1305  8FB9 51           	ld d,c 										; Copia de respaldo.
1306  8FBA
1307  8FBA 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1308  8FBB
1309  8FBB 21 04 89     	ld hl,Tabla_de_pintado+4
1310  8FBE 46           	ld b,(hl)
1311  8FBF 22 60 8C     	ld (India_2_SP),hl
1312  8FC2
1313  8FC2 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1314  8FC3 DC EB 8F     	call c, Avanza_India_2_SP
1315  8FC6 CC EB 8F     	call z, Avanza_India_2_SP
1316  8FC9
1317  8FC9 FD 2D        	dec iyl
1318  8FCB 28 18        	jr z,2F
1319  8FCD
1320  8FCD
1321  8FCD              ; --------------------------------------------------------------------------------------------------------------
1322  8FCD              ;
1323  8FCD              ;	7/4/24
1324  8FCD
1325  8FCD              Trueque
1326  8FCD
1327  8FCD              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1328  8FCD              ;  			A contiene en nº de fila de (India_SP).
1329  8FCD              ;			HL contiene (India_2_SP).
1330  8FCD
1331  8FCD D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1332  8FCE E5           	push hl										; Preservo (India_2_SP).
1333  8FCF
1334  8FCF ED 5B 5E 8C  	ld de,(India_SP)
1335  8FD3 EB           	ex de,hl
1336  8FD4 70           	ld (hl),b
1337  8FD5 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1338  8FD6
1339  8FD6 CD 1A 90     	call Intercambia_1_byte
1340  8FD9 CD 1A 90     	call Intercambia_1_byte
1341  8FDC
1342  8FDC
1343  8FDC              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1344  8FDC              ; Recuperamos (India_2_SP) en HL.
1345  8FDC
1346  8FDC 2A 5E 8C     	ld hl,(India_SP)
1347  8FDF 7E           	ld a,(hl)
1348  8FE0
1349  8FE0 E1           	pop hl
1350  8FE1 D1           	pop de
1351  8FE2
1352  8FE2              ; --------------------------------------------------------------------------------------------------------------
1353  8FE2
1354  8FE2 CD EB 8F     	call Avanza_India_2_SP
1355  8FE5
1356  8FE5 14           2 inc d
1357  8FE6 15           	dec d
1358  8FE7 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1359  8FE8 18 D8        	jr 1B
1360  8FEA
1361  8FEA C9           	ret
1362  8FEB
1363  8FEB              ; ----- ----- ----- ----- -----
1364  8FEB
1365  8FEB              Avanza_India_2_SP
1366  8FEB
1367  8FEB 0D           	dec c
1368  8FEC 28 0B        	jr z,Avanza_punteros_indios
1369  8FEE
1370  8FEE FD 2C        	inc iyl
1371  8FF0
1372  8FF0 2C           	inc l
1373  8FF1 2C           	inc l
1374  8FF2 2C           	inc l
1375  8FF3 2C           	inc l
1376  8FF4
1377  8FF4 46           	ld b,(hl)
1378  8FF5 22 60 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1379  8FF8
1380  8FF8 C9           	ret
1381  8FF9
1382  8FF9              ; ----- ----- ----- ----- -----
1383  8FF9
1384  8FF9              Avanza_punteros_indios
1385  8FF9
1386  8FF9 15           	dec d
1387  8FFA 28 17        	jr z,Prepara_salida
1388  8FFC
1389  8FFC 4A           	ld c,d
1390  8FFD
1391  8FFD 2A 5E 8C     	ld hl,(India_SP)
1392  9000
1393  9000 2C           	inc l
1394  9001 2C           	inc l
1395  9002 2C           	inc l
1396  9003 2C           	inc l
1397  9004
1398  9004 7E           	ld a,(hl)
1399  9005 22 5E 8C     	ld (India_SP),hl
1400  9008
1401  9008 2C           	inc l
1402  9009 2C           	inc l
1403  900A 2C           	inc l
1404  900B 2C           	inc l
1405  900C
1406  900C 46           	ld b,(hl)
1407  900D 22 60 8C     	ld (India_2_SP),hl
1408  9010
1409  9010 FD 2C        	inc iyl
1410  9012
1411  9012 C9           	ret
1412  9013
1413  9013              Prepara_salida
1414  9013
1415  9013 21 00 89     	ld hl,Tabla_de_pintado
1416  9016 22 5E 8C     	ld (India_SP),hl
1417  9019 C9           	ret
1418  901A
1419  901A
1420  901A 2C           Intercambia_1_byte inc l
1421  901B 1C           	inc e
1422  901C 46           	ld b,(hl)
1423  901D 1A           	ld a,(de)
1424  901E EB           	ex de,hl
1425  901F 70           	ld (hl),b
1426  9020 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1427  9021 C9           	ret
1428  9022
1429  9022              ; -----------------------------------------------------------------------------------
1430  9022              ;
1431  9022              ;	20/01/24
1432  9022              ;
1433  9022              ;
1434  9022
1435  9022              Construye_movimientos_masticados_entidad
1436  9022
1437  9022 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1438  9025 E5           	push hl
1439  9026 CD DF 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1440  9029              ;															; _ el (Contador_de_mov_masticados).
1441  9029 CD E9 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1442  902C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1443  902C CD AA 9C     	call Recompone_posicion_inicio
1444  902F
1445  902F CD DA 99     1 call Draw	;  $902f Para breakpoint.
1446  9032
1447  9032              ;	IX contiene (Puntero_de_impresion)
1448  9032              ;	IY contiene (Puntero_objeto)
1449  9032
1450  9032 CD 80 90     	call Calcula_Columnitas
1451  9035 CD A5 90     	call Codifica_Puntero_de_impresion
1452  9038
1453  9038              ; debug !!!!!!!!!!!!!!!!!!!
1454  9038
1455  9038 2A FA 8B     	ld hl,(Posicion_actual)
1456  903B 7D           	ld a,l
1457  903C E6 1F        	and $1f
1458  903E FE 01        	cp 1
1459  9040 20 07        	jr nz,2F
1460  9042
1461  9042 3A FE 8B     	ld a,(CTRL_DESPLZ)
1462  9045 FE FE        	cp $fe
1463  9047 28 FE        	jr z,$
1464  9049
1465  9049
1466  9049
1467  9049
1468  9049              ;	Puntero_de_impresion $8bef ..... $4580 ..... $4581 --- ( $4580 Antes de DRAW.)
1469  9049              ;	Columns $8bf9 	  		   ..... 3     ..... 3	   --- ( 3       "       "   )
1470  9049              ;	Posicion_actual $8bfa	   ..... $44c1 ..... $44c2 --- ( $44c2   "       "	 )
1471  9049              ;	CTRL_DESPLZ $8bfe		   ..... $fe   ..... $f8   --- ( $f8     "       "   )
1472  9049              ;	Puntero_objeto $8bfc	   ..... $8691 ..... $8570 --- ( $8570   "       "   )
1473  9049              ;	Puntero_DESPLZ_der $8c03   ..... $853e ..... $8532 --- ( $8532   "       "   )
1474  9049              ;	Puntero_DESPLZ_izq $8c05   ..... $8390 ..... $839c --- ( $839c   "       "   )
1475  9049              ;	Cuad_objeto $8c09		   ..... 1	   ..... 1	   --- ( 1       "       "   )
1476  9049              ;	Columnas $8c0a			   ..... 2     ..... 2     --- ( 2       "       "   )
1477  9049              ;	Columnitas $8c0b		   ..... 2     ..... 3     --- ( 2       "       "   )
1478  9049              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df88 ..... $df8c
1479  9049
1480  9049 CD 65 90     2 call Guarda_movimiento_masticado
1481  904C
1482  904C CD 3C A0     	call Movimiento
1483  904F
1484  904F 3A 62 8C     	ld a,(Ctrl_3)																					; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1485  9052 CB 4F        	bit 1,a 																						; _ que corresponde a esta entidad.
1486  9054 28 D9        	jr z,1B
1487  9056
1488  9056              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1489  9056              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1490  9056
1491  9056 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1492  9057 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1493  905A
1494  905A              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1495  905A
1496  905A CD A0 A1     	call Situa_en_contador_general_de_mov_masticados
1497  905D
1498  905D              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1499  905D              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1500  905D
1501  905D ED 4B F3 8B  	ld bc,(Contador_de_mov_masticados)
1502  9061
1503  9061 71           	ld (hl),c
1504  9062 23           	inc hl
1505  9063 70           	ld (hl),b
1506  9064
1507  9064 C9           	ret
1508  9065
1509  9065              ; -----------------------------------------------------------------------------------
1510  9065              ;
1511  9065              ;	28/12/23
1512  9065              ;
1513  9065              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1514  9065              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1515  9065
1516  9065              Guarda_movimiento_masticado
1517  9065
1518  9065 ED 73 3A 8C  	ld (Stack),sp
1519  9069 ED 7B F1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1520  906D
1521  906D DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1522  906F FD E5            push iy 												; Pushea Puntero_objeto.
1523  9071
1524  9071 ED 7B 3A 8C      ld sp,(Stack)
1525  9075
1526  9075 2A F3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1527  9078 23           	inc hl
1528  9079 22 F3 8B     	ld (Contador_de_mov_masticados),hl
1529  907C
1530  907C CD DF 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1531  907F              ;															; _ el (Contador_de_mov_masticados).
1532  907F C9               ret
1533  9080
1534  9080              ; --------------------------------------------------------------------------------------------------------------
1535  9080              ;
1536  9080              ;	27/01/2025
1537  9080              ;
1538  9080              ;	INPUTS: IX contiene (Puntero_de_impresion)
1539  9080              ;			IY contiene (Puntero_objeto)
1540  9080
1541  9080              Calcula_Columnitas
1542  9080
1543  9080 3E 03        	ld a,3
1544  9082 32 0B 8C     	ld (Columnitas),a
1545  9085
1546  9085 2A FA 8B     	ld hl,(Posicion_actual)
1547  9088 7D           	ld a,l
1548  9089 E6 1F        	and $1f
1549  908B A7           	and a
1550  908C 28 11        	jr z,Una_columnita
1551  908E 3D           	dec a
1552  908F 28 0A        	jr z,Dos_columnitas
1553  9091 3C           	inc a
1554  9092
1555  9092 FE 1D        	cp $1d
1556  9094 D8           	ret c
1557  9095 C8           	ret z
1558  9096
1559  9096 3C           	inc a
1560  9097 E6 1F        	and $1f
1561  9099 28 04        	jr z,Una_columnita
1562  909B
1563  909B 3E 02        Dos_columnitas ld a,2
1564  909D 18 02        	jr 1F
1565  909F 3E 01        Una_columnita ld a,1
1566  90A1 32 0B 8C     1 ld (Columnitas),a
1567  90A4
1568  90A4 C9           	ret
1569  90A5
1570  90A5              ; --------------------------------------------------------------------------------------------------------------
1571  90A5              ;
1572  90A5              ;	26/01/25
1573  90A5              ;
1574  90A5              ;	INPUTS: IX contiene (Puntero_de_impresion)
1575  90A5              ;			IY contiene (Puntero_objeto)
1576  90A5
1577  90A5              Codifica_Puntero_de_impresion
1578  90A5
1579  90A5              ; 	En 1er lugar verificamos si estamos en zona de video, RET si no es así.
1580  90A5
1581  90A5 DD 7C        	ld a,ixh
1582  90A7 CB 77        	bit 6,a
1583  90A9 C8           	ret z
1584  90AA
1585  90AA              ;	Correcciones:
1586  90AA
1587  90AA              ; 	Posicion_actual $8bfa
1588  90AA              ;	CTRL_DESPLZ $8bfe
1589  90AA              ;	Puntero_DESPLZ_der $8c03
1590  90AA              ; 	Puntero_DESPLZ_izq $8c05
1591  90AA              ;	Puntero_de_almacen_de_mov_masticados $8bf1
1592  90AA              ;	Cuad_objeto $8c09
1593  90AA              ;	Columnitas $8c0b
1594  90AA              ;	Columns $8bf9
1595  90AA
1596  90AA              ;	Codificamos (Puntero_de_impresion) en función del nº de (Columnitas) a imprimir.
1597  90AA
1598  90AA 3A 0B 8C     	ld a,(Columnitas)
1599  90AD 3D           	dec a
1600  90AE 28 14        	jr z,Codificamos_una_Columnita
1601  90B0
1602  90B0 3D           	dec a
1603  90B1 28 01        	jr z,Codificamos_dos_Columnitas
1604  90B3
1605  90B3 C9           	ret
1606  90B4
1607  90B4              Codificamos_dos_Columnitas
1608  90B4
1609  90B4 DD 7C        	ld a,ixh
1610  90B6 CB FF        	set 7,a
1611  90B8 DD 67        	ld ixh,a
1612  90BA
1613  90BA              ;	Si nos encontramos en el lado derecho de la pantalla no modificamos (Puntero_objeto).
1614  90BA
1615  90BA 3A 09 8C     1 ld a,(Cuad_objeto)
1616  90BD E6 01        	and 1
1617  90BF C8           	ret z
1618  90C0
1619  90C0 CD CC 90     	call Ajusta_Puntero_objeto
1620  90C3
1621  90C3 C9           	ret
1622  90C4
1623  90C4              Codificamos_una_Columnita
1624  90C4
1625  90C4 DD 7C        	ld a,ixh
1626  90C6 CB EF        	set 5,a
1627  90C8 DD 67        	ld ixh,a
1628  90CA
1629  90CA 18 EE        	jr 1B
1630  90CC
1631  90CC              ; ----- ----- ----- ----- -----
1632  90CC
1633  90CC              Ajusta_Puntero_objeto
1634  90CC
1635  90CC 3A 0B 8C     	ld a,(Columnitas)
1636  90CF 47           	ld b,a
1637  90D0
1638  90D0 3A F9 8B     	ld a,(Columns)
1639  90D3 90           	sub b
1640  90D4 C8           	ret z
1641  90D5
1642  90D5 47           	ld b,a
1643  90D6
1644  90D6 FD 2C        1 inc iyl
1645  90D8 10 FC        	djnz 1B
1646  90DA
1647  90DA FD 22 FC 8B  	ld (Puntero_objeto),iy
1648  90DE
1649  90DE C9           	ret
1650  90DF
1651  90DF              ; --------------------------------------------------------------------------------------------------------------
1652  90DF              ;
1653  90DF              ;	12/1/24
1654  90DF              ;
1655  90DF              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1656  90DF
1657  90DF              Actualiza_Puntero_de_almacen_de_mov_masticados
1658  90DF
1659  90DF 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1660  90E2 01 04 00     	ld bc,4
1661  90E5 A7           	and a
1662  90E6 ED 4A        	adc hl,bc
1663  90E8 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1664  90EB C9           	ret
1665  90EC
1666  90EC              ; ------------------------------------------
1667  90EC              ;
1668  90EC              ;	23/11/24
1669  90EC              ;
1670  90EC              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1671  90EC
1672  90EC
1673  90EC              Obtenemos_puntero_de_impresion
1674  90EC
1675  90EC DD 6E 07     	ld l,(ix+7)
1676  90EF DD 66 08     	ld h,(ix+8)
1677  90F2
1678  90F2              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1679  90F2
1680  90F2 ED 73 3A 8C  	ld (Stack),sp
1681  90F6 F9           	ld sp,hl
1682  90F7
1683  90F7 AF           	xor a
1684  90F8 67           	ld h,a
1685  90F9 6C           	ld l,h															; ld hl,"0"
1686  90FA
1687  90FA D1           	pop de															; (Puntero_objeto) en DE.
1688  90FB C1           	pop bc															; (Puntero_de_impresion) codificado en BC.
1689  90FC
1690  90FC              ; Decodificamos (Puntero_de_impresion) para almacenarlo correctamente.
1691  90FC
1692  90FC              ; ----- ----- ----- ----- -----
1693  90FC
1694  90FC              Decodifica_Puntero_de_impresion
1695  90FC
1696  90FC 3E 02        	ld a,2
1697  90FE 32 0A 8C     	ld (Columnas),a
1698  9101
1699  9101 CB 70        	bit 6,b
1700  9103 28 1C        	jr z,1F 															; Entidad en ROM.
1701  9105
1702  9105 3C           	inc a
1703  9106 32 0A 8C     	ld (Columnas),a
1704  9109
1705  9109              ;	(Puntero_de_impresión) codificado.
1706  9109
1707  9109 CB 78        	bit 7,b
1708  910B 28 09        	jr z,2F
1709  910D
1710  910D              ;	Decodifica 2 Columnas.
1711  910D
1712  910D CB B8        	res 7,b
1713  910F 3E 02        	ld a,2
1714  9111 32 0A 8C     	ld (Columnas),a
1715  9114 18 0B        	jr 1F
1716  9116
1717  9116              ;	Decodifica 1 Columna.
1718  9116
1719  9116 CB 68        2 bit 5,b
1720  9118 28 07        	jr z,1F
1721  911A
1722  911A CB A8        	res 5,b
1723  911C 3E 01        	ld a,1
1724  911E 32 0A 8C     	ld (Columnas),a
1725  9121
1726  9121              ; 	Almacena (Puntero_de_impresion) en caja.
1727  9121
1728  9121 DD 71 05     1 ld (ix+5),c
1729  9124 DD 70 06     	ld (ix+6),b
1730  9127
1731  9127 ED 43 EF 8B  	ld (Puntero_de_impresion),bc
1732  912B
1733  912B              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1734  912B
1735  912B 39           	add hl,sp
1736  912C DD 75 07     	ld (ix+7),l
1737  912F DD 74 08     	ld (ix+8),h
1738  9132
1739  9132 C1           	pop bc
1740  9133
1741  9133 79           	ld a,c
1742  9134 80           	add b															; Comprueba si ya no hay datos en el almacén.
1743  9135
1744  9135 ED 7B 3A 8C  	ld sp,(Stack)
1745  9139
1746  9139 CC 68 95     	call z,Reinicia_entidad_maliciosa
1747  913C
1748  913C C9           	ret
1749  913D
1750  913D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1751  913D              ;
1752  913D              ;	25/11/24
1753  913D
1754  913D              Cargamos_registros_con_explosion
1755  913D
1756  913D DD 6E 07     	ld l,(ix+7)
1757  9140 DD 66 08     	ld h,(ix+8)
1758  9143 CD E3 91     	call Extrae_address
1759  9146 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1760  9147
1761  9147 DD 6E 05     	ld l,(ix+5)
1762  914A DD 66 06     	ld h,(ix+6)
1763  914D
1764  914D E5           	push hl
1765  914E DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1766  9150
1767  9150 C9           	ret
1768  9151
1769  9151
1770  9151              Cargamos_registros_con_explosion_Amadeus
1771  9151
1772  9151 2A BB 89     	ld hl,(Pamm_Amadeus)
1773  9154 CD E3 91     	call Extrae_address
1774  9157
1775  9157 5D           	ld e,l
1776  9158 54           	ld d,h
1777  9159
1778  9159 DD 2A B9 89  	ld ix,(p.imp.amadeus)
1779  915D
1780  915D C9           	ret
1781  915E
1782  915E              ; --------------------------------------------------------------------------------------------------------------
1783  915E              ;
1784  915E              ;	17/06/24
1785  915E              ;
1786  915E              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1787  915E              ;
1788  915E              ;	IX contiene el puntero de impresión.
1789  915E              ;	DE contiene (Puntero_objeto).
1790  915E
1791  915E
1792  915E              Cargamos_registros_con_mov_masticado_Amadeus
1793  915E
1794  915E ED 73 3A 8C  	ld (Stack),sp
1795  9162 ED 7B BB 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1796  9166 D1           	pop de 															; DE contiene Puntero_objeto
1797  9167 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1798  9169 DD 22 B9 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1799  916D ED 7B 3A 8C  	ld sp,(Stack)
1800  9171 C9           	ret
1801  9172
1802  9172              ; ---------------------------------------------------------------------------------------------------------------------
1803  9172              ;
1804  9172              ;	18/6/24
1805  9172              ;
1806  9172              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1807  9172
1808  9172              Genera_datos_de_impresion_Amadeus
1809  9172
1810  9172 3A B8 89     	ld a,(Impacto_Amadeus)
1811  9175 A7           	and a
1812  9176 20 03        	jr nz,1F
1813  9178
1814  9178              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1815  9178              ; _apuntando a la correspondiente explosión.
1816  9178
1817  9178 CD 5E 91     	call Cargamos_registros_con_mov_masticado_Amadeus
1818  917B
1819  917B DD 7D        1 ld a,ixl
1820  917D E6 1F        	and $1f
1821  917F 32 B5 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1822  9182
1823  9182 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1824  9185 E5           	push hl
1825  9186
1826  9186 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1827  9189 22 5C 8C     	ld (Scanlines_album_SP),hl
1828  918C
1829  918C CD 54 96     	call Genera_datos_de_impresion
1830  918F
1831  918F E1           	pop hl
1832  9190 22 5C 8C     	ld (Scanlines_album_SP),hl
1833  9193
1834  9193 C9           	ret
1835  9194
1836  9194              ; ---------------------------------------------------------------------------------------------------------------------
1837  9194              ;
1838  9194              ;	13/03/24
1839  9194              ;
1840  9194              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1841  9194
1842  9194              Inicia_albumes_de_lineas
1843  9194
1844  9194 21 00 80     	ld hl,Scanlines_album
1845  9197 22 3E 8C     	ld (Album_de_pintado),hl
1846  919A 22 5C 8C     	ld (Scanlines_album_SP),hl
1847  919D
1848  919D 21 1A 81     	ld hl,Scanlines_album_2
1849  91A0 22 40 8C     	ld (Album_de_borrado),hl
1850  91A3
1851  91A3 C9           	ret
1852  91A4
1853  91A4              Inicia_albumes_de_lineas_Amadeus
1854  91A4
1855  91A4 21 34 82     	ld hl,Amadeus_scanlines_album
1856  91A7 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1857  91AA 21 58 82     	ld hl,Amadeus_scanlines_album_2
1858  91AD 22 44 8C     	ld (Album_de_borrado_Amadeus),hl
1859  91B0
1860  91B0 C9           	ret
1861  91B1
1862  91B1              Inicia_albumes_de_disparos
1863  91B1
1864  91B1 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1865  91B4 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1866  91B7 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1867  91BA 22 48 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1868  91BD
1869  91BD 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1870  91C0 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1871  91C3 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1872  91C6
1873  91C6 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1874  91C9 22 4C 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1875  91CC
1876  91CC C9           	ret
1877  91CD
1878  91CD              ; ---------------------------------------------------------------------------------------------------------------------
1879  91CD              ;
1880  91CD              ; 8/1/23
1881  91CD              ;
1882  91CD              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1883  91CD              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1884  91CD              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1885  91CD
1886  91CD              ; Destruye HL y DE !!!!!
1887  91CD
1888  91CD              Inicia_punteros_de_cajas
1889  91CD
1890  91CD 21 A4 89     	ld hl,Indice_de_cajas_de_entidades
1891  91D0 CD E3 91         call Extrae_address
1892  91D3 22 2B 8C         ld (Puntero_store_caja),hl
1893  91D6 21 A6 89     	ld hl,Indice_de_cajas_de_entidades+2
1894  91D9 22 2F 8C     	ld (Indice_restore_caja),hl
1895  91DC CD E3 91     	call Extrae_address
1896  91DF 22 2D 8C     	ld (Puntero_restore_caja),hl
1897  91E2 C9               ret
1898  91E3
1899  91E3              ; *************************************************************************************************************************************************************
1900  91E3
1901  91E3              ;
1902  91E3              ; 20/10/22
1903  91E3              ;
1904  91E3              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1905  91E3              ;
1906  91E3              ; Destruye el puntero y DE !!!!!
1907  91E3
1908  91E3 5E           Extrae_address ld e,(hl)
1909  91E4 23           	inc hl
1910  91E5 56           	ld d,(hl)
1911  91E6 2B           	dec hl
1912  91E7 EB           	ex de,hl
1913  91E8 C9           	ret
1914  91E9
1915  91E9              ; *************************************************************************************************************************************************************
1916  91E9              ;
1917  91E9              ;	20/1/24
1918  91E9              ;
1919  91E9              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1920  91E9              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1921  91E9              ;
1922  91E9              ;   Destruye HL y BC !!!!!,
1923  91E9              ;
1924  91E9              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1925  91E9              ;					"0" ..... Izquierda.
1926  91E9
1927  91E9              Inicia_Puntero_objeto
1928  91E9
1929  91E9 3A 09 8C     	ld a,(Cuad_objeto)
1930  91EC E6 01        	and 1
1931  91EE F5           	push af
1932  91EF CC 0B 92     	call z,Inicia_puntero_objeto_izq
1933  91F2 F1           	pop af
1934  91F3 C8           	ret z
1935  91F4 CD F8 91     	call Inicia_puntero_objeto_der
1936  91F7 C9           	ret
1937  91F8
1938  91F8              ; Arrancamos desde la parte izquierda de la pantalla.
1939  91F8              ; Iniciamos (Indice_Sprite_der).
1940  91F8
1941  91F8 2A FF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1942  91FB 22 03 8C     	ld (Puntero_DESPLZ_der),hl
1943  91FE CD E3 91     	call Extrae_address
1944  9201 22 FC 8B     	ld (Puntero_objeto),hl
1945  9204
1946  9204 2A 01 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1947  9207 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1948  920A C9           	ret
1949  920B
1950  920B              ; Arrancamos desde la parte derecha de la pantalla.
1951  920B              ; Iniciamos (Indice_Sprite_izq).
1952  920B
1953  920B 2A 01 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1954  920E 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1955  9211 CD E3 91     	call Extrae_address
1956  9214 22 FC 8B     	ld (Puntero_objeto),hl
1957  9217
1958  9217 2A FF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1959  921A 22 03 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1960  921D C9           	ret
1961  921E
1962  921E              ; **************************************************************************************************
1963  921E              ;
1964  921E              ;	27/11/24
1965  921E              ;
1966  921E              ;	INPUT: IX contiene (Puntero_store_caja).
1967  921E              ;
1968  921E              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1969  921E
1970  921E              Salta_caja_de_entidades_vacia
1971  921E
1972  921E DD 7E 00     	ld a,(ix+0)
1973  9221 A7           	and a
1974  9222 C0           	ret nz
1975  9223
1976  9223 CD 2D 92     	call Incrementa_punteros_de_cajas
1977  9226 DD 2A 2B 8C  	ld ix,(Puntero_store_caja)
1978  922A 18 F2        	jr Salta_caja_de_entidades_vacia
1979  922C
1980  922C C9           	ret
1981  922D
1982  922D              ; **************************************************************************************************
1983  922D              ;
1984  922D              ;	08/05/23
1985  922D              ;
1986  922D              ;	Incrementamos los dos punteros de entidades. (+1).
1987  922D
1988  922D              Incrementa_punteros_de_cajas
1989  922D
1990  922D 2A 2D 8C     	ld hl,(Puntero_restore_caja)
1991  9230 22 2B 8C     	ld (Puntero_store_caja),hl
1992  9233 2A 2F 8C     	ld hl,(Indice_restore_caja)
1993  9236 23           	inc hl
1994  9237 23           	inc hl
1995  9238 22 2F 8C     	ld (Indice_restore_caja),hl
1996  923B CD E3 91         call Extrae_address
1997  923E 22 2D 8C         ld (Puntero_restore_caja),hl
1998  9241 C9               ret
1999  9242
2000  9242              ; -----------------------------------------------------------
2001  9242
2002  9242              ; Teclado.
2003  9242
2004  9242 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
2005  9244 DB FE        	in a,($fe)
2006  9246 E6 01        	and $01
2007  9248 28 02        	jr z,1f
2008  924A 18 F6        	jr Pulsa_ENTER
2009  924C C9           1 ret
2010  924D
2011  924D              ; **************************************************************************************************
2012  924D              ;
2013  924D              ; Temporización.
2014  924D
2015  924D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
2016  924D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
2017  924D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
2018  924D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
2019  924D
2020  924D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
2021  924D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
2022  924D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
2023  924D
2024  924D              ; A partir de $4f61 no hace falta DELAY.
2025  924D
2026  924D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2027  924D
2028  924D              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2029  924D              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2030  924D              ;	LD A,B
2031  924D              ;	AND A
2032  924D              ;	JR NZ,wait
2033  924D              ;	RET
2034  924D
2035  924D              ; ---------------------------------------------------------------------------------------------------------------
2036  924D              ;
2037  924D              ;	13/07/24
2038  924D              ;
2039  924D
2040  924D              Inicia_Shield
2041  924D
2042  924D 21 85 8C     	ld hl,Datos_Shield
2043  9250 22 89 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2044  9253
2045  9253 7E           	ld a,(hl)
2046  9254 32 8C 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2047  9257
2048  9257 3E 01        	ld a,1
2049  9259 32 8D 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2050  925C
2051  925C C9           	ret
2052  925D
2053  925D              ; ---------- ---------- ---------- ---------- ----------
2054  925D              ;
2055  925D              ;	30/11/24
2056  925D              ;
2057  925D              ;	Limpia la caja de entidades de una entidad eliminada.
2058  925D              ;
2059  925D              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
2060  925D              ;	MODIFY: A,BC,DE y HL.
2061  925D
2062  925D              Limpia_caja_de_entidades
2063  925D
2064  925D DD E5        	push ix
2065  925F E1           	pop hl
2066  9260 AF           	xor a
2067  9261 77           	ld (hl),a
2068  9262 5D           	ld e,l
2069  9263 54           	ld d,h
2070  9264 1C           	inc e
2071  9265 01 0B 00     	ld bc,11
2072  9268 ED B0        	ldir
2073  926A C9           	ret
2074  926B
2075  926B              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2076  926B              ;
2077  926B              ;	26/01/25
2078  926B              ;
2079  926B              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2080  926B              ;
2081  926B              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2082  926B              ;
2083  926B
2084  926B              Actualiza_pantalla
2085  926B
2086  926B 3E 02        	ld a,2
2087  926D D3 FE        	out ($fe),a
2088  926F
2089  926F 3A 62 8C     	ld a,(Ctrl_3)
2090  9272 CB 57        	bit 2,a
2091  9274 28 54        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2092  9276
2093  9276              ;	Inicializamos el (Puntero_de_columnas) para el borrado, (Puntero_indice_mov).
2094  9276
2095  9276 01 00 8C     	ld bc,Indice_Sprite_der+1
2096  9279 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2097  927D
2098  927D              Borrando_entidades
2099  927D
2100  927D 2A 5C 8C     	ld hl,(Scanlines_album_SP)
2101  9280 CD E3 91     	call Extrae_address
2102  9283 24           	inc h
2103  9284 25           	dec h
2104  9285 28 14        	jr z,Pintando_entidades
2105  9287
2106  9287              ;	Borramos entidades, pero antes... indicamos (Columnas).
2107  9287
2108  9287 ED 4B 1C 8C  	ld bc,(Puntero_indice_mov)
2109  928B 0A           	ld a,(bc)
2110  928C 32 0B 8C     	ld (Columnitas),a
2111  928F
2112  928F AF           	xor a
2113  9290 02           	ld (bc),a
2114  9291 0C           	inc c
2115  9292 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2116  9296
2117  9296 CD 48 97     	call Pinta_Sprites
2118  9299 18 E2        	jr Borrando_entidades
2119  929B
2120  929B              Pintando_entidades
2121  929B
2122  929B              ;	Inicializamos el (Puntero_de_columnas) para el borrado, (Puntero_indice_mov).
2123  929B
2124  929B 01 00 8C     	ld bc,Indice_Sprite_der+1
2125  929E ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2126  92A2
2127  92A2 2A 5E 8C     	ld hl,(India_SP)
2128  92A5 2C           	inc l
2129  92A6 CD E3 91     	call Extrae_address
2130  92A9 24           	inc h
2131  92AA 25           	dec h
2132  92AB 28 1D        	jr z,Ejecuta_escudo
2133  92AD
2134  92AD              ;	Adquiere (Columnas).
2135  92AD
2136  92AD 1C           	inc e
2137  92AE 1C           	inc e
2138  92AF
2139  92AF 1A           	ld a,(de)
2140  92B0 32 0B 8C     	ld (Columnitas),a
2141  92B3
2142  92B3 ED 4B 1C 8C  	ld bc,(Puntero_indice_mov)
2143  92B7 02           	ld (bc),a
2144  92B8 0C           	inc c
2145  92B9 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2146  92BD
2147  92BD 1C           	inc e
2148  92BE ED 53 5E 8C  	ld (India_SP),de
2149  92C2
2150  92C2 CD E3 91     	call Extrae_address
2151  92C5 CD 48 97     	call Pinta_Sprites
2152  92C8
2153  92C8 18 D1        	jr Pintando_entidades
2154  92CA
2155  92CA              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2156  92CA
2157  92CA              Ejecuta_escudo
2158  92CA
2159  92CA 3A 8B 8C     	ld a,(Shield)
2160  92CD A7           	and a
2161  92CE 20 34        	jr nz,Aplica_Shield
2162  92D0
2163  92D0              Borrando_Amadeus
2164  92D0
2165  92D0 21 62 8C     	ld hl,Ctrl_3
2166  92D3 CB 6E        	bit 5,(hl)
2167  92D5 28 1F        	jr z,1F												; No borramos. No ha habido movimiento.
2168  92D7
2169  92D7 3E 03        	ld a,3
2170  92D9 32 0B 8C     	ld (Columnitas),a
2171  92DC
2172  92DC 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
2173  92DF CD E3 91     	call Extrae_address
2174  92E2 24           	inc h
2175  92E3 25           	dec h
2176  92E4 28 03        	jr z,Pintando_Amadeus
2177  92E6 CD 48 97     	call Pinta_Sprites
2178  92E9
2179  92E9              Pintando_Amadeus
2180  92E9
2181  92E9 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
2182  92EC CD E3 91     	call Extrae_address
2183  92EF 24           	inc h
2184  92F0 25           	dec h
2185  92F1 28 03        	jr z,1F
2186  92F3 CD 48 97     	call Pinta_Sprites
2187  92F6
2188  92F6              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2189  92F6
2190  92F6 21 62 8C     1 ld hl,Ctrl_3
2191  92F9 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2192  92FB CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2193  92FD CB AE        	res 5,(hl)
2194  92FF
2195  92FF 3E 01        	ld a,1												; Borde azul.
2196  9301 D3 FE        	out ($fe),a
2197  9303
2198  9303 C9           	ret
2199  9304
2200  9304              Aplica_Shield
2201  9304
2202  9304              ;	Bit 1 "1" (Shield_3) Sólo borra.
2203  9304              ;		  "0"     ""     Borra/Pinta.
2204  9304              ;	Bit 2    ""  RET.	 No borra, no pinta.
2205  9304
2206  9304 21 8D 8C     	ld hl,Shield_3
2207  9307
2208  9307 CB 5E        	bit 3,(hl)
2209  9309 20 DE        	jr nz,Pintando_Amadeus
2210  930B
2211  930B CB 56        	bit 2,(hl)
2212  930D 20 E7        	jr nz,1B
2213  930F
2214  930F CB 4E        	bit 1,(hl)
2215  9311 C4 18 93     	call nz,Borra_Amadeus_shield
2216  9314
2217  9314 28 BA        	jr z,Borrando_Amadeus
2218  9316 18 DE        	jr 1B
2219  9318
2220  9318              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2221  9318
2222  9318              Borra_Amadeus_shield
2223  9318
2224  9318 3A 62 8C     	ld a,(Ctrl_3)
2225  931B CB 6F        	bit 5,a
2226  931D 28 08        	jr z,1F
2227  931F
2228  931F 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
2229  9322 CD E3 91     	call Extrae_address
2230  9325 18 06        	jr 2F
2231  9327
2232  9327 2A 42 8C     1 ld hl,(Album_de_pintado_Amadeus)
2233  932A CD E3 91     	call Extrae_address
2234  932D
2235  932D CD 48 97     2 call Pinta_Sprites
2236  9330
2237  9330 AF           	xor a
2238  9331 3C           	inc a											; Asegura NZ en la salida de la rutina.
2239  9332
2240  9332 C9           	ret
2241  9333
2242  9333              Pinta_Amadeus_shield
2243  9333
2244  9333 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
2245  9336 CD E3 91     	call Extrae_address
2246  9339 CD 48 97     	call Pinta_Sprites
2247  933C
2248  933C AF           	xor a
2249  933D 3C           	inc a											; Asegura NZ en la salida de la rutina.
2250  933E
2251  933E C9           	ret
2252  933F
2253  933F              Borra_Pinta_Amadeus_shield
2254  933F
2255  933F CD 18 93     	call Borra_Amadeus_shield
2256  9342 CD 33 93     	call Pinta_Amadeus_shield
2257  9345 C9           	ret
2258  9346
2259  9346              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2260  9346              ;
2261  9346              ;	19/6/24
2262  9346              ;
2263  9346
2264  9346              Teclado
2265  9346
2266  9346              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2267  9346
2268  9346 3E F7        	ld a,$f7												; "5" para disparar.
2269  9348 DB FE        	in a,($fe)
2270  934A E6 10        	and $10
2271  934C
2272  934C CC 3D A5     	call z,Genera_disparo_Amadeus
2273  934F
2274  934F 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2275  9351 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2276  9353 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2277  9355 CC 09 A0         call z,Amadeus_a_izquierda
2278  9358
2279  9358 3E F7        	ld a,$f7
2280  935A DB FE        	in a,($fe)
2281  935C E6 01        	and $01
2282  935E C8           	ret z
2283  935F
2284  935F 3E F7        	ld a,$f7
2285  9361 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2286  9363 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2287  9365 CC 21 A0     	call z,Amadeus_a_derecha
2288  9368
2289  9368 C9           	ret
2290  9369
2291  9369              ; ------------------------------------------------------------------------------------------------------------------------
2292  9369              ;
2293  9369              ;	06/07/24
2294  9369              ;
2295  9369
2296  9369              Genera_explosion
2297  9369
2298  9369 21 74 8C     	ld hl,Clock_explosion
2299  936C 35           	dec (hl)
2300  936D 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2301  936F
2302  936F              Borra_entidad_colisionada
2303  936F
2304  936F CD 7E 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2305  9372
2306  9372 DD E5        	push ix
2307  9374 CD 3D 91     	call Cargamos_registros_con_explosion
2308  9377 CD 54 96     	call Genera_datos_de_impresion
2309  937A DD E1        	pop ix
2310  937C
2311  937C AF           	xor a
2312  937D 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2313  937E
2314  937E C9           	ret
2315  937F
2316  937F              Siguiente_frame_explosion
2317  937F
2318  937F 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2319  9381
2320  9381              ; Avanza Frame de explosión.
2321  9381
2322  9381 DD 6E 07     	ld l,(ix+7)
2323  9384 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2324  9387
2325  9387 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2326  938A
2327  938A 79           	ld a,c
2328  938B 95           	sub l
2329  938C 20 41        	jr nz,1F
2330  938E
2331  938E
2332  938E              ; Fín de la entidad !!!!!!!!!!!!!
2333  938E              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2334  938E
2335  938E              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2336  938E              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2337  938E              ; Entidades_en_curso db 0								; Entidades en pantalla.
2338  938E
2339  938E              ; La entidad eliminada, es la última del nivel ?
2340  938E
2341  938E 3A 33 8C     	ld a,(Numero_de_entidades)
2342  9391 A7           	and a
2343  9392 28 30        	jr z,2F
2344  9394
2345  9394              ; Decrementa (Numero_de_entidades)
2346  9394
2347  9394 3D           	dec a
2348  9395 32 33 8C     	ld (Numero_de_entidades),a
2349  9398 21 35 8C     	ld hl,Entidades_en_curso
2350  939B 35           	dec (hl)
2351  939C
2352  939C              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2353  939C              ; IX apunta al 1er .db de la entidad eliminada.
2354  939C
2355  939C 2A 31 8C     	ld hl,(Puntero_indice_master)
2356  939F CD E3 91     	call Extrae_address
2357  93A2
2358  93A2 DD E5        	push ix
2359  93A4 D1           	pop de
2360  93A5
2361  93A5 01 0C 00     	ld bc,12
2362  93A8 ED B0        	ldir
2363  93AA
2364  93AA              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2365  93AA
2366  93AA CD EC 90     	call Obtenemos_puntero_de_impresion
2367  93AD
2368  93AD DD 6E 05     	ld l,(ix+5)
2369  93B0 2C           	inc l
2370  93B1 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2371  93B4
2372  93B4 CD 28 96     	call Genera_coordenadas
2373  93B7
2374  93B7 ED 4B EB 8B  	ld bc,(Coordenada_X)
2375  93BB
2376  93BB DD 71 01     	ld (ix+1),c
2377  93BE DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2378  93C1
2379  93C1 AF           	xor a
2380  93C2 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2381  93C3
2382  93C3 C9           	ret
2383  93C4
2384  93C4              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2385  93C4
2386  93C4 21 34 8C     2 ld hl,Numero_parcial_de_entidades
2387  93C7 35           	dec (hl)
2388  93C8 23           	inc hl
2389  93C9 35           	dec (hl)
2390  93CA
2391  93CA CD 5D 92     	call Limpia_caja_de_entidades
2392  93CD 18 A0        	jr Borra_entidad_colisionada
2393  93CF
2394  93CF 23           1 inc hl
2395  93D0 23           	inc hl
2396  93D1
2397  93D1 DD 75 07     	ld (ix+7),l
2398  93D4 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2399  93D7
2400  93D7 18 96        	jr Borra_entidad_colisionada
2401  93D9
2402  93D9              ; ----- ----- ----- ----- -----
2403  93D9
2404  93D9              Genera_explosion_Amadeus
2405  93D9
2406  93D9 21 75 8C     	ld hl,Clock_explosion_Amadeus
2407  93DC 35           	dec (hl)
2408  93DD 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2409  93DF
2410  93DF              Borra_Amadeus_impactado
2411  93DF
2412  93DF CD E8 8E     	call Change_Amadeus
2413  93E2 CD 51 91     	call Cargamos_registros_con_explosion_Amadeus
2414  93E5 CD 72 91     	call Genera_datos_de_impresion_Amadeus
2415  93E8
2416  93E8 21 62 8C     	ld hl,Ctrl_3
2417  93EB CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2418  93ED
2419  93ED AF           	xor a
2420  93EE 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2421  93EF
2422  93EF C9           	ret
2423  93F0
2424  93F0              Siguiente_frame_explosion_Amadeus
2425  93F0
2426  93F0 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2427  93F2
2428  93F2              ; Avanza Frame de explosión.
2429  93F2
2430  93F2 2A BB 89     	ld hl,(Pamm_Amadeus)
2431  93F5 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2432  93F8
2433  93F8 79           	ld a,c
2434  93F9 95           	sub l
2435  93FA 20 0B        	jr nz,1F
2436  93FC
2437  93FC              ; Fín de Amadeus !!!!!!!!!!!!!
2438  93FC              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2439  93FC
2440  93FC AF           	xor a
2441  93FD 32 B8 89     	ld (Impacto_Amadeus),a
2442  9400 21 62 8C     	ld hl,Ctrl_3
2443  9403 CB F6        	set 6,(hl)
2444  9405
2445  9405 18 D8        	jr Borra_Amadeus_impactado
2446  9407
2447  9407 23           1 inc hl
2448  9408 23           	inc hl
2449  9409 22 BB 89     	ld (Pamm_Amadeus),hl
2450  940C 18 D1        	jr Borra_Amadeus_impactado
2451  940E
2452  940E              ; ---------------------------------------------------------------
2453  940E
2454  940E              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 940E              ; ******************************************************************************************************************************************************************************************
   2+ 940E              ;
   3+ 940E              ;   21/04/24
   4+ 940E              ;
   5+ 940E              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 940E              ;   (XOR) bit a bit.
   7+ 940E              ;
   8+ 940E              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 940E
  10+ 940E              Derivando_RND
  11+ 940E
  12+ 940E 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9411
  14+ 9411 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9413 C5               push bc
  16+ 9414              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9414 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9417              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9417
  20+ 9417 A7           6 and a                                 ; Carry a "0".
  21+ 9418 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 941A 30 02            jr nc,1F
  23+ 941C
  24+ 941C CB C1            set 0,c
  25+ 941E
  26+ 941E 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 941F E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9421 5F               ld e,a
  29+ 9422
  30+ 9422 7A               ld a,d
  31+ 9423 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9425 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9427
  34+ 9427 CB 3F            srl a
  35+ 9429
  36+ 9429 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 942A
  38+ 942A 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 942B 28 04            jr z,4F
  40+ 942D
  41+ 942D CB FF            set 7,a
  42+ 942F 18 02            jr 5F
  43+ 9431
  44+ 9431 CB BF        4 res 7,a
  45+ 9433
  46+ 9433 CB 21        5 sla c
  47+ 9435 10 E0            djnz 6B
  48+ 9437
  49+ 9437 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9438
  51+ 9438 77               ld (hl),a
  52+ 9439 23               inc hl
  53+ 943A C1               pop bc
  54+ 943B 10 D4            djnz 3B
  55+ 943D
  56+ 943D C9               ret
  57+ 943E
  58+ 943E
  59+ 943E
# file closed: RND_Derivando.asm
2455  943E              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 943E              ;---------------------------------------------------------------------------------------------------------------
   2+ 943E              ;
   3+ 943E              ;   13/11/24
   4+ 943E
   5+ 943E              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 943E
   7+ 943E              Genera_movimientos_masticados_del_nivel
   8+ 943E
   9+ 943E              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 943E
  11+ 943E              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 943E              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 943E              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 943E
  15+ 943E 2D           	dec l
  16+ 943F 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9440 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9441 4E           	ld c,(hl)
  19+ 9442
  20+ 9442 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9443 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9444
  23+ 9444              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9444
  25+ 9444 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9445
  27+ 9445 CD 83 94     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9448
  29+ 9448              ;	Caja Master inicializada ???
  30+ 9448
  31+ 9448 7E           	ld a,(hl)
  32+ 9449 A7           	and a
  33+ 944A 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 944C
  35+ 944C              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 944C
  37+ 944C C1           	pop bc
  38+ 944D 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 944E C5           	push bc
  40+ 944F
  41+ 944F CD 22 95     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9452 CD B6 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9455
  44+ 9455 3A EA 8B     	ld a,(Tipo)
  45+ 9458 CD 93 94     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 945B
  47+ 945B              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 945B
  49+ 945B              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 945B              ;	ld a,(hl)
  51+ 945B              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 945B
  53+ 945B              ;	ld hl,Posicion_inicio
  54+ 945B              ;	ld (hl),a
  55+ 945B
  56+ 945B              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 945B              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 945B
  59+ 945B CD 22 90     	call Construye_movimientos_masticados_entidad
  60+ 945E
  61+ 945E 2A 31 8C     	ld hl,(Puntero_indice_master)
  62+ 9461 CD E3 91     	call Extrae_address
  63+ 9464
  64+ 9464 5D           	ld e,l
  65+ 9465 54           	ld d,h
  66+ 9466
  67+ 9466 CD E3 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9469
  69+ 9469              Movimientos_masticados_construidos
  70+ 9469
  71+ 9469 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 946A
  73+ 946A E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 946B 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 946C
  76+ 946C 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 946D 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 946F
  79+ 946F C9           	ret
  80+ 9470
  81+ 9470              ;---------------------------------------------------------------------------------------------------------------
  82+ 9470              ;
  83+ 9470              ;   9/11/24
  84+ 9470              ;
  85+ 9470              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9470              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9470              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9470              ;	_ de la 1ª entidad del Nivel.
  89+ 9470              ;
  90+ 9470              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9470
  92+ 9470              ;	MODIFICA: HL,DE y A.
  93+ 9470              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9470
  95+ 9470              Inicializa_1er_Nivel
  96+ 9470
  97+ 9470              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9470
  99+ 9470 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 9473 CD E3 91     	call Extrae_address
 101+ 9476 ED 53 81 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 947A
 103+ 947A 7E           	ld a,(hl)
 104+ 947B 32 33 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 947E
 106+ 947E 2C           	inc l
 107+ 947F 22 83 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9482
 109+ 9482 C9           	ret
 110+ 9483
 111+ 9483              ; ----------------------
 112+ 9483              ;
 113+ 9483              ;	13/11/24
 114+ 9483              ;
 115+ 9483
 116+ 9483              Situa_en_Caja_Master
 117+ 9483
 118+ 9483 CD A1 95         call Calcula_salto_en_BC
 119+ 9486 21 5E 89         ld hl,Indice_de_cajas_master
 120+ 9489 A7               and a
 121+ 948A ED 4A            adc hl,bc
 122+ 948C 22 31 8C       	ld (Puntero_indice_master),hl
 123+ 948F CD E3 91     	call Extrae_address
 124+ 9492 C9           	ret
 125+ 9493
 126+ 9493              ; ----------------------
 127+ 9493
 128+ 9493              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9493              ; 	ld bc,4
 130+ 9493              ; 	ldir
 131+ 9493              ; 	ret
 132+ 9493
 133+ 9493 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9494 CD A1 95         call Calcula_salto_en_BC
 135+ 9497 21 1E 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 949A A7               and a
 137+ 949B ED 4A            adc hl,bc
 138+ 949D CD E3 91         call Extrae_address
 139+ 94A0 22 1C 8C         ld (Puntero_indice_mov),hl
 140+ 94A3 C9               ret
 141+ 94A4
 142+ 94A4              ;---------------------------------------------------------------------------------------------------------------
 143+ 94A4              ;
 144+ 94A4              ;   13/11/24
 145+ 94A4              ;
 146+ 94A4              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 94A4
 148+ 94A4
 149+ 94A4              Prepara_Cajas_de_Entidades
 150+ 94A4
 151+ 94A4              ; Preparamos los punteros de las cajas de entidades:
 152+ 94A4
 153+ 94A4 CD CD 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 94A7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 94A7 CD EC 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 94AA
 157+ 94AA 2A 83 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 94AD
 159+ 94AD              ; En este punto:
 160+ 94AD              ;
 161+ 94AD              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 94AD              ; B contiene (Numero_parcial_de_entidades).
 163+ 94AD
 164+ 94AD C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 94AE
 166+ 94AE 7E           	ld a,(hl)
 167+ 94AF
 168+ 94AF CD 83 94     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 94B2
 170+ 94B2 ED 5B 2B 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 94B6
 172+ 94B6 D5           	push de
 173+ 94B7 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 94B9
 175+ 94B9 01 0C 00     	ld bc,12
 176+ 94BC ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 94BE              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 94BE
 179+ 94BE              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 94BE              ;
 181+ 94BE              ;
 182+ 94BE              ; ------------------------------------------------------ IX
 183+ 94BE              ; ------------------------------------------------------ IX
 184+ 94BE              ; ------------------------------------------------------ IX
 185+ 94BE              ; ------------------------------------------------------ IX
 186+ 94BE
 187+ 94BE DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 94C0
 189+ 94C0 CD EC 90     	call Obtenemos_puntero_de_impresion
 190+ 94C3
 191+ 94C3 DD 6E 05     	ld l,(ix+5)
 192+ 94C6 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 193+ 94C9
 194+ 94C9 D5           	push de														; Push (Puntero_objeto).
 195+ 94CA E5           	push hl														; Push (Puntero_de_impresion).
 196+ 94CB
 197+ 94CB CD 28 96     	call Genera_coordenadas
 198+ 94CE
 199+ 94CE ED 4B EB 8B  	ld bc,(Coordenada_X)
 200+ 94D2
 201+ 94D2 DD 71 01     	ld (ix+1),c
 202+ 94D5 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 203+ 94D8
 204+ 94D8 CD 7E 8F      	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 205+ 94DB
 206+ 94DB DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 207+ 94DD D1           	pop de														; Pop (Puntero_objeto) en DE.
 208+ 94DE
 209+ 94DE CD 54 96     	call Genera_datos_de_impresion
 210+ 94E1
 211+ 94E1 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 212+ 94E3
 213+ 94E3              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 214+ 94E3
 215+ 94E3 CD 5A 95     	call Decrementa_Contador_de_mov_masticados
 216+ 94E6 CD 37 95     	call Limpiamos_bandeja_DRAW
 217+ 94E9 CD 2D 92     	call Incrementa_punteros_de_cajas
 218+ 94EC
 219+ 94EC              ; Siguiente entidad del Nivel.
 220+ 94EC
 221+ 94EC 2A 83 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 222+ 94EF 23           	inc hl 														; _ entidad del Nivel.
 223+ 94F0
 224+ 94F0 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 225+ 94F1
 226+ 94F1 10 BA        	djnz 1B
 227+ 94F3
 228+ 94F3 C9           	ret
 229+ 94F4
 230+ 94F4              ; -------------------------------------------------------------------------------------------------------------------
 231+ 94F4              ;
 232+ 94F4              ;	27/5/24
 233+ 94F4              ;
 234+ 94F4              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 235+ 94F4              ;
 236+ 94F4
 237+ 94F4              ; 	Cargamos la definición de Amadeus en DRAW.
 238+ 94F4              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 239+ 94F4
 240+ 94F4 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 241+ 94F7 CD B6 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 242+ 94FA
 243+ 94FA
 244+ 94FA              Construye_movimientos_masticados_Amadeus
 245+ 94FA
 246+ 94FA 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 247+ 94FD CD DF 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 248+ 9500              ;															; _ el (Contador_de_mov_masticados).
 249+ 9500 CD E9 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 250+ 9503              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 251+ 9503
 252+ 9503              ; Generamos movimientos masticados de Amadeus.
 253+ 9503
 254+ 9503 06 79        	ld b,121												; $0079, 121d.
 255+ 9505
 256+ 9505 C5           1 push bc
 257+ 9506 CD DA 99     	call Draw
 258+ 9509 CD 65 90     	call Guarda_movimiento_masticado
 259+ 950C
 260+ 950C CD 44 9D     	call Mov_right
 261+ 950F CD 44 9D     	call Mov_right											; Amadeus se mueve x2 pixel.
 262+ 9512
 263+ 9512 C1           	pop bc
 264+ 9513 10 F0        	djnz 1B
 265+ 9515
 266+ 9515              ; Todos los movimientos masticados de Amadeus se han creado.
 267+ 9515
 268+ 9515              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 269+ 9515              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 270+ 9515
 271+ 9515 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 272+ 9518 01 08 00     	ld bc,8
 273+ 951B A7           	and a
 274+ 951C ED 42        	sbc hl,bc
 275+ 951E 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 276+ 9521
 277+ 9521 C9           	ret
 278+ 9522
 279+ 9522              ; ---------------------------------------------------------------------
 280+ 9522              ;
 281+ 9522              ;	10/02/24
 282+ 9522              ;
 283+ 9522              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 284+ 9522              ;
 285+ 9522              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 286+ 9522
 287+ 9522              Definicion_segun_tipo
 288+ 9522
 289+ 9522 CD A1 95     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 290+ 9525 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 291+ 9528 CD AC 95     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 292+ 952B C9           	ret
 293+ 952C
 294+ 952C              ; ---------------------------------------------------------------------
 295+ 952C              ;
 296+ 952C              ;	6/7/24
 297+ 952C
 298+ 952C
 299+ 952C              Store_Restore_cajas
 300+ 952C
 301+ 952C ED 5B 2B 8C  	ld de,(Puntero_store_caja)
 302+ 9530 CD E3 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 303+ 9533 CD 2D 92     	call Incrementa_punteros_de_cajas
 304+ 9536 C9           	ret
 305+ 9537
 306+ 9537              ; ---------------------------------------------------------------------
 307+ 9537              ;
 308+ 9537              ;	23/6/24
 309+ 9537              ;
 310+ 9537              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 311+ 9537              ;
 312+ 9537              ;	MODIFY: HL
 313+ 9537
 314+ 9537              Limpiamos_bandeja_DRAW
 315+ 9537
 316+ 9537 ED 73 3A 8C  	ld (Stack),sp
 317+ 953B 31 10 8C     	ld sp,Vel_left
 318+ 953E
 319+ 953E AF           	xor a
 320+ 953F 67           	ld h,a
 321+ 9540 6F           	ld l,a
 322+ 9541
 323+ 9541 E5           	push hl
 324+ 9542 E5           	push hl
 325+ 9543 E5           	push hl
 326+ 9544 E5           	push hl
 327+ 9545 E5           	push hl
 328+ 9546 E5           	push hl
 329+ 9547 E5           	push hl
 330+ 9548 E5           	push hl
 331+ 9549 E5           	push hl
 332+ 954A E5           	push hl
 333+ 954B E5           	push hl
 334+ 954C E5           	push hl
 335+ 954D E5           	push hl
 336+ 954E E5           	push hl
 337+ 954F E5           	push hl
 338+ 9550 E5           	push hl
 339+ 9551 E5           	push hl
 340+ 9552 E5           	push hl
 341+ 9553
 342+ 9553 33           	inc sp
 343+ 9554
 344+ 9554 E5           	push hl
 345+ 9555 ED 7B 3A 8C  	ld sp,(Stack)
 346+ 9559
 347+ 9559 C9           	ret
 348+ 955A
 349+ 955A              ; ---------------------------------------------------------------------
 350+ 955A              ;
 351+ 955A              ;	23/11/24
 352+ 955A              ;
 353+ 955A              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 354+ 955A
 355+ 955A              Decrementa_Contador_de_mov_masticados
 356+ 955A
 357+ 955A DD 6E 09     	ld l,(ix+9)
 358+ 955D DD 66 0A     	ld h,(ix+10)
 359+ 9560
 360+ 9560 2B           	dec hl
 361+ 9561
 362+ 9561 DD 75 09     	ld (ix+9),l
 363+ 9564 DD 74 0A     	ld (ix+10),h
 364+ 9567
 365+ 9567 C9           	ret
 366+ 9568
 367+ 9568              ; ---------------------------------------------------------------------
 368+ 9568              ;
 369+ 9568              ;	24/11/24
 370+ 9568
 371+ 9568              Reinicia_entidad_maliciosa
 372+ 9568
 373+ 9568              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 374+ 9568
 375+ 9568 CD A0 A1     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 376+ 956B CD AD A1     	call Transfiere_datos_de_contadores
 377+ 956E
 378+ 956E              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 379+ 956E
 380+ 956E DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 381+ 9571 CD 22 95     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 382+ 9574
 383+ 9574 7D           	ld a,l
 384+ 9575 C6 0B        	add 11
 385+ 9577 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 386+ 9578
 387+ 9578 CD E3 91     	call Extrae_address
 388+ 957B
 389+ 957B DD 75 07     	ld (ix+7),l
 390+ 957E DD 74 08     	ld (ix+8),h
 391+ 9581
 392+ 9581 CD EC 90     	call Obtenemos_puntero_de_impresion
 393+ 9584
 394+ 9584              ; Incrementa (Contador_de_vueltas)x2.
 395+ 9584              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 396+ 9584
 397+ 9584              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 398+ 9584              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 399+ 9584              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 400+ 9584              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 401+ 9584              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 402+ 9584
 403+ 9584 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 404+ 9588
 405+ 9588 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 406+ 958B CB 2F        	sra a
 407+ 958D CB 2F        	sra a
 408+ 958F
 409+ 958F DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 410+ 9592
 411+ 9592 3E 40        	ld a,$40
 412+ 9594 DD BE 03     	cp (ix+3)
 413+ 9597 C0           	ret nz
 414+ 9598
 415+ 9598              ; Límitador.
 416+ 9598
 417+ 9598              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 418+ 9598
 419+ 9598 DD CB 03 2E  	sra (ix+3)
 420+ 959C DD CB 0B 2E  	sra (ix+11)
 421+ 95A0
 422+ 95A0 C9           	ret
 423+ 95A1
 424+ 95A1              ;	------------------------------------------------------------------------------------
 425+ 95A1              ;
 426+ 95A1              ;	09/11/24
 427+ 95A1              ;
 428+ 95A1              ;	INPUTS:	A contiene el (Tipo) de entidad.
 429+ 95A1              ;
 430+ 95A1              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 431+ 95A1              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 432+ 95A1
 433+ 95A1 A7           Calcula_salto_en_BC and a
 434+ 95A2 28 04        	jr z,1F
 435+ 95A4 CB 27        	sla a
 436+ 95A6 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 95A8 4F           1 ld c,a
 438+ 95A9 06 00        	ld b,0
 439+ 95AB C9           	ret
 440+ 95AC
 441+ 95AC              ; ------------------------------------------------------------------
 442+ 95AC              ;
 443+ 95AC              ;	19/1/24
 444+ 95AC              ;
 445+ 95AC              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 95AC              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 95AC
 448+ 95AC A7           Situa_en_datos_de_definicion and a
 449+ 95AD ED 4A        	adc hl,bc
 450+ 95AF CD E3 91     	call Extrae_address
 451+ 95B2 22 38 8C         ld (Datos_de_entidad),hl
 452+ 95B5 C9           	ret
 453+ 95B6
 454+ 95B6              ; ----------------------------------------------------------------------------------------------------------
 455+ 95B6              ;
 456+ 95B6              ;	24/6/24
 457+ 95B6              ;
 458+ 95B6              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 459+ 95B6              ;	_ de entidad.
 460+ 95B6              ;
 461+ 95B6              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 462+ 95B6              ;
 463+ 95B6              ;
 464+ 95B6              ;	MODIFICA: HL,DE y BC
 465+ 95B6
 466+ 95B6
 467+ 95B6              Definicion_de_entidad_a_bandeja_DRAW
 468+ 95B6
 469+ 95B6 11 EA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 470+ 95B9 7E           	ld a,(hl) 									; Volcamos Tipo.
 471+ 95BA 12           	ld (de),a
 472+ 95BB 23           	inc hl
 473+ 95BC              ;
 474+ 95BC 11 F8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 475+ 95BF 01 02 00     	ld bc,2
 476+ 95C2 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 477+ 95C4              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 478+ 95C4 11 ED 8B     	ld de,Contador_de_vueltas
 479+ 95C7 7E           	ld a,(hl)
 480+ 95C8 12           	ld (de),a
 481+ 95C9 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 482+ 95CA
 483+ 95CA 11 FF 8B     	ld de,Indice_Sprite_der
 484+ 95CD 01 04 00     	ld bc,4
 485+ 95D0 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 486+ 95D2
 487+ 95D2 11 07 8C     	ld de,Posicion_inicio
 488+ 95D5 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 489+ 95D8 ED B0        	ldir 									; Vuelco (Frames_explosion).
 490+ 95DA
 491+ 95DA 11 F1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 492+ 95DD 01 02 00     	ld bc,2
 493+ 95E0 ED B0        	ldir
 494+ 95E2
 495+ 95E2 C9           	ret
 496+ 95E3
 497+ 95E3              ; ----------------------------------------------------------------------------------------------------------
 498+ 95E3              ;
 499+ 95E3              ;	1/8/24
 500+ 95E3              ;
 501+ 95E3
 502+ 95E3              Parametros_de_bandeja_DRAW_a_caja
 503+ 95E3
 504+ 95E3 21 EA 8B     	ld hl,Bandeja_DRAW
 505+ 95E6 01 0C 00     	ld bc,12
 506+ 95E9 ED B0        	ldir
 507+ 95EB C9           	ret
 508+ 95EC
 509+ 95EC              ;---------------------------------------------------------------------------------------------------------------
 510+ 95EC              ;
 511+ 95EC              ;	13/11/24
 512+ 95EC              ;
 513+ 95EC              ;	INICIALIZA (Numero_parcial_de_entidades).
 514+ 95EC              ;
 515+ 95EC              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 516+ 95EC              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 517+ 95EC
 518+ 95EC              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 519+ 95EC              ;			- Actualiza (Numero_de_entidades).
 520+ 95EC
 521+ 95EC              ;	MODIFICA: A y B.
 522+ 95EC
 523+ 95EC
 524+ 95EC              Inicializa_Numero_parcial_de_entidades
 525+ 95EC
 526+ 95EC 3A 33 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 527+ 95EF FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 528+ 95F1 38 0E        	jr c,1F
 529+ 95F3 28 0C        	jr z,1F
 530+ 95F5
 531+ 95F5              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 532+ 95F5              ; Actualizamos variables.
 533+ 95F5
 534+ 95F5 D6 06        	sub 6
 535+ 95F7 32 33 8C     	ld (Numero_de_entidades),a
 536+ 95FA 3E 06        	ld a,6
 537+ 95FC 32 34 8C     	ld (Numero_parcial_de_entidades),a
 538+ 95FF 47           	ld b,a
 539+ 9600 C9           	ret
 540+ 9601
 541+ 9601              ; El nº total de entidades no supera el nº de cajas de entidades.
 542+ 9601              ; (Numero_de_entidades)="0".
 543+ 9601
 544+ 9601 32 34 8C     1 ld (Numero_parcial_de_entidades),a
 545+ 9604 47           	ld b,a
 546+ 9605 AF           	xor a
 547+ 9606 32 33 8C     	ld (Numero_de_entidades),a
 548+ 9609 C9           	ret
 549+ 960A
# file closed: Rutinas_de_inicio_y_niveles.asm
2456  960A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 960A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 960A              ;
   3+ 960A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 960A              ;
   5+ 960A              ; *****************************************************************************************************************************************************************************************
   6+ 960A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 960A
   8+ 960A 7C           calcula_tercio ld a,h
   9+ 960B E6 18        	and $18
  10+ 960D CB 2F        	sra a
  11+ 960F CB 2F        	sra a
  12+ 9611 CB 2F        	sra a
  13+ 9613 C9           	ret
  14+ 9614
# file closed: calcula_tercio.asm
2457  9614              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9614              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9614              ;
   3+ 9614              ;
   4+ 9614              ;	CLS.
   5+ 9614              ;
   6+ 9614              ;	Limpia la pantalla y define sus atributos.
   7+ 9614              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9614              ;
   9+ 9614              ;	COLORES: 0 ..... NEGRO
  10+ 9614              ;    		 1 ..... AZUL
  11+ 9614              ; 			 2 ..... ROJO
  12+ 9614              ;			 3 ..... MAGENTA
  13+ 9614              ; 			 4 ..... VERDE
  14+ 9614              ; 			 5 ..... CIAN
  15+ 9614              ;			 6 ..... AMARILLO
  16+ 9614              ; 			 7 ..... BLANCO
  17+ 9614              ;
  18+ 9614              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9614              ;
  20+ 9614              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9614
  22+ 9614
  23+ 9614 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9617 11 01 40     	LD DE,$4001
  25+ 961A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 961D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 961F ED B0        	LDIR
  28+ 9621 01 FF 02     	LD BC,767
  29+ 9624 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9625 ED B0        	LDIR
  31+ 9627 C9           	ret
  32+ 9628
# file closed: Cls.asm
2458  9628              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9628              ; ------------------------------------------------------------------------
   2+ 9628              ;
   3+ 9628              ;	30/1/24
   4+ 9628              ;
   5+ 9628              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9628              ;	Fila superior "0", Columna izquierda "0".
   7+ 9628              ;
   8+ 9628              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9628              ;
  10+ 9628              ;	Modifica: A,BC y DE.
  11+ 9628
  12+ 9628              Genera_coordenadas
  13+ 9628
  14+ 9628 7D           	ld a,l
  15+ 9629 E6 1F        	and $1f
  16+ 962B
  17+ 962B 32 EB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 962E
  19+ 962E 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 962F FE 40        	cp $40
  21+ 9631 38 1C        	jr c,4F
  22+ 9633
  23+ 9633 CD 0A 96     	call calcula_tercio
  24+ 9636 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9637
  26+ 9637 1E 00        	ld e,0
  27+ 9639 7D           	ld a,l
  28+ 963A E6 E0        	and $e0
  29+ 963C 28 01        	jr z,1F
  30+ 963E 04           	inc b
  31+ 963F
  32+ 963F 04           1 inc b
  33+ 9640 05           	dec b
  34+ 9641 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9643              ;														; _ , salimos.
  36+ 9643 1C           3 inc e
  37+ 9644 D6 20        	sub 32
  38+ 9646 20 FB        	jr nz,3B
  39+ 9648 10 F5        	djnz 1B
  40+ 964A
  41+ 964A 7B           2 ld a,e
  42+ 964B 32 EC 8B     	ld (Coordenada_y),a
  43+ 964E C9           	ret
  44+ 964F
  45+ 964F AF           4 xor a
  46+ 9650 32 EC 8B     	ld (Coordenada_y),a
  47+ 9653 C9           	ret
  48+ 9654
# file closed: Genera_coordenadas.asm
2459  9654              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9654              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9654              ;
   3+ 9654              ;	20/09/24
   4+ 9654              ;
   5+ 9654              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9654              ;   DE contiene Puntero_objeto.
   7+ 9654              ;   IX contiene el Puntero de impresión.
   8+ 9654
   9+ 9654              Genera_datos_de_impresion
  10+ 9654
  11+ 9654 ED 73 3A 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9658
  13+ 9658 2A 5C 8C         ld hl,(Scanlines_album_SP)
  14+ 965B
  15+ 965B 3E 05            ld a,5
  16+ 965D 85               add l
  17+ 965E 6F               ld l,a
  18+ 965F
  19+ 965F F9               ld sp,hl
  20+ 9660 22 5C 8C         ld (Scanlines_album_SP),hl
  21+ 9663
  22+ 9663 21 00 00         ld hl,0
  23+ 9666
  24+ 9666 DD E5            push ix
  25+ 9668 3B               dec sp
  26+ 9669 ED 7A            adc hl,sp
  27+ 966B D5               push de
  28+ 966C
  29+ 966C              ; Recuperamos SP.
  30+ 966C
  31+ 966C ED 7B 3A 8C      ld sp,(Stack)
  32+ 9670
  33+ 9670 E5               push hl
  34+ 9671 F1               pop af
  35+ 9672 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9673
  37+ 9673              ; Tenemos el encabezado listo.
  38+ 9673              ; Preparamos registros para generar los scanlines.
  39+ 9673
  40+ 9673 DD E5            push ix
  41+ 9675 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9676
  43+ 9676 ED 5B 5C 8C      ld de,(Scanlines_album_SP)
  44+ 967A
  45+ 967A              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 967A              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 967A
  48+ 967A 7C               ld a,h
  49+ 967B FE 50            cp $50
  50+ 967D 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 967F
  52+ 967F 20 05            jr nz,2F
  53+ 9681
  54+ 9681 7D               ld a,l
  55+ 9682 FE E0            cp $e0
  56+ 9684 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9686
  58+ 9686 7D           2 ld a,l
  59+ 9687 FE C0            cp $c0
  60+ 9689 D2 1F 97         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 968C
  62+ 968C              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 968C
  64+ 968C CD 8C 9C         call NextScan
  65+ 968F EB               ex de,hl
  66+ 9690
  67+ 9690 73               ld (hl),e
  68+ 9691 23               inc hl
  69+ 9692 72               ld (hl),d
  70+ 9693 23               inc hl
  71+ 9694
  72+ 9694 EB               ex de,hl
  73+ 9695
  74+ 9695 CD 8C 9C         call NextScan
  75+ 9698 EB               ex de,hl
  76+ 9699
  77+ 9699 73               ld (hl),e
  78+ 969A 23               inc hl
  79+ 969B 72               ld (hl),d
  80+ 969C 23               inc hl
  81+ 969D
  82+ 969D EB               ex de,hl
  83+ 969E
  84+ 969E CD 8C 9C         call NextScan
  85+ 96A1 EB               ex de,hl
  86+ 96A2
  87+ 96A2 73               ld (hl),e
  88+ 96A3 23               inc hl
  89+ 96A4 72               ld (hl),d
  90+ 96A5 23               inc hl
  91+ 96A6
  92+ 96A6 EB               ex de,hl
  93+ 96A7
  94+ 96A7 CD 8C 9C         call NextScan
  95+ 96AA EB               ex de,hl
  96+ 96AB
  97+ 96AB 73               ld (hl),e
  98+ 96AC 23               inc hl
  99+ 96AD 72               ld (hl),d
 100+ 96AE 23               inc hl
 101+ 96AF
 102+ 96AF EB               ex de,hl
 103+ 96B0
 104+ 96B0 CD 8C 9C         call NextScan
 105+ 96B3 EB               ex de,hl
 106+ 96B4
 107+ 96B4 73               ld (hl),e
 108+ 96B5 23               inc hl
 109+ 96B6 72               ld (hl),d
 110+ 96B7 23               inc hl
 111+ 96B8
 112+ 96B8 EB               ex de,hl
 113+ 96B9
 114+ 96B9 CD 8C 9C         call NextScan
 115+ 96BC EB               ex de,hl
 116+ 96BD
 117+ 96BD 73               ld (hl),e
 118+ 96BE 23               inc hl
 119+ 96BF 72               ld (hl),d
 120+ 96C0 23               inc hl
 121+ 96C1
 122+ 96C1 EB               ex de,hl
 123+ 96C2
 124+ 96C2 CD 8C 9C         call NextScan
 125+ 96C5 EB               ex de,hl
 126+ 96C6
 127+ 96C6 73               ld (hl),e
 128+ 96C7 23               inc hl
 129+ 96C8 72               ld (hl),d
 130+ 96C9 23               inc hl
 131+ 96CA
 132+ 96CA EB               ex de,hl
 133+ 96CB
 134+ 96CB CD 8C 9C         call NextScan
 135+ 96CE EB               ex de,hl
 136+ 96CF
 137+ 96CF 73               ld (hl),e
 138+ 96D0 23               inc hl
 139+ 96D1 72               ld (hl),d
 140+ 96D2 23               inc hl
 141+ 96D3
 142+ 96D3 EB               ex de,hl
 143+ 96D4
 144+ 96D4 CD 8C 9C         call NextScan
 145+ 96D7 EB               ex de,hl
 146+ 96D8
 147+ 96D8 73               ld (hl),e
 148+ 96D9 23               inc hl
 149+ 96DA 72               ld (hl),d
 150+ 96DB 23               inc hl
 151+ 96DC
 152+ 96DC EB               ex de,hl
 153+ 96DD
 154+ 96DD CD 8C 9C         call NextScan
 155+ 96E0 EB               ex de,hl
 156+ 96E1
 157+ 96E1 73               ld (hl),e
 158+ 96E2 23               inc hl
 159+ 96E3 72               ld (hl),d
 160+ 96E4 23               inc hl
 161+ 96E5
 162+ 96E5 EB               ex de,hl
 163+ 96E6
 164+ 96E6 CD 8C 9C         call NextScan
 165+ 96E9 EB               ex de,hl
 166+ 96EA
 167+ 96EA 73               ld (hl),e
 168+ 96EB 23               inc hl
 169+ 96EC 72               ld (hl),d
 170+ 96ED 23               inc hl
 171+ 96EE
 172+ 96EE EB               ex de,hl
 173+ 96EF
 174+ 96EF CD 8C 9C         call NextScan
 175+ 96F2 EB               ex de,hl
 176+ 96F3
 177+ 96F3 73               ld (hl),e
 178+ 96F4 23               inc hl
 179+ 96F5 72               ld (hl),d
 180+ 96F6 23               inc hl
 181+ 96F7
 182+ 96F7 EB               ex de,hl
 183+ 96F8
 184+ 96F8 CD 8C 9C         call NextScan
 185+ 96FB EB               ex de,hl
 186+ 96FC
 187+ 96FC 73               ld (hl),e
 188+ 96FD 23               inc hl
 189+ 96FE 72               ld (hl),d
 190+ 96FF 23               inc hl
 191+ 9700
 192+ 9700 EB               ex de,hl
 193+ 9701
 194+ 9701 CD 8C 9C         call NextScan
 195+ 9704 EB               ex de,hl
 196+ 9705
 197+ 9705 73               ld (hl),e
 198+ 9706 23               inc hl
 199+ 9707 72               ld (hl),d
 200+ 9708 23               inc hl
 201+ 9709
 202+ 9709 EB               ex de,hl
 203+ 970A
 204+ 970A CD 8C 9C         call NextScan
 205+ 970D EB               ex de,hl
 206+ 970E
 207+ 970E              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 970E              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 970E              ;   _ generar sus scanlines.
 210+ 970E
 211+ 970E              ;    ld (Puntero_de_impresion_disparo),de
 212+ 970E
 213+ 970E 73               ld (hl),e
 214+ 970F 23               inc hl
 215+ 9710 72               ld (hl),d
 216+ 9711 23               inc hl
 217+ 9712
 218+ 9712              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 9712
 220+ 9712 22 5C 8C         ld (Scanlines_album_SP),hl
 221+ 9715
 222+ 9715 EB               ex de,hl
 223+ 9716
 224+ 9716              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9716
 226+ 9716              ;    call NextScan
 227+ 9716              ;    call NextScan
 228+ 9716
 229+ 9716 22 67 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9719
 231+ 9719              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9719
 233+ 9719 08               ex af,af
 234+ 971A
 235+ 971A F5               push af
 236+ 971B E1               pop hl
 237+ 971C
 238+ 971C 36 10            ld (hl),16
 239+ 971E
 240+ 971E C9               ret
 241+ 971F
 242+ 971F              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 971F
 244+ 971F              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 971F
 246+ 971F 3E 57            ld a,$57
 247+ 9721 94               sub h
 248+ 9722 47               ld b,a
 249+ 9723
 250+ 9723 3E DF            ld a,$df
 251+ 9725 BD               cp l
 252+ 9726 38 04            jr c,1F
 253+ 9728
 254+ 9728 3E 08            ld a,8
 255+ 972A 80               add b
 256+ 972B 47               ld b,a
 257+ 972C
 258+ 972C              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 972C              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 972C
 261+ 972C 48           1 ld c,b
 262+ 972D 0C               inc c
 263+ 972E
 264+ 972E 04               inc b
 265+ 972F 05               dec b
 266+ 9730 20 02            jr nz,3F
 267+ 9732
 268+ 9732 18 0B            jr 6F
 269+ 9734
 270+ 9734 CD 8C 9C     3 call NextScan
 271+ 9737 EB               ex de,hl
 272+ 9738
 273+ 9738 73               ld (hl),e
 274+ 9739 23               inc hl
 275+ 973A 72               ld (hl),d
 276+ 973B 23               inc hl
 277+ 973C
 278+ 973C EB               ex de,hl
 279+ 973D 10 F5            djnz 3B
 280+ 973F
 281+ 973F ED 53 5C 8C  6 ld (Scanlines_album_SP),de
 282+ 9743
 283+ 9743 08           5 ex af,af
 284+ 9744 F5               push af
 285+ 9745 E1               pop hl
 286+ 9746
 287+ 9746 71               ld (hl),c
 288+ 9747
 289+ 9747 C9               ret
 290+ 9748
# file closed: Genera_datos_de_impresion.asm
2460  9748              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9748              ; -----------------------------------------------------------------------------
   2+ 9748              ;
   3+ 9748              ;   15/1/25
   4+ 9748              ;
   5+ 9748
   6+ 9748              Pinta_Sprites
   7+ 9748
   8+ 9748 ED 73 3A 8C      ld (Stack),sp
   9+ 974C
  10+ 974C EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  11+ 974D              ;                                       ; DE se encuentra en los datos del sprite.
  12+ 974D 2C               inc l
  13+ 974E 2C               inc l
  14+ 974F
  15+ 974F 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  16+ 9750
  17+ 9750 2C               inc l
  18+ 9751 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  19+ 9752
  20+ 9752              ;   Seleccionamos rutina de impresión:
  21+ 9752
  22+ 9752 08               ex af,af                            ; (Columnas) en AF´.
  23+ 9753
  24+ 9753 3E 10            ld a,16
  25+ 9755 B8               cp b
  26+ 9756 C2 8F 99         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  27+ 9759
  28+ 9759              ;   Rutinas:
  29+ 9759
  30+ 9759              Pinta_rapido                            ;   1520 t/states.
  31+ 9759
  32+ 9759 3A 0B 8C         ld a,(Columnitas)
  33+ 975C 3D               dec a
  34+ 975D CA 16 99         jp z,Pinta_rapido_1_Columna
  35+ 9760 3D               dec a
  36+ 9761 CA 5D 98         jp z,Pinta_rapido_2_Columnas
  37+ 9764
  38+ 9764              Pinta_rapido_3_Columnas
  39+ 9764
  40+ 9764 E1               pop hl
  41+ 9765
  42+ 9765 1A               ld a,(de)
  43+ 9766 AE               xor (hl)
  44+ 9767 77               ld (hl),a
  45+ 9768 2C               inc l
  46+ 9769 1C               inc e
  47+ 976A 1A               ld a,(de)
  48+ 976B AE               xor (hl)
  49+ 976C 77               ld (hl),a
  50+ 976D 2C               inc l
  51+ 976E 1C               inc e
  52+ 976F 1A               ld a,(de)
  53+ 9770 AE               xor (hl)
  54+ 9771 77               ld (hl),a
  55+ 9772 1C               inc e
  56+ 9773
  57+ 9773 E1               pop hl
  58+ 9774
  59+ 9774 1A               ld a,(de)
  60+ 9775 AE               xor (hl)
  61+ 9776 77               ld (hl),a
  62+ 9777 2C               inc l
  63+ 9778 1C               inc e
  64+ 9779 1A               ld a,(de)
  65+ 977A AE               xor (hl)
  66+ 977B 77               ld (hl),a
  67+ 977C 2C               inc l
  68+ 977D 1C               inc e
  69+ 977E 1A               ld a,(de)
  70+ 977F AE               xor (hl)
  71+ 9780 77               ld (hl),a
  72+ 9781 1C               inc e
  73+ 9782
  74+ 9782 E1               pop hl
  75+ 9783
  76+ 9783 1A               ld a,(de)
  77+ 9784 AE               xor (hl)
  78+ 9785 77               ld (hl),a
  79+ 9786 2C               inc l
  80+ 9787 1C               inc e
  81+ 9788 1A               ld a,(de)
  82+ 9789 AE               xor (hl)
  83+ 978A 77               ld (hl),a
  84+ 978B 2C               inc l
  85+ 978C 1C               inc e
  86+ 978D 1A               ld a,(de)
  87+ 978E AE               xor (hl)
  88+ 978F 77               ld (hl),a
  89+ 9790 1C               inc e
  90+ 9791
  91+ 9791 E1               pop hl
  92+ 9792
  93+ 9792 1A               ld a,(de)
  94+ 9793 AE               xor (hl)
  95+ 9794 77               ld (hl),a
  96+ 9795 2C               inc l
  97+ 9796 1C               inc e
  98+ 9797 1A               ld a,(de)
  99+ 9798 AE               xor (hl)
 100+ 9799 77               ld (hl),a
 101+ 979A 2C               inc l
 102+ 979B 1C               inc e
 103+ 979C 1A               ld a,(de)
 104+ 979D AE               xor (hl)
 105+ 979E 77               ld (hl),a
 106+ 979F 1C               inc e
 107+ 97A0
 108+ 97A0 E1               pop hl
 109+ 97A1
 110+ 97A1 1A               ld a,(de)
 111+ 97A2 AE               xor (hl)
 112+ 97A3 77               ld (hl),a
 113+ 97A4 2C               inc l
 114+ 97A5 1C               inc e
 115+ 97A6 1A               ld a,(de)
 116+ 97A7 AE               xor (hl)
 117+ 97A8 77               ld (hl),a
 118+ 97A9 2C               inc l
 119+ 97AA 1C               inc e
 120+ 97AB 1A               ld a,(de)
 121+ 97AC AE               xor (hl)
 122+ 97AD 77               ld (hl),a
 123+ 97AE 1C               inc e
 124+ 97AF
 125+ 97AF E1               pop hl
 126+ 97B0
 127+ 97B0 1A               ld a,(de)
 128+ 97B1 AE               xor (hl)
 129+ 97B2 77               ld (hl),a
 130+ 97B3 2C               inc l
 131+ 97B4 1C               inc e
 132+ 97B5 1A               ld a,(de)
 133+ 97B6 AE               xor (hl)
 134+ 97B7 77               ld (hl),a
 135+ 97B8 2C               inc l
 136+ 97B9 1C               inc e
 137+ 97BA 1A               ld a,(de)
 138+ 97BB AE               xor (hl)
 139+ 97BC 77               ld (hl),a
 140+ 97BD 1C               inc e
 141+ 97BE
 142+ 97BE E1               pop hl
 143+ 97BF
 144+ 97BF 1A               ld a,(de)
 145+ 97C0 AE               xor (hl)
 146+ 97C1 77               ld (hl),a
 147+ 97C2 2C               inc l
 148+ 97C3 1C               inc e
 149+ 97C4 1A               ld a,(de)
 150+ 97C5 AE               xor (hl)
 151+ 97C6 77               ld (hl),a
 152+ 97C7 2C               inc l
 153+ 97C8 1C               inc e
 154+ 97C9 1A               ld a,(de)
 155+ 97CA AE               xor (hl)
 156+ 97CB 77               ld (hl),a
 157+ 97CC 1C               inc e
 158+ 97CD
 159+ 97CD E1               pop hl
 160+ 97CE
 161+ 97CE 1A               ld a,(de)
 162+ 97CF AE               xor (hl)
 163+ 97D0 77               ld (hl),a
 164+ 97D1 2C               inc l
 165+ 97D2 1C               inc e
 166+ 97D3 1A               ld a,(de)
 167+ 97D4 AE               xor (hl)
 168+ 97D5 77               ld (hl),a
 169+ 97D6 2C               inc l
 170+ 97D7 1C               inc e
 171+ 97D8 1A               ld a,(de)
 172+ 97D9 AE               xor (hl)
 173+ 97DA 77               ld (hl),a
 174+ 97DB 1C               inc e
 175+ 97DC
 176+ 97DC E1               pop hl
 177+ 97DD
 178+ 97DD 1A               ld a,(de)
 179+ 97DE AE               xor (hl)
 180+ 97DF 77               ld (hl),a
 181+ 97E0 2C               inc l
 182+ 97E1 1C               inc e
 183+ 97E2 1A               ld a,(de)
 184+ 97E3 AE               xor (hl)
 185+ 97E4 77               ld (hl),a
 186+ 97E5 2C               inc l
 187+ 97E6 1C               inc e
 188+ 97E7 1A               ld a,(de)
 189+ 97E8 AE               xor (hl)
 190+ 97E9 77               ld (hl),a
 191+ 97EA 1C               inc e
 192+ 97EB
 193+ 97EB E1               pop hl
 194+ 97EC
 195+ 97EC 1A               ld a,(de)
 196+ 97ED AE               xor (hl)
 197+ 97EE 77               ld (hl),a
 198+ 97EF 2C               inc l
 199+ 97F0 1C               inc e
 200+ 97F1 1A               ld a,(de)
 201+ 97F2 AE               xor (hl)
 202+ 97F3 77               ld (hl),a
 203+ 97F4 2C               inc l
 204+ 97F5 1C               inc e
 205+ 97F6 1A               ld a,(de)
 206+ 97F7 AE               xor (hl)
 207+ 97F8 77               ld (hl),a
 208+ 97F9 1C               inc e
 209+ 97FA
 210+ 97FA E1               pop hl
 211+ 97FB
 212+ 97FB 1A               ld a,(de)
 213+ 97FC AE               xor (hl)
 214+ 97FD 77               ld (hl),a
 215+ 97FE 2C               inc l
 216+ 97FF 1C               inc e
 217+ 9800 1A               ld a,(de)
 218+ 9801 AE               xor (hl)
 219+ 9802 77               ld (hl),a
 220+ 9803 2C               inc l
 221+ 9804 1C               inc e
 222+ 9805 1A               ld a,(de)
 223+ 9806 AE               xor (hl)
 224+ 9807 77               ld (hl),a
 225+ 9808 1C               inc e
 226+ 9809
 227+ 9809 E1               pop hl
 228+ 980A
 229+ 980A 1A               ld a,(de)
 230+ 980B AE               xor (hl)
 231+ 980C 77               ld (hl),a
 232+ 980D 2C               inc l
 233+ 980E 1C               inc e
 234+ 980F 1A               ld a,(de)
 235+ 9810 AE               xor (hl)
 236+ 9811 77               ld (hl),a
 237+ 9812 2C               inc l
 238+ 9813 1C               inc e
 239+ 9814 1A               ld a,(de)
 240+ 9815 AE               xor (hl)
 241+ 9816 77               ld (hl),a
 242+ 9817 1C               inc e
 243+ 9818
 244+ 9818 E1               pop hl
 245+ 9819
 246+ 9819 1A               ld a,(de)
 247+ 981A AE               xor (hl)
 248+ 981B 77               ld (hl),a
 249+ 981C 2C               inc l
 250+ 981D 1C               inc e
 251+ 981E 1A               ld a,(de)
 252+ 981F AE               xor (hl)
 253+ 9820 77               ld (hl),a
 254+ 9821 2C               inc l
 255+ 9822 1C               inc e
 256+ 9823 1A               ld a,(de)
 257+ 9824 AE               xor (hl)
 258+ 9825 77               ld (hl),a
 259+ 9826 1C               inc e
 260+ 9827
 261+ 9827 E1               pop hl
 262+ 9828
 263+ 9828 1A               ld a,(de)
 264+ 9829 AE               xor (hl)
 265+ 982A 77               ld (hl),a
 266+ 982B 2C               inc l
 267+ 982C 1C               inc e
 268+ 982D 1A               ld a,(de)
 269+ 982E AE               xor (hl)
 270+ 982F 77               ld (hl),a
 271+ 9830 2C               inc l
 272+ 9831 1C               inc e
 273+ 9832 1A               ld a,(de)
 274+ 9833 AE               xor (hl)
 275+ 9834 77               ld (hl),a
 276+ 9835 1C               inc e
 277+ 9836
 278+ 9836 E1               pop hl
 279+ 9837
 280+ 9837 1A               ld a,(de)
 281+ 9838 AE               xor (hl)
 282+ 9839 77               ld (hl),a
 283+ 983A 2C               inc l
 284+ 983B 1C               inc e
 285+ 983C 1A               ld a,(de)
 286+ 983D AE               xor (hl)
 287+ 983E 77               ld (hl),a
 288+ 983F 2C               inc l
 289+ 9840 1C               inc e
 290+ 9841 1A               ld a,(de)
 291+ 9842 AE               xor (hl)
 292+ 9843 77               ld (hl),a
 293+ 9844 1C               inc e
 294+ 9845
 295+ 9845 E1               pop hl
 296+ 9846
 297+ 9846 1A               ld a,(de)
 298+ 9847 AE               xor (hl)
 299+ 9848 77               ld (hl),a
 300+ 9849 2C               inc l
 301+ 984A 1C               inc e
 302+ 984B 1A               ld a,(de)
 303+ 984C AE               xor (hl)
 304+ 984D 77               ld (hl),a
 305+ 984E 2C               inc l
 306+ 984F 1C               inc e
 307+ 9850 1A               ld a,(de)
 308+ 9851 AE               xor (hl)
 309+ 9852 77               ld (hl),a
 310+ 9853 1C               inc e
 311+ 9854
 312+ 9854 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 313+ 9858 ED 7B 3A 8C      ld sp,(Stack)
 314+ 985C
 315+ 985C C9               ret
 316+ 985D
 317+ 985D              Pinta_rapido_2_Columnas
 318+ 985D
 319+ 985D E1               pop hl
 320+ 985E
 321+ 985E 1A               ld a,(de)
 322+ 985F AE               xor (hl)
 323+ 9860 77               ld (hl),a
 324+ 9861 2C               inc l
 325+ 9862 1C               inc e
 326+ 9863 1A               ld a,(de)
 327+ 9864 AE               xor (hl)
 328+ 9865 77               ld (hl),a
 329+ 9866 1C               inc e
 330+ 9867 1C               inc e
 331+ 9868
 332+ 9868 E1               pop hl
 333+ 9869
 334+ 9869 1A               ld a,(de)
 335+ 986A AE               xor (hl)
 336+ 986B 77               ld (hl),a
 337+ 986C 2C               inc l
 338+ 986D 1C               inc e
 339+ 986E 1A               ld a,(de)
 340+ 986F AE               xor (hl)
 341+ 9870 77               ld (hl),a
 342+ 9871 1C               inc e
 343+ 9872 1C               inc e
 344+ 9873
 345+ 9873 E1               pop hl
 346+ 9874
 347+ 9874 1A               ld a,(de)
 348+ 9875 AE               xor (hl)
 349+ 9876 77               ld (hl),a
 350+ 9877 2C               inc l
 351+ 9878 1C               inc e
 352+ 9879 1A               ld a,(de)
 353+ 987A AE               xor (hl)
 354+ 987B 77               ld (hl),a
 355+ 987C 1C               inc e
 356+ 987D 1C               inc e
 357+ 987E
 358+ 987E E1               pop hl
 359+ 987F
 360+ 987F 1A               ld a,(de)
 361+ 9880 AE               xor (hl)
 362+ 9881 77               ld (hl),a
 363+ 9882 2C               inc l
 364+ 9883 1C               inc e
 365+ 9884 1A               ld a,(de)
 366+ 9885 AE               xor (hl)
 367+ 9886 77               ld (hl),a
 368+ 9887 1C               inc e
 369+ 9888 1C               inc e
 370+ 9889
 371+ 9889 E1               pop hl
 372+ 988A
 373+ 988A 1A               ld a,(de)
 374+ 988B AE               xor (hl)
 375+ 988C 77               ld (hl),a
 376+ 988D 2C               inc l
 377+ 988E 1C               inc e
 378+ 988F 1A               ld a,(de)
 379+ 9890 AE               xor (hl)
 380+ 9891 77               ld (hl),a
 381+ 9892 1C               inc e
 382+ 9893 1C               inc e
 383+ 9894
 384+ 9894 E1               pop hl
 385+ 9895
 386+ 9895 1A               ld a,(de)
 387+ 9896 AE               xor (hl)
 388+ 9897 77               ld (hl),a
 389+ 9898 2C               inc l
 390+ 9899 1C               inc e
 391+ 989A 1A               ld a,(de)
 392+ 989B AE               xor (hl)
 393+ 989C 77               ld (hl),a
 394+ 989D 1C               inc e
 395+ 989E 1C               inc e
 396+ 989F
 397+ 989F E1               pop hl
 398+ 98A0
 399+ 98A0 1A               ld a,(de)
 400+ 98A1 AE               xor (hl)
 401+ 98A2 77               ld (hl),a
 402+ 98A3 2C               inc l
 403+ 98A4 1C               inc e
 404+ 98A5 1A               ld a,(de)
 405+ 98A6 AE               xor (hl)
 406+ 98A7 77               ld (hl),a
 407+ 98A8 1C               inc e
 408+ 98A9 1C               inc e
 409+ 98AA
 410+ 98AA E1               pop hl
 411+ 98AB
 412+ 98AB 1A               ld a,(de)
 413+ 98AC AE               xor (hl)
 414+ 98AD 77               ld (hl),a
 415+ 98AE 2C               inc l
 416+ 98AF 1C               inc e
 417+ 98B0 1A               ld a,(de)
 418+ 98B1 AE               xor (hl)
 419+ 98B2 77               ld (hl),a
 420+ 98B3 1C               inc e
 421+ 98B4 1C               inc e
 422+ 98B5
 423+ 98B5 E1               pop hl
 424+ 98B6
 425+ 98B6 1A               ld a,(de)
 426+ 98B7 AE               xor (hl)
 427+ 98B8 77               ld (hl),a
 428+ 98B9 2C               inc l
 429+ 98BA 1C               inc e
 430+ 98BB 1A               ld a,(de)
 431+ 98BC AE               xor (hl)
 432+ 98BD 77               ld (hl),a
 433+ 98BE 1C               inc e
 434+ 98BF 1C               inc e
 435+ 98C0
 436+ 98C0 E1               pop hl
 437+ 98C1
 438+ 98C1 1A               ld a,(de)
 439+ 98C2 AE               xor (hl)
 440+ 98C3 77               ld (hl),a
 441+ 98C4 2C               inc l
 442+ 98C5 1C               inc e
 443+ 98C6 1A               ld a,(de)
 444+ 98C7 AE               xor (hl)
 445+ 98C8 77               ld (hl),a
 446+ 98C9 1C               inc e
 447+ 98CA 1C               inc e
 448+ 98CB
 449+ 98CB E1               pop hl
 450+ 98CC
 451+ 98CC 1A               ld a,(de)
 452+ 98CD AE               xor (hl)
 453+ 98CE 77               ld (hl),a
 454+ 98CF 2C               inc l
 455+ 98D0 1C               inc e
 456+ 98D1 1A               ld a,(de)
 457+ 98D2 AE               xor (hl)
 458+ 98D3 77               ld (hl),a
 459+ 98D4 1C               inc e
 460+ 98D5 1C               inc e
 461+ 98D6
 462+ 98D6 E1               pop hl
 463+ 98D7
 464+ 98D7 1A               ld a,(de)
 465+ 98D8 AE               xor (hl)
 466+ 98D9 77               ld (hl),a
 467+ 98DA 2C               inc l
 468+ 98DB 1C               inc e
 469+ 98DC 1A               ld a,(de)
 470+ 98DD AE               xor (hl)
 471+ 98DE 77               ld (hl),a
 472+ 98DF 1C               inc e
 473+ 98E0 1C               inc e
 474+ 98E1
 475+ 98E1 E1               pop hl
 476+ 98E2
 477+ 98E2 1A               ld a,(de)
 478+ 98E3 AE               xor (hl)
 479+ 98E4 77               ld (hl),a
 480+ 98E5 2C               inc l
 481+ 98E6 1C               inc e
 482+ 98E7 1A               ld a,(de)
 483+ 98E8 AE               xor (hl)
 484+ 98E9 77               ld (hl),a
 485+ 98EA 1C               inc e
 486+ 98EB 1C               inc e
 487+ 98EC
 488+ 98EC E1               pop hl
 489+ 98ED
 490+ 98ED 1A               ld a,(de)
 491+ 98EE AE               xor (hl)
 492+ 98EF 77               ld (hl),a
 493+ 98F0 2C               inc l
 494+ 98F1 1C               inc e
 495+ 98F2 1A               ld a,(de)
 496+ 98F3 AE               xor (hl)
 497+ 98F4 77               ld (hl),a
 498+ 98F5 1C               inc e
 499+ 98F6 1C               inc e
 500+ 98F7
 501+ 98F7 E1               pop hl
 502+ 98F8
 503+ 98F8 1A               ld a,(de)
 504+ 98F9 AE               xor (hl)
 505+ 98FA 77               ld (hl),a
 506+ 98FB 2C               inc l
 507+ 98FC 1C               inc e
 508+ 98FD 1A               ld a,(de)
 509+ 98FE AE               xor (hl)
 510+ 98FF 77               ld (hl),a
 511+ 9900 1C               inc e
 512+ 9901 1C               inc e
 513+ 9902
 514+ 9902 E1               pop hl
 515+ 9903
 516+ 9903 1A               ld a,(de)
 517+ 9904 AE               xor (hl)
 518+ 9905 77               ld (hl),a
 519+ 9906 2C               inc l
 520+ 9907 1C               inc e
 521+ 9908 1A               ld a,(de)
 522+ 9909 AE               xor (hl)
 523+ 990A 77               ld (hl),a
 524+ 990B 1C               inc e
 525+ 990C 1C               inc e
 526+ 990D
 527+ 990D ED 73 5C 8C      ld (Scanlines_album_SP),sp
 528+ 9911 ED 7B 3A 8C      ld sp,(Stack)
 529+ 9915
 530+ 9915 C9               ret
 531+ 9916
 532+ 9916              Pinta_rapido_1_Columna
 533+ 9916
 534+ 9916 E1               pop hl
 535+ 9917
 536+ 9917 1A               ld a,(de)
 537+ 9918 AE               xor (hl)
 538+ 9919 77               ld (hl),a
 539+ 991A 1C               inc e
 540+ 991B 1C               inc e
 541+ 991C 1C               inc e
 542+ 991D
 543+ 991D E1               pop hl
 544+ 991E
 545+ 991E 1A               ld a,(de)
 546+ 991F AE               xor (hl)
 547+ 9920 77               ld (hl),a
 548+ 9921 1C               inc e
 549+ 9922 1C               inc e
 550+ 9923 1C               inc e
 551+ 9924
 552+ 9924 E1               pop hl
 553+ 9925
 554+ 9925 1A               ld a,(de)
 555+ 9926 AE               xor (hl)
 556+ 9927 77               ld (hl),a
 557+ 9928 1C               inc e
 558+ 9929 1C               inc e
 559+ 992A 1C               inc e
 560+ 992B
 561+ 992B E1               pop hl
 562+ 992C
 563+ 992C 1A               ld a,(de)
 564+ 992D AE               xor (hl)
 565+ 992E 77               ld (hl),a
 566+ 992F 1C               inc e
 567+ 9930 1C               inc e
 568+ 9931 1C               inc e
 569+ 9932
 570+ 9932 E1               pop hl
 571+ 9933
 572+ 9933 1A               ld a,(de)
 573+ 9934 AE               xor (hl)
 574+ 9935 77               ld (hl),a
 575+ 9936 1C               inc e
 576+ 9937 1C               inc e
 577+ 9938 1C               inc e
 578+ 9939
 579+ 9939 E1               pop hl
 580+ 993A
 581+ 993A 1A               ld a,(de)
 582+ 993B AE               xor (hl)
 583+ 993C 77               ld (hl),a
 584+ 993D 1C               inc e
 585+ 993E 1C               inc e
 586+ 993F 1C               inc e
 587+ 9940
 588+ 9940 E1               pop hl
 589+ 9941
 590+ 9941 1A               ld a,(de)
 591+ 9942 AE               xor (hl)
 592+ 9943 77               ld (hl),a
 593+ 9944 1C               inc e
 594+ 9945 1C               inc e
 595+ 9946 1C               inc e
 596+ 9947
 597+ 9947 E1               pop hl
 598+ 9948
 599+ 9948 1A               ld a,(de)
 600+ 9949 AE               xor (hl)
 601+ 994A 77               ld (hl),a
 602+ 994B 1C               inc e
 603+ 994C 1C               inc e
 604+ 994D 1C               inc e
 605+ 994E
 606+ 994E E1               pop hl
 607+ 994F
 608+ 994F 1A               ld a,(de)
 609+ 9950 AE               xor (hl)
 610+ 9951 77               ld (hl),a
 611+ 9952 1C               inc e
 612+ 9953 1C               inc e
 613+ 9954 1C               inc e
 614+ 9955
 615+ 9955 E1               pop hl
 616+ 9956
 617+ 9956 1A               ld a,(de)
 618+ 9957 AE               xor (hl)
 619+ 9958 77               ld (hl),a
 620+ 9959 1C               inc e
 621+ 995A 1C               inc e
 622+ 995B 1C               inc e
 623+ 995C
 624+ 995C E1               pop hl
 625+ 995D
 626+ 995D 1A               ld a,(de)
 627+ 995E AE               xor (hl)
 628+ 995F 77               ld (hl),a
 629+ 9960 1C               inc e
 630+ 9961 1C               inc e
 631+ 9962 1C               inc e
 632+ 9963
 633+ 9963 E1               pop hl
 634+ 9964
 635+ 9964 1A               ld a,(de)
 636+ 9965 AE               xor (hl)
 637+ 9966 77               ld (hl),a
 638+ 9967 1C               inc e
 639+ 9968 1C               inc e
 640+ 9969 1C               inc e
 641+ 996A
 642+ 996A E1               pop hl
 643+ 996B
 644+ 996B 1A               ld a,(de)
 645+ 996C AE               xor (hl)
 646+ 996D 77               ld (hl),a
 647+ 996E 1C               inc e
 648+ 996F 1C               inc e
 649+ 9970 1C               inc e
 650+ 9971 E1               pop hl
 651+ 9972
 652+ 9972 1A               ld a,(de)
 653+ 9973 AE               xor (hl)
 654+ 9974 77               ld (hl),a
 655+ 9975 1C               inc e
 656+ 9976 1C               inc e
 657+ 9977 1C               inc e
 658+ 9978
 659+ 9978 E1               pop hl
 660+ 9979
 661+ 9979 1A               ld a,(de)
 662+ 997A AE               xor (hl)
 663+ 997B 77               ld (hl),a
 664+ 997C 1C               inc e
 665+ 997D 1C               inc e
 666+ 997E 1C               inc e
 667+ 997F
 668+ 997F E1               pop hl
 669+ 9980
 670+ 9980 1A               ld a,(de)
 671+ 9981 AE               xor (hl)
 672+ 9982 77               ld (hl),a
 673+ 9983 1C               inc e
 674+ 9984 1C               inc e
 675+ 9985 1C               inc e
 676+ 9986
 677+ 9986 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 678+ 998A ED 7B 3A 8C      ld sp,(Stack)
 679+ 998E
 680+ 998E C9               ret
 681+ 998F
 682+ 998F              Pinta_lento
 683+ 998F
 684+ 998F 3A 0B 8C         ld a,(Columnitas)
 685+ 9992 3D               dec a
 686+ 9993 28 33            jr z,Pinta_lento_1_Columna
 687+ 9995 3D               dec a
 688+ 9996 28 1A            jr z,Pinta_lento_2_Columnas
 689+ 9998
 690+ 9998              Pinta_lento_3_Columnas
 691+ 9998
 692+ 9998 E1           1 pop hl
 693+ 9999
 694+ 9999 1A               ld a,(de)
 695+ 999A AE               xor (hl)
 696+ 999B 77               ld (hl),a
 697+ 999C 2C               inc l
 698+ 999D 1C               inc e
 699+ 999E 1A               ld a,(de)
 700+ 999F AE               xor (hl)
 701+ 99A0 77               ld (hl),a
 702+ 99A1 2C               inc l
 703+ 99A2 1C               inc e
 704+ 99A3 1A               ld a,(de)
 705+ 99A4 AE               xor (hl)
 706+ 99A5 77               ld (hl),a
 707+ 99A6 13               inc de
 708+ 99A7
 709+ 99A7 10 EF            djnz 1B
 710+ 99A9
 711+ 99A9 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 712+ 99AD ED 7B 3A 8C      ld sp,(Stack)
 713+ 99B1 C9               ret
 714+ 99B2
 715+ 99B2              Pinta_lento_2_Columnas
 716+ 99B2
 717+ 99B2 E1           2 pop hl
 718+ 99B3
 719+ 99B3 1A               ld a,(de)
 720+ 99B4 AE               xor (hl)
 721+ 99B5 77               ld (hl),a
 722+ 99B6 2C               inc l
 723+ 99B7 1C               inc e
 724+ 99B8 1A               ld a,(de)
 725+ 99B9 AE               xor (hl)
 726+ 99BA 77               ld (hl),a
 727+ 99BB 1C               inc e
 728+ 99BC 1C               inc e
 729+ 99BD
 730+ 99BD 10 F3            djnz 2B
 731+ 99BF
 732+ 99BF ED 73 5C 8C      ld (Scanlines_album_SP),sp
 733+ 99C3 ED 7B 3A 8C      ld sp,(Stack)
 734+ 99C7 C9               ret
 735+ 99C8
 736+ 99C8              Pinta_lento_1_Columna
 737+ 99C8
 738+ 99C8 E1           3 pop hl
 739+ 99C9
 740+ 99C9 1A               ld a,(de)
 741+ 99CA AE               xor (hl)
 742+ 99CB 77               ld (hl),a
 743+ 99CC 1C               inc e
 744+ 99CD 1C               inc e
 745+ 99CE 1C               inc e
 746+ 99CF
 747+ 99CF 10 F7            djnz 3B
 748+ 99D1
 749+ 99D1 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 750+ 99D5 ED 7B 3A 8C      ld sp,(Stack)
 751+ 99D9 C9               ret
# file closed: Pinta_Sprites.asm
2461  99DA              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 99DA              ; ******************************************************************************************************************************************************************************************
   2+ 99DA              ;
   3+ 99DA              ; 26/06/23
   4+ 99DA              ;
   5+ 99DA              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 99DA
   7+ 99DA              Draw
   8+ 99DA
   9+ 99DA CD 80 9C     	call Prepara_draw
  10+ 99DD 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 99DE A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 99DF 28 05        	jr z,2F
  13+ 99E1
  14+ 99E1 3A 09 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 99E4 18 0C        	jr 1F
  16+ 99E6
  17+ 99E6 2A 07 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 99E9 22 FA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 99EC CD 78 9B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 99EF              ;													; _la esquina superior izquierda de la pantalla.
  21+ 99EF
  22+ 99EF CD 04 A1     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 99F2
  24+ 99F2 3A F7 8B     1 ld a,(Ctrl_0)
  25+ 99F5 CB 6F        	bit 5,a
  26+ 99F7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 99F9
  28+ 99F9 CD 0E 9A     	call Comprueba_limite_horizontal
  29+ 99FC CD 9E 9A     	call Comprueba_limite_vertical
  30+ 99FF
  31+ 99FF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 99FF              ; -----------------------
  33+ 99FF              ; -----------------------
  34+ 99FF              ; -----------------------
  35+ 99FF
  36+ 99FF CD F4 9B     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9A02 CD 2B 9C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9A05
  39+ 9A05 3A F7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9A08 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9A0A 32 F7 8B     	ld (Ctrl_0),a
  42+ 9A0D
  43+ 9A0D C9           	ret
  44+ 9A0E
  45+ 9A0E              ; *******************************************************************************************************************************************************************************************
  46+ 9A0E              ;	21/01/23
  47+ 9A0E              ;
  48+ 9A0E              ; 	Comprueba_limite_horizontal.
  49+ 9A0E              ;
  50+ 9A0E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9A0E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9A0E              ;
  53+ 9A0E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9A0E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9A0E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9A0E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9A0E
  58+ 9A0E
  59+ 9A0E
  60+ 9A0E 3A F7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9A11 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9A13 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9A15 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9A17 32 F7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9A1A 18 09            jr 6F
  66+ 9A1C CB 5F        1 bit 3,a
  67+ 9A1E 28 0A            jr z,2F
  68+ 9A20 E6 F7            and $f7
  69+ 9A22 32 F7 8B         ld (Ctrl_0),a
  70+ 9A25 CD 78 9B     6 call Inicializacion
  71+ 9A28 18 5B            jr 5F
  72+ 9A2A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9A2B
  74+ 9A2B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9A2B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9A2B
  77+ 9A2B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9A2C 2A 0C 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9A2F CD 0A 96     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9A32 67           	ld h,a
  81+ 9A33 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9A34 CD 0A 96     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9A37 67           	ld h,a
  84+ 9A38 A7           	and a
  85+ 9A39 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9A3B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9A3C 3A 09 8C     	ld a,(Cuad_objeto)
  88+ 9A3F FE 02        	cp 2
  89+ 9A41 38 1E        	jr c,3F
  90+ 9A43 28 1C        	jr z,3F
  91+ 9A45 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9A46 28 23            jr z,7F
  93+ 9A48 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9A4A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9A4C E1           	pop hl
  96+ 9A4D
  97+ 9A4D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9A4D              ; _para indicar con E="2" en caso necesario.
  99+ 9A4D
 100+ 9A4D E5               push hl
 101+ 9A4E C5               push bc
 102+ 9A4F CD 0A 96     	call calcula_tercio
 103+ 9A52 FE 01        	cp 1
 104+ 9A54 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9A56 CD 86 9A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9A59 28 26            jr z,9F
 107+ 9A5B 38 24            jr c,9F
 108+ 9A5D 1E 00        11 ld e,0
 109+ 9A5F 18 22            jr 8F
 110+ 9A61 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9A62 28 07        	jr z, 7F
 112+ 9A64 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9A66 1E 00         	ld e,0
 114+ 9A68 E1           	pop hl
 115+ 9A69 18 04        	jr 4F
 116+ 9A6B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9A6D 18 15            jr 10F
 118+ 9A6F
 119+ 9A6F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9A6F              ; _para indicar con E="2" en caso necesario.
 121+ 9A6F
 122+ 9A6F E5           4 push hl
 123+ 9A70 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9A71 CD 0A 96     	call calcula_tercio
 125+ 9A74 FE 01        	cp 1
 126+ 9A76 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9A78 CD 86 9A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9A7B 28 04            jr z,9F
 129+ 9A7D 30 02            jr nc,9F
 130+ 9A7F 18 02        	jr 8F
 131+ 9A81 1E 02        9 ld e,2
 132+ 9A83 C1           8 pop bc
 133+ 9A84 E1           10 pop hl
 134+ 9A85 C9           5 ret
 135+ 9A86
 136+ 9A86              ; --------------------
 137+ 9A86              ;
 138+ 9A86              ; 25/08/22
 139+ 9A86
 140+ 9A86 CD 0A 96     Comprueba_centro call calcula_tercio
 141+ 9A89 67               ld h,a
 142+ 9A8A 08           	ex af,af
 143+ 9A8B FE 02        	cp 2
 144+ 9A8D 38 07        	jr c,1F
 145+ 9A8F 28 05        	jr z,1F
 146+ 9A91 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9A94 18 03        	jr 2F
 148+ 9A96 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9A99 08           2 ex af,af
 150+ 9A9A A7               and a
 151+ 9A9B ED 42            sbc hl,bc
 152+ 9A9D C9               ret
 153+ 9A9E
 154+ 9A9E              ; *********************************************************************************************************************************************************************************************
 155+ 9A9E              ;
 156+ 9A9E              ;   16/8/22
 157+ 9A9E              ;
 158+ 9A9E              ;	Comprueba_limite_vertical
 159+ 9A9E              ;
 160+ 9A9E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9A9E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9A9E              ;
 163+ 9A9E
 164+ 9A9E 2A FA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9AA1 7D           	ld a,l
 166+ 9AA2 E6 1F        	and $1F
 167+ 9AA4 57           	ld d,a
 168+ 9AA5 3A 0E 8C     	ld a,(Limite_vertical)
 169+ 9AA8 BA           	cp d 											; Límite - Posición.
 170+ 9AA9 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9AAA 3A 09 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9AAD CB 47        	bit 0,a
 173+ 9AAF 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9AB1
 175+ 9AB1              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9AB1
 177+ 9AB1 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9AB2 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9AB4
 180+ 9AB4              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9AB4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9AB4
 183+ 9AB4 3A EB 8B         ld a,(Coordenada_X)
 184+ 9AB7 16 0F            ld d,Centro_izquierda
 185+ 9AB9 A7               and a
 186+ 9ABA 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9ABB 28 1E            jr z,3F
 188+ 9ABD 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9ABF              ;                                                    ; _salimos sin modificar nada.
 190+ 9ABF 18 0E            jr 2F
 191+ 9AC1 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9AC2 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9AC4
 194+ 9AC4              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9AC4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9AC4
 197+ 9AC4 3A EB 8B         ld a,(Coordenada_X)
 198+ 9AC7 16 10            ld d,Centro_derecha
 199+ 9AC9 A7               and a
 200+ 9ACA 92               sub d
 201+ 9ACB 28 0E            jr z,3F
 202+ 9ACD 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9ACF              ;                                                    ; _salimos sin modificar nada.
 204+ 9ACF CB 43        2 bit 0,e
 205+ 9AD1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9AD3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9AD4 CD 68 9B         call Modificaccionne
 208+ 9AD7 C1           	pop bc
 209+ 9AD8 CD 78 9B         call Inicializacion
 210+ 9ADB C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9ADC
 212+ 9ADC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9ADC
 214+ 9ADC C5           4 push bc
 215+ 9ADD 01 F9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9AE0 0A           	ld a,(bc)
 217+ 9AE1 3D           	dec a
 218+ 9AE2 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9AE3 7D           	ld a,l
 220+ 9AE4 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9AE5 CB 47        	bit 0,a
 222+ 9AE7 28 03        	jr z,5F
 223+ 9AE9 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9AEA 18 2E        	jr 7F
 225+ 9AEC
 226+ 9AEC              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9AEC
 228+ 9AEC 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9AED F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9AEE 3A F7 8B     	ld a,(Ctrl_0)
 231+ 9AF1 CB 4F        	bit 1,a
 232+ 9AF3 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9AF5 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9AF6
 235+ 9AF6              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9AF6
 237+ 9AF6 1C               inc e
 238+ 9AF7 1D               dec e
 239+ 9AF8 20 07            jr nz,12F
 240+ 9AFA 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9AFB 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9AFC 22 FA 8B     	ld (Posicion_actual),hl
 243+ 9AFF 18 44        13 jr 9F
 244+ 9B01 CB 43        12 bit 0,e
 245+ 9B03 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9B05              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9B05 C1           	pop bc
 248+ 9B06 18 D3        	jr 3B
 249+ 9B08 80           14 add b
 250+ 9B09 6F               ld l,a
 251+ 9B0A 22 FA 8B     	ld (Posicion_actual),hl
 252+ 9B0D CD 68 9B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9B10 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9B12 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9B14 32 F7 8B         ld (Ctrl_0),a
 256+ 9B17 F1           	pop af
 257+ 9B18 18 2B        	jr 9F
 258+ 9B1A
 259+ 9B1A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9B1A
 261+ 9B1A F5           7 push af
 262+ 9B1B 3A F7 8B     	ld a,(Ctrl_0)
 263+ 9B1E CB 47        	bit 0,a
 264+ 9B20 20 1D        	jr nz,8F
 265+ 9B22 F1           	pop af
 266+ 9B23
 267+ 9B23              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9B23
 269+ 9B23 1C           	inc e
 270+ 9B24 1D               dec e
 271+ 9B25 20 07            jr nz,10F
 272+ 9B27 90           	sub b
 273+ 9B28 6F               ld l,a
 274+ 9B29 22 FA 8B     	ld (Posicion_actual),hl
 275+ 9B2C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9B2E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9B2E CB 43        10 bit 0,e
 278+ 9B30 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9B32              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9B32 C1           	pop bc
 281+ 9B33 18 A6        	jr 3B
 282+ 9B35 90           16 sub b
 283+ 9B36 6F               ld l,a
 284+ 9B37 22 FA 8B     	ld (Posicion_actual),hl
 285+ 9B3A CD 68 9B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9B3D 18 06            jr 9F
 287+ 9B3F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9B41 32 F7 8B         ld (Ctrl_0),a
 289+ 9B44 F1           	pop af
 290+ 9B45 C1           9 pop bc
 291+ 9B46 1E 00        	ld e,0
 292+ 9B48 CD 78 9B         call Inicializacion
 293+ 9B4B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9B4C 08           	ex af,af
 295+ 9B4D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9B4E 18 8B            jr 3B
 297+ 9B50
 298+ 9B50              ; --------------------
 299+ 9B50
 300+ 9B50 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9B52 CD 9B 9C     1 call PreviousScan
 302+ 9B55 10 FB            djnz 1B
 303+ 9B57 22 FA 8B     	ld (Posicion_actual),hl
 304+ 9B5A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9B5B C9           	ret
 306+ 9B5C
 307+ 9B5C              ; --------------------
 308+ 9B5C
 309+ 9B5C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9B5E CD 8C 9C     1 call NextScan
 311+ 9B61 10 FB            djnz 1B
 312+ 9B63 22 FA 8B     	ld (Posicion_actual),hl
 313+ 9B66 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9B67 C9           	ret
 315+ 9B68
 316+ 9B68              ; --------------------
 317+ 9B68              ;
 318+ 9B68              ;	22/01/23
 319+ 9B68              ;
 320+ 9B68              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9B68              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9B68              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9B68
 324+ 9B68
 325+ 9B68              Modificaccionne
 326+ 9B68
 327+ 9B68 3A 09 8C     	ld a,(Cuad_objeto)
 328+ 9B6B FE 02        	cp 2
 329+ 9B6D CC 50 9B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9B70 DC 50 9B         call c,Modifica_Pos_actual
 331+ 9B73 C8           	ret z
 332+ 9B74 CD 5C 9B         call Modifica_Pos_actual2
 333+ 9B77 C9               ret
 334+ 9B78
 335+ 9B78              ; *************************************************************************************************************************************************************************************************
 336+ 9B78              ;
 337+ 9B78              ;	13/8/22
 338+ 9B78              ;
 339+ 9B78              ;	Inicializacion
 340+ 9B78              ;
 341+ 9B78              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9B78              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9B78              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9B78              ;
 345+ 9B78              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9B78              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9B78              ;	_ desaparece/aparece.
 348+ 9B78
 349+ 9B78              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9B78              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9B78              ;
 352+ 9B78              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9B78              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9B78              ; 		   [E] ="0"
 355+ 9B78
 356+ 9B78              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9B78
 358+ 9B78 CD 0A 96     Inicializacion call calcula_tercio
 359+ 9B7B 28 36        	jr z,primit
 360+ 9B7D E6 02        	and 2
 361+ 9B7F 20 07        	jr nz,segmit
 362+ 9B81 7D           	ld a,l
 363+ 9B82 FE 7F        	cp $7f
 364+ 9B84 38 2D        	jr c,primit
 365+ 9B86 28 2B        	jr z,primit
 366+ 9B88 CD EE 9B     segmit call column
 367+ 9B8B 38 13        	jr c,tercuad
 368+ 9B8D 3E 04        cuarcuad ld a,4
 369+ 9B8F 32 09 8C     	ld (Cuad_objeto),a
 370+ 9B92 21 20 48     	ld hl,$4820
 371+ 9B95 22 0C 8C     	ld (Limite_horizontal),hl
 372+ 9B98 21 0E 8C     	ld hl,Limite_vertical
 373+ 9B9B 36 0D        	ld (hl),$0d
 374+ 9B9D 08           	ex af,af
 375+ 9B9E 18 3C        	jr 1F
 376+ 9BA0              tercuad
 377+ 9BA0 3E 03        	ld a,3
 378+ 9BA2 32 09 8C     	ld (Cuad_objeto),a
 379+ 9BA5 21 20 48     	ld hl,$4820
 380+ 9BA8 22 0C 8C     	ld (Limite_horizontal),hl
 381+ 9BAB 21 0E 8C     	ld hl,Limite_vertical
 382+ 9BAE 36 12        	ld (hl),$12
 383+ 9BB0 08           	ex af,af
 384+ 9BB1 18 29        	jr 1F
 385+ 9BB3 CD EE 9B     primit call column
 386+ 9BB6 38 13        	jr c, primcuad
 387+ 9BB8              segcuad
 388+ 9BB8 3E 02        	ld a,2
 389+ 9BBA 32 09 8C     	ld (Cuad_objeto),a
 390+ 9BBD 21 C0 4F     	ld hl,$4fc0
 391+ 9BC0 22 0C 8C     	ld (Limite_horizontal),hl
 392+ 9BC3 21 0E 8C     	ld hl,Limite_vertical
 393+ 9BC6 36 0D        	ld (hl),$0d
 394+ 9BC8 08           	ex af,af
 395+ 9BC9 18 11        	jr 1F
 396+ 9BCB              primcuad
 397+ 9BCB 3E 01        	ld a,1
 398+ 9BCD 32 09 8C     	ld (Cuad_objeto),a
 399+ 9BD0 21 C0 4F     	ld hl,$4fc0
 400+ 9BD3 22 0C 8C     	ld (Limite_horizontal),hl
 401+ 9BD6 21 0E 8C     	ld hl,Limite_vertical
 402+ 9BD9 36 12        	ld (hl),$12
 403+ 9BDB 08           	ex af,af
 404+ 9BDC
 405+ 9BDC C5           1 push bc
 406+ 9BDD E5           	push hl
 407+ 9BDE D5           	push de
 408+ 9BDF
 409+ 9BDF 2A FA 8B     	ld hl,(Posicion_actual)
 410+ 9BE2 CD 28 96     	call Genera_coordenadas
 411+ 9BE5
 412+ 9BE5 D1           	pop de
 413+ 9BE6 E1           	pop hl
 414+ 9BE7 C1           	pop bc
 415+ 9BE8
 416+ 9BE8 21 F7 8B     	ld hl,Ctrl_0
 417+ 9BEB CB EE        	set 5,(hl)
 418+ 9BED C9           	ret
 419+ 9BEE
 420+ 9BEE              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9BEE
 422+ 9BEE              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9BEE              ;
 424+ 9BEE              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9BEE
 426+ 9BEE 7D           column ld a,l
 427+ 9BEF E6 1F        	and $1f
 428+ 9BF1 FE 10         	cp $10
 429+ 9BF3 C9            	ret
 430+ 9BF4
 431+ 9BF4              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9BF4              ;
 433+ 9BF4              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9BF4              ;
 435+ 9BF4              ; 14/12/22
 436+ 9BF4              ;
 437+ 9BF4              ;	Modifica: A y BC.
 438+ 9BF4
 439+ 9BF4 3A 09 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9BF7 E6 01        	and 1
 441+ 9BF9 28 17        	jr z,1F
 442+ 9BFB
 443+ 9BFB              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9BFB
 445+ 9BFB 3A EB 8B     	ld a,(Coordenada_X)
 446+ 9BFE 47           	ld b,a
 447+ 9BFF 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9C00 79           	ld a,c
 449+ 9C01 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9C02 38 08        	jr c,2F
 451+ 9C04 47           	ld b,a
 452+ 9C05 79           	ld a,c
 453+ 9C06 90           	sub b
 454+ 9C07 32 0A 8C     	ld (Columnas),a
 455+ 9C0A 18 1B        	jr 4F
 456+ 9C0C 79           2 ld a,c
 457+ 9C0D 32 0A 8C     	ld (Columnas),a
 458+ 9C10 18 15        	jr 4F
 459+ 9C12
 460+ 9C12              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9C12
 462+ 9C12 3A EB 8B     1 ld a,(Coordenada_X)
 463+ 9C15 81           	add c
 464+ 9C16 3D           	dec a
 465+ 9C17 D6 1F        	sub $1f
 466+ 9C19 38 08        	jr c,3F
 467+ 9C1B 47           	ld b,a
 468+ 9C1C 79           	ld a,c
 469+ 9C1D 90           	sub b
 470+ 9C1E 32 0A 8C     	ld (Columnas),a
 471+ 9C21 18 04        	jr 4F
 472+ 9C23 79           3 ld a,c
 473+ 9C24 32 0A 8C     	ld (Columnas),a
 474+ 9C27 D9           4 exx
 475+ 9C28 4F           	ld c,a
 476+ 9C29 D9           	exx
 477+ 9C2A C9            ret
 478+ 9C2B
 479+ 9C2B              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9C2B              ;
 481+ 9C2B              ;   19/7/23
 482+ 9C2B              ;
 483+ 9C2B              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9C2B              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9C2B              ;
 486+ 9C2B              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9C2B              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9C2B              ;
 489+ 9C2B              ;	DESTRUYE: HL,B Y A.
 490+ 9C2B
 491+ 9C2B 3A 09 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9C2E FE 02        	cp 2
 493+ 9C30 38 18        	jr c,1F
 494+ 9C32 28 16        	jr z,1F
 495+ 9C34 E6 01        	and 1
 496+ 9C36 28 0D        	jr z,3F
 497+ 9C38
 498+ 9C38              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9C38
 500+ 9C38 CD 74 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9C3B
 502+ 9C3B 7D           9 ld a,l
 503+ 9C3C E6 1F        	and $1f
 504+ 9C3E 28 2A        	jr z,7F
 505+ 9C40 2B           	dec hl
 506+ 9C41 10 F8        	djnz 9B
 507+ 9C43 18 25        	jr 7F
 508+ 9C45
 509+ 9C45              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9C45
 511+ 9C45 2A FA 8B     3 ld hl,(Posicion_actual)
 512+ 9C48 18 20        	jr 7F
 513+ 9C4A
 514+ 9C4A 28 14        1 jr z,2F
 515+ 9C4C
 516+ 9C4C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9C4C
 518+ 9C4C CD 74 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9C4F
 520+ 9C4F 7D           4 ld a,l
 521+ 9C50 E6 1F        	and $1f
 522+ 9C52 28 03        	jr z,6F
 523+ 9C54 2B           	dec hl
 524+ 9C55 10 F8        	djnz 4B
 525+ 9C57 06 0F        6 ld b,15
 526+ 9C59 CD 9B 9C     5 call PreviousScan
 527+ 9C5C 10 FB        	djnz 5B
 528+ 9C5E 18 0A        	jr 7F
 529+ 9C60
 530+ 9C60              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9C60
 532+ 9C60 CD 74 9C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9C63 06 0F        	ld b,15
 534+ 9C65 CD 9B 9C     8 call PreviousScan
 535+ 9C68 10 FB        	djnz 8B
 536+ 9C6A
 537+ 9C6A E5           7 push hl
 538+ 9C6B DD E1        	pop ix
 539+ 9C6D
 540+ 9C6D 2A FC 8B     	ld hl,(Puntero_objeto)
 541+ 9C70 E5           	push hl
 542+ 9C71 FD E1        	pop iy
 543+ 9C73
 544+ 9C73 C9           	ret
 545+ 9C74
 546+ 9C74              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9C74              ;
 548+ 9C74              ;	2/1/23
 549+ 9C74              ;
 550+ 9C74              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9C74              ;
 552+ 9C74              ;	Tras esta rutina tenemos:
 553+ 9C74              ;
 554+ 9C74              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9C74              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9C74              ;
 557+ 9C74              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9C74
 559+ 9C74 2A FA 8B     Operandos ld hl,(Posicion_actual)
 560+ 9C77 3A 0A 8C     	ld a,(Columnas)
 561+ 9C7A 3D           	dec a
 562+ 9C7B 20 01        	jr nz,1F
 563+ 9C7D 3C           	inc a
 564+ 9C7E 47           1 ld b,a
 565+ 9C7F C9           	ret
 566+ 9C80
 567+ 9C80              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9C80              ;
 569+ 9C80              ;	Prepara_draw
 570+ 9C80              ;
 571+ 9C80              ;	Es una rutina de carga.
 572+ 9C80              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9C80              ;
 574+ 9C80              ;	FUNCIONAMIENTO:
 575+ 9C80              ;
 576+ 9C80              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9C80              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9C80              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9C80              ;
 580+ 9C80              ;	DESTRUYE:
 581+ 9C80              ;
 582+ 9C80              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9C80
 584+ 9C80 21 F8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9C83 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9C84 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9C85 4E           	ld c,(hl)
 588+ 9C86 2A FA 8B     	ld hl,(Posicion_actual)
 589+ 9C89 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9C8B C9           	ret
 591+ 9C8C
 592+ 9C8C              ;----------------------------------------------------------------------------------------------------------------
 593+ 9C8C              ;
 594+ 9C8C              ;	5/08/22
 595+ 9C8C              ;
 596+ 9C8C              ;   NextScan.
 597+ 9C8C              ;
 598+ 9C8C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9C8C              ;
 600+ 9C8C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9C8C              ;
 602+ 9C8C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9C8C              ;
 604+ 9C8C              ;       DESTRUIDOS: AF y HL !!!
 605+ 9C8C              ;
 606+ 9C8C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9C8C              ;
 608+ 9C8C
 609+ 9C8C 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9C8D 7C               ld a,h
 611+ 9C8E E6 07            and 7
 612+ 9C90 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9C91
 614+ 9C91 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9C92 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9C94 6F               ld l,a
 617+ 9C95 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9C96
 619+ 9C96 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9C97 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9C99 67               ld h,a
 622+ 9C9A C9               ret
 623+ 9C9B
 624+ 9C9B              ;----------------------------------------------------------------------------------------------------------------
 625+ 9C9B              ;
 626+ 9C9B              ;	5/08/22
 627+ 9C9B              ;
 628+ 9C9B              ;   PreviousScan.
 629+ 9C9B              ;
 630+ 9C9B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9C9B              ;
 632+ 9C9B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9C9B              ;
 634+ 9C9B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9C9B              ;
 636+ 9C9B              ;       DESTRUIDOS: AF y HL !!!
 637+ 9C9B              ;
 638+ 9C9B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9C9B              ;
 640+ 9C9B
 641+ 9C9B 7C           PreviousScan ld a,h
 642+ 9C9C 25               dec h               ; Dec H.
 643+ 9C9D E6 07            and 7
 644+ 9C9F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9CA0
 646+ 9CA0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9CA1 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9CA3 6F               ld l,a
 649+ 9CA4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9CA5
 651+ 9CA5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9CA6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9CA8 67               ld h,a
 654+ 9CA9 C9               ret
 655+ 9CAA
 656+ 9CAA
 657+ 9CAA
 658+ 9CAA
 659+ 9CAA
 660+ 9CAA
 661+ 9CAA
 662+ 9CAA
 663+ 9CAA
 664+ 9CAA
 665+ 9CAA
 666+ 9CAA
# file closed: Draw_XOR.asm
2462  9CAA              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9CAA
   2+ 9CAA              ; ******************************************************************************************************************************************************************************************
   3+ 9CAA              ;
   4+ 9CAA              ;   20/05/23
   5+ 9CAA              ;
   6+ 9CAA              ;	Recompone_posicion_inicio
   7+ 9CAA              ;
   8+ 9CAA              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9CAA              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9CAA              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9CAA              ;	_ a una u otra rutina.
  12+ 9CAA
  13+ 9CAA              Recompone_posicion_inicio
  14+ 9CAA
  15+ 9CAA 2A 07 8C     	ld hl,(Posicion_inicio)
  16+ 9CAD 7D           	ld a,l
  17+ 9CAE E6 1F        	and $1f
  18+ 9CB0 28 16        	jr z,1F
  19+ 9CB2
  20+ 9CB2 FE 1F        	cp $1f
  21+ 9CB4 28 0D        	jr z,3F
  22+ 9CB6
  23+ 9CB6 21 F6 8B     	ld hl,Ctrl_2
  24+ 9CB9 CB C6        	set 0,(hl)
  25+ 9CBB 2A FC 8B     	ld hl,(Puntero_objeto)
  26+ 9CBE 22 29 8C     	ld (Repone_puntero_objeto),hl
  27+ 9CC1 18 08        	jr 2F
  28+ 9CC3
  29+ 9CC3 CD 5D 9E     3 call Mov_left
  30+ 9CC6 18 03        	jr 2F
  31+ 9CC8
  32+ 9CC8 CD 44 9D     1 call Mov_right
  33+ 9CCB 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9CCE 22 FC 8B     	ld (Puntero_objeto),hl
  35+ 9CD1 C9           	ret
  36+ 9CD2
  37+ 9CD2              ; ******************************************************************************************************************************************************************************************
  38+ 9CD2              ;
  39+ 9CD2              ;   27/05/23
  40+ 9CD2              ;
  41+ 9CD2              ;	Mov_down
  42+ 9CD2              ;
  43+ 9CD2              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9CD2              ;
  45+ 9CD2              ;
  46+ 9CD2              Mov_down
  47+ 9CD2
  48+ 9CD2 CD 32 9D     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9CD5              ;																	; _ repone (Puntero_objeto).
  50+ 9CD5              ;	ld hl,Ctrl_0
  51+ 9CD5              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9CD5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9CD5              ; 																	; _ en el caso de que no lo haya.
  54+ 9CD5 3A 13 8C     	ld a,(Vel_down)
  55+ 9CD8 47           	ld b,a
  56+ 9CD9 2A FA 8B         ld hl,(Posicion_actual)
  57+ 9CDC CD 0A 96     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9CDF E6 02        	and 2
  59+ 9CE1 28 17        	jr z,1F
  60+ 9CE3
  61+ 9CE3              ; Nos encontramos en el último tercio de pantalla.
  62+ 9CE3              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9CE3
  64+ 9CE3 7C           	ld a,h
  65+ 9CE4 FE 57        	cp $57
  66+ 9CE6 20 12        	jr nz,1F
  67+ 9CE8
  68+ 9CE8 7D           	ld a,l
  69+ 9CE9 C6 20        	add $20
  70+ 9CEB 30 0D        	jr nc,1F
  71+ 9CED
  72+ 9CED              ; ------------------------------
  73+ 9CED              ;
  74+ 9CED              ;	12/01/24
  75+ 9CED
  76+ 9CED              ;	call Reaparece_arriba
  77+ 9CED CD E3 9F     	call Reinicio
  78+ 9CF0
  79+ 9CF0              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9CF0
  81+ 9CF0 3A 62 8C     	ld a,(Ctrl_3)
  82+ 9CF3 CB CF        	set 1,a
  83+ 9CF5 32 62 8C     	ld (Ctrl_3),a
  84+ 9CF8
  85+ 9CF8 18 08        	jr 3F
  86+ 9CFA              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9CFA              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9CFA              ; ------------------------------
  89+ 9CFA
  90+ 9CFA CD 8C 9C     1 call NextScan
  91+ 9CFD 22 FA 8B     	ld (Posicion_actual),hl
  92+ 9D00 10 DA            djnz 2B
  93+ 9D02 CD 28 96     3 call Genera_coordenadas
  94+ 9D05 C9           	ret
  95+ 9D06
  96+ 9D06              ; ******************************************************************************************************************************************************************************************
  97+ 9D06              ;
  98+ 9D06              ;   27/05/23
  99+ 9D06              ;
 100+ 9D06              ;	Mov_up
 101+ 9D06              ;
 102+ 9D06              ; 	Mueve el Sprite hacia arriba.
 103+ 9D06              ;
 104+ 9D06              ;
 105+ 9D06              Mov_up
 106+ 9D06
 107+ 9D06 CD 32 9D     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9D09              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9D09              ;	ld hl,Ctrl_0
 110+ 9D09              ;	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9D09              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9D09              ; 																		; _ en el caso de que no lo haya.
 113+ 9D09 3A 12 8C     	ld a,(Vel_up)
 114+ 9D0C 47           	ld b,a
 115+ 9D0D 2A FA 8B     	ld hl,(Posicion_actual)
 116+ 9D10 CD 0A 96     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9D13 A7           	and a
 118+ 9D14 20 10        	jr nz,1F
 119+ 9D16
 120+ 9D16              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9D16              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9D16
 123+ 9D16 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9D17 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9D19 20 0B            jr nz,1F
 126+ 9D1B 7D               ld a,l
 127+ 9D1C D6 20            sub $20
 128+ 9D1E 30 06            jr nc,1F
 129+ 9D20 25               dec h
 130+ 9D21
 131+ 9D21              ; -----------------------------
 132+ 9D21 CD C4 9F         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9D24              ;	call Reinicio
 134+ 9D24              ; -----------------------------
 135+ 9D24
 136+ 9D24 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9D26 CD 9B 9C     1 call PreviousScan
 138+ 9D29 22 FA 8B     	ld (Posicion_actual),hl
 139+ 9D2C 10 E2            djnz 3B
 140+ 9D2E CD 28 96     2 call Genera_coordenadas
 141+ 9D31 C9           	ret
 142+ 9D32
 143+ 9D32              ; -----------------------------
 144+ 9D32              ;
 145+ 9D32              ;	27/5/23
 146+ 9D32              ;
 147+ 9D32              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9D32              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9D32              ;
 150+ 9D32              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9D32              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9D32              ;
 153+ 9D32              ;	Modifica: A y (Puntero_objeto).
 154+ 9D32
 155+ 9D32 3A F6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9D35 CB 47        	bit 0,a
 157+ 9D37 C8           	ret z
 158+ 9D38 CB 87        	res 0,a
 159+ 9D3A 32 F6 8B     	ld (Ctrl_2),a
 160+ 9D3D 2A 29 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9D40 22 FC 8B     	ld (Puntero_objeto),hl
 162+ 9D43 C9           	ret
 163+ 9D44
 164+ 9D44              ; ******************************************************************************************************************************************************************************************
 165+ 9D44              ;
 166+ 9D44              ;	19/10/22
 167+ 9D44              ;
 168+ 9D44              ;	Mov_right.
 169+ 9D44              ;
 170+ 9D44              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9D44              ;
 172+ 9D44
 173+ 9D44 3A F7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9D47 CB 77        	bit 6,a
 175+ 9D49 28 06        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9D4B
 177+ 9D4B CD 74 9F     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9D4E C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9D4F 18 4F        	jr 8F
 180+ 9D51
 181+ 9D51 3A EB 8B     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 182+ 9D54 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 183+ 9D56 20 48        	jr nz,8F
 184+ 9D58
 185+ 9D58 3A FE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 186+ 9D5B A7           	and a 															; _[3] para continuar con el DESPLZ.
 187+ 9D5C 28 42        	jr z,8F
 188+ 9D5E
 189+ 9D5E              ; ---------- ---------- ----------
 190+ 9D5E              ;
 191+ 9D5E              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 192+ 9D5E
 193+ 9D5E 3A 11 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 194+ 9D61 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 195+ 9D63 28 11        	jr z,1F
 196+ 9D65 38 06        	jr c,6F
 197+ 9D67 FE 04        	cp 4
 198+ 9D69 28 14        	jr z,7F
 199+ 9D6B 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 200+ 9D6D
 201+ 9D6D              ; ---------- ---------- ----------
 202+ 9D6D              ;
 203+ 9D6D              ; Perfiles de velocidad
 204+ 9D6D              ;
 205+ 9D6D
 206+ 9D6D 3A FE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 207+ 9D70 FE FE        	cp $fe
 208+ 9D72 38 2C        	jr c,8F
 209+ 9D74 18 10        	jr 3F
 210+ 9D76
 211+ 9D76 3A FE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 212+ 9D79 FE FD        	cp $fd
 213+ 9D7B 38 23        	jr c,8F
 214+ 9D7D 18 07        	jr 3F
 215+ 9D7F
 216+ 9D7F 3A FE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 217+ 9D82 FE FB        	cp $fb
 218+ 9D84 38 1A        	jr c,8F
 219+ 9D86
 220+ 9D86              ; ---------- ---------- ----------
 221+ 9D86
 222+ 9D86              3
 223+ 9D86 CD B2 9F     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 224+ 9D89 CD DA 99     	call Draw
 225+ 9D8C
 226+ 9D8C              ; 	debug !!!!!!!!!!!!!!!!!!!
 227+ 9D8C
 228+ 9D8C              ;	Puntero_de_impresion $8bef ..... $0000 ..... $4780
 229+ 9D8C              ;	Columns $8bf9 	  		   ..... 3	   ..... 3
 230+ 9D8C              ;	Posicion_actual $8bfa	   ..... $46c0 ..... $46c0
 231+ 9D8C              ;	CTRL_DESPLZ $8bfe		   ..... $fe   ..... $fe
 232+ 9D8C              ;	Puntero_objeto $8bfc	   ..... $8690 ..... $8690
 233+ 9D8C              ;	Puntero_DESPLZ_der $8c03   ..... $853e ..... $853e
 234+ 9D8C              ;	Puntero_DESPLZ_izq $8c05   ..... $8390 ..... $8390
 235+ 9D8C              ;	Cuad_objeto $8c09		   ..... 2	   ..... 1								; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 236+ 9D8C              ;	Columnas $8c0a			   ..... 1     ..... 1
 237+ 9D8C              ;	Columnitas $8c0b		   ..... 1	   ..... 1
 238+ 9D8C              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df74
 239+ 9D8C
 240+ 9D8C              ;	jr $
 241+ 9D8C
 242+ 9D8C              ;	call Reinicio
 243+ 9D8C
 244+ 9D8C              ; ---------- ---------- ----------
 245+ 9D8C              ;
 246+ 9D8C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 247+ 9D8C
 248+ 9D8C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 249+ 9D8E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 250+ 9D8F CD A7 9D     	call DESPLZ_DER
 251+ 9D92 C1           	pop bc
 252+ 9D93 10 F9        	djnz 5B
 253+ 9D95 2A FA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 254+ 9D98 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 255+ 9D99 22 FA 8B     	ld (Posicion_actual),hl
 256+ 9D9C CD 28 96     	call Genera_coordenadas
 257+ 9D9F
 258+ 9D9F              ; 	debug !!!!!!!!!!!!!!!!!!!
 259+ 9D9F
 260+ 9D9F              ;	Puntero_de_impresion $8bef ..... $0000 ..... $4780 ..... $4780
 261+ 9D9F              ;	Columns $8bf9 	  		   ..... 3	   ..... 3	   ..... 3
 262+ 9D9F              ;	Posicion_actual $8bfa	   ..... $46c0 ..... $46c0 ..... $46c0
 263+ 9D9F              ;	CTRL_DESPLZ $8bfe		   ..... $fe   ..... $fe   ..... $fa
 264+ 9D9F              ;	Puntero_objeto $8bfc	   ..... $8690 ..... $8690 ..... $85d0
 265+ 9D9F              ;	Puntero_DESPLZ_der $8c03   ..... $853e ..... $853e ..... $8536
 266+ 9D9F              ;	Puntero_DESPLZ_izq $8c05   ..... $8390 ..... $8390 ..... $8398
 267+ 9D9F              ;	Cuad_objeto $8c09		   ..... 2	   ..... 1	   ..... 1						; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 268+ 9D9F              ;	Columnas $8c0a			   ..... 1     ..... 1     ..... 1
 269+ 9D9F              ;	Columnitas $8c0b		   ..... 1	   ..... 1     ..... 1
 270+ 9D9F              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df74 ..... $df74
 271+ 9D9F
 272+ 9D9F C9           	ret
 273+ 9DA0
 274+ 9DA0              ; ---------- ---------- ---------
 275+ 9DA0
 276+ 9DA0 2A FA 8B     8 ld hl,(Posicion_actual)
 277+ 9DA3 CD A7 9D     	call DESPLZ_DER
 278+ 9DA6 C9           2 ret
 279+ 9DA7
 280+ 9DA7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 281+ 9DA7              ;
 282+ 9DA7              ;	22/9/22
 283+ 9DA7              ;
 284+ 9DA7
 285+ 9DA7 CD B6 9D     DESPLZ_DER call Desplaza_derecha
 286+ 9DAA CD 02 9E         call modifica_parametros_1er_DESPLZ_2
 287+ 9DAD CD 2B 9E         call Ciclo_completo
 288+ 9DB0 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 289+ 9DB3 CB FE        	set 7,(hl)
 290+ 9DB5 C9           	ret
 291+ 9DB6
 292+ 9DB6              ; ******************************************************************************************************************************************************************************************
 293+ 9DB6              ;
 294+ 9DB6              ;	30/01/25
 295+ 9DB6              ;
 296+ 9DB6              ;	Sitúa (Puntero_objeto) y los punteros de desplazamiento correspondientes: (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq) en función de la velocidad del desplazamiento, (Vel_right).
 297+ 9DB6              ;
 298+ 9DB6              ;	OUTPUT: (Puntero_objeto).
 299+ 9DB6              ;			(Puntero_DESPLZ_der).
 300+ 9DB6              ;			(Puntero_DESPLZ_izq).
 301+ 9DB6
 302+ 9DB6 3A 11 8C     Desplaza_derecha ld a,(Vel_right)
 303+ 9DB9 47           	ld b,a
 304+ 9DBA 2A 03 8C     	ld hl,(Puntero_DESPLZ_der)
 305+ 9DBD 23           1 inc hl
 306+ 9DBE 23           	inc hl
 307+ 9DBF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 308+ 9DC1 22 03 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 309+ 9DC4 CD E3 91     	call Extrae_address
 310+ 9DC7 22 FC 8B     	ld (Puntero_objeto),hl
 311+ 9DCA
 312+ 9DCA              ; Modifica (Puntero_DESPLZ_izq).
 313+ 9DCA
 314+ 9DCA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 315+ 9DCA              ; Cuántos movimientos hemos hecho ??
 316+ 9DCA              ; DE contiene (Puntero_DESPLZ_der).
 317+ 9DCA
 318+ 9DCA 2A FF 8B     7 ld hl,(Indice_Sprite_der)
 319+ 9DCD EB           	ex de,hl
 320+ 9DCE A7           	and a
 321+ 9DCF ED 52        	sbc hl,de
 322+ 9DD1 CB 3D        	srl l
 323+ 9DD3 3E 08        6 ld a,8
 324+ 9DD5 95           	sub l
 325+ 9DD6 30 1E        	jr nc,3F
 326+ 9DD8
 327+ 9DD8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 328+ 9DD8              ; B="0".
 329+ 9DD8
 330+ 9DD8 04           4 inc b
 331+ 9DD9 3C           	inc a
 332+ 9DDA 20 FC        	jr nz,4B
 333+ 9DDC 78           	ld a,b
 334+ 9DDD 08           	ex af,af
 335+ 9DDE 2A FF 8B     	ld hl,(Indice_Sprite_der)
 336+ 9DE1 23           5 inc hl
 337+ 9DE2 23           	inc hl
 338+ 9DE3 10 FC        	djnz 5B
 339+ 9DE5 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 340+ 9DE8 CD E3 91     	call Extrae_address
 341+ 9DEB 22 FC 8B     	ld (Puntero_objeto),hl
 342+ 9DEE
 343+ 9DEE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 344+ 9DEE              ; _(Posicion_actual).
 345+ 9DEE
 346+ 9DEE 21 FA 8B     	ld hl,Posicion_actual
 347+ 9DF1 34           	inc (hl)
 348+ 9DF2 08               ex af,af
 349+ 9DF3 6F           	ld l,a
 350+ 9DF4 18 DD        	jr 6B
 351+ 9DF6
 352+ 9DF6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 353+ 9DF6
 354+ 9DF6 47           3 ld b,a
 355+ 9DF7 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 356+ 9DFA 23           2 inc hl
 357+ 9DFB 23           	inc hl
 358+ 9DFC 10 FC        	djnz 2B
 359+ 9DFE 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 360+ 9E01 C9           8 ret
 361+ 9E02
 362+ 9E02              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 363+ 9E02              ;
 364+ 9E02              ;	24/7/22
 365+ 9E02              ;
 366+ 9E02              ;	modifica_parametros_1er_DESPLZ_2
 367+ 9E02              ;
 368+ 9E02              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 369+ 9E02              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 370+ 9E02              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 371+ 9E02
 372+ 9E02 3A FE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 373+ 9E05 A7           	and a
 374+ 9E06 20 1F        	jr nz,1F
 375+ 9E08 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 376+ 9E0A 32 FE 8B         ld (CTRL_DESPLZ),a
 377+ 9E0D
 378+ 9E0D 21 F9 8B     	ld hl,Columns
 379+ 9E10 34           	inc (hl)
 380+ 9E11
 381+ 9E11 3A 09 8C     	ld a,(Cuad_objeto)
 382+ 9E14 E6 01        	and 1
 383+ 9E16 28 0F        	jr z,1F
 384+ 9E18
 385+ 9E18 2A FA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 386+ 9E1B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 387+ 9E1C 22 FA 8B     	ld (Posicion_actual),hl
 388+ 9E1F
 389+ 9E1F CD 28 96     	call Genera_coordenadas
 390+ 9E22
 391+ 9E22 CD 80 9F     	call Inc_CTRL_DESPLZ
 392+ 9E25 18 03        	jr 2F
 393+ 9E27 CD 80 9F     1 call Inc_CTRL_DESPLZ
 394+ 9E2A C9           2 ret
 395+ 9E2B
 396+ 9E2B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 397+ 9E2B              ;
 398+ 9E2B              ;	30/01/25
 399+ 9E2B              ;
 400+ 9E2B              ;	Ciclo_completo.
 401+ 9E2B              ;
 402+ 9E2B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 403+ 9E2B              ;
 404+ 9E2B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 405+ 9E2B              ; 	Decrementamos (Columns).
 406+ 9E2B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 407+ 9E2B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 408+ 9E2B
 409+ 9E2B
 410+ 9E2B 3A FE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 411+ 9E2E FE FF        	cp $ff
 412+ 9E30 28 0E        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 413+ 9E32 E6 F0        	and $f0
 414+ 9E34 C0           	ret nz
 415+ 9E35
 416+ 9E35              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 417+ 9E35
 418+ 9E35 3A FE 8B     	ld a,(CTRL_DESPLZ)
 419+ 9E38 47           	ld b,a
 420+ 9E39 3E F8        	ld a,$f8
 421+ 9E3B 80           	add b
 422+ 9E3C 32 FE 8B     	ld (CTRL_DESPLZ),a
 423+ 9E3F C9           	ret
 424+ 9E40
 425+ 9E40 21 F9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 426+ 9E43 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 427+ 9E44 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 428+ 9E45 32 FE 8B     	ld (CTRL_DESPLZ),a
 429+ 9E48
 430+ 9E48 3A 09 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 431+ 9E4B E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 432+ 9E4D 20 0A        	jr nz,2F
 433+ 9E4F
 434+ 9E4F 2A FA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 435+ 9E52 23           	inc hl
 436+ 9E53 22 FA 8B     	ld (Posicion_actual),hl
 437+ 9E56 CD 28 96     	call Genera_coordenadas
 438+ 9E59
 439+ 9E59              ; Inicia el puntero de Sprite.
 440+ 9E59
 441+ 9E59 CD F8 91     2 call Inicia_puntero_objeto_der
 442+ 9E5C C9           	ret
 443+ 9E5D
 444+ 9E5D              ; ******************************************************************************************************************************************************************************************
 445+ 9E5D              ;
 446+ 9E5D              ;	15/02/23
 447+ 9E5D              ;
 448+ 9E5D              ;	Mov_left.
 449+ 9E5D              ;
 450+ 9E5D              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 451+ 9E5D              ;
 452+ 9E5D              Mov_left
 453+ 9E5D
 454+ 9E5D              ;	ld hl,Ctrl_0
 455+ 9E5D              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 456+ 9E5D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 457+ 9E5D              ; 																	; _ en el caso de que no lo haya.
 458+ 9E5D 3A F7 8B     	ld a,(Ctrl_0)
 459+ 9E60 CB 77        	bit 6,a
 460+ 9E62 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 461+ 9E64
 462+ 9E64 CD 7A 9F     	call Stop_Amadeus_left
 463+ 9E67 C8           	ret z
 464+ 9E68 20 4A        	jr nz,8F
 465+ 9E6A
 466+ 9E6A 3A EB 8B     11 ld a,(Coordenada_X)
 467+ 9E6D A7           	and a
 468+ 9E6E 20 44        	jr nz,8F
 469+ 9E70
 470+ 9E70 3A FE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 471+ 9E73 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 472+ 9E74 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 473+ 9E76
 474+ 9E76              ; ---------- ---------- ----------
 475+ 9E76
 476+ 9E76 3A 10 8C     	ld a,(Vel_left)
 477+ 9E79 FE 02        	cp 2
 478+ 9E7B 28 0F        	jr z,1F
 479+ 9E7D 38 04        	jr c,6F
 480+ 9E7F FE 04        	cp 4
 481+ 9E81 28 12        	jr z,7F
 482+ 9E83
 483+ 9E83              ; ---------- ---------- ----------
 484+ 9E83
 485+ 9E83 3A FE 8B     6 ld a,(CTRL_DESPLZ)
 486+ 9E86 FE F8        	cp $f8
 487+ 9E88 20 2A        	jr nz,8F
 488+ 9E8A 18 10        	jr 4F
 489+ 9E8C 3A FE 8B     1 ld a,(CTRL_DESPLZ)
 490+ 9E8F FE F9        	cp $f9
 491+ 9E91 20 21        	jr nz,8F
 492+ 9E93 18 07        	jr 4F
 493+ 9E95 3A FE 8B     7 ld a,(CTRL_DESPLZ)
 494+ 9E98 FE FB        	cp $fb
 495+ 9E9A 20 18        	jr nz,8F
 496+ 9E9C
 497+ 9E9C              ; ---------- ---------- ----------
 498+ 9E9C
 499+ 9E9C              4
 500+ 9E9C CD A0 9F     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 501+ 9E9F              ;	call Reinicio
 502+ 9E9F
 503+ 9E9F              ; ---------- ---------- ----------
 504+ 9E9F
 505+ 9E9F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 506+ 9EA1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 507+ 9EA2
 508+ 9EA2              ;	ld hl,(Indice_Sprite_izq)
 509+ 9EA2              ;	ld (Puntero_DESPLZ_izq),hl
 510+ 9EA2
 511+ 9EA2 CD BB 9E     	call DESPLZ_IZQ
 512+ 9EA5 C1           	pop bc
 513+ 9EA6 10 F9        	djnz 5B
 514+ 9EA8 2A FA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 515+ 9EAB 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 516+ 9EAC 22 FA 8B     	ld (Posicion_actual),hl
 517+ 9EAF CD 28 96     	call Genera_coordenadas
 518+ 9EB2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 519+ 9EB4
 520+ 9EB4              ; ---------- ---------- ----------
 521+ 9EB4
 522+ 9EB4              ; Movemos, no hay recolocación.
 523+ 9EB4
 524+ 9EB4 2A FA 8B     8 ld hl,(Posicion_actual)
 525+ 9EB7 CD BB 9E     	call DESPLZ_IZQ
 526+ 9EBA C9           2 ret
 527+ 9EBB
 528+ 9EBB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 529+ 9EBB              ;
 530+ 9EBB              ;	22/9/22
 531+ 9EBB
 532+ 9EBB              DESPLZ_IZQ
 533+ 9EBB
 534+ 9EBB CD CA 9E     	call Desplaza_izquierda
 535+ 9EBE CD 16 9F         call modifica_parametros_1er_DESPLZ
 536+ 9EC1 CD 3E 9F     	call Ciclo_completo_2
 537+ 9EC4 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 538+ 9EC7 CB BE        	res 7,(hl)
 539+ 9EC9 C9           	ret
 540+ 9ECA
 541+ 9ECA              Desplaza_izquierda
 542+ 9ECA
 543+ 9ECA 3A 10 8C     	ld a,(Vel_left)
 544+ 9ECD 47           	ld b,a
 545+ 9ECE 2A 05 8C     	ld hl,(Puntero_DESPLZ_izq)
 546+ 9ED1 23           1 inc hl
 547+ 9ED2 23           	inc hl
 548+ 9ED3 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 549+ 9ED5 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 550+ 9ED8 CD E3 91     	call Extrae_address
 551+ 9EDB 22 FC 8B     	ld (Puntero_objeto),hl
 552+ 9EDE
 553+ 9EDE              ; Modifica (Puntero_DESPLZ_der).
 554+ 9EDE
 555+ 9EDE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 556+ 9EDE              ; Cuántos movimientos hemos hecho ??
 557+ 9EDE              ; DE contiene (Puntero_DESPLZ_izq).
 558+ 9EDE
 559+ 9EDE 2A 01 8C     7 ld hl,(Indice_Sprite_izq)
 560+ 9EE1 EB           	ex de,hl
 561+ 9EE2 A7           	and a
 562+ 9EE3 ED 52        	sbc hl,de
 563+ 9EE5 CB 3D        	srl l
 564+ 9EE7 3E 08        6 ld a,8
 565+ 9EE9 95           	sub l
 566+ 9EEA 30 1E        	jr nc,3F
 567+ 9EEC
 568+ 9EEC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 569+ 9EEC              ; B="0".
 570+ 9EEC
 571+ 9EEC 04           4 inc b
 572+ 9EED 3C           	inc a
 573+ 9EEE 20 FC        	jr nz,4B
 574+ 9EF0 78           	ld a,b
 575+ 9EF1 08           	ex af,af
 576+ 9EF2 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 577+ 9EF5 23           5 inc hl
 578+ 9EF6 23           	inc hl
 579+ 9EF7 10 FC        	djnz 5B
 580+ 9EF9 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 581+ 9EFC CD E3 91     	call Extrae_address
 582+ 9EFF 22 FC 8B     	ld (Puntero_objeto),hl
 583+ 9F02
 584+ 9F02              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 585+ 9F02              ; _(Posicion_actual).
 586+ 9F02
 587+ 9F02 21 FA 8B     	ld hl,Posicion_actual
 588+ 9F05 35           	dec (hl)
 589+ 9F06 08           	ex af,af
 590+ 9F07 6F           	ld l,a
 591+ 9F08 18 DD        	jr 6B
 592+ 9F0A
 593+ 9F0A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 594+ 9F0A
 595+ 9F0A 47           3 ld b,a
 596+ 9F0B 2A FF 8B     	ld hl,(Indice_Sprite_der)
 597+ 9F0E 23           2 inc hl
 598+ 9F0F 23           	inc hl
 599+ 9F10 10 FC        	djnz 2B
 600+ 9F12 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 601+ 9F15 C9           8 ret
 602+ 9F16
 603+ 9F16              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 604+ 9F16              ;
 605+ 9F16              ;	modifica_parametros_1er_DESPLZ
 606+ 9F16              ;
 607+ 9F16              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 608+ 9F16              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 609+ 9F16              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 610+ 9F16
 611+ 9F16 3A FE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 612+ 9F19 A7           	and a
 613+ 9F1A 20 1E        	jr nz,1F
 614+ 9F1C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 615+ 9F1D 32 FE 8B         ld (CTRL_DESPLZ),a
 616+ 9F20 21 F9 8B     	ld hl,Columns
 617+ 9F23 34           	inc (hl)
 618+ 9F24 3A 09 8C     	ld a,(Cuad_objeto)
 619+ 9F27 E6 01        	and 1
 620+ 9F29 20 0F        	jr nz,1F
 621+ 9F2B 2A FA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 622+ 9F2E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 623+ 9F2F 22 FA 8B     	ld (Posicion_actual),hl
 624+ 9F32 CD 28 96     	call Genera_coordenadas
 625+ 9F35 CD 90 9F     	call Dec_CTRL_DESPLZ
 626+ 9F38 18 03        	jr 2F
 627+ 9F3A CD 90 9F     1 call Dec_CTRL_DESPLZ
 628+ 9F3D C9           2 ret
 629+ 9F3E
 630+ 9F3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 631+ 9F3E
 632+ 9F3E 3A FE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 633+ 9F41 FE F7        	cp $f7
 634+ 9F43 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 635+ 9F45 30 2C        	jr nc,3F
 636+ 9F47
 637+ 9F47              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 638+ 9F47
 639+ 9F47 06 00        	ld b,0
 640+ 9F49 04           4 inc b
 641+ 9F4A 3C           	inc a
 642+ 9F4B FE F7        	cp $f7
 643+ 9F4D 20 FA        	jr nz,4B
 644+ 9F4F 3E FF        	ld a,$ff
 645+ 9F51 90           	sub b
 646+ 9F52 32 FE 8B     	ld (CTRL_DESPLZ),a
 647+ 9F55 18 1C        	jr 3F
 648+ 9F57
 649+ 9F57              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 650+ 9F57
 651+ 9F57 21 F9 8B     1 ld hl,Columns
 652+ 9F5A 35           	dec (hl)
 653+ 9F5B AF           	xor a
 654+ 9F5C 32 FE 8B     	ld (CTRL_DESPLZ),a
 655+ 9F5F 3A 09 8C     	ld a,(Cuad_objeto)
 656+ 9F62 E6 01        	and 1
 657+ 9F64 28 0A        	jr z,2F
 658+ 9F66 2A FA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 659+ 9F69 2B           	dec hl
 660+ 9F6A 22 FA 8B     	ld (Posicion_actual),hl
 661+ 9F6D CD 28 96     	call Genera_coordenadas
 662+ 9F70
 663+ 9F70              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 664+ 9F70
 665+ 9F70 CD 0B 92     2 call Inicia_puntero_objeto_izq
 666+ 9F73 C9           3 ret
 667+ 9F74
 668+ 9F74              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 9F74              ;
 670+ 9F74              ;	19/10/22
 671+ 9F74              ;
 672+ 9F74              ;	(cp 29) para un Amadeus de 3 Columns.
 673+ 9F74              ;	(cp 30)   ""  ""    ""     2 Columns.
 674+ 9F74
 675+ 9F74 3A EB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 676+ 9F77 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 677+ 9F79 C9           	ret
 678+ 9F7A
 679+ 9F7A              ; ---------- ---------- ---------- ---------- ---------- ----------
 680+ 9F7A              ;
 681+ 9F7A              ;	19/10/22
 682+ 9F7A              ;
 683+ 9F7A              ;	(cp 2) para un Amadeus de 3 Columns.
 684+ 9F7A              ;	(cp 1)   ""  ""    ""     2 Columns.
 685+ 9F7A
 686+ 9F7A 3A EB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 687+ 9F7D FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 688+ 9F7F C9           	ret
 689+ 9F80
 690+ 9F80              ; ---------- ---------- ---------- ---------- ---------- ----------
 691+ 9F80              ;
 692+ 9F80              ;	30/1/25
 693+ 9F80              ;
 694+ 9F80              ;	Inc_CTRL_DESPLZ
 695+ 9F80              ;
 696+ 9F80              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 697+ 9F80
 698+ 9F80 21 FE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 699+ 9F83 3A 11 8C     	ld a,(Vel_right)
 700+ 9F86 A7           	and a
 701+ 9F87 28 05        	jr z,1F
 702+ 9F89 47           	ld b,a
 703+ 9F8A
 704+ 9F8A 34           3 inc (hl)
 705+ 9F8B 10 FD        	djnz 3B
 706+ 9F8D C9           	ret
 707+ 9F8E
 708+ 9F8E 34           1 inc (hl)
 709+ 9F8F C9           	ret
 710+ 9F90
 711+ 9F90              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9F90              ;
 713+ 9F90              ;	30/1/25
 714+ 9F90              ;
 715+ 9F90              ;	Dec_CTRL_DESPLZ
 716+ 9F90              ;
 717+ 9F90              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 718+ 9F90
 719+ 9F90 21 FE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 720+ 9F93 3A 10 8C     	ld a,(Vel_left)
 721+ 9F96 A7           	and a
 722+ 9F97 28 05        	jr z,1F
 723+ 9F99 47           	ld b,a
 724+ 9F9A
 725+ 9F9A 35           3 dec (hl)
 726+ 9F9B 10 FD        	djnz 3B
 727+ 9F9D C9           	ret
 728+ 9F9E
 729+ 9F9E 35           1 dec (hl)
 730+ 9F9F C9           	ret
 731+ 9FA0
 732+ 9FA0              ; ---------- ---------- ---------- ---------- ---------- ----------
 733+ 9FA0
 734+ 9FA0 2A FA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 735+ 9FA3 01 1F 00     	ld bc,31
 736+ 9FA6 A7           	and a
 737+ 9FA7 ED 4A        	adc hl,bc
 738+ 9FA9 22 FA 8B     	ld (Posicion_actual),hl
 739+ 9FAC 21 F7 8B     	ld hl,Ctrl_0														; $xxx1
 740+ 9FAF CB C6        	set 0,(hl)
 741+ 9FB1 C9           	ret
 742+ 9FB2
 743+ 9FB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 744+ 9FB2
 745+ 9FB2              Reaparece_izquierda
 746+ 9FB2
 747+ 9FB2 2A FA 8B     	ld hl,(Posicion_actual)
 748+ 9FB5 01 1F 00     	ld bc,31
 749+ 9FB8 A7           	and a
 750+ 9FB9 ED 42        	sbc hl,bc
 751+ 9FBB 22 FA 8B     	ld (Posicion_actual),hl 											; $xx1x
 752+ 9FBE 21 F7 8B     	ld hl,Ctrl_0
 753+ 9FC1 CB CE        	set 1,(hl)
 754+ 9FC3 C9           	ret
 755+ 9FC4
 756+ 9FC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 757+ 9FC4
 758+ 9FC4 24           Reaparece_abajo inc h
 759+ 9FC5 01 E0 17     	ld bc,$17e0
 760+ 9FC8 A7           	and a
 761+ 9FC9 ED 4A        	adc hl,bc
 762+ 9FCB 22 FA 8B     	ld (Posicion_actual),hl
 763+ 9FCE 21 F7 8B     	ld hl,Ctrl_0
 764+ 9FD1 CB D6        	set 2,(hl)
 765+ 9FD3 C9           	ret
 766+ 9FD4
 767+ 9FD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 768+ 9FD4
 769+ 9FD4 01 E0 17     Reaparece_arriba ld bc,$17e0
 770+ 9FD7 A7           	and a
 771+ 9FD8 ED 42        	sbc hl,bc
 772+ 9FDA 22 FA 8B     	ld (Posicion_actual),hl
 773+ 9FDD 21 F7 8B     	ld hl,Ctrl_0
 774+ 9FE0 CB DE        	set 3,(hl)
 775+ 9FE2 C9           	ret
 776+ 9FE3
 777+ 9FE3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 778+ 9FE3              ;
 779+ 9FE3              ;	15/07/23
 780+ 9FE3
 781+ 9FE3              Reinicio
 782+ 9FE3
 783+ 9FE3              ; Vamos a reiniciar los punteros y variables de movimiento.
 784+ 9FE3
 785+ 9FE3 AF           	xor a
 786+ 9FE4 21 20 8C     	ld hl,Puntero_indice_mov_bucle
 787+ 9FE7 CD 05 A0     	call Limpia_contenido_hl
 788+ 9FEA
 789+ 9FEA 21 FA 8B     	ld hl,Posicion_actual
 790+ 9FED CD 05 A0     	call Limpia_contenido_hl
 791+ 9FF0
 792+ 9FF0 CD 93 94     	call Situa_Puntero_indice_mov
 793+ 9FF3 CD 04 A1     	call Inicia_Puntero_mov
 794+ 9FF6
 795+ 9FF6 21 22 8C     	ld hl,Incrementa_puntero
 796+ 9FF9 06 05        	ld b,5
 797+ 9FFB 77           1 ld (hl),a
 798+ 9FFC 23           	inc hl
 799+ 9FFD 10 FC        	djnz 1B
 800+ 9FFF
 801+ 9FFF 21 F6 8B     	ld hl,Ctrl_2
 802+ A002 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 803+ A004
 804+ A004 C9           	ret
 805+ A005
 806+ A005 77           Limpia_contenido_hl	ld (hl),a
 807+ A006 23           	inc hl
 808+ A007 77           	ld (hl),a
 809+ A008 C9           	ret
 810+ A009
 811+ A009              ; ----------------------------------------------------------------------------------------------------------------
 812+ A009              ;
 813+ A009              ;	18/6/24
 814+ A009              ;
 815+ A009
 816+ A009              Amadeus_a_izquierda
 817+ A009
 818+ A009              ;	Actualiza contador de movimientos.
 819+ A009
 820+ A009 21 BD 89     	ld hl,Comm_Amadeus
 821+ A00C 35           	dec (hl)
 822+ A00D 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 823+ A00F
 824+ A00F 2A BB 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 825+ A012 2B           	dec hl
 826+ A013 2B           	dec hl
 827+ A014 2B           	dec hl
 828+ A015 2B           	dec hl
 829+ A016 22 BB 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 830+ A019
 831+ A019 21 62 8C     	ld hl,Ctrl_3
 832+ A01C CB EE        	set 5,(hl)
 833+ A01E
 834+ A01E C9           	ret
 835+ A01F
 836+ A01F 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 837+ A020 C9           	ret
 838+ A021
 839+ A021
 840+ A021              Amadeus_a_derecha
 841+ A021
 842+ A021              ;	Actualiza contador de movimientos.
 843+ A021
 844+ A021 21 BD 89     	ld hl,Comm_Amadeus
 845+ A024 34           	inc (hl)
 846+ A025 3E 7A        	ld a,$7a
 847+ A027 BE           	cp (hl)
 848+ A028 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 849+ A02A
 850+ A02A 2A BB 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 851+ A02D 23           	inc hl
 852+ A02E 23           	inc hl
 853+ A02F 23           	inc hl
 854+ A030 23           	inc hl
 855+ A031 22 BB 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 856+ A034
 857+ A034 21 62 8C     	ld hl,Ctrl_3
 858+ A037 CB EE        	set 5,(hl)
 859+ A039 C9           	ret
 860+ A03A
 861+ A03A 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 862+ A03B C9           	ret
# file closed: Direcciones.asm
2463  A03C              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ A03C              ; ----- ----- ----- ----- -----
   2+ A03C              ;
   3+ A03C              ;   28/12/23
   4+ A03C
   5+ A03C              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
   6+ A03C
   7+ A03C              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
   8+ A03C
   9+ A03C              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  10+ A03C              ;                               Izquierda_y_subiendo+8 (11)
  11+ A03C              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  12+ A03C              ;                               Izquierda_y_subiendo+8 (8)
  13+ A03C              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  14+ A03C              ;                               Izquierda_y_subiendo+8 (8)
  15+ A03C              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  16+ A03C              ;                               Izquierda_y_subiendo+8 (8)
  17+ A03C              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  18+ A03C              ;                               Izquierda_y_subiendo+8 (8)
  19+ A03C              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  20+ A03C              ;                               Izquierda_y_subiendo+8 (7)
  21+ A03C              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  22+ A03C              ;                               Izquierda_y_subiendo+8 (7)
  23+ A03C              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  24+ A03C              ;                               Izquierda_y_subiendo+8 (7)
  25+ A03C              Movimiento
  26+ A03C
  27+ A03C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
  28+ A03C
  29+ A03C 3A F6 8B         ld a,(Ctrl_2)
  30+ A03F CB 57            bit 2,a
  31+ A041 20 1B            jr nz, Desplazamiento_iniciado
  32+ A043
  33+ A043 2A 1E 8C         ld hl,(Puntero_mov)
  34+ A046 7E               ld a,(hl)
  35+ A047
  36+ A047              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  37+ A047
  38+ A047              Inicia_desplazamiento.
  39+ A047
  40+ A047              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  41+ A047
  42+ A047 CD 3A A1         call Ajusta_velocidad_desplazamiento
  43+ A04A
  44+ A04A              ; Iniciamos (Repetimos_mov).
  45+ A04A
  46+ A04A 7E               ld a,(hl)
  47+ A04B E6 0F            and $0f
  48+ A04D 32 24 8C         ld (Repetimos_desplazamiento),a
  49+ A050 32 25 8C         ld (Repetimos_desplazamiento_backup),a
  50+ A053
  51+ A053              ; Iniciamos (Cola_de_desplazamiento).
  52+ A053
  53+ A053 23               inc hl
  54+ A054 7E               ld a,(hl)
  55+ A055 32 27 8C         ld (Cola_de_desplazamiento),a
  56+ A058 2B               dec hl
  57+ A059
  58+ A059 21 F6 8B         ld hl,Ctrl_2
  59+ A05C CB D6            set 2,(hl)
  60+ A05E
  61+ A05E              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  62+ A05E              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  63+ A05E
  64+ A05E              Desplazamiento_iniciado
  65+ A05E
  66+ A05E CD 0E A1         call Aplica_desplazamiento
  67+ A061
  68+ A061              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  69+ A061
  70+ A061 3A 62 8C         ld a,(Ctrl_3)
  71+ A064 CB 4F            bit 1,a
  72+ A066 C0               ret nz
  73+ A067
  74+ A067 21 24 8C     3 ld hl,Repetimos_desplazamiento
  75+ A06A 35               dec (hl)
  76+ A06B C0               ret nz
  77+ A06C
  78+ A06C              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  79+ A06C              ; Hay que volver a ejecutar este desplazamiento ???.
  80+ A06C              ; Analiza (Cola_de_desplazamiento).
  81+ A06C
  82+ A06C 3A 27 8C     Cola ld a,(Cola_de_desplazamiento)
  83+ A06F A7               and a
  84+ A070 CC 63 A1         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  85+ A073 28 30            jr z,Reinicia_el_movimiento
  86+ A075
  87+ A075 FE FF            cp $ff
  88+ A077 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  89+ A079
  90+ A079 FE FE            cp $fe
  91+ A07B CC E8 A0         call z,Fijamos_bucle
  92+ A07E 28 25            jr z,Reinicia_el_movimiento
  93+ A080
  94+ A080 FE FD            cp $fd
  95+ A082 20 11            jr nz,1F
  96+ A084
  97+ A084              ; ---
  98+ A084              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  99+ A084
 100+ A084 3A F6 8B         ld a,(Ctrl_2)
 101+ A087 CB 5F            bit 3,a
 102+ A089 20 1A            jr nz,Reinicia_el_movimiento
 103+ A08B
 104+ A08B              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 105+ A08B
 106+ A08B 21 F6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 107+ A08E CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 108+ A090
 109+ A090 CD F9 A0         call Inicia_Repetimos_movimiento
 110+ A093 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 111+ A095              ; ---
 112+ A095
 113+ A095 FE 01        1 cp 1
 114+ A097 CA D2 A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 115+ A09A
 116+ A09A 3D               dec a
 117+ A09B 32 27 8C         ld (Cola_de_desplazamiento),a
 118+ A09E
 119+ A09E 3A 25 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 120+ A0A1 32 24 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 121+ A0A4              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 122+ A0A4 C9               ret
 123+ A0A5
 124+ A0A5              Reinicia_el_movimiento
 125+ A0A5
 126+ A0A5 3A F6 8B         ld a,(Ctrl_2)
 127+ A0A8 CB 5F            bit 3,a
 128+ A0AA 28 1B            jr z,2F
 129+ A0AC
 130+ A0AC              ; (Cola_de_desplazamiento)="254".
 131+ A0AC
 132+ A0AC 21 26 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 133+ A0AF 35               dec (hl)
 134+ A0B0 20 15            jr nz,2F
 135+ A0B2
 136+ A0B2              ; Fin de las repeticiones del último movimiento.
 137+ A0B2
 138+ A0B2 21 F6 8B         ld hl,Ctrl_2
 139+ A0B5 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 140+ A0B7
 141+ A0B7 2A 1E 8C         ld hl,(Puntero_mov)
 142+ A0BA 23               inc hl
 143+ A0BB 23               inc hl
 144+ A0BC 23               inc hl
 145+ A0BD 22 1E 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 146+ A0C0              ;                                                               ; _ para ejecutar su mandato. :)
 147+ A0C0 7E               ld a,(hl)
 148+ A0C1 32 27 8C         ld (Cola_de_desplazamiento),a
 149+ A0C4
 150+ A0C4 C3 6C A0         jp Cola
 151+ A0C7
 152+ A0C7 CD 04 A1     2 call Inicia_Puntero_mov
 153+ A0CA
 154+ A0CA 21 F6 8B         ld hl,Ctrl_2
 155+ A0CD CB 96            res 2,(hl)
 156+ A0CF
 157+ A0CF C3 3C A0         jp Movimiento
 158+ A0D2
 159+ A0D2              Siguiente_desplazamiento
 160+ A0D2
 161+ A0D2              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 162+ A0D2              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 163+ A0D2
 164+ A0D2 21 F6 8B         ld hl,Ctrl_2
 165+ A0D5 CB 96            res 2,(hl)
 166+ A0D7
 167+ A0D7 2A 1E 8C         ld hl,(Puntero_mov)
 168+ A0DA 23               inc hl
 169+ A0DB 23               inc hl
 170+ A0DC 22 1E 8C         ld (Puntero_mov),hl
 171+ A0DF
 172+ A0DF 7E               ld a,(hl)
 173+ A0E0 A7               and a
 174+ A0E1 CC 63 A1         call z,Incrementa_Puntero_indice_mov
 175+ A0E4 CA A5 A0         jp z,Reinicia_el_movimiento
 176+ A0E7
 177+ A0E7 C9               ret
 178+ A0E8
 179+ A0E8              ; Subrutinas -----------------------------------------
 180+ A0E8              ; ---------- --------- --------- ---------- ----------
 181+ A0E8              ;
 182+ A0E8              ;   24/07/23
 183+ A0E8              ;
 184+ A0E8              ;   Fijamos_bucle
 185+ A0E8              ;
 186+ A0E8              ;
 187+ A0E8
 188+ A0E8              Fijamos_bucle
 189+ A0E8
 190+ A0E8 3A 22 8C         ld a,(Incrementa_puntero)
 191+ A0EB 3C               inc a
 192+ A0EC 32 23 8C         ld (Incrementa_puntero_backup),a
 193+ A0EF
 194+ A0EF CD 63 A1         call Incrementa_Puntero_indice_mov
 195+ A0F2 2A 1C 8C         ld hl,(Puntero_indice_mov)
 196+ A0F5 22 20 8C         ld (Puntero_indice_mov_bucle),hl
 197+ A0F8 C9               ret
 198+ A0F9
 199+ A0F9              ; ---------- --------- --------- ---------- ----------
 200+ A0F9              ;
 201+ A0F9              ;   07/7/23
 202+ A0F9              ;
 203+ A0F9              ;   Inicia_Repetimos_movimiento
 204+ A0F9              ;
 205+ A0F9              ;
 206+ A0F9
 207+ A0F9              Inicia_Repetimos_movimiento
 208+ A0F9
 209+ A0F9              ; Iniciamos (Repetimos_movimiento).
 210+ A0F9
 211+ A0F9 DD 2A 1E 8C      ld ix,(Puntero_mov)
 212+ A0FD DD 7E 02         ld a,(ix+2)
 213+ A100 32 26 8C         ld (Repetimos_movimiento),a
 214+ A103
 215+ A103 C9               ret
 216+ A104
 217+ A104              ; ---------- --------- --------- ---------- ----------
 218+ A104              ;
 219+ A104              ;   26/6/23
 220+ A104              ;
 221+ A104              ;   Inicia_Puntero_mov
 222+ A104              ;
 223+ A104              ;
 224+ A104
 225+ A104 2A 1C 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 226+ A107 CD E3 91         call Extrae_address
 227+ A10A 22 1E 8C         ld (Puntero_mov),hl
 228+ A10D C9               ret
 229+ A10E
 230+ A10E              ; ---------- --------- --------- ---------- ----------
 231+ A10E              ;
 232+ A10E              ;   27/06/23
 233+ A10E              ;
 234+ A10E              ;   Aplica_movimiento.
 235+ A10E
 236+ A10E              Aplica_desplazamiento
 237+ A10E
 238+ A10E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 239+ A10E
 240+ A10E 2A 1E 8C         ld hl, (Puntero_mov)
 241+ A111
 242+ A111 7E               ld a,(hl)
 243+ A112 E6 F0            and $f0
 244+ A114 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 245+ A115
 246+ A115 CB 7E            bit 7,(hl)
 247+ A117 28 03            jr z,1F
 248+ A119 CD 06 9D         call Mov_up
 249+ A11C 2A 1E 8C     1 ld hl, (Puntero_mov)
 250+ A11F CB 76            bit 6,(hl)
 251+ A121 28 03            jr z,2F
 252+ A123 CD D2 9C         call Mov_down
 253+ A126
 254+ A126              ; Se ha aplicado reinicio ???
 255+ A126              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 256+ A126
 257+ A126              ;    ld a,(Ctrl_3)
 258+ A126              ;    bit 1,a
 259+ A126              ;    ret nz
 260+ A126
 261+ A126 2A 1E 8C     2 ld hl, (Puntero_mov)
 262+ A129 CB 6E            bit 5,(hl)
 263+ A12B 28 03            jr z,3F
 264+ A12D CD 5D 9E         call Mov_left
 265+ A130 2A 1E 8C     3 ld hl, (Puntero_mov)
 266+ A133 CB 66            bit 4,(hl)
 267+ A135 C8               ret z
 268+ A136 CD 44 9D         call Mov_right
 269+ A139 C9               ret
 270+ A13A
 271+ A13A              ; ---------- --------- --------- ---------- ----------
 272+ A13A              ;
 273+ A13A              ;   26/06/23
 274+ A13A              ;
 275+ A13A              ;   Ajusta_velocidad_desplazamiento.
 276+ A13A
 277+ A13A              Ajusta_velocidad_desplazamiento
 278+ A13A
 279+ A13A              ; 1er byte de la cadena de movimiento.
 280+ A13A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 281+ A13A
 282+ A13A CD 58 A1         call Extrae_nibble_alto
 283+ A13D
 284+ A13D 32 12 8C         ld (Vel_up),a
 285+ A140 79               ld a,c
 286+ A141 E6 0F            and $0f
 287+ A143 32 13 8C         ld (Vel_down),a
 288+ A146
 289+ A146              ; Saltamos al 2º byte de la cadena de movimiento.
 290+ A146              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 291+ A146
 292+ A146 23               inc hl
 293+ A147 CD 58 A1         call Extrae_nibble_alto
 294+ A14A
 295+ A14A 32 10 8C         ld (Vel_left),a
 296+ A14D 79               ld a,c
 297+ A14E E6 0F            and $0f
 298+ A150 32 11 8C         ld (Vel_right),a
 299+ A153
 300+ A153              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 301+ A153
 302+ A153 23               inc hl
 303+ A154 22 1E 8C         ld (Puntero_mov),hl
 304+ A157 C9               ret
 305+ A158
 306+ A158 06 04        Extrae_nibble_alto ld b,4
 307+ A15A 7E               ld a,(hl)
 308+ A15B 4F               ld c,a
 309+ A15C E6 F0            and $f0
 310+ A15E CB 3F        1 srl a
 311+ A160 10 FC            djnz 1B
 312+ A162 C9               ret
 313+ A163
 314+ A163              ; ---------- --------- --------- ---------- ----------
 315+ A163              ;
 316+ A163              ;   5/7/23
 317+ A163              ;
 318+ A163              ;   Incrementa_Puntero_indice_mov
 319+ A163
 320+ A163              Incrementa_Puntero_indice_mov
 321+ A163
 322+ A163 21 22 8C         ld hl,Incrementa_puntero
 323+ A166 34               inc (hl)
 324+ A167
 325+ A167 2A 1C 8C         ld hl,(Puntero_indice_mov)
 326+ A16A 01 02 00         ld bc,2
 327+ A16D A7               and a
 328+ A16E 09               add hl,bc
 329+ A16F 22 1C 8C         ld (Puntero_indice_mov),hl
 330+ A172
 331+ A172 7E               ld a,(hl)
 332+ A173 A7               and a
 333+ A174
 334+ A174              ;! STOP. Fin del patrón de movimiento de la entidad.
 335+ A174
 336+ A174              ;    jr z,$
 337+ A174
 338+ A174              ;! Reinicia el Patrón de movimiento.
 339+ A174
 340+ A174 CC 79 A1         call z,Inicializa_Puntero_indice_mov_2
 341+ A177
 342+ A177 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 343+ A178
 344+ A178 C9               ret
 345+ A179
 346+ A179              ; ---------- --------- --------- ---------- ----------
 347+ A179              ;
 348+ A179              ;   15/01/24
 349+ A179              ;
 350+ A179              ;   Inicializa_Puntero_indice_mov
 351+ A179
 352+ A179              Inicializa_Puntero_indice_mov_2
 353+ A179
 354+ A179              ; Existe etiqueta de bucle principal???
 355+ A179
 356+ A179 2A 20 8C         ld hl,(Puntero_indice_mov_bucle)
 357+ A17C 24               inc h
 358+ A17D 25               dec h
 359+ A17E 28 05            jr z,2F
 360+ A180
 361+ A180 22 1C 8C         ld (Puntero_indice_mov),hl
 362+ A183 18 14            jr 3F
 363+ A185
 364+ A185              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 365+ A185
 366+ A185 3A 22 8C     2 ld a,(Incrementa_puntero)
 367+ A188 47               ld b,a
 368+ A189
 369+ A189 2A 1C 8C         ld hl,(Puntero_indice_mov)
 370+ A18C 2B           1 dec hl
 371+ A18D 2B               dec hl
 372+ A18E 10 FC            djnz 1B
 373+ A190 22 1C 8C         ld (Puntero_indice_mov),hl
 374+ A193
 375+ A193 AF               xor a
 376+ A194 32 22 8C         ld (Incrementa_puntero),a
 377+ A197 18 06            jr 4F
 378+ A199
 379+ A199 3A 23 8C     3 ld a,(Incrementa_puntero_backup)
 380+ A19C 32 22 8C         ld (Incrementa_puntero),a
 381+ A19F C9           4 ret
 382+ A1A0
 383+ A1A0              ; ----------------------------------------------------------------------
 384+ A1A0              ;
 385+ A1A0              ;   24/11/24
 386+ A1A0              ;
 387+ A1A0              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 388+ A1A0
 389+ A1A0 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 390+ A1A3 CD A1 95         call Calcula_salto_en_BC
 391+ A1A6 21 14 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 392+ A1A9 A7               and a
 393+ A1AA ED 4A            adc hl,bc
 394+ A1AC C9               ret
 395+ A1AD
 396+ A1AD              ; ----------------------------------------------------------------------
 397+ A1AD              ;
 398+ A1AD              ;   24/11/24
 399+ A1AD              ;
 400+ A1AD              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 401+ A1AD              ;
 402+ A1AD              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 403+ A1AD
 404+ A1AD 4E           Transfiere_datos_de_contadores ld c,(hl)
 405+ A1AE 23               inc hl
 406+ A1AF 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 407+ A1B0 DD 71 09         ld (ix+9),c
 408+ A1B3 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 409+ A1B6 C9               ret
 410+ A1B7
# file closed: Movimiento.asm
2464  A1B7              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A1B7              ; --------------------------------------------------------------------------------------
   2+ A1B7              ;
   3+ A1B7              ;   25/10/24
   4+ A1B7              ;
   5+ A1B7
   6+ A1B7              Pinta_disparos_Entidades
   7+ A1B7
   8+ A1B7 ED 73 3A 8C      ld (Stack),sp
   9+ A1BB ED 7B 4C 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A1BF
  11+ A1BF 3E 02            ld a,2
  12+ A1C1 08               ex af,af
  13+ A1C2
  14+ A1C2 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A1C4              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A1C4              ;                                     _ No encontraría "0".
  17+ A1C4 FD E1        4 pop iy
  18+ A1C6 D1               pop de                          ; 1er .db IYL
  19+ A1C7              ;                                   ; 2º  .db IYH
  20+ A1C7              ;                                   ; 3er .db E.
  21+ A1C7              ;   Album vacío ???
  22+ A1C7
  23+ A1C7 FD 7D            ld a,iyl
  24+ A1C9 FD 84            add iyh
  25+ A1CB 83               add e
  26+ A1CC 28 1F            jr z,1F
  27+ A1CE
  28+ A1CE              ;   Imprime album, (contiene datos).
  29+ A1CE
  30+ A1CE 3B               dec sp
  31+ A1CF
  32+ A1CF E1               pop hl                          ; Puntero de impresión en HL.
  33+ A1D0
  34+ A1D0              ; Imprime el 1er scanline del disparo.
  35+ A1D0
  36+ A1D0 FD 7D            ld a,iyl
  37+ A1D2 AE               xor (hl)
  38+ A1D3 77               ld (hl),a
  39+ A1D4
  40+ A1D4 2C               inc l
  41+ A1D5
  42+ A1D5 FD 7C            ld a,iyh
  43+ A1D7 AE               xor (hl)
  44+ A1D8 77               ld (hl),a
  45+ A1D9
  46+ A1D9 2C               inc l
  47+ A1DA
  48+ A1DA 7B               ld a,e
  49+ A1DB AE               xor (hl)
  50+ A1DC 77               ld (hl),a
  51+ A1DD
  52+ A1DD              ; Imprime el 2º scanline del disparo.
  53+ A1DD
  54+ A1DD E1               pop hl
  55+ A1DE
  56+ A1DE FD 7D            ld a,iyl
  57+ A1E0 AE               xor (hl)
  58+ A1E1 77               ld (hl),a
  59+ A1E2
  60+ A1E2 2C               inc l
  61+ A1E3
  62+ A1E3 FD 7C            ld a,iyh
  63+ A1E5 AE               xor (hl)
  64+ A1E6 77               ld (hl),a
  65+ A1E7
  66+ A1E7 2C               inc l
  67+ A1E8
  68+ A1E8 7B               ld a,e
  69+ A1E9 AE               xor (hl)
  70+ A1EA 77               ld (hl),a
  71+ A1EB
  72+ A1EB 10 D7            djnz 4B
  73+ A1ED
  74+ A1ED 08           1 ex af,af
  75+ A1EE 3D               dec a
  76+ A1EF 20 05            jr nz,2F
  77+ A1F1
  78+ A1F1 ED 7B 3A 8C      ld sp,(Stack)
  79+ A1F5 C9               ret
  80+ A1F6
  81+ A1F6 ED 7B 4A 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A1FA 08               ex af,af
  83+ A1FB 18 C5            jr 3B
  84+ A1FD
  85+ A1FD              ; --------------------------------------------------------------------------------------
  86+ A1FD              ;
  87+ A1FD              ;   2/12/24
  88+ A1FD              ;
  89+ A1FD
  90+ A1FD              Motor_de_disparos_entidades
  91+ A1FD
  92+ A1FD 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A200 FE 07            cp 7
  94+ A202 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A203
  96+ A203 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A205 21 26 89         ld hl,Indice_de_disparos_entidades
  98+ A208
  99+ A208 CD E3 91     1 call Extrae_address
 100+ A20B 1C               inc e
 101+ A20C 1C               inc e
 102+ A20D ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A211
 104+ A211               ; Caja vacía ???
 105+ A211
 106+ A211 2D               dec l
 107+ A212 7E               ld a,(hl)
 108+ A213 A7               and a
 109+ A214 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A216
 111+ A216              ; --- Trabajamos con caja:
 112+ A216
 113+ A216 2C               inc l
 114+ A217
 115+ A217              ; --- Existe posibilidad de impacto ???
 116+ A217
 117+ A217 3A 8B 8C         ld a,(Shield)
 118+ A21A A7               and a
 119+ A21B 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A21D
 121+ A21D CB 46            bit 0,(hl)
 122+ A21F C4 5F A2         call nz, Comprueba_impacto_con_Amadeus
 123+ A222 20 37            jr nz,3F
 124+ A224
 125+ A224 CD E6 A2     6 call Rota_disparo_si_procede
 126+ A227
 127+ A227              ; ------------------------------------------------------------
 128+ A227
 129+ A227 2D               dec l
 130+ A228 2D               dec l
 131+ A229
 132+ A229 CD E3 91         call Extrae_address
 133+ A22C
 134+ A22C              ;   (Puntero_de_impresion) del disparo en HL
 135+ A22C              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A22C
 137+ A22C 3A 64 8C         ld a,(Ctrl_5)
 138+ A22F CB 57            bit 2,a
 139+ A231 28 09            jr z,4F
 140+ A233
 141+ A233 CB 97            res 2,a
 142+ A235 32 64 8C         ld (Ctrl_5),a
 143+ A238 2C               inc l
 144+ A239 2C               inc l
 145+ A23A 18 0C            jr 5F
 146+ A23C
 147+ A23C CB 5F        4 bit 3,a
 148+ A23E 28 08            jr z,5F
 149+ A240
 150+ A240 CB 9F            res 3,a
 151+ A242 32 64 8C         ld (Ctrl_5),a
 152+ A245 2D               dec l
 153+ A246 2D               dec l
 154+ A247 2D               dec l
 155+ A248
 156+ A248              ; ---------------------------------------------------------------------
 157+ A248
 158+ A248              ;! Velocidad del disparo de entidades.
 159+ A248
 160+ A248 CD 8C 9C     5 call NextScan
 161+ A24B CD 8C 9C         call NextScan
 162+ A24E
 163+ A24E              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A24E
 165+ A24E CD C3 A2         call Fin_de_disparo_de_entidad
 166+ A251
 167+ A251 EB               ex de,hl
 168+ A252
 169+ A252 73               ld (hl),e
 170+ A253 23               inc hl
 171+ A254 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A255
 173+ A255 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A258 18 02            jr 2F
 175+ A25A
 176+ A25A C9               ret
 177+ A25B
 178+ A25B EB           3 ex de,hl
 179+ A25C 10 AA        2 djnz 1B
 180+ A25E
 181+ A25E C9               ret
 182+ A25F
 183+ A25F              ; ------------- ------------- ------------
 184+ A25F              ;
 185+ A25F              ;   1/11/24
 186+ A25F
 187+ A25F              Comprueba_impacto_con_Amadeus
 188+ A25F
 189+ A25F              ;   El disparo se encuentra en zona de Amadeus.
 190+ A25F              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A25F
 192+ A25F              ;   Modificamos registros, así que guardamos ...
 193+ A25F
 194+ A25F C5               push bc
 195+ A260 E5               push hl
 196+ A261 D5               push de
 197+ A262
 198+ A262 2D               dec l
 199+ A263 2D               dec l
 200+ A264
 201+ A264 CD E3 91         call Extrae_address
 202+ A267
 203+ A267 3A B5 89         ld a,(CX_Amadeus)
 204+ A26A 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A26B
 206+ A26B 7D               ld a,l
 207+ A26C E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A26E
 209+ A26E 06 03            ld b,3
 210+ A270
 211+ A270 B9           1 cp c
 212+ A271 28 15            jr z,Coincidencia
 213+ A273 0C               inc c
 214+ A274 10 FA            djnz 1B
 215+ A276
 216+ A276 0D               dec c
 217+ A277 0D               dec c
 218+ A278 0D               dec c
 219+ A279
 220+ A279 3C               inc a
 221+ A27A B9               cp c
 222+ A27B 28 0B            jr z,Coincidencia
 223+ A27D
 224+ A27D 3C               inc a
 225+ A27E B9               cp c
 226+ A27F 28 07            jr z,Coincidencia
 227+ A281
 228+ A281 D1           2 pop de
 229+ A282 E1               pop hl
 230+ A283 C1               pop bc
 231+ A284
 232+ A284              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A284
 234+ A284 CB 86            res 0,(hl)
 235+ A286 AF               xor a                       ; Z before RET.
 236+ A287 C9               ret
 237+ A288
 238+ A288              Coincidencia
 239+ A288
 240+ A288              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A288              ;   Existe posibilidad de impacto.
 242+ A288              ;   Vamos a averiguarlo ...
 243+ A288
 244+ A288 1D               dec e
 245+ A289 1D               dec e
 246+ A28A 1D               dec e
 247+ A28B
 248+ A28B              ; DE en Puntero_objeto del disparo.
 249+ A28B              ; HL en Puntero_de_impresión del disparo.
 250+ A28B
 251+ A28B              ; Comparador:
 252+ A28B
 253+ A28B 06 03            ld b,3
 254+ A28D
 255+ A28D 1A           3 ld a,(de)
 256+ A28E 4F               ld c,a
 257+ A28F A6               and (hl)
 258+ A290 B9               cp c
 259+ A291 20 06            jr nz,Amadeus_impactado
 260+ A293
 261+ A293 2C               inc l
 262+ A294 1C               inc e
 263+ A295
 264+ A295 10 F6            djnz 3B
 265+ A297
 266+ A297 18 E8            jr 2B
 267+ A299
 268+ A299              Amadeus_impactado
 269+ A299
 270+ A299              ; Borramos disparo.
 271+ A299
 272+ A299              ;   Exclusion.
 273+ A299
 274+ A299 D1               pop de
 275+ A29A E1               pop hl
 276+ A29B
 277+ A29B E5               push hl
 278+ A29C D5               push de
 279+ A29D
 280+ A29D CD 51 A3         call Borra_6_bytes
 281+ A2A0
 282+ A2A0 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A2A3 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A2A4
 285+ A2A4              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A2A4
 287+ A2A4 21 B8 89         ld hl,Impacto_Amadeus
 288+ A2A7 36 01            ld (hl),1
 289+ A2A9
 290+ A2A9              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A2A9              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A2A9
 293+ A2A9 3A B9 89         ld a,(p.imp.amadeus)
 294+ A2AC FE DE            cp $de
 295+ A2AE 20 04            jr nz,1F
 296+ A2B0
 297+ A2B0 3D               dec a
 298+ A2B1 32 B9 89         ld (p.imp.amadeus),a
 299+ A2B4
 300+ A2B4              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A2B4
 302+ A2B4 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A2B7 21 BB 89         ld hl,Pamm_Amadeus
 304+ A2BA
 305+ A2BA 73               ld (hl),e
 306+ A2BB 23               inc hl
 307+ A2BC 72               ld (hl),d
 308+ A2BD
 309+ A2BD D1               pop de
 310+ A2BE E1               pop hl
 311+ A2BF C1               pop bc
 312+ A2C0
 313+ A2C0 AF               xor a
 314+ A2C1 3C               inc a               ; NZ before RET.
 315+ A2C2 C9               ret
 316+ A2C3
 317+ A2C3              ; ------------- ------------- ------------
 318+ A2C3              ;
 319+ A2C3              ;   31/10/24
 320+ A2C3
 321+ A2C3              Fin_de_disparo_de_entidad
 322+ A2C3
 323+ A2C3              ; Estamos en zona de Amadeus ??
 324+ A2C3
 325+ A2C3 7C               ld a,h
 326+ A2C4 FE 54            cp $54
 327+ A2C6 38 0D            jr c,1F
 328+ A2C8
 329+ A2C8 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A2C9
 331+ A2C9 5D               ld e,l
 332+ A2CA 54               ld d,h
 333+ A2CB
 334+ A2CB 21 E0 57         ld hl,$57e0
 335+ A2CE ED 52            sbc hl,de
 336+ A2D0
 337+ A2D0 38 6F            jr c,Elimina_disparo_entidad
 338+ A2D2
 339+ A2D2 6B               ld l,e
 340+ A2D3 62               ld h,d
 341+ A2D4
 342+ A2D4 D1               pop de
 343+ A2D5
 344+ A2D5 7C           1 ld a,h
 345+ A2D6 FE 50            cp $50
 346+ A2D8 D8               ret c
 347+ A2D9
 348+ A2D9 7D               ld a,l
 349+ A2DA FE C0            cp $c0
 350+ A2DC D8               ret c
 351+ A2DD
 352+ A2DD              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A2DD              ; Así podremos comprobar si hay colisión más adelante.
 354+ A2DD
 355+ A2DD 1C               inc e
 356+ A2DE 1C               inc e
 357+ A2DF
 358+ A2DF EB               ex de,hl
 359+ A2E0 CB C6            set 0,(hl)
 360+ A2E2 EB               ex de,hl
 361+ A2E3
 362+ A2E3 1D               dec e
 363+ A2E4 1D               dec e
 364+ A2E5
 365+ A2E5 C9               ret
 366+ A2E6
 367+ A2E6              ; ----------------------------------------------------------
 368+ A2E6              ;
 369+ A2E6              ;   08/10/24
 370+ A2E6
 371+ A2E6              ;   Estructura de un disparo de entidades.
 372+ A2E6
 373+ A2E6              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A2E6              ; 	defw 0											; Puntero de impresión.
 375+ A2E6              ;	defw 0											; Control.
 376+ A2E6
 377+ A2E6              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A2E6              ;   _de la entidad en el momento de disparar.
 379+ A2E6
 380+ A2E6              ;   El byte alto muestra la siguiente información:
 381+ A2E6              ;
 382+ A2E6              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A2E6              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A2E6              ;
 385+ A2E6              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A2E6              ;
 387+ A2E6              ;                        10xx ..... Izquierda.
 388+ A2E6              ;                        01xx ..... Derecha.
 389+ A2E6              ;                        00xx ..... Recto.
 390+ A2E6
 391+ A2E6              Rota_disparo_si_procede
 392+ A2E6
 393+ A2E6              ;   Nos situamos en el byte alto de (Control).
 394+ A2E6
 395+ A2E6 CB 76            bit 6,(hl)
 396+ A2E8 20 2D            jr nz,Rota_a_derecha
 397+ A2EA CB 7E            bit 7,(hl)
 398+ A2EC C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A2ED
 400+ A2ED              Rota_a_izq
 401+ A2ED
 402+ A2ED E5               push hl
 403+ A2EE
 404+ A2EE 7D               ld a,l
 405+ A2EF D6 05            sub 5
 406+ A2F1 6F               ld l,a
 407+ A2F2
 408+ A2F2 E5               push hl
 409+ A2F3 FD E1            pop iy
 410+ A2F5
 411+ A2F5 A7               and a
 412+ A2F6
 413+ A2F6 FD CB 02 16      rl (iy+02)
 414+ A2FA FD CB 01 16      rl (iy+01)
 415+ A2FE FD CB 00 16      rl (iy+00)
 416+ A302
 417+ A302 30 3B            jr nc,Exit
 418+ A304
 419+ A304              ; Desplazamiento completo hasta Carry.
 420+ A304              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A304
 422+ A304 FD 36 02 03      ld (iy+02),$03
 423+ A308 FD 36 01 00      ld (iy+01),$00
 424+ A30C FD 36 00 00      ld (iy+00),$00
 425+ A310
 426+ A310 21 64 8C         ld hl,Ctrl_5
 427+ A313 CB DE            set 3,(hl)
 428+ A315
 429+ A315 18 28            jr Exit
 430+ A317
 431+ A317              Rota_a_derecha
 432+ A317
 433+ A317 E5               push hl
 434+ A318
 435+ A318 7D               ld a,l
 436+ A319 D6 05            sub 5
 437+ A31B 6F               ld l,a
 438+ A31C
 439+ A31C E5               push hl
 440+ A31D FD E1            pop iy
 441+ A31F
 442+ A31F A7               and a
 443+ A320
 444+ A320 FD CB 00 1E      rr (iy+00)
 445+ A324 FD CB 01 1E      rr (iy+01)
 446+ A328 FD CB 02 1E      rr (iy+02)
 447+ A32C
 448+ A32C 30 11            jr nc,Exit
 449+ A32E
 450+ A32E              ; Desplazamiento completo hasta Carry.
 451+ A32E              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A32E
 453+ A32E FD 36 00 01      ld (iy+00),$01
 454+ A332 FD 36 01 80      ld (iy+01),$80
 455+ A336 FD 36 02 00      ld (iy+02),$00
 456+ A33A
 457+ A33A 21 64 8C         ld hl,Ctrl_5
 458+ A33D CB D6            set 2,(hl)
 459+ A33F
 460+ A33F E1           Exit pop hl
 461+ A340 C9               ret
 462+ A341
 463+ A341              ; ------------ ----------- ------------
 464+ A341              ;
 465+ A341              ;   25/9/24
 466+ A341
 467+ A341              Elimina_disparo_entidad
 468+ A341
 469+ A341 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A344 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A345
 472+ A345 E1               pop hl
 473+ A346 E5               push hl
 474+ A347
 475+ A347 2C               inc l
 476+ A348 2C               inc l
 477+ A349
 478+ A349 CD 51 A3         call Borra_6_bytes
 479+ A34C
 480+ A34C D1               pop de
 481+ A34D
 482+ A34D 21 00 00         ld hl,0
 483+ A350
 484+ A350 C9               ret
 485+ A351
 486+ A351              ; ----- ----- ----- ----- -----
 487+ A351
 488+ A351              Borra_6_bytes
 489+ A351
 490+ A351 16 06            ld d,6                                                    ; Contador
 491+ A353 AF               xor a                                                     ; Borrador
 492+ A354 77           1 ld (hl),a
 493+ A355 2D               dec l
 494+ A356 15               dec d
 495+ A357 20 FB            jr nz,1B
 496+ A359
 497+ A359 C9               ret
 498+ A35A
 499+ A35A              ; --------------------------------------------------------------------------------------
 500+ A35A              ;
 501+ A35A              ;   12/10/24
 502+ A35A              ;
 503+ A35A
 504+ A35A              Genera_datos_de_impresion_disparos_Entidades
 505+ A35A
 506+ A35A 3E 07            ld a,7
 507+ A35C 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A35D
 509+ A35D              ; ---------------
 510+ A35D
 511+ A35D              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A35D
 513+ A35D 21 26 89          ld hl,Indice_de_disparos_entidades
 514+ A360
 515+ A360 CD E3 91     1 call Extrae_address
 516+ A363
 517+ A363 13               inc de
 518+ A364 13               inc de
 519+ A365
 520+ A365 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A369
 522+ A369 2D               dec l
 523+ A36A 7E               ld a,(hl)
 524+ A36B A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A36C 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A36E
 527+ A36E              ; ----- ----- ----- -----
 528+ A36E
 529+ A36E 2D               dec l
 530+ A36F CD E3 91         call Extrae_address
 531+ A372 E5               push hl
 532+ A373
 533+ A373 1D               dec e
 534+ A374
 535+ A374 EB               ex de,hl
 536+ A375
 537+ A375 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A376 2D               dec l
 539+ A377 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A378 2D               dec l
 541+ A379 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A37A
 543+ A37A E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A37B
 545+ A37B              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A37B
 547+ A37B FD 2A 4E 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A37F FD 73 00         ld (iy+0),e
 549+ A382 FD 70 01         ld (iy+1),b
 550+ A385 FD 71 02         ld (iy+2),c
 551+ A388
 552+ A388 FD 75 03         ld (iy+3),l
 553+ A38B FD 74 04         ld (iy+4),h
 554+ A38E
 555+ A38E CD 8C 9C         call NextScan
 556+ A391
 557+ A391 FD 75 05         ld (iy+5),l
 558+ A394 FD 74 06         ld (iy+6),h
 559+ A397
 560+ A397 FD E5            push iy
 561+ A399 E1               pop hl
 562+ A39A
 563+ A39A 3E 07            ld a,7
 564+ A39C 85               add l
 565+ A39D 6F               ld l,a
 566+ A39E
 567+ A39E 22 4E 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A3A1
 569+ A3A1              ; ----- ----- ----- -----
 570+ A3A1
 571+ A3A1              Situa_en_siguiente_caja
 572+ A3A1
 573+ A3A1 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A3A2 3D               dec a
 575+ A3A3 C8               ret z
 576+ A3A4
 577+ A3A4 08               ex af,af
 578+ A3A5 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A3A8 18 B6            jr 1B
 580+ A3AA
 581+ A3AA              ; --------------------------------------------------------------------------------------
 582+ A3AA              ;
 583+ A3AA              ;   12/10/24
 584+ A3AA              ;
 585+ A3AA
 586+ A3AA              Genera_disparo_de_entidad_maldosa
 587+ A3AA
 588+ A3AA              ;   Estructura de un disparo de entidades.
 589+ A3AA
 590+ A3AA              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A3AA              ; 	defw 0											; Puntero de impresión.
 592+ A3AA              ;	defw 0											; Control.
 593+ A3AA
 594+ A3AA              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A3AA              ;   _de la entidad en el momento de disparar.
 596+ A3AA
 597+ A3AA              ;   El byte de control muestra la siguiente información:
 598+ A3AA
 599+ A3AA              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A3AA              ;
 601+ A3AA              ;                        10xx ..... Izquierda.
 602+ A3AA              ;                        01xx ..... Derecha.
 603+ A3AA              ;                        00xx ..... Recto.
 604+ A3AA
 605+ A3AA              ;*  Exclusiones.
 606+ A3AA
 607+ A3AA              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A3AA              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A3AA
 610+ A3AA 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A3AD A7               and a
 612+ A3AE C8               ret z
 613+ A3AF
 614+ A3AF 3A EC 8B         ld a,(Coordenada_y)
 615+ A3B2 A7               and a
 616+ A3B3 C8               ret z
 617+ A3B4
 618+ A3B4 3D               dec a
 619+ A3B5 C8               ret z
 620+ A3B6
 621+ A3B6 FE 10            cp 16
 622+ A3B8 D0               ret nc
 623+ A3B9
 624+ A3B9              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A3B9              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A3B9              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A3B9
 628+ A3B9 21 54 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A3BC 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A3BD
 631+ A3BD              ;   Decrementa el numero de disparos de entidades.
 632+ A3BD
 633+ A3BD 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A3C0 35               dec (hl)
 635+ A3C1
 636+ A3C1 21 26 89         ld hl,Indice_de_disparos_entidades
 637+ A3C4
 638+ A3C4 CD E3 91     1 call Extrae_address
 639+ A3C7
 640+ A3C7 13               inc de
 641+ A3C8 13               inc de
 642+ A3C9
 643+ A3C9 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A3CD
 645+ A3CD              ;   Comprobamos si la caja está vacía.
 646+ A3CD
 647+ A3CD 2D               dec l
 648+ A3CE 7E               ld a,(hl)
 649+ A3CF A7               and a
 650+ A3D0 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A3D2 2C               inc l
 652+ A3D3
 653+ A3D3              ;   Caja vacía, vamos a generar un disparo.
 654+ A3D3              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A3D3
 656+ A3D3 CD F4 A3         call Genera_byte_inclinacion
 657+ A3D6
 658+ A3D6 7E               ld a,(hl)
 659+ A3D7 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A3D8
 661+ A3D8 2D               dec l
 662+ A3D9
 663+ A3D9 CD 10 A4         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A3DC
 665+ A3DC 70               ld (hl),b
 666+ A3DD 2D               dec l
 667+ A3DE 71               ld (hl),c
 668+ A3DF
 669+ A3DF 2D               dec l
 670+ A3E0
 671+ A3E0              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A3E0
 673+ A3E0 FD 7E 02         ld a,(iy+02)
 674+ A3E3 77               ld (hl),a
 675+ A3E4 2D               dec l
 676+ A3E5
 677+ A3E5 FD 7E 01         ld a,(iy+01)
 678+ A3E8 77               ld (hl),a
 679+ A3E9 2D               dec l
 680+ A3EA
 681+ A3EA FD 7E 00         ld a,(iy+00)
 682+ A3ED 77               ld (hl),a
 683+ A3EE
 684+ A3EE C9               ret
 685+ A3EF
 686+ A3EF              ;   --- --- ---
 687+ A3EF
 688+ A3EF              Situa_en_siguiente_disparo
 689+ A3EF
 690+ A3EF 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A3F2 18 D0            jr 1B
 692+ A3F4
 693+ A3F4              ; --------------------------------------------------------------------------------------
 694+ A3F4              ;
 695+ A3F4              ;   09/10/24
 696+ A3F4              ;
 697+ A3F4
 698+ A3F4              Genera_byte_inclinacion
 699+ A3F4
 700+ A3F4              ; Determina tendencia del disparo.
 701+ A3F4
 702+ A3F4 3A B5 89         ld a,(CX_Amadeus)
 703+ A3F7 47               ld b,a
 704+ A3F8 3A EB 8B         ld a,(Coordenada_X)
 705+ A3FB 90               sub b
 706+ A3FC 38 07            jr c,Disparo_a_derecha
 707+ A3FE
 708+ A3FE FE 06        Disparo_a_izquierda cp 6
 709+ A400
 710+ A400 D8               ret c
 711+ A401 C8               ret z
 712+ A402
 713+ A402 CB FE            set 7,(hl)
 714+ A404 C9               ret
 715+ A405
 716+ A405 47           Disparo_a_derecha ld b,a
 717+ A406 3E FF            ld a,$ff
 718+ A408 90               sub b
 719+ A409
 720+ A409 FE 05            cp 5
 721+ A40B
 722+ A40B D8               ret c
 723+ A40C C8               ret z
 724+ A40D
 725+ A40D CB F6            set 6,(hl)
 726+ A40F C9               ret
 727+ A410
 728+ A410              ; --------------------------------------------------------------------------------------
 729+ A410              ;
 730+ A410              ;   09/10/24
 731+ A410              ;
 732+ A410
 733+ A410              Modifica_puntero_de_impresion
 734+ A410
 735+ A410              ;   Puntero de impresión del disparo en BC.
 736+ A410
 737+ A410 E5               push hl
 738+ A411
 739+ A411 2A 67 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A414 CD 8C 9C         call NextScan
 741+ A417
 742+ A417 4D               ld c,l
 743+ A418 44               ld b,h
 744+ A419
 745+ A419 E1               pop hl
 746+ A41A
 747+ A41A 08               ex af,af
 748+ A41B CB 77            bit 6,a
 749+ A41D 28 06            jr z,1F
 750+ A41F
 751+ A41F FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A423 0C               inc c
 753+ A424 C9               ret
 754+ A425
 755+ A425 CB 7F        1 bit 7,a
 756+ A427 28 F6            jr z,2B
 757+ A429
 758+ A429 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A42D 0D               dec c
 760+ A42E
 761+ A42E C9               ret
 762+ A42F
 763+ A42F              ; --------------------------------------------------------------------------------------
 764+ A42F              ;
 765+ A42F              ;   28/11/24
 766+ A42F              ;
 767+ A42F
 768+ A42F              Compara_con_coordenadas_de_disparo
 769+ A42F
 770+ A42F DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A432 47               ld b,a
 772+ A433 3A 6C 8C         ld a,(Coordenadas_disparo_certero)
 773+ A436 90               sub b
 774+ A437
 775+ A437              ; A = "0" ok
 776+ A437              ; A = "1" ok
 777+ A437
 778+ A437 28 08            jr z,Comprueba_coordenada_X
 779+ A439 3D               dec a
 780+ A43A 28 05            jr z,Comprueba_coordenada_X
 781+ A43C
 782+ A43C              ; A = "$ff" ok
 783+ A43C
 784+ A43C FE FE            cp $fe
 785+ A43E 28 01            jr z,Comprueba_coordenada_X
 786+ A440
 787+ A440 C9               ret
 788+ A441
 789+ A441              Comprueba_coordenada_X
 790+ A441
 791+ A441 DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A444 47               ld b,a
 793+ A445 21 6D 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A448 7E               ld a,(hl)
 795+ A449 90               sub b
 796+ A44A
 797+ A44A              ; A = "0" ok
 798+ A44A              ; A = "1" ok
 799+ A44A
 800+ A44A 28 09            jr z,Activa_Impacto_en_entidad
 801+ A44C 3D               dec a
 802+ A44D 28 06            jr z,Activa_Impacto_en_entidad
 803+ A44F
 804+ A44F              ; A = "2" ok
 805+ A44F
 806+ A44F 3D               dec a
 807+ A450 28 03            jr z,Activa_Impacto_en_entidad
 808+ A452
 809+ A452              ; A = "$ff"
 810+ A452
 811+ A452 FE FD            cp $fd
 812+ A454 C0               ret nz
 813+ A455
 814+ A455              Activa_Impacto_en_entidad
 815+ A455
 816+ A455              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A455
 818+ A455 3E 02            ld a,2
 819+ A457 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A45A
 821+ A45A              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A45A
 823+ A45A 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A45D
 825+ A45D DD 73 07         ld (ix+7),e
 826+ A460 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A463
 828+ A463              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A463
 830+ A463 21 69 8C         ld hl,Impacto2
 831+ A466 CB 9E            res 3,(hl)
 832+ A468
 833+ A468 C9               ret
 834+ A469
 835+ A469              ; --------------------------------------------------------------------------------------
 836+ A469              ;
 837+ A469              ;   13/10/24
 838+ A469              ;
 839+ A469
 840+ A469              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A469
 842+ A469              Limpia_album_de_pintado_disparos_Amadeus
 843+ A469
 844+ A469 2A 46 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A46C 06 06            ld b,6
 846+ A46E AF               xor a
 847+ A46F 77           1 ld (hl),a
 848+ A470 2C               inc l
 849+ A471 10 FC            djnz 1B
 850+ A473
 851+ A473 C9               ret
 852+ A474
 853+ A474              ; --------------------------------------------------------------------------------------
 854+ A474              ;
 855+ A474              ;   29/09/24
 856+ A474              ;
 857+ A474
 858+ A474              Calcula_bytes_pintado_disparos
 859+ A474
 860+ A474 2A 4A 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A477 45               ld b,l
 862+ A478 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A47B 7D               ld a,l
 864+ A47C
 865+ A47C 90               sub b
 866+ A47D 32 50 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A480
 868+ A480 C9               ret
 869+ A481
 870+ A481              ; --------------------------------------------------------------------------------------
 871+ A481              ;
 872+ A481              ;   26/10/24
 873+ A481              ;
 874+ A481              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A481              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A481              ;   _disparos que el álbum del FRAME actual).
 877+ A481
 878+ A481              Limpia_album_de_pintado_disparos_entidades
 879+ A481
 880+ A481 21 51 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A484 7E               ld a,(hl)
 882+ A485 2D               dec l
 883+ A486 46               ld b,(hl)
 884+ A487 90               sub b
 885+ A488
 886+ A488 D8               ret c
 887+ A489 C8               ret z
 888+ A48A
 889+ A48A F5               push af
 890+ A48B 80               add b
 891+ A48C 77               ld (hl),a
 892+ A48D F1               pop af
 893+ A48E
 894+ A48E              ; Clean.
 895+ A48E
 896+ A48E 47           2 ld b,a
 897+ A48F AF               xor a
 898+ A490 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A493 77           1 ld (hl),a
 900+ A494 23               inc hl
 901+ A495 10 FC            djnz 1B
 902+ A497
 903+ A497 C9               ret
 904+ A498
 905+ A498              ; --------------------------------------------------------------------------------------
 906+ A498              ;
 907+ A498              ;   29/09/24
 908+ A498              ;
 909+ A498
 910+ A498              Motor_Disparos_Amadeus
 911+ A498
 912+ A498 21 23 89         ld hl,Disparo_Amad+1
 913+ A49B
 914+ A49B 34               inc (hl)
 915+ A49C 35               dec (hl)
 916+ A49D
 917+ A49D C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A49E
 919+ A49E              ;   Esta caja contiene un disparo.
 920+ A49E
 921+ A49E CD A5 A4         call Consulta_Impacto
 922+ A4A1 CC BE A4         call z,Mueve_disparo_Amadeus
 923+ A4A4
 924+ A4A4 C9               ret
 925+ A4A5
 926+ A4A5              ; ----------------------
 927+ A4A5              ;
 928+ A4A5              ;
 929+ A4A5              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A4A5              ;
 931+ A4A5              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A4A5
 933+ A4A5
 934+ A4A5              Consulta_Impacto
 935+ A4A5
 936+ A4A5              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A4A5              ;   _sea lo más coherente posible.
 938+ A4A5
 939+ A4A5 E5               push hl
 940+ A4A6 2B               dec hl
 941+ A4A7 CD 9A A5         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A4AA E1               pop hl
 943+ A4AB 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A4AC
 945+ A4AC C8               ret z
 946+ A4AD
 947+ A4AD 3A 69 8C         ld a,(Impacto2)
 948+ A4B0 CB DF            set 3,a
 949+ A4B2 32 69 8C         ld (Impacto2),a
 950+ A4B5
 951+ A4B5 E5               push hl
 952+ A4B6 CD 87 A5         call Genera_coordenadas_de_disparo_Amadeus
 953+ A4B9 E1               pop hl
 954+ A4BA CD D7 A4         call Elimina_disparo_Amadeus
 955+ A4BD
 956+ A4BD C9               ret
 957+ A4BE
 958+ A4BE              ; ----------------------
 959+ A4BE              ;
 960+ A4BE              ;
 961+ A4BE              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A4BE
 963+ A4BE              Mueve_disparo_Amadeus
 964+ A4BE
 965+ A4BE CD E3 91         call Extrae_address
 966+ A4C1
 967+ A4C1 CD 9B 9C         call PreviousScan
 968+ A4C4 CD 9B 9C         call PreviousScan
 969+ A4C7 CD 9B 9C         call PreviousScan
 970+ A4CA CD 9B 9C         call PreviousScan
 971+ A4CD
 972+ A4CD              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A4CD
 974+ A4CD 7C               ld a,h
 975+ A4CE D6 40            sub $40
 976+ A4D0 EB               ex de,hl
 977+ A4D1 38 04            jr c,Elimina_disparo_Amadeus
 978+ A4D3
 979+ A4D3               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A4D3
 981+ A4D3 73               ld (hl),e
 982+ A4D4 23               inc hl
 983+ A4D5 72               ld (hl),d
 984+ A4D6
 985+ A4D6 C9               ret
 986+ A4D7
 987+ A4D7              ; ----------------------
 988+ A4D7              ;
 989+ A4D7              ;   29/9/24
 990+ A4D7
 991+ A4D7              Elimina_disparo_Amadeus
 992+ A4D7
 993+ A4D7              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A4D7              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A4D7
 996+ A4D7              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A4D7              ;   	defw 0											; Puntero de impresión.
 998+ A4D7
 999+ A4D7 2B               dec hl
1000+ A4D8 2B               dec hl
1001+ A4D9
1002+ A4D9 AF               xor a
1003+ A4DA 77               ld (hl),a
1004+ A4DB 23               inc hl
1005+ A4DC 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A4DD
1007+ A4DD 23               inc hl
1008+ A4DE 77               ld (hl),a
1009+ A4DF 23               inc hl
1010+ A4E0 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A4E1
1012+ A4E1 3E 01            ld a,1
1013+ A4E3 32 53 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A4E6
1015+ A4E6 CD 69 A4         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A4E9
1017+ A4E9 AF               xor a
1018+ A4EA 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A4EB
1020+ A4EB C9               ret
1021+ A4EC
1022+ A4EC              ; --------------------------------------------------------------------------------------
1023+ A4EC              ;
1024+ A4EC              ;   13/10/24
1025+ A4EC              ;
1026+ A4EC
1027+ A4EC              Pinta_disparos_Amadeus
1028+ A4EC
1029+ A4EC 06 02            ld b,2
1030+ A4EE ED 73 3A 8C      ld (Stack),sp
1031+ A4F2 ED 7B 48 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A4F6 D1           3 pop de
1033+ A4F7 14               inc d
1034+ A4F8 15               dec d
1035+ A4F9 28 1C            jr z,1F
1036+ A4FB E1               pop hl
1037+ A4FC
1038+ A4FC              Imprime_scanlines_en_pantalla
1039+ A4FC
1040+ A4FC              ; 1er scanline
1041+ A4FC
1042+ A4FC 1A               ld a,(de)
1043+ A4FD AE               xor (hl)
1044+ A4FE 77               ld (hl),a
1045+ A4FF
1046+ A4FF 1C               inc e
1047+ A500 2C               inc l
1048+ A501
1049+ A501 1A               ld a,(de)
1050+ A502 AE               xor (hl)
1051+ A503 77               ld (hl),a
1052+ A504
1053+ A504 1D               dec e
1054+ A505 E1               pop hl
1055+ A506
1056+ A506              ; 2º scanline
1057+ A506
1058+ A506 1A               ld a,(de)
1059+ A507 AE               xor (hl)
1060+ A508 77               ld (hl),a
1061+ A509
1062+ A509 1C               inc e
1063+ A50A 2C               inc l
1064+ A50B
1065+ A50B 1A               ld a,(de)
1066+ A50C AE               xor (hl)
1067+ A50D 77               ld (hl),a
1068+ A50E
1069+ A50E 1D               dec e
1070+ A50F
1071+ A50F 18 06            jr 1F
1072+ A511
1073+ A511 ED 7B 46 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A515 18 DF            jr 3B
1075+ A517 10 F8        1 djnz 2B
1076+ A519 ED 7B 3A 8C      ld sp,(Stack)
1077+ A51D C9               ret
1078+ A51E
1079+ A51E              ; --------------------------------------------------------------------------------------
1080+ A51E              ;
1081+ A51E              ;   13/10/24
1082+ A51E              ;
1083+ A51E              ;   Modifica: HL,BC y DE.
1084+ A51E
1085+ A51E
1086+ A51E              Genera_datos_de_impresion_disparos_Amadeus
1087+ A51E
1088+ A51E ED 73 3A 8C      ld (Stack),sp
1089+ A522 31 22 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A525 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A526
1092+ A526 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A527 15               dec d
1094+ A528
1095+ A528 28 0E            jr z,Salida
1096+ A52A
1097+ A52A              Genera_scanlines_de_disparo_Amadeus
1098+ A52A
1099+ A52A E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A52B              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A52B ED 7B 46 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A52F
1103+ A52F C1               pop bc
1104+ A530 C1               pop bc
1105+ A531 C1               pop bc
1106+ A532
1107+ A532 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A533 CD 9B 9C         call PreviousScan
1109+ A536 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A537 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A538
1112+ A538              Salida
1113+ A538
1114+ A538 ED 7B 3A 8C      ld sp,(Stack)
1115+ A53C
1116+ A53C C9               ret
1117+ A53D
1118+ A53D              ; --------------------------------------------------------------------------------------
1119+ A53D              ;
1120+ A53D              ;   12/09/24
1121+ A53D              ;
1122+ A53D
1123+ A53D              Genera_disparo_Amadeus
1124+ A53D
1125+ A53D              ;*  Exclusiones.
1126+ A53D
1127+ A53D 3A 53 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A540 A7               and a
1129+ A541 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A542
1131+ A542 3D               dec a
1132+ A543 32 53 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A546
1134+ A546              Define_puntero_objeto_disparo
1135+ A546
1136+ A546              ;   Inicializamos contador.
1137+ A546
1138+ A546 06 00            ld b,0
1139+ A548
1140+ A548 2A B9 89         ld hl,(p.imp.amadeus)
1141+ A54B 2C               inc l
1142+ A54C
1143+ A54C 3E 80            ld a,$80
1144+ A54E BE               cp (hl)
1145+ A54F 28 0D            jr z,1F
1146+ A551
1147+ A551 04               inc b
1148+ A552
1149+ A552 3E 60            ld a,$60
1150+ A554 BE               cp (hl)
1151+ A555 28 07            jr z,1F
1152+ A557
1153+ A557
1154+ A557 04               inc b
1155+ A558
1156+ A558 3E 18            ld a,$18
1157+ A55A BE               cp (hl)
1158+ A55B 28 01            jr z,1F
1159+ A55D
1160+ A55D 04               inc b
1161+ A55E
1162+ A55E              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A55E
1164+ A55E              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A55E
1166+ A55E CD 9B 9C     1 call PreviousScan
1167+ A561
1168+ A561 78               ld a,b
1169+ A562 CB 3F            srl a
1170+ A564 28 03            jr z,4F
1171+ A566
1172+ A566              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A566 E5               push hl
1174+ A567 18 02            jr 5F
1175+ A569 2D           4 dec l
1176+ A56A E5               push hl
1177+ A56B              ; ---
1178+ A56B
1179+ A56B              ;   Calcula el Puntero_objeto del disparo.
1180+ A56B
1181+ A56B 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A56E 04               inc b
1183+ A56F 05               dec b
1184+ A570 28 04            jr z,2F
1185+ A572
1186+ A572              ;   Nos desplazamos por el índice de disparos.
1187+ A572
1188+ A572 2C           3 inc l
1189+ A573 2C               inc l
1190+ A574 10 FC            djnz 3B
1191+ A576
1192+ A576              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A576 CD E3 91     2 call Extrae_address
1194+ A579 E5               push hl
1195+ A57A              ; ---
1196+ A57A
1197+ A57A              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A57A              ; HL en el 1er .db de la caja.
1199+ A57A
1200+ A57A 21 22 89         ld hl,Disparo_Amad
1201+ A57D
1202+ A57D 06 02            ld b,2
1203+ A57F
1204+ A57F D1           6 pop de
1205+ A580 73               ld (hl),e
1206+ A581 23               inc hl
1207+ A582 72               ld (hl),d
1208+ A583 23               inc hl
1209+ A584
1210+ A584 10 F9            djnz 6B
1211+ A586
1212+ A586 C9               ret
1213+ A587
1214+ A587              Genera_coordenadas_de_disparo_Amadeus
1215+ A587
1216+ A587              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A587              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A587              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A587
1220+ A587 CD E3 91         call Extrae_address
1221+ A58A CD 28 96         call Genera_coordenadas
1222+ A58D
1223+ A58D 3D               dec a
1224+ A58E
1225+ A58E 21 6C 8C         ld hl,Coordenadas_disparo_certero
1226+ A591 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A592 23               inc hl
1228+ A593 3A EB 8B         ld a,(Coordenada_X)
1229+ A596 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A597
1231+ A597 AF               xor a
1232+ A598 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A599
1234+ A599 C9               ret
1235+ A59A
1236+ A59A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A59A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A59A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A59A
1240+ A59A              ; ----------------------------------------------
1241+ A59A              ;
1242+ A59A              ;   27/08/24
1243+ A59A              ;
1244+ A59A              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A59A              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A59A
1247+ A59A              Detecta_impacto_en_disparo_de_Amadeus
1248+ A59A
1249+ A59A              Extraccion_de_datos
1250+ A59A
1251+ A59A 13               inc de
1252+ A59B 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A59C
1254+ A59C 5E               ld e,(hl)
1255+ A59D 23               inc hl
1256+ A59E 56               ld d,(hl)
1257+ A59F
1258+ A59F 23               inc hl
1259+ A5A0
1260+ A5A0 4E               ld c,(hl)
1261+ A5A1 23               inc hl
1262+ A5A2 46               ld b,(hl)
1263+ A5A3
1264+ A5A3 C5               push bc
1265+ A5A4 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A5A5
1267+ A5A5              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A5A5
1269+ A5A5 CD 9B 9C         call PreviousScan
1270+ A5A8 CD 9B 9C         call PreviousScan
1271+ A5AB
1272+ A5AB              Detecta_impacto_
1273+ A5AB
1274+ A5AB 1A               ld a,(de)
1275+ A5AC A6               and (hl)
1276+ A5AD C0               ret nz
1277+ A5AE
1278+ A5AE 13               inc de
1279+ A5AF 23               inc hl
1280+ A5B0
1281+ A5B0 1A               ld a,(de)
1282+ A5B1 A6               and (hl)
1283+ A5B2 C9               ret
1284+ A5B3
1285+ A5B3              ; -------------------------------------------------------------------------------------------------------------
1286+ A5B3              ;
1287+ A5B3              ;   25/11//24
1288+ A5B3              ;
1289+ A5B3              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A5B3              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A5B3              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A5B3              ;
1293+ A5B3              ;   MODIFICA: HL,DE,BC y A.
1294+ A5B3              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A5B3              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A5B3
1297+ A5B3              Colision_Entidad_Amadeus
1298+ A5B3
1299+ A5B3              ; Posible contacto de entidad con Amadeus. ?????
1300+ A5B3
1301+ A5B3              ; Exclusiones:
1302+ A5B3
1303+ A5B3 3A 8B 8C         ld a,(Shield)
1304+ A5B6 A7               and a
1305+ A5B7 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A5B8
1307+ A5B8 21 62 8C         ld hl,Ctrl_3
1308+ A5BB CB 76            bit 6,(hl)
1309+ A5BD C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A5BE
1311+ A5BE 21 69 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A5C1 CB 56            bit 2,(hl)
1313+ A5C3 C0               ret nz
1314+ A5C4
1315+ A5C4 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A5C7 FE 14        	cp $14
1317+ A5C9 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A5CA
1319+ A5CA 3A B8 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A5CD A7               and a
1321+ A5CE C0               ret nz
1322+ A5CF
1323+ A5CF              Genera_coordenadas_X
1324+ A5CF
1325+ A5CF              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A5CF              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A5CF
1328+ A5CF              ;   Limpiamos almacenes.
1329+ A5CF
1330+ A5CF              ;    call Limpia_Coordenadas_X
1331+ A5CF
1332+ A5CF              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A5CF
1334+ A5CF 21 6E 8C         ld hl,Coordenadas_X_Entidad
1335+ A5D2 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A5D5 CD FB A5         call Guarda_coordenadas_X
1337+ A5D8
1338+ A5D8              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A5D8
1340+ A5D8 3A B5 89         ld a,(CX_Amadeus)
1341+ A5DB CD FB A5         call Guarda_coordenadas_X
1342+ A5DE
1343+ A5DE DD E5            push ix
1344+ A5E0 CD 0F A6         call Compara_coordenadas_X
1345+ A5E3 DD E1            pop ix
1346+ A5E5
1347+ A5E5 C0               ret nz
1348+ A5E6
1349+ A5E6 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A5E8 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A5EB
1352+ A5EB DD 7D            ld a,ixl
1353+ A5ED C6 04            add 4
1354+ A5EF DD 6F            ld ixl,a
1355+ A5F1
1356+ A5F1 DD 22 6A 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A5F5
1358+ A5F5 21 69 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A5F8 CB D6            set 2,(hl)
1360+ A5FA
1361+ A5FA C9               ret
1362+ A5FB
1363+ A5FB               ; ----- ----- ----- ----- -----
1364+ A5FB
1365+ A5FB 77           Guarda_coordenadas_X ld (hl),a
1366+ A5FC 3C               inc a
1367+ A5FD 2C               inc l
1368+ A5FE 77               ld (hl),a
1369+ A5FF 3C               inc a
1370+ A600 2C               inc l
1371+ A601 77               ld (hl),a
1372+ A602 2C               inc l
1373+ A603 C9               ret
1374+ A604
1375+ A604 AF           Limpia_Coordenadas_X xor a
1376+ A605 06 06            ld b,6
1377+ A607 21 71 8C         ld hl,Coordenadas_X_Amadeus
1378+ A60A 77           1 ld (hl),a
1379+ A60B 23               inc hl
1380+ A60C 10 FC            djnz 1B
1381+ A60E C9               ret
1382+ A60F
1383+ A60F              ; ----- ----- ----- ----- -----
1384+ A60F
1385+ A60F              Compara_coordenadas_X
1386+ A60F
1387+ A60F DD 21 6E 8C      ld ix,Coordenadas_X_Entidad
1388+ A613 DD 7E 00         ld a,(ix+0)
1389+ A616 CD 24 A6         call Comparando
1390+ A619 C8               ret z
1391+ A61A
1392+ A61A 3C               inc a
1393+ A61B CD 33 A6         call Comparando_1
1394+ A61E C8               ret z
1395+ A61F
1396+ A61F 3C               inc a
1397+ A620 CD 33 A6         call Comparando_1
1398+ A623 C9               ret
1399+ A624
1400+ A624              ; ----- ----- ----- ----- -----
1401+ A624              ;
1402+ A624              ;   4/12/23
1403+ A624              ;
1404+ A624              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A624
1406+ A624              Comparando
1407+ A624
1408+ A624 DD 2C            inc ixl
1409+ A626 DD 2C            inc ixl
1410+ A628 DD 2C            inc ixl
1411+ A62A
1412+ A62A DD 46 00         ld b,(ix+0)
1413+ A62D DD 4E 01         ld c,(ix+1)
1414+ A630 DD 56 02         ld d,(ix+2)
1415+ A633
1416+ A633 B8           Comparando_1 cp b
1417+ A634 C8               ret z
1418+ A635 B9               cp c
1419+ A636 C8               ret z
1420+ A637 BA               cp d
1421+ A638 C9               ret
1422+ A639
1423+ A639              ; -----------------------------------------------------------------------
1424+ A639              ;
1425+ A639              ;   04/7/24
1426+ A639              ;
1427+ A639
1428+ A639              Detecta_colision_nave_entidad
1429+ A639
1430+ A639              ; Exclusiones:
1431+ A639
1432+ A639              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A639
1434+ A639 21 69 8C     	ld hl,Impacto2
1435+ A63C CB 56        	bit 2,(hl)
1436+ A63E C8           	ret z
1437+ A63F
1438+ A63F              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A63F
1440+ A63F 2A BB 89         ld hl,(Pamm_Amadeus)
1441+ A642 CD E3 91         call Extrae_address
1442+ A645 54               ld d,h
1443+ A646 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A647
1445+ A647 2A B9 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A64A 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A64C FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A64F
1449+ A64F C5           1 push bc
1450+ A650 06 03            ld b,3
1451+ A652 E5               push hl
1452+ A653
1453+ A653              ; .db
1454+ A653
1455+ A653 1A           3 ld a,(de)
1456+ A654 A7               and a
1457+ A655 20 03            jr nz,4F
1458+ A657
1459+ A657 2C               inc l
1460+ A658 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A65A
1462+ A65A ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A65C 28 04            jr z,2F
1464+ A65E
1465+ A65E              ; Impacto.
1466+ A65E FD 2D            dec iyl
1467+ A660 28 22            jr z,5F
1468+ A662
1469+ A662 1C           2 inc e
1470+ A663 10 EE            djnz 3B
1471+ A665
1472+ A665 E1               pop hl
1473+ A666
1474+ A666              ; Hay salto de línea en el puntero de impresión ???
1475+ A666
1476+ A666 7C               ld a,h
1477+ A667 D6 57            sub $57
1478+ A669 20 0A            jr nz,6F
1479+ A66B
1480+ A66B              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A66B
1482+ A66B 2A B9 89         ld hl,(p.imp.amadeus)
1483+ A66E 3E 20            ld a,$20
1484+ A670 A7               and a
1485+ A671 85               add l
1486+ A672 6F               ld l,a
1487+ A673 18 01            jr 7F
1488+ A675
1489+ A675 24           6 inc h
1490+ A676
1491+ A676 C1           7 pop bc
1492+ A677 10 D6            djnz 1B
1493+ A679
1494+ A679              ;   Fin de la comparativa.
1495+ A679
1496+ A679              ;   NO HAY COLISIÓN !!!!!.
1497+ A679              ;
1498+ A679              ;   .db (Impacto) de Amadeus a "0".
1499+ A679              ;   RES el bit2 de (Impacto2).
1500+ A679              ;
1501+ A679              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A679              ;   Lo colocamos a "0".
1503+ A679
1504+ A679 21 69 8C         ld hl,Impacto2
1505+ A67C CB 96            res 2,(hl)
1506+ A67E 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A681 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A683 C9               ret
1509+ A684
1510+ A684              ;   COLISIÓN !!!!!.
1511+ A684              ;
1512+ A684              ;   .db (Impacto) de Amadeus a "1".
1513+ A684              ;   SET el bit3 de (Impacto2).
1514+ A684              ;
1515+ A684              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A684
1517+ A684 E1           5 pop hl
1518+ A685 C1               pop bc
1519+ A686
1520+ A686 21 B8 89         ld hl,Impacto_Amadeus
1521+ A689 36 01            ld (hl),1
1522+ A68B 21 69 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A68E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A690
1525+ A690 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A693 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A696
1528+ A696 23               inc hl
1529+ A697 23               inc hl
1530+ A698 23               inc hl
1531+ A699
1532+ A699 73               ld (hl),e
1533+ A69A 23               inc hl
1534+ A69B 72               ld (hl),d
1535+ A69C
1536+ A69C              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A69C
1538+ A69C 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A69F 21 BB 89         ld hl,Pamm_Amadeus
1540+ A6A2
1541+ A6A2 73               ld (hl),e
1542+ A6A3 23               inc hl
1543+ A6A4 72               ld (hl),d
1544+ A6A5
1545+ A6A5 C9               ret
1546+ A6A6
1547+ A6A6
1548+ A6A6
# file closed: Disparo.asm
2465  A6A6
2466  A6A6              	SAVESNA "Pruebas.sna", START
2467  A6A6
2468  A6A6
2469  A6A6
2470  A6A6
# file closed: Banco_de_pruebas.asm
