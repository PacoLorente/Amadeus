# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 3F 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83E8              ;                  _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        	defw 0											; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  84FC 02           	db 2											; (Cuad_objeto).
200+  84FD
201+  84FD 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 5F 94 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  851E
218+  851E 00           	db 0 											; (Columnas).
219+  851F 00 00        	defw 0											; (Limite_horizontal).
220+  8521 00           	db 0											; (Limite_vertical).
221+  8522
222+  8522              ; ---------- ---------- ---------- ---------- ----------
223+  8522
224+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8524 00 00        	defw 0                                          ; (Posicion_actual).
226+  8526 00 00        	defw 0											; (Puntero_objeto).
227+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  852B
229+  852B 04           	db %00000100									; (Attr).
230+  852C
231+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8530
234+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8534
237+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8536 01           	db 1											; (Cuad_objeto).
239+  8537
240+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  853B
242+  853B 00 00        	db 0,0											; Variables_de_borrado
243+  853D 00 00        	defw 0										 	;	" " " " " " "
244+  853F 00 00        	defw 0											;	" " " " " " "
245+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8545
247+  8545 00 00        	db 0,0											; Variables_de_pintado
248+  8547 00 00        	defw 0											;	" " " " " " "
249+  8549 00 00        	defw 0											;	" " " " " " "
250+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  854F
252+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8551
254+  8551 61 94 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8558
257+  8558 00           	db 0 											; (Columnas).
258+  8559 00 00        	defw 0											; (Limite_horizontal).
259+  855B 00           	db 0											; (Limite_vertical).
260+  855C
261+  855C              ; ---------- ---------- ---------- ---------- ----------
262+  855C
263+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  855E 00 00        	defw 0                                          ; (Posicion_actual).
265+  8560 00 00        	defw 0 											; (Puntero_objeto).
266+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8565
268+  8565 01           	db %00000001									; (Attr).
269+  8566
270+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  856A
273+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  856E
276+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8570 00           	db 0											; (Cuad_objeto).
278+  8571
279+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8575
281+  8575 00 00        	db 0,0											; Variables_de_borrado
282+  8577 00 00        	defw 0										 	;	" " " " " " "
283+  8579 00 00        	defw 0											;	" " " " " " "
284+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  857F
286+  857F 00 00        	db 0,0											; Variables_de_pintado
287+  8581 00 00        	defw 0											;	" " " " " " "
288+  8583 00 00        	defw 0											;	" " " " " " "
289+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8589
291+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  858B
293+  858B 51 94 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  8592
296+  8592 00           	db 0 											; (Columnas).
297+  8593 00 00        	defw 0											; (Limite_horizontal).
298+  8595 00           	db 0											; (Limite_vertical).
299+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 4D 94        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
163   85D1
164   85D1
165   85D1
166   85D1
167   85D1
168   85D1
169   85D1              ; Gestión de ENTIDADES.
170   85D1
171   85D1 00 00        Puntero_store_entidades defw 0
172   85D3 00 00        Puntero_restore_entidades defw 0
173   85D5 00 00        Indice_restore defw 0
174   85D7 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
175   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
176   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
177   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
178   85D9              ;														; _ (Numero_de_malotes)="0".
179   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
180   85DB              ;														; _variable para almacenar lo posición del puntero_
181   85DB              ; 														; _de pila, SP.
182   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
183   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
184   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
185   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
186   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
187   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E1              ;														; _el snapshot de los registros del siguiente disparo.
189   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
190   85E1
191   85E1              ; Gestión de Disparos.
192   85E1
193   85E1              ;Puntero_extraccion_disparo_Amadeus defw 0
194   85E1              ;Puntero_extraccion_disparo_entidades defw 0
195   85E1 00           Numero_de_disparotes db 0
196   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
197   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
198   85E6
199   85E6              ; Gestión de FRAMES.
200   85E6
201   85E6 00           Switch db 0
202   85E7
203   85E7              ; Variables de Raster y localización en pantalla.
204   85E7
205   85E7 00 FF        Temp_Raster defw $ff00
206   85E9
207   85E9              ; Rutina principal *************************************************************************************************************************************************************************
208   85E9              ;
209   85E9              ;	14/11/22
210   85E9
211   85E9 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
212   85EC
213   85EC 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
214   85EE ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
215   85F0 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
216   85F2 F3           	DI
217   85F3
218   85F3 3E 01        	ld a,1
219   85F5 D3 FE        	out ($fe),a
220   85F7
221   85F7 3E 07        	ld a,%00000111
222   85F9 CD 86 90     	call Cls
223   85FC
224   85FC              ;	call Pinta_FILAS
225   85FC
226   85FC CD 3B 88     	call Pulsa_ENTER
227   85FF
228   85FF 21 D7 85     	ld hl,Numero_de_entidades
229   8602 46           	ld b,(hl)
230   8603 04           	inc b
231   8604 05           	dec b
232   8605 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
233   8607
234   8607              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
235   8607              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
236   8607              ;	Pintamos el resto de entidades:
237   8607
238   8607 CD 34 87     	call Inicia_punteros_de_entidades
239   860A
240   860A              ;	INICIA ENTIDADES!!!!!
241   860A
242   860A C5           1 push bc  												; Guardo el contador de entidades.
243   860B CD 8E 87      	call Inicia_Puntero_objeto
244   860E CD D6 8A     	call Draw
245   8611 CD A0 7F     	call Guarda_foto_registros
246   8614 CD D6 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
247   8617 C1           	pop bc
248   8618 10 F0        	djnz 1B  											; Decremento el contador de entidades.
249   861A
250   861A              ; 	INICIA AMADEUS!!!!!
251   861A
252   861A CD 17 88     3 call Restore_Amadeus
253   861D CD 8E 87     	call Inicia_Puntero_objeto
254   8620 CD D6 8A     	call Draw
255   8623 CD A0 7F     	call Guarda_foto_registros
256   8626 CD 29 88     	call Store_Amadeus
257   8629
258   8629              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
259   8629
260   8629 CD 4A 87     	call Inicia_Puntero_Disparo_Entidades
261   862C CD 51 87     	call Inicia_Puntero_Disparo_Amadeus
262   862F
263   862F              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
264   862F
265   862F CD 34 87     	call Inicia_punteros_de_entidades
266   8632 CD 05 88     	call Restore_Primera_entidad
267   8635
268   8635 3A D7 85     	ld a,(Numero_de_entidades)
269   8638 3C           	inc a
270   8639 32 D8 85     	ld (Numero_de_malotes),a
271   863C
272   863C FB           2 ei
273   863D 18 FD        	jr 2B
274   863F
275   863F              ; -----------------------------------------------------------------------------------
276   863F
277   863F              Frame
278   863F
279   863F              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
280   863F              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
281   863F
282   863F 3E 02            ld a,2
283   8641 D3 FE            out ($fe),a
284   8643 CD DA 8D     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
285   8646 CD 13 8E     	call Extrae_foto_disparos
286   8649 3E 01            ld a,1
287   864B D3 FE            out ($fe),a
288   864D
289   864D              ; ----------------------------------------------------------------------
290   864D
291   864D CD 01 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
292   8650 CD 1F 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos.
293   8653
294   8653 21 00 70     	ld hl,Album_de_fotos
295   8656 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
296   8659              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
297   8659 3A D7 85         ld a,(Numero_de_entidades)
298   865C 47               ld b,a
299   865D A7           	and a
300   865E 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
301   8660
302   8660 C5           2 push bc
303   8661 CD AD 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
304   8664 3A C3 85     	ld a,(Ctrl_0)
305   8667 CB 67        	bit 4,a
306   8669 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
307   866B
308   866B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
309   866B              ; Las entidades sólo generan disparo cuando se mueven.
310   866B              ; 16/02/23.
311   866B              ; [[[
312   866B CD 72 88     	call Detecta_disparo_entidad
313   866E              ; ]]]
314   866E CD FB 86     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
315   8671
316   8671 21 C3 85     1 ld hl,Ctrl_0
317   8674 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
318   8676 AF           	xor a
319   8677 32 C4 85     	ld (Obj_dibujado),a
320   867A CD D6 87     	call Store_Restore_entidades
321   867D C1           	pop bc
322   867E 10 E0        	djnz 2B
323   8680
324   8680              ; Tras la gestión de las entidades, ... AMADEUS.
325   8680
326   8680 CD 17 88     4 call Restore_Amadeus
327   8683 CD CC 86     	call Mov_Amadeus
328   8686 3A C3 85     	ld a,(Ctrl_0)
329   8689 CB 67        	bit 4,a
330   868B 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
331   868D CD FB 86     	call Guarda_foto_entidad_a_pintar
332   8690
333   8690 21 C3 85     3 ld hl,Ctrl_0
334   8693 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
335   8695 AF           	xor a
336   8696 32 C4 85     	ld (Obj_dibujado),a
337   8699 CD 29 88     	call Store_Amadeus
338   869C
339   869C              ; -----
340   869C
341   869C CD 34 87     	call Inicia_punteros_de_entidades
342   869F CD 05 88     	call Restore_Primera_entidad
343   86A2
344   86A2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
345   86A2
346   86A2 CD 58 87     	call Calcula_numero_de_malotes
347   86A5 CD 70 87     	call Calcula_numero_de_disparotes
348   86A8
349   86A8 3E 04        	ld a,4
350   86AA D3 FE        	out ($fe),a
351   86AC C9           	ret
352   86AD
353   86AD              ; --------------------------------------------------------------------------------------------------------------
354   86AD              ;
355   86AD              ;	29/1/23
356   86AD
357   86AD              Mov_obj
358   86AD
359   86AD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
360   86AD
361   86AD AF           	xor a
362   86AE 32 C4 85     	ld (Obj_dibujado),a
363   86B1 CD 05 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
364   86B4              ;														; Obj_dibujado="0".
365   86B4              ; Movemos Entidades malignas.
366   86B4
367   86B4 CD 63 94     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
368   86B7 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
369   86BA CB 67        	bit 4,a
370   86BC C8           	ret z
371   86BD
372   86BD              ; ---------
373   86BD
374   86BD 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
375   86BF 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
376   86C2 CD 05 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
377   86C5 CD 1C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
378   86C8 CD EB 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
379   86CB C9           	ret													; _de la misma.
380   86CC
381   86CC              ; --------------------------------------------------------------------------------------------------------------
382   86CC              ;
383   86CC              ;	29/1/23
384   86CC
385   86CC              Mov_Amadeus
386   86CC
387   86CC AF           	xor a
388   86CD 32 C4 85     	ld (Obj_dibujado),a
389   86D0 CD 05 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
390   86D3              ;														; Obj_dibujado="0".
391   86D3              ; Movemos Amadeus.
392   86D3
393   86D3 CD 4F 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
394   86D6 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
395   86D9 CB 67        	bit 4,a
396   86DB C8           	ret z
397   86DC
398   86DC              ; ---------
399   86DC
400   86DC 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
401   86DE 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
402   86E1 CD 05 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
403   86E4 CD 1C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
404   86E7 CD EB 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
405   86EA C9           	ret													; _de la nave.
406   86EB
407   86EB              ; --------------------------------------------------------------------------------------------------------------
408   86EB              ;
409   86EB              ;	31/01/23
410   86EB              ;
411   86EB              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
412   86EB
413   86EB              Guarda_foto_entidad_a_borrar
414   86EB
415   86EB CD B0 8D     	call Prepara_draw
416   86EE CD EA 8C     	call calcula_CColumnass
417   86F1 CD 21 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
418   86F4 CD 76 8D     	call Define_rutina_de_impresion
419   86F7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
420   86FA C9           	ret
421   86FB
422   86FB              ; --------------------------------------------------------------------------------------------------------------
423   86FB              ;
424   86FB              ;	31/01/23
425   86FB              ;
426   86FB              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
427   86FB              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
428   86FB
429   86FB              Guarda_foto_entidad_a_pintar
430   86FB
431   86FB CD 28 87     	call Repone_pintar
432   86FE CD D6 8A     	call Draw
433   8701 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
434   8704 C9           	ret
435   8705
436   8705              ; --------------------------------------------------------------------------------------------------------------
437   8705              ;
438   8705              ;
439   8705
440   8705 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
441   8708 3A C4 85     	ld a,(Obj_dibujado)
442   870B A7           	and a
443   870C 28 05        	jr z,1F
444   870E 11 B9 85     	ld de,Variables_de_pintado
445   8711 18 03        	jr 2F
446   8713 11 AF 85     1 ld de,Variables_de_borrado
447   8716 01 08 00     2 ld bc,8
448   8719 ED B0        	ldir
449   871B C9           	ret
450   871C
451   871C              ; --------------------------------------------------------------------------------------------------------------
452   871C
453   871C 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
454   871F 11 96 85     	ld de,Filas
455   8722 01 08 00     	ld bc,8
456   8725 ED B0        	ldir
457   8727 C9           	ret
458   8728
459   8728 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
460   872B 11 96 85     	ld de,Filas
461   872E 01 08 00     	ld bc,8
462   8731 ED B0        	ldir
463   8733 C9           	ret
464   8734
465   8734              ; *************************************************************************************************************************************************************
466   8734              ;
467   8734              ; 8/1/23
468   8734              ;
469   8734              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
470   8734              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
471   8734              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
472   8734
473   8734              ; Destruye HL y DE !!!!!
474   8734
475   8734              Inicia_punteros_de_entidades
476   8734
477   8734 21 68 84     	ld hl,Indice_de_entidades
478   8737 CD 88 87         call Extrae_address
479   873A 22 D1 85         ld (Puntero_store_entidades),hl
480   873D 21 6A 84     	ld hl,Indice_de_entidades+2
481   8740 22 D5 85     	ld (Indice_restore),hl
482   8743 CD 88 87     	call Extrae_address
483   8746 22 D3 85     	ld (Puntero_restore_entidades),hl
484   8749 C9               ret
485   874A
486   874A              ; *************************************************************************************************************************************************************
487   874A              ;
488   874A              ; 8/1/23
489   874A              ;
490   874A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
491   874A
492   874A 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
493   874D 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
494   8750 C9           	ret
495   8751 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
496   8754 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
497   8757 C9           	ret
498   8758
499   8758              ; -------------------------------------------------------------------------------------------------------------
500   8758              ;
501   8758              ; 28/2/23
502   8758              ;
503   8758
504   8758              Calcula_numero_de_malotes
505   8758
506   8758 21 00 70     	ld hl,Album_de_fotos
507   875B EB           	ex de,hl
508   875C 2A DD 85     	ld hl,(Stack_snapshot)
509   875F
510   875F 06 00        	ld b,0
511   8761 7D           	ld a,l
512   8762 93           	sub e
513   8763 28 07        	jr z,1F
514   8765
515   8765              ; Nº de malotes no es "0".
516   8765
517   8765 D6 06        2 sub 6
518   8767 04           	inc b
519   8768 A7           	and a
520   8769 20 FA        	jr nz,2B
521   876B 78           	ld a,b
522   876C
523   876C 32 D8 85     1 ld (Numero_de_malotes),a
524   876F C9           	ret
525   8770
526   8770              ; -------------------------------------------------------------------------------------------------------------
527   8770              ;
528   8770              ; 28/2/23
529   8770              ;
530   8770
531   8770              Calcula_numero_de_disparotes
532   8770
533   8770 21 60 70     	ld hl,Album_de_fotos_disparos
534   8773 EB           	ex de,hl
535   8774 2A DF 85     	ld hl,(Stack_snapshot_disparos)
536   8777
537   8777 06 00        	ld b,0
538   8779 7D           	ld a,l
539   877A 93           	sub e
540   877B 28 07        	jr z,1F
541   877D
542   877D              ; Nº de malotes no es "0".
543   877D
544   877D D6 06        2 sub 6
545   877F 04           	inc b
546   8780 A7           	and a
547   8781 20 FA        	jr nz,2B
548   8783 78           	ld a,b
549   8784
550   8784 32 E1 85     1 ld (Numero_de_disparotes),a
551   8787 C9           	ret
552   8788              ; *************************************************************************************************************************************************************
553   8788              ;
554   8788              ; 20/10/22
555   8788              ;
556   8788              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
557   8788              ;
558   8788              ; Destruye el puntero y DE !!!!!
559   8788
560   8788 5E           Extrae_address ld e,(hl)
561   8789 23           	inc hl
562   878A 56           	ld d,(hl)
563   878B 2B           	dec hl
564   878C EB           	ex de,hl
565   878D C9           	ret
566   878E
567   878E              ; *************************************************************************************************************************************************************
568   878E              ;
569   878E              ;	7/2/23
570   878E              ;
571   878E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
572   878E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
573   878E              ;
574   878E              ;   Destruye HL y BC !!!!!,
575   878E              ;
576   878E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
577   878E              ;					"0" ..... Izquierda.
578   878E
579   878E              Inicia_Puntero_objeto
580   878E
581   878E 3A AA 85     	ld a,(Cuad_objeto)
582   8791 E6 01        	and 1
583   8793 F5           	push af
584   8794 CC B2 87     	call z,Inicia_puntero_objeto_izq
585   8797 F1           	pop af
586   8798 28 2B        	jr z,1F
587   879A CD 9F 87     	call Inicia_puntero_objeto_der
588   879D 18 26        	jr 1F
589   879F
590   879F              ; Arrancamos desde la parte izquierda de la pantalla.
591   879F              ; Iniciamos (Indice_Sprite_der).
592   879F
593   879F 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
594   87A2 22 A4 85     	ld (Puntero_DESPLZ_der),hl
595   87A5 CD 88 87     	call Extrae_address
596   87A8 22 9A 85     	ld (Puntero_objeto),hl
597   87AB
598   87AB 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
599   87AE              ;	call Extrae_address
600   87AE 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
601   87B1 C9           	ret
602   87B2
603   87B2              ; Arrancamos desde la parte derecha de la pantalla.
604   87B2              ; Iniciamos (Indice_Sprite_izq).
605   87B2
606   87B2 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
607   87B5 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
608   87B8 CD 88 87     	call Extrae_address
609   87BB 22 9A 85     	ld (Puntero_objeto),hl
610   87BE
611   87BE 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
612   87C1              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
613   87C1 22 A4 85     	ld (Puntero_DESPLZ_der),hl
614   87C4 C9           	ret
615   87C5
616   87C5              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
617   87C5
618   87C5 21 38 83     1 ld hl,Amadeus
619   87C8 ED 4B 9A 85  	ld bc,(Puntero_objeto)
620   87CC B7 ED 42     	sub hl,bc
621   87CF C0           	ret nz
622   87D0 21 C3 85     	ld hl,Ctrl_0
623   87D3 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
624   87D5 C9           	ret 												; _de nuestra nave en los extremos.
625   87D6
626   87D6              ; *************************************************************************************************************************************************************
627   87D6              ;
628   87D6              ;	8/1/23
629   87D6              ;
630   87D6              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
631   87D6              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
632   87D6
633   87D6              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
634   87D6              ;	_de la 2ª y 3ª entidad respectivamente.
635   87D6
636   87D6              Store_Restore_entidades
637   87D6
638   87D6 E5           	push hl
639   87D7 D5           	push de
640   87D8 C5            	push bc
641   87D9
642   87D9              ;	STORE !!!!!
643   87D9              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
644   87D9
645   87D9 21 96 85     	ld hl,Filas
646   87DC ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
647   87E0 01 3A 00     	ld bc,58
648   87E3 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
649   87E5
650   87E5              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
651   87E5
652   87E5 2A D3 85     	ld hl,(Puntero_restore_entidades)
653   87E8 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
654   87EB 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
655   87EE 01 3A 00     	ld bc,58
656   87F1 ED B0        	ldir
657   87F3
658   87F3              ;	Incrementa RESTORE !!!!!
659   87F3
660   87F3 2A D5 85         ld hl,(Indice_restore)
661   87F6 23           	inc hl
662   87F7 23           	inc hl
663   87F8 22 D5 85     	ld (Indice_restore),hl
664   87FB CD 88 87         call Extrae_address
665   87FE 22 D3 85         ld (Puntero_restore_entidades),hl
666   8801 C1           	pop bc
667   8802 D1           	pop de
668   8803 E1           	pop hl
669   8804 C9           	ret
670   8805
671   8805              ; **************************************************************************************************
672   8805              ;
673   8805              ;	29/10/22
674   8805              ;
675   8805              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
676   8805
677   8805 E5           Restore_Primera_entidad push hl
678   8806 D5           	push de
679   8807 C5            	push bc
680   8808 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
681   880B 11 96 85     	ld de,Filas
682   880E 01 3A 00     	ld bc,58
683   8811 ED B0        	ldir
684   8813 C1           	pop bc
685   8814 D1           	pop de
686   8815 E1           	pop hl
687   8816 C9           	ret
688   8817
689   8817              ; **************************************************************************************************
690   8817              ;
691   8817              ;	25/01/23
692   8817              ;
693   8817              ;	Restore_Amadeus
694   8817              ;
695   8817              ;	Cargamos en DRAW los parámetros de Amadeus.
696   8817              ;
697   8817
698   8817 E5           Restore_Amadeus	push hl
699   8818 D5           	push de
700   8819 C5            	push bc
701   881A 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
702   881D 11 96 85     	ld de,Filas
703   8820 01 3A 00     	ld bc,58
704   8823 ED B0        	ldir
705   8825 C1           	pop bc
706   8826 D1           	pop de
707   8827 E1           	pop hl
708   8828 C9           	ret
709   8829
710   8829              ; *************************************************************************************************************************************************************
711   8829              ;
712   8829              ;	29/01/23
713   8829              ;
714   8829              ;	Store_Amadeus
715   8829              ;
716   8829              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
717   8829              ;
718   8829
719   8829 E5           Store_Amadeus push hl
720   882A D5           	push de
721   882B C5            	push bc
722   882C 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
723   882F 11 74 84     	ld de,Amadeus_db
724   8832 01 3A 00     	ld bc,58
725   8835 ED B0        	ldir
726   8837 C1           	pop bc
727   8838 D1           	pop de
728   8839 E1           	pop hl
729   883A C9           	ret
730   883B
731   883B              ; **************************************************************************************************
732   883B
733   883B              ; Teclado.
734   883B
735   883B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
736   883D DB FE        	in a,($fe)
737   883F E6 01        	and $01
738   8841 28 02        	jr z,1f
739   8843 18 F6        	jr Pulsa_ENTER
740   8845 C9           1 ret
741   8846
742   8846              ; **************************************************************************************************
743   8846              ;
744   8846              ; Temporización.
745   8846
746   8846              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
747   8846              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
748   8846              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
749   8846              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
750   8846
751   8846              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
752   8846              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
753   8846              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
754   8846
755   8846              ; A partir de $4f61 no hace falta DELAY.
756   8846
757   8846              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
758   8846
759   8846 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
760   8849 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
761   884A 78           	LD A,B
762   884B A7           	AND A
763   884C 20 FB        	JR NZ,wait
764   884E C9           	RET
765   884F
766   884F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
767   884F              ;
768   884F              ;	5/3/23
769   884F              ;
770   884F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
771   884F
772   884F              Movimiento_Amadeus
773   884F
774   884F              ; Disparo.
775   884F
776   884F 3E F7        	ld a,$f7												; "5" para disparar.
777   8851 DB FE        	in a,($fe)
778   8853 E6 10        	and $10
779   8855 CC A6 88     	call z,Genera_disparo
780   8858
781   8858 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
782   885A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
783   885C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
784   885E CC 14 92         call z,Mov_left											;			"			"			"			"			"			"			"			"
785   8861 3E F7        	ld a,$f7
786   8863 DB FE        	in a,($fe)
787   8865 E6 01        	and $01
788   8867 C8           	ret z
789   8868
790   8868 3E F7        	ld a,$f7
791   886A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
792   886C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
793   886E CC F6 90     	call z,Mov_right										;			"			"			"			"			"			"			"			"
794   8871 C9           	ret
795   8872
796   8872              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
797   8872              ;
798   8872              ;	Rutina provisional para que los malotes cagen balas.
799   8872
800   8872 3E 7F        Detecta_disparo_entidad ld a,$7f
801   8874 DB FE        	in a,($fe)
802   8876 E6 01        	and 1
803   8878 C0           	ret nz
804   8879 CD A6 88     	call Genera_disparo
805   887C C9           	ret
806   887D
807   887D              ; Pinta indicadores de FILAS. ------------------------------------------------------
808   887D
809   887D 21 10 40     Pinta_FILAS ld hl,$4010
810   8880              ;	ld b,9
811   8880              ;2 push hl
812   8880              ;	push bc
813   8880 06 BF        	ld b,$bf
814   8882 36 80        1 ld (hl),%10000000
815   8884 CD BC 8D     	call NextScan
816   8887 10 F9        	djnz 1B
817   8889              ;	pop bc
818   8889              ;	pop hl
819   8889              ;	inc l
820   8889              ;	djnz 2B
821   8889 06 03        	ld b,3
822   888B 21 00 47         ld hl,$4700
823   888E CD 94 88     3 call Bucle_1
824   8891 10 FB            djnz 3B
825   8893 C9               ret
826   8894
827   8894 C5           Bucle_1 push bc
828   8895 E5                   push hl
829   8896 D1                   pop de
830   8897 13                   inc de
831   8898 01 FF 00             ld bc,255
832   889B 36 FF                ld (hl),255
833   889D ED B0                ldir
834   889F 23                   inc hl
835   88A0 3E 07                ld a,7
836   88A2 84                   add a,h
837   88A3 67                   ld h,a
838   88A4 C1                   pop bc
839   88A5 C9                   ret
840   88A6
841   88A6              ; ---------------------------------------------------------------
842   88A6
843   88A6              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88A6              ; ******************************************************************************************************************************************************************************************
  2+  88A6              ;
  3+  88A6              ;   19/02/23
  4+  88A6              ;
  5+  88A6              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88A6              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88A6              ;
  8+  88A6              ;
  9+  88A6              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88A6              ;
 11+  88A6              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88A6              ;               _ hacen las entidades hacia abajo.
 13+  88A6              ;
 14+  88A6              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88A6              ;
 16+  88A6              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88A6              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88A6              ;
 19+  88A6              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88A6              ;           _ la bala.
 21+  88A6              ;
 22+  88A6              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88A6              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88A6              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88A6              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88A6              ;           _ en el momento de generarse la bala)).
 27+  88A6
 28+  88A6              Genera_disparo
 29+  88A6
 30+  88A6              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88A6              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88A6              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88A6              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88A6              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88A6              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88A6              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88A6
 38+  88A6 3A CC 85         ld a,(Columnas)
 39+  88A9 47               ld b,a
 40+  88AA 3A 97 85         ld a,(Columns)
 41+  88AD B8               cp b
 42+  88AE C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  88AF
 44+  88AF              ; ----- ----- -----
 45+  88AF
 46+  88AF 21 00 80         ld hl,Indice_disparo
 47+  88B2 3A 9E 85         ld a,(CTRL_DESPLZ)
 48+  88B5 4F               ld c,a
 49+  88B6 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 50+  88B8              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 51+  88B8              ;                                            ""        ""       "f9", B="1"
 52+  88B8              ;                                            ""        ""       "fb", B="2"
 53+  88B8              ;                                            ""        ""       "fb", B="3"
 54+  88B8 A7               and a
 55+  88B9 28 10            jr z,1F
 56+  88BB E6 01            and 1
 57+  88BD C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 58+  88BE
 59+  88BE 79               ld a,c
 60+  88BF 16 F9            ld d,$f9
 61+  88C1 23           2 inc hl
 62+  88C2 23               inc hl
 63+  88C3 04               inc b
 64+  88C4 BA               cp d
 65+  88C5 28 04            jr z,1F
 66+  88C7 14               inc d
 67+  88C8 14               inc d
 68+  88C9 18 F6            jr 2B
 69+  88CB
 70+  88CB CD 88 87     1 call Extrae_address
 71+  88CE E5               push hl
 72+  88CF FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 73+  88D1 DD 21 4F 90  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 74+  88D5
 75+  88D5              ;	Se cumplen las condiciones necesarias para generar un disparo.
 76+  88D5              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 77+  88D5
 78+  88D5 3A AA 85     	ld a,(Cuad_objeto)
 79+  88D8 FE 02            cp 2
 80+  88DA 38 60            jr c,3F
 81+  88DC 28 5E            jr z,3F
 82+  88DE
 83+  88DE              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 84+  88DE
 85+  88DE E6 01            and 1
 86+  88E0 28 2D            jr z,4F
 87+  88E2
 88+  88E2              ; 	Estamos en el 3er cuadrante de pantalla.
 89+  88E2              ; 	3er CUAD. ----- ----- ----- ----- -----
 90+  88E2              ;
 91+  88E2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 92+  88E2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 93+  88E2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 94+  88E2
 95+  88E2 2A 98 85     	ld hl,(Posicion_actual)
 96+  88E5
 97+  88E5              ;   Amadeus o entidad ???.
 98+  88E5
 99+  88E5 3A C3 85         ld a,(Ctrl_0)
100+  88E8 CB 77            bit 6,a
101+  88EA 28 0D            jr z,8F
102+  88EC
103+  88EC              ; 	Dispara Amadeus.
104+  88EC
105+  88EC 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
106+  88EE CD CB 8D         call PreviousScan
107+  88F1 CD CB 8D         call PreviousScan
108+  88F4
109+  88F4              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
110+  88F4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
111+  88F4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
112+  88F4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
113+  88F4
114+  88F4 CD 66 89         call Ajusta_disparo_parte_izquierda
115+  88F7 18 0E            jr 10F
116+  88F9
117+  88F9              ; 	Dispara Entidad.
118+  88F9
119+  88F9 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
120+  88FB
121+  88FB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
122+  88FB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
123+  88FB
124+  88FB C5               push bc
125+  88FC 06 10            ld b,16
126+  88FE CD BC 8D     9 call NextScan
127+  8901 10 FB            djnz 9B
128+  8903 C1               pop bc
129+  8904
130+  8904              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
131+  8904              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
132+  8904              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
133+  8904              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
134+  8904
135+  8904 CD 66 89         call Ajusta_disparo_parte_izquierda
136+  8907
137+  8907 CD DB 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
138+  890A              ;                                                   ; _al generar el disparo.
139+  890A
140+  890A              ; 	LLegados a este punto tendremos:
141+  890A              ;
142+  890A              ;       Puntero_objeto_disparo en IY.
143+  890A              ;       Rutinas_de_impresion en IX.
144+  890A              ;       Puntero_de_impresion en HL.
145+  890A              ;       Impacto/Dirección en BC.
146+  890A
147+  890A CD 6E 89         call Almacena_disparo
148+  890D 18 4F            jr 6F                                           ; RET.
149+  890F
150+  890F
151+  890F              ; 	Estamos en el 4º cuadrante de pantalla.
152+  890F              ; 	4º CUAD. ----- ----- ----- ----- -----
153+  890F              ;
154+  890F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
155+  890F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
156+  890F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
157+  890F
158+  890F 2A 98 85     4 ld hl,(Posicion_actual)
159+  8912
160+  8912              ;   Amadeus o entidad ???.
161+  8912
162+  8912 3A C3 85         ld a,(Ctrl_0)
163+  8915 CB 77            bit 6,a
164+  8917 28 0D            jr z,11F
165+  8919
166+  8919              ; 	Dispara Amadeus.
167+  8919
168+  8919 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
169+  891B CD CB 8D         call PreviousScan
170+  891E CD CB 8D         call PreviousScan
171+  8921
172+  8921              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
173+  8921              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
174+  8921              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
175+  8921              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
176+  8921
177+  8921 CD 5F 89         call Ajusta_disparo_parte_derecha
178+  8924 18 0E            jr 13F
179+  8926
180+  8926              ; 	Dispara Entidad.
181+  8926
182+  8926 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
183+  8928
184+  8928              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
185+  8928              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
186+  8928
187+  8928 C5               push bc
188+  8929
189+  8929 06 10            ld b,16
190+  892B CD BC 8D     12 call NextScan
191+  892E 10 FB            djnz 12B
192+  8930
193+  8930 C1               pop bc
194+  8931
195+  8931              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
196+  8931              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
197+  8931              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
198+  8931              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
199+  8931
200+  8931 CD 5F 89         call Ajusta_disparo_parte_derecha
201+  8934
202+  8934 CD DB 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
203+  8937              ;                                                     ; _al generar el disparo.
204+  8937
205+  8937              ; LLegados a este punto tendremos:
206+  8937              ;
207+  8937              ;       Puntero_objeto_disparo en IY.
208+  8937              ;       Rutinas_de_impresion en IX.
209+  8937              ;       Puntero_de_impresion en HL.
210+  8937              ;       Impacto/Dirección en BC.
211+  8937
212+  8937 CD 6E 89         call Almacena_disparo
213+  893A 18 22            jr 6F                                           ; RET.
214+  893C
215+  893C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
216+  893C
217+  893C 28 11        3 jr z,5F
218+  893E
219+  893E              ; 	1er CUAD. ----- ----- ----- ----- -----
220+  893E              ;
221+  893E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
222+  893E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
223+  893E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
224+  893E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
225+  893E
226+  893E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
227+  893E              ;	   ""        ""       "f9", B="1"
228+  893E              ;	   ""        ""       "fb", B="2"
229+  893E              ; 	   ""        ""       "fb", B="3"
230+  893E
231+  893E 2A 98 85     	ld hl,(Posicion_actual)
232+  8941 CD BC 8D     	call NextScan
233+  8944
234+  8944              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
235+  8944              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
236+  8944              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
237+  8944              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
238+  8944
239+  8944 CD 66 89         call Ajusta_disparo_parte_izquierda
240+  8947
241+  8947              ; 	No se produce impacto. B="$80"
242+  8947              ; 	Dirección del proyectil hacia abajo. C="$80"
243+  8947
244+  8947 01 80 80         ld bc,$8080
245+  894A
246+  894A              ; 	LLegados a este punto tendremos:
247+  894A              ;
248+  894A              ;       Puntero_objeto_disparo en IY.
249+  894A              ;       Rutinas_de_impresion en IX.
250+  894A              ;       Puntero_de_impresion en HL.
251+  894A              ;       Impacto/Dirección en BC.
252+  894A
253+  894A CD 6E 89         call Almacena_disparo
254+  894D 18 0F            jr 6F                                           ; RET.
255+  894F
256+  894F              ; 	Estamos en el 2º cuadrante de pantalla.
257+  894F              ; 	2º CUAD. ----- ----- ----- ----- -----
258+  894F              ;
259+  894F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
260+  894F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
261+  894F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
262+  894F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
263+  894F
264+  894F 2A 98 85     5 ld hl,(Posicion_actual)
265+  8952 CD BC 8D     	call NextScan
266+  8955
267+  8955              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
268+  8955              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
269+  8955              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
270+  8955              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
271+  8955
272+  8955 CD 5F 89         call Ajusta_disparo_parte_derecha
273+  8958
274+  8958              ; 	No se produce impacto. B="$80"
275+  8958              ; 	Dirección del proyectil hacia abajo. C="80"
276+  8958
277+  8958 01 80 80     15 ld bc,$8080
278+  895B
279+  895B              ; 	LLegados a este punto tendremos:
280+  895B              ;
281+  895B              ;       Puntero_objeto_disparo en IY.
282+  895B              ;       Rutinas_de_impresion en IX.
283+  895B              ;       Puntero_de_impresion en HL.
284+  895B              ;       Impacto/Dirección en BC.
285+  895B
286+  895B CD 6E 89         call Almacena_disparo
287+  895E
288+  895E C9           6 ret
289+  895F
290+  895F              ; ----------------------------------------------------------------
291+  895F              ;
292+  895F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
293+  895F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
294+  895F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
295+  895F
296+  895F 78           Ajusta_disparo_parte_derecha ld a,b
297+  8960 FE 02            cp 2
298+  8962 38 01            jr c,1F
299+  8964 23               inc hl
300+  8965 C9           1 ret
301+  8966
302+  8966 78           Ajusta_disparo_parte_izquierda ld a,b
303+  8967 FE 01        	cp 1
304+  8969 20 01        	jr nz,1F
305+  896B 2B           	dec hl
306+  896C 2B           1 dec hl
307+  896D C9               ret
308+  896E
309+  896E              ; ----------------------------------------------------------------
310+  896E              ;
311+  896E              ;   25/02/23
312+  896E              ;
313+  896E              ;   La Rutina va almacenando disparos en sus respectiva bases de datos.
314+  896E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
315+  896E
316+  896E              Almacena_disparo
317+  896E
318+  896E E5               push hl  										; HL contiene el puntero de impresión.
319+  896F F1               pop af
320+  8970 08               ex af,af                                        ; Puntero_de_impresion en AF'.
321+  8971
322+  8971 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
323+  8972 E6 01            and 1
324+  8974 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
325+  8976              ;                                                   ; _ es Amadeus o una entidad la que dispara.
326+  8976              ; 	Dispara AMADEUS.
327+  8976
328+  8976              ;	Comprobamos que a Amadeus aún le quedan disparos.
329+  8976              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
330+  8976              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
331+  8976              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
332+  8976
333+  8976 C5               push bc
334+  8977 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
335+  897A 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
336+  897D A7               and a
337+  897E ED 42            sbc hl,bc
338+  8980 CC 51 87         call z,Inicia_Puntero_Disparo_Amadeus
339+  8983 C1               pop bc
340+  8984 28 54            jr z,4F
341+  8986
342+  8986 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
343+  8989 23               inc hl
344+  898A 23               inc hl
345+  898B 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
346+  898E              ;                                                   ; _ Disparo_(+1).
347+  898E 18 18            jr 2F
348+  8990
349+  8990              ; Dispara una entidad.
350+  8990
351+  8990 C5           1 push bc
352+  8991 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
353+  8994 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
354+  8997 A7               and a
355+  8998 ED 42            sbc hl,bc
356+  899A CC 4A 87         call z,Inicia_Puntero_Disparo_Entidades
357+  899D C1               pop bc
358+  899E 28 3A            jr z,4F
359+  89A0
360+  89A0 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
361+  89A3 23               inc hl
362+  89A4 23               inc hl
363+  89A5 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
364+  89A8              ;                                                   ; _ Disparo_(+1).
365+  89A8 CD 88 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
366+  89AB              ;                                                   ; _ los 8 bytes que definen el disparo:
367+  89AB              ;
368+  89AB              ;                                                     Puntero_objeto_disparo en IY.
369+  89AB              ;                                                     Rutinas_de_impresion en IX.
370+  89AB              ;                                                     Puntero_de_impresion en HL.
371+  89AB              ;                                                     Impacto/Dirección en BC.
372+  89AB
373+  89AB 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
374+  89AC 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
375+  89AD 23               inc hl                                          ; _ al siguiente.
376+  89AE A7               and a
377+  89AF 20 C0            jr nz,3B
378+  89B1
379+  89B1 08               ex af,af
380+  89B2 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
381+  89B6 F9               ld sp,hl
382+  89B7
383+  89B7 DD E5            push ix                                         ; Rutina de impresión.
384+  89B9 F5               push af                                         ; Puntero de impresión.
385+  89BA FD E5            push iy                                         ; Puntero objeto.
386+  89BC C5               push bc                                         ; Control.
387+  89BD
388+  89BD ED 7B D9 85      ld sp,(Stack)
389+  89C1
390+  89C1              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
391+  89C1
392+  89C1 21 D0 85     	ld hl,Ctrl_1
393+  89C4 CB C6        	set 0,(hl)
394+  89C6
395+  89C6 DD E5        	push ix
396+  89C8 E1               pop hl
397+  89C9 F5               push af
398+  89CA DD E1            pop ix
399+  89CC
400+  89CC CD A0 7F     	call Guarda_foto_registros
401+  89CF
402+  89CF 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
403+  89D2 CB 86        	res 0,(hl)
404+  89D4
405+  89D4              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
406+  89D4              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
407+  89D4
408+  89D4 CD 51 87         call Inicia_Puntero_Disparo_Amadeus
409+  89D7 CD 4A 87         call Inicia_Puntero_Disparo_Entidades
410+  89DA
411+  89DA C9           4 ret
412+  89DB
413+  89DB              ; ----------------------------------------------------------------
414+  89DB              ;
415+  89DB              ;   4/3/23
416+  89DB              ;
417+  89DB              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
418+  89DB              ;   _ al generarse el disparo.
419+  89DB              ;       "$80" ..... No se produce colisión.
420+  89DB              ;       "$81" ..... Se produce colisión.
421+  89DB
422+  89DB E5           Comprueba_Colision push hl
423+  89DC 1E 80            ld e,$80                                       ; E,(Impacto)="0".
424+  89DE CD F3 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
425+  89E1
426+  89E1 7B               ld a,e
427+  89E2 E6 01            and 1
428+  89E4 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
429+  89E6
430+  89E6              ; Hay impacto.
431+  89E6
432+  89E6 43           2 ld b,e
433+  89E7 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
434+  89E8 C9           3 ret
435+  89E9
436+  89E9 E1           1 pop hl
437+  89EA E5               push hl
438+  89EB CD BC 8D         call NextScan
439+  89EE CD F3 89         call Bucle_2
440+  89F1 18 F3            jr 2B
441+  89F3
442+  89F3              ; ---------- ----------
443+  89F3
444+  89F3 06 02        Bucle_2 ld b,2
445+  89F5 7E           2 ld a,(hl)
446+  89F6 A7               and a
447+  89F7 20 04            jr nz,1F
448+  89F9 23               inc hl
449+  89FA 10 F9            djnz 2B
450+  89FC C9           3 ret
451+  89FD 1E 81        1 ld e,$81
452+  89FF 18 FB            jr 3B
453+  8A01
454+  8A01              ; -------------------------------------------------------------------------------------------------------------
455+  8A01              ;
456+  8A01              ;   13/03/23
457+  8A01              ;
458+  8A01              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
459+  8A01              ;
460+  8A01              ;   DESTRUYE: HL,BC,DE y A.
461+  8A01
462+  8A01 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
463+  8A04 7E               ld a,(hl)
464+  8A05 A7               and a
465+  8A06 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
466+  8A07
467+  8A07 44               ld b,h
468+  8A08 4D               ld c,l
469+  8A09 2A DF 85         ld hl,(Stack_snapshot_disparos)
470+  8A0C E5               push hl
471+  8A0D A7               and a
472+  8A0E ED 42            sbc hl,bc
473+  8A10 E5               push hl
474+  8A11 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
475+  8A12
476+  8A12 E1               pop hl
477+  8A13 54               ld d,h
478+  8A14 5D               ld e,l
479+  8A15 1B               dec de
480+  8A16 ED B8            lddr                                                ; Limpiamos.
481+  8A18
482+  8A18 21 60 70         ld hl,Album_de_fotos_disparos
483+  8A1B 22 DF 85         ld (Stack_snapshot_disparos),hl
484+  8A1E
485+  8A1E C9               ret
486+  8A1F
487+  8A1F              ; -------------------------------------------------------------------------------------------------------------
488+  8A1F              ;
489+  8A1F              ;   14/03/23
490+  8A1F              ;
491+  8A1F
492+  8A1F 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
493+  8A22 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
494+  8A25
495+  8A25 CD 88 87     2 call Extrae_address
496+  8A28 7E               ld a,(hl)
497+  8A29 A7               and a
498+  8A2A 28 0D            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
499+  8A2C
500+  8A2C              ; ----- ----- ----- ----- ----- -----
501+  8A2C
502+  8A2C C5               push bc
503+  8A2D CD 76 8A         call foto_disparo_a_borrar
504+  8A30 CD 9F 8A         call Mueve_disparo
505+  8A33 CD 76 8A         call foto_disparo_a_borrar
506+  8A36 C1               pop bc
507+  8A37
508+  8A37 18 04            jr 7F
509+  8A39
510+  8A39              ; ----- ----- ----- ----- ----- -----
511+  8A39
512+  8A39 ED 42        1 sbc hl,bc
513+  8A3B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
514+  8A3D
515+  8A3D 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
516+  8A40 23               inc hl
517+  8A41 23               inc hl
518+  8A42 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
519+  8A45 18 DE            jr 2B
520+  8A47
521+  8A47 CD 51 87     3 call Inicia_Puntero_Disparo_Amadeus
522+  8A4A
523+  8A4A 01 66 84         ld bc,Disparo_11
524+  8A4D 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
525+  8A50
526+  8A50 CD 88 87     5 call Extrae_address
527+  8A53 7E               ld a,(hl)
528+  8A54 A7               and a
529+  8A55 28 0D            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
530+  8A57
531+  8A57              ; ----- ----- ----- ----- ----- -----
532+  8A57
533+  8A57 C5               push bc
534+  8A58
535+  8A58 CD 76 8A         call foto_disparo_a_borrar
536+  8A5B CD 9F 8A         call Mueve_disparo
537+  8A5E CD 76 8A         call foto_disparo_a_borrar
538+  8A61
539+  8A61 C1               pop bc
540+  8A62
541+  8A62 18 04            jr 8F
542+  8A64
543+  8A64              ; ----- ----- ----- ----- ----- -----
544+  8A64
545+  8A64 ED 42        4 sbc hl,bc
546+  8A66 28 0A            jr z,6F
547+  8A68
548+  8A68 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
549+  8A6B 23               inc hl
550+  8A6C 23               inc hl
551+  8A6D 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
552+  8A70 18 DE            jr 5B
553+  8A72
554+  8A72 CD 4A 87     6 call Inicia_Puntero_Disparo_Entidades
555+  8A75 C9               ret
556+  8A76
557+  8A76              ; ------------------------------------------------------------------
558+  8A76
559+  8A76              foto_disparo_a_borrar
560+  8A76
561+  8A76 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
562+  8A77 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
563+  8A78 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
564+  8A79
565+  8A79 E5               push hl
566+  8A7A 23               inc hl
567+  8A7B 23               inc hl
568+  8A7C ED 73 D9 85      ld (Stack),sp
569+  8A80 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
570+  8A81 FD E1            pop iy
571+  8A83 DD E1            pop ix
572+  8A85 E1               pop hl
573+  8A86 ED 7B D9 85      ld sp,(Stack)
574+  8A8A 3A D0 85         ld a,(Ctrl_1)
575+  8A8D CB C7            set 0,a
576+  8A8F 32 D0 85         ld (Ctrl_1),a
577+  8A92 CD A0 7F         call Guarda_foto_registros
578+  8A95 3A D0 85         ld a,(Ctrl_1)
579+  8A98 CB 87            res 0,a
580+  8A9A 32 D0 85         ld (Ctrl_1),a
581+  8A9D E1               pop hl
582+  8A9E C9               ret
583+  8A9F
584+  8A9F E5           Mueve_disparo push hl
585+  8AA0 7E               ld a,(hl)
586+  8AA1 06 04            ld b,4
587+  8AA3 23           1 inc hl
588+  8AA4 10 FD            djnz 1B
589+  8AA6
590+  8AA6 CD 88 87         call Extrae_address
591+  8AA9
592+  8AA9 E6 01            and 1
593+  8AAB 28 13            jr z,2F
594+  8AAD
595+  8AAD              ; Disparo hacia arriba, (Amadeus).
596+  8AAD
597+  8AAD              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
598+  8AAD              ; _ de la dificultad.
599+  8AAD
600+  8AAD CD CB 8D         call PreviousScan
601+  8AB0              ;    call PreviousScan
602+  8AB0              ;    call PreviousScan
603+  8AB0              ;    call PreviousScan
604+  8AB0
605+  8AB0              ; Detecta si el disparo de Amadeus sale de pantalla:
606+  8AB0
607+  8AB0 7C               ld a,h
608+  8AB1 FE 40            cp $40
609+  8AB3 30 05            jr nc,3F
610+  8AB5
611+  8AB5              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
612+  8AB5
613+  8AB5 CD C5 8A         call Elimina_disparo_de_base_de_datos
614+  8AB8 18 04            jr 4F
615+  8ABA
616+  8ABA EB           3 ex de,hl
617+  8ABB
618+  8ABB 73               ld (hl),e
619+  8ABC 23               inc hl
620+  8ABD 72               ld (hl),d
621+  8ABE
622+  8ABE E1           4 pop hl
623+  8ABF C9               ret
624+  8AC0
625+  8AC0              ; Disparo hacia abajo, (Entidad).
626+  8AC0
627+  8AC0              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
628+  8AC0              ; _ de la dificultad.
629+  8AC0
630+  8AC0 CD BC 8D     2 call NextScan
631+  8AC3              ;    call NextScan
632+  8AC3              ;    call NextScan
633+  8AC3              ;    call NextScan
634+  8AC3
635+  8AC3              ; TRABAJAR LÍMITE SUPERIOR DEL DISPAROOOOO !!!!!!!!!!!
636+  8AC3
637+  8AC3 18 F5            jr 3B
638+  8AC5
639+  8AC5              Elimina_disparo_de_base_de_datos
640+  8AC5
641+  8AC5 EB               ex de,hl
642+  8AC6 06 04            ld b,4
643+  8AC8 2B           1 dec hl
644+  8AC9 10 FD            djnz 1B
645+  8ACB 01 07 00         ld bc,7
646+  8ACE
647+  8ACE AF               xor a
648+  8ACF 77               ld (hl),a
649+  8AD0 54               ld d,h
650+  8AD1 5D               ld e,l
651+  8AD2 13               inc de
652+  8AD3
653+  8AD3 ED B0            ldir
654+  8AD5
655+  8AD5 C9               ret
# file closed: Disparo.asm
844   8AD6              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8AD6              ; ******************************************************************************************************************************************************************************************
  2+  8AD6              ;
  3+  8AD6              ; 01/23
  4+  8AD6              ;
  5+  8AD6              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8AD6
  7+  8AD6 CD B0 8D     Draw call Prepara_draw
  8+  8AD9 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8ADA A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8ADB 28 05        	jr z,2F
 11+  8ADD
 12+  8ADD 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8AE0 18 0C        	jr 1F
 14+  8AE2 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8AE5 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8AE8 CD 77 8C     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8AEB              ;													; _la esquina superior izquierda de la pantalla.
 18+  8AEB CD E5 94     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8AEE 3A C3 85     1 ld a,(Ctrl_0)
 20+  8AF1 CB 6F        	bit 5,a
 21+  8AF3 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8AF5
 23+  8AF5 CD 0D 8B     	call Comprueba_limite_horizontal
 24+  8AF8 CD 9D 8B     	call Comprueba_limite_vertical
 25+  8AFB
 26+  8AFB              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8AFB
 28+  8AFB CD EA 8C     3 call calcula_CColumnass
 29+  8AFE CD 21 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8B01 CD 76 8D     	call Define_rutina_de_impresion
 31+  8B04
 32+  8B04 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8B07 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8B09 32 C3 85     	ld (Ctrl_0),a
 35+  8B0C
 36+  8B0C C9           	ret
 37+  8B0D
 38+  8B0D              ; *******************************************************************************************************************************************************************************************
 39+  8B0D              ;	21/01/23
 40+  8B0D              ;
 41+  8B0D              ; 	Comprueba_limite_horizontal.
 42+  8B0D              ;
 43+  8B0D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8B0D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8B0D              ;
 46+  8B0D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8B0D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8B0D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8B0D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8B0D
 51+  8B0D
 52+  8B0D
 53+  8B0D 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8B10 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8B12 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8B14 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8B16 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8B19 18 09            jr 6F
 59+  8B1B CB 5F        1 bit 3,a
 60+  8B1D 28 0A            jr z,2F
 61+  8B1F E6 F7            and $f7
 62+  8B21 32 C3 85         ld (Ctrl_0),a
 63+  8B24 CD 77 8C     6 call Inicializacion
 64+  8B27 18 5B            jr 5F
 65+  8B29 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8B2A
 67+  8B2A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8B2A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8B2A
 70+  8B2A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8B2B 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8B2E CD 7C 90     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8B31 67           	ld h,a
 74+  8B32 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8B33 CD 7C 90     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8B36 67           	ld h,a
 77+  8B37 A7           	and a
 78+  8B38 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8B3A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8B3B 3A AA 85     	ld a,(Cuad_objeto)
 81+  8B3E FE 02        	cp 2
 82+  8B40 38 1E        	jr c,3F
 83+  8B42 28 1C        	jr z,3F
 84+  8B44 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8B45 28 23            jr z,7F
 86+  8B47 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8B49 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8B4B E1           	pop hl
 89+  8B4C
 90+  8B4C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8B4C              ; _para indicar con E="2" en caso necesario.
 92+  8B4C
 93+  8B4C E5               push hl
 94+  8B4D C5               push bc
 95+  8B4E CD 7C 90     	call calcula_tercio
 96+  8B51 FE 01        	cp 1
 97+  8B53 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8B55 CD 85 8B         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8B58 28 26            jr z,9F
100+  8B5A 38 24            jr c,9F
101+  8B5C 1E 00        11 ld e,0
102+  8B5E 18 22            jr 8F
103+  8B60 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8B61 28 07        	jr z, 7F
105+  8B63 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8B65 1E 00         	ld e,0
107+  8B67 E1           	pop hl
108+  8B68 18 04        	jr 4F
109+  8B6A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8B6C 18 15            jr 10F
111+  8B6E
112+  8B6E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8B6E              ; _para indicar con E="2" en caso necesario.
114+  8B6E
115+  8B6E E5           4 push hl
116+  8B6F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8B70 CD 7C 90     	call calcula_tercio
118+  8B73 FE 01        	cp 1
119+  8B75 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8B77 CD 85 8B         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8B7A 28 04            jr z,9F
122+  8B7C 30 02            jr nc,9F
123+  8B7E 18 02        	jr 8F
124+  8B80 1E 02        9 ld e,2
125+  8B82 C1           8 pop bc
126+  8B83 E1           10 pop hl
127+  8B84 C9           5 ret
128+  8B85
129+  8B85              ; --------------------
130+  8B85              ;
131+  8B85              ; 25/08/22
132+  8B85
133+  8B85 CD 7C 90     Comprueba_centro call calcula_tercio
134+  8B88 67               ld h,a
135+  8B89 08           	ex af,af
136+  8B8A FE 02        	cp 2
137+  8B8C 38 07        	jr c,1F
138+  8B8E 28 05        	jr z,1F
139+  8B90 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8B93 18 03        	jr 2F
141+  8B95 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8B98 08           2 ex af,af
143+  8B99 A7               and a
144+  8B9A ED 42            sbc hl,bc
145+  8B9C C9               ret
146+  8B9D
147+  8B9D              ; *********************************************************************************************************************************************************************************************
148+  8B9D              ;
149+  8B9D              ;   16/8/22
150+  8B9D              ;
151+  8B9D              ;	Comprueba_limite_vertical
152+  8B9D              ;
153+  8B9D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8B9D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8B9D              ;
156+  8B9D
157+  8B9D 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8BA0 7D           	ld a,l
159+  8BA1 E6 1F        	and $1F
160+  8BA3 57           	ld d,a
161+  8BA4 3A CF 85     	ld a,(Limite_vertical)
162+  8BA7 BA           	cp d 											; Límite - Posición.
163+  8BA8 08           	ex af,af 										; Resultado de CP d en F'.
164+  8BA9 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8BAC CB 47        	bit 0,a
166+  8BAE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8BB0
168+  8BB0              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8BB0
170+  8BB0 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8BB1 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8BB3
173+  8BB3              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8BB3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8BB3
176+  8BB3 3A 9C 85         ld a,(Coordenada_X)
177+  8BB6 16 0F            ld d,Centro_izquierda
178+  8BB8 A7               and a
179+  8BB9 92               sub d 											 ; Posición - Centro_izquierda.
180+  8BBA 28 1E            jr z,3F
181+  8BBC 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8BBE              ;                                                    ; _salimos sin modificar nada.
183+  8BBE 18 0E            jr 2F
184+  8BC0 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8BC1 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8BC3
187+  8BC3              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8BC3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8BC3
190+  8BC3 3A 9C 85         ld a,(Coordenada_X)
191+  8BC6 16 10            ld d,Centro_derecha
192+  8BC8 A7               and a
193+  8BC9 92               sub d
194+  8BCA 28 0E            jr z,3F
195+  8BCC 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8BCE              ;                                                    ; _salimos sin modificar nada.
197+  8BCE CB 43        2 bit 0,e
198+  8BD0 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8BD2 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8BD3 CD 67 8C         call Modificaccionne
201+  8BD6 C1           	pop bc
202+  8BD7 CD 77 8C         call Inicializacion
203+  8BDA C9           3 ret 				 								 ; Salimos de la rutina.
204+  8BDB
205+  8BDB              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8BDB
207+  8BDB C5           4 push bc
208+  8BDC 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8BDF 0A           	ld a,(bc)
210+  8BE0 3D           	dec a
211+  8BE1 47           	ld b,a 											 ; Columnas-1 en B.
212+  8BE2 7D           	ld a,l
213+  8BE3 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8BE4 CB 47        	bit 0,a
215+  8BE6 28 03        	jr z,5F
216+  8BE8 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8BE9 18 2E        	jr 7F
218+  8BEB
219+  8BEB              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8BEB
221+  8BEB 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8BEC F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8BED 3A C3 85     	ld a,(Ctrl_0)
224+  8BF0 CB 4F        	bit 1,a
225+  8BF2 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8BF4 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8BF5
228+  8BF5              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8BF5
230+  8BF5 1C               inc e
231+  8BF6 1D               dec e
232+  8BF7 20 07            jr nz,12F
233+  8BF9 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8BFA 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8BFB 22 98 85     	ld (Posicion_actual),hl
236+  8BFE 18 44        13 jr 9F
237+  8C00 CB 43        12 bit 0,e
238+  8C02 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8C04              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8C04 C1           	pop bc
241+  8C05 18 D3        	jr 3B
242+  8C07 80           14 add b
243+  8C08 6F               ld l,a
244+  8C09 22 98 85     	ld (Posicion_actual),hl
245+  8C0C CD 67 8C         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8C0F 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8C11 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8C13 32 C3 85         ld (Ctrl_0),a
249+  8C16 F1           	pop af
250+  8C17 18 2B        	jr 9F
251+  8C19
252+  8C19              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8C19
254+  8C19 F5           7 push af
255+  8C1A 3A C3 85     	ld a,(Ctrl_0)
256+  8C1D CB 47        	bit 0,a
257+  8C1F 20 1D        	jr nz,8F
258+  8C21 F1           	pop af
259+  8C22
260+  8C22              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8C22
262+  8C22 1C           	inc e
263+  8C23 1D               dec e
264+  8C24 20 07            jr nz,10F
265+  8C26 90           	sub b
266+  8C27 6F               ld l,a
267+  8C28 22 98 85     	ld (Posicion_actual),hl
268+  8C2B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8C2D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8C2D CB 43        10 bit 0,e
271+  8C2F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8C31              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8C31 C1           	pop bc
274+  8C32 18 A6        	jr 3B
275+  8C34 90           16 sub b
276+  8C35 6F               ld l,a
277+  8C36 22 98 85     	ld (Posicion_actual),hl
278+  8C39 CD 67 8C         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8C3C 18 06            jr 9F
280+  8C3E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8C40 32 C3 85         ld (Ctrl_0),a
282+  8C43 F1           	pop af
283+  8C44 C1           9 pop bc
284+  8C45 1E 00        	ld e,0
285+  8C47 CD 77 8C         call Inicializacion
286+  8C4A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8C4B 08           	ex af,af
288+  8C4C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8C4D 18 8B            jr 3B
290+  8C4F
291+  8C4F              ; --------------------
292+  8C4F
293+  8C4F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8C51 CD CB 8D     1 call PreviousScan
295+  8C54 10 FB            djnz 1B
296+  8C56 22 98 85     	ld (Posicion_actual),hl
297+  8C59 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8C5A C9           	ret
299+  8C5B
300+  8C5B              ; --------------------
301+  8C5B
302+  8C5B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8C5D CD BC 8D     1 call NextScan
304+  8C60 10 FB            djnz 1B
305+  8C62 22 98 85     	ld (Posicion_actual),hl
306+  8C65 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8C66 C9           	ret
308+  8C67
309+  8C67              ; --------------------
310+  8C67              ;
311+  8C67              ;	22/01/23
312+  8C67              ;
313+  8C67              ;	E="1". Hemos cambiado de cuadrante.
314+  8C67              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8C67              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8C67
317+  8C67
318+  8C67              Modificaccionne
319+  8C67
320+  8C67 3A AA 85     	ld a,(Cuad_objeto)
321+  8C6A FE 02        	cp 2
322+  8C6C CC 4F 8C         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8C6F DC 4F 8C         call c,Modifica_Pos_actual
324+  8C72 C8           	ret z
325+  8C73 CD 5B 8C         call Modifica_Pos_actual2
326+  8C76 C9               ret
327+  8C77
328+  8C77              ; *************************************************************************************************************************************************************************************************
329+  8C77              ;
330+  8C77              ;	13/8/22
331+  8C77              ;
332+  8C77              ;	Inicializacion
333+  8C77              ;
334+  8C77              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8C77              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8C77              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8C77              ;
338+  8C77              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8C77              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8C77              ;	_ desaparece/aparece.
341+  8C77
342+  8C77              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8C77              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8C77              ;
345+  8C77              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8C77              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8C77              ; 		   [E] ="0"
348+  8C77
349+  8C77              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8C77
351+  8C77 CD 7C 90     Inicializacion call calcula_tercio
352+  8C7A 28 36        	jr z,primit
353+  8C7C E6 02        	and 2
354+  8C7E 20 07        	jr nz,segmit
355+  8C80 7D           	ld a,l
356+  8C81 FE 7F        	cp $7f
357+  8C83 38 2D        	jr c,primit
358+  8C85 28 2B        	jr z,primit
359+  8C87 CD E4 8C     segmit call column
360+  8C8A 38 13        	jr c,tercuad
361+  8C8C 3E 04        cuarcuad ld a,4
362+  8C8E 32 AA 85     	ld (Cuad_objeto),a
363+  8C91 21 20 48     	ld hl,$4820
364+  8C94 22 CD 85     	ld (Limite_horizontal),hl
365+  8C97 21 CF 85     	ld hl,Limite_vertical
366+  8C9A 36 0D        	ld (hl),$0d
367+  8C9C 08           	ex af,af
368+  8C9D 18 3C        	jr 1F
369+  8C9F              tercuad
370+  8C9F 3E 03        	ld a,3
371+  8CA1 32 AA 85     	ld (Cuad_objeto),a
372+  8CA4 21 20 48     	ld hl,$4820
373+  8CA7 22 CD 85     	ld (Limite_horizontal),hl
374+  8CAA 21 CF 85     	ld hl,Limite_vertical
375+  8CAD 36 12        	ld (hl),$12
376+  8CAF 08           	ex af,af
377+  8CB0 18 29        	jr 1F
378+  8CB2 CD E4 8C     primit call column
379+  8CB5 38 13        	jr c, primcuad
380+  8CB7              segcuad
381+  8CB7 3E 02        	ld a,2
382+  8CB9 32 AA 85     	ld (Cuad_objeto),a
383+  8CBC 21 C0 4F     	ld hl,$4fc0
384+  8CBF 22 CD 85     	ld (Limite_horizontal),hl
385+  8CC2 21 CF 85     	ld hl,Limite_vertical
386+  8CC5 36 0D        	ld (hl),$0d
387+  8CC7 08           	ex af,af
388+  8CC8 18 11        	jr 1F
389+  8CCA              primcuad
390+  8CCA 3E 01        	ld a,1
391+  8CCC 32 AA 85     	ld (Cuad_objeto),a
392+  8CCF 21 C0 4F     	ld hl,$4fc0
393+  8CD2 22 CD 85     	ld (Limite_horizontal),hl
394+  8CD5 21 CF 85     	ld hl,Limite_vertical
395+  8CD8 36 12        	ld (hl),$12
396+  8CDA 08           	ex af,af
397+  8CDB CD AE 93     1 call Genera_coordenadas
398+  8CDE 21 C3 85     	ld hl,Ctrl_0
399+  8CE1 CB EE        	set 5,(hl)
400+  8CE3 C9           	ret
401+  8CE4
402+  8CE4              ; ------------------------------------------------------------------------------------------------------------------
403+  8CE4
404+  8CE4              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8CE4              ;
406+  8CE4              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8CE4
408+  8CE4 7D           column ld a,l
409+  8CE5 E6 1F        	and $1f
410+  8CE7 FE 10         	cp $10
411+  8CE9 C9            	ret
412+  8CEA
413+  8CEA              ; --------------------------------------------------------------------------------------------------------------------
414+  8CEA              ;
415+  8CEA              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8CEA              ;
417+  8CEA              ; 14/12/22
418+  8CEA              ;
419+  8CEA              ;	Modifica: A y BC.
420+  8CEA
421+  8CEA 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8CED E6 01        	and 1
423+  8CEF 28 17        	jr z,1F
424+  8CF1
425+  8CF1              ; Nos encontramos en la parte izquierda de la pantalla
426+  8CF1
427+  8CF1 3A 9C 85     	ld a,(Coordenada_X)
428+  8CF4 47           	ld b,a
429+  8CF5 04           	inc b											; (Coordenada_X)+1 en B.
430+  8CF6 79           	ld a,c
431+  8CF7 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8CF8 38 08        	jr c,2F
433+  8CFA 47           	ld b,a
434+  8CFB 79           	ld a,c
435+  8CFC 90           	sub b
436+  8CFD 32 CC 85     	ld (Columnas),a
437+  8D00 18 1B        	jr 4F
438+  8D02 79           2 ld a,c
439+  8D03 32 CC 85     	ld (Columnas),a
440+  8D06 18 15        	jr 4F
441+  8D08
442+  8D08              ; Nos encontramos en la parte derecha de la pantalla.
443+  8D08
444+  8D08 3A 9C 85     1 ld a,(Coordenada_X)
445+  8D0B 81           	add c
446+  8D0C 3D           	dec a
447+  8D0D D6 1F        	sub $1f
448+  8D0F 38 08        	jr c,3F
449+  8D11 47           	ld b,a
450+  8D12 79           	ld a,c
451+  8D13 90           	sub b
452+  8D14 32 CC 85     	ld (Columnas),a
453+  8D17 18 04        	jr 4F
454+  8D19 79           3 ld a,c
455+  8D1A 32 CC 85     	ld (Columnas),a
456+  8D1D D9           4 exx
457+  8D1E 4F           	ld c,a
458+  8D1F D9           	exx
459+  8D20 C9            ret
460+  8D21
461+  8D21              ; --------------------------------------------------------------------------------------------------------------------
462+  8D21              ;
463+  8D21              ; 7/1/23
464+  8D21              ;
465+  8D21              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8D21              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8D21              ;
468+  8D21              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8D21              ;	DESTRUYE: HL,B Y A.
470+  8D21
471+  8D21 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8D24 FE 02        	cp 2
473+  8D26 38 18        	jr c,1F
474+  8D28 28 16        	jr z,1F
475+  8D2A E6 01        	and 1
476+  8D2C 28 0D        	jr z,3F
477+  8D2E
478+  8D2E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8D2E
480+  8D2E CD 6A 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8D31
482+  8D31 7D           9 ld a,l
483+  8D32 E6 1F        	and $1f
484+  8D34 28 2A        	jr z,7F
485+  8D36 2B           	dec hl
486+  8D37 10 F8        	djnz 9B
487+  8D39 18 25        	jr 7F
488+  8D3B
489+  8D3B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8D3B
491+  8D3B 2A 98 85     3 ld hl,(Posicion_actual)
492+  8D3E 18 20        	jr 7F
493+  8D40
494+  8D40 28 14        1 jr z,2F
495+  8D42
496+  8D42              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8D42
498+  8D42 CD 6A 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8D45 7D           4 ld a,l
500+  8D46 E6 1F        	and $1f
501+  8D48 28 03        	jr z,6F
502+  8D4A 2B           	dec hl
503+  8D4B 10 F8        	djnz 4B
504+  8D4D 06 0F        6 ld b,15
505+  8D4F CD CB 8D     5 call PreviousScan
506+  8D52 10 FB        	djnz 5B
507+  8D54 18 0A        	jr 7F
508+  8D56
509+  8D56              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8D56
511+  8D56 CD 6A 8D     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8D59 06 0F        	ld b,15
513+  8D5B CD CB 8D     8 call PreviousScan
514+  8D5E 10 FB        	djnz 8B
515+  8D60
516+  8D60 E5           7 push hl
517+  8D61 DD E1        	pop ix
518+  8D63
519+  8D63 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8D66 E5           	push hl
521+  8D67 FD E1        	pop iy
522+  8D69
523+  8D69 C9           	ret
524+  8D6A
525+  8D6A              ; --------------------------------------------------------------------------------------------------------------------
526+  8D6A              ;
527+  8D6A              ;	2/1/23
528+  8D6A              ;
529+  8D6A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8D6A              ;
531+  8D6A              ;	Tras esta rutina tenemos:
532+  8D6A              ;
533+  8D6A              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8D6A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8D6A              ;
536+  8D6A              ;	DESTRUYE!!!!! HL,B y A.
537+  8D6A
538+  8D6A 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8D6D 3A CC 85     	ld a,(Columnas)
540+  8D70 3D           	dec a
541+  8D71 20 01        	jr nz,1F
542+  8D73 3C           	inc a
543+  8D74 47           1 ld b,a
544+  8D75 C9           	ret
545+  8D76
546+  8D76              ; --------------------------------------------------------------------------------------------------------------------
547+  8D76              ;
548+  8D76              ;	3/1/23
549+  8D76              ;
550+  8D76              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8D76              ;
552+  8D76              ;	Destruye: A,B,HL y DE.
553+  8D76
554+  8D76              Define_rutina_de_impresion
555+  8D76
556+  8D76 3A 97 85     	ld a,(Columns)
557+  8D79 47           	ld b,a
558+  8D7A 3A CC 85     	ld a,(Columnas)
559+  8D7D B8           	cp b
560+  8D7E 20 0D        	jr nz,2f
561+  8D80
562+  8D80              ;	La entidad se imprime entera.
563+  8D80
564+  8D80 21 4C 8E     	ld hl, Indice_entidades_completas
565+  8D83 E6 01        	and 1
566+  8D85 28 02        	jr z,1F
567+  8D87
568+  8D87 23           	inc hl
569+  8D88 23           	inc hl
570+  8D89
571+  8D89 CD 88 87     1 call Extrae_address
572+  8D8C C9           	ret		;	ret
573+  8D8D
574+  8D8D              ;	La entidad no se imprime entera en pantalla.
575+  8D8D
576+  8D8D 3A AA 85     2 ld a,(Cuad_objeto)
577+  8D90 E6 01        	and 1
578+  8D92 28 17        	jr z,3F
579+  8D94
580+  8D94              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8D94
582+  8D94 21 50 8E     	ld hl, Indice_entidades_incompletas_izquierda
583+  8D97 3A 97 85     4 ld a,(Columns)
584+  8D9A E6 01        	and 1
585+  8D9C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8D9E
587+  8D9E 23           	inc hl
588+  8D9F 23           	inc hl
589+  8DA0
590+  8DA0 3A CC 85     	ld a,(Columnas)
591+  8DA3 E6 01        	and 1
592+  8DA5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8DA7
594+  8DA7 23           	inc hl
595+  8DA8 23           	inc hl
596+  8DA9
597+  8DA9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8DAB
599+  8DAB 21 56 8E     3 ld hl, Indice_entidades_incompletas_derecha
600+  8DAE 18 E7        	jr 4B
601+  8DB0
602+  8DB0              ; --------------------------------------------------------------------------------------------------------------------
603+  8DB0              ;
604+  8DB0              ;	Prepara_draw
605+  8DB0              ;
606+  8DB0              ;	Es una rutina de carga.
607+  8DB0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8DB0              ;
609+  8DB0              ;	FUNCIONAMIENTO:
610+  8DB0              ;
611+  8DB0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8DB0              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8DB0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8DB0              ;
615+  8DB0              ;	DESTRUYE:
616+  8DB0              ;
617+  8DB0              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8DB0
619+  8DB0 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8DB3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8DB4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8DB5 4E           	ld c,(hl)
623+  8DB6 2A 98 85     	ld hl,(Posicion_actual)
624+  8DB9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8DBB C9           	ret
626+  8DBC
627+  8DBC              ;----------------------------------------------------------------------------------------------------------------
628+  8DBC              ;
629+  8DBC              ;	5/08/22
630+  8DBC              ;
631+  8DBC              ;   NextScan.
632+  8DBC              ;
633+  8DBC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8DBC              ;
635+  8DBC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8DBC              ;
637+  8DBC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8DBC              ;
639+  8DBC              ;       DESTRUIDOS: AF y HL !!!
640+  8DBC              ;
641+  8DBC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8DBC              ;
643+  8DBC
644+  8DBC 24           NextScan inc h          ; Incrementamos el scanline.
645+  8DBD 7C               ld a,h
646+  8DBE E6 07            and 7
647+  8DC0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8DC1
649+  8DC1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8DC2 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8DC4 6F               ld l,a
652+  8DC5 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8DC6
654+  8DC6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8DC7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8DC9 67               ld h,a
657+  8DCA C9               ret
658+  8DCB
659+  8DCB              ;----------------------------------------------------------------------------------------------------------------
660+  8DCB              ;
661+  8DCB              ;	5/08/22
662+  8DCB              ;
663+  8DCB              ;   PreviousScan.
664+  8DCB              ;
665+  8DCB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8DCB              ;
667+  8DCB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8DCB              ;
669+  8DCB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8DCB              ;
671+  8DCB              ;       DESTRUIDOS: AF y HL !!!
672+  8DCB              ;
673+  8DCB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8DCB              ;
675+  8DCB
676+  8DCB 7C           PreviousScan ld a,h
677+  8DCC 25               dec h               ; Dec H.
678+  8DCD E6 07            and 7
679+  8DCF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8DD0
681+  8DD0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8DD1 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8DD3 6F               ld l,a
684+  8DD4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8DD5
686+  8DD5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8DD6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8DD8 67               ld h,a
689+  8DD9 C9               ret
690+  8DDA
691+  8DDA              ; -----------------------------------------------------------------------------------
692+  8DDA              ;
693+  8DDA              ;	28/2/23
694+  8DDA              ;
695+  8DDA              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8DDA              ;	Extrae fotos de Album_de_fotos.
697+  8DDA
698+  8DDA 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8DDD A7           	and a
700+  8DDE C8           	ret z
701+  8DDF ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8DE3 31 00 70     	ld sp,Album_de_fotos
703+  8DE6
704+  8DE6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8DE8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8DE9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8DEA
708+  8DEA ED 73 DB 85  	ld (Stack_2),sp
709+  8DEE ED 7B D9 85  	ld sp,(Stack)
710+  8DF2
711+  8DF2              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8DF2
713+  8DF2 3E CD        	ld a,$cd
714+  8DF4 32 FC 8D     	ld (Imprime),a
715+  8DF7 EB           	ex de,hl
716+  8DF8 22 FD 8D     	ld (Imprime+1),hl
717+  8DFB EB           	ex de,hl
718+  8DFC
719+  8DFC              ; Ejecuta la llamada:	CALL $xx,xx
720+  8DFC
721+  8DFC 00 00 00     Imprime db 0,0,0
722+  8DFF
723+  8DFF 3A D8 85     	ld a,(Numero_de_malotes)
724+  8E02 3D           	dec a
725+  8E03 28 09        	jr z,1F
726+  8E05 32 D8 85      	ld (Numero_de_malotes),a
727+  8E08
728+  8E08 ED 7B DB 85   	ld sp,(Stack_2)
729+  8E0C 18 D8        	jr 2B
730+  8E0E
731+  8E0E AF           1 xor a
732+  8E0F 32 DB 85     	ld (Stack_2),a
733+  8E12 C9           	ret
734+  8E13
735+  8E13              ; -----------------------------------------------------------------------------------
736+  8E13              ;
737+  8E13              ;	28/2/23
738+  8E13              ;
739+  8E13              ;	Pinta los disparos generados.
740+  8E13
741+  8E13              Extrae_foto_disparos
742+  8E13
743+  8E13 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8E16 A7           	and a
745+  8E17 C8           	ret z
746+  8E18 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8E1C 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8E1F
749+  8E1F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8E21 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8E22 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8E23
753+  8E23 ED 73 DB 85  	ld (Stack_2),sp
754+  8E27 ED 7B D9 85  	ld sp,(Stack)
755+  8E2B
756+  8E2B              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8E2B
758+  8E2B 3E CD        	ld a,$cd
759+  8E2D 32 35 8E     	ld (Imprime2),a
760+  8E30 EB           	ex de,hl
761+  8E31 22 36 8E     	ld (Imprime2+1),hl
762+  8E34 EB           	ex de,hl
763+  8E35
764+  8E35              ; Ejecuta la llamada:	CALL $xx,xx
765+  8E35
766+  8E35 00 00 00     Imprime2 db 0,0,0
767+  8E38
768+  8E38 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8E3B 3D           	dec a
770+  8E3C 28 09        	jr z,1F
771+  8E3E 32 E1 85      	ld (Numero_de_disparotes),a
772+  8E41
773+  8E41 ED 7B DB 85  	ld sp,(Stack_2)
774+  8E45 18 D8        	jr 2B
775+  8E47
776+  8E47 AF           1 xor a
777+  8E48 32 DB 85     	ld (Stack_2),a
778+  8E4B C9           	ret
779+  8E4C
# file closed: Draw_XOR.asm
845   8E4C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8E4C              ;   índices de Rutinas de impresión.
  2+  8E4C
  3+  8E4C 5C 8E        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8E4E 89 8E            defw Pinta_Amadeus_3x2
  5+  8E50
  6+  8E50 DF 8E        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8E52 7F 8F            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8E54 33 8F            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8E56
 10+  8E56 09 8F        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8E58 0D 90            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8E5A C1 8F            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8E5C
 14+  8E5C
 15+  8E5C              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8E5C              ;
 17+  8E5C              ;   12/12/22
 18+  8E5C              ;
 19+  8E5C              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8E5C              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8E5C              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8E5C              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8E5C              ;
 24+  8E5C              ;   Modifica: DE y HL.
 25+  8E5C
 26+  8E5C ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8E60 FD F9        	ld sp,iy
 28+  8E62 06 10            ld b,16
 29+  8E64 D1           1 pop de
 30+  8E65 7B               ld a,e
 31+  8E66 AE               xor (hl)
 32+  8E67 77           	ld (hl),a
 33+  8E68 23           	inc hl
 34+  8E69 7A               ld a,d
 35+  8E6A AE               xor (hl)
 36+  8E6B 77           	ld (hl),a
 37+  8E6C 2B           	dec hl
 38+  8E6D 24           	inc h
 39+  8E6E 7C               ld a,h
 40+  8E6F E6 07            and 7
 41+  8E71 20 0A            jr nz,2F
 42+  8E73 7D               ld a,l
 43+  8E74 C6 20            add a,$20
 44+  8E76 6F               ld l,a
 45+  8E77 38 04            jr c,2F
 46+  8E79 7C               ld a,h
 47+  8E7A D6 08            sub 8
 48+  8E7C 67               ld h,a
 49+  8E7D 7C           2 ld a,h
 50+  8E7E FE 58            cp $58
 51+  8E80 28 02            jr z,3F
 52+  8E82 10 E0            djnz 1B
 53+  8E84 ED 7B D9 85  3 ld sp,(Stack)
 54+  8E88 C9           	ret
 55+  8E89
 56+  8E89 ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8E8D FD F9        	ld sp,iy
 58+  8E8F 06 08            ld b,8
 59+  8E91 D1           1 pop de
 60+  8E92 7B               ld a,e
 61+  8E93 AE               xor (hl)
 62+  8E94 77           	ld (hl),a
 63+  8E95 23           	inc hl
 64+  8E96 7A               ld a,d
 65+  8E97 AE               xor (hl)
 66+  8E98 77           	ld (hl),a
 67+  8E99 23           	inc hl
 68+  8E9A D1           	pop de
 69+  8E9B 7B               ld a,e
 70+  8E9C AE               xor (hl)
 71+  8E9D 77           	ld (hl),a
 72+  8E9E 2B           	dec hl
 73+  8E9F 2B           	dec hl
 74+  8EA0 24           	inc h
 75+  8EA1 7C               ld a,h
 76+  8EA2 E6 07            and 7
 77+  8EA4 20 0A            jr nz,2F
 78+  8EA6 7D               ld a,l
 79+  8EA7 C6 20            add a,$20
 80+  8EA9 6F               ld l,a
 81+  8EAA 38 04            jr c,2F
 82+  8EAC 7C               ld a,h
 83+  8EAD D6 08            sub 8
 84+  8EAF 67               ld h,a
 85+  8EB0 7C           2 ld a,h
 86+  8EB1 FE 58            cp $58
 87+  8EB3 28 25            jr z,4F
 88+  8EB5 7A               ld a,d
 89+  8EB6 AE               xor (hl)
 90+  8EB7 77               ld (hl),a
 91+  8EB8 D1           	pop de
 92+  8EB9 23           	inc hl
 93+  8EBA 7B               ld a,e
 94+  8EBB AE               xor (hl)
 95+  8EBC 77           	ld (hl),a
 96+  8EBD 23           	inc hl
 97+  8EBE 7A               ld a,d
 98+  8EBF AE               xor (hl)
 99+  8EC0 77           	ld (hl),a
100+  8EC1 2B           	dec hl
101+  8EC2 2B           	dec hl
102+  8EC3 24           	inc h
103+  8EC4 7C               ld a,h
104+  8EC5 E6 07            and 7
105+  8EC7 20 0A            jr nz,3F
106+  8EC9 7D               ld a,l
107+  8ECA C6 20            add a,$20
108+  8ECC 6F               ld l,a
109+  8ECD 38 04            jr c,3F
110+  8ECF 7C               ld a,h
111+  8ED0 D6 08            sub 8
112+  8ED2 67               ld h,a
113+  8ED3 7C           3 ld a,h
114+  8ED4 FE 58            cp $58
115+  8ED6 28 02            jr z,4F
116+  8ED8 10 B7            djnz 1B
117+  8EDA ED 7B D9 85  4 ld sp,(Stack)
118+  8EDE C9           	ret
119+  8EDF
120+  8EDF              ; ---------------------------------------------------
121+  8EDF
122+  8EDF ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8EE3 FD F9        	ld sp,iy
124+  8EE5
125+  8EE5              ; >>>
126+  8EE5
127+  8EE5 06 10            ld b,16
128+  8EE7 D1           1 pop de
129+  8EE8 7A           	ld a,d
130+  8EE9 AE           	xor (hl)
131+  8EEA 77           	ld (hl),a
132+  8EEB 24           	inc h
133+  8EEC 7C               ld a,h
134+  8EED E6 07            and 7
135+  8EEF 20 0C            jr nz,2F
136+  8EF1 7D               ld a,l
137+  8EF2 C6 20            add a,$20
138+  8EF4 6F               ld l,a
139+  8EF5 38 06            jr c,2F
140+  8EF7 7C               ld a,h
141+  8EF8 D6 08            sub 8
142+  8EFA 67               ld h,a
143+  8EFB 18 00            jr 2F
144+  8EFD 7C           2 ld a,h
145+  8EFE FE 58            cp $58
146+  8F00 28 02            jr z,3F
147+  8F02 10 E3            djnz 1B
148+  8F04 ED 7B D9 85  3 ld sp,(Stack)
149+  8F08 C9           	ret
150+  8F09
151+  8F09 ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8F0D FD F9        	ld sp,iy
153+  8F0F
154+  8F0F              ; >>>
155+  8F0F
156+  8F0F 06 10            ld b,16
157+  8F11 D1           1 pop de
158+  8F12 7B           	ld a,e
159+  8F13 AE           	xor (hl)
160+  8F14 77           	ld (hl),a
161+  8F15 24           	inc h
162+  8F16 7C               ld a,h
163+  8F17 E6 07            and 7
164+  8F19 20 0C            jr nz,2F
165+  8F1B 7D               ld a,l
166+  8F1C C6 20            add a,$20
167+  8F1E 6F               ld l,a
168+  8F1F 38 06            jr c,2F
169+  8F21 7C               ld a,h
170+  8F22 D6 08            sub 8
171+  8F24 67               ld h,a
172+  8F25 18 00            jr 2F
173+  8F27 7C           2 ld a,h
174+  8F28 FE 58            cp $58
175+  8F2A 28 02            jr z,3F
176+  8F2C 10 E3            djnz 1B
177+  8F2E ED 7B D9 85  3 ld sp,(Stack)
178+  8F32 C9           	ret
179+  8F33
180+  8F33              ; ---------------------------------------------------
181+  8F33
182+  8F33 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8F37 FD F9        	ld sp,iy
184+  8F39 06 08            ld b,8
185+  8F3B D1           1 pop de
186+  8F3C 7A           	ld a,d
187+  8F3D AE           	xor (hl)
188+  8F3E 77           	ld (hl),a
189+  8F3F 23           	inc hl
190+  8F40 D1           	pop de
191+  8F41 7B           	ld a,e
192+  8F42 AE           	xor (hl)
193+  8F43 77           	ld (hl),a
194+  8F44 2B           	dec hl
195+  8F45 24            	inc h
196+  8F46 7C               ld a,h
197+  8F47 E6 07            and 7
198+  8F49 20 0A            jr nz,2F
199+  8F4B 7D               ld a,l
200+  8F4C C6 20            add a,$20
201+  8F4E 6F               ld l,a
202+  8F4F 38 04            jr c,2F
203+  8F51 7C               ld a,h
204+  8F52 D6 08            sub 8
205+  8F54 67               ld h,a
206+  8F55 7C           2 ld a,h
207+  8F56 FE 58            cp $58
208+  8F58 28 20            jr z,4F
209+  8F5A D1               pop de
210+  8F5B 7B           	ld a,e
211+  8F5C AE           	xor (hl)
212+  8F5D 77           	ld (hl),a
213+  8F5E 23           	inc hl
214+  8F5F 7A           	ld a,d
215+  8F60 AE           	xor (hl)
216+  8F61 77           	ld (hl),a
217+  8F62 2B           	dec hl
218+  8F63 24           	inc h
219+  8F64 7C               ld a,h
220+  8F65 E6 07            and 7
221+  8F67 20 0A            jr nz,3F
222+  8F69 7D               ld a,l
223+  8F6A C6 20            add a,$20
224+  8F6C 6F               ld l,a
225+  8F6D 38 04            jr c,3F
226+  8F6F 7C               ld a,h
227+  8F70 D6 08            sub 8
228+  8F72 67               ld h,a
229+  8F73 7C           3 ld a,h
230+  8F74 FE 58            cp $58
231+  8F76 28 02            jr z,4F
232+  8F78 10 C1            djnz 1B
233+  8F7A ED 7B D9 85  4 ld sp,(Stack)
234+  8F7E C9           	ret
235+  8F7F
236+  8F7F ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8F83 FD F9        	ld sp,iy
238+  8F85 06 08            ld b,8
239+  8F87 D1           1 pop de
240+  8F88 D1           	pop de
241+  8F89 7B           	ld a,e
242+  8F8A AE           	xor (hl)
243+  8F8B 77           	ld (hl),a
244+  8F8C 24            	inc h
245+  8F8D 7C               ld a,h
246+  8F8E E6 07            and 7
247+  8F90 20 0A            jr nz,2F
248+  8F92 7D               ld a,l
249+  8F93 C6 20            add a,$20
250+  8F95 6F               ld l,a
251+  8F96 38 04            jr c,2F
252+  8F98 7C               ld a,h
253+  8F99 D6 08            sub 8
254+  8F9B 67               ld h,a
255+  8F9C 7C           2 ld a,h
256+  8F9D FE 58            cp $58
257+  8F9F 28 1B            jr z,4F
258+  8FA1 D1               pop de
259+  8FA2 7A           	ld a,d
260+  8FA3 AE           	xor (hl)
261+  8FA4 77           	ld (hl),a
262+  8FA5 24           	inc h
263+  8FA6 7C               ld a,h
264+  8FA7 E6 07            and 7
265+  8FA9 20 0A            jr nz,3F
266+  8FAB 7D               ld a,l
267+  8FAC C6 20            add a,$20
268+  8FAE 6F               ld l,a
269+  8FAF 38 04            jr c,3F
270+  8FB1 7C               ld a,h
271+  8FB2 D6 08            sub 8
272+  8FB4 67               ld h,a
273+  8FB5 7C           3 ld a,h
274+  8FB6 FE 58            cp $58
275+  8FB8 28 02            jr z,4F
276+  8FBA 10 CB            djnz 1B
277+  8FBC ED 7B D9 85  4 ld sp,(Stack)
278+  8FC0 C9           	ret
279+  8FC1
280+  8FC1 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8FC5 FD F9        	ld sp,iy
282+  8FC7 06 08            ld b,8
283+  8FC9 D1           1 pop de
284+  8FCA 7B           	ld a,e
285+  8FCB AE           	xor (hl)
286+  8FCC 77           	ld (hl),a
287+  8FCD 23           	inc hl
288+  8FCE 7A           	ld a,d
289+  8FCF AE           	xor (hl)
290+  8FD0 77           	ld (hl),a
291+  8FD1 2B           	dec hl
292+  8FD2 24             	inc h
293+  8FD3 7C               ld a,h
294+  8FD4 E6 07            and 7
295+  8FD6 20 0A            jr nz,2F
296+  8FD8 7D               ld a,l
297+  8FD9 C6 20            add a,$20
298+  8FDB 6F               ld l,a
299+  8FDC 38 04            jr c,2F
300+  8FDE 7C               ld a,h
301+  8FDF D6 08            sub 8
302+  8FE1 67               ld h,a
303+  8FE2 7C           2 ld a,h
304+  8FE3 FE 58            cp $58
305+  8FE5 28 21            jr z,4F
306+  8FE7 D1               pop de
307+  8FE8 7A           	ld a,d
308+  8FE9 AE           	xor (hl)
309+  8FEA 77           	ld (hl),a
310+  8FEB 23           	inc hl
311+  8FEC D1               pop de
312+  8FED 7B           	ld a,e
313+  8FEE AE           	xor (hl)
314+  8FEF 77           	ld (hl),a
315+  8FF0 2B           	dec hl
316+  8FF1 24           	inc h
317+  8FF2 7C               ld a,h
318+  8FF3 E6 07            and 7
319+  8FF5 20 0A            jr nz,3F
320+  8FF7 7D               ld a,l
321+  8FF8 C6 20            add a,$20
322+  8FFA 6F               ld l,a
323+  8FFB 38 04            jr c,3F
324+  8FFD 7C               ld a,h
325+  8FFE D6 08            sub 8
326+  9000 67               ld h,a
327+  9001 7C           3 ld a,h
328+  9002 FE 58            cp $58
329+  9004 28 02            jr z,4F
330+  9006 10 C1            djnz 1B
331+  9008 ED 7B D9 85  4 ld sp,(Stack)
332+  900C C9           	ret
333+  900D
334+  900D ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  9011 FD F9        	ld sp,iy
336+  9013 06 08            ld b,8
337+  9015 D1           1 pop de
338+  9016 7B           	ld a,e
339+  9017 AE           	xor (hl)
340+  9018 77           	ld (hl),a
341+  9019 24            	inc h
342+  901A 7C               ld a,h
343+  901B E6 07            and 7
344+  901D 20 0A            jr nz,2F
345+  901F 7D               ld a,l
346+  9020 C6 20            add a,$20
347+  9022 6F               ld l,a
348+  9023 38 04            jr c,2F
349+  9025 7C               ld a,h
350+  9026 D6 08            sub 8
351+  9028 67               ld h,a
352+  9029 7C           2 ld a,h
353+  902A FE 58            cp $58
354+  902C 28 1C            jr z,4F
355+  902E D1               pop de
356+  902F 7A           	ld a,d
357+  9030 AE           	xor (hl)
358+  9031 77           	ld (hl),a
359+  9032 24           	inc h
360+  9033 7C               ld a,h
361+  9034 E6 07            and 7
362+  9036 20 0A            jr nz,3F
363+  9038 7D               ld a,l
364+  9039 C6 20            add a,$20
365+  903B 6F               ld l,a
366+  903C 38 04            jr c,3F
367+  903E 7C               ld a,h
368+  903F D6 08            sub 8
369+  9041 67               ld h,a
370+  9042 7C           3 ld a,h
371+  9043 FE 58            cp $58
372+  9045 28 03            jr z,4F
373+  9047 D1               pop de
374+  9048 10 CB            djnz 1B
375+  904A ED 7B D9 85  4 ld sp,(Stack)
376+  904E C9           	ret
377+  904F
378+  904F              ; ---------------------------------------------------
379+  904F              ;
380+  904F              ;   27/02/23
381+  904F              ;
382+  904F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  904F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  904F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  904F
386+  904F ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  9053 FD F9            ld sp,iy
388+  9055 06 02            ld b,2
389+  9057 D1           1 pop de
390+  9058 7B               ld a,e
391+  9059 AE               xor (hl)
392+  905A 77               ld (hl),a
393+  905B 23               inc hl
394+  905C 7A               ld a,d
395+  905D AE               xor (hl)
396+  905E 77               ld (hl),a
397+  905F 2B               dec hl
398+  9060
399+  9060 24               inc h
400+  9061 7C               ld a,h
401+  9062 E6 07            and 7
402+  9064 20 0A            jr nz,2F
403+  9066 7D               ld a,l
404+  9067 C6 20            add a,$20
405+  9069 6F               ld l,a
406+  906A 38 04            jr c,2F
407+  906C 7C               ld a,h
408+  906D D6 08            sub 8
409+  906F 67               ld h,a
410+  9070 7C           2 ld a,h
411+  9071 FE 58            cp $58
412+  9073 28 02            jr z,3F
413+  9075
414+  9075 10 E0            djnz 1B
415+  9077 ED 7B D9 85  3 ld sp,(Stack)
416+  907B C9               ret
417+  907C
# file closed: Rutinas_de_impresion_sprites.asm
846   907C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  907C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  907C              ;
  3+  907C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  907C              ;
  5+  907C              ; *****************************************************************************************************************************************************************************************
  6+  907C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  907C
  8+  907C 7C           calcula_tercio ld a,h
  9+  907D E6 18        	and $18
 10+  907F CB 2F        	sra a
 11+  9081 CB 2F        	sra a
 12+  9083 CB 2F        	sra a
 13+  9085 C9           	ret
 14+  9086
# file closed: calcula_tercio.asm
847   9086              	include "Cls.asm"
# file opened: Cls.asm
  1+  9086              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  9086              ;
  3+  9086              ;
  4+  9086              ;	CLS.
  5+  9086              ;
  6+  9086              ;	Limpia la pantalla y define sus atributos.
  7+  9086              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  9086              ;
  9+  9086              ;	COLORES: 0 ..... NEGRO
 10+  9086              ;    		 1 ..... AZUL
 11+  9086              ; 			 2 ..... ROJO
 12+  9086              ;			 3 ..... MAGENTA
 13+  9086              ; 			 4 ..... VERDE
 14+  9086              ; 			 5 ..... CIAN
 15+  9086              ;			 6 ..... AMARILLO
 16+  9086              ; 			 7 ..... BLANCO
 17+  9086              ;
 18+  9086              ;	INPUT: A contiene los atributos de pantalla.
 19+  9086              ;
 20+  9086              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  9086
 22+  9086
 23+  9086 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  9089 11 01 40     	LD DE,$4001
 25+  908C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  908F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  9091 ED B0        	LDIR
 28+  9093 01 FF 02     	LD BC,767
 29+  9096 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  9097 ED B0        	LDIR
 31+  9099 C9           	ret
 32+  909A
# file closed: Cls.asm
848   909A              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  909A              ; ******************************************************************************************************************************************************************************************
  2+  909A              ;
  3+  909A              ;   22/01/23
  4+  909A              ;
  5+  909A              ;	Mov_down
  6+  909A              ;
  7+  909A              ; 	Mueve el Sprite X px hacia abajo.
  8+  909A              ;
  9+  909A              ;
 10+  909A 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  909D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  909F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  909F              ; 																	; _ en el caso de que no lo haya.
 14+  909F 3A AE 85     	ld a,(Vel_down)
 15+  90A2 47           	ld b,a
 16+  90A3 2A 98 85         ld hl,(Posicion_actual)
 17+  90A6 CD 7C 90     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  90A9 E6 02        	and 2
 19+  90AB 28 0F        	jr z,1F
 20+  90AD
 21+  90AD              ; Nos encontramos en el último tercio de pantalla.
 22+  90AD              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  90AD
 24+  90AD 7C           	ld a,h
 25+  90AE FE 57        	cp $57
 26+  90B0 20 0A        	jr nz,1F
 27+  90B2 7D           	ld a,l
 28+  90B3 C6 20        	add $20
 29+  90B5 30 05        	jr nc,1F
 30+  90B7
 31+  90B7              ; ------------------------------
 32+  90B7 CD 98 93     	call Reaparece_arriba
 33+  90BA              ;	call Reinicio
 34+  90BA              ; ------------------------------
 35+  90BA 18 08        	jr 3F
 36+  90BC CD BC 8D     1 call NextScan
 37+  90BF 22 98 85     	ld (Posicion_actual),hl
 38+  90C2 10 E2            djnz 2B
 39+  90C4 CD AE 93     3 call Genera_coordenadas
 40+  90C7 C9           	ret
 41+  90C8
 42+  90C8
 43+  90C8              ; ******************************************************************************************************************************************************************************************
 44+  90C8              ;
 45+  90C8              ;   22/01/23
 46+  90C8              ;
 47+  90C8              ;	Mov_up
 48+  90C8              ;
 49+  90C8              ; 	Mueve el Sprite hacia arriba.
 50+  90C8              ;
 51+  90C8              ;
 52+  90C8 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  90CB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  90CD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  90CD              ; 																		; _ en el caso de que no lo haya.
 56+  90CD 3A AD 85     	ld a,(Vel_up)
 57+  90D0 47           	ld b,a
 58+  90D1 2A 98 85     	ld hl,(Posicion_actual)
 59+  90D4 CD 7C 90     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  90D7 A7           	and a
 61+  90D8 20 10        	jr nz,1F
 62+  90DA
 63+  90DA              ; Nos encontramos en el 1er tercio de pantalla.
 64+  90DA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  90DA
 66+  90DA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  90DB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  90DD 20 0B            jr nz,1F
 69+  90DF 7D               ld a,l
 70+  90E0 D6 20            sub $20
 71+  90E2 30 06            jr nc,1F
 72+  90E4 25               dec h
 73+  90E5
 74+  90E5              ; -----------------------------
 75+  90E5 CD 88 93         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  90E8              ;	call Reinicio
 77+  90E8              ; -----------------------------
 78+  90E8
 79+  90E8 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  90EA CD CB 8D     1 call PreviousScan
 81+  90ED 22 98 85     	ld (Posicion_actual),hl
 82+  90F0 10 E2            djnz 3B
 83+  90F2 CD AE 93     2 call Genera_coordenadas
 84+  90F5 C9           	ret
 85+  90F6
 86+  90F6              ; ******************************************************************************************************************************************************************************************
 87+  90F6              ;
 88+  90F6              ;	19/10/22
 89+  90F6              ;
 90+  90F6              ;	Mov_right.
 91+  90F6              ;
 92+  90F6              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  90F6              ;
 94+  90F6
 95+  90F6 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  90F9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  90FB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  90FB              ; 																	; _ en el caso de que no lo haya.
 99+  90FB 3A C3 85     	ld a,(Ctrl_0)
100+  90FE CB 77        	bit 6,a
101+  9100 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9102
103+  9102 CD 36 93     	call Stop_Amadeus_right
104+  9105 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  9106 18 4D        	jr 8F
106+  9108
107+  9108 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  910B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  910D 20 46        	jr nz,8F
110+  910F
111+  910F 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9112 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9113 28 40        	jr z,8F
114+  9115
115+  9115              ; ---------- ---------- ----------
116+  9115              ;
117+  9115              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  9115
119+  9115 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  9118 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  911A 28 11        	jr z,1F
122+  911C 38 06        	jr c,6F
123+  911E FE 04        	cp 4
124+  9120 28 14        	jr z,7F
125+  9122 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9124
127+  9124              ; ---------- ---------- ----------
128+  9124              ;
129+  9124              ; Perfiles de velocidad
130+  9124              ;
131+  9124
132+  9124 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  9127 FE FE        	cp $fe
134+  9129 20 2A        	jr nz,8F
135+  912B 18 10        	jr 3F
136+  912D 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  9130 FE FD        	cp $fd
138+  9132 20 21        	jr nz,8F
139+  9134 18 07        	jr 3F
140+  9136 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  9139 FE FB        	cp $fb
142+  913B 20 18        	jr nz,8F
143+  913D
144+  913D              ; ---------- ---------- ----------
145+  913D
146+  913D              3
147+  913D CD 76 93     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  9140              ;	call Reinicio
149+  9140
150+  9140              ; ---------- ---------- ----------
151+  9140              ;
152+  9140              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  9140
154+  9140 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9142 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9143 CD 5C 91     	call DESPLZ_DER
157+  9146 C1           	pop bc
158+  9147 10 F9        	djnz 5B
159+  9149 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  914C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  914D 22 98 85     	ld (Posicion_actual),hl
162+  9150 CD AE 93     	call Genera_coordenadas
163+  9153 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  9155
165+  9155              ; ---------- ---------- ----------
166+  9155
167+  9155 2A 98 85     8 ld hl,(Posicion_actual)
168+  9158 CD 5C 91     	call DESPLZ_DER
169+  915B C9           2 ret
170+  915C
171+  915C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  915C              ;
173+  915C              ;	22/9/22
174+  915C              ;
175+  915C
176+  915C CD 6B 91     DESPLZ_DER call Desplaza_derecha
177+  915F CD B7 91         call modifica_parametros_1er_DESPLZ_2
178+  9162 CD E0 91         call Ciclo_completo
179+  9165 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  9168 CB FE        	set 7,(hl)
181+  916A C9           	ret
182+  916B
183+  916B              ; ******************************************************************************************************************************************************************************************
184+  916B              ;	15/02/23
185+  916B              ;
186+  916B
187+  916B 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  916E 47           	ld b,a
189+  916F 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  9172 23           1 inc hl
191+  9173 23           	inc hl
192+  9174 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9176 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9179 CD 88 87     	call Extrae_address
195+  917C 22 9A 85     	ld (Puntero_objeto),hl
196+  917F
197+  917F              ; Modifica (Puntero_DESPLZ_izq).
198+  917F
199+  917F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  917F              ; Cuántos movimientos hemos hecho ??
201+  917F              ; DE contiene (Puntero_DESPLZ_der).
202+  917F
203+  917F 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  9182 EB           	ex de,hl
205+  9183 A7           	and a
206+  9184 ED 52        	sbc hl,de
207+  9186 CB 3D        	srl l
208+  9188 3E 08        6 ld a,8
209+  918A 95           	sub l
210+  918B 30 1E        	jr nc,3F
211+  918D
212+  918D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  918D              ; B="0".
214+  918D
215+  918D 04           4 inc b
216+  918E 3C           	inc a
217+  918F 20 FC        	jr nz,4B
218+  9191 78           	ld a,b
219+  9192 08           	ex af,af
220+  9193 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  9196 23           5 inc hl
222+  9197 23           	inc hl
223+  9198 10 FC        	djnz 5B
224+  919A 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  919D CD 88 87     	call Extrae_address
226+  91A0 22 9A 85     	ld (Puntero_objeto),hl
227+  91A3
228+  91A3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  91A3              ; _(Posicion_actual).
230+  91A3
231+  91A3 21 98 85     	ld hl,Posicion_actual
232+  91A6 34           	inc (hl)
233+  91A7 08               ex af,af
234+  91A8 6F           	ld l,a
235+  91A9 18 DD        	jr 6B
236+  91AB
237+  91AB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  91AB
239+  91AB 47           3 ld b,a
240+  91AC 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  91AF 23           2 inc hl
242+  91B0 23           	inc hl
243+  91B1 10 FC        	djnz 2B
244+  91B3 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  91B6 C9           8 ret
246+  91B7
247+  91B7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  91B7              ;
249+  91B7              ;	24/7/22
250+  91B7              ;
251+  91B7              ;	modifica_parametros_1er_DESPLZ_2
252+  91B7              ;
253+  91B7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  91B7              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  91B7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  91B7
257+  91B7 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  91BA A7           	and a
259+  91BB 20 1F        	jr nz,1F
260+  91BD D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  91BF 32 9E 85         ld (CTRL_DESPLZ),a
262+  91C2
263+  91C2 21 97 85     	ld hl,Columns
264+  91C5 34           	inc (hl)
265+  91C6 3A AA 85     	ld a,(Cuad_objeto)
266+  91C9 E6 01        	and 1
267+  91CB 28 0F        	jr z,1F
268+  91CD 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  91D0 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  91D1 22 98 85     	ld (Posicion_actual),hl
271+  91D4 CD AE 93     	call Genera_coordenadas
272+  91D7 CD 42 93     	call Inc_CTRL_DESPLZ
273+  91DA 18 03        	jr 2F
274+  91DC CD 42 93     1 call Inc_CTRL_DESPLZ
275+  91DF C9           2 ret
276+  91E0
277+  91E0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  91E0              ;
279+  91E0              ;	24/7/22
280+  91E0              ;
281+  91E0              ;	Ciclo_completo.
282+  91E0              ;
283+  91E0              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  91E0              ;
285+  91E0              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  91E0              ; 	Decrementamos (Columns).
287+  91E0              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  91E0              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  91E0
290+  91E0
291+  91E0 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  91E3 FE FF        	cp $ff
293+  91E5 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  91E7 E6 F0        	and $f0
295+  91E9 20 28        	jr nz,3F
296+  91EB
297+  91EB              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  91EB
299+  91EB 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  91EE 47           	ld b,a
301+  91EF 3E F8        	ld a,$f8
302+  91F1 80           	add b
303+  91F2 32 9E 85     	ld (CTRL_DESPLZ),a
304+  91F5 18 1C        	jr 3F
305+  91F7 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  91FA 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  91FB AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  91FC 32 9E 85     	ld (CTRL_DESPLZ),a
309+  91FF 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9202 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9204 20 0A        	jr nz,2F
312+  9206 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9209 23           	inc hl
314+  920A 22 98 85     	ld (Posicion_actual),hl
315+  920D CD AE 93     	call Genera_coordenadas
316+  9210
317+  9210              ; Inicia el puntero de Sprite.
318+  9210
319+  9210 CD 9F 87     2 call Inicia_puntero_objeto_der
320+  9213 C9           3 ret
321+  9214
322+  9214              ; ******************************************************************************************************************************************************************************************
323+  9214              ;
324+  9214              ;	15/02/23
325+  9214              ;
326+  9214              ;	Mov_left.
327+  9214              ;
328+  9214              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9214              ;
330+  9214              Mov_left
331+  9214
332+  9214 21 C3 85     	ld hl,Ctrl_0
333+  9217 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  9219              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  9219              ; 																	; _ en el caso de que no lo haya.
336+  9219 3A C3 85     	ld a,(Ctrl_0)
337+  921C CB 77        	bit 6,a
338+  921E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9220
340+  9220 CD 3C 93     	call Stop_Amadeus_left
341+  9223 C8           	ret z
342+  9224 20 50        	jr nz,8F
343+  9226
344+  9226 3A 9C 85     11 ld a,(Coordenada_X)
345+  9229 A7           	and a
346+  922A 20 4A        	jr nz,8F
347+  922C
348+  922C 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  922F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9230 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9232
352+  9232              ; ---------- ---------- ----------
353+  9232
354+  9232 3A AB 85     	ld a,(Vel_left)
355+  9235 FE 02        	cp 2
356+  9237 28 0F        	jr z,1F
357+  9239 38 04        	jr c,6F
358+  923B FE 04        	cp 4
359+  923D 28 12        	jr z,7F
360+  923F
361+  923F              ; ---------- ---------- ----------
362+  923F
363+  923F 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  9242 FE F9        	cp $f9
365+  9244 20 30        	jr nz,8F
366+  9246 18 10        	jr 4F
367+  9248 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  924B FE FA        	cp $fa
369+  924D 20 27        	jr nz,8F
370+  924F 18 07        	jr 4F
371+  9251 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  9254 FE FC        	cp $fc
373+  9256 20 1E        	jr nz,8F
374+  9258
375+  9258              ; ---------- ---------- ----------
376+  9258
377+  9258              4
378+  9258 CD 64 93     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  925B              ;	call Reinicio
380+  925B
381+  925B              ; ---------- ---------- ----------
382+  925B
383+  925B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  925D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  925E
386+  925E 2A A2 85     	ld hl,(Indice_Sprite_izq)
387+  9261 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
388+  9264
389+  9264 CD 7D 92     	call DESPLZ_IZQ
390+  9267 C1           	pop bc
391+  9268 10 F3        	djnz 5B
392+  926A 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  926D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  926E 22 98 85     	ld (Posicion_actual),hl
395+  9271 CD AE 93     	call Genera_coordenadas
396+  9274 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  9276
398+  9276              ; ---------- ---------- ----------
399+  9276              ; Movemos, no hay recolocación.
400+  9276
401+  9276 2A 98 85     8 ld hl,(Posicion_actual)
402+  9279 CD 7D 92     	call DESPLZ_IZQ
403+  927C C9           2 ret
404+  927D
405+  927D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  927D              ;
407+  927D              ;	22/9/22
408+  927D
409+  927D              DESPLZ_IZQ
410+  927D
411+  927D CD 8C 92     	call Desplaza_izquierda
412+  9280 CD D8 92         call modifica_parametros_1er_DESPLZ
413+  9283 CD 00 93     	call Ciclo_completo_2
414+  9286 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  9289 CB BE        	res 7,(hl)
416+  928B C9           	ret
417+  928C
418+  928C              Desplaza_izquierda
419+  928C
420+  928C 3A AB 85     	ld a,(Vel_left)
421+  928F 47           	ld b,a
422+  9290 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
423+  9293 23           1 inc hl
424+  9294 23           	inc hl
425+  9295 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  9297 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
427+  929A CD 88 87     	call Extrae_address
428+  929D 22 9A 85     	ld (Puntero_objeto),hl
429+  92A0
430+  92A0              ; Modifica (Puntero_DESPLZ_der).
431+  92A0
432+  92A0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  92A0              ; Cuántos movimientos hemos hecho ??
434+  92A0              ; DE contiene (Puntero_DESPLZ_izq).
435+  92A0
436+  92A0 2A A2 85     7 ld hl,(Indice_Sprite_izq)
437+  92A3 EB           	ex de,hl
438+  92A4 A7           	and a
439+  92A5 ED 52        	sbc hl,de
440+  92A7 CB 3D        	srl l
441+  92A9 3E 08        6 ld a,8
442+  92AB 95           	sub l
443+  92AC 30 1E        	jr nc,3F
444+  92AE
445+  92AE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  92AE              ; B="0".
447+  92AE
448+  92AE 04           4 inc b
449+  92AF 3C           	inc a
450+  92B0 20 FC        	jr nz,4B
451+  92B2 78           	ld a,b
452+  92B3 08           	ex af,af
453+  92B4 2A A2 85     	ld hl,(Indice_Sprite_izq)
454+  92B7 23           5 inc hl
455+  92B8 23           	inc hl
456+  92B9 10 FC        	djnz 5B
457+  92BB 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
458+  92BE CD 88 87     	call Extrae_address
459+  92C1 22 9A 85     	ld (Puntero_objeto),hl
460+  92C4
461+  92C4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  92C4              ; _(Posicion_actual).
463+  92C4
464+  92C4 21 98 85     	ld hl,Posicion_actual
465+  92C7 35           	dec (hl)
466+  92C8 08           	ex af,af
467+  92C9 6F           	ld l,a
468+  92CA 18 DD        	jr 6B
469+  92CC
470+  92CC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  92CC
472+  92CC 47           3 ld b,a
473+  92CD 2A A0 85     	ld hl,(Indice_Sprite_der)
474+  92D0 23           2 inc hl
475+  92D1 23           	inc hl
476+  92D2 10 FC        	djnz 2B
477+  92D4 22 A4 85     	ld (Puntero_DESPLZ_der),hl
478+  92D7 C9           8 ret
479+  92D8
480+  92D8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  92D8              ;
482+  92D8              ;	modifica_parametros_1er_DESPLZ
483+  92D8              ;
484+  92D8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  92D8              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  92D8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  92D8
488+  92D8 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  92DB A7           	and a
490+  92DC 20 1E        	jr nz,1F
491+  92DE 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  92DF 32 9E 85         ld (CTRL_DESPLZ),a
493+  92E2 21 97 85     	ld hl,Columns
494+  92E5 34           	inc (hl)
495+  92E6 3A AA 85     	ld a,(Cuad_objeto)
496+  92E9 E6 01        	and 1
497+  92EB 20 0F        	jr nz,1F
498+  92ED 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  92F0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  92F1 22 98 85     	ld (Posicion_actual),hl
501+  92F4 CD AE 93     	call Genera_coordenadas
502+  92F7 CD 53 93     	call Dec_CTRL_DESPLZ
503+  92FA 18 03        	jr 2F
504+  92FC CD 53 93     1 call Dec_CTRL_DESPLZ
505+  92FF C9           2 ret
506+  9300
507+  9300              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  9300
509+  9300 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  9303 FE F7        	cp $f7
511+  9305 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  9307 30 2C        	jr nc,3F
513+  9309
514+  9309              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  9309
516+  9309 06 00        	ld b,0
517+  930B 04           4 inc b
518+  930C 3C           	inc a
519+  930D FE F7        	cp $f7
520+  930F 20 FA        	jr nz,4B
521+  9311 3E FF        	ld a,$ff
522+  9313 90           	sub b
523+  9314 32 9E 85     	ld (CTRL_DESPLZ),a
524+  9317 18 1C        	jr 3F
525+  9319
526+  9319              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  9319
528+  9319 21 97 85     1 ld hl,Columns
529+  931C 35           	dec (hl)
530+  931D AF           	xor a
531+  931E 32 9E 85     	ld (CTRL_DESPLZ),a
532+  9321 3A AA 85     	ld a,(Cuad_objeto)
533+  9324 E6 01        	and 1
534+  9326 28 0A        	jr z,2F
535+  9328 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  932B 2B           	dec hl
537+  932C 22 98 85     	ld (Posicion_actual),hl
538+  932F CD AE 93     	call Genera_coordenadas
539+  9332
540+  9332              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  9332
542+  9332 CD B2 87     2 call Inicia_puntero_objeto_izq
543+  9335 C9           3 ret
544+  9336
545+  9336              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  9336              ;
547+  9336              ;	19/10/22
548+  9336              ;
549+  9336              ;	(cp 29) para un Amadeus de 3 Columns.
550+  9336              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  9336
552+  9336 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  9339 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  933B C9           	ret
555+  933C
556+  933C              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  933C              ;
558+  933C              ;	19/10/22
559+  933C              ;
560+  933C              ;	(cp 2) para un Amadeus de 3 Columns.
561+  933C              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  933C
563+  933C 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  933F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  9341 C9           	ret
566+  9342
567+  9342              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  9342              ;
569+  9342              ;	24/7/22
570+  9342              ;
571+  9342              ;	Inc_CTRL_DESPLZ
572+  9342              ;
573+  9342              ;
574+  9342              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  9342
576+  9342 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  9345 3A AC 85     	ld a,(Vel_right)
578+  9348 A7           	and a
579+  9349 28 06        	jr z,1F
580+  934B 47           	ld b,a
581+  934C 34           3 inc (hl)
582+  934D 10 FD        	djnz 3B
583+  934F 18 01        	jr 2F
584+  9351 34           1 inc (hl)
585+  9352 C9           2 ret
586+  9353
587+  9353              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  9353              ;
589+  9353              ;	5/2/23
590+  9353              ;
591+  9353              ;	Dec_CTRL_DESPLZ
592+  9353              ;
593+  9353              ;
594+  9353              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  9353
596+  9353 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  9356 3A AB 85     	ld a,(Vel_left)
598+  9359 A7           	and a
599+  935A 28 06        	jr z,1F
600+  935C 47           	ld b,a
601+  935D 35           3 dec (hl)
602+  935E 10 FD        	djnz 3B
603+  9360 18 01        	jr 2F
604+  9362 35           1 dec (hl)
605+  9363 C9           2 ret
606+  9364
607+  9364              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  9364
609+  9364 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  9367 01 1F 00     	ld bc,31
611+  936A A7           	and a
612+  936B ED 4A        	adc hl,bc
613+  936D 22 98 85     	ld (Posicion_actual),hl
614+  9370 21 C3 85     	ld hl,Ctrl_0														; $xxx1
615+  9373 CB C6        	set 0,(hl)
616+  9375 C9           	ret
617+  9376
618+  9376              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  9376
620+  9376 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  9379 01 1F 00     	ld bc,31
622+  937C A7           	and a
623+  937D ED 42        	sbc hl,bc
624+  937F 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
625+  9382 21 C3 85     	ld hl,Ctrl_0
626+  9385 CB CE        	set 1,(hl)
627+  9387 C9           	ret
628+  9388
629+  9388              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  9388
631+  9388 24           Reaparece_abajo inc h
632+  9389 01 E0 17     	ld bc,$17e0
633+  938C A7           	and a
634+  938D ED 4A        	adc hl,bc
635+  938F 22 98 85     	ld (Posicion_actual),hl
636+  9392 21 C3 85     	ld hl,Ctrl_0
637+  9395 CB D6        	set 2,(hl)
638+  9397 C9           	ret
639+  9398
640+  9398              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  9398
642+  9398 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  939B A7           	and a
644+  939C ED 42        	sbc hl,bc
645+  939E 22 98 85     	ld (Posicion_actual),hl
646+  93A1 21 C3 85     	ld hl,Ctrl_0
647+  93A4 CB DE        	set 3,(hl)
648+  93A6 C9           	ret
649+  93A7
650+  93A7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  93A7
652+  93A7 2A A8 85     Reinicio ld hl,(Posicion_inicio)
653+  93AA 22 98 85     	ld (Posicion_actual),hl
654+  93AD C9           	ret
# file closed: Direcciones.asm
849   93AE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  93AE              ;	12/12/22
  2+  93AE              ;
  3+  93AE              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  93AE              ;	Fila superior "0", Columna izquierda "0".
  5+  93AE              ;
  6+  93AE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  93AE              ;
  8+  93AE              ;	Modifica: A
  9+  93AE
 10+  93AE C5           Genera_coordenadas push bc
 11+  93AF E5           	push hl
 12+  93B0 2A 98 85     	ld hl,(Posicion_actual)
 13+  93B3 7D           	ld a,l
 14+  93B4 E6 1F        	and $1f
 15+  93B6 32 9C 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  93B9 CD 7C 90     	call calcula_tercio
 17+  93BC 47           	ld b,a
 18+  93BD 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  93BE 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  93C0 7D           	ld a,l
 21+  93C1 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  93C3 28 05        	jr z,2F
 23+  93C5 0C           1 inc c
 24+  93C6 D6 20        	sub 32
 25+  93C8 20 FB        	jr nz,1B
 26+  93CA 0C           2 inc c
 27+  93CB 04           	inc b
 28+  93CC 05           	dec b
 29+  93CD 28 04        	jr z,3F
 30+  93CF 3E E0        	ld a,$e0
 31+  93D1 10 F2        	djnz 1B
 32+  93D3 79           3 ld a,c
 33+  93D4 3D           	dec a
 34+  93D5 32 9D 85     	ld (Coordenada_y),a
 35+  93D8 E1           	pop hl
 36+  93D9 C1           	pop bc
 37+  93DA C9           	ret
# file closed: Genera_coordenadas.asm
850   93DB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  93DB
  2+  93DB
  3+  93DB              ;   11/8/22
  4+  93DB              ;
  5+  93DB              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  93DB              ;
  7+  93DB              ;   Mov_obj.asm
  8+  93DB              ;
  9+  93DB              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  93DB              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  93DB              ;
 12+  93DB              ;   Codificación:
 13+  93DB              ;
 14+  93DB              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  93DB
 16+  93DB              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  93DB
 18+  93DB 02 40 00     Arriba db 2,%01000000,0
 19+  93DE 02 80 00     Abajo db 2,%10000000,0
 20+  93E1 02 20 00     Derecha db 2,%00100000,0
 21+  93E4 02 10 00     Izquierda db 2,%00010000,0
 22+  93E7 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  93EB 60 42 60 40
 22+  93EF 63
 23+  93F0 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  93F4 22 A3 80 A0
 24+  93F8 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  93FC 84 A0 83 A0
 25+  9400 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9404 80 A3 22 A0
 26+  9408 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  940C 40 60 42 60
 27+  9410 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9414 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  9418 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  941C 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  9420 84
 31+  9421 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  9425 84 00
 32+  9427 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  942B 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  942F 1F 1F 1F 1F
 34+  9433 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  9437 1F 1F 1F 1F
 34+  943B 1F
 35+  943C 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  9440 2F 2F 2F 2F
 35+  9444 2F 2F
 36+  9446 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  944A 2F 2F 00
 37+  944D
 38+  944D
 39+  944D              ; ----- ----- ----- ----- -----
 40+  944D
 41+  944D 2B 94        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  944F 27 94        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9451 E4 93        Indice_mov_Izquierda defw Izquierda
 44+  9453 E1 93        Indice_mov_Derecha defw Derecha
 45+  9455 DE 93        Indice_mov_Abajo defw Abajo
 46+  9457 DB 93        Indice_mov_Arriba defw Arriba
 47+  9459 18 94        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  945B 1C 94        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  945D 14 94        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  945F 21 94        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9461 E7 93        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9463              ; ----- ----- ----- ----- -----
 53+  9463
 54+  9463 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9466 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  9467 28 02            jr z,1F
 57+  9469 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  946B 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  946E C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  9470 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9473              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9473 2A C7 85         ld hl,(Puntero_mov)
 63+  9476 7E               ld a,(hl)
 64+  9477 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  947A 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  947B 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  947E
 68+  947E 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  9481 A7               and a
 70+  9482 20 0C            jr nz,12F
 71+  9484 2A C7 85         ld hl,(Puntero_mov)
 72+  9487 7E               ld a,(hl)
 73+  9488 A7               and a
 74+  9489 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  948B E6 0F            and $0f
 76+  948D 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  9490              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  9490 2A C7 85     12 ld hl,(Puntero_mov)
 79+  9493 CB 7E            bit 7,(hl)
 80+  9495 28 03            jr z,2F
 81+  9497 CD 9A 90         call Mov_down
 82+  949A 2A C7 85     2 ld hl, (Puntero_mov)
 83+  949D CB 76            bit 6,(hl)
 84+  949F 28 03            jr z,3F
 85+  94A1 CD C8 90         call Mov_up
 86+  94A4 2A C7 85     3 ld hl, (Puntero_mov)
 87+  94A7 CB 6E            bit 5,(hl)
 88+  94A9 28 03            jr z,4F
 89+  94AB CD F6 90         call Mov_right
 90+  94AE 2A C7 85     4 ld hl, (Puntero_mov)
 91+  94B1 CB 66            bit 4,(hl)
 92+  94B3 28 03            jr z,5F
 93+  94B5 CD 14 92         call Mov_left
 94+  94B8
 95+  94B8              ; ---------- --------- --------- ---------- ----------
 96+  94B8
 97+  94B8 3A CB 85     5 ld a,(Repetimos_db)
 98+  94BB A7               and a
 99+  94BC 28 07            jr z,6F
100+  94BE 3D               dec a
101+  94BF 32 CB 85         ld (Repetimos_db),a
102+  94C2 28 01            jr z,6f
103+  94C4 C9           11 ret
104+  94C5 21 C9 85     6 ld hl,Contador_db_mov
105+  94C8 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  94C9 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  94CC 23               inc hl
108+  94CD 22 C7 85         ld (Puntero_mov),hl
109+  94D0 18 F2            jr 11B
110+  94D2 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  94D5 3A CA 85         ld a,(Incrementa_puntero)
112+  94D8 47               ld b,a
113+  94D9 23           8 inc hl
114+  94DA 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  94DC 5E               ld e,(hl)
116+  94DD 23               inc hl
117+  94DE 56               ld d,(hl)
118+  94DF EB               ex de,hl
119+  94E0 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  94E3 18 DF            jr 11B
121+  94E5
122+  94E5              ; ---------- --------- --------- ---------- ----------
123+  94E5              ;
124+  94E5              ;   11/8/22
125+  94E5              ;
126+  94E5              ;   Prepara_Puntero_mov
127+  94E5
128+  94E5 E5           Prepara_Puntero_mov push hl
129+  94E6 D5               push de
130+  94E7 2A C5 85         ld hl,(Puntero_indice_mov)
131+  94EA 5E               ld e,(hl)
132+  94EB 23               inc hl
133+  94EC 56               ld d,(hl)
134+  94ED EB               ex de,hl
135+  94EE 22 C7 85         ld (Puntero_mov),hl
136+  94F1 D1               pop de
137+  94F2 E1               pop hl
138+  94F3 C9               ret
139+  94F4
140+  94F4              ; ---------- --------- --------- ---------- ----------
141+  94F4              ;
142+  94F4              ;   11/8/22
143+  94F4              ;
144+  94F4              ;   Reinicia_el_movimiento
145+  94F4
146+  94F4 CD E5 94     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  94F7 AF               xor a
148+  94F8 32 C9 85         ld (Contador_db_mov),a
149+  94FB 32 CA 85         ld (Incrementa_puntero),a
150+  94FE
151+  94FE              ;    jr $
152+  94FE
153+  94FE C3 63 94         jp Movimiento
154+  9501 C9               ret
155+  9502              ; ---------- --------- --------- ---------- ----------
156+  9502
157+  9502
158+  9502
159+  9502
160+  9502
161+  9502
162+  9502
163+  9502
164+  9502
165+  9502
166+  9502
167+  9502
168+  9502
169+  9502
170+  9502
171+  9502
172+  9502
173+  9502
# file closed: Patrones_de_mov.asm
851   9502              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9502              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9502              ;
  3+  9502              ;	3/1/23
  4+  9502              ;
  5+  9502              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9502
  7+  9502              ;	ADC HL,SP	LD (addr),SP
  8+  9502              ;	ADD HL,SP	LD SP,(addr)
  9+  9502              ;	ADD IX,SP	LD SP,nn
 10+  9502              ; 	ADD IY,SP	LD SP,HL
 11+  9502              ;				LD SP,IX
 12+  9502              ;	DEC SP		LD SP,IY
 13+  9502
 14+  9502              ;	EX (SP),HL
 15+  9502              ;	EX (SP),IX
 16+  9502              ;	EX (SP),IY
 17+  9502
 18+  9502              ;	INC SP
 19+  9502
 20+  9502
 21+  9502                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
852   7FD4
853   7FD4              	SAVESNA "Pruebas.sna", START
854   7FD4
855   7FD4
856   7FD4
# file closed: Banco_de_pruebas.asm
