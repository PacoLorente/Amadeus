# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 55 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC 5E 48        	defw $485e                                      ; (Posicion_inicio).
 203+ 84FE 02           	db 2											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 13 97 00 00  	defw Indice_mov_Izquierda_y_derecha,0			; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 19 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 17 97 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 27 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad, hay que confirmarlo_
 167  85D7              ; 															_ comparando las coordenadas del disparo con las de la entidad almacenada en DRAW.
 168  85D7              ;	                                                    BIT 3, Indica que esta entidad ha sido alcanzada por un proyectil de AMADEUS.
 169  85D7
 170  85D7              ; Gestión de ENTIDADES.
 171  85D7
 172  85D7 00 00        Puntero_store_entidades defw 0
 173  85D9 00 00        Puntero_restore_entidades defw 0
 174  85DB 00 00        Indice_restore defw 0
 175  85DD 03           Numero_de_entidades db 3								; Nº de entidades en pantalla, (contando con Amadeus).
 176  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 177  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 178  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 179  85DF              ;														; _ (Numero_de_malotes)="0".
 180  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 181  85E1              ;														; _variable para almacenar lo posición del puntero_
 182  85E1              ; 														; _de pila, SP.
 183  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 184  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 185  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 186  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 187  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 188  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 189  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 190  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 191  85E7
 192  85E7              ;---------------------------------------------------------------------------------------------------------------
 193  85E7
 194  85E7              ; Gestión de Disparos.
 195  85E7
 196  85E7 00           Numero_de_disparotes db 0
 197  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 198  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 199  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 200  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 201  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 202  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 203  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 204  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 205  85EF              ;														; _produzca colisión.
 206  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 207  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 208  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 209  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 210  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 211  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 212  85F7
 213  85F7              ;---------------------------------------------------------------------------------------------------------------
 214  85F7
 215  85F7              ; Relojes y temporizaciones.
 216  85F7
 217  85F7 01           Habilita_disparo_Amadeus db 1
 218  85F8 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 219  85F9 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 220  85FA
 221  85FA 01           Habilita_disparo_entidad db 1
 222  85FB 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 223  85FC 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 224  85FD
 225  85FD              ;---------------------------------------------------------------------------------------------------------------
 226  85FD
 227  85FD              ; Gestión de FRAMES.
 228  85FD
 229  85FD 00           Switch db 0
 230  85FE
 231  85FE              ; Variables de Raster y localización en pantalla.
 232  85FE
 233  85FE 00 FF        Temp_Raster defw $ff00
 234  8600
 235  8600              ; Rutina principal *************************************************************************************************************************************************************************
 236  8600              ;
 237  8600              ;	14/11/22
 238  8600
 239  8600 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 240  8603
 241  8603 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 242  8605 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 243  8607 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 244  8609 F3           	DI
 245  860A
 246  860A 3E 07        	ld a,%00000111
 247  860C CD 3B 93     	call Cls
 248  860F
 249  860F              ;	call Pinta_FILAS
 250  860F
 251  860F CD EB 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 252  8612
 253  8612 21 DD 85     	ld hl,Numero_de_entidades
 254  8615 46           	ld b,(hl)
 255  8616 04           	inc b
 256  8617 05           	dec b
 257  8618 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 258  861A
 259  861A CD C7 87     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 260  861D              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 261  861D
 262  861D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 263  861D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 264  861D              ;	Pintamos el resto de entidades:
 265  861D
 266  861D              ;	INICIA ENTIDADES !!!!!
 267  861D
 268  861D C5           1 push bc  												; Guardo el contador de entidades.
 269  861E CD 21 88      	call Inicia_Puntero_objeto
 270  8621 CD 8B 8D     	call Draw
 271  8624 CD A0 7F     	call Guarda_foto_registros
 272  8627 CD 69 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 273  862A C1           	pop bc
 274  862B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 275  862D
 276  862D              ; 	INICIA AMADEUS !!!!!
 277  862D
 278  862D CD C2 88     3 call Restore_Amadeus
 279  8630 CD 21 88     	call Inicia_Puntero_objeto
 280  8633 CD 8B 8D     	call Draw
 281  8636 CD A0 7F     	call Guarda_foto_registros
 282  8639
 283  8639 11 74 84     	ld de,Amadeus_db
 284  863C CD D4 88     	call Store_Amadeus
 285  863F
 286  863F              ; 	INICIA DISPAROS !!!!!
 287  863F
 288  863F CD DD 87     	call Inicia_Puntero_Disparo_Entidades
 289  8642 CD E4 87     	call Inicia_Puntero_Disparo_Amadeus
 290  8645
 291  8645              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 292  8645
 293  8645 CD C7 87     	call Inicia_punteros_de_entidades
 294  8648 CD B0 88     	call Restore_Primera_entidad
 295  864B
 296  864B 3A DD 85     	ld a,(Numero_de_entidades)
 297  864E 3C           	inc a
 298  864F 32 DE 85     	ld (Numero_de_malotes),a
 299  8652
 300  8652 FB           2 ei
 301  8653 18 FD        	jr 2B
 302  8655
 303  8655              ; -----------------------------------------------------------------------------------
 304  8655
 305  8655              Frame
 306  8655
 307  8655              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 308  8655              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 309  8655
 310  8655              ; PINTAMOS.
 311  8655
 312  8655 3E 02            ld a,2
 313  8657 D3 FE            out ($fe),a
 314  8659 CD 8F 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 315  865C CD C8 90     	call Extrae_foto_disparos
 316  865F 3E 01            ld a,1
 317  8661 D3 FE            out ($fe),a
 318  8663
 319  8663              ; ----------------------------------------------------------------------
 320  8663
 321  8663              ;	ld a,(Ctrl_1)
 322  8663              ;	bit 3,a
 323  8663              ;	jr nz,$
 324  8663
 325  8663              ; RELOJES.
 326  8663
 327  8663 21 F7 85     	ld hl,Habilita_disparo_Amadeus
 328  8666 11 F9 85     	ld de,Temporiza_disparo_Amadeus
 329  8669 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 330  866C
 331  866C 21 FA 85     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 332  866F 11 FC 85     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 333  8672 CD D5 7F     	call Habilita_disparos
 334  8675
 335  8675              ; COLISIONES.
 336  8675
 337  8675 CD 2D 8D     	call Selector_de_impactos
 338  8678
 339  8678              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 340  8678              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 341  8678              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 342  8678
 343  8678 AF           	xor a
 344  8679 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 345  867C
 346  867C CD C7 87     	call Inicia_punteros_de_entidades
 347  867F CD B0 88     	call Restore_Primera_entidad
 348  8682
 349  8682 3A 9B 85     	ld a,(Filas)
 350  8685 A7           	and a
 351  8686 20 03        	jr nz,10F 											; Si la 1ª entidad está vacía, saltamos a la siguiente.
 352  8688
 353  8688 CD 69 88     	call Store_Restore_entidades
 354  868B
 355  868B
 356  868B
 357  868B              ; ---------------------------------------------------------------------------------------
 358  868B
 359  868B CD AD 8B     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 360  868E 21 00 70     	ld hl,Album_de_fotos
 361  8691 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 362  8694              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 363  8694 3A DD 85         ld a,(Numero_de_entidades)
 364  8697 47               ld b,a
 365  8698 A7           	and a
 366  8699 28 61        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 367  869B
 368  869B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 369  869B
 370  869B              ; Código que ejecutamos con cada entidad:
 371  869B
 372  869B              ; Impacto ???
 373  869B
 374  869B 3A B4 85     2 ld a,(Impacto)
 375  869E A7           	and a
 376  869F 28 19        	jr z,8F
 377  86A1
 378  86A1              ; Hay Impacto en esta entidad.
 379  86A1
 380  86A1 CD 7E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 381  86A4 CD DD 88     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 382  86A7
 383  86A7 2A D7 85     	ld hl,(Puntero_store_entidades)
 384  86AA 54           	ld d,h
 385  86AB 5D           	ld e,l
 386  86AC CD D4 88     	call Store_Amadeus									; Limpiamos `su base de datos´.
 387  86AF
 388  86AF 21 DD 85     	ld hl,Numero_de_entidades							; Una alimaña menos.
 389  86B2 35           	dec (hl)
 390  86B3
 391  86B3 21 D6 85     	ld hl,Ctrl_1
 392  86B6 CB DE        	set 3,(hl)											; Activamos el FLAG de impacto de entidad de DRAW.
 393  86B8
 394  86B8 18 6D        	jr 9F
 395  86BA
 396  86BA              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 397  86BA              ; _con las coordenadas de la entidad almacenada en DRAW.
 398  86BA
 399  86BA 3A D6 85     8 ld a,(Ctrl_1)
 400  86BD CB 57        	bit 2,a
 401  86BF 28 1B        	jr z,7F
 402  86C1 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 403  86C4 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 404  86C5              ;														; E contiene la coordenada_X del disparo.
 405  86C5 2A A1 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 406  86C8              ;														; H Coordenado_y de la entidad.
 407  86C8 A7           	and a
 408  86C9 ED 52        	sbc hl,de
 409  86CB CD 64 8D     	call Determina_resultado_comparativa
 410  86CE 04           	inc b
 411  86CF 05           	dec b
 412  86D0 28 0A        	jr z,7F
 413  86D2
 414  86D2              ; ----- ----- -----
 415  86D2
 416  86D2 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 417  86D4 32 B4 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 418  86D7 21 D6 85     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 419  86DA CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 420  86DC
 421  86DC C5           7 push bc
 422  86DD
 423  86DD CD 2F 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 424  86E0
 425  86E0 3A C9 85     	ld a,(Ctrl_0)
 426  86E3 CB 67        	bit 4,a
 427  86E5 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 428  86E7
 429  86E7              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 430  86E7              ; [[[
 431  86E7 CD 36 89     	call Detecta_disparo_entidad
 432  86EA              ; ]]]
 433  86EA CD 8E 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 434  86ED
 435  86ED 21 C9 85     	ld hl,Ctrl_0
 436  86F0 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 437  86F2 AF           	xor a
 438  86F3 32 CA 85     	ld (Obj_dibujado),a
 439  86F6
 440  86F6 CD 69 88     6 call Store_Restore_entidades
 441  86F9 C1           	pop bc
 442  86FA 10 9F        	djnz 2B
 443  86FC
 444  86FC              ; Tras la gestión de las entidades, ... AMADEUS.
 445  86FC
 446  86FC CD C2 88     4 call Restore_Amadeus
 447  86FF
 448  86FF              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 449  86FF
 450  86FF 3A B4 85     	ld a,(Impacto)
 451  8702 A7           	and a
 452  8703 20 FE        	jr nz,$
 453  8705
 454  8705              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 455  8705
 456  8705 CD 5F 87     	call Mov_Amadeus
 457  8708
 458  8708 3A C9 85     	ld a,(Ctrl_0)
 459  870B CB 67        	bit 4,a
 460  870D 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 461  870F
 462  870F CD 8E 87     	call Guarda_foto_entidad_a_pintar
 463  8712
 464  8712 21 C9 85     3 ld hl,Ctrl_0
 465  8715 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 466  8717 AF           	xor a
 467  8718 32 CA 85     	ld (Obj_dibujado),a
 468  871B
 469  871B 11 74 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 470  871E CD D4 88     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 471  8721
 472  8721 CD CB 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 473  8724
 474  8724              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 475  8724
 476  8724 CD 03 88     	call Calcula_numero_de_disparotes
 477  8727 CD EB 87     9 call Calcula_numero_de_malotes
 478  872A
 479  872A 3E 04        	ld a,4
 480  872C D3 FE        	out ($fe),a
 481  872E
 482  872E C9           	ret
 483  872F
 484  872F              ; --------------------------------------------------------------------------------------------------------------
 485  872F              ;
 486  872F              ;	27/03/23
 487  872F
 488  872F              Mov_obj
 489  872F
 490  872F              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 491  872F
 492  872F AF           	xor a
 493  8730 32 CA 85     	ld (Obj_dibujado),a
 494  8733 32 C9 85     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 495  8736              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 496  8736              ; 														; _de la entidad.
 497  8736 CD 98 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 498  8739              ;														; Obj_dibujado="0".
 499  8739              ; Movemos Entidades malignas.
 500  8739
 501  8739 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 502  873C 24           	inc h                                               ; Salimos de la rutina.
 503  873D 25           	dec h
 504  873E C8           	ret z
 505  873F
 506  873F CD 29 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 507  8742
 508  8742 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 509  8745 CB 67        	bit 4,a
 510  8747 C8           	ret z
 511  8748
 512  8748              ; Ha habido desplazamiento de la entidad maligna.
 513  8748              ; Ha llegado a zona de AMADEUS ???
 514  8748
 515  8748 3A A2 85     	ld a,(Coordenada_y)
 516  874B FE 14        	cp $14
 517  874D D4 FC 8A     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 518  8750              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 519  8750              ; ---------
 520  8750
 521  8750 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 522  8752 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 523  8755 CD 98 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 524  8758 CD AF 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 525  875B CD 7E 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 526  875E C9           	ret													; _de la misma.
 527  875F
 528  875F              ; --------------------------------------------------------------------------------------------------------------
 529  875F              ;
 530  875F              ;	29/1/23
 531  875F
 532  875F              Mov_Amadeus
 533  875F
 534  875F AF           	xor a
 535  8760 32 CA 85     	ld (Obj_dibujado),a
 536  8763 CD 98 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 537  8766              ;														; Obj_dibujado="0".
 538  8766              ; Movemos Amadeus.
 539  8766
 540  8766 CD FF 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 541  8769 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 542  876C CB 67        	bit 4,a
 543  876E C8           	ret z
 544  876F
 545  876F              ; ---------
 546  876F
 547  876F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 548  8771 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 549  8774 CD 98 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 550  8777 CD AF 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 551  877A CD 7E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 552  877D C9           	ret													; _de la nave.
 553  877E
 554  877E              ; --------------------------------------------------------------------------------------------------------------
 555  877E              ;
 556  877E              ;	31/01/23
 557  877E              ;
 558  877E              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 559  877E
 560  877E              Guarda_foto_entidad_a_borrar
 561  877E
 562  877E CD 65 90     	call Prepara_draw
 563  8781 CD 9F 8F     	call calcula_CColumnass
 564  8784 CD D6 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 565  8787 CD 2B 90     	call Define_rutina_de_impresion
 566  878A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 567  878D C9           	ret
 568  878E
 569  878E              ; --------------------------------------------------------------------------------------------------------------
 570  878E              ;
 571  878E              ;	31/01/23
 572  878E              ;
 573  878E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 574  878E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 575  878E
 576  878E              Guarda_foto_entidad_a_pintar
 577  878E
 578  878E CD BB 87     	call Repone_pintar
 579  8791 CD 8B 8D     	call Draw
 580  8794 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 581  8797 C9           	ret
 582  8798
 583  8798              ; --------------------------------------------------------------------------------------------------------------
 584  8798              ;
 585  8798              ;
 586  8798
 587  8798 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 588  879B 3A CA 85     	ld a,(Obj_dibujado)
 589  879E A7           	and a
 590  879F 28 05        	jr z,1F
 591  87A1 11 BF 85     	ld de,Variables_de_pintado
 592  87A4 18 03        	jr 2F
 593  87A6 11 B5 85     1 ld de,Variables_de_borrado
 594  87A9 01 08 00     2 ld bc,8
 595  87AC ED B0        	ldir
 596  87AE C9           	ret
 597  87AF
 598  87AF              ; --------------------------------------------------------------------------------------------------------------
 599  87AF
 600  87AF 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 601  87B2 11 9B 85     	ld de,Filas
 602  87B5 01 08 00     	ld bc,8
 603  87B8 ED B0        	ldir
 604  87BA C9           	ret
 605  87BB
 606  87BB 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 607  87BE 11 9B 85     	ld de,Filas
 608  87C1 01 08 00     	ld bc,8
 609  87C4 ED B0        	ldir
 610  87C6 C9           	ret
 611  87C7
 612  87C7              ; *************************************************************************************************************************************************************
 613  87C7              ;
 614  87C7              ; 8/1/23
 615  87C7              ;
 616  87C7              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 617  87C7              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 618  87C7              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 619  87C7
 620  87C7              ; Destruye HL y DE !!!!!
 621  87C7
 622  87C7              Inicia_punteros_de_entidades
 623  87C7
 624  87C7 21 68 84     	ld hl,Indice_de_entidades
 625  87CA CD 1B 88         call Extrae_address
 626  87CD 22 D7 85         ld (Puntero_store_entidades),hl
 627  87D0 21 6A 84     	ld hl,Indice_de_entidades+2
 628  87D3 22 DB 85     	ld (Indice_restore),hl
 629  87D6 CD 1B 88     	call Extrae_address
 630  87D9 22 D9 85     	ld (Puntero_restore_entidades),hl
 631  87DC C9               ret
 632  87DD
 633  87DD              ; *************************************************************************************************************************************************************
 634  87DD              ;
 635  87DD              ; 8/1/23
 636  87DD              ;
 637  87DD              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 638  87DD
 639  87DD 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 640  87E0 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 641  87E3 C9           	ret
 642  87E4 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 643  87E7 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 644  87EA C9           	ret
 645  87EB
 646  87EB              ; -------------------------------------------------------------------------------------------------------------
 647  87EB              ;
 648  87EB              ; 28/2/23
 649  87EB              ;
 650  87EB
 651  87EB              Calcula_numero_de_malotes
 652  87EB
 653  87EB 21 00 70     	ld hl,Album_de_fotos
 654  87EE EB           	ex de,hl
 655  87EF 2A E3 85     	ld hl,(Stack_snapshot)
 656  87F2
 657  87F2 06 00        	ld b,0
 658  87F4 7D           	ld a,l
 659  87F5 93           	sub e
 660  87F6 28 07        	jr z,1F
 661  87F8
 662  87F8              ; Nº de malotes no es "0".
 663  87F8
 664  87F8 D6 06        2 sub 6
 665  87FA 04           	inc b
 666  87FB A7           	and a
 667  87FC 20 FA        	jr nz,2B
 668  87FE 78           	ld a,b
 669  87FF
 670  87FF 32 DE 85     1 ld (Numero_de_malotes),a
 671  8802 C9           	ret
 672  8803
 673  8803              ; -------------------------------------------------------------------------------------------------------------
 674  8803              ;
 675  8803              ; 28/2/23
 676  8803              ;
 677  8803
 678  8803              Calcula_numero_de_disparotes
 679  8803
 680  8803 21 60 70     	ld hl,Album_de_fotos_disparos
 681  8806 EB           	ex de,hl
 682  8807 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 683  880A
 684  880A 06 00        	ld b,0
 685  880C 7D           	ld a,l
 686  880D 93           	sub e
 687  880E 28 07        	jr z,1F
 688  8810
 689  8810              ; Nº de malotes no es "0".
 690  8810
 691  8810 D6 06        2 sub 6
 692  8812 04           	inc b
 693  8813 A7           	and a
 694  8814 20 FA        	jr nz,2B
 695  8816 78           	ld a,b
 696  8817
 697  8817 32 E7 85     1 ld (Numero_de_disparotes),a
 698  881A C9           	ret
 699  881B              ; *************************************************************************************************************************************************************
 700  881B              ;
 701  881B              ; 20/10/22
 702  881B              ;
 703  881B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 704  881B              ;
 705  881B              ; Destruye el puntero y DE !!!!!
 706  881B
 707  881B 5E           Extrae_address ld e,(hl)
 708  881C 23           	inc hl
 709  881D 56           	ld d,(hl)
 710  881E 2B           	dec hl
 711  881F EB           	ex de,hl
 712  8820 C9           	ret
 713  8821
 714  8821              ; *************************************************************************************************************************************************************
 715  8821              ;
 716  8821              ;	7/2/23
 717  8821              ;
 718  8821              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 719  8821              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 720  8821              ;
 721  8821              ;   Destruye HL y BC !!!!!,
 722  8821              ;
 723  8821              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 724  8821              ;					"0" ..... Izquierda.
 725  8821
 726  8821              Inicia_Puntero_objeto
 727  8821
 728  8821 3A AF 85     	ld a,(Cuad_objeto)
 729  8824 E6 01        	and 1
 730  8826 F5           	push af
 731  8827 CC 45 88     	call z,Inicia_puntero_objeto_izq
 732  882A F1           	pop af
 733  882B 28 2B        	jr z,1F
 734  882D CD 32 88     	call Inicia_puntero_objeto_der
 735  8830 18 26        	jr 1F
 736  8832
 737  8832              ; Arrancamos desde la parte izquierda de la pantalla.
 738  8832              ; Iniciamos (Indice_Sprite_der).
 739  8832
 740  8832 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 741  8835 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 742  8838 CD 1B 88     	call Extrae_address
 743  883B 22 9F 85     	ld (Puntero_objeto),hl
 744  883E
 745  883E 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 746  8841 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 747  8844 C9           	ret
 748  8845
 749  8845              ; Arrancamos desde la parte derecha de la pantalla.
 750  8845              ; Iniciamos (Indice_Sprite_izq).
 751  8845
 752  8845 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 753  8848 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 754  884B CD 1B 88     	call Extrae_address
 755  884E 22 9F 85     	ld (Puntero_objeto),hl
 756  8851
 757  8851 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 758  8854 22 A9 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 759  8857 C9           	ret
 760  8858
 761  8858              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 762  8858
 763  8858 21 38 83     1 ld hl,Amadeus
 764  885B ED 4B 9F 85  	ld bc,(Puntero_objeto)
 765  885F B7 ED 42     	sub hl,bc
 766  8862 C0           	ret nz
 767  8863 21 C9 85     	ld hl,Ctrl_0
 768  8866 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 769  8868 C9           	ret 												; _de nuestra nave en los extremos.
 770  8869
 771  8869              ; *************************************************************************************************************************************************************
 772  8869              ;
 773  8869              ;	8/1/23
 774  8869              ;
 775  8869              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 776  8869              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 777  8869
 778  8869              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 779  8869              ;	_de la 2ª y 3ª entidad respectivamente.
 780  8869
 781  8869              Store_Restore_entidades
 782  8869
 783  8869 E5           	push hl
 784  886A D5           	push de
 785  886B C5            	push bc
 786  886C
 787  886C              ;	STORE !!!!!
 788  886C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 789  886C
 790  886C 21 9B 85     2 ld hl,Filas
 791  886F ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 792  8873 01 3B 00     	ld bc,59
 793  8876 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 794  8878
 795  8878              ; 	Entidad_sospechosa. 20/4/23
 796  8878
 797  8878 3A B4 85     	ld a,(Impacto)
 798  887B A7           	and a
 799  887C 28 0C        	jr z,1F
 800  887E
 801  887E 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 802  8881 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 803  8884 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 804  8885 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 805  8887 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 806  888A
 807  888A              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 808  888A
 809  888A 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 810  888D 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 811  8890
 812  8890 E5           	push hl
 813  8891
 814  8891 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 815  8894 01 3B 00     	ld bc,59
 816  8897 ED B0        	ldir
 817  8899
 818  8899              ;	Incrementa RESTORE !!!!!
 819  8899
 820  8899 2A DB 85         ld hl,(Indice_restore)
 821  889C 23           	inc hl
 822  889D 23           	inc hl
 823  889E 22 DB 85     	ld (Indice_restore),hl
 824  88A1 CD 1B 88         call Extrae_address
 825  88A4 22 D9 85         ld (Puntero_restore_entidades),hl
 826  88A7
 827  88A7 E1               pop hl
 828  88A8
 829  88A8 7E            	ld a,(hl)
 830  88A9 A7            	and a
 831  88AA 28 C0         	jr z,2B												; Si el cajón está vacío, saltamos al siguiente.
 832  88AC
 833  88AC C1           	pop bc
 834  88AD D1           	pop de
 835  88AE E1           	pop hl
 836  88AF C9           	ret
 837  88B0
 838  88B0              ; **************************************************************************************************
 839  88B0              ;
 840  88B0              ;	29/10/22
 841  88B0              ;
 842  88B0              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 843  88B0
 844  88B0 E5           Restore_Primera_entidad push hl
 845  88B1 D5           	push de
 846  88B2 C5            	push bc
 847  88B3 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 848  88B6 11 9B 85     	ld de,Filas
 849  88B9 01 3B 00     	ld bc,59
 850  88BC ED B0        	ldir
 851  88BE C1           	pop bc
 852  88BF D1           	pop de
 853  88C0 E1           	pop hl
 854  88C1 C9           	ret
 855  88C2
 856  88C2              ; **************************************************************************************************
 857  88C2              ;
 858  88C2              ;	25/01/23
 859  88C2              ;
 860  88C2              ;	Restore_Amadeus
 861  88C2              ;
 862  88C2              ;	Cargamos en DRAW los parámetros de Amadeus.
 863  88C2              ;
 864  88C2
 865  88C2 E5           Restore_Amadeus	push hl
 866  88C3 D5           	push de
 867  88C4 C5            	push bc
 868  88C5 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 869  88C8 11 9B 85     	ld de,Filas
 870  88CB 01 3B 00     	ld bc,59
 871  88CE ED B0        	ldir
 872  88D0 C1           	pop bc
 873  88D1 D1           	pop de
 874  88D2 E1           	pop hl
 875  88D3 C9           	ret
 876  88D4
 877  88D4              ; *************************************************************************************************************************************************************
 878  88D4              ;
 879  88D4              ;	29/04/23
 880  88D4              ;
 881  88D4              ;	Store_Amadeus
 882  88D4              ;
 883  88D4              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 884  88D4              ;
 885  88D4              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 886  88D4              ;
 887  88D4              ;	DESTRUYE: HL y BC y DE.
 888  88D4
 889  88D4 21 9B 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 890  88D7 01 3B 00     	ld bc,59
 891  88DA ED B0        	ldir
 892  88DC C9           	ret
 893  88DD
 894  88DD              ; -----------------------------------------------------------
 895  88DD              ;
 896  88DD              ;	27/04/23
 897  88DD              ;
 898  88DD              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 899  88DD              ;
 900  88DD              ;	Destruye: HL,BC,DE,A
 901  88DD
 902  88DD 21 9B 85     Borra_datos_entidad ld hl,Filas
 903  88E0 01 3A 00     	ld bc,58
 904  88E3 AF           	xor a
 905  88E4 77           	ld (hl),a
 906  88E5 11 9C 85     	ld de,Filas+1
 907  88E8 ED B0        	ldir
 908  88EA C9           	ret
 909  88EB
 910  88EB              ; -----------------------------------------------------------
 911  88EB
 912  88EB              ; Teclado.
 913  88EB
 914  88EB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 915  88ED DB FE        	in a,($fe)
 916  88EF E6 01        	and $01
 917  88F1 28 02        	jr z,1f
 918  88F3 18 F6        	jr Pulsa_ENTER
 919  88F5 C9           1 ret
 920  88F6
 921  88F6              ; **************************************************************************************************
 922  88F6              ;
 923  88F6              ; Temporización.
 924  88F6
 925  88F6              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 926  88F6              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 927  88F6              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 928  88F6              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 929  88F6
 930  88F6              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 931  88F6              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 932  88F6              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 933  88F6
 934  88F6              ; A partir de $4f61 no hace falta DELAY.
 935  88F6
 936  88F6              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 937  88F6
 938  88F6 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 939  88F9 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 940  88FA 78           	LD A,B
 941  88FB A7           	AND A
 942  88FC 20 FB        	JR NZ,wait
 943  88FE C9           	RET
 944  88FF
 945  88FF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 946  88FF              ;
 947  88FF              ;	5/3/23
 948  88FF              ;
 949  88FF              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 950  88FF
 951  88FF              Movimiento_Amadeus
 952  88FF
 953  88FF              ; Disparo.
 954  88FF
 955  88FF 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 956  8902 A7           	and a
 957  8903 20 02        	jr nz,1F
 958  8905 18 15        	jr 2F
 959  8907
 960  8907 3E F7        1 ld a,$f7													; "5" para disparar.
 961  8909 DB FE        	in a,($fe)
 962  890B E6 10        	and $10
 963  890D
 964  890D F5           	push af
 965  890E CC 78 89     	call z,Genera_disparo
 966  8911 F1           	pop af
 967  8912 20 08        	jr nz,2F
 968  8914
 969  8914 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 970  8917 EE 01        	xor 1
 971  8919 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 972  891C
 973  891C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 974  891E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 975  8920 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 976  8922 CC C9 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 977  8925 3E F7        	ld a,$f7
 978  8927 DB FE        	in a,($fe)
 979  8929 E6 01        	and $01
 980  892B C8           	ret z
 981  892C
 982  892C 3E F7        	ld a,$f7
 983  892E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 984  8930 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 985  8932 CC AB 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 986  8935 C9           	ret
 987  8936
 988  8936              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 989  8936              ;
 990  8936              ;	Rutina provisional para que los malotes cagen balas.
 991  8936
 992  8936              Detecta_disparo_entidad
 993  8936
 994  8936 3A FA 85     	ld a,(Habilita_disparo_entidad)
 995  8939 A7           	and a
 996  893A C8           	ret z
 997  893B 3E 7F        	ld a,$7f
 998  893D DB FE        	in a,($fe)
 999  893F E6 01        	and 1
1000  8941 C0           	ret nz
1001  8942 CD 78 89     	call Genera_disparo
1002  8945 C9           	ret
1003  8946
1004  8946              ; Pinta indicadores de FILAS. ------------------------------------------------------
1005  8946
1006  8946 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1007  8949
1008  8949              ; ----------
1009  8949 06 20        	ld b,32
1010  894B E5           2 push hl
1011  894C C5           	push bc
1012  894D              ; ----------
1013  894D
1014  894D 06 BF        	ld b,$bf
1015  894F 36 80        1 ld (hl),%10000000
1016  8951 CD 71 90     	call NextScan
1017  8954 10 F9        	djnz 1B
1018  8956
1019  8956              ; ----------
1020  8956 C1           	pop bc
1021  8957 E1           	pop hl
1022  8958 2C           	inc l
1023  8959 10 F0        	djnz 2B
1024  895B              ; ----------
1025  895B
1026  895B 06 03        	ld b,3
1027  895D 21 00 47         ld hl,$4700
1028  8960 CD 66 89     3 call Bucle_1
1029  8963 10 FB            djnz 3B
1030  8965 C9               ret
1031  8966
1032  8966 C5           Bucle_1 push bc
1033  8967 E5                   push hl
1034  8968 D1                   pop de
1035  8969 13                   inc de
1036  896A 01 FF 00             ld bc,255
1037  896D 36 FF                ld (hl),255
1038  896F ED B0                ldir
1039  8971 23                   inc hl
1040  8972 3E 07                ld a,7
1041  8974 84                   add a,h
1042  8975 67                   ld h,a
1043  8976 C1                   pop bc
1044  8977 C9                   ret
1045  8978
1046  8978              ; ---------------------------------------------------------------
1047  8978
1048  8978              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8978              ; ******************************************************************************************************************************************************************************************
   2+ 8978              ;
   3+ 8978              ;   17/04/23
   4+ 8978              ;
   5+ 8978              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8978              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8978              ;
   8+ 8978              ;
   9+ 8978              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8978              ;
  11+ 8978              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8978              ;               _ hacen las entidades hacia abajo.
  13+ 8978              ;
  14+ 8978              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8978              ;
  16+ 8978              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8978              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8978              ;
  19+ 8978              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8978              ;           _ la bala.
  21+ 8978              ;
  22+ 8978              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8978              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8978              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8978              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8978              ;           _ en el momento de generarse la bala)).
  27+ 8978
  28+ 8978              Genera_disparo
  29+ 8978
  30+ 8978              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8978              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8978              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8978              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8978              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8978              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8978              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8978
  38+ 8978              ; Exclusiones:
  39+ 8978
  40+ 8978 3A D2 85         ld a,(Columnas)
  41+ 897B 47               ld b,a
  42+ 897C 3A 9C 85         ld a,(Columns)
  43+ 897F B8               cp b
  44+ 8980 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8981
  46+ 8981              ; ----- ----- -----
  47+ 8981
  48+ 8981 3A C9 85         ld a,(Ctrl_0)
  49+ 8984 CB 77            bit 6,a
  50+ 8986 20 06            jr nz,14F
  51+ 8988
  52+ 8988 3A A2 85         ld a,(Coordenada_y)
  53+ 898B FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 898D D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 898E
  56+ 898E 21 00 80     14 ld hl,Indice_disparo
  57+ 8991 3A A3 85         ld a,(CTRL_DESPLZ)
  58+ 8994 4F               ld c,a
  59+ 8995 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8997              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8997              ;                                            ""        ""       "f9", B="1"
  62+ 8997              ;                                            ""        ""       "fb", B="2"
  63+ 8997              ;                                            ""        ""       "fb", B="3"
  64+ 8997 A7               and a
  65+ 8998 28 10            jr z,1F
  66+ 899A E6 01            and 1
  67+ 899C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 899D
  69+ 899D 79               ld a,c
  70+ 899E 16 F9            ld d,$f9
  71+ 89A0 23           2 inc hl
  72+ 89A1 23               inc hl
  73+ 89A2 04               inc b
  74+ 89A3 BA               cp d
  75+ 89A4 28 04            jr z,1F
  76+ 89A6 14               inc d
  77+ 89A7 14               inc d
  78+ 89A8 18 F6            jr 2B
  79+ 89AA
  80+ 89AA CD 1B 88     1 call Extrae_address
  81+ 89AD E5               push hl
  82+ 89AE FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 89B0 DD 21 04 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 89B4
  85+ 89B4              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 89B4              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 89B4
  88+ 89B4 3A C9 85         ld a,(Ctrl_0)
  89+ 89B7 CB 77            bit 6,a
  90+ 89B9 20 04            jr nz,19F
  91+ 89BB
  92+ 89BB AF               xor a
  93+ 89BC 32 FA 85         ld (Habilita_disparo_entidad),a
  94+ 89BF
  95+ 89BF 3A AF 85     19 ld a,(Cuad_objeto)
  96+ 89C2 FE 02            cp 2
  97+ 89C4 38 66            jr c,3F
  98+ 89C6 28 64            jr z,3F
  99+ 89C8
 100+ 89C8              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 89C8
 102+ 89C8 E6 01            and 1
 103+ 89CA 28 30            jr z,4F
 104+ 89CC
 105+ 89CC              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 89CC              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 89CC              ;
 108+ 89CC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 89CC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 89CC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 89CC
 112+ 89CC 2A 9D 85     	ld hl,(Posicion_actual)
 113+ 89CF
 114+ 89CF              ;   Amadeus o entidad ???.
 115+ 89CF
 116+ 89CF 3A C9 85         ld a,(Ctrl_0)
 117+ 89D2 CB 77            bit 6,a
 118+ 89D4 28 0A            jr z,8F
 119+ 89D6
 120+ 89D6              ; 	Dispara Amadeus.
 121+ 89D6
 122+ 89D6 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 89D8 CD 80 90         call PreviousScan
 124+ 89DB CD 80 90         call PreviousScan
 125+ 89DE
 126+ 89DE              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 89DE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 89DE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 89DE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 89DE
 131+ 89DE 18 11            jr 10F
 132+ 89E0
 133+ 89E0              ; 	Dispara Entidad.
 134+ 89E0
 135+ 89E0 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 89E3              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 89E3
 138+ 89E3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 89E3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 89E3
 141+ 89E3 C5               push bc
 142+ 89E4 06 10            ld b,16
 143+ 89E6 CD 71 90     9 call NextScan
 144+ 89E9 10 FB            djnz 9B
 145+ 89EB C1               pop bc
 146+ 89EC CD 56 8A         call Ajusta_disparo_parte_izquierda
 147+ 89EF 18 06            jr 17F
 148+ 89F1
 149+ 89F1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 89F1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 89F1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 89F1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 89F1
 154+ 89F1 CD 56 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 89F4 CD CB 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 89F7              ;                                                      ; _al generar el disparo.
 157+ 89F7
 158+ 89F7              ; 	LLegados a este punto tendremos:
 159+ 89F7              ;
 160+ 89F7              ;       Puntero_objeto_disparo en IY.
 161+ 89F7              ;       Rutinas_de_impresion en IX.
 162+ 89F7              ;       Puntero_de_impresion en HL.
 163+ 89F7              ;       Impacto/Dirección en BC.
 164+ 89F7
 165+ 89F7 CD 5E 8A     17 call Almacena_disparo
 166+ 89FA 18 52            jr 6F                                             ; RET.
 167+ 89FC
 168+ 89FC              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 89FC              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 89FC              ;
 171+ 89FC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 89FC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 89FC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 89FC
 175+ 89FC 2A 9D 85     4 ld hl,(Posicion_actual)
 176+ 89FF
 177+ 89FF              ;   Amadeus o entidad ???.
 178+ 89FF
 179+ 89FF 3A C9 85         ld a,(Ctrl_0)
 180+ 8A02 CB 77            bit 6,a
 181+ 8A04 28 0A            jr z,11F
 182+ 8A06
 183+ 8A06              ; 	Dispara Amadeus.
 184+ 8A06
 185+ 8A06 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A08 CD 80 90         call PreviousScan
 187+ 8A0B CD 80 90         call PreviousScan
 188+ 8A0E
 189+ 8A0E              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A0E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A0E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A0E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A0E
 194+ 8A0E 18 11            jr 13F
 195+ 8A10
 196+ 8A10              ; 	Dispara Entidad.
 197+ 8A10
 198+ 8A10 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A13              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A13
 201+ 8A13              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A13              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A13
 204+ 8A13 C5               push bc
 205+ 8A14 06 10            ld b,16
 206+ 8A16 CD 71 90     12 call NextScan
 207+ 8A19 10 FB            djnz 12B
 208+ 8A1B C1               pop bc
 209+ 8A1C
 210+ 8A1C CD 4F 8A         call Ajusta_disparo_parte_derecha
 211+ 8A1F 18 06            jr 18F
 212+ 8A21
 213+ 8A21              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A21              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A21              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A21              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A21
 218+ 8A21 CD 4F 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A24 CD CB 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A27              ;                                                       ; _al generar el disparo.
 221+ 8A27
 222+ 8A27              ; LLegados a este punto tendremos:
 223+ 8A27              ;
 224+ 8A27              ;       Puntero_objeto_disparo en IY.
 225+ 8A27              ;       Rutinas_de_impresion en IX.
 226+ 8A27              ;       Puntero_de_impresion en HL.
 227+ 8A27              ;       Impacto/Dirección en BC.
 228+ 8A27
 229+ 8A27 CD 5E 8A     18 call Almacena_disparo
 230+ 8A2A 18 22            jr 6F                                               ; RET.
 231+ 8A2C
 232+ 8A2C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A2C
 234+ 8A2C 28 11        3 jr z,5F
 235+ 8A2E
 236+ 8A2E              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A2E              ;
 238+ 8A2E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A2E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A2E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A2E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A2E
 243+ 8A2E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A2E              ;	   ""        ""       "f9", B="1"
 245+ 8A2E              ;	   ""        ""       "fb", B="2"
 246+ 8A2E              ; 	   ""        ""       "fb", B="3"
 247+ 8A2E
 248+ 8A2E 2A 9D 85     	ld hl,(Posicion_actual)
 249+ 8A31 CD 71 90     	call NextScan
 250+ 8A34
 251+ 8A34              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A34              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A34              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A34              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A34
 256+ 8A34 CD 56 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A37
 258+ 8A37              ; 	No se produce impacto. B="$80"
 259+ 8A37              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A37
 261+ 8A37 01 80 80         ld bc,$8080
 262+ 8A3A
 263+ 8A3A              ; 	LLegados a este punto tendremos:
 264+ 8A3A              ;
 265+ 8A3A              ;       Puntero_objeto_disparo en IY.
 266+ 8A3A              ;       Rutinas_de_impresion en IX.
 267+ 8A3A              ;       Puntero_de_impresion en HL.
 268+ 8A3A              ;       Impacto/Dirección en BC.
 269+ 8A3A
 270+ 8A3A CD 5E 8A         call Almacena_disparo
 271+ 8A3D 18 0F            jr 6F                                           ; RET.
 272+ 8A3F
 273+ 8A3F              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A3F              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A3F              ;
 276+ 8A3F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A3F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A3F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A3F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A3F
 281+ 8A3F 2A 9D 85     5 ld hl,(Posicion_actual)
 282+ 8A42 CD 71 90     	call NextScan
 283+ 8A45
 284+ 8A45              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A45              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A45              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A45              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A45
 289+ 8A45 CD 4F 8A         call Ajusta_disparo_parte_derecha
 290+ 8A48
 291+ 8A48              ; 	No se produce impacto. B="$80"
 292+ 8A48              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A48
 294+ 8A48 01 80 80     15 ld bc,$8080
 295+ 8A4B
 296+ 8A4B              ; 	LLegados a este punto tendremos:
 297+ 8A4B              ;
 298+ 8A4B              ;       Puntero_objeto_disparo en IY.
 299+ 8A4B              ;       Rutinas_de_impresion en IX.
 300+ 8A4B              ;       Puntero_de_impresion en HL.
 301+ 8A4B              ;       Impacto/Dirección en BC.
 302+ 8A4B
 303+ 8A4B CD 5E 8A         call Almacena_disparo
 304+ 8A4E
 305+ 8A4E C9           6 ret
 306+ 8A4F
 307+ 8A4F              ; ----------------------------------------------------------------
 308+ 8A4F              ;
 309+ 8A4F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A4F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A4F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A4F
 313+ 8A4F 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A50 FE 02            cp 2
 315+ 8A52 38 01            jr c,1F
 316+ 8A54 23               inc hl
 317+ 8A55 C9           1 ret
 318+ 8A56
 319+ 8A56 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A57 FE 01        	cp 1
 321+ 8A59 20 01        	jr nz,1F
 322+ 8A5B 2B           	dec hl
 323+ 8A5C 2B           1 dec hl
 324+ 8A5D C9               ret
 325+ 8A5E
 326+ 8A5E              ; ----------------------------------------------------------------
 327+ 8A5E              ;
 328+ 8A5E              ;   25/02/23
 329+ 8A5E              ;
 330+ 8A5E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8A5E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8A5E              ;
 333+ 8A5E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8A5E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8A5E
 336+ 8A5E              Almacena_disparo
 337+ 8A5E
 338+ 8A5E E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8A5F F1               pop af
 340+ 8A60 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8A61
 342+ 8A61 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8A62 E6 01            and 1
 344+ 8A64 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8A66              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8A66              ; 	Dispara AMADEUS.
 347+ 8A66
 348+ 8A66              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8A66              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8A66              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8A66              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8A66
 353+ 8A66 C5               push bc
 354+ 8A67 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8A6A 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8A6D A7               and a
 357+ 8A6E ED 42            sbc hl,bc
 358+ 8A70 CC E4 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8A73 C1               pop bc
 360+ 8A74 28 54            jr z,4F
 361+ 8A76
 362+ 8A76 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8A79 23               inc hl
 364+ 8A7A 23               inc hl
 365+ 8A7B 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8A7E              ;                                                   ; _ Disparo_(+1).
 367+ 8A7E 18 18            jr 2F
 368+ 8A80
 369+ 8A80              ; Dispara una entidad.
 370+ 8A80
 371+ 8A80 C5           1 push bc
 372+ 8A81 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8A84 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8A87 A7               and a
 375+ 8A88 ED 42            sbc hl,bc
 376+ 8A8A CC DD 87         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8A8D C1               pop bc
 378+ 8A8E 28 3A            jr z,4F
 379+ 8A90
 380+ 8A90 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8A93 23               inc hl
 382+ 8A94 23               inc hl
 383+ 8A95 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8A98              ;                                                   ; _ Disparo_(+1).
 385+ 8A98 CD 1B 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8A9B              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8A9B              ;
 388+ 8A9B              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8A9B              ;                                                     Rutinas_de_impresion en IX.
 390+ 8A9B              ;                                                     Puntero_de_impresion en HL.
 391+ 8A9B              ;                                                     Impacto/Dirección en BC.
 392+ 8A9B
 393+ 8A9B 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8A9C 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8A9D 23               inc hl                                          ; _ al siguiente.
 396+ 8A9E A7               and a
 397+ 8A9F 20 C0            jr nz,3B
 398+ 8AA1
 399+ 8AA1 08               ex af,af
 400+ 8AA2 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AA6 F9               ld sp,hl
 402+ 8AA7
 403+ 8AA7 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8AA9 F5               push af                                         ; Puntero de impresión.
 405+ 8AAA FD E5            push iy                                         ; Puntero objeto.
 406+ 8AAC C5               push bc                                         ; Control.
 407+ 8AAD
 408+ 8AAD ED 7B DF 85      ld sp,(Stack)
 409+ 8AB1
 410+ 8AB1              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AB1
 412+ 8AB1 21 D6 85     	ld hl,Ctrl_1
 413+ 8AB4 CB C6        	set 0,(hl)
 414+ 8AB6
 415+ 8AB6 DD E5        	push ix
 416+ 8AB8 E1               pop hl
 417+ 8AB9 F5               push af
 418+ 8ABA DD E1            pop ix
 419+ 8ABC
 420+ 8ABC CD A0 7F     	call Guarda_foto_registros
 421+ 8ABF
 422+ 8ABF 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8AC2 CB 86        	res 0,(hl)
 424+ 8AC4
 425+ 8AC4              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8AC4              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8AC4
 428+ 8AC4 CD E4 87         call Inicia_Puntero_Disparo_Amadeus
 429+ 8AC7 CD DD 87         call Inicia_Puntero_Disparo_Entidades
 430+ 8ACA
 431+ 8ACA C9           4 ret
 432+ 8ACB
 433+ 8ACB              ; ----------------------------------------------------------------
 434+ 8ACB              ;
 435+ 8ACB              ;   4/3/23
 436+ 8ACB              ;
 437+ 8ACB              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8ACB              ;   _ al generarse el disparo.
 439+ 8ACB              ;
 440+ 8ACB              ;       "$80" ..... No se produce colisión.
 441+ 8ACB              ;       "$81" ..... Se produce colisión.
 442+ 8ACB
 443+ 8ACB              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8ACB              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8ACB
 446+ 8ACB
 447+ 8ACB FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8ACD E5               push hl                                        ; Puntero de impresión.
 449+ 8ACE 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8AD0 CD EC 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8AD3
 452+ 8AD3 7B               ld a,e
 453+ 8AD4 E6 01            and 1
 454+ 8AD6 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8AD8
 456+ 8AD8 E1               pop hl
 457+ 8AD9 E5               push hl
 458+ 8ADA CD 71 90         call NextScan
 459+ 8ADD
 460+ 8ADD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8ADE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8AE0 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8AE2              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8AE2 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8AE4 CD EC 8A         call Bucle_2
 466+ 8AE7
 467+ 8AE7 43           2 ld b,e
 468+ 8AE8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8AE9 FD E1            pop iy
 470+ 8AEB C9               ret
 471+ 8AEC
 472+ 8AEC               ; ---------- ----------
 473+ 8AEC
 474+ 8AEC 06 02        Bucle_2 ld b,2
 475+ 8AEE FD 7E 00     2 ld a,(iy)
 476+ 8AF1 A6               and (hl)
 477+ 8AF2 28 02            jr z,1F
 478+ 8AF4 1E 81            ld e,$81
 479+ 8AF6 23           1 inc hl
 480+ 8AF7 FD 23            inc iy
 481+ 8AF9 10 F3            djnz 2B
 482+ 8AFB C9               ret
 483+ 8AFC
 484+ 8AFC              ; -------------------------------------------------------------------------------------------------------------
 485+ 8AFC              ;
 486+ 8AFC              ;   11/04/23
 487+ 8AFC              ;
 488+ 8AFC              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8AFC              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8AFC              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8AFC              ;
 492+ 8AFC              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8AFC
 494+ 8AFC              Compara_coordenadas_X
 495+ 8AFC
 496+ 8AFC              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8AFC              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8AFC
 499+ 8AFC              ; Preparamos registros:
 500+ 8AFC
 501+ 8AFC 21 A1 85         ld hl,Filas+6
 502+ 8AFF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8B00 23               inc hl
 504+ 8B01 23               inc hl
 505+ 8B02 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8B03 43               ld b,e
 507+ 8B04 21 AF 85         ld hl,Filas+20
 508+ 8B07 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8B08 21 F4 85         ld hl,Coordenadas_X_Entidad
 510+ 8B0B CD 1A 8D         call Guarda_coordenadas_X
 511+ 8B0E
 512+ 8B0E              ; Preparamos registros:
 513+ 8B0E
 514+ 8B0E 21 7A 84         ld hl,Amadeus_db+6
 515+ 8B11 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B12 23               inc hl
 517+ 8B13 23               inc hl
 518+ 8B14 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B15 7B               ld a,e
 520+ 8B16 08               ex af,af'
 521+ 8B17 21 88 84         ld hl,Amadeus_db+20
 522+ 8B1A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B1B 21 F1 85         ld hl,Coordenadas_X_Amadeus
 524+ 8B1E CD 1A 8D         call Guarda_coordenadas_X
 525+ 8B21
 526+ 8B21              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B21              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B21
 529+ 8B21 04               inc b
 530+ 8B22 05               dec b
 531+ 8B23 28 04            jr z,1F
 532+ 8B25 06 03            ld b,3
 533+ 8B27 18 02            jr 2F
 534+ 8B29 06 02        1 ld b,2
 535+ 8B2B 08           2 ex af,af'
 536+ 8B2C 3C               inc a
 537+ 8B2D 3D               dec a
 538+ 8B2E 28 04            jr z,5F
 539+ 8B30 0E 03            ld c,3
 540+ 8B32 18 02            jr 6F
 541+ 8B34 0E 02        5 ld c,2
 542+ 8B36 79           6 ld a,c
 543+ 8B37 08               ex af,af'
 544+ 8B38 11 F4 85         ld de,Coordenadas_X_Entidad
 545+ 8B3B 1A           4 ld a,(de)
 546+ 8B3C 21 F1 85         ld hl,Coordenadas_X_Amadeus
 547+ 8B3F BE           3 cp (hl)
 548+ 8B40 28 0E            jr z,7F
 549+ 8B42 23               inc hl
 550+ 8B43 0D               dec c
 551+ 8B44 20 F9            jr nz,3B
 552+ 8B46 13               inc de
 553+ 8B47 08               ex af,af'
 554+ 8B48 4F               ld c,a
 555+ 8B49 08               ex af,af'
 556+ 8B4A 10 EF            djnz 4B
 557+ 8B4C
 558+ 8B4C              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B4C
 560+ 8B4C CD 59 8D     8 call Limpia_Coordenadas_X
 561+ 8B4F C9               ret
 562+ 8B50
 563+ 8B50              7
 564+ 8B50 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 565+ 8B52 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 566+ 8B55 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 567+ 8B58 CB D6            set 2,(hl)
 568+ 8B5A 18 F0            jr 8B
 569+ 8B5C
 570+ 8B5C              ; -----------------------------------------------------------------------
 571+ 8B5C              ;
 572+ 8B5C              ;   17/04/23
 573+ 8B5C              ;
 574+ 8B5C
 575+ 8B5C              Detecta_colision_nave_entidad
 576+ 8B5C
 577+ 8B5C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8B5C
 579+ 8B5C 2A 9D 85         ld hl,(Posicion_actual)
 580+ 8B5F CD D6 8F         call Calcula_puntero_de_impresion
 581+ 8B62
 582+ 8B62              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 583+ 8B62              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 584+ 8B62
 585+ 8B62 DD E5            push ix
 586+ 8B64 E1               pop hl
 587+ 8B65 E5               push hl
 588+ 8B66
 589+ 8B66              ; ----- ----- -----
 590+ 8B66 1E 00            ld e,0                                         ; Indica impacto.
 591+ 8B68 06 0A            ld b,10
 592+ 8B6A CD 9A 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 593+ 8B6D 7B               ld a,e
 594+ 8B6E FE 05            cp 5
 595+ 8B70 38 0E            jr c,3F
 596+ 8B72
 597+ 8B72              ; LLegados a este punto:
 598+ 8B72              ;
 599+ 8B72              ;   HAY COLISIÓN !!!!!.
 600+ 8B72              ;
 601+ 8B72              ;   .db (Impacto) de Amadeus a "1".
 602+ 8B72              ;   SET el bit3 de (Impacto2).
 603+ 8B72              ;
 604+ 8B72              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 605+ 8B72
 606+ 8B72 21 8D 84         ld hl,Amadeus_db+25
 607+ 8B75 36 01            ld (hl),1
 608+ 8B77 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 609+ 8B7A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 610+ 8B7C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 611+ 8B7E 18 18            jr 1F
 612+ 8B80
 613+ 8B80              ; -----
 614+ 8B80
 615+ 8B80 E1           3 pop hl
 616+ 8B81 CD 71 90         call NextScan
 617+ 8B84 E5               push hl
 618+ 8B85 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 619+ 8B86 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 620+ 8B88 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 621+ 8B8A 30 0C            jr nc,1F
 622+ 8B8C              ;                                                  ; _ 2º scanline si esto es así.
 623+ 8B8C 10 DC            djnz 2B
 624+ 8B8E
 625+ 8B8E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 626+ 8B8E
 627+ 8B8E              ; LLegados a este punto:
 628+ 8B8E              ;
 629+ 8B8E              ;   NO HAY COLISIÓN !!!!!.
 630+ 8B8E              ;
 631+ 8B8E              ;   .db (Impacto) de Amadeus a "0".
 632+ 8B8E              ;   RES el bit2 de (Impacto2).
 633+ 8B8E              ;
 634+ 8B8E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 635+ 8B8E              ;   Lo colocamos a "0".
 636+ 8B8E
 637+ 8B8E 21 EC 85         ld hl,Impacto2
 638+ 8B91 CB 96            res 2,(hl)
 639+ 8B93 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 640+ 8B96 36 00            ld (hl),0
 641+ 8B98
 642+ 8B98 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8B99 C9               ret
 644+ 8B9A
 645+ 8B9A               ; ---------- ----------
 646+ 8B9A
 647+ 8B9A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 648+ 8B9B 3A 9C 85         ld a,(Columns)
 649+ 8B9E 47               ld b,a
 650+ 8B9F FD 7E 00     2 ld a,(iy)
 651+ 8BA2 BE               cp (hl)
 652+ 8BA3 28 01            jr z,1F
 653+ 8BA5
 654+ 8BA5 1C               inc e
 655+ 8BA6
 656+ 8BA6 23           1 inc hl
 657+ 8BA7 FD 23            inc iy
 658+ 8BA9 10 F4            djnz 2B
 659+ 8BAB C1               pop bc
 660+ 8BAC C9               ret
 661+ 8BAD
 662+ 8BAD              ; -------------------------------------------------------------------------------------------------------------
 663+ 8BAD              ;
 664+ 8BAD              ;   13/03/23
 665+ 8BAD              ;
 666+ 8BAD              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 667+ 8BAD              ;
 668+ 8BAD              ;   DESTRUYE: HL,BC,DE y A.
 669+ 8BAD
 670+ 8BAD 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 671+ 8BB0 7E               ld a,(hl)
 672+ 8BB1 A7               and a
 673+ 8BB2 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 674+ 8BB3
 675+ 8BB3 44               ld b,h
 676+ 8BB4 4D               ld c,l
 677+ 8BB5 2A E5 85         ld hl,(Stack_snapshot_disparos)
 678+ 8BB8 E5               push hl
 679+ 8BB9 A7               and a
 680+ 8BBA ED 42            sbc hl,bc
 681+ 8BBC E5               push hl
 682+ 8BBD C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 683+ 8BBE
 684+ 8BBE E1               pop hl
 685+ 8BBF 54               ld d,h
 686+ 8BC0 5D               ld e,l
 687+ 8BC1 1B               dec de
 688+ 8BC2 ED B8            lddr                                                ; Limpiamos.
 689+ 8BC4
 690+ 8BC4 21 60 70         ld hl,Album_de_fotos_disparos
 691+ 8BC7 22 E5 85         ld (Stack_snapshot_disparos),hl
 692+ 8BCA
 693+ 8BCA C9               ret
 694+ 8BCB
 695+ 8BCB              ; -------------------------------------------------------------------------------------------------------------
 696+ 8BCB              ;
 697+ 8BCB              ;   28/03/23
 698+ 8BCB              ;
 699+ 8BCB
 700+ 8BCB 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 701+ 8BCE 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 702+ 8BD1
 703+ 8BD1 CD 1B 88     2 call Extrae_address
 704+ 8BD4 7E               ld a,(hl)
 705+ 8BD5 A7               and a
 706+ 8BD6 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 707+ 8BD8
 708+ 8BD8              ; ----- ----- ----- ----- ----- -----
 709+ 8BD8
 710+ 8BD8 C5               push bc
 711+ 8BD9 CD 95 8C         call foto_disparo_a_borrar
 712+ 8BDC
 713+ 8BDC              ; Existe colisión con este disparo???
 714+ 8BDC
 715+ 8BDC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 716+ 8BDD 7E               ld a,(hl)
 717+ 8BDE 2B               dec hl
 718+ 8BDF E6 01            and 1
 719+ 8BE1 28 1D            jr z,9F
 720+ 8BE3
 721+ 8BE3              ;   En este punto:
 722+ 8BE3              ;
 723+ 8BE3              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 724+ 8BE3              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 725+ 8BE3              ;   _con la entidad).
 726+ 8BE3              ;
 727+ 8BE3              ;   Disparo_2A defw 0                                ; Control.
 728+ 8BE3              ;    defw 0                                          ; Puntero objeto.
 729+ 8BE3              ;    defw 0                                          ; Puntero de impresión.
 730+ 8BE3              ;    defw 0                                          ; Rutina de impresión.
 731+ 8BE3
 732+ 8BE3 E5               push hl
 733+ 8BE4
 734+ 8BE4 06 04            ld b,4
 735+ 8BE6 23           19 inc hl
 736+ 8BE7 10 FD            djnz 19B
 737+ 8BE9
 738+ 8BE9 CD 1B 88         call Extrae_address
 739+ 8BEC CD 88 96         call Genera_coordenadas_disparo
 740+ 8BEF
 741+ 8BEF              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 742+ 8BEF
 743+ 8BEF 21 EF 85         ld hl,Coordenadas_disparo_certero
 744+ 8BF2 72               ld (hl),d
 745+ 8BF3 23               inc hl
 746+ 8BF4 73               ld (hl),e
 747+ 8BF5
 748+ 8BF5              ; Elimino el disparo de la base de datos.
 749+ 8BF5
 750+ 8BF5 E1               pop hl
 751+ 8BF6 CD 0F 8D         call Elimina_disparo_de_base_de_datos
 752+ 8BF9 21 EC 85         ld hl,Impacto2
 753+ 8BFC CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 754+ 8BFE
 755+ 8BFE 18 06            jr 11F
 756+ 8C00
 757+ 8C00 CD BE 8C     9 call Mueve_disparo
 758+ 8C03 CD 95 8C         call foto_disparo_a_borrar
 759+ 8C06
 760+ 8C06 C1           11 pop bc
 761+ 8C07 18 04            jr 7F
 762+ 8C09
 763+ 8C09              ; ----- ----- ----- ----- ----- -----
 764+ 8C09
 765+ 8C09 ED 42        1 sbc hl,bc
 766+ 8C0B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 767+ 8C0D
 768+ 8C0D 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C10 23               inc hl
 770+ 8C11 23               inc hl
 771+ 8C12 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C15 18 BA            jr 2B
 773+ 8C17
 774+ 8C17 CD E4 87     3 call Inicia_Puntero_Disparo_Amadeus
 775+ 8C1A 01 66 84         ld bc,Disparo_11
 776+ 8C1D 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C20
 778+ 8C20 CD 1B 88     5 call Extrae_address
 779+ 8C23 7E               ld a,(hl)
 780+ 8C24 A7               and a
 781+ 8C25 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C27
 783+ 8C27              ; ----- ----- ----- ----- ----- -----
 784+ 8C27
 785+ 8C27 C5               push bc
 786+ 8C28 CD 95 8C         call foto_disparo_a_borrar
 787+ 8C2B
 788+ 8C2B              ; Existe colisión con este disparo???
 789+ 8C2B
 790+ 8C2B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C2C 7E               ld a,(hl)
 792+ 8C2D 2B               dec hl
 793+ 8C2E E6 01            and 1
 794+ 8C30 28 48            jr z,10F
 795+ 8C32
 796+ 8C32              ; La colisión se produce con Amadeus???
 797+ 8C32              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C32
 799+ 8C32 E5               push hl
 800+ 8C33
 801+ 8C33 06 04            ld b,4
 802+ 8C35 23           16 inc hl
 803+ 8C36 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C38 CD 1B 88         call Extrae_address
 805+ 8C3B CD 88 96         call Genera_coordenadas_disparo
 806+ 8C3E
 807+ 8C3E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C3F FE 16            cp $16
 809+ 8C41 38 22            jr c,15F
 810+ 8C43
 811+ 8C43              ; (Colisiones en filas 16 y 17).
 812+ 8C43
 813+ 8C43 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C44
 815+ 8C44              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C44
 817+ 8C44 21 7A 84         ld hl,Amadeus_db+6
 818+ 8C47 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C48 23               inc hl
 820+ 8C49 23               inc hl
 821+ 8C4A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8C4B 21 88 84         ld hl,Amadeus_db+20
 823+ 8C4E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8C4F 21 F1 85         ld hl,Coordenadas_X_Amadeus
 825+ 8C52 CD 1A 8D         call Guarda_coordenadas_X
 826+ 8C55
 827+ 8C55 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8C56
 829+ 8C56              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8C56
 831+ 8C56 06 03            ld b,3
 832+ 8C58 21 F1 85         ld hl,Coordenadas_X_Amadeus
 833+ 8C5B 7E           18 ld a,(hl)
 834+ 8C5C BA               cp d
 835+ 8C5D 20 03            jr nz,17F
 836+ 8C5F
 837+ 8C5F              ; Colisión Amadeus !!!!!!!!!!
 838+ 8C5F
 839+ 8C5F E1               pop hl
 840+ 8C60 18 09            jr 14F
 841+ 8C62
 842+ 8C62 23           17 inc hl
 843+ 8C63 10 F6            djnz 18B
 844+ 8C65
 845+ 8C65              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8C65              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8C65
 848+ 8C65 E1           15 pop hl
 849+ 8C66 23               inc hl
 850+ 8C67 35               dec (hl)
 851+ 8C68 2B               dec hl
 852+ 8C69 18 0F            jr 10F
 853+ 8C6B
 854+ 8C6B              ; -----------------------debug
 855+ 8C6B
 856+ 8C6B              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8C6B              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8C6B
 859+ 8C6B E5           14 push hl
 860+ 8C6C CD 0F 8D         call Elimina_disparo_de_base_de_datos
 861+ 8C6F 21 EC 85         ld hl,Impacto2
 862+ 8C72 CB CE            set 1,(hl)
 863+ 8C74 CD 59 8D         call Limpia_Coordenadas_X
 864+ 8C77
 865+ 8C77 E1               pop hl
 866+ 8C78 18 06            jr 12F
 867+ 8C7A
 868+ 8C7A CD BE 8C     10 call Mueve_disparo
 869+ 8C7D CD 95 8C         call foto_disparo_a_borrar
 870+ 8C80 C1           12 pop bc
 871+ 8C81
 872+ 8C81 18 04            jr 8F
 873+ 8C83
 874+ 8C83              ; ----- ----- ----- ----- ----- -----
 875+ 8C83
 876+ 8C83 ED 42        4 sbc hl,bc
 877+ 8C85 28 0A            jr z,6F
 878+ 8C87
 879+ 8C87 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8C8A 23               inc hl
 881+ 8C8B 23               inc hl
 882+ 8C8C 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8C8F 18 8F            jr 5B
 884+ 8C91
 885+ 8C91 CD DD 87     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8C94 C9               ret
 887+ 8C95
 888+ 8C95              ; ------------------------------------------------------------------
 889+ 8C95
 890+ 8C95              foto_disparo_a_borrar
 891+ 8C95
 892+ 8C95 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8C96 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8C97 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8C98
 896+ 8C98 E5               push hl
 897+ 8C99 23               inc hl
 898+ 8C9A 23               inc hl
 899+ 8C9B ED 73 DF 85      ld (Stack),sp
 900+ 8C9F F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8CA0 FD E1            pop iy
 902+ 8CA2 DD E1            pop ix
 903+ 8CA4 E1               pop hl
 904+ 8CA5 ED 7B DF 85      ld sp,(Stack)
 905+ 8CA9 3A D6 85         ld a,(Ctrl_1)
 906+ 8CAC CB C7            set 0,a
 907+ 8CAE 32 D6 85         ld (Ctrl_1),a
 908+ 8CB1 CD A0 7F         call Guarda_foto_registros
 909+ 8CB4 3A D6 85         ld a,(Ctrl_1)
 910+ 8CB7 CB 87            res 0,a
 911+ 8CB9 32 D6 85         ld (Ctrl_1),a
 912+ 8CBC E1               pop hl
 913+ 8CBD C9               ret
 914+ 8CBE
 915+ 8CBE E5           Mueve_disparo push hl
 916+ 8CBF 7E               ld a,(hl)
 917+ 8CC0 06 04            ld b,4
 918+ 8CC2 23           1 inc hl
 919+ 8CC3 10 FD            djnz 1B
 920+ 8CC5
 921+ 8CC5              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8CC5
 923+ 8CC5 CD 1B 88         call Extrae_address
 924+ 8CC8
 925+ 8CC8 E6 01            and 1
 926+ 8CCA 28 2A            jr z,2F
 927+ 8CCC
 928+ 8CCC              ; Disparo hacia arriba, (Amadeus).
 929+ 8CCC
 930+ 8CCC              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8CCC              ; _ de la dificultad.
 932+ 8CCC
 933+ 8CCC CD 80 90         call PreviousScan
 934+ 8CCF CD 80 90         call PreviousScan
 935+ 8CD2 CD 80 90         call PreviousScan
 936+ 8CD5
 937+ 8CD5              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8CD5
 939+ 8CD5 7C               ld a,h
 940+ 8CD6 FE 40            cp $40
 941+ 8CD8 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8CDA
 943+ 8CDA              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8CDA
 945+ 8CDA EB               ex de,hl
 946+ 8CDB 06 04            ld b,4
 947+ 8CDD 2B           6 dec hl
 948+ 8CDE 10 FD            djnz 6B
 949+ 8CE0
 950+ 8CE0 CD 0F 8D         call Elimina_disparo_de_base_de_datos
 951+ 8CE3
 952+ 8CE3 18 0C            jr 4F
 953+ 8CE5
 954+ 8CE5              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8CE5
 956+ 8CE5 D5           3 push de
 957+ 8CE6 C5               push bc
 958+ 8CE7 CD CB 8A         call Comprueba_Colision
 959+ 8CEA 78               ld a,b
 960+ 8CEB C1               pop bc
 961+ 8CEC D1               pop de
 962+ 8CED
 963+ 8CED EB               ex de,hl
 964+ 8CEE
 965+ 8CEE 73               ld (hl),e
 966+ 8CEF 23               inc hl
 967+ 8CF0 72               ld (hl),d
 968+ 8CF1
 969+ 8CF1 E1           4 pop hl
 970+ 8CF2 23               inc hl
 971+ 8CF3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 972+ 8CF4 2B               dec hl
 973+ 8CF5 C9               ret
 974+ 8CF6
 975+ 8CF6              ; Disparo hacia abajo, (Entidad).
 976+ 8CF6
 977+ 8CF6              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 8CF6              ; _ de la dificultad.
 979+ 8CF6
 980+ 8CF6 CD 71 90     2 call NextScan
 981+ 8CF9 CD 71 90         call NextScan
 982+ 8CFC CD 71 90         call NextScan
 983+ 8CFF
 984+ 8CFF              ; Detecta si el disparo de la entidad sale de la pantalla.
 985+ 8CFF
 986+ 8CFF 7C               ld a,h
 987+ 8D00 FE 58            cp $58
 988+ 8D02 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 989+ 8D04
 990+ 8D04 EB               ex de,hl
 991+ 8D05 06 04            ld b,4
 992+ 8D07 2B           5 dec hl
 993+ 8D08 10 FD            djnz 5B
 994+ 8D0A
 995+ 8D0A CD 0F 8D         call Elimina_disparo_de_base_de_datos
 996+ 8D0D
 997+ 8D0D 18 E2            jr 4B
 998+ 8D0F
 999+ 8D0F              ; HL apunta al primer byte de la base de datos del disparo.
1000+ 8D0F
1001+ 8D0F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1002+ 8D12 AF               xor a
1003+ 8D13 77               ld (hl),a
1004+ 8D14 54               ld d,h
1005+ 8D15 5D               ld e,l
1006+ 8D16 13               inc de
1007+ 8D17 ED B0            ldir
1008+ 8D19 C9               ret
1009+ 8D1A
1010+ 8D1A              ; -----------------------------------------------------------------
1011+ 8D1A              ;
1012+ 8D1A              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1013+ 8D1A              ;
1014+ 8D1A              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1015+ 8D1A              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1016+ 8D1A              ;
1017+ 8D1A              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1018+ 8D1A              ;
1019+ 8D1A              ;   INPUTS:
1020+ 8D1A              ;
1021+ 8D1A              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1022+ 8D1A              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1023+ 8D1A              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1024+ 8D1A
1025+ 8D1A              ;   MODIFICA: A, HL, DE y C
1026+ 8D1A
1027+ 8D1A 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1028+ 8D1B 79               ld a,c
1029+ 8D1C E6 01            and 1
1030+ 8D1E 20 03            jr nz,1F
1031+ 8D20 14               inc d
1032+ 8D21 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1033+ 8D23
1034+ 8D23              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D23              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1036+ 8D23
1037+ 8D23 15           1 dec d
1038+ 8D24 23           2 inc hl
1039+ 8D25 72               ld (hl),d
1040+ 8D26
1041+ 8D26 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1042+ 8D27 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1043+ 8D28 C8               ret z
1044+ 8D29
1045+ 8D29 AF               xor a
1046+ 8D2A 5F               ld e,a
1047+ 8D2B 18 ED            jr Guarda_coordenadas_X
1048+ 8D2D
1049+ 8D2D              ; -----------------------------------------------------------------
1050+ 8D2D              ;
1051+ 8D2D              ;   12/04/23
1052+ 8D2D              ;
1053+ 8D2D
1054+ 8D2D 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1055+ 8D30 A7               and a
1056+ 8D31 C8               ret z
1057+ 8D32
1058+ 8D32 FE 04            cp 4
1059+ 8D34 20 09            jr nz,1F
1060+ 8D36
1061+ 8D36
1062+ 8D36              ; La colisión se produce por contacto entre Amadeus y una entidad.
1063+ 8D36
1064+ 8D36 CD 5C 8B         call Detecta_colision_nave_entidad
1065+ 8D39
1066+ 8D39 21 EC 85         ld hl,Impacto2
1067+ 8D3C CB 5E            bit 3,(hl)
1068+ 8D3E C0               ret nz                                               ; Existe colisión, RET.
1069+ 8D3F
1070+ 8D3F              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1071+ 8D3F              ; Primero analizamos si algún disparo impacta en Amadeus.
1072+ 8D3F
1073+ 8D3F 21 EC 85     1 ld hl,Impacto2
1074+ 8D42 CB 4E            bit 1,(hl)
1075+ 8D44 28 07            jr z,2F
1076+ 8D46
1077+ 8D46 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1078+ 8D49 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1079+ 8D4B 18 0B            jr 3F
1080+ 8D4D
1081+ 8D4D 21 EC 85     2 ld hl,Impacto2
1082+ 8D50 CB 46            bit 0,(hl)
1083+ 8D52 C8               ret z
1084+ 8D53
1085+ 8D53              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1086+ 8D53
1087+ 8D53 21 D6 85         ld hl,Ctrl_1
1088+ 8D56 CB D6            set 2,(hl)
1089+ 8D58
1090+ 8D58 C9           3 ret
1091+ 8D59
1092+ 8D59              ; -----------------------------------------------------------------
1093+ 8D59              ;
1094+ 8D59              ;   16/04/23
1095+ 8D59              ;
1096+ 8D59
1097+ 8D59 AF           Limpia_Coordenadas_X xor a
1098+ 8D5A 06 06            ld b,6
1099+ 8D5C 21 F1 85         ld hl,Coordenadas_X_Amadeus
1100+ 8D5F 77           1 ld (hl),a
1101+ 8D60 23               inc hl
1102+ 8D61 10 FC            djnz 1B
1103+ 8D63 C9               ret
1104+ 8D64
1105+ 8D64              ; -----------------------------------------------------------------
1106+ 8D64              ;
1107+ 8D64              ;   25/04/23
1108+ 8D64              ;
1109+ 8D64
1110+ 8D64              Determina_resultado_comparativa
1111+ 8D64
1112+ 8D64 7C               ld a,h
1113+ 8D65 06 00            ld b,0
1114+ 8D67
1115+ 8D67 CD 7F 8D         call Compara_cositas
1116+ 8D6A 04               inc b
1117+ 8D6B 05               dec b
1118+ 8D6C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1119+ 8D6D
1120+ 8D6D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1121+ 8D6E 06 00            ld b,0
1122+ 8D70 FE 02            cp $02
1123+ 8D72 28 09            jr z,1F
1124+ 8D74 FE FE            cp $fe
1125+ 8D76 28 05            jr z,1F
1126+ 8D78
1127+ 8D78 CD 7F 8D         call Compara_cositas
1128+ 8D7B 18 01            jr 2F
1129+ 8D7D
1130+ 8D7D 04           1 inc b
1131+ 8D7E C9           2 ret
1132+ 8D7F
1133+ 8D7F A7           Compara_cositas and a
1134+ 8D80 28 07            jr z,1F
1135+ 8D82 FE FF            cp $ff
1136+ 8D84 28 03            jr z,1F
1137+ 8D86 FE 01            cp $01
1138+ 8D88 C0               ret nz
1139+ 8D89 04           1 inc b
1140+ 8D8A C9               ret
1141+ 8D8B
# file closed: Disparo.asm
1049  8D8B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D8B              ; ******************************************************************************************************************************************************************************************
   2+ 8D8B              ;
   3+ 8D8B              ; 01/23
   4+ 8D8B              ;
   5+ 8D8B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D8B
   7+ 8D8B CD 65 90     Draw call Prepara_draw
   8+ 8D8E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D8F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D90 28 05        	jr z,2F
  11+ 8D92
  12+ 8D92 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D95 18 0C        	jr 1F
  14+ 8D97 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D9A 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D9D CD 2C 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8DA0              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8DA0 CD AB 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8DA3 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8DA6 CB 6F        	bit 5,a
  21+ 8DA8 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8DAA
  23+ 8DAA CD C2 8D     	call Comprueba_limite_horizontal
  24+ 8DAD CD 52 8E     	call Comprueba_limite_vertical
  25+ 8DB0
  26+ 8DB0              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8DB0
  28+ 8DB0 CD 9F 8F     3 call calcula_CColumnass
  29+ 8DB3 CD D6 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8DB6 CD 2B 90     	call Define_rutina_de_impresion
  31+ 8DB9
  32+ 8DB9 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8DBC CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8DBE 32 C9 85     	ld (Ctrl_0),a
  35+ 8DC1
  36+ 8DC1 C9           	ret
  37+ 8DC2
  38+ 8DC2              ; *******************************************************************************************************************************************************************************************
  39+ 8DC2              ;	21/01/23
  40+ 8DC2              ;
  41+ 8DC2              ; 	Comprueba_limite_horizontal.
  42+ 8DC2              ;
  43+ 8DC2              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8DC2              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8DC2              ;
  46+ 8DC2              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8DC2              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8DC2              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8DC2              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8DC2
  51+ 8DC2
  52+ 8DC2
  53+ 8DC2 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8DC5 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8DC7 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8DC9 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8DCB 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8DCE 18 09            jr 6F
  59+ 8DD0 CB 5F        1 bit 3,a
  60+ 8DD2 28 0A            jr z,2F
  61+ 8DD4 E6 F7            and $f7
  62+ 8DD6 32 C9 85         ld (Ctrl_0),a
  63+ 8DD9 CD 2C 8F     6 call Inicializacion
  64+ 8DDC 18 5B            jr 5F
  65+ 8DDE E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8DDF
  67+ 8DDF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8DDF              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8DDF
  70+ 8DDF EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8DE0 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8DE3 CD 31 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8DE6 67           	ld h,a
  74+ 8DE7 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8DE8 CD 31 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DEB 67           	ld h,a
  77+ 8DEC A7           	and a
  78+ 8DED ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DEF 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DF0 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DF3 FE 02        	cp 2
  82+ 8DF5 38 1E        	jr c,3F
  83+ 8DF7 28 1C        	jr z,3F
  84+ 8DF9 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DFA 28 23            jr z,7F
  86+ 8DFC 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DFE 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E00 E1           	pop hl
  89+ 8E01
  90+ 8E01              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E01              ; _para indicar con E="2" en caso necesario.
  92+ 8E01
  93+ 8E01 E5               push hl
  94+ 8E02 C5               push bc
  95+ 8E03 CD 31 93     	call calcula_tercio
  96+ 8E06 FE 01        	cp 1
  97+ 8E08 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E0A CD 3A 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E0D 28 26            jr z,9F
 100+ 8E0F 38 24            jr c,9F
 101+ 8E11 1E 00        11 ld e,0
 102+ 8E13 18 22            jr 8F
 103+ 8E15 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E16 28 07        	jr z, 7F
 105+ 8E18 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E1A 1E 00         	ld e,0
 107+ 8E1C E1           	pop hl
 108+ 8E1D 18 04        	jr 4F
 109+ 8E1F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E21 18 15            jr 10F
 111+ 8E23
 112+ 8E23              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E23              ; _para indicar con E="2" en caso necesario.
 114+ 8E23
 115+ 8E23 E5           4 push hl
 116+ 8E24 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E25 CD 31 93     	call calcula_tercio
 118+ 8E28 FE 01        	cp 1
 119+ 8E2A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E2C CD 3A 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E2F 28 04            jr z,9F
 122+ 8E31 30 02            jr nc,9F
 123+ 8E33 18 02        	jr 8F
 124+ 8E35 1E 02        9 ld e,2
 125+ 8E37 C1           8 pop bc
 126+ 8E38 E1           10 pop hl
 127+ 8E39 C9           5 ret
 128+ 8E3A
 129+ 8E3A              ; --------------------
 130+ 8E3A              ;
 131+ 8E3A              ; 25/08/22
 132+ 8E3A
 133+ 8E3A CD 31 93     Comprueba_centro call calcula_tercio
 134+ 8E3D 67               ld h,a
 135+ 8E3E 08           	ex af,af
 136+ 8E3F FE 02        	cp 2
 137+ 8E41 38 07        	jr c,1F
 138+ 8E43 28 05        	jr z,1F
 139+ 8E45 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E48 18 03        	jr 2F
 141+ 8E4A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E4D 08           2 ex af,af
 143+ 8E4E A7               and a
 144+ 8E4F ED 42            sbc hl,bc
 145+ 8E51 C9               ret
 146+ 8E52
 147+ 8E52              ; *********************************************************************************************************************************************************************************************
 148+ 8E52              ;
 149+ 8E52              ;   16/8/22
 150+ 8E52              ;
 151+ 8E52              ;	Comprueba_limite_vertical
 152+ 8E52              ;
 153+ 8E52              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E52              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E52              ;
 156+ 8E52
 157+ 8E52 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E55 7D           	ld a,l
 159+ 8E56 E6 1F        	and $1F
 160+ 8E58 57           	ld d,a
 161+ 8E59 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E5C BA           	cp d 											; Límite - Posición.
 163+ 8E5D 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E5E 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E61 CB 47        	bit 0,a
 166+ 8E63 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E65
 168+ 8E65              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E65
 170+ 8E65 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E66 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E68
 173+ 8E68              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E68              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E68
 176+ 8E68 3A A1 85         ld a,(Coordenada_X)
 177+ 8E6B 16 0F            ld d,Centro_izquierda
 178+ 8E6D A7               and a
 179+ 8E6E 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E6F 28 1E            jr z,3F
 181+ 8E71 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E73              ;                                                    ; _salimos sin modificar nada.
 183+ 8E73 18 0E            jr 2F
 184+ 8E75 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E76 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E78
 187+ 8E78              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E78              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E78
 190+ 8E78 3A A1 85         ld a,(Coordenada_X)
 191+ 8E7B 16 10            ld d,Centro_derecha
 192+ 8E7D A7               and a
 193+ 8E7E 92               sub d
 194+ 8E7F 28 0E            jr z,3F
 195+ 8E81 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E83              ;                                                    ; _salimos sin modificar nada.
 197+ 8E83 CB 43        2 bit 0,e
 198+ 8E85 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E87 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E88 CD 1C 8F         call Modificaccionne
 201+ 8E8B C1           	pop bc
 202+ 8E8C CD 2C 8F         call Inicializacion
 203+ 8E8F C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E90
 205+ 8E90              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E90
 207+ 8E90 C5           4 push bc
 208+ 8E91 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E94 0A           	ld a,(bc)
 210+ 8E95 3D           	dec a
 211+ 8E96 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E97 7D           	ld a,l
 213+ 8E98 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E99 CB 47        	bit 0,a
 215+ 8E9B 28 03        	jr z,5F
 216+ 8E9D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E9E 18 2E        	jr 7F
 218+ 8EA0
 219+ 8EA0              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8EA0
 221+ 8EA0 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8EA1 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8EA2 3A C9 85     	ld a,(Ctrl_0)
 224+ 8EA5 CB 4F        	bit 1,a
 225+ 8EA7 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8EA9 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8EAA
 228+ 8EAA              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8EAA
 230+ 8EAA 1C               inc e
 231+ 8EAB 1D               dec e
 232+ 8EAC 20 07            jr nz,12F
 233+ 8EAE 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8EAF 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8EB0 22 9D 85     	ld (Posicion_actual),hl
 236+ 8EB3 18 44        13 jr 9F
 237+ 8EB5 CB 43        12 bit 0,e
 238+ 8EB7 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8EB9              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8EB9 C1           	pop bc
 241+ 8EBA 18 D3        	jr 3B
 242+ 8EBC 80           14 add b
 243+ 8EBD 6F               ld l,a
 244+ 8EBE 22 9D 85     	ld (Posicion_actual),hl
 245+ 8EC1 CD 1C 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8EC4 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8EC6 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8EC8 32 C9 85         ld (Ctrl_0),a
 249+ 8ECB F1           	pop af
 250+ 8ECC 18 2B        	jr 9F
 251+ 8ECE
 252+ 8ECE              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8ECE
 254+ 8ECE F5           7 push af
 255+ 8ECF 3A C9 85     	ld a,(Ctrl_0)
 256+ 8ED2 CB 47        	bit 0,a
 257+ 8ED4 20 1D        	jr nz,8F
 258+ 8ED6 F1           	pop af
 259+ 8ED7
 260+ 8ED7              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8ED7
 262+ 8ED7 1C           	inc e
 263+ 8ED8 1D               dec e
 264+ 8ED9 20 07            jr nz,10F
 265+ 8EDB 90           	sub b
 266+ 8EDC 6F               ld l,a
 267+ 8EDD 22 9D 85     	ld (Posicion_actual),hl
 268+ 8EE0 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8EE2              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8EE2 CB 43        10 bit 0,e
 271+ 8EE4 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8EE6              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8EE6 C1           	pop bc
 274+ 8EE7 18 A6        	jr 3B
 275+ 8EE9 90           16 sub b
 276+ 8EEA 6F               ld l,a
 277+ 8EEB 22 9D 85     	ld (Posicion_actual),hl
 278+ 8EEE CD 1C 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8EF1 18 06            jr 9F
 280+ 8EF3 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8EF5 32 C9 85         ld (Ctrl_0),a
 282+ 8EF8 F1           	pop af
 283+ 8EF9 C1           9 pop bc
 284+ 8EFA 1E 00        	ld e,0
 285+ 8EFC CD 2C 8F         call Inicializacion
 286+ 8EFF F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F00 08           	ex af,af
 288+ 8F01 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F02 18 8B            jr 3B
 290+ 8F04
 291+ 8F04              ; --------------------
 292+ 8F04
 293+ 8F04 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F06 CD 80 90     1 call PreviousScan
 295+ 8F09 10 FB            djnz 1B
 296+ 8F0B 22 9D 85     	ld (Posicion_actual),hl
 297+ 8F0E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F0F C9           	ret
 299+ 8F10
 300+ 8F10              ; --------------------
 301+ 8F10
 302+ 8F10 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F12 CD 71 90     1 call NextScan
 304+ 8F15 10 FB            djnz 1B
 305+ 8F17 22 9D 85     	ld (Posicion_actual),hl
 306+ 8F1A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F1B C9           	ret
 308+ 8F1C
 309+ 8F1C              ; --------------------
 310+ 8F1C              ;
 311+ 8F1C              ;	22/01/23
 312+ 8F1C              ;
 313+ 8F1C              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F1C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F1C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F1C
 317+ 8F1C
 318+ 8F1C              Modificaccionne
 319+ 8F1C
 320+ 8F1C 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8F1F FE 02        	cp 2
 322+ 8F21 CC 04 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F24 DC 04 8F         call c,Modifica_Pos_actual
 324+ 8F27 C8           	ret z
 325+ 8F28 CD 10 8F         call Modifica_Pos_actual2
 326+ 8F2B C9               ret
 327+ 8F2C
 328+ 8F2C              ; *************************************************************************************************************************************************************************************************
 329+ 8F2C              ;
 330+ 8F2C              ;	13/8/22
 331+ 8F2C              ;
 332+ 8F2C              ;	Inicializacion
 333+ 8F2C              ;
 334+ 8F2C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F2C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F2C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F2C              ;
 338+ 8F2C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F2C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F2C              ;	_ desaparece/aparece.
 341+ 8F2C
 342+ 8F2C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F2C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F2C              ;
 345+ 8F2C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F2C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F2C              ; 		   [E] ="0"
 348+ 8F2C
 349+ 8F2C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F2C
 351+ 8F2C CD 31 93     Inicializacion call calcula_tercio
 352+ 8F2F 28 36        	jr z,primit
 353+ 8F31 E6 02        	and 2
 354+ 8F33 20 07        	jr nz,segmit
 355+ 8F35 7D           	ld a,l
 356+ 8F36 FE 7F        	cp $7f
 357+ 8F38 38 2D        	jr c,primit
 358+ 8F3A 28 2B        	jr z,primit
 359+ 8F3C CD 99 8F     segmit call column
 360+ 8F3F 38 13        	jr c,tercuad
 361+ 8F41 3E 04        cuarcuad ld a,4
 362+ 8F43 32 AF 85     	ld (Cuad_objeto),a
 363+ 8F46 21 20 48     	ld hl,$4820
 364+ 8F49 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F4C 21 D5 85     	ld hl,Limite_vertical
 366+ 8F4F 36 0D        	ld (hl),$0d
 367+ 8F51 08           	ex af,af
 368+ 8F52 18 3C        	jr 1F
 369+ 8F54              tercuad
 370+ 8F54 3E 03        	ld a,3
 371+ 8F56 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F59 21 20 48     	ld hl,$4820
 373+ 8F5C 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F5F 21 D5 85     	ld hl,Limite_vertical
 375+ 8F62 36 12        	ld (hl),$12
 376+ 8F64 08           	ex af,af
 377+ 8F65 18 29        	jr 1F
 378+ 8F67 CD 99 8F     primit call column
 379+ 8F6A 38 13        	jr c, primcuad
 380+ 8F6C              segcuad
 381+ 8F6C 3E 02        	ld a,2
 382+ 8F6E 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F71 21 C0 4F     	ld hl,$4fc0
 384+ 8F74 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F77 21 D5 85     	ld hl,Limite_vertical
 386+ 8F7A 36 0D        	ld (hl),$0d
 387+ 8F7C 08           	ex af,af
 388+ 8F7D 18 11        	jr 1F
 389+ 8F7F              primcuad
 390+ 8F7F 3E 01        	ld a,1
 391+ 8F81 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F84 21 C0 4F     	ld hl,$4fc0
 393+ 8F87 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F8A 21 D5 85     	ld hl,Limite_vertical
 395+ 8F8D 36 12        	ld (hl),$12
 396+ 8F8F 08           	ex af,af
 397+ 8F90 CD 5D 96     1 call Genera_coordenadas
 398+ 8F93 21 C9 85     	ld hl,Ctrl_0
 399+ 8F96 CB EE        	set 5,(hl)
 400+ 8F98 C9           	ret
 401+ 8F99
 402+ 8F99              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F99
 404+ 8F99              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F99              ;
 406+ 8F99              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F99
 408+ 8F99 7D           column ld a,l
 409+ 8F9A E6 1F        	and $1f
 410+ 8F9C FE 10         	cp $10
 411+ 8F9E C9            	ret
 412+ 8F9F
 413+ 8F9F              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F9F              ;
 415+ 8F9F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F9F              ;
 417+ 8F9F              ; 14/12/22
 418+ 8F9F              ;
 419+ 8F9F              ;	Modifica: A y BC.
 420+ 8F9F
 421+ 8F9F 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8FA2 E6 01        	and 1
 423+ 8FA4 28 17        	jr z,1F
 424+ 8FA6
 425+ 8FA6              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FA6
 427+ 8FA6 3A A1 85     	ld a,(Coordenada_X)
 428+ 8FA9 47           	ld b,a
 429+ 8FAA 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8FAB 79           	ld a,c
 431+ 8FAC 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8FAD 38 08        	jr c,2F
 433+ 8FAF 47           	ld b,a
 434+ 8FB0 79           	ld a,c
 435+ 8FB1 90           	sub b
 436+ 8FB2 32 D2 85     	ld (Columnas),a
 437+ 8FB5 18 1B        	jr 4F
 438+ 8FB7 79           2 ld a,c
 439+ 8FB8 32 D2 85     	ld (Columnas),a
 440+ 8FBB 18 15        	jr 4F
 441+ 8FBD
 442+ 8FBD              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8FBD
 444+ 8FBD 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8FC0 81           	add c
 446+ 8FC1 3D           	dec a
 447+ 8FC2 D6 1F        	sub $1f
 448+ 8FC4 38 08        	jr c,3F
 449+ 8FC6 47           	ld b,a
 450+ 8FC7 79           	ld a,c
 451+ 8FC8 90           	sub b
 452+ 8FC9 32 D2 85     	ld (Columnas),a
 453+ 8FCC 18 04        	jr 4F
 454+ 8FCE 79           3 ld a,c
 455+ 8FCF 32 D2 85     	ld (Columnas),a
 456+ 8FD2 D9           4 exx
 457+ 8FD3 4F           	ld c,a
 458+ 8FD4 D9           	exx
 459+ 8FD5 C9            ret
 460+ 8FD6
 461+ 8FD6              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8FD6              ;
 463+ 8FD6              ; 7/1/23
 464+ 8FD6              ;
 465+ 8FD6              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8FD6              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8FD6              ;
 468+ 8FD6              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8FD6              ;	DESTRUYE: HL,B Y A.
 470+ 8FD6
 471+ 8FD6 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8FD9 FE 02        	cp 2
 473+ 8FDB 38 18        	jr c,1F
 474+ 8FDD 28 16        	jr z,1F
 475+ 8FDF E6 01        	and 1
 476+ 8FE1 28 0D        	jr z,3F
 477+ 8FE3
 478+ 8FE3              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8FE3
 480+ 8FE3 CD 1F 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8FE6
 482+ 8FE6 7D           9 ld a,l
 483+ 8FE7 E6 1F        	and $1f
 484+ 8FE9 28 2A        	jr z,7F
 485+ 8FEB 2B           	dec hl
 486+ 8FEC 10 F8        	djnz 9B
 487+ 8FEE 18 25        	jr 7F
 488+ 8FF0
 489+ 8FF0              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FF0
 491+ 8FF0 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FF3 18 20        	jr 7F
 493+ 8FF5
 494+ 8FF5 28 14        1 jr z,2F
 495+ 8FF7
 496+ 8FF7              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FF7
 498+ 8FF7 CD 1F 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FFA 7D           4 ld a,l
 500+ 8FFB E6 1F        	and $1f
 501+ 8FFD 28 03        	jr z,6F
 502+ 8FFF 2B           	dec hl
 503+ 9000 10 F8        	djnz 4B
 504+ 9002 06 0F        6 ld b,15
 505+ 9004 CD 80 90     5 call PreviousScan
 506+ 9007 10 FB        	djnz 5B
 507+ 9009 18 0A        	jr 7F
 508+ 900B
 509+ 900B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 900B
 511+ 900B CD 1F 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 900E 06 0F        	ld b,15
 513+ 9010 CD 80 90     8 call PreviousScan
 514+ 9013 10 FB        	djnz 8B
 515+ 9015
 516+ 9015 E5           7 push hl
 517+ 9016 DD E1        	pop ix
 518+ 9018
 519+ 9018 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 901B E5           	push hl
 521+ 901C FD E1        	pop iy
 522+ 901E
 523+ 901E C9           	ret
 524+ 901F
 525+ 901F              ; --------------------------------------------------------------------------------------------------------------------
 526+ 901F              ;
 527+ 901F              ;	2/1/23
 528+ 901F              ;
 529+ 901F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 901F              ;
 531+ 901F              ;	Tras esta rutina tenemos:
 532+ 901F              ;
 533+ 901F              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 901F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 901F              ;
 536+ 901F              ;	DESTRUYE!!!!! HL,B y A.
 537+ 901F
 538+ 901F 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 9022 3A D2 85     	ld a,(Columnas)
 540+ 9025 3D           	dec a
 541+ 9026 20 01        	jr nz,1F
 542+ 9028 3C           	inc a
 543+ 9029 47           1 ld b,a
 544+ 902A C9           	ret
 545+ 902B
 546+ 902B              ; --------------------------------------------------------------------------------------------------------------------
 547+ 902B              ;
 548+ 902B              ;	3/1/23
 549+ 902B              ;
 550+ 902B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 902B              ;
 552+ 902B              ;	Destruye: A,B,HL y DE.
 553+ 902B
 554+ 902B              Define_rutina_de_impresion
 555+ 902B
 556+ 902B 3A 9C 85     	ld a,(Columns)
 557+ 902E 47           	ld b,a
 558+ 902F 3A D2 85     	ld a,(Columnas)
 559+ 9032 B8           	cp b
 560+ 9033 20 0D        	jr nz,2f
 561+ 9035
 562+ 9035              ;	La entidad se imprime entera.
 563+ 9035
 564+ 9035 21 01 91     	ld hl, Indice_entidades_completas
 565+ 9038 E6 01        	and 1
 566+ 903A 28 02        	jr z,1F
 567+ 903C
 568+ 903C 23           	inc hl
 569+ 903D 23           	inc hl
 570+ 903E
 571+ 903E CD 1B 88     1 call Extrae_address
 572+ 9041 C9           	ret		;	ret
 573+ 9042
 574+ 9042              ;	La entidad no se imprime entera en pantalla.
 575+ 9042
 576+ 9042 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 9045 E6 01        	and 1
 578+ 9047 28 17        	jr z,3F
 579+ 9049
 580+ 9049              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9049
 582+ 9049 21 05 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 904C 3A 9C 85     4 ld a,(Columns)
 584+ 904F E6 01        	and 1
 585+ 9051 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9053
 587+ 9053 23           	inc hl
 588+ 9054 23           	inc hl
 589+ 9055
 590+ 9055 3A D2 85     	ld a,(Columnas)
 591+ 9058 E6 01        	and 1
 592+ 905A 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 905C
 594+ 905C 23           	inc hl
 595+ 905D 23           	inc hl
 596+ 905E
 597+ 905E 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9060
 599+ 9060 21 0B 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9063 18 E7        	jr 4B
 601+ 9065
 602+ 9065              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9065              ;
 604+ 9065              ;	Prepara_draw
 605+ 9065              ;
 606+ 9065              ;	Es una rutina de carga.
 607+ 9065              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9065              ;
 609+ 9065              ;	FUNCIONAMIENTO:
 610+ 9065              ;
 611+ 9065              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9065              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9065              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9065              ;
 615+ 9065              ;	DESTRUYE:
 616+ 9065              ;
 617+ 9065              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9065
 619+ 9065 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9068 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9069 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 906A 4E           	ld c,(hl)
 623+ 906B 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 906E 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9070 C9           	ret
 626+ 9071
 627+ 9071              ;----------------------------------------------------------------------------------------------------------------
 628+ 9071              ;
 629+ 9071              ;	5/08/22
 630+ 9071              ;
 631+ 9071              ;   NextScan.
 632+ 9071              ;
 633+ 9071              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9071              ;
 635+ 9071              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9071              ;
 637+ 9071              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9071              ;
 639+ 9071              ;       DESTRUIDOS: AF y HL !!!
 640+ 9071              ;
 641+ 9071              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9071              ;
 643+ 9071
 644+ 9071 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9072 7C               ld a,h
 646+ 9073 E6 07            and 7
 647+ 9075 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9076
 649+ 9076 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9077 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9079 6F               ld l,a
 652+ 907A D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 907B
 654+ 907B 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 907C D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 907E 67               ld h,a
 657+ 907F C9               ret
 658+ 9080
 659+ 9080              ;----------------------------------------------------------------------------------------------------------------
 660+ 9080              ;
 661+ 9080              ;	5/08/22
 662+ 9080              ;
 663+ 9080              ;   PreviousScan.
 664+ 9080              ;
 665+ 9080              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9080              ;
 667+ 9080              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9080              ;
 669+ 9080              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9080              ;
 671+ 9080              ;       DESTRUIDOS: AF y HL !!!
 672+ 9080              ;
 673+ 9080              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9080              ;
 675+ 9080
 676+ 9080 7C           PreviousScan ld a,h
 677+ 9081 25               dec h               ; Dec H.
 678+ 9082 E6 07            and 7
 679+ 9084 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9085
 681+ 9085 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9086 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9088 6F               ld l,a
 684+ 9089 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 908A
 686+ 908A 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 908B C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 908D 67               ld h,a
 689+ 908E C9               ret
 690+ 908F
 691+ 908F              ; -----------------------------------------------------------------------------------
 692+ 908F              ;
 693+ 908F              ;	28/2/23
 694+ 908F              ;
 695+ 908F              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 908F              ;	Extrae fotos de Album_de_fotos.
 697+ 908F
 698+ 908F              Extrae_foto_entidades
 699+ 908F
 700+ 908F 3A DE 85     	ld a,(Numero_de_malotes)
 701+ 9092 A7           	and a
 702+ 9093 C8           	ret z
 703+ 9094 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 9098 31 00 70     	ld sp,Album_de_fotos
 705+ 909B
 706+ 909B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 909D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 909E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 909F
 710+ 909F ED 73 E1 85  	ld (Stack_2),sp
 711+ 90A3 ED 7B DF 85  	ld sp,(Stack)
 712+ 90A7
 713+ 90A7              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 90A7
 715+ 90A7 3E CD        	ld a,$cd
 716+ 90A9 32 B1 90     	ld (Imprime),a
 717+ 90AC EB           	ex de,hl
 718+ 90AD 22 B2 90     	ld (Imprime+1),hl
 719+ 90B0 EB           	ex de,hl
 720+ 90B1
 721+ 90B1              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 90B1
 723+ 90B1 00 00 00     Imprime db 0,0,0
 724+ 90B4
 725+ 90B4 3A DE 85     	ld a,(Numero_de_malotes)
 726+ 90B7 3D           	dec a
 727+ 90B8 28 09        	jr z,1F
 728+ 90BA 32 DE 85      	ld (Numero_de_malotes),a
 729+ 90BD
 730+ 90BD ED 7B E1 85   	ld sp,(Stack_2)
 731+ 90C1 18 D8        	jr 2B
 732+ 90C3
 733+ 90C3 AF           1 xor a
 734+ 90C4 32 E1 85     	ld (Stack_2),a
 735+ 90C7 C9           	ret
 736+ 90C8
 737+ 90C8              ; -----------------------------------------------------------------------------------
 738+ 90C8              ;
 739+ 90C8              ;	28/2/23
 740+ 90C8              ;
 741+ 90C8              ;	Pinta los disparos generados.
 742+ 90C8
 743+ 90C8              Extrae_foto_disparos
 744+ 90C8
 745+ 90C8 3A E7 85     	ld a,(Numero_de_disparotes)
 746+ 90CB A7           	and a
 747+ 90CC C8           	ret z
 748+ 90CD ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 90D1 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 90D4
 751+ 90D4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 90D6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 90D7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 90D8
 755+ 90D8 ED 73 E1 85  	ld (Stack_2),sp
 756+ 90DC ED 7B DF 85  	ld sp,(Stack)
 757+ 90E0
 758+ 90E0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 90E0
 760+ 90E0 3E CD        	ld a,$cd
 761+ 90E2 32 EA 90     	ld (Imprime2),a
 762+ 90E5 EB           	ex de,hl
 763+ 90E6 22 EB 90     	ld (Imprime2+1),hl
 764+ 90E9 EB           	ex de,hl
 765+ 90EA
 766+ 90EA              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 90EA
 768+ 90EA 00 00 00     Imprime2 db 0,0,0
 769+ 90ED
 770+ 90ED 3A E7 85     	ld a,(Numero_de_disparotes)
 771+ 90F0 3D           	dec a
 772+ 90F1 28 09        	jr z,1F
 773+ 90F3 32 E7 85      	ld (Numero_de_disparotes),a
 774+ 90F6
 775+ 90F6 ED 7B E1 85  	ld sp,(Stack_2)
 776+ 90FA 18 D8        	jr 2B
 777+ 90FC
 778+ 90FC AF           1 xor a
 779+ 90FD 32 E1 85     	ld (Stack_2),a
 780+ 9100 C9           	ret
 781+ 9101
# file closed: Draw_XOR.asm
1050  9101              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9101              ;   índices de Rutinas de impresión.
   2+ 9101
   3+ 9101 11 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9103 3E 91            defw Pinta_Amadeus_3x2
   5+ 9105
   6+ 9105 94 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9107 34 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9109 E8 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 910B
  10+ 910B BE 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 910D C2 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 910F 76 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9111
  14+ 9111
  15+ 9111              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9111              ;
  17+ 9111              ;   12/12/22
  18+ 9111              ;
  19+ 9111              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9111              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9111              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9111              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9111              ;
  24+ 9111              ;   Modifica: DE y HL.
  25+ 9111
  26+ 9111 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9115 FD F9        	ld sp,iy
  28+ 9117 06 10            ld b,16
  29+ 9119 D1           1 pop de
  30+ 911A 7B               ld a,e
  31+ 911B AE               xor (hl)
  32+ 911C 77           	ld (hl),a
  33+ 911D 23           	inc hl
  34+ 911E 7A               ld a,d
  35+ 911F AE               xor (hl)
  36+ 9120 77           	ld (hl),a
  37+ 9121 2B           	dec hl
  38+ 9122 24           	inc h
  39+ 9123 7C               ld a,h
  40+ 9124 E6 07            and 7
  41+ 9126 20 0A            jr nz,2F
  42+ 9128 7D               ld a,l
  43+ 9129 C6 20            add a,$20
  44+ 912B 6F               ld l,a
  45+ 912C 38 04            jr c,2F
  46+ 912E 7C               ld a,h
  47+ 912F D6 08            sub 8
  48+ 9131 67               ld h,a
  49+ 9132 7C           2 ld a,h
  50+ 9133 FE 58            cp $58
  51+ 9135 28 02            jr z,3F
  52+ 9137 10 E0            djnz 1B
  53+ 9139 ED 7B DF 85  3 ld sp,(Stack)
  54+ 913D C9           	ret
  55+ 913E
  56+ 913E ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9142 FD F9        	ld sp,iy
  58+ 9144 06 08            ld b,8
  59+ 9146 D1           1 pop de
  60+ 9147 7B               ld a,e
  61+ 9148 AE               xor (hl)
  62+ 9149 77           	ld (hl),a
  63+ 914A 23           	inc hl
  64+ 914B 7A               ld a,d
  65+ 914C AE               xor (hl)
  66+ 914D 77           	ld (hl),a
  67+ 914E 23           	inc hl
  68+ 914F D1           	pop de
  69+ 9150 7B               ld a,e
  70+ 9151 AE               xor (hl)
  71+ 9152 77           	ld (hl),a
  72+ 9153 2B           	dec hl
  73+ 9154 2B           	dec hl
  74+ 9155 24           	inc h
  75+ 9156 7C               ld a,h
  76+ 9157 E6 07            and 7
  77+ 9159 20 0A            jr nz,2F
  78+ 915B 7D               ld a,l
  79+ 915C C6 20            add a,$20
  80+ 915E 6F               ld l,a
  81+ 915F 38 04            jr c,2F
  82+ 9161 7C               ld a,h
  83+ 9162 D6 08            sub 8
  84+ 9164 67               ld h,a
  85+ 9165 7C           2 ld a,h
  86+ 9166 FE 58            cp $58
  87+ 9168 28 25            jr z,4F
  88+ 916A 7A               ld a,d
  89+ 916B AE               xor (hl)
  90+ 916C 77               ld (hl),a
  91+ 916D D1           	pop de
  92+ 916E 23           	inc hl
  93+ 916F 7B               ld a,e
  94+ 9170 AE               xor (hl)
  95+ 9171 77           	ld (hl),a
  96+ 9172 23           	inc hl
  97+ 9173 7A               ld a,d
  98+ 9174 AE               xor (hl)
  99+ 9175 77           	ld (hl),a
 100+ 9176 2B           	dec hl
 101+ 9177 2B           	dec hl
 102+ 9178 24           	inc h
 103+ 9179 7C               ld a,h
 104+ 917A E6 07            and 7
 105+ 917C 20 0A            jr nz,3F
 106+ 917E 7D               ld a,l
 107+ 917F C6 20            add a,$20
 108+ 9181 6F               ld l,a
 109+ 9182 38 04            jr c,3F
 110+ 9184 7C               ld a,h
 111+ 9185 D6 08            sub 8
 112+ 9187 67               ld h,a
 113+ 9188 7C           3 ld a,h
 114+ 9189 FE 58            cp $58
 115+ 918B 28 02            jr z,4F
 116+ 918D 10 B7            djnz 1B
 117+ 918F ED 7B DF 85  4 ld sp,(Stack)
 118+ 9193 C9           	ret
 119+ 9194
 120+ 9194              ; ---------------------------------------------------
 121+ 9194
 122+ 9194 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9198 FD F9        	ld sp,iy
 124+ 919A
 125+ 919A              ; >>>
 126+ 919A
 127+ 919A 06 10            ld b,16
 128+ 919C D1           1 pop de
 129+ 919D 7A           	ld a,d
 130+ 919E AE           	xor (hl)
 131+ 919F 77           	ld (hl),a
 132+ 91A0 24           	inc h
 133+ 91A1 7C               ld a,h
 134+ 91A2 E6 07            and 7
 135+ 91A4 20 0C            jr nz,2F
 136+ 91A6 7D               ld a,l
 137+ 91A7 C6 20            add a,$20
 138+ 91A9 6F               ld l,a
 139+ 91AA 38 06            jr c,2F
 140+ 91AC 7C               ld a,h
 141+ 91AD D6 08            sub 8
 142+ 91AF 67               ld h,a
 143+ 91B0 18 00            jr 2F
 144+ 91B2 7C           2 ld a,h
 145+ 91B3 FE 58            cp $58
 146+ 91B5 28 02            jr z,3F
 147+ 91B7 10 E3            djnz 1B
 148+ 91B9 ED 7B DF 85  3 ld sp,(Stack)
 149+ 91BD C9           	ret
 150+ 91BE
 151+ 91BE ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 91C2 FD F9        	ld sp,iy
 153+ 91C4
 154+ 91C4              ; >>>
 155+ 91C4
 156+ 91C4 06 10            ld b,16
 157+ 91C6 D1           1 pop de
 158+ 91C7 7B           	ld a,e
 159+ 91C8 AE           	xor (hl)
 160+ 91C9 77           	ld (hl),a
 161+ 91CA 24           	inc h
 162+ 91CB 7C               ld a,h
 163+ 91CC E6 07            and 7
 164+ 91CE 20 0C            jr nz,2F
 165+ 91D0 7D               ld a,l
 166+ 91D1 C6 20            add a,$20
 167+ 91D3 6F               ld l,a
 168+ 91D4 38 06            jr c,2F
 169+ 91D6 7C               ld a,h
 170+ 91D7 D6 08            sub 8
 171+ 91D9 67               ld h,a
 172+ 91DA 18 00            jr 2F
 173+ 91DC 7C           2 ld a,h
 174+ 91DD FE 58            cp $58
 175+ 91DF 28 02            jr z,3F
 176+ 91E1 10 E3            djnz 1B
 177+ 91E3 ED 7B DF 85  3 ld sp,(Stack)
 178+ 91E7 C9           	ret
 179+ 91E8
 180+ 91E8              ; ---------------------------------------------------
 181+ 91E8
 182+ 91E8 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91EC FD F9        	ld sp,iy
 184+ 91EE 06 08            ld b,8
 185+ 91F0 D1           1 pop de
 186+ 91F1 7A           	ld a,d
 187+ 91F2 AE           	xor (hl)
 188+ 91F3 77           	ld (hl),a
 189+ 91F4 23           	inc hl
 190+ 91F5 D1           	pop de
 191+ 91F6 7B           	ld a,e
 192+ 91F7 AE           	xor (hl)
 193+ 91F8 77           	ld (hl),a
 194+ 91F9 2B           	dec hl
 195+ 91FA 24            	inc h
 196+ 91FB 7C               ld a,h
 197+ 91FC E6 07            and 7
 198+ 91FE 20 0A            jr nz,2F
 199+ 9200 7D               ld a,l
 200+ 9201 C6 20            add a,$20
 201+ 9203 6F               ld l,a
 202+ 9204 38 04            jr c,2F
 203+ 9206 7C               ld a,h
 204+ 9207 D6 08            sub 8
 205+ 9209 67               ld h,a
 206+ 920A 7C           2 ld a,h
 207+ 920B FE 58            cp $58
 208+ 920D 28 20            jr z,4F
 209+ 920F D1               pop de
 210+ 9210 7B           	ld a,e
 211+ 9211 AE           	xor (hl)
 212+ 9212 77           	ld (hl),a
 213+ 9213 23           	inc hl
 214+ 9214 7A           	ld a,d
 215+ 9215 AE           	xor (hl)
 216+ 9216 77           	ld (hl),a
 217+ 9217 2B           	dec hl
 218+ 9218 24           	inc h
 219+ 9219 7C               ld a,h
 220+ 921A E6 07            and 7
 221+ 921C 20 0A            jr nz,3F
 222+ 921E 7D               ld a,l
 223+ 921F C6 20            add a,$20
 224+ 9221 6F               ld l,a
 225+ 9222 38 04            jr c,3F
 226+ 9224 7C               ld a,h
 227+ 9225 D6 08            sub 8
 228+ 9227 67               ld h,a
 229+ 9228 7C           3 ld a,h
 230+ 9229 FE 58            cp $58
 231+ 922B 28 02            jr z,4F
 232+ 922D 10 C1            djnz 1B
 233+ 922F ED 7B DF 85  4 ld sp,(Stack)
 234+ 9233 C9           	ret
 235+ 9234
 236+ 9234 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9238 FD F9        	ld sp,iy
 238+ 923A 06 08            ld b,8
 239+ 923C D1           1 pop de
 240+ 923D D1           	pop de
 241+ 923E 7B           	ld a,e
 242+ 923F AE           	xor (hl)
 243+ 9240 77           	ld (hl),a
 244+ 9241 24            	inc h
 245+ 9242 7C               ld a,h
 246+ 9243 E6 07            and 7
 247+ 9245 20 0A            jr nz,2F
 248+ 9247 7D               ld a,l
 249+ 9248 C6 20            add a,$20
 250+ 924A 6F               ld l,a
 251+ 924B 38 04            jr c,2F
 252+ 924D 7C               ld a,h
 253+ 924E D6 08            sub 8
 254+ 9250 67               ld h,a
 255+ 9251 7C           2 ld a,h
 256+ 9252 FE 58            cp $58
 257+ 9254 28 1B            jr z,4F
 258+ 9256 D1               pop de
 259+ 9257 7A           	ld a,d
 260+ 9258 AE           	xor (hl)
 261+ 9259 77           	ld (hl),a
 262+ 925A 24           	inc h
 263+ 925B 7C               ld a,h
 264+ 925C E6 07            and 7
 265+ 925E 20 0A            jr nz,3F
 266+ 9260 7D               ld a,l
 267+ 9261 C6 20            add a,$20
 268+ 9263 6F               ld l,a
 269+ 9264 38 04            jr c,3F
 270+ 9266 7C               ld a,h
 271+ 9267 D6 08            sub 8
 272+ 9269 67               ld h,a
 273+ 926A 7C           3 ld a,h
 274+ 926B FE 58            cp $58
 275+ 926D 28 02            jr z,4F
 276+ 926F 10 CB            djnz 1B
 277+ 9271 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9275 C9           	ret
 279+ 9276
 280+ 9276 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 927A FD F9        	ld sp,iy
 282+ 927C 06 08            ld b,8
 283+ 927E D1           1 pop de
 284+ 927F 7B           	ld a,e
 285+ 9280 AE           	xor (hl)
 286+ 9281 77           	ld (hl),a
 287+ 9282 23           	inc hl
 288+ 9283 7A           	ld a,d
 289+ 9284 AE           	xor (hl)
 290+ 9285 77           	ld (hl),a
 291+ 9286 2B           	dec hl
 292+ 9287 24             	inc h
 293+ 9288 7C               ld a,h
 294+ 9289 E6 07            and 7
 295+ 928B 20 0A            jr nz,2F
 296+ 928D 7D               ld a,l
 297+ 928E C6 20            add a,$20
 298+ 9290 6F               ld l,a
 299+ 9291 38 04            jr c,2F
 300+ 9293 7C               ld a,h
 301+ 9294 D6 08            sub 8
 302+ 9296 67               ld h,a
 303+ 9297 7C           2 ld a,h
 304+ 9298 FE 58            cp $58
 305+ 929A 28 21            jr z,4F
 306+ 929C D1               pop de
 307+ 929D 7A           	ld a,d
 308+ 929E AE           	xor (hl)
 309+ 929F 77           	ld (hl),a
 310+ 92A0 23           	inc hl
 311+ 92A1 D1               pop de
 312+ 92A2 7B           	ld a,e
 313+ 92A3 AE           	xor (hl)
 314+ 92A4 77           	ld (hl),a
 315+ 92A5 2B           	dec hl
 316+ 92A6 24           	inc h
 317+ 92A7 7C               ld a,h
 318+ 92A8 E6 07            and 7
 319+ 92AA 20 0A            jr nz,3F
 320+ 92AC 7D               ld a,l
 321+ 92AD C6 20            add a,$20
 322+ 92AF 6F               ld l,a
 323+ 92B0 38 04            jr c,3F
 324+ 92B2 7C               ld a,h
 325+ 92B3 D6 08            sub 8
 326+ 92B5 67               ld h,a
 327+ 92B6 7C           3 ld a,h
 328+ 92B7 FE 58            cp $58
 329+ 92B9 28 02            jr z,4F
 330+ 92BB 10 C1            djnz 1B
 331+ 92BD ED 7B DF 85  4 ld sp,(Stack)
 332+ 92C1 C9           	ret
 333+ 92C2
 334+ 92C2 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 92C6 FD F9        	ld sp,iy
 336+ 92C8 06 08            ld b,8
 337+ 92CA D1           1 pop de
 338+ 92CB 7B           	ld a,e
 339+ 92CC AE           	xor (hl)
 340+ 92CD 77           	ld (hl),a
 341+ 92CE 24            	inc h
 342+ 92CF 7C               ld a,h
 343+ 92D0 E6 07            and 7
 344+ 92D2 20 0A            jr nz,2F
 345+ 92D4 7D               ld a,l
 346+ 92D5 C6 20            add a,$20
 347+ 92D7 6F               ld l,a
 348+ 92D8 38 04            jr c,2F
 349+ 92DA 7C               ld a,h
 350+ 92DB D6 08            sub 8
 351+ 92DD 67               ld h,a
 352+ 92DE 7C           2 ld a,h
 353+ 92DF FE 58            cp $58
 354+ 92E1 28 1C            jr z,4F
 355+ 92E3 D1               pop de
 356+ 92E4 7A           	ld a,d
 357+ 92E5 AE           	xor (hl)
 358+ 92E6 77           	ld (hl),a
 359+ 92E7 24           	inc h
 360+ 92E8 7C               ld a,h
 361+ 92E9 E6 07            and 7
 362+ 92EB 20 0A            jr nz,3F
 363+ 92ED 7D               ld a,l
 364+ 92EE C6 20            add a,$20
 365+ 92F0 6F               ld l,a
 366+ 92F1 38 04            jr c,3F
 367+ 92F3 7C               ld a,h
 368+ 92F4 D6 08            sub 8
 369+ 92F6 67               ld h,a
 370+ 92F7 7C           3 ld a,h
 371+ 92F8 FE 58            cp $58
 372+ 92FA 28 03            jr z,4F
 373+ 92FC D1               pop de
 374+ 92FD 10 CB            djnz 1B
 375+ 92FF ED 7B DF 85  4 ld sp,(Stack)
 376+ 9303 C9           	ret
 377+ 9304
 378+ 9304              ; ---------------------------------------------------
 379+ 9304              ;
 380+ 9304              ;   27/02/23
 381+ 9304              ;
 382+ 9304              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9304              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9304              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9304
 386+ 9304 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 9308 FD F9            ld sp,iy
 388+ 930A 06 02            ld b,2
 389+ 930C D1           1 pop de
 390+ 930D 7B               ld a,e
 391+ 930E AE               xor (hl)
 392+ 930F 77               ld (hl),a
 393+ 9310 23               inc hl
 394+ 9311 7A               ld a,d
 395+ 9312 AE               xor (hl)
 396+ 9313 77               ld (hl),a
 397+ 9314 2B               dec hl
 398+ 9315
 399+ 9315 24               inc h
 400+ 9316 7C               ld a,h
 401+ 9317 E6 07            and 7
 402+ 9319 20 0A            jr nz,2F
 403+ 931B 7D               ld a,l
 404+ 931C C6 20            add a,$20
 405+ 931E 6F               ld l,a
 406+ 931F 38 04            jr c,2F
 407+ 9321 7C               ld a,h
 408+ 9322 D6 08            sub 8
 409+ 9324 67               ld h,a
 410+ 9325 7C           2 ld a,h
 411+ 9326 FE 58            cp $58
 412+ 9328 28 02            jr z,3F
 413+ 932A
 414+ 932A 10 E0            djnz 1B
 415+ 932C ED 7B DF 85  3 ld sp,(Stack)
 416+ 9330 C9               ret
 417+ 9331
# file closed: Rutinas_de_impresion_sprites.asm
1051  9331              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9331              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9331              ;
   3+ 9331              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9331              ;
   5+ 9331              ; *****************************************************************************************************************************************************************************************
   6+ 9331              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9331
   8+ 9331 7C           calcula_tercio ld a,h
   9+ 9332 E6 18        	and $18
  10+ 9334 CB 2F        	sra a
  11+ 9336 CB 2F        	sra a
  12+ 9338 CB 2F        	sra a
  13+ 933A C9           	ret
  14+ 933B
# file closed: calcula_tercio.asm
1052  933B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 933B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 933B              ;
   3+ 933B              ;
   4+ 933B              ;	CLS.
   5+ 933B              ;
   6+ 933B              ;	Limpia la pantalla y define sus atributos.
   7+ 933B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 933B              ;
   9+ 933B              ;	COLORES: 0 ..... NEGRO
  10+ 933B              ;    		 1 ..... AZUL
  11+ 933B              ; 			 2 ..... ROJO
  12+ 933B              ;			 3 ..... MAGENTA
  13+ 933B              ; 			 4 ..... VERDE
  14+ 933B              ; 			 5 ..... CIAN
  15+ 933B              ;			 6 ..... AMARILLO
  16+ 933B              ; 			 7 ..... BLANCO
  17+ 933B              ;
  18+ 933B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 933B              ;
  20+ 933B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 933B
  22+ 933B
  23+ 933B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 933E 11 01 40     	LD DE,$4001
  25+ 9341 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9344 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9346 ED B0        	LDIR
  28+ 9348 01 FF 02     	LD BC,767
  29+ 934B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 934C ED B0        	LDIR
  31+ 934E C9           	ret
  32+ 934F
# file closed: Cls.asm
1053  934F              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 934F              ; ******************************************************************************************************************************************************************************************
   2+ 934F              ;
   3+ 934F              ;   22/01/23
   4+ 934F              ;
   5+ 934F              ;	Mov_down
   6+ 934F              ;
   7+ 934F              ; 	Mueve el Sprite X px hacia abajo.
   8+ 934F              ;
   9+ 934F              ;
  10+ 934F 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9352 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9354              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9354              ; 																	; _ en el caso de que no lo haya.
  14+ 9354 3A B3 85     	ld a,(Vel_down)
  15+ 9357 47           	ld b,a
  16+ 9358 2A 9D 85         ld hl,(Posicion_actual)
  17+ 935B CD 31 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 935E E6 02        	and 2
  19+ 9360 28 0F        	jr z,1F
  20+ 9362
  21+ 9362              ; Nos encontramos en el último tercio de pantalla.
  22+ 9362              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9362
  24+ 9362 7C           	ld a,h
  25+ 9363 FE 57        	cp $57
  26+ 9365 20 0A        	jr nz,1F
  27+ 9367 7D           	ld a,l
  28+ 9368 C6 20        	add $20
  29+ 936A 30 05        	jr nc,1F
  30+ 936C
  31+ 936C              ; ------------------------------
  32+ 936C CD 47 96     	call Reaparece_arriba
  33+ 936F              ;	call Reinicio
  34+ 936F              ; ------------------------------
  35+ 936F
  36+ 936F 18 08        	jr 3F
  37+ 9371 CD 71 90     1 call NextScan
  38+ 9374 22 9D 85     	ld (Posicion_actual),hl
  39+ 9377 10 E2            djnz 2B
  40+ 9379 CD 5D 96     3 call Genera_coordenadas
  41+ 937C C9           	ret
  42+ 937D
  43+ 937D              ; ******************************************************************************************************************************************************************************************
  44+ 937D              ;
  45+ 937D              ;   22/01/23
  46+ 937D              ;
  47+ 937D              ;	Mov_up
  48+ 937D              ;
  49+ 937D              ; 	Mueve el Sprite hacia arriba.
  50+ 937D              ;
  51+ 937D              ;
  52+ 937D 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9380 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9382              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9382              ; 																		; _ en el caso de que no lo haya.
  56+ 9382 3A B2 85     	ld a,(Vel_up)
  57+ 9385 47           	ld b,a
  58+ 9386 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9389 CD 31 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 938C A7           	and a
  61+ 938D 20 10        	jr nz,1F
  62+ 938F
  63+ 938F              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 938F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 938F
  66+ 938F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9390 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9392 20 0B            jr nz,1F
  69+ 9394 7D               ld a,l
  70+ 9395 D6 20            sub $20
  71+ 9397 30 06            jr nc,1F
  72+ 9399 25               dec h
  73+ 939A
  74+ 939A              ; -----------------------------
  75+ 939A CD 37 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 939D              ;	call Reinicio
  77+ 939D              ; -----------------------------
  78+ 939D
  79+ 939D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 939F CD 80 90     1 call PreviousScan
  81+ 93A2 22 9D 85     	ld (Posicion_actual),hl
  82+ 93A5 10 E2            djnz 3B
  83+ 93A7 CD 5D 96     2 call Genera_coordenadas
  84+ 93AA C9           	ret
  85+ 93AB
  86+ 93AB              ; ******************************************************************************************************************************************************************************************
  87+ 93AB              ;
  88+ 93AB              ;	19/10/22
  89+ 93AB              ;
  90+ 93AB              ;	Mov_right.
  91+ 93AB              ;
  92+ 93AB              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 93AB              ;
  94+ 93AB
  95+ 93AB 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 93AE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 93B0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 93B0              ; 																	; _ en el caso de que no lo haya.
  99+ 93B0 3A C9 85     	ld a,(Ctrl_0)
 100+ 93B3 CB 77        	bit 6,a
 101+ 93B5 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 93B7
 103+ 93B7 CD E5 95     	call Stop_Amadeus_right
 104+ 93BA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 93BB 18 4D        	jr 8F
 106+ 93BD
 107+ 93BD 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 93C0 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 93C2 20 46        	jr nz,8F
 110+ 93C4
 111+ 93C4 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 93C7 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 93C8 28 40        	jr z,8F
 114+ 93CA
 115+ 93CA              ; ---------- ---------- ----------
 116+ 93CA              ;
 117+ 93CA              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 93CA
 119+ 93CA 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 93CD FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 93CF 28 11        	jr z,1F
 122+ 93D1 38 06        	jr c,6F
 123+ 93D3 FE 04        	cp 4
 124+ 93D5 28 14        	jr z,7F
 125+ 93D7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 93D9
 127+ 93D9              ; ---------- ---------- ----------
 128+ 93D9              ;
 129+ 93D9              ; Perfiles de velocidad
 130+ 93D9              ;
 131+ 93D9
 132+ 93D9 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 93DC FE FE        	cp $fe
 134+ 93DE 20 2A        	jr nz,8F
 135+ 93E0 18 10        	jr 3F
 136+ 93E2 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 93E5 FE FD        	cp $fd
 138+ 93E7 20 21        	jr nz,8F
 139+ 93E9 18 07        	jr 3F
 140+ 93EB 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93EE FE FB        	cp $fb
 142+ 93F0 20 18        	jr nz,8F
 143+ 93F2
 144+ 93F2              ; ---------- ---------- ----------
 145+ 93F2
 146+ 93F2              3
 147+ 93F2 CD 25 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93F5              ;	call Reinicio
 149+ 93F5
 150+ 93F5              ; ---------- ---------- ----------
 151+ 93F5              ;
 152+ 93F5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93F5
 154+ 93F5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93F7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93F8 CD 11 94     	call DESPLZ_DER
 157+ 93FB C1           	pop bc
 158+ 93FC 10 F9        	djnz 5B
 159+ 93FE 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9401 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9402 22 9D 85     	ld (Posicion_actual),hl
 162+ 9405 CD 5D 96     	call Genera_coordenadas
 163+ 9408 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 940A
 165+ 940A              ; ---------- ---------- ----------
 166+ 940A
 167+ 940A 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 940D CD 11 94     	call DESPLZ_DER
 169+ 9410 C9           2 ret
 170+ 9411
 171+ 9411              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9411              ;
 173+ 9411              ;	22/9/22
 174+ 9411              ;
 175+ 9411
 176+ 9411 CD 20 94     DESPLZ_DER call Desplaza_derecha
 177+ 9414 CD 6C 94         call modifica_parametros_1er_DESPLZ_2
 178+ 9417 CD 95 94         call Ciclo_completo
 179+ 941A 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 941D CB FE        	set 7,(hl)
 181+ 941F C9           	ret
 182+ 9420
 183+ 9420              ; ******************************************************************************************************************************************************************************************
 184+ 9420              ;	15/02/23
 185+ 9420              ;
 186+ 9420
 187+ 9420 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9423 47           	ld b,a
 189+ 9424 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9427 23           1 inc hl
 191+ 9428 23           	inc hl
 192+ 9429 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 942B 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 942E CD 1B 88     	call Extrae_address
 195+ 9431 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9434
 197+ 9434              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9434
 199+ 9434              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9434              ; Cuántos movimientos hemos hecho ??
 201+ 9434              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9434
 203+ 9434 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9437 EB           	ex de,hl
 205+ 9438 A7           	and a
 206+ 9439 ED 52        	sbc hl,de
 207+ 943B CB 3D        	srl l
 208+ 943D 3E 08        6 ld a,8
 209+ 943F 95           	sub l
 210+ 9440 30 1E        	jr nc,3F
 211+ 9442
 212+ 9442              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9442              ; B="0".
 214+ 9442
 215+ 9442 04           4 inc b
 216+ 9443 3C           	inc a
 217+ 9444 20 FC        	jr nz,4B
 218+ 9446 78           	ld a,b
 219+ 9447 08           	ex af,af
 220+ 9448 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 944B 23           5 inc hl
 222+ 944C 23           	inc hl
 223+ 944D 10 FC        	djnz 5B
 224+ 944F 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9452 CD 1B 88     	call Extrae_address
 226+ 9455 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9458
 228+ 9458              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9458              ; _(Posicion_actual).
 230+ 9458
 231+ 9458 21 9D 85     	ld hl,Posicion_actual
 232+ 945B 34           	inc (hl)
 233+ 945C 08               ex af,af
 234+ 945D 6F           	ld l,a
 235+ 945E 18 DD        	jr 6B
 236+ 9460
 237+ 9460              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9460
 239+ 9460 47           3 ld b,a
 240+ 9461 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9464 23           2 inc hl
 242+ 9465 23           	inc hl
 243+ 9466 10 FC        	djnz 2B
 244+ 9468 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 946B C9           8 ret
 246+ 946C
 247+ 946C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 946C              ;
 249+ 946C              ;	24/7/22
 250+ 946C              ;
 251+ 946C              ;	modifica_parametros_1er_DESPLZ_2
 252+ 946C              ;
 253+ 946C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 946C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 946C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 946C
 257+ 946C 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 946F A7           	and a
 259+ 9470 20 1F        	jr nz,1F
 260+ 9472 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9474 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9477
 263+ 9477 21 9C 85     	ld hl,Columns
 264+ 947A 34           	inc (hl)
 265+ 947B 3A AF 85     	ld a,(Cuad_objeto)
 266+ 947E E6 01        	and 1
 267+ 9480 28 0F        	jr z,1F
 268+ 9482 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9485 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9486 22 9D 85     	ld (Posicion_actual),hl
 271+ 9489 CD 5D 96     	call Genera_coordenadas
 272+ 948C CD F1 95     	call Inc_CTRL_DESPLZ
 273+ 948F 18 03        	jr 2F
 274+ 9491 CD F1 95     1 call Inc_CTRL_DESPLZ
 275+ 9494 C9           2 ret
 276+ 9495
 277+ 9495              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9495              ;
 279+ 9495              ;	24/7/22
 280+ 9495              ;
 281+ 9495              ;	Ciclo_completo.
 282+ 9495              ;
 283+ 9495              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9495              ;
 285+ 9495              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9495              ; 	Decrementamos (Columns).
 287+ 9495              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9495              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9495
 290+ 9495
 291+ 9495 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9498 FE FF        	cp $ff
 293+ 949A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 949C E6 F0        	and $f0
 295+ 949E 20 28        	jr nz,3F
 296+ 94A0
 297+ 94A0              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 94A0
 299+ 94A0 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 94A3 47           	ld b,a
 301+ 94A4 3E F8        	ld a,$f8
 302+ 94A6 80           	add b
 303+ 94A7 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 94AA 18 1C        	jr 3F
 305+ 94AC 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 94AF 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 94B0 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 94B1 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 94B4 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 94B7 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 94B9 20 0A        	jr nz,2F
 312+ 94BB 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 94BE 23           	inc hl
 314+ 94BF 22 9D 85     	ld (Posicion_actual),hl
 315+ 94C2 CD 5D 96     	call Genera_coordenadas
 316+ 94C5
 317+ 94C5              ; Inicia el puntero de Sprite.
 318+ 94C5
 319+ 94C5 CD 32 88     2 call Inicia_puntero_objeto_der
 320+ 94C8 C9           3 ret
 321+ 94C9
 322+ 94C9              ; ******************************************************************************************************************************************************************************************
 323+ 94C9              ;
 324+ 94C9              ;	15/02/23
 325+ 94C9              ;
 326+ 94C9              ;	Mov_left.
 327+ 94C9              ;
 328+ 94C9              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 94C9              ;
 330+ 94C9              Mov_left
 331+ 94C9
 332+ 94C9 21 C9 85     	ld hl,Ctrl_0
 333+ 94CC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 94CE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 94CE              ; 																	; _ en el caso de que no lo haya.
 336+ 94CE 3A C9 85     	ld a,(Ctrl_0)
 337+ 94D1 CB 77        	bit 6,a
 338+ 94D3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 94D5
 340+ 94D5 CD EB 95     	call Stop_Amadeus_left
 341+ 94D8 C8           	ret z
 342+ 94D9 20 4A        	jr nz,8F
 343+ 94DB
 344+ 94DB 3A A1 85     11 ld a,(Coordenada_X)
 345+ 94DE A7           	and a
 346+ 94DF 20 44        	jr nz,8F
 347+ 94E1
 348+ 94E1 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 94E4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 94E5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 94E7
 352+ 94E7              ; ---------- ---------- ----------
 353+ 94E7
 354+ 94E7 3A B0 85     	ld a,(Vel_left)
 355+ 94EA FE 02        	cp 2
 356+ 94EC 28 0F        	jr z,1F
 357+ 94EE 38 04        	jr c,6F
 358+ 94F0 FE 04        	cp 4
 359+ 94F2 28 12        	jr z,7F
 360+ 94F4
 361+ 94F4              ; ---------- ---------- ----------
 362+ 94F4
 363+ 94F4 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94F7 FE F8        	cp $f8
 365+ 94F9 20 2A        	jr nz,8F
 366+ 94FB 18 10        	jr 4F
 367+ 94FD 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 9500 FE F9        	cp $f9
 369+ 9502 20 21        	jr nz,8F
 370+ 9504 18 07        	jr 4F
 371+ 9506 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 9509 FE FB        	cp $fb
 373+ 950B 20 18        	jr nz,8F
 374+ 950D
 375+ 950D              ; ---------- ---------- ----------
 376+ 950D
 377+ 950D              4
 378+ 950D CD 13 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9510              ;	call Reinicio
 380+ 9510
 381+ 9510              ; ---------- ---------- ----------
 382+ 9510
 383+ 9510 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9512 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9513
 386+ 9513              ;	ld hl,(Indice_Sprite_izq)
 387+ 9513              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9513
 389+ 9513 CD 2C 95     	call DESPLZ_IZQ
 390+ 9516 C1           	pop bc
 391+ 9517 10 F9        	djnz 5B
 392+ 9519 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 951C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 951D 22 9D 85     	ld (Posicion_actual),hl
 395+ 9520 CD 5D 96     	call Genera_coordenadas
 396+ 9523 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9525
 398+ 9525              ; ---------- ---------- ----------
 399+ 9525
 400+ 9525              ; Movemos, no hay recolocación.
 401+ 9525
 402+ 9525 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9528 CD 2C 95     	call DESPLZ_IZQ
 404+ 952B C9           2 ret
 405+ 952C
 406+ 952C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 952C              ;
 408+ 952C              ;	22/9/22
 409+ 952C
 410+ 952C              DESPLZ_IZQ
 411+ 952C
 412+ 952C CD 3B 95     	call Desplaza_izquierda
 413+ 952F CD 87 95         call modifica_parametros_1er_DESPLZ
 414+ 9532 CD AF 95     	call Ciclo_completo_2
 415+ 9535 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9538 CB BE        	res 7,(hl)
 417+ 953A C9           	ret
 418+ 953B
 419+ 953B              Desplaza_izquierda
 420+ 953B
 421+ 953B 3A B0 85     	ld a,(Vel_left)
 422+ 953E 47           	ld b,a
 423+ 953F 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9542 23           1 inc hl
 425+ 9543 23           	inc hl
 426+ 9544 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9546 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9549 CD 1B 88     	call Extrae_address
 429+ 954C 22 9F 85     	ld (Puntero_objeto),hl
 430+ 954F
 431+ 954F              ; Modifica (Puntero_DESPLZ_der).
 432+ 954F
 433+ 954F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 954F              ; Cuántos movimientos hemos hecho ??
 435+ 954F              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 954F
 437+ 954F 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9552 EB           	ex de,hl
 439+ 9553 A7           	and a
 440+ 9554 ED 52        	sbc hl,de
 441+ 9556 CB 3D        	srl l
 442+ 9558 3E 08        6 ld a,8
 443+ 955A 95           	sub l
 444+ 955B 30 1E        	jr nc,3F
 445+ 955D
 446+ 955D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 955D              ; B="0".
 448+ 955D
 449+ 955D 04           4 inc b
 450+ 955E 3C           	inc a
 451+ 955F 20 FC        	jr nz,4B
 452+ 9561 78           	ld a,b
 453+ 9562 08           	ex af,af
 454+ 9563 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9566 23           5 inc hl
 456+ 9567 23           	inc hl
 457+ 9568 10 FC        	djnz 5B
 458+ 956A 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 956D CD 1B 88     	call Extrae_address
 460+ 9570 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9573
 462+ 9573              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9573              ; _(Posicion_actual).
 464+ 9573
 465+ 9573 21 9D 85     	ld hl,Posicion_actual
 466+ 9576 35           	dec (hl)
 467+ 9577 08           	ex af,af
 468+ 9578 6F           	ld l,a
 469+ 9579 18 DD        	jr 6B
 470+ 957B
 471+ 957B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 957B
 473+ 957B 47           3 ld b,a
 474+ 957C 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 957F 23           2 inc hl
 476+ 9580 23           	inc hl
 477+ 9581 10 FC        	djnz 2B
 478+ 9583 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9586 C9           8 ret
 480+ 9587
 481+ 9587              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9587              ;
 483+ 9587              ;	modifica_parametros_1er_DESPLZ
 484+ 9587              ;
 485+ 9587              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9587              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9587              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9587
 489+ 9587 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 958A A7           	and a
 491+ 958B 20 1E        	jr nz,1F
 492+ 958D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 958E 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9591 21 9C 85     	ld hl,Columns
 495+ 9594 34           	inc (hl)
 496+ 9595 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9598 E6 01        	and 1
 498+ 959A 20 0F        	jr nz,1F
 499+ 959C 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 959F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 95A0 22 9D 85     	ld (Posicion_actual),hl
 502+ 95A3 CD 5D 96     	call Genera_coordenadas
 503+ 95A6 CD 02 96     	call Dec_CTRL_DESPLZ
 504+ 95A9 18 03        	jr 2F
 505+ 95AB CD 02 96     1 call Dec_CTRL_DESPLZ
 506+ 95AE C9           2 ret
 507+ 95AF
 508+ 95AF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 95AF
 510+ 95AF 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 95B2 FE F7        	cp $f7
 512+ 95B4 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 95B6 30 2C        	jr nc,3F
 514+ 95B8
 515+ 95B8              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 95B8
 517+ 95B8 06 00        	ld b,0
 518+ 95BA 04           4 inc b
 519+ 95BB 3C           	inc a
 520+ 95BC FE F7        	cp $f7
 521+ 95BE 20 FA        	jr nz,4B
 522+ 95C0 3E FF        	ld a,$ff
 523+ 95C2 90           	sub b
 524+ 95C3 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 95C6 18 1C        	jr 3F
 526+ 95C8
 527+ 95C8              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 95C8
 529+ 95C8 21 9C 85     1 ld hl,Columns
 530+ 95CB 35           	dec (hl)
 531+ 95CC AF           	xor a
 532+ 95CD 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 95D0 3A AF 85     	ld a,(Cuad_objeto)
 534+ 95D3 E6 01        	and 1
 535+ 95D5 28 0A        	jr z,2F
 536+ 95D7 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 95DA 2B           	dec hl
 538+ 95DB 22 9D 85     	ld (Posicion_actual),hl
 539+ 95DE CD 5D 96     	call Genera_coordenadas
 540+ 95E1
 541+ 95E1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 95E1
 543+ 95E1 CD 45 88     2 call Inicia_puntero_objeto_izq
 544+ 95E4 C9           3 ret
 545+ 95E5
 546+ 95E5              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 95E5              ;
 548+ 95E5              ;	19/10/22
 549+ 95E5              ;
 550+ 95E5              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 95E5              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 95E5
 553+ 95E5 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 95E8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95EA C9           	ret
 556+ 95EB
 557+ 95EB              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95EB              ;
 559+ 95EB              ;	19/10/22
 560+ 95EB              ;
 561+ 95EB              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95EB              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95EB
 564+ 95EB 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95EE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95F0 C9           	ret
 567+ 95F1
 568+ 95F1              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95F1              ;
 570+ 95F1              ;	24/7/22
 571+ 95F1              ;
 572+ 95F1              ;	Inc_CTRL_DESPLZ
 573+ 95F1              ;
 574+ 95F1              ;
 575+ 95F1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95F1
 577+ 95F1 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95F4 3A B1 85     	ld a,(Vel_right)
 579+ 95F7 A7           	and a
 580+ 95F8 28 06        	jr z,1F
 581+ 95FA 47           	ld b,a
 582+ 95FB 34           3 inc (hl)
 583+ 95FC 10 FD        	djnz 3B
 584+ 95FE 18 01        	jr 2F
 585+ 9600 34           1 inc (hl)
 586+ 9601 C9           2 ret
 587+ 9602
 588+ 9602              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9602              ;
 590+ 9602              ;	5/2/23
 591+ 9602              ;
 592+ 9602              ;	Dec_CTRL_DESPLZ
 593+ 9602              ;
 594+ 9602              ;
 595+ 9602              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9602
 597+ 9602 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9605 3A B0 85     	ld a,(Vel_left)
 599+ 9608 A7           	and a
 600+ 9609 28 06        	jr z,1F
 601+ 960B 47           	ld b,a
 602+ 960C 35           3 dec (hl)
 603+ 960D 10 FD        	djnz 3B
 604+ 960F 18 01        	jr 2F
 605+ 9611 35           1 dec (hl)
 606+ 9612 C9           2 ret
 607+ 9613
 608+ 9613              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9613
 610+ 9613 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9616 01 1F 00     	ld bc,31
 612+ 9619 A7           	and a
 613+ 961A ED 4A        	adc hl,bc
 614+ 961C 22 9D 85     	ld (Posicion_actual),hl
 615+ 961F 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9622 CB C6        	set 0,(hl)
 617+ 9624 C9           	ret
 618+ 9625
 619+ 9625              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9625
 621+ 9625 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9628 01 1F 00     	ld bc,31
 623+ 962B A7           	and a
 624+ 962C ED 42        	sbc hl,bc
 625+ 962E 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9631 21 C9 85     	ld hl,Ctrl_0
 627+ 9634 CB CE        	set 1,(hl)
 628+ 9636 C9           	ret
 629+ 9637
 630+ 9637              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9637
 632+ 9637 24           Reaparece_abajo inc h
 633+ 9638 01 E0 17     	ld bc,$17e0
 634+ 963B A7           	and a
 635+ 963C ED 4A        	adc hl,bc
 636+ 963E 22 9D 85     	ld (Posicion_actual),hl
 637+ 9641 21 C9 85     	ld hl,Ctrl_0
 638+ 9644 CB D6        	set 2,(hl)
 639+ 9646 C9           	ret
 640+ 9647
 641+ 9647              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9647
 643+ 9647 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 964A A7           	and a
 645+ 964B ED 42        	sbc hl,bc
 646+ 964D 22 9D 85     	ld (Posicion_actual),hl
 647+ 9650 21 C9 85     	ld hl,Ctrl_0
 648+ 9653 CB DE        	set 3,(hl)
 649+ 9655 C9           	ret
 650+ 9656
 651+ 9656              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9656
 653+ 9656 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9659 22 9D 85     	ld (Posicion_actual),hl
 655+ 965C C9           	ret
# file closed: Direcciones.asm
1054  965D              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 965D              ; ------------------------------------------------------------------------
   2+ 965D              ;
   3+ 965D              ;	02/04/23
   4+ 965D              ;
   5+ 965D              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 965D              ;	Fila superior "0", Columna izquierda "0".
   7+ 965D              ;
   8+ 965D              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 965D              ;
  10+ 965D              ;	Modifica: A,BC y DE.
  11+ 965D
  12+ 965D C5           Genera_coordenadas push bc
  13+ 965E E5           	push hl
  14+ 965F D5           	push de
  15+ 9660
  16+ 9660 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9663
  18+ 9663 7D           	ld a,l
  19+ 9664 E6 1F        	and $1f
  20+ 9666 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9669
  22+ 9669 CD 31 93     	call calcula_tercio
  23+ 966C 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 966D
  25+ 966D 1E 00        	ld e,0
  26+ 966F 7D           	ld a,l
  27+ 9670 E6 E0        	and $e0
  28+ 9672 28 01        	jr z,1F
  29+ 9674 04           	inc b
  30+ 9675
  31+ 9675 04           1 inc b
  32+ 9676 05           	dec b
  33+ 9677 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9679              ;														; _ , salimos.
  35+ 9679 1C           3 inc e
  36+ 967A D6 20        	sub 32
  37+ 967C 20 FB        	jr nz,3B
  38+ 967E 10 F5        	djnz 1B
  39+ 9680
  40+ 9680 7B           2 ld a,e
  41+ 9681 32 A2 85     	ld (Coordenada_y),a
  42+ 9684
  43+ 9684 D1           	pop de
  44+ 9685 E1           	pop hl
  45+ 9686 C1           	pop bc
  46+ 9687
  47+ 9687 C9           	ret
  48+ 9688
  49+ 9688              ; ------------------------------------------------------------------------
  50+ 9688              ;	28/03/23
  51+ 9688              ;
  52+ 9688              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9688              ;	Fila superior "0", Columna izquierda "0".
  54+ 9688              ;
  55+ 9688              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9688              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9688              ;
  58+ 9688              ;		DE="$120d"
  59+ 9688              ;
  60+ 9688              ;		D, (Coordenada_X), Columnas, $12
  61+ 9688              ;		E, (Coordenada_y), Filas, $0d
  62+ 9688              ;
  63+ 9688              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9688
  65+ 9688              ;	Modifica: A,BC y DE.
  66+ 9688
  67+ 9688
  68+ 9688              Genera_coordenadas_disparo
  69+ 9688
  70+ 9688              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9688
  72+ 9688 7D           	ld a,l
  73+ 9689 E6 1F        	and $1f
  74+ 968B 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 968C CD 31 93     	call calcula_tercio
  76+ 968F 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9690 1E 00        	ld e,0
  78+ 9692 7D           	ld a,l
  79+ 9693 E6 E0        	and $e0
  80+ 9695 28 01        	jr z,1F
  81+ 9697 04           	inc b
  82+ 9698 1C           1 inc e
  83+ 9699 D6 20        	sub 32
  84+ 969B 20 FB        	jr nz,1B
  85+ 969D 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 969F C9           	ret
  87+ 96A0
# file closed: Genera_coordenadas.asm
1055  96A0              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 96A0
   2+ 96A0
   3+ 96A0              ;   11/8/22
   4+ 96A0              ;
   5+ 96A0              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 96A0              ;
   7+ 96A0              ;   Mov_obj.asm
   8+ 96A0              ;
   9+ 96A0              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 96A0              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 96A0              ;
  12+ 96A0              ;   Codificación:
  13+ 96A0              ;
  14+ 96A0              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 96A0
  16+ 96A0              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 96A0
  18+ 96A0 02 40 00     Arriba db 2,%01000000,0
  19+ 96A3 02 80 00     Abajo db 2,%10000000,0
  20+ 96A6 02 20 00     Derecha db 2,%00100000,0
  21+ 96A9 02 10 00     Izquierda db 2,%00010000,0
  22+ 96AC 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 96B0 60 42 60 40
  22+ 96B4 63
  23+ 96B5 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 96B9 22 A3 80 A0
  24+ 96BD 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 96C1 84 A0 83 A0
  25+ 96C5 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 96C9 80 A3 22 A0
  26+ 96CD 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 96D1 40 60 42 60
  27+ 96D5 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 96D9
  29+ 96D9 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 96DD 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 96E1 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 96E5 84 00
  32+ 96E7 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96EB 84 00
  33+ 96ED 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96F1 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96F5 1F 1F 1F 1F
  35+ 96F9 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96FD 1F 1F 1F 1F
  35+ 9701 1F
  36+ 9702 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9706 2F 2F 2F 2F
  36+ 970A 2F 2F
  37+ 970C 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9710 2F 2F 00
  38+ 9713
  39+ 9713              ; ----- ----- ----- ----- -----
  40+ 9713
  41+ 9713 F1 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9715 ED 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9717 A9 96        Indice_mov_Izquierda defw Izquierda
  44+ 9719 A6 96        Indice_mov_Derecha defw Derecha
  45+ 971B A3 96        Indice_mov_Abajo defw Abajo
  46+ 971D A0 96        Indice_mov_Arriba defw Arriba
  47+ 971F DD 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9721 E1 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9723 D9 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9725 E7 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9727 AC 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9729              ; ----- ----- ----- ----- -----
  53+ 9729
  54+ 9729 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 972C A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 972D 28 02            jr z,1F
  57+ 972F 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9731 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9734 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9736 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9739              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9739 2A CD 85         ld hl,(Puntero_mov)
  63+ 973C 7E               ld a,(hl)
  64+ 973D 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9740 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9741 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9744
  68+ 9744 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9747 A7               and a
  70+ 9748 20 0C            jr nz,12F
  71+ 974A 2A CD 85         ld hl,(Puntero_mov)
  72+ 974D 7E               ld a,(hl)
  73+ 974E A7               and a
  74+ 974F 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9751 E6 0F            and $0f
  76+ 9753 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9756              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9756 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9759 CB 7E            bit 7,(hl)
  80+ 975B 28 03            jr z,2F
  81+ 975D CD 4F 93         call Mov_down
  82+ 9760 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9763 CB 76            bit 6,(hl)
  84+ 9765 28 03            jr z,3F
  85+ 9767 CD 7D 93         call Mov_up
  86+ 976A 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 976D CB 6E            bit 5,(hl)
  88+ 976F 28 03            jr z,4F
  89+ 9771 CD AB 93         call Mov_right
  90+ 9774 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9777 CB 66            bit 4,(hl)
  92+ 9779 28 03            jr z,5F
  93+ 977B CD C9 94         call Mov_left
  94+ 977E
  95+ 977E              ; ---------- --------- --------- ---------- ----------
  96+ 977E
  97+ 977E 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9781 A7               and a
  99+ 9782 28 07            jr z,6F
 100+ 9784 3D               dec a
 101+ 9785 32 D1 85         ld (Repetimos_db),a
 102+ 9788 28 01            jr z,6f
 103+ 978A C9           11 ret
 104+ 978B 21 CF 85     6 ld hl,Contador_db_mov
 105+ 978E 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 978F 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9792 23               inc hl
 108+ 9793 22 CD 85         ld (Puntero_mov),hl
 109+ 9796 18 F2            jr 11B
 110+ 9798 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 979B 3A D0 85         ld a,(Incrementa_puntero)
 112+ 979E 47               ld b,a
 113+ 979F 23           8 inc hl
 114+ 97A0 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 97A2 5E               ld e,(hl)
 116+ 97A3 23               inc hl
 117+ 97A4 56               ld d,(hl)
 118+ 97A5 EB               ex de,hl
 119+ 97A6 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 97A9 18 DF            jr 11B
 121+ 97AB
 122+ 97AB              ; ---------- --------- --------- ---------- ----------
 123+ 97AB              ;
 124+ 97AB              ;   11/8/22
 125+ 97AB              ;
 126+ 97AB              ;   Prepara_Puntero_mov
 127+ 97AB
 128+ 97AB E5           Prepara_Puntero_mov push hl
 129+ 97AC D5               push de
 130+ 97AD 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 97B0 5E               ld e,(hl)
 132+ 97B1 23               inc hl
 133+ 97B2 56               ld d,(hl)
 134+ 97B3 EB               ex de,hl
 135+ 97B4 22 CD 85         ld (Puntero_mov),hl
 136+ 97B7 D1               pop de
 137+ 97B8 E1               pop hl
 138+ 97B9 C9               ret
 139+ 97BA
 140+ 97BA              ; ---------- --------- --------- ---------- ----------
 141+ 97BA              ;
 142+ 97BA              ;   11/8/22
 143+ 97BA              ;
 144+ 97BA              ;   Reinicia_el_movimiento
 145+ 97BA
 146+ 97BA CD AB 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 97BD AF               xor a
 148+ 97BE 32 CF 85         ld (Contador_db_mov),a
 149+ 97C1 32 D0 85         ld (Incrementa_puntero),a
 150+ 97C4 C3 29 97         jp Movimiento
 151+ 97C7 C9               ret
 152+ 97C8              ; ---------- --------- --------- ---------- ----------
 153+ 97C8
 154+ 97C8
 155+ 97C8
 156+ 97C8
 157+ 97C8
 158+ 97C8
 159+ 97C8
 160+ 97C8
 161+ 97C8
 162+ 97C8
 163+ 97C8
 164+ 97C8
 165+ 97C8
 166+ 97C8
 167+ 97C8
 168+ 97C8
 169+ 97C8
 170+ 97C8
# file closed: Patrones_de_mov.asm
1056  97C8              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 97C8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 97C8              ;
   3+ 97C8              ;	3/1/23
   4+ 97C8              ;
   5+ 97C8              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 97C8
   7+ 97C8              ;	ADC HL,SP	LD (addr),SP
   8+ 97C8              ;	ADD HL,SP	LD SP,(addr)
   9+ 97C8              ;	ADD IX,SP	LD SP,nn
  10+ 97C8              ; 	ADD IY,SP	LD SP,HL
  11+ 97C8              ;				LD SP,IX
  12+ 97C8              ;	DEC SP		LD SP,IY
  13+ 97C8
  14+ 97C8              ;	EX (SP),HL
  15+ 97C8              ;	EX (SP),IX
  16+ 97C8              ;	EX (SP),IY
  17+ 97C8
  18+ 97C8              ;	INC SP
  19+ 97C8
  20+ 97C8
  21+ 97C8                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 DF 85      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E5 85         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E3 85     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B DF 85  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1057  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1058  7FE6
1059  7FE6              	SAVESNA "Pruebas.sna", START
1060  7FE6
1061  7FE6
1062  7FE6
# file closed: Banco_de_pruebas.asm
