# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  40  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  41  FE01
  42  FE01              ;																		; Scanlines_album.
  43  FE01
  44  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  45  FE01
  46  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  47  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  48  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  49  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  50  FE01
  51  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  52  FE01              ;
  53  FE01              ;	13/08/24
  54  FE01              ;
  55  FE01
  56  FE01              	org $82f4
  57  82F4
  58  82F4 F5           	push af
  59  82F5 E5           	push hl
  60  82F6
  61  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  62  82F6 21 24 8C     	ld hl,Ctrl_3
  63  82F9 CB 46        	bit 0,(hl)
  64  82FB 28 FE        	jr z,$
  65  82FD              ;! -------------------
  66  82FD
  67  82FD              ; Disparos.
  68  82FD
  69  82FD              ;	call Pinta_disparos
  70  82FD
  71  82FD              ; Shield -----------------------
  72  82FD
  73  82FD              Temporizacion_shield
  74  82FD
  75  82FD 21 4E 8C     	ld hl,Shield
  76  8300 7E           	ld a,(hl)
  77  8301 A7           	and a
  78  8302 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  8304
  80  8304 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  8305
  82  8305 23           	inc hl
  83  8306 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  8307
  85  8307 20 17        	jr nz,Incrementa_FRAMES
  86  8309
  87  8309              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  8309
  89  8309              Cambio_de_estado
  90  8309
  91  8309              ;	Indica cambio de estado.
  92  8309
  93  8309 23           	inc hl						;	Sitúa en (Shield_3).
  94  830A
  95  830A CB 5E        	bit 3,(hl)
  96  830C 28 05        	jr z,2F
  97  830E
  98  830E CD 01 91     	call Inicia_Shield
  99  8311
 100  8311 18 0D        	jr Incrementa_FRAMES
 101  8313
 102  8313 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  8315
 104  8315              ;	Carga en (Shield_2) la siguiente temporización.
 105  8315
 106  8315 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 107  8318 23           	inc hl
 108  8319 22 4C 8C     	ld (Puntero_datos_shield),hl
 109  831C 7E           	ld a,(hl)
 110  831D 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8320
 112  8320              Incrementa_FRAMES
 113  8320
 114  8320 2A 78 5C     	ld hl,(FRAMES)
 115  8323 23           	inc hl
 116  8324 22 78 5C     	ld (FRAMES),hl
 117  8327
 118  8327 7C           	ld a,h
 119  8328 B5           	or l
 120  8329 20 04        	jr nz,1F
 121  832B
 122  832B 21 7A 5C     	ld hl,FRAMES_3
 123  832E 34           	inc (hl)
 124  832F
 125  832F D5           1 push de
 126  8330 C5           	push bc
 127  8331
 128  8331 CD 11 91     	call Actualiza_pantalla
 129  8334
 130  8334 C1           	pop bc
 131  8335 D1           	pop de
 132  8336 E1           	pop hl
 133  8337 F1           	pop af
 134  8338
 135  8338 FB           	ei
 136  8339
 137  8339 C9           	ret
 138  833A
 139  833A              ; --------------------------------------------------------------------------------
 140  833A
 141  833A              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833A              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833A              ;
   3+ 833A              ;	17/02/23
   4+ 833A              ;
   5+ 833A              ;	Sprites e índices.
   6+ 833A
   7+ 833A              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_de_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 142  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 144  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A2 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA2
  19+ 8BA2 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA3 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAB 01 02
  22+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB1 01 02
  23+ 8BB3
# file closed: Niveles.asm
 145  8BB3
 146  8BB3              ; --------------------------------------------------------------------------------
 147  8BB3              ;
 148  8BB3              ; 12/05/24
 149  8BB3              ;
 150  8BB3              ; Parámetros DRAW.
 151  8BB3              ;
 152  8BB3
 153  8BB3              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8BB3
 155  8BB3 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8BB4              ;															- Patrón de movimiento.
 157  8BB4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8BB5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8BB6
 160  8BB6 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8BB7              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8BB7
 163  8BB7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8BB7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8BB7              ; Ejemplos.
 166  8BB7
 167  8BB7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8BB7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8BB7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8BB7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8BB7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8BB7
 173  8BB7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8BB8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8BB8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8BB8
 177  8BB8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8BBA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8BBA
 180  8BBA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8BBC
 182  8BBC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8BBC
 184  8BBC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BBE              ;														; _palabras que componen el "movimiento_masticado".
 186  8BBE
 187  8BBE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BBE
 189  8BBE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BBF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BBF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BBF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BBF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BBF
 195  8BBF 00           Ctrl_2 db 0
 196  8BC0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC0              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC0              ;
 204  8BC0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC0              ;														BIT 4, ???
 210  8BC0              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC0
 212  8BC0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC1              ;
 218  8BC1              ; 														DESCRIPCIÖN:
 219  8BC1              ;
 220  8BC1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC1              ;
 234  8BC1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC1
 238  8BC1              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC1
 240  8BC1 00           Filas db 0												; Filas. [DRAW]
 241  8BC2 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BC3 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BC5 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BC7
 245  8BC7              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BC7
 247  8BC7 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BC8              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BC8              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BC8
 251  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BC8
 253  8BC8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BC8              ;
 255  8BC8              ;	COLORES: 0 ..... NEGRO
 256  8BC8              ;    		 1 ..... AZUL
 257  8BC8              ; 			 2 ..... ROJO
 258  8BC8              ;			 3 ..... MAGENTA
 259  8BC8              ; 			 4 ..... VERDE
 260  8BC8              ; 			 5 ..... CIAN
 261  8BC8              ;			 6 ..... AMARILLO
 262  8BC8              ; 			 7 ..... BLANCO
 263  8BC8
 264  8BC8 00 00        Indice_Sprite_der defw 0
 265  8BCA 00 00        Indice_Sprite_izq defw 0
 266  8BCC 00 00        Puntero_DESPLZ_der defw 0
 267  8BCE 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD0
 269  8BD0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BD2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BD3 00           Columnas db 0
 272  8BD4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BD6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BD7
 276  8BD7              ; variables de control general.
 277  8BD7
 278  8BD7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BD8
 280  8BD8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BD8
 282  8BD8              Perfiles_de_velocidad
 283  8BD8
 284  8BD8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BD9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BDA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BDB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BDC
 289  8BDC              ; Contadores de 16 bits.
 290  8BDC
 291  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BE4
 296  8BE4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BE4
 298  8BE4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BE6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BE8 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BEA              ;
 302  8BEA              ;
 303  8BEA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BEB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BEB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BEB 00           Incrementa_puntero_backup db 0
 307  8BEC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BEE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BEF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF0              ;
 313  8BF0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF0              ;
 317  8BF0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF0              ;
 322  8BF0              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF0
 326  8BF0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF1
 328  8BF1              ;														DESCRIPCIÓN:
 329  8BF1              ;
 330  8BF1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF1
 337  8BF1              ;														BIT 3, Recarga de nueva oleada.
 338  8BF1              ;														BIT 4, Recarga de nueva oleada.
 339  8BF1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF1              ;														BIT 6, **** Frame completo.
 341  8BF1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF1
 343  8BF1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BF3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BF3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BF3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BF3
 348  8BF3              ; Gestión de ENTIDADES y CAJAS.
 349  8BF3
 350  8BF3 00 00        Puntero_store_caja defw 0
 351  8BF5 00 00        Puntero_restore_caja defw 0
 352  8BF7 00 00        Indice_restore_caja defw 0
 353  8BF9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8BFA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8BFB 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8BFC
 357  8BFC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8BFE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C00              ;														; _ puntero (Indice_entidades).
 360  8C00
 361  8C00              ;---------------------------------------------------------------------------------------------------------------
 362  8C00              ;
 363  8C00              ;	11/09/24
 364  8C00              ;
 365  8C00              ;	Álbumes.
 366  8C00
 367  8C00 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C02              ;														; _variable para almacenar lo posición del puntero_
 369  8C02              ; 														; _de pila, SP.
 370  8C02 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C04              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C04
 373  8C04              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C04
 375  8C04 00 00        Album_de_pintado defw 0
 376  8C06 00 00        Album_de_borrado defw 0
 377  8C08 00 00        Album_de_pintado_Amadeus defw 0
 378  8C0A 00 00        Album_de_borrado_Amadeus defw 0
 379  8C0C 00 00        Album_de_pintado_disparos defw 0
 380  8C0E 00 00        Album_de_borrado_disparos defw 0
 381  8C10
 382  8C10 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C12 00           Num_de_bytes_album_de_disparos db 0
 384  8C13 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C14
 386  8C14 07           Numero_de_disparos_de_entidades db 7
 387  8C15
 388  8C15 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 389  8C16 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 390  8C17
 391  8C17 00 00        Techo_Scanlines_album defw 0
 392  8C19 00 00        Techo_Scanlines_album_2 defw 0
 393  8C1B 00           Switch db 0
 394  8C1C 00 00        Techo defw 0
 395  8C1E 00 00        Scanlines_album_SP defw 0
 396  8C20 00 89        India_SP defw Tabla_de_pintado
 397  8C22 03 89        India_2_SP defw Tabla_de_pintado+3
 398  8C24
 399  8C24 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 400  8C25              ;
 401  8C25              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 402  8C25              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 403  8C25              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 404  8C25              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 405  8C25              ;																Habilita el borrado/pintado de sprites.
 406  8C25              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 407  8C25              ;																_ a la baja.
 408  8C25              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 409  8C25              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 410  8C25              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 411  8C25              ; 																_ el último frame de la explosión de nuestra nave.
 412  8C25              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 413  8C25              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 414  8C25
 415  8C25 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 416  8C26              ;
 417  8C26              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 418  8C26              ;
 419  8C26              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 420  8C26              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 421  8C26              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 422  8C26              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 423  8C26              ;
 424  8C26              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 425  8C26              ;															_ masticados ya generados.
 426  8C26              ;
 427  8C26              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 428  8C26              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 429  8C26              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 430  8C26              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 431  8C26
 432  8C26 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 433  8C27              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 434  8C27              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 435  8C27
 436  8C27
 437  8C27
 438  8C27
 439  8C27
 440  8C27              ; Gestión de Disparos.
 441  8C27
 442  8C27 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 443  8C29 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 444  8C2B 00           Impacto2 db 0											; Byte de control de impactos.
 445  8C2C
 446  8C2C              ;
 447  8C2C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 448  8C2C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 449  8C2C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 450  8C2C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 451  8C2C
 452  8C2C
 453  8C2C
 454  8C2C
 455  8C2C
 456  8C2C
 457  8C2C
 458  8C2C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 459  8C2E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 460  8C2E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 461  8C2E
 462  8C2E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 463  8C30              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 464  8C30 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C33              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 466  8C33 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 467  8C36              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 468  8C36
 469  8C36              ;---------------------------------------------------------------------------------------------------------------
 470  8C36
 471  8C36              ; Relojes y temporizaciones.
 472  8C36
 473  8C36 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 474  8C37 05           Clock_explosion_Amadeus db 5
 475  8C38 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 476  8C39
 477  8C39 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 478  8C3B F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 479  8C3D 00           DB_RND_disparos db 0
 480  8C3E
 481  8C3E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 482  8C40 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 483  8C41              ;														; Repite la oleada de entidades.
 484  8C41 50           CLOCK_disparo_entidad_MASTER db $50						; Reloj, decreciente.
 485  8C42 50           CLOCK_disparo_entidad db $50
 486  8C43
 487  8C43              ;---------------------------------------------------------------------------------------------------------------
 488  8C43
 489  8C43              ; Gestión de NIVELES.
 490  8C43
 491  8C43 00           Nivel db 0												; Nivel actual del juego.
 492  8C44 00 00        Puntero_indice_NIVELES defw 0
 493  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 494  8C48              ; 														; _ que definen el NIVEL.
 495  8C48
 496  8C48              ; ---------------------------------------------------------------------------------------------------------------
 497  8C48
 498  8C48              ; Temporizaciones Shield.
 499  8C48
 500  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 501  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 502  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 503  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 504  8C50 00           Shield_3 db 0
 505  8C51
 506  8C51 06           Lives db 6
 507  8C52
 508  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 509  8C52              ;
 510  8C52              ;	5/1/24
 511  8C52
 512  8C52              START
 513  8C52
 514  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 515  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 516  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 517  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 518  8C5B F3           	DI
 519  8C5C
 520  8C5C              ; Limpiamos pantalla.
 521  8C5C
 522  8C5C 3E 07        	ld a,%00000111
 523  8C5E              ;	call Cls
 524  8C5E CD F6 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 525  8C61
 526  8C61              ; INICIALIZACIÓN.
 527  8C61
 528  8C61 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 529  8C63 CD 3A 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 530  8C66 CD 8D 8E     	call Extrae_numero_aleatorio_y_avanza
 531  8C69
 532  8C69 6F           	ld l,a
 533  8C6A 26 00        	ld h,0
 534  8C6C 22 3E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 535  8C6F
 536  8C6F              ;	Inicializa 1er Nivel.
 537  8C6F
 538  8C6F 21 94 8B     	ld hl,Indice_de_niveles
 539  8C72 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 540  8C75 CD 6A 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 541  8C78              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 542  8C78              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 543  8C78              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 544  8C78
 545  8C78              ;	Inicia los álbumes de líneas.
 546  8C78
 547  8C78 CD 46 90     	call Inicia_albumes_de_lineas
 548  8C7B              ;
 549  8C7B CD 56 90     	call Inicia_albumes_de_lineas_Amadeus
 550  8C7E CD 63 90     	call Inicia_albumes_de_disparos
 551  8C81
 552  8C81 CD 8C 90     	call Inicia_Puntero_Disparo_Entidades
 553  8C84
 554  8C84 CD AF 92     4 call Inicia_Entidades
 555  8C87 CD 12 93     	call Inicia_Amadeus
 556  8C8A
 557  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 558  8C8A              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 559  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 560  8C8A
 561  8C8A 11 6D 89     	ld de,Amadeus_BOX
 562  8C8D CD 65 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 563  8C90 CD 55 93     	call Limpiamos_bandeja_DRAW
 564  8C93
 565  8C93              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 566  8C93
 567  8C93 06 3C        	ld b,60
 568  8C95 CD 41 9D     2 call Amadeus_a_izquierda
 569  8C98 10 FB        	djnz 2B
 570  8C9A
 571  8C9A CD 24 90     	call Genera_datos_de_impresion_Amadeus
 572  8C9D
 573  8C9D              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 574  8C9D
 575  8C9D CD 76 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 576  8CA0              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 577  8CA0
 578  8CA0              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 579  8CA0              ; (Esto se dá cuando se inicia una nueva oleada).
 580  8CA0
 581  8CA0              ;	ld a,(Ctrl_1)
 582  8CA0              ;	bit 3,a
 583  8CA0              ;	jr nz,5F											 ; Loop
 584  8CA0
 585  8CA0              ;	ld de,Amadeus_db
 586  8CA0              ;	call Store_Amadeus
 587  8CA0
 588  8CA0              ; 	INICIA DISPAROS !!!!!
 589  8CA0
 590  8CA0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CA0
 592  8CA0              ;5 call Inicia_punteros_de_cajas
 593  8CA0              ;	call Restore_entidad
 594  8CA0
 595  8CA0              ;	ld a,(Ctrl_1)
 596  8CA0              ;	bit 3,a
 597  8CA0              ;	jr z,6F
 598  8CA0
 599  8CA0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CA0
 601  8CA0              ;	ld hl,Ctrl_1
 602  8CA0              ;	res 3,(hl)
 603  8CA0              ;	jr Main
 604  8CA0
 605  8CA0              ; Damos por concluida la construcción del FRAME.
 606  8CA0              ;
 607  8CA0
 608  8CA0 CD 01 91     	call Inicia_Shield
 609  8CA3
 610  8CA3
 611  8CA3 2A 1E 8C     6 ld hl,(Scanlines_album_SP)
 612  8CA6 22 17 8C     	ld (Techo_Scanlines_album),hl
 613  8CA9
 614  8CA9 2A 06 8C     	ld hl,(Album_de_borrado)
 615  8CAC 22 1E 8C     	ld (Scanlines_album_SP),hl
 616  8CAF
 617  8CAF 21 00 89     	ld hl,Tabla_de_pintado
 618  8CB2 22 20 8C     	ld (India_SP),hl
 619  8CB5
 620  8CB5 21 24 8C     	ld hl,Ctrl_3
 621  8CB8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CBA CB D6        	set 2,(hl)
 623  8CBC CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CBE
 625  8CBE FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CBF
 627  8CBF 76           	halt
 628  8CC0
 629  8CC0              ; ------------------------------------
 630  8CC0
 631  8CC0              Main
 632  8CC0              ;
 633  8CC0              ; 20/09/24
 634  8CC0
 635  8CC0              ; Gestión de disparos.
 636  8CC0
 637  8CC0              ;	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 638  8CC0              ;	call Limpia_album_de_borrado_disparos
 639  8CC0              ;	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 640  8CC0              ;	call Motor_de_disparos_entidades
 641  8CC0              ;	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 642  8CC0
 643  8CC0              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 644  8CC0              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 645  8CC0              ; Este hecho lo indica el bit2 de (Impacto2).
 646  8CC0
 647  8CC0 CD FD A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 648  8CC3
 649  8CC3              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 650  8CC3
 651  8CC3 21 42 8C     	ld hl,CLOCK_disparo_entidad
 652  8CC6 35           	dec (hl)
 653  8CC7 CC BC 8D     	call z,Autoriza_disparo_de_entidades
 654  8CCA
 655  8CCA 2A 3E 8C     	ld hl,(Clock_next_entity)
 656  8CCD ED 4B 78 5C  	ld bc,(FRAMES)
 657  8CD1 A7           	and a
 658  8CD2 ED 42        	sbc hl,bc
 659  8CD4 20 16        	jr nz,1F
 660  8CD6
 661  8CD6              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 662  8CD6              ; _ (Clock_next_entity) para la siguiente entidad.
 663  8CD6
 664  8CD6 3A FA 8B     	ld a,(Numero_parcial_de_entidades)
 665  8CD9 47           	ld b,a
 666  8CDA 3A FB 8B     	ld a,(Entidades_en_curso)
 667  8CDD B8           	cp b
 668  8CDE 28 0C        	jr z,1F
 669  8CE0 30 0A        	jr nc,1F
 670  8CE2
 671  8CE2 3C           	inc a
 672  8CE3 32 FB 8B     	ld (Entidades_en_curso),a
 673  8CE6
 674  8CE6              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 675  8CE6
 676  8CE6 CD 8D 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 677  8CE9 CD A9 8E     	call Define_Clock_next_entity
 678  8CEC
 679  8CEC 3A FB 8B     1 ld a,(Entidades_en_curso)
 680  8CEF A7           	and a
 681  8CF0 CA 6A 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 682  8CF3 47           	ld b,a												; No hay entidades que gestionar.
 683  8CF4
 684  8CF4              ; ( Código que ejecutamos con cada entidad: ).
 685  8CF4
 686  8CF4              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 687  8CF4              ;
 688  8CF4              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 689  8CF4
 690  8CF4 21 00 89     	ld hl,Tabla_de_pintado
 691  8CF7 22 20 8C     	ld (India_SP),hl
 692  8CFA
 693  8CFA 21 24 8C     	ld hl,Ctrl_3
 694  8CFD CB D6        	set 2,(hl)
 695  8CFF CD 49 8E     	call Change
 696  8D02
 697  8D02 C5           2 push bc 												; Nº de entidades en curso.
 698  8D03
 699  8D03 CD CE 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 700  8D06 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 701  8D0A
 702  8D0A              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 703  8D0A
 704  8D0A              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 705  8D0A              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 706  8D0A
 707  8D0A 3A 2B 8C     	ld a,(Impacto2)
 708  8D0D CB 5F        	bit 3,a
 709  8D0F C4 E7 9F     	call nz,Compara_con_coordenadas_de_disparo
 710  8D12
 711  8D12 3A B7 8B     	ld a,(Impacto)
 712  8D15 CB 4F        	bit 1,a
 713  8D17 C4 D5 91     	call nz,Genera_explosion
 714  8D1A 20 31        	jr nz,Gestiona_siguiente_entidad
 715  8D1C
 716  8D1C 3A B7 8B     	ld a,(Impacto)
 717  8D1F A7           	and a
 718  8D20 28 0C        	jr z,3F
 719  8D22
 720  8D22              ; IMPACTO en entidad por colisión con Amadeus.
 721  8D22
 722  8D22              ; 5/7/24
 723  8D22              ; Nota importante:
 724  8D22              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 725  8D22              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 726  8D22              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 727  8D22
 728  8D22 3A 71 89     	ld a,(Impacto_Amadeus)
 729  8D25 A7           	and a
 730  8D26 C4 D5 91     	call nz,Genera_explosion
 731  8D29 20 22        	jr nz,Gestiona_siguiente_entidad
 732  8D2B
 733  8D2B              ; Falsa colisión !!!
 734  8D2B
 735  8D2B 32 B7 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 736  8D2E
 737  8D2E              ; -------------------------------------------
 738  8D2E
 739  8D2E CD ED 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 740  8D31 CD 29 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 741  8D34 CD DD 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 742  8D37 CD D5 94     	call Genera_datos_de_impresion
 743  8D3A CD 78 93     	call Decrementa_Contador_de_mov_masticados
 744  8D3D
 745  8D3D              ; -------------------------------------------
 746  8D3D
 747  8D3D              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 748  8D3D
 749  8D3D 2A B8 8B     	ld hl,(Puntero_de_impresion)
 750  8D40 CD A9 94     	call Genera_coordenadas
 751  8D43
 752  8D43              ; TODO: Generamos disparo ???
 753  8D43
 754  8D43 3A 16 8C     	ld a,(Permiso_de_disparo_Entidades)
 755  8D46 A7           	and a
 756  8D47 C4 DE 8D     	call nz,Entidad_genera_disparo_si_procede
 757  8D4A
 758  8D4A CD 7B A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 759  8D4D
 760  8D4D              Gestiona_siguiente_entidad
 761  8D4D
 762  8D4D CD 4A 93      	call Store_Restore_cajas
 763  8D50 C1           	pop bc
 764  8D51 10 AF        	djnz 2B
 765  8D53
 766  8D53              ; Hemos gestionado todas las entidades.
 767  8D53              ; ----- ----- -----
 768  8D53
 769  8D53 CD 01 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 770  8D56 CD 18 8F     	call Ordena_tabla_de_impresion
 771  8D59 CD 76 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 772  8D5C
 773  8D5C              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 774  8D5C              ; Hemos gestionado todas las unidades.
 775  8D5C              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 776  8D5C
 777  8D5C              ;	ld hl,Ctrl_1
 778  8D5C              ;	res 2,(hl)
 779  8D5C
 780  8D5C CD BE 8E     	call Borra_diferencia
 781  8D5F
 782  8D5F 3A 24 8C     	ld a,(Ctrl_3)
 783  8D62 CB 5F        	bit 3,a
 784  8D64 20 04        	jr nz,Gestion_de_Amadeus
 785  8D66
 786  8D66 EB           	ex de,hl
 787  8D67 71           	ld (hl),c
 788  8D68 2C           	inc l
 789  8D69 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 790  8D6A
 791  8D6A              ;! GESTIONA AMADEUS !!!!!!!!!!
 792  8D6A
 793  8D6A              Gestion_de_Amadeus
 794  8D6A
 795  8D6A 21 24 8C     	ld hl,Ctrl_3
 796  8D6D CB 76        	bit 6,(hl)
 797  8D6F 28 13        	jr z,Amadeus_vivo
 798  8D71
 799  8D71              ; Amadeus ha sido destruido.
 800  8D71              ; Decrementa (Temp_new_live).
 801  8D71
 802  8D71 21 38 8C     	ld hl,Temp_new_live
 803  8D74 35           	dec (hl)
 804  8D75 20 26        	jr nz,End_frame
 805  8D77
 806  8D77              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 807  8D77
 808  8D77 21 51 8C     	ld hl,Lives
 809  8D7A 35           	dec (hl)
 810  8D7B
 811  8D7B              ;! Fin del juego
 812  8D7B
 813  8D7B F3           	di
 814  8D7C 28 FE        	jr z,$
 815  8D7E FB           	ei
 816  8D7F
 817  8D7F              ; Nueva nave.
 818  8D7F
 819  8D7F CD EF 8D     	call Reinicia_Amadeus
 820  8D82 18 19        	jr End_frame
 821  8D84
 822  8D84              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 823  8D84
 824  8D84              Amadeus_vivo
 825  8D84
 826  8D84 3A 71 89     	ld a,(Impacto_Amadeus)
 827  8D87 A7           	and a
 828  8D88 C4 05 92     	call nz, Genera_explosion_Amadeus
 829  8D8B 20 10        	jr nz, End_frame
 830  8D8D
 831  8D8D CD BB 91     	call Teclado
 832  8D90
 833  8D90 21 24 8C     	ld hl,Ctrl_3
 834  8D93 CB 6E        	bit 5,(hl)
 835  8D95 28 06        	jr z,End_frame
 836  8D97
 837  8D97              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 838  8D97
 839  8D97 CD 64 8E     	call Change_Amadeus
 840  8D9A CD 24 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 841  8D9D
 842  8D9D              End_frame
 843  8D9D
 844  8D9D              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 845  8D9D              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 846  8D9D
 847  8D9D CD 46 9F     	call Genera_datos_de_impresion_disparos_Entidades
 848  8DA0
 849  8DA0              ;	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 850  8DA0              ;	call Calcula_bytes_pintado_disparos
 851  8DA0              ;	call Limpia_album_de_pintado_disparos
 852  8DA0
 853  8DA0              ; ------------ ------------- --------------
 854  8DA0
 855  8DA0              ;!Debuggggg
 856  8DA0 2A 0C 8C     	ld hl,(Album_de_pintado_disparos)
 857  8DA3 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
 858  8DA6              ;!------------------------------
 859  8DA6
 860  8DA6 2A 06 8C     	ld hl,(Album_de_borrado)
 861  8DA9 22 1E 8C     	ld (Scanlines_album_SP),hl
 862  8DAC
 863  8DAC 21 24 8C     	ld hl,Ctrl_3
 864  8DAF CB C6        	set 0,(hl) 											; Indica Frame completo.
 865  8DB1 CB 9E        	res 3,(hl)
 866  8DB3 CB A6        	res 4,(hl)
 867  8DB5
 868  8DB5 AF           	xor a
 869  8DB6 D3 FE        	out ($fe),a
 870  8DB8
 871  8DB8 76           	halt
 872  8DB9
 873  8DB9              ; ----------------------------------------
 874  8DB9
 875  8DB9              ;	ld a,(Ctrl_1) 										; Existe Loop?
 876  8DB9              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 877  8DB9 CA C0 8C     	jp z,Main
 878  8DBC
 879  8DBC              ;------------------------------------------
 880  8DBC              ;
 881  8DBC              ;	14/09/24
 882  8DBC
 883  8DBC              Autoriza_disparo_de_entidades
 884  8DBC
 885  8DBC 3E 01        	ld a,1
 886  8DBE 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 887  8DC1
 888  8DC1 3A 41 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 889  8DC4 32 42 8C     	ld (CLOCK_disparo_entidad),a
 890  8DC7
 891  8DC7 2A 3B 8C     	ld hl,(RND_SP_Disparos)
 892  8DCA
 893  8DCA 7E           2 ld a,(hl)
 894  8DCB A7           	and a
 895  8DCC 28 08        	jr z,1F
 896  8DCE
 897  8DCE 32 3D 8C     	ld (DB_RND_disparos),a
 898  8DD1 23           	inc hl
 899  8DD2 22 3B 8C     	ld (RND_SP_Disparos),hl
 900  8DD5
 901  8DD5 C9           	ret
 902  8DD6
 903  8DD6 21 F6 88     1	ld hl,Numeros_aleatorios
 904  8DD9 22 3B 8C     	ld (RND_SP_Disparos),hl
 905  8DDC 18 EC        	jr 2B
 906  8DDE
 907  8DDE              ;------------------------------------------
 908  8DDE              ;
 909  8DDE              ;	14/09/24
 910  8DDE              ;
 911  8DDE              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 912  8DDE
 913  8DDE              Entidad_genera_disparo_si_procede
 914  8DDE
 915  8DDE 3A 3D 8C     	ld a,(DB_RND_disparos)
 916  8DE1 CB 4F        	bit 1,a
 917  8DE3 F5           	push af											; Guardamos FLAGS.
 918  8DE4
 919  8DE4 17           	rla
 920  8DE5 17           	rla
 921  8DE6
 922  8DE6 32 3D 8C     	ld (DB_RND_disparos),a
 923  8DE9
 924  8DE9 F1           	pop af
 925  8DEA C4 80 9F     	call nz,Genera_disparo_de_entidad_maldosa
 926  8DED
 927  8DED C9           	ret
 928  8DEE
 929  8DEE
 930  8DEE              ; RECARGA DE NUEVA OLEADA.
 931  8DEE
 932  8DEE              ;	ld a,(Contador_de_frames)
 933  8DEE              ;	ld b,a
 934  8DEE              ;	ld a,(Activa_recarga_cajas)
 935  8DEE              ;	cp b
 936  8DEE              ;	jr z,20F
 937  8DEE
 938  8DEE              ;	ld hl,Ctrl_1
 939  8DEE              ;	set 4,(hl)
 940  8DEE              ;	jp Main
 941  8DEE
 942  8DEE              ;20 ld hl,Ctrl_1
 943  8DEE              ;	res 4,(hl)
 944  8DEE
 945  8DEE              ;	ld a,(Contador_de_frames)
 946  8DEE
 947  8DEE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 948  8DEE              ;! _ IMPREDECIBLE !!!!
 949  8DEE
 950  8DEE              ;	add 10
 951  8DEE              ;	ld (Clock_next_entity),a
 952  8DEE
 953  8DEE              ;	jp 4B
 954  8DEE
 955  8DEE C9           	ret
 956  8DEF
 957  8DEF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 958  8DEF              ;
 959  8DEF              ;	16/11/23
 960  8DEF
 961  8DEF              ;;Gestiona_Amadeus
 962  8DEF
 963  8DEF              ;! Activa/desactiva impacto con Amadeus.
 964  8DEF
 965  8DEF              ;	ld a,(Impacto)
 966  8DEF              ;	and a
 967  8DEF              ;	jr nz,2F
 968  8DEF
 969  8DEF              ;;	call Mov_Amadeus
 970  8DEF
 971  8DEF              ;;2 ld a,(Ctrl_0)
 972  8DEF              ;;	bit 4,a
 973  8DEF              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 974  8DEF
 975  8DEF              ;;	call Guarda_foto_entidad_a_pintar
 976  8DEF              ;;	call Guarda_datos_de_borrado_Amadeus
 977  8DEF
 978  8DEF              ;;1 ld hl,Ctrl_0
 979  8DEF              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 980  8DEF
 981  8DEF              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 982  8DEF
 983  8DEF              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 984  8DEF
 985  8DEF              ;	call Calcula_numero_de_disparotes
 986  8DEF
 987  8DEF              ;;	ret
 988  8DEF
 989  8DEF              ; -----------------------------
 990  8DEF              ;
 991  8DEF              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 992  8DEF              ;
 993  8DEF              ;	INPUTS: B a de estar a "0".
 994  8DEF
 995  8DEF              ;Prepara_Borra_sprites
 996  8DEF
 997  8DEF              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 998  8DEF              ;	ld a,l
 999  8DEF              ;	ret z
1000  8DEF
1001  8DEF              ;	srl a
1002  8DEF
1003  8DEF              ;2 sub 16
1004  8DEF              ;	jr z,1F
1005  8DEF              ;	inc b
1006  8DEF              ;	jr 2B
1007  8DEF
1008  8DEF              ;1 inc b
1009  8DEF
1010  8DEF              ;	exx
1011  8DEF              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1012  8DEF              ;	exx
1013  8DEF
1014  8DEF              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1015  8DEF              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1016  8DEF
1017  8DEF              ;	ret
1018  8DEF
1019  8DEF              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1020  8DEF              ;
1021  8DEF              ;	24/07/24
1022  8DEF
1023  8DEF              Reinicia_Amadeus
1024  8DEF
1025  8DEF              ;	Reinicia posición y estado.
1026  8DEF
1027  8DEF 21 CF 50     	ld hl,$50cf
1028  8DF2 22 72 89     	ld (p.imp.amadeus),hl
1029  8DF5 21 F0 E0     	ld hl,$e0f0
1030  8DF8 22 74 89     	ld (Pamm_Amadeus),hl
1031  8DFB 21 3D 00     	ld hl,$003d
1032  8DFE 22 76 89     	ld (Comm_Amadeus),hl
1033  8E01
1034  8E01              ;	limpiamos el álbum de borrado.
1035  8E01
1036  8E01 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1037  8E04
1038  8E04 AF           	xor a
1039  8E05 77           	ld (hl),a
1040  8E06
1041  8E06 E5           	push hl
1042  8E07 D1           	pop de
1043  8E08 13           	inc de
1044  8E09
1045  8E09 01 23 00     	ld bc,35
1046  8E0C ED B0        	ldir
1047  8E0E
1048  8E0E CD 24 90     	call Genera_datos_de_impresion_Amadeus
1049  8E11
1050  8E11              ;	Reinicia temporizaciones.
1051  8E11
1052  8E11 CD 01 91     	call Inicia_Shield
1053  8E14
1054  8E14 3E 5A        	ld a,90
1055  8E16 32 4E 8C     	ld (Shield),a
1056  8E19
1057  8E19 3E 64        	ld a,100
1058  8E1B 32 38 8C     	ld (Temp_new_live),a
1059  8E1E
1060  8E1E              ; 	Restauramos el FLAG: Amadeus vivo.
1061  8E1E
1062  8E1E 21 24 8C     	ld hl,Ctrl_3
1063  8E21 CB B6        	res 6,(hl)
1064  8E23
1065  8E23              ;	Fuerza la impresión de la nave en el siguiente frame.
1066  8E23
1067  8E23 21 24 8C      	ld hl,Ctrl_3
1068  8E26 CB EE        	set 5,(hl)
1069  8E28
1070  8E28 C9           	ret
1071  8E29
1072  8E29              ; --------------------------------------------------------------------------------------------------------------
1073  8E29              ;
1074  8E29              ;	12/05/24
1075  8E29
1076  8E29 3A BE 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1077  8E2C CB 27        	sla a
1078  8E2E 32 BE 8B     	ld (Velocidad),a
1079  8E31 E6 10        	and $10
1080  8E33 C8           	ret z
1081  8E34
1082  8E34              ; Restaura (Velocidad) a razón del nº de vueltas.
1083  8E34
1084  8E34 3A B6 8B     	ld a,(Contador_de_vueltas)
1085  8E37 CB 2F        	sra a
1086  8E39 CB 2F        	sra a
1087  8E3B 32 BE 8B     	ld (Velocidad),a
1088  8E3E
1089  8E3E 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1090  8E41 23           	inc hl
1091  8E42 23           	inc hl
1092  8E43 23           	inc hl
1093  8E44 23           	inc hl
1094  8E45 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1095  8E48
1096  8E48 C9           	ret
1097  8E49
1098  8E49              ; --------------------------------------------------------------------------------------------------------------
1099  8E49              ;
1100  8E49              ;	25/08/24
1101  8E49
1102  8E49              Change
1103  8E49
1104  8E49 3A 1B 8C     	ld a,(Switch)
1105  8E4C EE 01        	xor 1
1106  8E4E 32 1B 8C     	ld (Switch),a
1107  8E51 2A 04 8C     	ld hl,(Album_de_pintado)
1108  8E54 ED 5B 06 8C  	ld de,(Album_de_borrado)
1109  8E58 EB           	ex de,hl
1110  8E59 22 04 8C     	ld (Album_de_pintado),hl
1111  8E5C 22 1E 8C     	ld (Scanlines_album_SP),hl
1112  8E5F ED 53 06 8C  	ld (Album_de_borrado),de
1113  8E63 C9           	ret
1114  8E64
1115  8E64              Change_Amadeus
1116  8E64
1117  8E64 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1118  8E67 ED 5B 0A 8C  	ld de,(Album_de_borrado_Amadeus)
1119  8E6B EB           	ex de,hl
1120  8E6C 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1121  8E6F ED 53 0A 8C  	ld (Album_de_borrado_Amadeus),de
1122  8E73 C9           	ret
1123  8E74
1124  8E74              Change_Disparos
1125  8E74
1126  8E74 2A 0C 8C     	ld hl,(Album_de_pintado_disparos)
1127  8E77 ED 5B 0E 8C  	ld de,(Album_de_borrado_disparos)
1128  8E7B EB           	ex de,hl
1129  8E7C 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1130  8E7F ED 53 0E 8C  	ld (Album_de_borrado_disparos),de
1131  8E83 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1132  8E86
1133  8E86 3A 12 8C     	ld a,(Num_de_bytes_album_de_disparos)
1134  8E89 32 13 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1135  8E8C
1136  8E8C C9           	ret
1137  8E8D
1138  8E8D              ; ------------------------------------
1139  8E8D              ;
1140  8E8D              ; 1/05/24
1141  8E8D
1142  8E8D              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1143  8E8D              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1144  8E8D
1145  8E8D              ;	DESTRUYE: HL,DE,A
1146  8E8D              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1147  8E8D
1148  8E8D              ;	Variables implicadas: (RND_SP).
1149  8E8D
1150  8E8D              Extrae_numero_aleatorio_y_avanza
1151  8E8D
1152  8E8D 21 00 89     	ld hl,Tabla_de_pintado
1153  8E90 EB           	ex de,hl
1154  8E91 2A 39 8C     	ld hl,(RND_SP)
1155  8E94 EB           	ex de,hl
1156  8E95 A7           	and a
1157  8E96 ED 52        	sbc hl,de
1158  8E98
1159  8E98 2A 39 8C     	ld hl,(RND_SP)
1160  8E9B 20 06        	jr nz,1F
1161  8E9D
1162  8E9D              ; Sitúa HL al principio de la tabla de nº aleatorios.
1163  8E9D
1164  8E9D 21 F6 88     	ld hl,Numeros_aleatorios
1165  8EA0 22 39 8C     	ld (RND_SP),HL
1166  8EA3
1167  8EA3              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1168  8EA3
1169  8EA3 7E           1 ld a,(hl)
1170  8EA4 23           	inc hl
1171  8EA5 22 39 8C     	ld (RND_SP),hl
1172  8EA8 C9           	ret
1173  8EA9
1174  8EA9              ; ------------------------------------
1175  8EA9              ;
1176  8EA9              ; 1/05/24
1177  8EA9
1178  8EA9              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1179  8EA9              ; (1 a 4 segundos).
1180  8EA9              ; Actualizamos (Clock_next_entity) con A.
1181  8EA9
1182  8EA9              ;	DESTRUYE: A y B.
1183  8EA9              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1184  8EA9              ;			 Actualiza (Clock_next_entity) con A.
1185  8EA9
1186  8EA9              ;	Variables implicadas: (Clock_next_entity).
1187  8EA9
1188  8EA9              ; Notas:
1189  8EA9
1190  8EA9              ; 	$32 1 seg.
1191  8EA9              ; 	$64 2 seg.
1192  8EA9              ; 	$96 3 seg.
1193  8EA9              ; 	$c8 4 seg.
1194  8EA9              ; 	$fa 5 seg.
1195  8EA9
1196  8EA9              ; $ffff 1310,7 seg, 22 minutos.
1197  8EA9
1198  8EA9              ;	$0100  5 seg. aproximadamente.
1199  8EA9              ;	$0200 10 seg. aproximadamente.
1200  8EA9              ;	$0300 15 seg. aproximadamente.
1201  8EA9              ;	$0400 20 seg. aproximadamente.
1202  8EA9              ;	$0500 25 seg. aproximadamente.
1203  8EA9              ;	$0600 30 seg. aproximadamente.
1204  8EA9
1205  8EA9              Define_Clock_next_entity
1206  8EA9
1207  8EA9 FE 34        	cp $34
1208  8EAB 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1209  8EAD
1210  8EAD              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1211  8EAD
1212  8EAD 4F           3 ld c,a
1213  8EAE 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1214  8EB0 2A 78 5C     	ld hl,(FRAMES)
1215  8EB3 A7           	and a
1216  8EB4 ED 4A        	adc hl,bc
1217  8EB6 22 3E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1218  8EB9 C9           	ret
1219  8EBA
1220  8EBA 3E 34        1 ld a,$34
1221  8EBC 18 EF        	jr 3B
1222  8EBE
1223  8EBE              ; ------------------------------------
1224  8EBE              ;
1225  8EBE              ; 18/03/24
1226  8EBE
1227  8EBE              Borra_diferencia
1228  8EBE
1229  8EBE ED 4B 1E 8C  	ld bc,(Scanlines_album_SP)
1230  8EC2
1231  8EC2 3A 1B 8C     	ld a,(Switch)
1232  8EC5 A7           	and a
1233  8EC6 28 08        	jr z,2F
1234  8EC8
1235  8EC8 2A 19 8C     	ld hl,(Techo_Scanlines_album_2)
1236  8ECB 11 19 8C     	ld de,Techo_Scanlines_album_2
1237  8ECE 18 06        	jr 3F
1238  8ED0
1239  8ED0 2A 17 8C     2 ld hl,(Techo_Scanlines_album)
1240  8ED3 11 17 8C     	ld de,Techo_Scanlines_album
1241  8ED6
1242  8ED6              ; Diferencia.
1243  8ED6
1244  8ED6 ED 42        3 sbc hl,bc
1245  8ED8
1246  8ED8 C8           	ret z
1247  8ED9 D8           	ret c
1248  8EDA
1249  8EDA              ; Nuevo techo, (más bajo que el anterior).
1250  8EDA              ; Fijamos nuevo techo y borramos bytes sobrantes.
1251  8EDA
1252  8EDA EB           	ex de,hl
1253  8EDB
1254  8EDB 71           	ld (hl),c
1255  8EDC 2C           	inc l
1256  8EDD 70           	ld (hl),b
1257  8EDE
1258  8EDE AF           	xor a
1259  8EDF 43           	ld b,e
1260  8EE0
1261  8EE0 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1262  8EE3
1263  8EE3 77           1 ld (hl),a
1264  8EE4 23           	inc hl
1265  8EE5 10 FC        	djnz 1B
1266  8EE7
1267  8EE7              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1268  8EE7
1269  8EE7 21 24 8C     	ld hl,Ctrl_3
1270  8EEA CB DE        	set 3,(hl)
1271  8EEC
1272  8EEC C9           	ret
1273  8EED
1274  8EED              ; --------------------------------------------------------------------------------------------------------------
1275  8EED              ;
1276  8EED              ;	26/3/24
1277  8EED
1278  8EED              Recauda_informacion_de_entidad_en_curso
1279  8EED
1280  8EED              ; Almacena la Coordenada Y de la entidad en curso.
1281  8EED
1282  8EED              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1283  8EED
1284  8EED 3A B5 8B     	ld a,(Coordenada_y)
1285  8EF0 2A 20 8C     	ld hl,(India_SP)
1286  8EF3 77           	ld (hl),a
1287  8EF4 2C           	inc l
1288  8EF5
1289  8EF5              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1290  8EF5
1291  8EF5 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
1292  8EF9
1293  8EF9 73           	ld (hl),e
1294  8EFA 2C           	inc l
1295  8EFB 72           	ld (hl),d
1296  8EFC 2C           	inc l
1297  8EFD
1298  8EFD 22 20 8C     	ld (India_SP),hl
1299  8F00
1300  8F00 C9           	ret
1301  8F01
1302  8F01              ; --------------------------------------------------------------------------------------------------------------
1303  8F01              ;
1304  8F01              ;	27/03/24
1305  8F01              ;
1306  8F01
1307  8F01              Inicializa_India_y_limpia_Tabla_de_impresion
1308  8F01
1309  8F01 2A 20 8C     	ld hl,(India_SP)
1310  8F04 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1311  8F07
1312  8F07 79           	ld a,c
1313  8F08 95           	sub l
1314  8F09 28 06        	jr z,2F
1315  8F0B 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1316  8F0C              ;														; _ y pasamos a inicializar (India_SP).
1317  8F0C AF           	xor a
1318  8F0D
1319  8F0D 77           1 ld (hl),a
1320  8F0E 2C           	inc l
1321  8F0F 10 FC        	djnz 1B												; Limpia Tabla.
1322  8F11
1323  8F11 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1324  8F14 22 20 8C     	ld (India_SP),hl
1325  8F17
1326  8F17 C9           	ret
1327  8F18
1328  8F18              ; --------------------------------------------------------------------------------------------------------------
1329  8F18              ;
1330  8F18              ;	31/3/24
1331  8F18
1332  8F18              Ordena_tabla_de_impresion
1333  8F18
1334  8F18              ; 5794 T/states.
1335  8F18              ; 6278 T/states.
1336  8F18              ; 5310 T/states.
1337  8F18
1338  8F18              ; Inicializamos punteros (India_SP) e (India_2_SP).
1339  8F18              ; Inicializamos contador de comparaciones, [C].
1340  8F18              ; Cargamos los registros A y B para efectuar comparación.
1341  8F18
1342  8F18 FD 2E 00     	ld iyl,0
1343  8F1B
1344  8F1B 3A FB 8B     	ld a,(Entidades_en_curso)
1345  8F1E FE 04        	cp 4 	;	4
1346  8F20 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1347  8F21
1348  8F21 3D           	dec a
1349  8F22 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1350  8F23 51           	ld d,c 										; Copia de respaldo.
1351  8F24
1352  8F24 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1353  8F25
1354  8F25 21 03 89     	ld hl,Tabla_de_pintado+3
1355  8F28 46           	ld b,(hl)
1356  8F29 22 22 8C     	ld (India_2_SP),hl
1357  8F2C
1358  8F2C B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1359  8F2D DC 55 8F     	call c, Avanza_India_2_SP
1360  8F30 CC 55 8F     	call z, Avanza_India_2_SP
1361  8F33
1362  8F33 FD 2D        	dec iyl
1363  8F35 28 18        	jr z,2F
1364  8F37
1365  8F37
1366  8F37              ; --------------------------------------------------------------------------------------------------------------
1367  8F37              ;
1368  8F37              ;	7/4/24
1369  8F37
1370  8F37              Trueque
1371  8F37
1372  8F37              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1373  8F37              ;  			A contiene en nº de fila de (India_SP).
1374  8F37              ;			HL contiene (India_2_SP).
1375  8F37
1376  8F37 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1377  8F38 E5           	push hl										; Preservo (India_2_SP).
1378  8F39
1379  8F39 ED 5B 20 8C  	ld de,(India_SP)
1380  8F3D EB           	ex de,hl
1381  8F3E 70           	ld (hl),b
1382  8F3F 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1383  8F40
1384  8F40 CD 81 8F     	call Intercambia_1_byte
1385  8F43 CD 81 8F     	call Intercambia_1_byte
1386  8F46
1387  8F46
1388  8F46              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1389  8F46              ; Recuperamos (India_2_SP) en HL.
1390  8F46
1391  8F46 2A 20 8C     	ld hl,(India_SP)
1392  8F49 7E           	ld a,(hl)
1393  8F4A
1394  8F4A E1           	pop hl
1395  8F4B D1           	pop de
1396  8F4C
1397  8F4C              ; --------------------------------------------------------------------------------------------------------------
1398  8F4C
1399  8F4C CD 55 8F     	call Avanza_India_2_SP
1400  8F4F
1401  8F4F 14           2 inc d
1402  8F50 15           	dec d
1403  8F51 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1404  8F52 18 D8        	jr 1B
1405  8F54
1406  8F54 C9           	ret
1407  8F55
1408  8F55              ; ----- ----- ----- ----- -----
1409  8F55
1410  8F55              Avanza_India_2_SP
1411  8F55
1412  8F55 0D           	dec c
1413  8F56 28 0A        	jr z,Avanza_punteros_indios
1414  8F58
1415  8F58 FD 2C        	inc iyl
1416  8F5A
1417  8F5A 2C           	inc l
1418  8F5B 2C           	inc l
1419  8F5C 2C           	inc l
1420  8F5D
1421  8F5D 46           	ld b,(hl)
1422  8F5E 22 22 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1423  8F61
1424  8F61 C9           	ret
1425  8F62
1426  8F62              ; ----- ----- ----- ----- -----
1427  8F62
1428  8F62              Avanza_punteros_indios
1429  8F62
1430  8F62 15           	dec d
1431  8F63 28 15        	jr z,Prepara_salida
1432  8F65
1433  8F65 4A           	ld c,d
1434  8F66
1435  8F66 2A 20 8C     	ld hl,(India_SP)
1436  8F69 2C           	inc l
1437  8F6A 2C           	inc l
1438  8F6B 2C           	inc l
1439  8F6C 7E           	ld a,(hl)
1440  8F6D 22 20 8C     	ld (India_SP),hl
1441  8F70
1442  8F70 2C           	inc l
1443  8F71 2C           	inc l
1444  8F72 2C           	inc l
1445  8F73 46           	ld b,(hl)
1446  8F74 22 22 8C     	ld (India_2_SP),hl
1447  8F77
1448  8F77 FD 2C        	inc iyl
1449  8F79
1450  8F79 C9           	ret
1451  8F7A
1452  8F7A              Prepara_salida
1453  8F7A
1454  8F7A 21 00 89     	ld hl,Tabla_de_pintado
1455  8F7D 22 20 8C     	ld (India_SP),hl
1456  8F80 C9           	ret
1457  8F81
1458  8F81
1459  8F81 2C           Intercambia_1_byte inc l
1460  8F82 1C           	inc e
1461  8F83 46           	ld b,(hl)
1462  8F84 1A           	ld a,(de)
1463  8F85 EB           	ex de,hl
1464  8F86 70           	ld (hl),b
1465  8F87 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1466  8F88 C9           	ret
1467  8F89
1468  8F89              ; -----------------------------------------------------------------------------------
1469  8F89              ;
1470  8F89              ;	20/01/24
1471  8F89              ;
1472  8F89              ;
1473  8F89
1474  8F89              Construye_movimientos_masticados_entidad
1475  8F89
1476  8F89 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1477  8F8C E5           	push hl
1478  8F8D CD D0 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1479  8F90              ;															; _ el (Contador_de_mov_masticados).
1480  8F90 CD 99 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1481  8F93              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1482  8F93 CD C7 99     	call Recompone_posicion_inicio
1483  8F96
1484  8F96 CD F7 96     1 call Draw
1485  8F99 CD B5 8F     	call Guarda_movimiento_masticado
1486  8F9C
1487  8F9C CD 74 9D     	call Movimiento
1488  8F9F
1489  8F9F 3A 24 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1490  8FA2 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1491  8FA4 28 F0        	jr z,1B
1492  8FA6
1493  8FA6              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1494  8FA6              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1495  8FA6
1496  8FA6 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1497  8FA7 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1498  8FAA
1499  8FAA              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1500  8FAA
1501  8FAA CD D8 9E     	call Situa_en_contador_general_de_mov_masticados
1502  8FAD
1503  8FAD              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1504  8FAD              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1505  8FAD
1506  8FAD ED 4B BC 8B  	ld bc,(Contador_de_mov_masticados)
1507  8FB1
1508  8FB1 71           	ld (hl),c
1509  8FB2 23           	inc hl
1510  8FB3 70           	ld (hl),b
1511  8FB4
1512  8FB4 C9           	ret
1513  8FB5
1514  8FB5              ; -----------------------------------------------------------------------------------
1515  8FB5              ;
1516  8FB5              ;	28/12/23
1517  8FB5              ;
1518  8FB5              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1519  8FB5              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1520  8FB5
1521  8FB5              Guarda_movimiento_masticado
1522  8FB5
1523  8FB5 ED 73 00 8C  	ld (Stack),sp
1524  8FB9 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1525  8FBD
1526  8FBD DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1527  8FBF FD E5            push iy 												; Pushea Puntero_objeto.
1528  8FC1
1529  8FC1 ED 7B 00 8C      ld sp,(Stack)
1530  8FC5
1531  8FC5 2A BC 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1532  8FC8 23           	inc hl
1533  8FC9 22 BC 8B     	ld (Contador_de_mov_masticados),hl
1534  8FCC
1535  8FCC CD D0 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1536  8FCF              ;															; _ el (Contador_de_mov_masticados).
1537  8FCF C9               ret
1538  8FD0
1539  8FD0              ; --------------------------------------------------------------------------------------------------------------
1540  8FD0              ;
1541  8FD0              ;	12/1/24
1542  8FD0              ;
1543  8FD0              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1544  8FD0
1545  8FD0              Actualiza_Puntero_de_almacen_de_mov_masticados
1546  8FD0
1547  8FD0 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1548  8FD3 01 04 00     	ld bc,4
1549  8FD6 A7           	and a
1550  8FD7 ED 4A        	adc hl,bc
1551  8FD9 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1552  8FDC C9           	ret
1553  8FDD
1554  8FDD              ; --------------------------------------------------------------------------------------------------------------
1555  8FDD              ;
1556  8FDD              ;	24/03/24
1557  8FDD              ;
1558  8FDD              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1559  8FDD              ;
1560  8FDD              ;	IX contiene el puntero de impresión.
1561  8FDD              ;	DE contiene (Puntero_objeto).
1562  8FDD
1563  8FDD
1564  8FDD              Cargamos_registros_con_mov_masticado
1565  8FDD
1566  8FDD ED 73 00 8C  	ld (Stack),sp
1567  8FE1 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1568  8FE5
1569  8FE5 D1           	pop de 															; DE contiene Puntero_objeto
1570  8FE6 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1571  8FE8
1572  8FE8 ED 73 BA 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1573  8FEC ED 7B 00 8C  	ld sp,(Stack)
1574  8FF0
1575  8FF0 7B           	ld a,e
1576  8FF1 82           	add d															; Comprueba si ya no hay datos en el almacén.
1577  8FF2
1578  8FF2 CC 80 93     	call z,Reinicia_entidad_maliciosa
1579  8FF5
1580  8FF5 C9           	ret
1581  8FF6
1582  8FF6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1583  8FF6              ;
1584  8FF6              ;	22/7/24
1585  8FF6
1586  8FF6              Cargamos_registros_con_explosion
1587  8FF6
1588  8FF6
1589  8FF6 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1590  8FF9 CD 93 90     	call Extrae_address
1591  8FFC
1592  8FFC 5D           	ld e,l
1593  8FFD 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1594  8FFE
1595  8FFE DD 2A B8 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1596  9002
1597  9002 C9           	ret
1598  9003
1599  9003
1600  9003              Cargamos_registros_con_explosion_Amadeus
1601  9003
1602  9003 2A 74 89     	ld hl,(Pamm_Amadeus)
1603  9006 CD 93 90     	call Extrae_address
1604  9009
1605  9009 5D           	ld e,l
1606  900A 54           	ld d,h
1607  900B
1608  900B DD 2A 72 89  	ld ix,(p.imp.amadeus)
1609  900F
1610  900F C9           	ret
1611  9010
1612  9010              ; --------------------------------------------------------------------------------------------------------------
1613  9010              ;
1614  9010              ;	17/06/24
1615  9010              ;
1616  9010              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1617  9010              ;
1618  9010              ;	IX contiene el puntero de impresión.
1619  9010              ;	DE contiene (Puntero_objeto).
1620  9010
1621  9010
1622  9010              Cargamos_registros_con_mov_masticado_Amadeus
1623  9010
1624  9010 ED 73 00 8C  	ld (Stack),sp
1625  9014 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1626  9018 D1           	pop de 															; DE contiene Puntero_objeto
1627  9019 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1628  901B DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1629  901F ED 7B 00 8C  	ld sp,(Stack)
1630  9023 C9           	ret
1631  9024
1632  9024              ; ---------------------------------------------------------------------------------------------------------------------
1633  9024              ;
1634  9024              ;	18/6/24
1635  9024              ;
1636  9024              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1637  9024
1638  9024              Genera_datos_de_impresion_Amadeus
1639  9024
1640  9024 3A 71 89     	ld a,(Impacto_Amadeus)
1641  9027 A7           	and a
1642  9028 20 03        	jr nz,1F
1643  902A
1644  902A              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1645  902A              ; _apuntando a la correspondiente explosión.
1646  902A
1647  902A CD 10 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1648  902D
1649  902D DD 7D        1 ld a,ixl
1650  902F E6 1F        	and $1f
1651  9031 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1652  9034
1653  9034 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1654  9037 E5           	push hl
1655  9038
1656  9038 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1657  903B 22 1E 8C     	ld (Scanlines_album_SP),hl
1658  903E
1659  903E CD D5 94     	call Genera_datos_de_impresion
1660  9041
1661  9041 E1           	pop hl
1662  9042 22 1E 8C     	ld (Scanlines_album_SP),hl
1663  9045
1664  9045 C9           	ret
1665  9046
1666  9046              ; ---------------------------------------------------------------------------------------------------------------------
1667  9046              ;
1668  9046              ;	13/03/24
1669  9046              ;
1670  9046              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1671  9046
1672  9046              Inicia_albumes_de_lineas
1673  9046
1674  9046 21 00 80     	ld hl,Scanlines_album
1675  9049 22 04 8C     	ld (Album_de_pintado),hl
1676  904C 22 1E 8C     	ld (Scanlines_album_SP),hl
1677  904F
1678  904F 21 1A 81     	ld hl,Scanlines_album_2
1679  9052 22 06 8C     	ld (Album_de_borrado),hl
1680  9055
1681  9055 C9           	ret
1682  9056
1683  9056              Inicia_albumes_de_lineas_Amadeus
1684  9056
1685  9056 21 34 82     	ld hl,Amadeus_scanlines_album
1686  9059 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1687  905C 21 58 82     	ld hl,Amadeus_scanlines_album_2
1688  905F 22 0A 8C     	ld (Album_de_borrado_Amadeus),hl
1689  9062
1690  9062 C9           	ret
1691  9063
1692  9063              Inicia_albumes_de_disparos
1693  9063
1694  9063 21 7C 82     	ld hl,Disparos_scanlines_album
1695  9066 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1696  9069 21 B8 82     	ld hl,Disparos_scanlines_album_2
1697  906C 22 0E 8C     	ld (Album_de_borrado_disparos),hl
1698  906F
1699  906F 21 7C 82     	ld hl,Disparos_scanlines_album
1700  9072 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1701  9075
1702  9075 C9           	ret
1703  9076
1704  9076              ; ---------------------------------------------------------------------------------------------------------------------
1705  9076              ;
1706  9076              ; 8/1/23
1707  9076              ;
1708  9076              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1709  9076              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1710  9076              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1711  9076
1712  9076              ; Destruye HL y DE !!!!!
1713  9076
1714  9076              Inicia_punteros_de_cajas
1715  9076
1716  9076 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1717  9079 CD 93 90         call Extrae_address
1718  907C 22 F3 8B         ld (Puntero_store_caja),hl
1719  907F 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1720  9082 22 F7 8B     	ld (Indice_restore_caja),hl
1721  9085 CD 93 90     	call Extrae_address
1722  9088 22 F5 8B     	ld (Puntero_restore_caja),hl
1723  908B C9               ret
1724  908C
1725  908C              ; *************************************************************************************************************************************************************
1726  908C              ;
1727  908C              ; 8/1/23
1728  908C              ;
1729  908C              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1730  908C
1731  908C 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1732  908F 22 27 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1733  9092 C9           	ret
1734  9093
1735  9093              ; *************************************************************************************************************************************************************
1736  9093              ;
1737  9093              ; 20/10/22
1738  9093              ;
1739  9093              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1740  9093              ;
1741  9093              ; Destruye el puntero y DE !!!!!
1742  9093
1743  9093 5E           Extrae_address ld e,(hl)
1744  9094 23           	inc hl
1745  9095 56           	ld d,(hl)
1746  9096 2B           	dec hl
1747  9097 EB           	ex de,hl
1748  9098 C9           	ret
1749  9099
1750  9099              ; *************************************************************************************************************************************************************
1751  9099              ;
1752  9099              ;	20/1/24
1753  9099              ;
1754  9099              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1755  9099              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1756  9099              ;
1757  9099              ;   Destruye HL y BC !!!!!,
1758  9099              ;
1759  9099              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1760  9099              ;					"0" ..... Izquierda.
1761  9099
1762  9099              Inicia_Puntero_objeto
1763  9099
1764  9099 3A D2 8B     	ld a,(Cuad_objeto)
1765  909C E6 01        	and 1
1766  909E F5           	push af
1767  909F CC BB 90     	call z,Inicia_puntero_objeto_izq
1768  90A2 F1           	pop af
1769  90A3 C8           	ret z
1770  90A4 CD A8 90     	call Inicia_puntero_objeto_der
1771  90A7 C9           	ret
1772  90A8
1773  90A8              ; Arrancamos desde la parte izquierda de la pantalla.
1774  90A8              ; Iniciamos (Indice_Sprite_der).
1775  90A8
1776  90A8 2A C8 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1777  90AB 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
1778  90AE CD 93 90     	call Extrae_address
1779  90B1 22 C5 8B     	ld (Puntero_objeto),hl
1780  90B4
1781  90B4 2A CA 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1782  90B7 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1783  90BA C9           	ret
1784  90BB
1785  90BB              ; Arrancamos desde la parte derecha de la pantalla.
1786  90BB              ; Iniciamos (Indice_Sprite_izq).
1787  90BB
1788  90BB 2A CA 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1789  90BE 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1790  90C1 CD 93 90     	call Extrae_address
1791  90C4 22 C5 8B     	ld (Puntero_objeto),hl
1792  90C7
1793  90C7 2A C8 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1794  90CA 22 CC 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1795  90CD C9           	ret
1796  90CE
1797  90CE              ; **************************************************************************************************
1798  90CE              ;
1799  90CE              ;	06/07/24
1800  90CE              ;
1801  90CE              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1802  90CE
1803  90CE              Restore_entidad
1804  90CE
1805  90CE 2A F3 8B     	ld hl,(Puntero_store_caja)
1806  90D1 7E           	ld a,(hl)
1807  90D2 A7           	and a
1808  90D3 CC E1 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1809  90D6 28 F6        	jr z,Restore_entidad
1810  90D8
1811  90D8 11 B3 8B     	ld de,Bandeja_DRAW
1812  90DB 01 0C 00     	ld bc,12
1813  90DE ED B0        	ldir
1814  90E0 C9           	ret
1815  90E1
1816  90E1              ; **************************************************************************************************
1817  90E1              ;
1818  90E1              ;	08/05/23
1819  90E1              ;
1820  90E1              ;	Incrementamos los dos punteros de entidades. (+1).
1821  90E1
1822  90E1              Incrementa_punteros_de_cajas
1823  90E1
1824  90E1 2A F5 8B     	ld hl,(Puntero_restore_caja)
1825  90E4 22 F3 8B     	ld (Puntero_store_caja),hl
1826  90E7 2A F7 8B     	ld hl,(Indice_restore_caja)
1827  90EA 23           	inc hl
1828  90EB 23           	inc hl
1829  90EC 22 F7 8B     	ld (Indice_restore_caja),hl
1830  90EF CD 93 90         call Extrae_address
1831  90F2 22 F5 8B         ld (Puntero_restore_caja),hl
1832  90F5 C9               ret
1833  90F6
1834  90F6              ; -----------------------------------------------------------
1835  90F6
1836  90F6              ; Teclado.
1837  90F6
1838  90F6 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1839  90F8 DB FE        	in a,($fe)
1840  90FA E6 01        	and $01
1841  90FC 28 02        	jr z,1f
1842  90FE 18 F6        	jr Pulsa_ENTER
1843  9100 C9           1 ret
1844  9101
1845  9101              ; **************************************************************************************************
1846  9101              ;
1847  9101              ; Temporización.
1848  9101
1849  9101              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1850  9101              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1851  9101              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1852  9101              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1853  9101
1854  9101              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1855  9101              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1856  9101              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1857  9101
1858  9101              ; A partir de $4f61 no hace falta DELAY.
1859  9101
1860  9101              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1861  9101
1862  9101              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1863  9101              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1864  9101              ;	LD A,B
1865  9101              ;	AND A
1866  9101              ;	JR NZ,wait
1867  9101              ;	RET
1868  9101
1869  9101              ; ---------------------------------------------------------------------------------------------------------------
1870  9101              ;
1871  9101              ;	13/07/24
1872  9101              ;
1873  9101
1874  9101              Inicia_Shield
1875  9101
1876  9101 21 48 8C     	ld hl,Datos_Shield
1877  9104 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1878  9107
1879  9107 7E           	ld a,(hl)
1880  9108 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1881  910B
1882  910B 3E 01        	ld a,1
1883  910D 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1884  9110
1885  9110 C9           	ret
1886  9111
1887  9111              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1888  9111              ;
1889  9111              ;	4/6/24
1890  9111              ;
1891  9111              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1892  9111              ;
1893  9111              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1894  9111              ;
1895  9111
1896  9111              Actualiza_pantalla
1897  9111
1898  9111 3E 02        	ld a,2
1899  9113 D3 FE        	out ($fe),a
1900  9115
1901  9115 3A 24 8C     	ld a,(Ctrl_3)
1902  9118 CB 57        	bit 2,a
1903  911A 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1904  911C
1905  911C              Borrando_entidades
1906  911C
1907  911C 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1908  911F CD 93 90     	call Extrae_address
1909  9122 24           	inc h
1910  9123 25           	dec h
1911  9124 28 05        	jr z,Pintando_entidades
1912  9126 CD D4 95     	call Pinta_Sprites
1913  9129 18 F1        	jr Borrando_entidades
1914  912B
1915  912B              Pintando_entidades
1916  912B
1917  912B 2A 20 8C     	ld hl,(India_SP)
1918  912E 2C           	inc l
1919  912F CD 93 90     	call Extrae_address
1920  9132 24           	inc h
1921  9133 25           	dec h
1922  9134 28 0E        	jr z,Ejecuta_escudo
1923  9136 1C           	inc e
1924  9137 1C           	inc e
1925  9138 ED 53 20 8C  	ld (India_SP),de
1926  913C CD 93 90     	call Extrae_address
1927  913F CD D4 95     	call Pinta_Sprites
1928  9142 18 E7        	jr Pintando_entidades
1929  9144
1930  9144              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1931  9144
1932  9144              Ejecuta_escudo
1933  9144
1934  9144 3A 4E 8C     	ld a,(Shield)
1935  9147 A7           	and a
1936  9148 20 2F        	jr nz,Aplica_Shield
1937  914A
1938  914A              Borrando_Amadeus
1939  914A
1940  914A 21 24 8C     	ld hl,Ctrl_3
1941  914D CB 6E        	bit 5,(hl)
1942  914F 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1943  9151
1944  9151 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1945  9154 CD 93 90     	call Extrae_address
1946  9157 24           	inc h
1947  9158 25           	dec h
1948  9159 28 03        	jr z,Pintando_Amadeus
1949  915B CD D4 95     	call Pinta_Sprites
1950  915E
1951  915E              Pintando_Amadeus
1952  915E
1953  915E 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1954  9161 CD 93 90     	call Extrae_address
1955  9164 24           	inc h
1956  9165 25           	dec h
1957  9166 28 03        	jr z,1F
1958  9168 CD D4 95     	call Pinta_Sprites
1959  916B
1960  916B              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1961  916B
1962  916B 21 24 8C     1 ld hl,Ctrl_3
1963  916E CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1964  9170 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1965  9172 CB AE        	res 5,(hl)
1966  9174
1967  9174 3E 01        	ld a,1												; Borde azul.
1968  9176 D3 FE        	out ($fe),a
1969  9178
1970  9178 C9           	ret
1971  9179
1972  9179              Aplica_Shield
1973  9179
1974  9179              ;	Bit 1 "1" (Shield_3) Sólo borra.
1975  9179              ;		  "0"     ""     Borra/Pinta.
1976  9179              ;	Bit 2    ""  RET.	 No borra, no pinta.
1977  9179
1978  9179 21 50 8C     	ld hl,Shield_3
1979  917C
1980  917C CB 5E        	bit 3,(hl)
1981  917E 20 DE        	jr nz,Pintando_Amadeus
1982  9180
1983  9180 CB 56        	bit 2,(hl)
1984  9182 20 E7        	jr nz,1B
1985  9184
1986  9184 CB 4E        	bit 1,(hl)
1987  9186 C4 8D 91     	call nz,Borra_Amadeus_shield
1988  9189
1989  9189 28 BF        	jr z,Borrando_Amadeus
1990  918B 18 DE        	jr 1B
1991  918D
1992  918D              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1993  918D
1994  918D              Borra_Amadeus_shield
1995  918D
1996  918D 3A 24 8C     	ld a,(Ctrl_3)
1997  9190 CB 6F        	bit 5,a
1998  9192 28 08        	jr z,1F
1999  9194
2000  9194 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
2001  9197 CD 93 90     	call Extrae_address
2002  919A 18 06        	jr 2F
2003  919C
2004  919C 2A 08 8C     1 ld hl,(Album_de_pintado_Amadeus)
2005  919F CD 93 90     	call Extrae_address
2006  91A2
2007  91A2 CD D4 95     2 call Pinta_Sprites
2008  91A5
2009  91A5 AF           	xor a
2010  91A6 3C           	inc a											; Asegura NZ en la salida de la rutina.
2011  91A7
2012  91A7 C9           	ret
2013  91A8
2014  91A8              Pinta_Amadeus_shield
2015  91A8
2016  91A8 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
2017  91AB CD 93 90     	call Extrae_address
2018  91AE CD D4 95     	call Pinta_Sprites
2019  91B1
2020  91B1 AF           	xor a
2021  91B2 3C           	inc a											; Asegura NZ en la salida de la rutina.
2022  91B3
2023  91B3 C9           	ret
2024  91B4
2025  91B4              Borra_Pinta_Amadeus_shield
2026  91B4
2027  91B4 CD 8D 91     	call Borra_Amadeus_shield
2028  91B7 CD A8 91     	call Pinta_Amadeus_shield
2029  91BA C9           	ret
2030  91BB
2031  91BB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2032  91BB              ;
2033  91BB              ;	19/6/24
2034  91BB              ;
2035  91BB
2036  91BB              Teclado
2037  91BB
2038  91BB              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2039  91BB
2040  91BB              ;	ld a,$f7												; "5" para disparar.
2041  91BB              ;	in a,($fe)
2042  91BB              ;	and $10
2043  91BB
2044  91BB              ;	call z,Genera_disparo_Amadeus
2045  91BB
2046  91BB 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2047  91BD DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2048  91BF E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2049  91C1 CC 41 9D         call z,Amadeus_a_izquierda
2050  91C4
2051  91C4 3E F7        	ld a,$f7
2052  91C6 DB FE        	in a,($fe)
2053  91C8 E6 01        	and $01
2054  91CA C8           	ret z
2055  91CB
2056  91CB 3E F7        	ld a,$f7
2057  91CD DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2058  91CF E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2059  91D1 CC 59 9D     	call z,Amadeus_a_derecha
2060  91D4
2061  91D4 C9           	ret
2062  91D5
2063  91D5              ; ------------------------------------------------------------------------------------------------------------------------
2064  91D5              ;
2065  91D5              ;	06/07/24
2066  91D5              ;
2067  91D5
2068  91D5              Genera_explosion
2069  91D5
2070  91D5 21 36 8C     	ld hl,Clock_explosion
2071  91D8 35           	dec (hl)
2072  91D9 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2073  91DB
2074  91DB              Borra_entidad_colisionada
2075  91DB
2076  91DB CD ED 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2077  91DE CD F6 8F     	call Cargamos_registros_con_explosion
2078  91E1 CD D5 94     	call Genera_datos_de_impresion
2079  91E4
2080  91E4 AF           	xor a
2081  91E5 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2082  91E6
2083  91E6 C9           	ret
2084  91E7
2085  91E7              Siguiente_frame_explosion
2086  91E7
2087  91E7 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2088  91E9
2089  91E9              ; Avanza Frame de explosión.
2090  91E9
2091  91E9 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2092  91EC 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2093  91EF
2094  91EF 79           	ld a,c
2095  91F0 95           	sub l
2096  91F1 20 0B        	jr nz,1F
2097  91F3
2098  91F3              ; Fín de la entidad !!!!!!!!!!!!!
2099  91F3
2100  91F3 21 FA 8B     	ld hl,Numero_parcial_de_entidades
2101  91F6 35           	dec (hl)
2102  91F7 23           	inc hl
2103  91F8 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2104  91F9
2105  91F9 CD 55 93     	call Limpiamos_bandeja_DRAW
2106  91FC 18 DD        	jr Borra_entidad_colisionada
2107  91FE
2108  91FE 23           1 inc hl
2109  91FF 23           	inc hl
2110  9200 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2111  9203 18 D6        	jr Borra_entidad_colisionada
2112  9205
2113  9205              ; ----- ----- ----- ----- -----
2114  9205
2115  9205              Genera_explosion_Amadeus
2116  9205
2117  9205 21 37 8C     	ld hl,Clock_explosion_Amadeus
2118  9208 35           	dec (hl)
2119  9209 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2120  920B
2121  920B              Borra_Amadeus_impactado
2122  920B
2123  920B CD 64 8E     	call Change_Amadeus
2124  920E CD 03 90     	call Cargamos_registros_con_explosion_Amadeus
2125  9211 CD 24 90     	call Genera_datos_de_impresion_Amadeus
2126  9214
2127  9214 21 24 8C     	ld hl,Ctrl_3
2128  9217 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2129  9219
2130  9219 AF           	xor a
2131  921A 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2132  921B
2133  921B C9           	ret
2134  921C
2135  921C              Siguiente_frame_explosion_Amadeus
2136  921C
2137  921C 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2138  921E
2139  921E              ; Avanza Frame de explosión.
2140  921E
2141  921E 2A 74 89     	ld hl,(Pamm_Amadeus)
2142  9221 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2143  9224
2144  9224 79           	ld a,c
2145  9225 95           	sub l
2146  9226 20 0B        	jr nz,1F
2147  9228
2148  9228              ; Fín de Amadeus !!!!!!!!!!!!!
2149  9228              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2150  9228
2151  9228 AF           	xor a
2152  9229 32 71 89     	ld (Impacto_Amadeus),a
2153  922C 21 24 8C     	ld hl,Ctrl_3
2154  922F CB F6        	set 6,(hl)
2155  9231
2156  9231 18 D8        	jr Borra_Amadeus_impactado
2157  9233
2158  9233 23           1 inc hl
2159  9234 23           	inc hl
2160  9235 22 74 89     	ld (Pamm_Amadeus),hl
2161  9238 18 D1        	jr Borra_Amadeus_impactado
2162  923A
2163  923A              ; ---------------------------------------------------------------
2164  923A
2165  923A              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 923A              ; ******************************************************************************************************************************************************************************************
   2+ 923A              ;
   3+ 923A              ;   21/04/24
   4+ 923A              ;
   5+ 923A              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 923A              ;   (XOR) bit a bit.
   7+ 923A              ;
   8+ 923A              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 923A
  10+ 923A              Derivando_RND
  11+ 923A
  12+ 923A 21 F6 88         ld hl,Numeros_aleatorios
  13+ 923D
  14+ 923D ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 923F C5               push bc
  16+ 9240              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9240 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9243              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9243
  20+ 9243 A7           6 and a                                 ; Carry a "0".
  21+ 9244 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9246 30 02            jr nc,1F
  23+ 9248
  24+ 9248 CB C1            set 0,c
  25+ 924A
  26+ 924A 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 924B E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 924D 5F               ld e,a
  29+ 924E
  30+ 924E 7A               ld a,d
  31+ 924F E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9251 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9253
  34+ 9253 CB 3F            srl a
  35+ 9255
  36+ 9255 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9256
  38+ 9256 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9257 28 04            jr z,4F
  40+ 9259
  41+ 9259 CB FF            set 7,a
  42+ 925B 18 02            jr 5F
  43+ 925D
  44+ 925D CB BF        4 res 7,a
  45+ 925F
  46+ 925F CB 21        5 sla c
  47+ 9261 10 E0            djnz 6B
  48+ 9263
  49+ 9263 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9264
  51+ 9264 77               ld (hl),a
  52+ 9265 23               inc hl
  53+ 9266 C1               pop bc
  54+ 9267 10 D4            djnz 3B
  55+ 9269
  56+ 9269 C9               ret
  57+ 926A
  58+ 926A
  59+ 926A
# file closed: RND_Derivando.asm
2166  926A              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 926A              ;---------------------------------------------------------------------------------------------------------------
   2+ 926A              ;
   3+ 926A              ;   8/3/24
   4+ 926A              ;
   5+ 926A              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 926A              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 926A              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 926A              ;	_ de la 1ª entidad del Nivel.
   9+ 926A              ;
  10+ 926A              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 926A
  12+ 926A              ;	MODIFICA: HL,DE y A.
  13+ 926A              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 926A
  15+ 926A              Inicializa_Nivel
  16+ 926A
  17+ 926A 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 926D CD 93 90     	call Extrae_address
  19+ 9270 7E           	ld a,(hl)
  20+ 9271 32 F9 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9274 23           	inc hl
  22+ 9275 CD 82 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9278 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 927B CD 8B 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 927E
  26+ 927E CD 9C 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9281 C9           	ret
  28+ 9282
  29+ 9282              ; ----------------------
  30+ 9282
  31+ 9282 11 D8 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9285 01 04 00     	ld bc,4
  33+ 9288 ED B0        	ldir
  34+ 928A C9           	ret
  35+ 928B
  36+ 928B 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 928C CD 26 94         call Calcula_salto_en_BC
  38+ 928F 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9292 A7               and a
  40+ 9293 ED 4A            adc hl,bc
  41+ 9295 CD 93 90         call Extrae_address
  42+ 9298 22 E4 8B         ld (Puntero_indice_mov),hl
  43+ 929B C9               ret
  44+ 929C
  45+ 929C 3A B3 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 929F CD 26 94     	call Calcula_salto_en_BC
  47+ 92A2 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92A5 A7               and a
  49+ 92A6 ED 4A            adc hl,bc
  50+ 92A8 CD 93 90         call Extrae_address
  51+ 92AB 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92AE C9           	ret
  53+ 92AF
  54+ 92AF              ;---------------------------------------------------------------------------------------------------------------
  55+ 92AF              ;
  56+ 92AF              ;   5/1/24
  57+ 92AF              ;
  58+ 92AF              ;	Destruye A,BC,HL,DE
  59+ 92AF
  60+ 92AF              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92AF              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92AF
  63+ 92AF              Inicia_Entidades
  64+ 92AF
  65+ 92AF              ; Preparamos los punteros de las cajas de entidades:
  66+ 92AF
  67+ 92AF CD 76 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92B2              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92B2 CD 6E 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92B5
  71+ 92B5 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92B8
  73+ 92B8 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92BB
  75+ 92BB CD D4 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92BE
  77+ 92BE 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 92C1
  79+ 92C1              ; En este punto:
  80+ 92C1              ;
  81+ 92C1              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92C1              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92C1
  84+ 92C1 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92C2
  86+ 92C2 7E           	ld a,(hl)
  87+ 92C3 CD 40 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92C6
  89+ 92C6 CD 38 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92C9
  91+ 92C9              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92C9
  93+ 92C9 CD F6 93     	call Busca_mov_masticados_segun_tipo
  94+ 92CC
  95+ 92CC A7           	and a
  96+ 92CD 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92CF
  98+ 92CF              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92CF
 100+ 92CF              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92CF              ;	_ de este tipo de entidad.
 102+ 92CF
 103+ 92CF CD D8 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92D2 CD E5 9E     	call Transfiere_datos_de_contadores
 105+ 92D5
 106+ 92D5 18 06        	jr 4F
 107+ 92D7
 108+ 92D7 CD 89 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92DA
 110+ 92DA              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92DA              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92DA              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92DA              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92DA              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92DA
 116+ 92DA CD B4 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92DD              ;																; _ Mov_masticados ya generados.
 118+ 92DD
 119+ 92DD CD DD 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92E0
 121+ 92E0 DD E5        	push ix
 122+ 92E2 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92E3
 124+ 92E3 D5           	push de
 125+ 92E4 CD A9 94     	call Genera_coordenadas
 126+ 92E7
 127+ 92E7 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 128+ 92EB CD ED 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92EE D1           	pop de
 130+ 92EF
 131+ 92EF CD D5 94     	call Genera_datos_de_impresion
 132+ 92F2              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92F2              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92F2              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92F2              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92F2
 137+ 92F2 CD 78 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92F5
 139+ 92F5              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92F5
 141+ 92F5 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 142+ 92F9 CD 65 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92FC
 144+ 92FC CD 55 93     	call Limpiamos_bandeja_DRAW
 145+ 92FF CD E1 90     	call Incrementa_punteros_de_cajas
 146+ 9302
 147+ 9302              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9302              ; _ entidad del Nivel.
 149+ 9302
 150+ 9302 3A 25 8C     	ld a,(Ctrl_4)
 151+ 9305 E6 F0        	and $f0
 152+ 9307 32 25 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 930A
 154+ 930A              ; Siguiente entidad del Nivel.
 155+ 930A
 156+ 930A 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 930D 23           	inc hl 														; _ entidad del Nivel.
 158+ 930E
 159+ 930E C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 930F
 161+ 930F 10 A7        	djnz 2B
 162+ 9311
 163+ 9311 C9           	ret
 164+ 9312
 165+ 9312              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9312              ;
 167+ 9312              ;	27/5/24
 168+ 9312              ;
 169+ 9312              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9312              ;
 171+ 9312
 172+ 9312              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9312              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9312
 175+ 9312 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9315 CD 38 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9318
 178+ 9318
 179+ 9318              Construye_movimientos_masticados_Amadeus
 180+ 9318
 181+ 9318 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 931B CD D0 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 931E              ;															; _ el (Contador_de_mov_masticados).
 184+ 931E CD 99 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9321              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9321
 187+ 9321              ; Generamos movimientos masticados de Amadeus.
 188+ 9321
 189+ 9321 06 79        	ld b,121												; $0079, 121d.
 190+ 9323
 191+ 9323 C5           1 push bc
 192+ 9324 CD F7 96     	call Draw
 193+ 9327 CD B5 8F     	call Guarda_movimiento_masticado
 194+ 932A
 195+ 932A CD 6B 9A     	call Mov_right
 196+ 932D CD 6B 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9330
 198+ 9330 C1           	pop bc
 199+ 9331 10 F0        	djnz 1B
 200+ 9333
 201+ 9333              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9333
 203+ 9333              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9333              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9333
 206+ 9333 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9336 01 08 00     	ld bc,8
 208+ 9339 A7           	and a
 209+ 933A ED 42        	sbc hl,bc
 210+ 933C 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 933F
 212+ 933F C9           	ret
 213+ 9340
 214+ 9340              ; ---------------------------------------------------------------------
 215+ 9340              ;
 216+ 9340              ;	10/02/24
 217+ 9340              ;
 218+ 9340              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9340              ;
 220+ 9340              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9340
 222+ 9340              Definicion_segun_tipo
 223+ 9340
 224+ 9340 CD 26 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9343 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9346 CD 2E 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9349 C9           	ret
 228+ 934A
 229+ 934A              ; ---------------------------------------------------------------------
 230+ 934A              ;
 231+ 934A              ;	6/7/24
 232+ 934A
 233+ 934A
 234+ 934A              Store_Restore_cajas
 235+ 934A
 236+ 934A ED 5B F3 8B  	ld de,(Puntero_store_caja)
 237+ 934E CD 65 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9351 CD E1 90     	call Incrementa_punteros_de_cajas
 239+ 9354 C9           	ret
 240+ 9355
 241+ 9355              ; ---------------------------------------------------------------------
 242+ 9355              ;
 243+ 9355              ;	23/6/24
 244+ 9355              ;
 245+ 9355              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9355              ;
 247+ 9355              ;	MODIFY: HL
 248+ 9355
 249+ 9355              Limpiamos_bandeja_DRAW
 250+ 9355
 251+ 9355 ED 73 00 8C  	ld (Stack),sp
 252+ 9359 31 D8 8B     	ld sp,Vel_left
 253+ 935C
 254+ 935C AF           	xor a
 255+ 935D 67           	ld h,a
 256+ 935E 6F           	ld l,a
 257+ 935F
 258+ 935F E5           	push hl
 259+ 9360 E5           	push hl
 260+ 9361 E5           	push hl
 261+ 9362 E5           	push hl
 262+ 9363 E5           	push hl
 263+ 9364 E5           	push hl
 264+ 9365 E5           	push hl
 265+ 9366 E5           	push hl
 266+ 9367 E5           	push hl
 267+ 9368 E5           	push hl
 268+ 9369 E5           	push hl
 269+ 936A E5           	push hl
 270+ 936B E5           	push hl
 271+ 936C E5           	push hl
 272+ 936D E5           	push hl
 273+ 936E E5           	push hl
 274+ 936F E5           	push hl
 275+ 9370 E5           	push hl
 276+ 9371
 277+ 9371 33           	inc sp
 278+ 9372
 279+ 9372 E5           	push hl
 280+ 9373 ED 7B 00 8C  	ld sp,(Stack)
 281+ 9377
 282+ 9377 C9           	ret
 283+ 9378
 284+ 9378              ; ---------------------------------------------------------------------
 285+ 9378              ;
 286+ 9378              ;	24/03/24
 287+ 9378
 288+ 9378 2A BC 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 937B 2B           	dec hl
 290+ 937C 22 BC 8B     	ld (Contador_de_mov_masticados),hl
 291+ 937F C9           	ret
 292+ 9380
 293+ 9380              ; ---------------------------------------------------------------------
 294+ 9380              ;
 295+ 9380              ;	8/5/24
 296+ 9380
 297+ 9380              Reinicia_entidad_maliciosa
 298+ 9380
 299+ 9380              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9380
 301+ 9380 CD D8 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9383 CD E5 9E     	call Transfiere_datos_de_contadores
 303+ 9386
 304+ 9386              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9386
 306+ 9386 3A B3 8B     	ld a,(Tipo)
 307+ 9389 CD 40 93     	call Definicion_segun_tipo
 308+ 938C
 309+ 938C E5           	push hl
 310+ 938D DD E1        	pop ix
 311+ 938F
 312+ 938F DD 6E 0B     	ld l,(ix+11)
 313+ 9392 DD 66 0C     	ld h,(ix+12)
 314+ 9395
 315+ 9395 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9398
 317+ 9398 CD DD 8F     	call Cargamos_registros_con_mov_masticado
 318+ 939B
 319+ 939B              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 939B              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 939B              ; Ejemplos.
 322+ 939B
 323+ 939B              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 939B              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 939B              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 939B              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 939B              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 939B
 329+ 939B 21 B6 8B     	ld hl,Contador_de_vueltas
 330+ 939E CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93A0
 332+ 93A0 7E           	ld a,(hl)
 333+ 93A1 CB 2F        	sra a
 334+ 93A3 CB 2F        	sra a
 335+ 93A5
 336+ 93A5 32 BE 8B     	ld (Velocidad),a
 337+ 93A8
 338+ 93A8 3E 40        	ld a,$40
 339+ 93AA BE           	cp (hl)
 340+ 93AB C0           	ret nz
 341+ 93AC
 342+ 93AC              ; Límitador.
 343+ 93AC
 344+ 93AC              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93AC
 346+ 93AC CB 2E        	sra (hl)
 347+ 93AE 21 BE 8B     	ld hl,Velocidad
 348+ 93B1 CB 2E        	sra (hl)
 349+ 93B3
 350+ 93B3 C9           	ret
 351+ 93B4
 352+ 93B4              ; ---------------------------------------------------------------------
 353+ 93B4              ;
 354+ 93B4              ;	22/01/24
 355+ 93B4
 356+ 93B4 21 25 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93B7 CB 46        	bit 0,(hl)
 358+ 93B9 20 0D        	jr nz,1F
 359+ 93BB CB 4E        	bit 1,(hl)
 360+ 93BD 20 0C        	jr nz,2F
 361+ 93BF CB 56        	bit 2,(hl)
 362+ 93C1 20 0B        	jr nz,3F
 363+ 93C3 CB 5E        	bit 3,(hl)
 364+ 93C5 20 0A        	jr nz,4F
 365+ 93C7 C9           	ret
 366+ 93C8
 367+ 93C8 CB E6        1 set 4,(hl)
 368+ 93CA C9           	ret
 369+ 93CB CB EE        2 set 5,(hl)
 370+ 93CD C9           	ret
 371+ 93CE CB F6        3 set 6,(hl)
 372+ 93D0 C9           	ret
 373+ 93D1 CB FE        4 set 7,(hl)
 374+ 93D3 C9           	ret
 375+ 93D4
 376+ 93D4              ; ---------------------------------------------------------------------
 377+ 93D4              ;
 378+ 93D4              ;	23/01/24
 379+ 93D4              ;
 380+ 93D4              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93D4              ;
 382+ 93D4              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93D4              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93D4              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93D4              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93D4
 387+ 93D4              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93D4
 389+ 93D4 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93D5 3D           	dec a
 391+ 93D6 20 06        	jr nz,1F
 392+ 93D8
 393+ 93D8              ; --- Tipo_1
 394+ 93D8
 395+ 93D8 21 25 8C     	ld hl,Ctrl_4
 396+ 93DB CB C6        	set 0,(hl)
 397+ 93DD C9           	ret
 398+ 93DE
 399+ 93DE 3D           1 dec a
 400+ 93DF 20 06        	jr nz,2F
 401+ 93E1
 402+ 93E1              ; --- Tipo_2
 403+ 93E1
 404+ 93E1 21 25 8C     	ld hl,Ctrl_4
 405+ 93E4 CB CE        	set 1,(hl)
 406+ 93E6 C9           	ret
 407+ 93E7
 408+ 93E7 3D           2 dec a
 409+ 93E8 20 06        	jr nz,3F
 410+ 93EA
 411+ 93EA              ; --- Tipo_3
 412+ 93EA
 413+ 93EA 21 25 8C     	ld hl,Ctrl_4
 414+ 93ED CB D6        	set 2,(hl)
 415+ 93EF C9           	ret
 416+ 93F0
 417+ 93F0              ; --- Tipo_3
 418+ 93F0
 419+ 93F0 21 25 8C     3 ld hl,Ctrl_4
 420+ 93F3 CB D6        	set 2,(hl)
 421+ 93F5 C9           	ret
 422+ 93F6
 423+ 93F6              ; ---------------------------------------------------------------------
 424+ 93F6              ;
 425+ 93F6              ;	22/01/24
 426+ 93F6
 427+ 93F6 21 25 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93F9 CB 46        	bit 0,(hl)
 429+ 93FB 20 0E        	jr nz,1F
 430+ 93FD
 431+ 93FD CB 4E        	bit 1,(hl)
 432+ 93FF 20 10        	jr nz,2F
 433+ 9401
 434+ 9401 CB 56        	bit 2,(hl)
 435+ 9403 20 12        	jr nz,3F
 436+ 9405
 437+ 9405 CB 5E        	bit 3,(hl)
 438+ 9407 20 14        	jr nz,4F
 439+ 9409 18 19        	jr 6F
 440+ 940B
 441+ 940B              ; Entidad_de_Tipo_1.
 442+ 940B
 443+ 940B CB 66        1 bit 4,(hl)
 444+ 940D 28 15        	jr z,6F
 445+ 940F 18 10        	jr 5F
 446+ 9411
 447+ 9411              ; Entidad_de_Tipo_2.
 448+ 9411
 449+ 9411 CB 6E        2 bit 5,(hl)
 450+ 9413 28 0F        	jr z,6F
 451+ 9415 18 0A        	jr 5F
 452+ 9417
 453+ 9417              ; Entidad_de_Tipo_3.
 454+ 9417
 455+ 9417 CB 76        3 bit 6,(hl)
 456+ 9419 28 09        	jr z,6F
 457+ 941B 18 04        	jr 5F
 458+ 941D
 459+ 941D              ; Entidad_de_Tipo_4.
 460+ 941D
 461+ 941D CB 7E        4 bit 7,(hl)
 462+ 941F 28 03        	jr z,6F
 463+ 9421
 464+ 9421              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9421
 466+ 9421 AF           5 xor a
 467+ 9422 3C           	inc a
 468+ 9423 C9           	ret
 469+ 9424
 470+ 9424              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9424
 472+ 9424 AF           6 xor a
 473+ 9425 C9           	ret
 474+ 9426
 475+ 9426              ;	------------------------------------------------------------------------------------
 476+ 9426              ;
 477+ 9426              ;	12/01/24
 478+ 9426              ;
 479+ 9426              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9426              ;
 481+ 9426              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9426              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9426
 484+ 9426 CB 27        Calcula_salto_en_BC sla a
 485+ 9428 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 942A 4F           	ld c,a
 487+ 942B 06 00        	ld b,0
 488+ 942D C9           	ret
 489+ 942E
 490+ 942E              ; ------------------------------------------------------------------
 491+ 942E              ;
 492+ 942E              ;	19/1/24
 493+ 942E              ;
 494+ 942E              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 942E              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 942E
 497+ 942E A7           Situa_en_datos_de_definicion and a
 498+ 942F ED 4A        	adc hl,bc
 499+ 9431 CD 93 90     	call Extrae_address
 500+ 9434 22 FE 8B         ld (Datos_de_entidad),hl
 501+ 9437 C9           	ret
 502+ 9438
 503+ 9438              ; ------------------------------------------------------------------
 504+ 9438
 505+ 9438              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9438              ; 	inc de
 507+ 9438              ; 	inc de
 508+ 9438              ; 	ex de,hl
 509+ 9438              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9438              ; 	ret
 511+ 9438
 512+ 9438              ; ----------------------------------------------------------------------------------------------------------
 513+ 9438              ;
 514+ 9438              ;	24/6/24
 515+ 9438              ;
 516+ 9438              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9438              ;	_ de entidad.
 518+ 9438              ;
 519+ 9438              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9438              ;
 521+ 9438              ;
 522+ 9438              ;	MODIFICA: HL,DE y BC
 523+ 9438
 524+ 9438
 525+ 9438              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9438
 527+ 9438 11 B3 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 943B 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 943C 12           	ld (de),a
 530+ 943D 23           	inc hl
 531+ 943E              ;
 532+ 943E 11 C1 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9441 01 02 00     	ld bc,2
 534+ 9444 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9446              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9446 11 B6 8B     	ld de,Contador_de_vueltas
 537+ 9449 7E           	ld a,(hl)
 538+ 944A 12           	ld (de),a
 539+ 944B 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 944C
 541+ 944C 11 C8 8B     	ld de,Indice_Sprite_der
 542+ 944F 01 04 00     	ld bc,4
 543+ 9452 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9454
 545+ 9454 11 D0 8B     	ld de,Posicion_inicio
 546+ 9457 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 945A ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 945C
 549+ 945C 11 BA 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 945F 01 02 00     	ld bc,2
 551+ 9462 ED B0        	ldir
 552+ 9464
 553+ 9464 C9           	ret
 554+ 9465
 555+ 9465              ; ----------------------------------------------------------------------------------------------------------
 556+ 9465              ;
 557+ 9465              ;	1/8/24
 558+ 9465              ;
 559+ 9465
 560+ 9465              Parametros_de_bandeja_DRAW_a_caja
 561+ 9465
 562+ 9465 21 B3 8B     	ld hl,Bandeja_DRAW
 563+ 9468 01 0C 00     	ld bc,12
 564+ 946B ED B0        	ldir
 565+ 946D C9           	ret
 566+ 946E
 567+ 946E              ;---------------------------------------------------------------------------------------------------------------
 568+ 946E              ;
 569+ 946E              ;	5/1/24
 570+ 946E              ;
 571+ 946E              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 946E              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 946E              ;
 574+ 946E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 946E              ;
 576+ 946E              ;	(Numero_parcial_de_entidades)="7".
 577+ 946E              ;
 578+ 946E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 946E              ;
 580+ 946E              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 946E              ;
 582+ 946E              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 946E              ;	MODIFICA: A y B.
 584+ 946E              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 946E
 586+ 946E              Inicializa_Numero_parcial_de_entidades
 587+ 946E
 588+ 946E              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 946E
 590+ 946E 3A F9 8B     	ld a,(Numero_de_entidades)
 591+ 9471 A7           	and a
 592+ 9472
 593+ 9472              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9472              ;	jr z,$
 595+ 9472              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9472
 597+ 9472 20 03        	jr nz,3F
 598+ 9474
 599+ 9474              ; ---------- ---------- ----------
 600+ 9474
 601+ 9474              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9474              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9474
 604+ 9474 CD 6A 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9477
 606+ 9477              ; ---------- ---------- ----------
 607+ 9477
 608+ 9477 3A F9 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 947A FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 947C 38 08        	jr c,1F
 611+ 947E
 612+ 947E              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 947E              ; Actualizamos variables.
 614+ 947E
 615+ 947E 3E 07        	ld a,7
 616+ 9480 32 FA 8B     	ld (Numero_parcial_de_entidades),a
 617+ 9483 47           	ld b,a
 618+ 9484 18 04        	jr 2F
 619+ 9486
 620+ 9486              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9486              ; (Numero_de_entidades)="0".
 622+ 9486
 623+ 9486 32 FA 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 9489 47           	ld b,a
 625+ 948A C9           2 ret
 626+ 948B
# file closed: Rutinas_de_inicio_y_niveles.asm
2167  948B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 948B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 948B              ;
   3+ 948B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 948B              ;
   5+ 948B              ; *****************************************************************************************************************************************************************************************
   6+ 948B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 948B
   8+ 948B 7C           calcula_tercio ld a,h
   9+ 948C E6 18        	and $18
  10+ 948E CB 2F        	sra a
  11+ 9490 CB 2F        	sra a
  12+ 9492 CB 2F        	sra a
  13+ 9494 C9           	ret
  14+ 9495
# file closed: calcula_tercio.asm
2168  9495              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9495              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9495              ;
   3+ 9495              ;
   4+ 9495              ;	CLS.
   5+ 9495              ;
   6+ 9495              ;	Limpia la pantalla y define sus atributos.
   7+ 9495              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9495              ;
   9+ 9495              ;	COLORES: 0 ..... NEGRO
  10+ 9495              ;    		 1 ..... AZUL
  11+ 9495              ; 			 2 ..... ROJO
  12+ 9495              ;			 3 ..... MAGENTA
  13+ 9495              ; 			 4 ..... VERDE
  14+ 9495              ; 			 5 ..... CIAN
  15+ 9495              ;			 6 ..... AMARILLO
  16+ 9495              ; 			 7 ..... BLANCO
  17+ 9495              ;
  18+ 9495              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9495              ;
  20+ 9495              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9495
  22+ 9495
  23+ 9495 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9498 11 01 40     	LD DE,$4001
  25+ 949B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 949E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94A0 ED B0        	LDIR
  28+ 94A2 01 FF 02     	LD BC,767
  29+ 94A5 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94A6 ED B0        	LDIR
  31+ 94A8 C9           	ret
  32+ 94A9
# file closed: Cls.asm
2169  94A9              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94A9              ; ------------------------------------------------------------------------
   2+ 94A9              ;
   3+ 94A9              ;	30/1/24
   4+ 94A9              ;
   5+ 94A9              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94A9              ;	Fila superior "0", Columna izquierda "0".
   7+ 94A9              ;
   8+ 94A9              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94A9              ;
  10+ 94A9              ;	Modifica: A,BC y DE.
  11+ 94A9
  12+ 94A9 7D           Genera_coordenadas ld a,l
  13+ 94AA E6 1F        	and $1f
  14+ 94AC 32 B4 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94AF
  16+ 94AF 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94B0 FE 40        	cp $40
  18+ 94B2 38 1C        	jr c,4F
  19+ 94B4
  20+ 94B4 CD 8B 94     	call calcula_tercio
  21+ 94B7 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94B8
  23+ 94B8 1E 00        	ld e,0
  24+ 94BA 7D           	ld a,l
  25+ 94BB E6 E0        	and $e0
  26+ 94BD 28 01        	jr z,1F
  27+ 94BF 04           	inc b
  28+ 94C0
  29+ 94C0 04           1 inc b
  30+ 94C1 05           	dec b
  31+ 94C2 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94C4              ;														; _ , salimos.
  33+ 94C4 1C           3 inc e
  34+ 94C5 D6 20        	sub 32
  35+ 94C7 20 FB        	jr nz,3B
  36+ 94C9 10 F5        	djnz 1B
  37+ 94CB
  38+ 94CB 7B           2 ld a,e
  39+ 94CC 32 B5 8B     	ld (Coordenada_y),a
  40+ 94CF C9           	ret
  41+ 94D0
  42+ 94D0 AF           4 xor a
  43+ 94D1 32 B5 8B     	ld (Coordenada_y),a
  44+ 94D4 C9           	ret
  45+ 94D5
# file closed: Genera_coordenadas.asm
2170  94D5              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94D5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94D5              ;
   3+ 94D5              ;	20/09/24
   4+ 94D5              ;
   5+ 94D5              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94D5              ;   DE contiene Puntero_objeto.
   7+ 94D5              ;   IX contiene el Puntero de impresión.
   8+ 94D5
   9+ 94D5              Genera_datos_de_impresion
  10+ 94D5
  11+ 94D5 ED 73 00 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94D9
  13+ 94D9 31 BA 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94DC DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94DE
  16+ 94DE 2A 1E 8C         ld hl,(Scanlines_album_SP)
  17+ 94E1
  18+ 94E1 3E 05            ld a,5
  19+ 94E3 85               add l
  20+ 94E4 6F               ld l,a
  21+ 94E5
  22+ 94E5 F9               ld sp,hl
  23+ 94E6 22 1E 8C         ld (Scanlines_album_SP),hl
  24+ 94E9
  25+ 94E9 21 00 00         ld hl,0
  26+ 94EC
  27+ 94EC DD E5            push ix
  28+ 94EE 3B               dec sp
  29+ 94EF ED 7A            adc hl,sp
  30+ 94F1 D5               push de
  31+ 94F2
  32+ 94F2              ; Recuperamos SP.
  33+ 94F2
  34+ 94F2 ED 7B 00 8C      ld sp,(Stack)
  35+ 94F6
  36+ 94F6 E5               push hl
  37+ 94F7 F1               pop af
  38+ 94F8 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94F9
  40+ 94F9              ; Tenemos el encabezado listo.
  41+ 94F9              ; Preparamos registros para generar los scanlines.
  42+ 94F9
  43+ 94F9 DD E5            push ix
  44+ 94FB E1               pop hl                                          ; 1er scanline en HL.
  45+ 94FC
  46+ 94FC ED 5B 1E 8C      ld de,(Scanlines_album_SP)
  47+ 9500
  48+ 9500              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9500              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9500
  51+ 9500 7C               ld a,h
  52+ 9501 FE 50            cp $50
  53+ 9503 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9505
  55+ 9505 20 05            jr nz,2F
  56+ 9507
  57+ 9507 7D               ld a,l
  58+ 9508 FE E0            cp $e0
  59+ 950A 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 950C
  61+ 950C 7D           2 ld a,l
  62+ 950D FE C0            cp $c0
  63+ 950F D2 AB 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9512
  65+ 9512              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9512
  67+ 9512 CD A9 99         call NextScan
  68+ 9515 EB               ex de,hl
  69+ 9516
  70+ 9516 73               ld (hl),e
  71+ 9517 23               inc hl
  72+ 9518 72               ld (hl),d
  73+ 9519 23               inc hl
  74+ 951A
  75+ 951A EB               ex de,hl
  76+ 951B
  77+ 951B CD A9 99         call NextScan
  78+ 951E EB               ex de,hl
  79+ 951F
  80+ 951F 73               ld (hl),e
  81+ 9520 23               inc hl
  82+ 9521 72               ld (hl),d
  83+ 9522 23               inc hl
  84+ 9523
  85+ 9523 EB               ex de,hl
  86+ 9524
  87+ 9524 CD A9 99         call NextScan
  88+ 9527 EB               ex de,hl
  89+ 9528
  90+ 9528 73               ld (hl),e
  91+ 9529 23               inc hl
  92+ 952A 72               ld (hl),d
  93+ 952B 23               inc hl
  94+ 952C
  95+ 952C EB               ex de,hl
  96+ 952D
  97+ 952D CD A9 99         call NextScan
  98+ 9530 EB               ex de,hl
  99+ 9531
 100+ 9531 73               ld (hl),e
 101+ 9532 23               inc hl
 102+ 9533 72               ld (hl),d
 103+ 9534 23               inc hl
 104+ 9535
 105+ 9535 EB               ex de,hl
 106+ 9536
 107+ 9536 CD A9 99         call NextScan
 108+ 9539 EB               ex de,hl
 109+ 953A
 110+ 953A 73               ld (hl),e
 111+ 953B 23               inc hl
 112+ 953C 72               ld (hl),d
 113+ 953D 23               inc hl
 114+ 953E
 115+ 953E EB               ex de,hl
 116+ 953F
 117+ 953F CD A9 99         call NextScan
 118+ 9542 EB               ex de,hl
 119+ 9543
 120+ 9543 73               ld (hl),e
 121+ 9544 23               inc hl
 122+ 9545 72               ld (hl),d
 123+ 9546 23               inc hl
 124+ 9547
 125+ 9547 EB               ex de,hl
 126+ 9548
 127+ 9548 CD A9 99         call NextScan
 128+ 954B EB               ex de,hl
 129+ 954C
 130+ 954C 73               ld (hl),e
 131+ 954D 23               inc hl
 132+ 954E 72               ld (hl),d
 133+ 954F 23               inc hl
 134+ 9550
 135+ 9550 EB               ex de,hl
 136+ 9551
 137+ 9551 CD A9 99         call NextScan
 138+ 9554 EB               ex de,hl
 139+ 9555
 140+ 9555 73               ld (hl),e
 141+ 9556 23               inc hl
 142+ 9557 72               ld (hl),d
 143+ 9558 23               inc hl
 144+ 9559
 145+ 9559 EB               ex de,hl
 146+ 955A
 147+ 955A CD A9 99         call NextScan
 148+ 955D EB               ex de,hl
 149+ 955E
 150+ 955E 73               ld (hl),e
 151+ 955F 23               inc hl
 152+ 9560 72               ld (hl),d
 153+ 9561 23               inc hl
 154+ 9562
 155+ 9562 EB               ex de,hl
 156+ 9563
 157+ 9563 CD A9 99         call NextScan
 158+ 9566 EB               ex de,hl
 159+ 9567
 160+ 9567 73               ld (hl),e
 161+ 9568 23               inc hl
 162+ 9569 72               ld (hl),d
 163+ 956A 23               inc hl
 164+ 956B
 165+ 956B EB               ex de,hl
 166+ 956C
 167+ 956C CD A9 99         call NextScan
 168+ 956F EB               ex de,hl
 169+ 9570
 170+ 9570 73               ld (hl),e
 171+ 9571 23               inc hl
 172+ 9572 72               ld (hl),d
 173+ 9573 23               inc hl
 174+ 9574
 175+ 9574 EB               ex de,hl
 176+ 9575
 177+ 9575 CD A9 99         call NextScan
 178+ 9578 EB               ex de,hl
 179+ 9579
 180+ 9579 73               ld (hl),e
 181+ 957A 23               inc hl
 182+ 957B 72               ld (hl),d
 183+ 957C 23               inc hl
 184+ 957D
 185+ 957D EB               ex de,hl
 186+ 957E
 187+ 957E CD A9 99         call NextScan
 188+ 9581 EB               ex de,hl
 189+ 9582
 190+ 9582 73               ld (hl),e
 191+ 9583 23               inc hl
 192+ 9584 72               ld (hl),d
 193+ 9585 23               inc hl
 194+ 9586
 195+ 9586 EB               ex de,hl
 196+ 9587
 197+ 9587 CD A9 99         call NextScan
 198+ 958A EB               ex de,hl
 199+ 958B
 200+ 958B 73               ld (hl),e
 201+ 958C 23               inc hl
 202+ 958D 72               ld (hl),d
 203+ 958E 23               inc hl
 204+ 958F
 205+ 958F EB               ex de,hl
 206+ 9590
 207+ 9590 CD A9 99         call NextScan
 208+ 9593 EB               ex de,hl
 209+ 9594
 210+ 9594              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 9594              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 9594              ;   _ generar sus scanlines.
 213+ 9594
 214+ 9594              ;    ld (Puntero_de_impresion_disparo),de
 215+ 9594
 216+ 9594 73               ld (hl),e
 217+ 9595 23               inc hl
 218+ 9596 72               ld (hl),d
 219+ 9597 23               inc hl
 220+ 9598
 221+ 9598              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 9598
 223+ 9598 22 1E 8C         ld (Scanlines_album_SP),hl
 224+ 959B
 225+ 959B EB               ex de,hl
 226+ 959C
 227+ 959C              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 959C
 229+ 959C CD A9 99         call NextScan
 230+ 959F CD A9 99         call NextScan
 231+ 95A2
 232+ 95A2 22 29 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95A5
 234+ 95A5              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95A5
 236+ 95A5 08               ex af,af
 237+ 95A6
 238+ 95A6 F5               push af
 239+ 95A7 E1               pop hl
 240+ 95A8
 241+ 95A8 36 10            ld (hl),16
 242+ 95AA
 243+ 95AA C9               ret
 244+ 95AB
 245+ 95AB              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95AB
 247+ 95AB              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95AB
 249+ 95AB 3E 57            ld a,$57
 250+ 95AD 94               sub h
 251+ 95AE 47               ld b,a
 252+ 95AF
 253+ 95AF 3E DF            ld a,$df
 254+ 95B1 BD               cp l
 255+ 95B2 38 04            jr c,1F
 256+ 95B4
 257+ 95B4 3E 08            ld a,8
 258+ 95B6 80               add b
 259+ 95B7 47               ld b,a
 260+ 95B8
 261+ 95B8              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95B8              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95B8
 264+ 95B8 48           1 ld c,b
 265+ 95B9 0C               inc c
 266+ 95BA
 267+ 95BA 04               inc b
 268+ 95BB 05               dec b
 269+ 95BC 20 02            jr nz,3F
 270+ 95BE
 271+ 95BE 18 0B            jr 6F
 272+ 95C0
 273+ 95C0 CD A9 99     3 call NextScan
 274+ 95C3 EB               ex de,hl
 275+ 95C4
 276+ 95C4 73               ld (hl),e
 277+ 95C5 23               inc hl
 278+ 95C6 72               ld (hl),d
 279+ 95C7 23               inc hl
 280+ 95C8
 281+ 95C8 EB               ex de,hl
 282+ 95C9 10 F5            djnz 3B
 283+ 95CB
 284+ 95CB ED 53 1E 8C  6 ld (Scanlines_album_SP),de
 285+ 95CF
 286+ 95CF 08           5 ex af,af
 287+ 95D0 F5               push af
 288+ 95D1 E1               pop hl
 289+ 95D2
 290+ 95D2 71               ld (hl),c
 291+ 95D3
 292+ 95D3 C9               ret
 293+ 95D4
# file closed: Genera_datos_de_impresion.asm
2171  95D4              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95D4              ; -----------------------------------------------------------------------------
   2+ 95D4              ;
   3+ 95D4              ;   11/03/24
   4+ 95D4              ;
   5+ 95D4
   6+ 95D4              Pinta_Sprites
   7+ 95D4
   8+ 95D4              ;    ld hl,(Scanlines_album_SP)
   9+ 95D4              ;    call Extrae_address
  10+ 95D4
  11+ 95D4              ;    inc h
  12+ 95D4              ;    dec h
  13+ 95D4              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95D4
  15+ 95D4 ED 73 00 8C      ld (Stack),sp
  16+ 95D8
  17+ 95D8 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95D9              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95D9 2C               inc l
  20+ 95DA 2C               inc l
  21+ 95DB
  22+ 95DB 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95DC
  24+ 95DC 2C               inc l
  25+ 95DD F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95DE
  27+ 95DE              ;   Seleccionamos rutina de impresión:
  28+ 95DE
  29+ 95DE 3E 10            ld a,16
  30+ 95E0 B8               cp b
  31+ 95E1 C2 DD 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95E4
  33+ 95E4              ;   Rutinas:
  34+ 95E4
  35+ 95E4              Pinta_rapido    ;   1520 t/states.
  36+ 95E4
  37+ 95E4 E1               pop hl
  38+ 95E5
  39+ 95E5 1A               ld a,(de)
  40+ 95E6 AE               xor (hl)
  41+ 95E7 77               ld (hl),a
  42+ 95E8 2C               inc l
  43+ 95E9 1C               inc e
  44+ 95EA 1A               ld a,(de)
  45+ 95EB AE               xor (hl)
  46+ 95EC 77               ld (hl),a
  47+ 95ED 2C               inc l
  48+ 95EE 1C               inc e
  49+ 95EF 1A               ld a,(de)
  50+ 95F0 AE               xor (hl)
  51+ 95F1 77               ld (hl),a
  52+ 95F2 13               inc de
  53+ 95F3
  54+ 95F3 E1               pop hl
  55+ 95F4
  56+ 95F4 1A               ld a,(de)
  57+ 95F5 AE               xor (hl)
  58+ 95F6 77               ld (hl),a
  59+ 95F7 2C               inc l
  60+ 95F8 1C               inc e
  61+ 95F9 1A               ld a,(de)
  62+ 95FA AE               xor (hl)
  63+ 95FB 77               ld (hl),a
  64+ 95FC 2C               inc l
  65+ 95FD 1C               inc e
  66+ 95FE 1A               ld a,(de)
  67+ 95FF AE               xor (hl)
  68+ 9600 77               ld (hl),a
  69+ 9601 13               inc de
  70+ 9602
  71+ 9602 E1               pop hl
  72+ 9603
  73+ 9603 1A               ld a,(de)
  74+ 9604 AE               xor (hl)
  75+ 9605 77               ld (hl),a
  76+ 9606 2C               inc l
  77+ 9607 1C               inc e
  78+ 9608 1A               ld a,(de)
  79+ 9609 AE               xor (hl)
  80+ 960A 77               ld (hl),a
  81+ 960B 2C               inc l
  82+ 960C 1C               inc e
  83+ 960D 1A               ld a,(de)
  84+ 960E AE               xor (hl)
  85+ 960F 77               ld (hl),a
  86+ 9610 13               inc de
  87+ 9611
  88+ 9611 E1               pop hl
  89+ 9612
  90+ 9612 1A               ld a,(de)
  91+ 9613 AE               xor (hl)
  92+ 9614 77               ld (hl),a
  93+ 9615 2C               inc l
  94+ 9616 1C               inc e
  95+ 9617 1A               ld a,(de)
  96+ 9618 AE               xor (hl)
  97+ 9619 77               ld (hl),a
  98+ 961A 2C               inc l
  99+ 961B 1C               inc e
 100+ 961C 1A               ld a,(de)
 101+ 961D AE               xor (hl)
 102+ 961E 77               ld (hl),a
 103+ 961F 13               inc de
 104+ 9620
 105+ 9620 E1               pop hl
 106+ 9621
 107+ 9621 1A               ld a,(de)
 108+ 9622 AE               xor (hl)
 109+ 9623 77               ld (hl),a
 110+ 9624 2C               inc l
 111+ 9625 1C               inc e
 112+ 9626 1A               ld a,(de)
 113+ 9627 AE               xor (hl)
 114+ 9628 77               ld (hl),a
 115+ 9629 2C               inc l
 116+ 962A 1C               inc e
 117+ 962B 1A               ld a,(de)
 118+ 962C AE               xor (hl)
 119+ 962D 77               ld (hl),a
 120+ 962E 13               inc de
 121+ 962F
 122+ 962F E1               pop hl
 123+ 9630
 124+ 9630 1A               ld a,(de)
 125+ 9631 AE               xor (hl)
 126+ 9632 77               ld (hl),a
 127+ 9633 2C               inc l
 128+ 9634 1C               inc e
 129+ 9635 1A               ld a,(de)
 130+ 9636 AE               xor (hl)
 131+ 9637 77               ld (hl),a
 132+ 9638 2C               inc l
 133+ 9639 1C               inc e
 134+ 963A 1A               ld a,(de)
 135+ 963B AE               xor (hl)
 136+ 963C 77               ld (hl),a
 137+ 963D 13               inc de
 138+ 963E
 139+ 963E E1               pop hl
 140+ 963F
 141+ 963F 1A               ld a,(de)
 142+ 9640 AE               xor (hl)
 143+ 9641 77               ld (hl),a
 144+ 9642 2C               inc l
 145+ 9643 1C               inc e
 146+ 9644 1A               ld a,(de)
 147+ 9645 AE               xor (hl)
 148+ 9646 77               ld (hl),a
 149+ 9647 2C               inc l
 150+ 9648 1C               inc e
 151+ 9649 1A               ld a,(de)
 152+ 964A AE               xor (hl)
 153+ 964B 77               ld (hl),a
 154+ 964C 13               inc de
 155+ 964D
 156+ 964D E1               pop hl
 157+ 964E
 158+ 964E 1A               ld a,(de)
 159+ 964F AE               xor (hl)
 160+ 9650 77               ld (hl),a
 161+ 9651 2C               inc l
 162+ 9652 1C               inc e
 163+ 9653 1A               ld a,(de)
 164+ 9654 AE               xor (hl)
 165+ 9655 77               ld (hl),a
 166+ 9656 2C               inc l
 167+ 9657 1C               inc e
 168+ 9658 1A               ld a,(de)
 169+ 9659 AE               xor (hl)
 170+ 965A 77               ld (hl),a
 171+ 965B 13               inc de
 172+ 965C
 173+ 965C E1               pop hl
 174+ 965D
 175+ 965D 1A               ld a,(de)
 176+ 965E AE               xor (hl)
 177+ 965F 77               ld (hl),a
 178+ 9660 2C               inc l
 179+ 9661 1C               inc e
 180+ 9662 1A               ld a,(de)
 181+ 9663 AE               xor (hl)
 182+ 9664 77               ld (hl),a
 183+ 9665 2C               inc l
 184+ 9666 1C               inc e
 185+ 9667 1A               ld a,(de)
 186+ 9668 AE               xor (hl)
 187+ 9669 77               ld (hl),a
 188+ 966A 13               inc de
 189+ 966B
 190+ 966B E1               pop hl
 191+ 966C
 192+ 966C 1A               ld a,(de)
 193+ 966D AE               xor (hl)
 194+ 966E 77               ld (hl),a
 195+ 966F 2C               inc l
 196+ 9670 1C               inc e
 197+ 9671 1A               ld a,(de)
 198+ 9672 AE               xor (hl)
 199+ 9673 77               ld (hl),a
 200+ 9674 2C               inc l
 201+ 9675 1C               inc e
 202+ 9676 1A               ld a,(de)
 203+ 9677 AE               xor (hl)
 204+ 9678 77               ld (hl),a
 205+ 9679 13               inc de
 206+ 967A
 207+ 967A E1               pop hl
 208+ 967B
 209+ 967B 1A               ld a,(de)
 210+ 967C AE               xor (hl)
 211+ 967D 77               ld (hl),a
 212+ 967E 2C               inc l
 213+ 967F 1C               inc e
 214+ 9680 1A               ld a,(de)
 215+ 9681 AE               xor (hl)
 216+ 9682 77               ld (hl),a
 217+ 9683 2C               inc l
 218+ 9684 1C               inc e
 219+ 9685 1A               ld a,(de)
 220+ 9686 AE               xor (hl)
 221+ 9687 77               ld (hl),a
 222+ 9688 13               inc de
 223+ 9689
 224+ 9689 E1               pop hl
 225+ 968A
 226+ 968A 1A               ld a,(de)
 227+ 968B AE               xor (hl)
 228+ 968C 77               ld (hl),a
 229+ 968D 2C               inc l
 230+ 968E 1C               inc e
 231+ 968F 1A               ld a,(de)
 232+ 9690 AE               xor (hl)
 233+ 9691 77               ld (hl),a
 234+ 9692 2C               inc l
 235+ 9693 1C               inc e
 236+ 9694 1A               ld a,(de)
 237+ 9695 AE               xor (hl)
 238+ 9696 77               ld (hl),a
 239+ 9697 13               inc de
 240+ 9698
 241+ 9698 E1               pop hl
 242+ 9699
 243+ 9699 1A               ld a,(de)
 244+ 969A AE               xor (hl)
 245+ 969B 77               ld (hl),a
 246+ 969C 2C               inc l
 247+ 969D 1C               inc e
 248+ 969E 1A               ld a,(de)
 249+ 969F AE               xor (hl)
 250+ 96A0 77               ld (hl),a
 251+ 96A1 2C               inc l
 252+ 96A2 1C               inc e
 253+ 96A3 1A               ld a,(de)
 254+ 96A4 AE               xor (hl)
 255+ 96A5 77               ld (hl),a
 256+ 96A6 13               inc de
 257+ 96A7
 258+ 96A7 E1               pop hl
 259+ 96A8
 260+ 96A8 1A               ld a,(de)
 261+ 96A9 AE               xor (hl)
 262+ 96AA 77               ld (hl),a
 263+ 96AB 2C               inc l
 264+ 96AC 1C               inc e
 265+ 96AD 1A               ld a,(de)
 266+ 96AE AE               xor (hl)
 267+ 96AF 77               ld (hl),a
 268+ 96B0 2C               inc l
 269+ 96B1 1C               inc e
 270+ 96B2 1A               ld a,(de)
 271+ 96B3 AE               xor (hl)
 272+ 96B4 77               ld (hl),a
 273+ 96B5 13               inc de
 274+ 96B6
 275+ 96B6 E1               pop hl
 276+ 96B7
 277+ 96B7 1A               ld a,(de)
 278+ 96B8 AE               xor (hl)
 279+ 96B9 77               ld (hl),a
 280+ 96BA 2C               inc l
 281+ 96BB 1C               inc e
 282+ 96BC 1A               ld a,(de)
 283+ 96BD AE               xor (hl)
 284+ 96BE 77               ld (hl),a
 285+ 96BF 2C               inc l
 286+ 96C0 1C               inc e
 287+ 96C1 1A               ld a,(de)
 288+ 96C2 AE               xor (hl)
 289+ 96C3 77               ld (hl),a
 290+ 96C4 13               inc de
 291+ 96C5
 292+ 96C5 E1               pop hl
 293+ 96C6
 294+ 96C6 1A               ld a,(de)
 295+ 96C7 AE               xor (hl)
 296+ 96C8 77               ld (hl),a
 297+ 96C9 2C               inc l
 298+ 96CA 1C               inc e
 299+ 96CB 1A               ld a,(de)
 300+ 96CC AE               xor (hl)
 301+ 96CD 77               ld (hl),a
 302+ 96CE 2C               inc l
 303+ 96CF 1C               inc e
 304+ 96D0 1A               ld a,(de)
 305+ 96D1 AE               xor (hl)
 306+ 96D2 77               ld (hl),a
 307+ 96D3 13               inc de
 308+ 96D4
 309+ 96D4 ED 73 1E 8C      ld (Scanlines_album_SP),sp
 310+ 96D8 ED 7B 00 8C      ld sp,(Stack)
 311+ 96DC C9               ret
 312+ 96DD
 313+ 96DD              Pinta_lento
 314+ 96DD
 315+ 96DD E1           1 pop hl
 316+ 96DE
 317+ 96DE 1A               ld a,(de)
 318+ 96DF AE               xor (hl)
 319+ 96E0 77               ld (hl),a
 320+ 96E1 2C               inc l
 321+ 96E2 1C               inc e
 322+ 96E3 1A               ld a,(de)
 323+ 96E4 AE               xor (hl)
 324+ 96E5 77               ld (hl),a
 325+ 96E6 2C               inc l
 326+ 96E7 1C               inc e
 327+ 96E8 1A               ld a,(de)
 328+ 96E9 AE               xor (hl)
 329+ 96EA 77               ld (hl),a
 330+ 96EB 13               inc de
 331+ 96EC
 332+ 96EC 10 EF            djnz 1B
 333+ 96EE
 334+ 96EE ED 73 1E 8C      ld (Scanlines_album_SP),sp
 335+ 96F2 ED 7B 00 8C      ld sp,(Stack)
 336+ 96F6 C9               ret
# file closed: Pinta_Sprites.asm
2172  96F7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96F7              ; ******************************************************************************************************************************************************************************************
   2+ 96F7              ;
   3+ 96F7              ; 26/06/23
   4+ 96F7              ;
   5+ 96F7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96F7
   7+ 96F7              Draw
   8+ 96F7
   9+ 96F7 CD 9D 99     	call Prepara_draw
  10+ 96FA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96FB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96FC 28 05        	jr z,2F
  13+ 96FE
  14+ 96FE 3A D2 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9701 18 0C        	jr 1F
  16+ 9703
  17+ 9703 2A D0 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9706 22 C3 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9709 CD 95 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 970C              ;													; _la esquina superior izquierda de la pantalla.
  21+ 970C
  22+ 970C CD 3C 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 970F
  24+ 970F 3A C0 8B     1 ld a,(Ctrl_0)
  25+ 9712 CB 6F        	bit 5,a
  26+ 9714 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9716
  28+ 9716 CD 2B 97     	call Comprueba_limite_horizontal
  29+ 9719 CD BB 97     	call Comprueba_limite_vertical
  30+ 971C
  31+ 971C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 971C              ; -----------------------
  33+ 971C              ; -----------------------
  34+ 971C              ; -----------------------
  35+ 971C
  36+ 971C CD 11 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 971F CD 48 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9722
  39+ 9722 3A C0 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9725 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9727 32 C0 8B     	ld (Ctrl_0),a
  42+ 972A
  43+ 972A C9           	ret
  44+ 972B
  45+ 972B              ; *******************************************************************************************************************************************************************************************
  46+ 972B              ;	21/01/23
  47+ 972B              ;
  48+ 972B              ; 	Comprueba_limite_horizontal.
  49+ 972B              ;
  50+ 972B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 972B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 972B              ;
  53+ 972B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 972B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 972B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 972B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 972B
  58+ 972B
  59+ 972B
  60+ 972B 3A C0 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 972E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9730 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9732 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9734 32 C0 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9737 18 09            jr 6F
  66+ 9739 CB 5F        1 bit 3,a
  67+ 973B 28 0A            jr z,2F
  68+ 973D E6 F7            and $f7
  69+ 973F 32 C0 8B         ld (Ctrl_0),a
  70+ 9742 CD 95 98     6 call Inicializacion
  71+ 9745 18 5B            jr 5F
  72+ 9747 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9748
  74+ 9748              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9748              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9748
  77+ 9748 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9749 2A D4 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 974C CD 8B 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 974F 67           	ld h,a
  81+ 9750 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9751 CD 8B 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9754 67           	ld h,a
  84+ 9755 A7           	and a
  85+ 9756 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9758 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9759 3A D2 8B     	ld a,(Cuad_objeto)
  88+ 975C FE 02        	cp 2
  89+ 975E 38 1E        	jr c,3F
  90+ 9760 28 1C        	jr z,3F
  91+ 9762 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9763 28 23            jr z,7F
  93+ 9765 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9767 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9769 E1           	pop hl
  96+ 976A
  97+ 976A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 976A              ; _para indicar con E="2" en caso necesario.
  99+ 976A
 100+ 976A E5               push hl
 101+ 976B C5               push bc
 102+ 976C CD 8B 94     	call calcula_tercio
 103+ 976F FE 01        	cp 1
 104+ 9771 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9773 CD A3 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9776 28 26            jr z,9F
 107+ 9778 38 24            jr c,9F
 108+ 977A 1E 00        11 ld e,0
 109+ 977C 18 22            jr 8F
 110+ 977E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 977F 28 07        	jr z, 7F
 112+ 9781 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9783 1E 00         	ld e,0
 114+ 9785 E1           	pop hl
 115+ 9786 18 04        	jr 4F
 116+ 9788 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 978A 18 15            jr 10F
 118+ 978C
 119+ 978C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 978C              ; _para indicar con E="2" en caso necesario.
 121+ 978C
 122+ 978C E5           4 push hl
 123+ 978D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 978E CD 8B 94     	call calcula_tercio
 125+ 9791 FE 01        	cp 1
 126+ 9793 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9795 CD A3 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9798 28 04            jr z,9F
 129+ 979A 30 02            jr nc,9F
 130+ 979C 18 02        	jr 8F
 131+ 979E 1E 02        9 ld e,2
 132+ 97A0 C1           8 pop bc
 133+ 97A1 E1           10 pop hl
 134+ 97A2 C9           5 ret
 135+ 97A3
 136+ 97A3              ; --------------------
 137+ 97A3              ;
 138+ 97A3              ; 25/08/22
 139+ 97A3
 140+ 97A3 CD 8B 94     Comprueba_centro call calcula_tercio
 141+ 97A6 67               ld h,a
 142+ 97A7 08           	ex af,af
 143+ 97A8 FE 02        	cp 2
 144+ 97AA 38 07        	jr c,1F
 145+ 97AC 28 05        	jr z,1F
 146+ 97AE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97B1 18 03        	jr 2F
 148+ 97B3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97B6 08           2 ex af,af
 150+ 97B7 A7               and a
 151+ 97B8 ED 42            sbc hl,bc
 152+ 97BA C9               ret
 153+ 97BB
 154+ 97BB              ; *********************************************************************************************************************************************************************************************
 155+ 97BB              ;
 156+ 97BB              ;   16/8/22
 157+ 97BB              ;
 158+ 97BB              ;	Comprueba_limite_vertical
 159+ 97BB              ;
 160+ 97BB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97BB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97BB              ;
 163+ 97BB
 164+ 97BB 2A C3 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97BE 7D           	ld a,l
 166+ 97BF E6 1F        	and $1F
 167+ 97C1 57           	ld d,a
 168+ 97C2 3A D6 8B     	ld a,(Limite_vertical)
 169+ 97C5 BA           	cp d 											; Límite - Posición.
 170+ 97C6 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97C7 3A D2 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97CA CB 47        	bit 0,a
 173+ 97CC 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97CE
 175+ 97CE              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97CE
 177+ 97CE 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97CF 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97D1
 180+ 97D1              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97D1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97D1
 183+ 97D1 3A B4 8B         ld a,(Coordenada_X)
 184+ 97D4 16 0F            ld d,Centro_izquierda
 185+ 97D6 A7               and a
 186+ 97D7 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97D8 28 1E            jr z,3F
 188+ 97DA 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97DC              ;                                                    ; _salimos sin modificar nada.
 190+ 97DC 18 0E            jr 2F
 191+ 97DE 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97DF 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97E1
 194+ 97E1              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97E1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97E1
 197+ 97E1 3A B4 8B         ld a,(Coordenada_X)
 198+ 97E4 16 10            ld d,Centro_derecha
 199+ 97E6 A7               and a
 200+ 97E7 92               sub d
 201+ 97E8 28 0E            jr z,3F
 202+ 97EA 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97EC              ;                                                    ; _salimos sin modificar nada.
 204+ 97EC CB 43        2 bit 0,e
 205+ 97EE 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97F0 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97F1 CD 85 98         call Modificaccionne
 208+ 97F4 C1           	pop bc
 209+ 97F5 CD 95 98         call Inicializacion
 210+ 97F8 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97F9
 212+ 97F9              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97F9
 214+ 97F9 C5           4 push bc
 215+ 97FA 01 C2 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97FD 0A           	ld a,(bc)
 217+ 97FE 3D           	dec a
 218+ 97FF 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9800 7D           	ld a,l
 220+ 9801 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9802 CB 47        	bit 0,a
 222+ 9804 28 03        	jr z,5F
 223+ 9806 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9807 18 2E        	jr 7F
 225+ 9809
 226+ 9809              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9809
 228+ 9809 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 980A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 980B 3A C0 8B     	ld a,(Ctrl_0)
 231+ 980E CB 4F        	bit 1,a
 232+ 9810 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9812 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9813
 235+ 9813              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9813
 237+ 9813 1C               inc e
 238+ 9814 1D               dec e
 239+ 9815 20 07            jr nz,12F
 240+ 9817 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9818 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9819 22 C3 8B     	ld (Posicion_actual),hl
 243+ 981C 18 44        13 jr 9F
 244+ 981E CB 43        12 bit 0,e
 245+ 9820 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9822              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9822 C1           	pop bc
 248+ 9823 18 D3        	jr 3B
 249+ 9825 80           14 add b
 250+ 9826 6F               ld l,a
 251+ 9827 22 C3 8B     	ld (Posicion_actual),hl
 252+ 982A CD 85 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 982D 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 982F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9831 32 C0 8B         ld (Ctrl_0),a
 256+ 9834 F1           	pop af
 257+ 9835 18 2B        	jr 9F
 258+ 9837
 259+ 9837              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9837
 261+ 9837 F5           7 push af
 262+ 9838 3A C0 8B     	ld a,(Ctrl_0)
 263+ 983B CB 47        	bit 0,a
 264+ 983D 20 1D        	jr nz,8F
 265+ 983F F1           	pop af
 266+ 9840
 267+ 9840              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9840
 269+ 9840 1C           	inc e
 270+ 9841 1D               dec e
 271+ 9842 20 07            jr nz,10F
 272+ 9844 90           	sub b
 273+ 9845 6F               ld l,a
 274+ 9846 22 C3 8B     	ld (Posicion_actual),hl
 275+ 9849 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 984B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 984B CB 43        10 bit 0,e
 278+ 984D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 984F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 984F C1           	pop bc
 281+ 9850 18 A6        	jr 3B
 282+ 9852 90           16 sub b
 283+ 9853 6F               ld l,a
 284+ 9854 22 C3 8B     	ld (Posicion_actual),hl
 285+ 9857 CD 85 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 985A 18 06            jr 9F
 287+ 985C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 985E 32 C0 8B         ld (Ctrl_0),a
 289+ 9861 F1           	pop af
 290+ 9862 C1           9 pop bc
 291+ 9863 1E 00        	ld e,0
 292+ 9865 CD 95 98         call Inicializacion
 293+ 9868 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9869 08           	ex af,af
 295+ 986A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 986B 18 8B            jr 3B
 297+ 986D
 298+ 986D              ; --------------------
 299+ 986D
 300+ 986D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 986F CD B8 99     1 call PreviousScan
 302+ 9872 10 FB            djnz 1B
 303+ 9874 22 C3 8B     	ld (Posicion_actual),hl
 304+ 9877 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9878 C9           	ret
 306+ 9879
 307+ 9879              ; --------------------
 308+ 9879
 309+ 9879 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 987B CD A9 99     1 call NextScan
 311+ 987E 10 FB            djnz 1B
 312+ 9880 22 C3 8B     	ld (Posicion_actual),hl
 313+ 9883 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9884 C9           	ret
 315+ 9885
 316+ 9885              ; --------------------
 317+ 9885              ;
 318+ 9885              ;	22/01/23
 319+ 9885              ;
 320+ 9885              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9885              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9885              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9885
 324+ 9885
 325+ 9885              Modificaccionne
 326+ 9885
 327+ 9885 3A D2 8B     	ld a,(Cuad_objeto)
 328+ 9888 FE 02        	cp 2
 329+ 988A CC 6D 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 988D DC 6D 98         call c,Modifica_Pos_actual
 331+ 9890 C8           	ret z
 332+ 9891 CD 79 98         call Modifica_Pos_actual2
 333+ 9894 C9               ret
 334+ 9895
 335+ 9895              ; *************************************************************************************************************************************************************************************************
 336+ 9895              ;
 337+ 9895              ;	13/8/22
 338+ 9895              ;
 339+ 9895              ;	Inicializacion
 340+ 9895              ;
 341+ 9895              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9895              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9895              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9895              ;
 345+ 9895              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9895              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9895              ;	_ desaparece/aparece.
 348+ 9895
 349+ 9895              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9895              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9895              ;
 352+ 9895              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9895              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9895              ; 		   [E] ="0"
 355+ 9895
 356+ 9895              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9895
 358+ 9895 CD 8B 94     Inicializacion call calcula_tercio
 359+ 9898 28 36        	jr z,primit
 360+ 989A E6 02        	and 2
 361+ 989C 20 07        	jr nz,segmit
 362+ 989E 7D           	ld a,l
 363+ 989F FE 7F        	cp $7f
 364+ 98A1 38 2D        	jr c,primit
 365+ 98A3 28 2B        	jr z,primit
 366+ 98A5 CD 0B 99     segmit call column
 367+ 98A8 38 13        	jr c,tercuad
 368+ 98AA 3E 04        cuarcuad ld a,4
 369+ 98AC 32 D2 8B     	ld (Cuad_objeto),a
 370+ 98AF 21 20 48     	ld hl,$4820
 371+ 98B2 22 D4 8B     	ld (Limite_horizontal),hl
 372+ 98B5 21 D6 8B     	ld hl,Limite_vertical
 373+ 98B8 36 0D        	ld (hl),$0d
 374+ 98BA 08           	ex af,af
 375+ 98BB 18 3C        	jr 1F
 376+ 98BD              tercuad
 377+ 98BD 3E 03        	ld a,3
 378+ 98BF 32 D2 8B     	ld (Cuad_objeto),a
 379+ 98C2 21 20 48     	ld hl,$4820
 380+ 98C5 22 D4 8B     	ld (Limite_horizontal),hl
 381+ 98C8 21 D6 8B     	ld hl,Limite_vertical
 382+ 98CB 36 12        	ld (hl),$12
 383+ 98CD 08           	ex af,af
 384+ 98CE 18 29        	jr 1F
 385+ 98D0 CD 0B 99     primit call column
 386+ 98D3 38 13        	jr c, primcuad
 387+ 98D5              segcuad
 388+ 98D5 3E 02        	ld a,2
 389+ 98D7 32 D2 8B     	ld (Cuad_objeto),a
 390+ 98DA 21 C0 4F     	ld hl,$4fc0
 391+ 98DD 22 D4 8B     	ld (Limite_horizontal),hl
 392+ 98E0 21 D6 8B     	ld hl,Limite_vertical
 393+ 98E3 36 0D        	ld (hl),$0d
 394+ 98E5 08           	ex af,af
 395+ 98E6 18 11        	jr 1F
 396+ 98E8              primcuad
 397+ 98E8 3E 01        	ld a,1
 398+ 98EA 32 D2 8B     	ld (Cuad_objeto),a
 399+ 98ED 21 C0 4F     	ld hl,$4fc0
 400+ 98F0 22 D4 8B     	ld (Limite_horizontal),hl
 401+ 98F3 21 D6 8B     	ld hl,Limite_vertical
 402+ 98F6 36 12        	ld (hl),$12
 403+ 98F8 08           	ex af,af
 404+ 98F9
 405+ 98F9 C5           1 push bc
 406+ 98FA E5           	push hl
 407+ 98FB D5           	push de
 408+ 98FC
 409+ 98FC 2A C3 8B     	ld hl,(Posicion_actual)
 410+ 98FF CD A9 94     	call Genera_coordenadas
 411+ 9902
 412+ 9902 D1           	pop de
 413+ 9903 E1           	pop hl
 414+ 9904 C1           	pop bc
 415+ 9905
 416+ 9905 21 C0 8B     	ld hl,Ctrl_0
 417+ 9908 CB EE        	set 5,(hl)
 418+ 990A C9           	ret
 419+ 990B
 420+ 990B              ; ------------------------------------------------------------------------------------------------------------------
 421+ 990B
 422+ 990B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 990B              ;
 424+ 990B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 990B
 426+ 990B 7D           column ld a,l
 427+ 990C E6 1F        	and $1f
 428+ 990E FE 10         	cp $10
 429+ 9910 C9            	ret
 430+ 9911
 431+ 9911              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9911              ;
 433+ 9911              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9911              ;
 435+ 9911              ; 14/12/22
 436+ 9911              ;
 437+ 9911              ;	Modifica: A y BC.
 438+ 9911
 439+ 9911 3A D2 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9914 E6 01        	and 1
 441+ 9916 28 17        	jr z,1F
 442+ 9918
 443+ 9918              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9918
 445+ 9918 3A B4 8B     	ld a,(Coordenada_X)
 446+ 991B 47           	ld b,a
 447+ 991C 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 991D 79           	ld a,c
 449+ 991E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 991F 38 08        	jr c,2F
 451+ 9921 47           	ld b,a
 452+ 9922 79           	ld a,c
 453+ 9923 90           	sub b
 454+ 9924 32 D3 8B     	ld (Columnas),a
 455+ 9927 18 1B        	jr 4F
 456+ 9929 79           2 ld a,c
 457+ 992A 32 D3 8B     	ld (Columnas),a
 458+ 992D 18 15        	jr 4F
 459+ 992F
 460+ 992F              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 992F
 462+ 992F 3A B4 8B     1 ld a,(Coordenada_X)
 463+ 9932 81           	add c
 464+ 9933 3D           	dec a
 465+ 9934 D6 1F        	sub $1f
 466+ 9936 38 08        	jr c,3F
 467+ 9938 47           	ld b,a
 468+ 9939 79           	ld a,c
 469+ 993A 90           	sub b
 470+ 993B 32 D3 8B     	ld (Columnas),a
 471+ 993E 18 04        	jr 4F
 472+ 9940 79           3 ld a,c
 473+ 9941 32 D3 8B     	ld (Columnas),a
 474+ 9944 D9           4 exx
 475+ 9945 4F           	ld c,a
 476+ 9946 D9           	exx
 477+ 9947 C9            ret
 478+ 9948
 479+ 9948              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9948              ;
 481+ 9948              ;   19/7/23
 482+ 9948              ;
 483+ 9948              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9948              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9948              ;
 486+ 9948              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9948              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9948              ;
 489+ 9948              ;	DESTRUYE: HL,B Y A.
 490+ 9948
 491+ 9948 3A D2 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 994B FE 02        	cp 2
 493+ 994D 38 18        	jr c,1F
 494+ 994F 28 16        	jr z,1F
 495+ 9951 E6 01        	and 1
 496+ 9953 28 0D        	jr z,3F
 497+ 9955
 498+ 9955              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9955
 500+ 9955 CD 91 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9958
 502+ 9958 7D           9 ld a,l
 503+ 9959 E6 1F        	and $1f
 504+ 995B 28 2A        	jr z,7F
 505+ 995D 2B           	dec hl
 506+ 995E 10 F8        	djnz 9B
 507+ 9960 18 25        	jr 7F
 508+ 9962
 509+ 9962              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9962
 511+ 9962 2A C3 8B     3 ld hl,(Posicion_actual)
 512+ 9965 18 20        	jr 7F
 513+ 9967
 514+ 9967 28 14        1 jr z,2F
 515+ 9969
 516+ 9969              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9969
 518+ 9969 CD 91 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 996C
 520+ 996C 7D           4 ld a,l
 521+ 996D E6 1F        	and $1f
 522+ 996F 28 03        	jr z,6F
 523+ 9971 2B           	dec hl
 524+ 9972 10 F8        	djnz 4B
 525+ 9974 06 0F        6 ld b,15
 526+ 9976 CD B8 99     5 call PreviousScan
 527+ 9979 10 FB        	djnz 5B
 528+ 997B 18 0A        	jr 7F
 529+ 997D
 530+ 997D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 997D
 532+ 997D CD 91 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9980 06 0F        	ld b,15
 534+ 9982 CD B8 99     8 call PreviousScan
 535+ 9985 10 FB        	djnz 8B
 536+ 9987
 537+ 9987 E5           7 push hl
 538+ 9988 DD E1        	pop ix
 539+ 998A
 540+ 998A 2A C5 8B     	ld hl,(Puntero_objeto)
 541+ 998D E5           	push hl
 542+ 998E FD E1        	pop iy
 543+ 9990
 544+ 9990 C9           	ret
 545+ 9991
 546+ 9991              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9991              ;
 548+ 9991              ;	2/1/23
 549+ 9991              ;
 550+ 9991              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9991              ;
 552+ 9991              ;	Tras esta rutina tenemos:
 553+ 9991              ;
 554+ 9991              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9991              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9991              ;
 557+ 9991              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9991
 559+ 9991 2A C3 8B     Operandos ld hl,(Posicion_actual)
 560+ 9994 3A D3 8B     	ld a,(Columnas)
 561+ 9997 3D           	dec a
 562+ 9998 20 01        	jr nz,1F
 563+ 999A 3C           	inc a
 564+ 999B 47           1 ld b,a
 565+ 999C C9           	ret
 566+ 999D
 567+ 999D              ; --------------------------------------------------------------------------------------------------------------------
 568+ 999D              ;
 569+ 999D              ;	Prepara_draw
 570+ 999D              ;
 571+ 999D              ;	Es una rutina de carga.
 572+ 999D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 999D              ;
 574+ 999D              ;	FUNCIONAMIENTO:
 575+ 999D              ;
 576+ 999D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 999D              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 999D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 999D              ;
 580+ 999D              ;	DESTRUYE:
 581+ 999D              ;
 582+ 999D              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 999D
 584+ 999D 21 C1 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99A0 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99A1 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99A2 4E           	ld c,(hl)
 588+ 99A3 2A C3 8B     	ld hl,(Posicion_actual)
 589+ 99A6 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99A8 C9           	ret
 591+ 99A9
 592+ 99A9              ;----------------------------------------------------------------------------------------------------------------
 593+ 99A9              ;
 594+ 99A9              ;	5/08/22
 595+ 99A9              ;
 596+ 99A9              ;   NextScan.
 597+ 99A9              ;
 598+ 99A9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99A9              ;
 600+ 99A9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99A9              ;
 602+ 99A9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99A9              ;
 604+ 99A9              ;       DESTRUIDOS: AF y HL !!!
 605+ 99A9              ;
 606+ 99A9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99A9              ;
 608+ 99A9
 609+ 99A9 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99AA 7C               ld a,h
 611+ 99AB E6 07            and 7
 612+ 99AD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99AE
 614+ 99AE 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99AF C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99B1 6F               ld l,a
 617+ 99B2 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99B3
 619+ 99B3 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99B4 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99B6 67               ld h,a
 622+ 99B7 C9               ret
 623+ 99B8
 624+ 99B8              ;----------------------------------------------------------------------------------------------------------------
 625+ 99B8              ;
 626+ 99B8              ;	5/08/22
 627+ 99B8              ;
 628+ 99B8              ;   PreviousScan.
 629+ 99B8              ;
 630+ 99B8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99B8              ;
 632+ 99B8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99B8              ;
 634+ 99B8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99B8              ;
 636+ 99B8              ;       DESTRUIDOS: AF y HL !!!
 637+ 99B8              ;
 638+ 99B8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99B8              ;
 640+ 99B8
 641+ 99B8 7C           PreviousScan ld a,h
 642+ 99B9 25               dec h               ; Dec H.
 643+ 99BA E6 07            and 7
 644+ 99BC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99BD
 646+ 99BD 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99BE D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99C0 6F               ld l,a
 649+ 99C1 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99C2
 651+ 99C2 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99C3 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99C5 67               ld h,a
 654+ 99C6 C9               ret
 655+ 99C7
 656+ 99C7
 657+ 99C7
 658+ 99C7
 659+ 99C7
 660+ 99C7
 661+ 99C7
 662+ 99C7
 663+ 99C7
 664+ 99C7
 665+ 99C7
 666+ 99C7
# file closed: Draw_XOR.asm
2173  99C7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99C7
   2+ 99C7              ; ******************************************************************************************************************************************************************************************
   3+ 99C7              ;
   4+ 99C7              ;   20/05/23
   5+ 99C7              ;
   6+ 99C7              ;	Recompone_posicion_inicio
   7+ 99C7              ;
   8+ 99C7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99C7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99C7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99C7              ;	_ a una u otra rutina.
  12+ 99C7
  13+ 99C7              Recompone_posicion_inicio
  14+ 99C7
  15+ 99C7 2A D0 8B     	ld hl,(Posicion_inicio)
  16+ 99CA 7D           	ld a,l
  17+ 99CB E6 1F        	and $1f
  18+ 99CD 28 16        	jr z,1F
  19+ 99CF
  20+ 99CF FE 1F        	cp $1f
  21+ 99D1 28 0D        	jr z,3F
  22+ 99D3
  23+ 99D3 21 BF 8B     	ld hl,Ctrl_2
  24+ 99D6 CB C6        	set 0,(hl)
  25+ 99D8 2A C5 8B     	ld hl,(Puntero_objeto)
  26+ 99DB 22 F1 8B     	ld (Repone_puntero_objeto),hl
  27+ 99DE 18 08        	jr 2F
  28+ 99E0
  29+ 99E0 CD 8E 9B     3 call Mov_left
  30+ 99E3 18 03        	jr 2F
  31+ 99E5
  32+ 99E5 CD 6B 9A     1 call Mov_right
  33+ 99E8 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99EB 22 C5 8B     	ld (Puntero_objeto),hl
  35+ 99EE C9           	ret
  36+ 99EF
  37+ 99EF              ; ******************************************************************************************************************************************************************************************
  38+ 99EF              ;
  39+ 99EF              ;   27/05/23
  40+ 99EF              ;
  41+ 99EF              ;	Mov_down
  42+ 99EF              ;
  43+ 99EF              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99EF              ;
  45+ 99EF              ;
  46+ 99EF              Mov_down
  47+ 99EF
  48+ 99EF CD 59 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99F2              ;																	; _ repone (Puntero_objeto).
  50+ 99F2 21 C0 8B     	ld hl,Ctrl_0
  51+ 99F5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99F7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99F7              ; 																	; _ en el caso de que no lo haya.
  54+ 99F7 3A DB 8B     	ld a,(Vel_down)
  55+ 99FA 47           	ld b,a
  56+ 99FB 2A C3 8B         ld hl,(Posicion_actual)
  57+ 99FE CD 8B 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A01 E6 02        	and 2
  59+ 9A03 28 17        	jr z,1F
  60+ 9A05
  61+ 9A05              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A05              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A05
  64+ 9A05 7C           	ld a,h
  65+ 9A06 FE 57        	cp $57
  66+ 9A08 20 12        	jr nz,1F
  67+ 9A0A
  68+ 9A0A 7D           	ld a,l
  69+ 9A0B C6 20        	add $20
  70+ 9A0D 30 0D        	jr nc,1F
  71+ 9A0F
  72+ 9A0F              ; ------------------------------
  73+ 9A0F              ;
  74+ 9A0F              ;	12/01/24
  75+ 9A0F
  76+ 9A0F              ;	call Reaparece_arriba
  77+ 9A0F CD 1B 9D     	call Reinicio
  78+ 9A12
  79+ 9A12              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A12
  81+ 9A12 3A 24 8C     	ld a,(Ctrl_3)
  82+ 9A15 CB CF        	set 1,a
  83+ 9A17 32 24 8C     	ld (Ctrl_3),a
  84+ 9A1A
  85+ 9A1A 18 08        	jr 3F
  86+ 9A1C              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A1C              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A1C              ; ------------------------------
  89+ 9A1C
  90+ 9A1C CD A9 99     1 call NextScan
  91+ 9A1F 22 C3 8B     	ld (Posicion_actual),hl
  92+ 9A22 10 DA            djnz 2B
  93+ 9A24 CD A9 94     3 call Genera_coordenadas
  94+ 9A27 C9           	ret
  95+ 9A28
  96+ 9A28              ; ******************************************************************************************************************************************************************************************
  97+ 9A28              ;
  98+ 9A28              ;   27/05/23
  99+ 9A28              ;
 100+ 9A28              ;	Mov_up
 101+ 9A28              ;
 102+ 9A28              ; 	Mueve el Sprite hacia arriba.
 103+ 9A28              ;
 104+ 9A28              ;
 105+ 9A28              Mov_up
 106+ 9A28
 107+ 9A28 CD 59 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A2B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A2B 21 C0 8B     	ld hl,Ctrl_0
 110+ 9A2E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A30              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A30              ; 																		; _ en el caso de que no lo haya.
 113+ 9A30 3A DA 8B     	ld a,(Vel_up)
 114+ 9A33 47           	ld b,a
 115+ 9A34 2A C3 8B     	ld hl,(Posicion_actual)
 116+ 9A37 CD 8B 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A3A A7           	and a
 118+ 9A3B 20 10        	jr nz,1F
 119+ 9A3D
 120+ 9A3D              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A3D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A3D
 123+ 9A3D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A3E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A40 20 0B            jr nz,1F
 126+ 9A42 7D               ld a,l
 127+ 9A43 D6 20            sub $20
 128+ 9A45 30 06            jr nc,1F
 129+ 9A47 25               dec h
 130+ 9A48
 131+ 9A48              ; -----------------------------
 132+ 9A48 CD FC 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A4B              ;	call Reinicio
 134+ 9A4B              ; -----------------------------
 135+ 9A4B
 136+ 9A4B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A4D CD B8 99     1 call PreviousScan
 138+ 9A50 22 C3 8B     	ld (Posicion_actual),hl
 139+ 9A53 10 E2            djnz 3B
 140+ 9A55 CD A9 94     2 call Genera_coordenadas
 141+ 9A58 C9           	ret
 142+ 9A59
 143+ 9A59              ; -----------------------------
 144+ 9A59              ;
 145+ 9A59              ;	27/5/23
 146+ 9A59              ;
 147+ 9A59              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A59              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A59              ;
 150+ 9A59              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A59              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A59              ;
 153+ 9A59              ;	Modifica: A y (Puntero_objeto).
 154+ 9A59
 155+ 9A59 3A BF 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A5C CB 47        	bit 0,a
 157+ 9A5E C8           	ret z
 158+ 9A5F CB 87        	res 0,a
 159+ 9A61 32 BF 8B     	ld (Ctrl_2),a
 160+ 9A64 2A F1 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A67 22 C5 8B     	ld (Puntero_objeto),hl
 162+ 9A6A C9           	ret
 163+ 9A6B
 164+ 9A6B              ; ******************************************************************************************************************************************************************************************
 165+ 9A6B              ;
 166+ 9A6B              ;	19/10/22
 167+ 9A6B              ;
 168+ 9A6B              ;	Mov_right.
 169+ 9A6B              ;
 170+ 9A6B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A6B              ;
 172+ 9A6B
 173+ 9A6B 3A C0 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A6E CB 77        	bit 6,a
 175+ 9A70 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A72
 177+ 9A72 CD AA 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A75 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A76
 180+ 9A76 21 C0 8B     	ld hl,Ctrl_0
 181+ 9A79 CB E6        	set 4,(hl)
 182+ 9A7B 18 52        	jr 8F
 183+ 9A7D
 184+ 9A7D 21 C0 8B     10 ld hl,Ctrl_0
 185+ 9A80 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A82              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A82              ; 																	; _ en el caso de que no lo haya.
 188+ 9A82 3A B4 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A85 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A87 20 46        	jr nz,8F
 191+ 9A89
 192+ 9A89 3A C7 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A8C A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A8D 28 40        	jr z,8F
 195+ 9A8F
 196+ 9A8F              ; ---------- ---------- ----------
 197+ 9A8F              ;
 198+ 9A8F              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A8F
 200+ 9A8F 3A D9 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A92 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A94 28 11        	jr z,1F
 203+ 9A96 38 06        	jr c,6F
 204+ 9A98 FE 04        	cp 4
 205+ 9A9A 28 14        	jr z,7F
 206+ 9A9C 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A9E
 208+ 9A9E              ; ---------- ---------- ----------
 209+ 9A9E              ;
 210+ 9A9E              ; Perfiles de velocidad
 211+ 9A9E              ;
 212+ 9A9E
 213+ 9A9E 3A C7 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AA1 FE FE        	cp $fe
 215+ 9AA3 20 2A        	jr nz,8F
 216+ 9AA5 18 10        	jr 3F
 217+ 9AA7 3A C7 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AAA FE FD        	cp $fd
 219+ 9AAC 20 21        	jr nz,8F
 220+ 9AAE 18 07        	jr 3F
 221+ 9AB0 3A C7 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AB3 FE FB        	cp $fb
 223+ 9AB5 20 18        	jr nz,8F
 224+ 9AB7
 225+ 9AB7              ; ---------- ---------- ----------
 226+ 9AB7
 227+ 9AB7              3
 228+ 9AB7 CD EA 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ABA              ;	call Reinicio
 230+ 9ABA
 231+ 9ABA              ; ---------- ---------- ----------
 232+ 9ABA              ;
 233+ 9ABA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ABA
 235+ 9ABA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9ABC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ABD CD D6 9A     	call DESPLZ_DER
 238+ 9AC0 C1           	pop bc
 239+ 9AC1 10 F9        	djnz 5B
 240+ 9AC3 2A C3 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AC6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AC7 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9ACA CD A9 94     	call Genera_coordenadas
 244+ 9ACD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9ACF
 246+ 9ACF              ; ---------- ---------- ----------
 247+ 9ACF
 248+ 9ACF 2A C3 8B     8 ld hl,(Posicion_actual)
 249+ 9AD2 CD D6 9A     	call DESPLZ_DER
 250+ 9AD5 C9           2 ret
 251+ 9AD6
 252+ 9AD6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AD6              ;
 254+ 9AD6              ;	22/9/22
 255+ 9AD6              ;
 256+ 9AD6
 257+ 9AD6 CD E5 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AD9 CD 31 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9ADC CD 5A 9B         call Ciclo_completo
 260+ 9ADF 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AE2 CB FE        	set 7,(hl)
 262+ 9AE4 C9           	ret
 263+ 9AE5
 264+ 9AE5              ; ******************************************************************************************************************************************************************************************
 265+ 9AE5              ;	15/02/23
 266+ 9AE5              ;
 267+ 9AE5
 268+ 9AE5 3A D9 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AE8 47           	ld b,a
 270+ 9AE9 2A CC 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AEC 23           1 inc hl
 272+ 9AED 23           	inc hl
 273+ 9AEE 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AF0 22 CC 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AF3 CD 93 90     	call Extrae_address
 276+ 9AF6 22 C5 8B     	ld (Puntero_objeto),hl
 277+ 9AF9
 278+ 9AF9              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AF9
 280+ 9AF9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AF9              ; Cuántos movimientos hemos hecho ??
 282+ 9AF9              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AF9
 284+ 9AF9 2A C8 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AFC EB           	ex de,hl
 286+ 9AFD A7           	and a
 287+ 9AFE ED 52        	sbc hl,de
 288+ 9B00 CB 3D        	srl l
 289+ 9B02 3E 08        6 ld a,8
 290+ 9B04 95           	sub l
 291+ 9B05 30 1E        	jr nc,3F
 292+ 9B07
 293+ 9B07              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B07              ; B="0".
 295+ 9B07
 296+ 9B07 04           4 inc b
 297+ 9B08 3C           	inc a
 298+ 9B09 20 FC        	jr nz,4B
 299+ 9B0B 78           	ld a,b
 300+ 9B0C 08           	ex af,af
 301+ 9B0D 2A C8 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B10 23           5 inc hl
 303+ 9B11 23           	inc hl
 304+ 9B12 10 FC        	djnz 5B
 305+ 9B14 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B17 CD 93 90     	call Extrae_address
 307+ 9B1A 22 C5 8B     	ld (Puntero_objeto),hl
 308+ 9B1D
 309+ 9B1D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B1D              ; _(Posicion_actual).
 311+ 9B1D
 312+ 9B1D 21 C3 8B     	ld hl,Posicion_actual
 313+ 9B20 34           	inc (hl)
 314+ 9B21 08               ex af,af
 315+ 9B22 6F           	ld l,a
 316+ 9B23 18 DD        	jr 6B
 317+ 9B25
 318+ 9B25              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B25
 320+ 9B25 47           3 ld b,a
 321+ 9B26 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B29 23           2 inc hl
 323+ 9B2A 23           	inc hl
 324+ 9B2B 10 FC        	djnz 2B
 325+ 9B2D 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B30 C9           8 ret
 327+ 9B31
 328+ 9B31              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B31              ;
 330+ 9B31              ;	24/7/22
 331+ 9B31              ;
 332+ 9B31              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B31              ;
 334+ 9B31              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B31              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B31              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B31
 338+ 9B31 3A C7 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B34 A7           	and a
 340+ 9B35 20 1F        	jr nz,1F
 341+ 9B37 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B39 32 C7 8B         ld (CTRL_DESPLZ),a
 343+ 9B3C
 344+ 9B3C 21 C2 8B     	ld hl,Columns
 345+ 9B3F 34           	inc (hl)
 346+ 9B40 3A D2 8B     	ld a,(Cuad_objeto)
 347+ 9B43 E6 01        	and 1
 348+ 9B45 28 0F        	jr z,1F
 349+ 9B47 2A C3 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B4A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B4B 22 C3 8B     	ld (Posicion_actual),hl
 352+ 9B4E CD A9 94     	call Genera_coordenadas
 353+ 9B51 CD B6 9C     	call Inc_CTRL_DESPLZ
 354+ 9B54 18 03        	jr 2F
 355+ 9B56 CD B6 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B59 C9           2 ret
 357+ 9B5A
 358+ 9B5A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B5A              ;
 360+ 9B5A              ;	24/7/22
 361+ 9B5A              ;
 362+ 9B5A              ;	Ciclo_completo.
 363+ 9B5A              ;
 364+ 9B5A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B5A              ;
 366+ 9B5A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B5A              ; 	Decrementamos (Columns).
 368+ 9B5A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B5A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B5A
 371+ 9B5A
 372+ 9B5A 3A C7 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B5D FE FF        	cp $ff
 374+ 9B5F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B61 E6 F0        	and $f0
 376+ 9B63 20 28        	jr nz,3F
 377+ 9B65
 378+ 9B65              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B65
 380+ 9B65 3A C7 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B68 47           	ld b,a
 382+ 9B69 3E F8        	ld a,$f8
 383+ 9B6B 80           	add b
 384+ 9B6C 32 C7 8B     	ld (CTRL_DESPLZ),a
 385+ 9B6F 18 1C        	jr 3F
 386+ 9B71 21 C2 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B74 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B75 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B76 32 C7 8B     	ld (CTRL_DESPLZ),a
 390+ 9B79 3A D2 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B7C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B7E 20 0A        	jr nz,2F
 393+ 9B80 2A C3 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B83 23           	inc hl
 395+ 9B84 22 C3 8B     	ld (Posicion_actual),hl
 396+ 9B87 CD A9 94     	call Genera_coordenadas
 397+ 9B8A
 398+ 9B8A              ; Inicia el puntero de Sprite.
 399+ 9B8A
 400+ 9B8A CD A8 90     2 call Inicia_puntero_objeto_der
 401+ 9B8D C9           3 ret
 402+ 9B8E
 403+ 9B8E              ; ******************************************************************************************************************************************************************************************
 404+ 9B8E              ;
 405+ 9B8E              ;	15/02/23
 406+ 9B8E              ;
 407+ 9B8E              ;	Mov_left.
 408+ 9B8E              ;
 409+ 9B8E              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B8E              ;
 411+ 9B8E              Mov_left
 412+ 9B8E
 413+ 9B8E 21 C0 8B     	ld hl,Ctrl_0
 414+ 9B91 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B93              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B93              ; 																	; _ en el caso de que no lo haya.
 417+ 9B93 3A C0 8B     	ld a,(Ctrl_0)
 418+ 9B96 CB 77        	bit 6,a
 419+ 9B98 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B9A
 421+ 9B9A CD B0 9C     	call Stop_Amadeus_left
 422+ 9B9D C8           	ret z
 423+ 9B9E 20 4A        	jr nz,8F
 424+ 9BA0
 425+ 9BA0 3A B4 8B     11 ld a,(Coordenada_X)
 426+ 9BA3 A7           	and a
 427+ 9BA4 20 44        	jr nz,8F
 428+ 9BA6
 429+ 9BA6 3A C7 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BA9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BAA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BAC
 433+ 9BAC              ; ---------- ---------- ----------
 434+ 9BAC
 435+ 9BAC 3A D8 8B     	ld a,(Vel_left)
 436+ 9BAF FE 02        	cp 2
 437+ 9BB1 28 0F        	jr z,1F
 438+ 9BB3 38 04        	jr c,6F
 439+ 9BB5 FE 04        	cp 4
 440+ 9BB7 28 12        	jr z,7F
 441+ 9BB9
 442+ 9BB9              ; ---------- ---------- ----------
 443+ 9BB9
 444+ 9BB9 3A C7 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BBC FE F8        	cp $f8
 446+ 9BBE 20 2A        	jr nz,8F
 447+ 9BC0 18 10        	jr 4F
 448+ 9BC2 3A C7 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BC5 FE F9        	cp $f9
 450+ 9BC7 20 21        	jr nz,8F
 451+ 9BC9 18 07        	jr 4F
 452+ 9BCB 3A C7 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BCE FE FB        	cp $fb
 454+ 9BD0 20 18        	jr nz,8F
 455+ 9BD2
 456+ 9BD2              ; ---------- ---------- ----------
 457+ 9BD2
 458+ 9BD2              4
 459+ 9BD2 CD D8 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BD5              ;	call Reinicio
 461+ 9BD5
 462+ 9BD5              ; ---------- ---------- ----------
 463+ 9BD5
 464+ 9BD5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BD7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BD8
 467+ 9BD8              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BD8              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BD8
 470+ 9BD8 CD F1 9B     	call DESPLZ_IZQ
 471+ 9BDB C1           	pop bc
 472+ 9BDC 10 F9        	djnz 5B
 473+ 9BDE 2A C3 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BE1 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BE2 22 C3 8B     	ld (Posicion_actual),hl
 476+ 9BE5 CD A9 94     	call Genera_coordenadas
 477+ 9BE8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BEA
 479+ 9BEA              ; ---------- ---------- ----------
 480+ 9BEA
 481+ 9BEA              ; Movemos, no hay recolocación.
 482+ 9BEA
 483+ 9BEA 2A C3 8B     8 ld hl,(Posicion_actual)
 484+ 9BED CD F1 9B     	call DESPLZ_IZQ
 485+ 9BF0 C9           2 ret
 486+ 9BF1
 487+ 9BF1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BF1              ;
 489+ 9BF1              ;	22/9/22
 490+ 9BF1
 491+ 9BF1              DESPLZ_IZQ
 492+ 9BF1
 493+ 9BF1 CD 00 9C     	call Desplaza_izquierda
 494+ 9BF4 CD 4C 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BF7 CD 74 9C     	call Ciclo_completo_2
 496+ 9BFA 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BFD CB BE        	res 7,(hl)
 498+ 9BFF C9           	ret
 499+ 9C00
 500+ 9C00              Desplaza_izquierda
 501+ 9C00
 502+ 9C00 3A D8 8B     	ld a,(Vel_left)
 503+ 9C03 47           	ld b,a
 504+ 9C04 2A CE 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C07 23           1 inc hl
 506+ 9C08 23           	inc hl
 507+ 9C09 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C0B 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C0E CD 93 90     	call Extrae_address
 510+ 9C11 22 C5 8B     	ld (Puntero_objeto),hl
 511+ 9C14
 512+ 9C14              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C14
 514+ 9C14              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C14              ; Cuántos movimientos hemos hecho ??
 516+ 9C14              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C14
 518+ 9C14 2A CA 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C17 EB           	ex de,hl
 520+ 9C18 A7           	and a
 521+ 9C19 ED 52        	sbc hl,de
 522+ 9C1B CB 3D        	srl l
 523+ 9C1D 3E 08        6 ld a,8
 524+ 9C1F 95           	sub l
 525+ 9C20 30 1E        	jr nc,3F
 526+ 9C22
 527+ 9C22              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C22              ; B="0".
 529+ 9C22
 530+ 9C22 04           4 inc b
 531+ 9C23 3C           	inc a
 532+ 9C24 20 FC        	jr nz,4B
 533+ 9C26 78           	ld a,b
 534+ 9C27 08           	ex af,af
 535+ 9C28 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C2B 23           5 inc hl
 537+ 9C2C 23           	inc hl
 538+ 9C2D 10 FC        	djnz 5B
 539+ 9C2F 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C32 CD 93 90     	call Extrae_address
 541+ 9C35 22 C5 8B     	ld (Puntero_objeto),hl
 542+ 9C38
 543+ 9C38              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C38              ; _(Posicion_actual).
 545+ 9C38
 546+ 9C38 21 C3 8B     	ld hl,Posicion_actual
 547+ 9C3B 35           	dec (hl)
 548+ 9C3C 08           	ex af,af
 549+ 9C3D 6F           	ld l,a
 550+ 9C3E 18 DD        	jr 6B
 551+ 9C40
 552+ 9C40              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C40
 554+ 9C40 47           3 ld b,a
 555+ 9C41 2A C8 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C44 23           2 inc hl
 557+ 9C45 23           	inc hl
 558+ 9C46 10 FC        	djnz 2B
 559+ 9C48 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C4B C9           8 ret
 561+ 9C4C
 562+ 9C4C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C4C              ;
 564+ 9C4C              ;	modifica_parametros_1er_DESPLZ
 565+ 9C4C              ;
 566+ 9C4C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C4C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C4C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C4C
 570+ 9C4C 3A C7 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C4F A7           	and a
 572+ 9C50 20 1E        	jr nz,1F
 573+ 9C52 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C53 32 C7 8B         ld (CTRL_DESPLZ),a
 575+ 9C56 21 C2 8B     	ld hl,Columns
 576+ 9C59 34           	inc (hl)
 577+ 9C5A 3A D2 8B     	ld a,(Cuad_objeto)
 578+ 9C5D E6 01        	and 1
 579+ 9C5F 20 0F        	jr nz,1F
 580+ 9C61 2A C3 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C64 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C65 22 C3 8B     	ld (Posicion_actual),hl
 583+ 9C68 CD A9 94     	call Genera_coordenadas
 584+ 9C6B CD C7 9C     	call Dec_CTRL_DESPLZ
 585+ 9C6E 18 03        	jr 2F
 586+ 9C70 CD C7 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C73 C9           2 ret
 588+ 9C74
 589+ 9C74              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C74
 591+ 9C74 3A C7 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C77 FE F7        	cp $f7
 593+ 9C79 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C7B 30 2C        	jr nc,3F
 595+ 9C7D
 596+ 9C7D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C7D
 598+ 9C7D 06 00        	ld b,0
 599+ 9C7F 04           4 inc b
 600+ 9C80 3C           	inc a
 601+ 9C81 FE F7        	cp $f7
 602+ 9C83 20 FA        	jr nz,4B
 603+ 9C85 3E FF        	ld a,$ff
 604+ 9C87 90           	sub b
 605+ 9C88 32 C7 8B     	ld (CTRL_DESPLZ),a
 606+ 9C8B 18 1C        	jr 3F
 607+ 9C8D
 608+ 9C8D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C8D
 610+ 9C8D 21 C2 8B     1 ld hl,Columns
 611+ 9C90 35           	dec (hl)
 612+ 9C91 AF           	xor a
 613+ 9C92 32 C7 8B     	ld (CTRL_DESPLZ),a
 614+ 9C95 3A D2 8B     	ld a,(Cuad_objeto)
 615+ 9C98 E6 01        	and 1
 616+ 9C9A 28 0A        	jr z,2F
 617+ 9C9C 2A C3 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C9F 2B           	dec hl
 619+ 9CA0 22 C3 8B     	ld (Posicion_actual),hl
 620+ 9CA3 CD A9 94     	call Genera_coordenadas
 621+ 9CA6
 622+ 9CA6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CA6
 624+ 9CA6 CD BB 90     2 call Inicia_puntero_objeto_izq
 625+ 9CA9 C9           3 ret
 626+ 9CAA
 627+ 9CAA              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CAA              ;
 629+ 9CAA              ;	19/10/22
 630+ 9CAA              ;
 631+ 9CAA              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CAA              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CAA
 634+ 9CAA 3A B4 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CAD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CAF C9           	ret
 637+ 9CB0
 638+ 9CB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CB0              ;
 640+ 9CB0              ;	19/10/22
 641+ 9CB0              ;
 642+ 9CB0              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CB0              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CB0
 645+ 9CB0 3A B4 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CB3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CB5 C9           	ret
 648+ 9CB6
 649+ 9CB6              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CB6              ;
 651+ 9CB6              ;	24/7/22
 652+ 9CB6              ;
 653+ 9CB6              ;	Inc_CTRL_DESPLZ
 654+ 9CB6              ;
 655+ 9CB6              ;
 656+ 9CB6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CB6
 658+ 9CB6 21 C7 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CB9 3A D9 8B     	ld a,(Vel_right)
 660+ 9CBC A7           	and a
 661+ 9CBD 28 06        	jr z,1F
 662+ 9CBF 47           	ld b,a
 663+ 9CC0 34           3 inc (hl)
 664+ 9CC1 10 FD        	djnz 3B
 665+ 9CC3 18 01        	jr 2F
 666+ 9CC5 34           1 inc (hl)
 667+ 9CC6 C9           2 ret
 668+ 9CC7
 669+ 9CC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CC7              ;
 671+ 9CC7              ;	5/2/23
 672+ 9CC7              ;
 673+ 9CC7              ;	Dec_CTRL_DESPLZ
 674+ 9CC7              ;
 675+ 9CC7              ;
 676+ 9CC7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CC7
 678+ 9CC7 21 C7 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CCA 3A D8 8B     	ld a,(Vel_left)
 680+ 9CCD A7           	and a
 681+ 9CCE 28 06        	jr z,1F
 682+ 9CD0 47           	ld b,a
 683+ 9CD1 35           3 dec (hl)
 684+ 9CD2 10 FD        	djnz 3B
 685+ 9CD4 18 01        	jr 2F
 686+ 9CD6 35           1 dec (hl)
 687+ 9CD7 C9           2 ret
 688+ 9CD8
 689+ 9CD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CD8
 691+ 9CD8 2A C3 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CDB 01 1F 00     	ld bc,31
 693+ 9CDE A7           	and a
 694+ 9CDF ED 4A        	adc hl,bc
 695+ 9CE1 22 C3 8B     	ld (Posicion_actual),hl
 696+ 9CE4 21 C0 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CE7 CB C6        	set 0,(hl)
 698+ 9CE9 C9           	ret
 699+ 9CEA
 700+ 9CEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CEA
 702+ 9CEA 2A C3 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CED 01 1F 00     	ld bc,31
 704+ 9CF0 A7           	and a
 705+ 9CF1 ED 42        	sbc hl,bc
 706+ 9CF3 22 C3 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CF6 21 C0 8B     	ld hl,Ctrl_0
 708+ 9CF9 CB CE        	set 1,(hl)
 709+ 9CFB C9           	ret
 710+ 9CFC
 711+ 9CFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CFC
 713+ 9CFC 24           Reaparece_abajo inc h
 714+ 9CFD 01 E0 17     	ld bc,$17e0
 715+ 9D00 A7           	and a
 716+ 9D01 ED 4A        	adc hl,bc
 717+ 9D03 22 C3 8B     	ld (Posicion_actual),hl
 718+ 9D06 21 C0 8B     	ld hl,Ctrl_0
 719+ 9D09 CB D6        	set 2,(hl)
 720+ 9D0B C9           	ret
 721+ 9D0C
 722+ 9D0C              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D0C
 724+ 9D0C 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D0F A7           	and a
 726+ 9D10 ED 42        	sbc hl,bc
 727+ 9D12 22 C3 8B     	ld (Posicion_actual),hl
 728+ 9D15 21 C0 8B     	ld hl,Ctrl_0
 729+ 9D18 CB DE        	set 3,(hl)
 730+ 9D1A C9           	ret
 731+ 9D1B
 732+ 9D1B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D1B              ;
 734+ 9D1B              ;	15/07/23
 735+ 9D1B
 736+ 9D1B              Reinicio
 737+ 9D1B
 738+ 9D1B              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D1B
 740+ 9D1B AF           	xor a
 741+ 9D1C 21 E8 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D1F CD 3D 9D     	call Limpia_contenido_hl
 743+ 9D22
 744+ 9D22 21 C3 8B     	ld hl,Posicion_actual
 745+ 9D25 CD 3D 9D     	call Limpia_contenido_hl
 746+ 9D28
 747+ 9D28 CD 8B 92     	call Inicializa_Puntero_indice_mov
 748+ 9D2B CD 3C 9E     	call Inicia_Puntero_mov
 749+ 9D2E
 750+ 9D2E 21 EA 8B     	ld hl,Incrementa_puntero
 751+ 9D31 06 05        	ld b,5
 752+ 9D33 77           1 ld (hl),a
 753+ 9D34 23           	inc hl
 754+ 9D35 10 FC        	djnz 1B
 755+ 9D37
 756+ 9D37 21 BF 8B     	ld hl,Ctrl_2
 757+ 9D3A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D3C
 759+ 9D3C C9           	ret
 760+ 9D3D
 761+ 9D3D 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D3E 23           	inc hl
 763+ 9D3F 77           	ld (hl),a
 764+ 9D40 C9           	ret
 765+ 9D41
 766+ 9D41              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D41              ;
 768+ 9D41              ;	18/6/24
 769+ 9D41              ;
 770+ 9D41
 771+ 9D41              Amadeus_a_izquierda
 772+ 9D41
 773+ 9D41              ;	Actualiza contador de movimientos.
 774+ 9D41
 775+ 9D41 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D44 35           	dec (hl)
 777+ 9D45 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D47
 779+ 9D47 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D4A 2B           	dec hl
 781+ 9D4B 2B           	dec hl
 782+ 9D4C 2B           	dec hl
 783+ 9D4D 2B           	dec hl
 784+ 9D4E 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D51
 786+ 9D51 21 24 8C     	ld hl,Ctrl_3
 787+ 9D54 CB EE        	set 5,(hl)
 788+ 9D56
 789+ 9D56 C9           	ret
 790+ 9D57
 791+ 9D57 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D58 C9           	ret
 793+ 9D59
 794+ 9D59
 795+ 9D59              Amadeus_a_derecha
 796+ 9D59
 797+ 9D59              ;	Actualiza contador de movimientos.
 798+ 9D59
 799+ 9D59 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D5C 34           	inc (hl)
 801+ 9D5D 3E 7A        	ld a,$7a
 802+ 9D5F BE           	cp (hl)
 803+ 9D60 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D62
 805+ 9D62 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D65 23           	inc hl
 807+ 9D66 23           	inc hl
 808+ 9D67 23           	inc hl
 809+ 9D68 23           	inc hl
 810+ 9D69 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D6C
 812+ 9D6C 21 24 8C     	ld hl,Ctrl_3
 813+ 9D6F CB EE        	set 5,(hl)
 814+ 9D71 C9           	ret
 815+ 9D72
 816+ 9D72 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D73 C9           	ret
# file closed: Direcciones.asm
2174  9D74              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D74              ; ----- ----- ----- ----- -----
   2+ 9D74              ;
   3+ 9D74              ;   28/12/23
   4+ 9D74
   5+ 9D74              Movimiento
   6+ 9D74
   7+ 9D74              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D74
   9+ 9D74 3A BF 8B         ld a,(Ctrl_2)
  10+ 9D77 CB 57            bit 2,a
  11+ 9D79 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D7B
  13+ 9D7B 2A E6 8B         ld hl,(Puntero_mov)
  14+ 9D7E 7E               ld a,(hl)
  15+ 9D7F
  16+ 9D7F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D7F
  18+ 9D7F              Inicia_desplazamiento.
  19+ 9D7F
  20+ 9D7F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D7F
  22+ 9D7F CD 72 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D82
  24+ 9D82              ; Iniciamos (Repetimos_mov).
  25+ 9D82
  26+ 9D82 7E               ld a,(hl)
  27+ 9D83 E6 0F            and $0f
  28+ 9D85 32 EC 8B         ld (Repetimos_desplazamiento),a
  29+ 9D88 32 ED 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D8B
  31+ 9D8B              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D8B
  33+ 9D8B 23               inc hl
  34+ 9D8C 7E               ld a,(hl)
  35+ 9D8D 32 EF 8B         ld (Cola_de_desplazamiento),a
  36+ 9D90 2B               dec hl
  37+ 9D91
  38+ 9D91 21 BF 8B         ld hl,Ctrl_2
  39+ 9D94 CB D6            set 2,(hl)
  40+ 9D96
  41+ 9D96              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D96              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D96
  44+ 9D96              Desplazamiento_iniciado
  45+ 9D96
  46+ 9D96 CD 46 9E         call Aplica_desplazamiento
  47+ 9D99
  48+ 9D99              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D99
  50+ 9D99 3A 24 8C         ld a,(Ctrl_3)
  51+ 9D9C CB 4F            bit 1,a
  52+ 9D9E C0               ret nz
  53+ 9D9F
  54+ 9D9F 21 EC 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DA2 35               dec (hl)
  56+ 9DA3 C0               ret nz
  57+ 9DA4
  58+ 9DA4              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DA4              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DA4              ; Analiza (Cola_de_desplazamiento).
  61+ 9DA4
  62+ 9DA4 3A EF 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DA7 A7               and a
  64+ 9DA8 CC 9B 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DAB 28 30            jr z,Reinicia_el_movimiento
  66+ 9DAD
  67+ 9DAD FE FF            cp $ff
  68+ 9DAF 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DB1
  70+ 9DB1 FE FE            cp $fe
  71+ 9DB3 CC 20 9E         call z,Fijamos_bucle
  72+ 9DB6 28 25            jr z,Reinicia_el_movimiento
  73+ 9DB8
  74+ 9DB8 FE FD            cp $fd
  75+ 9DBA 20 11            jr nz,1F
  76+ 9DBC
  77+ 9DBC              ; ---
  78+ 9DBC              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DBC
  80+ 9DBC 3A BF 8B         ld a,(Ctrl_2)
  81+ 9DBF CB 5F            bit 3,a
  82+ 9DC1 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DC3
  84+ 9DC3              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DC3
  86+ 9DC3 21 BF 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DC6 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DC8
  89+ 9DC8 CD 31 9E         call Inicia_Repetimos_movimiento
  90+ 9DCB 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DCD              ; ---
  92+ 9DCD
  93+ 9DCD FE 01        1 cp 1
  94+ 9DCF CA 0A 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DD2
  96+ 9DD2 3D               dec a
  97+ 9DD3 32 EF 8B         ld (Cola_de_desplazamiento),a
  98+ 9DD6
  99+ 9DD6 3A ED 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DD9 32 EC 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DDC              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DDC C9               ret
 103+ 9DDD
 104+ 9DDD              Reinicia_el_movimiento
 105+ 9DDD
 106+ 9DDD 3A BF 8B         ld a,(Ctrl_2)
 107+ 9DE0 CB 5F            bit 3,a
 108+ 9DE2 28 1B            jr z,2F
 109+ 9DE4
 110+ 9DE4              ; (Cola_de_desplazamiento)="254".
 111+ 9DE4
 112+ 9DE4 21 EE 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DE7 35               dec (hl)
 114+ 9DE8 20 15            jr nz,2F
 115+ 9DEA
 116+ 9DEA              ; Fin de las repeticiones del último movimiento.
 117+ 9DEA
 118+ 9DEA 21 BF 8B         ld hl,Ctrl_2
 119+ 9DED CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DEF
 121+ 9DEF 2A E6 8B         ld hl,(Puntero_mov)
 122+ 9DF2 23               inc hl
 123+ 9DF3 23               inc hl
 124+ 9DF4 23               inc hl
 125+ 9DF5 22 E6 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DF8              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DF8 7E               ld a,(hl)
 128+ 9DF9 32 EF 8B         ld (Cola_de_desplazamiento),a
 129+ 9DFC
 130+ 9DFC C3 A4 9D         jp Cola
 131+ 9DFF
 132+ 9DFF CD 3C 9E     2 call Inicia_Puntero_mov
 133+ 9E02
 134+ 9E02 21 BF 8B         ld hl,Ctrl_2
 135+ 9E05 CB 96            res 2,(hl)
 136+ 9E07
 137+ 9E07 C3 74 9D         jp Movimiento
 138+ 9E0A
 139+ 9E0A              Siguiente_desplazamiento
 140+ 9E0A
 141+ 9E0A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E0A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E0A
 144+ 9E0A 21 BF 8B         ld hl,Ctrl_2
 145+ 9E0D CB 96            res 2,(hl)
 146+ 9E0F
 147+ 9E0F 2A E6 8B         ld hl,(Puntero_mov)
 148+ 9E12 23               inc hl
 149+ 9E13 23               inc hl
 150+ 9E14 22 E6 8B         ld (Puntero_mov),hl
 151+ 9E17
 152+ 9E17 7E               ld a,(hl)
 153+ 9E18 A7               and a
 154+ 9E19 CC 9B 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E1C CA DD 9D         jp z,Reinicia_el_movimiento
 156+ 9E1F
 157+ 9E1F C9               ret
 158+ 9E20
 159+ 9E20              ; Subrutinas -----------------------------------------
 160+ 9E20              ; ---------- --------- --------- ---------- ----------
 161+ 9E20              ;
 162+ 9E20              ;   24/07/23
 163+ 9E20              ;
 164+ 9E20              ;   Fijamos_bucle
 165+ 9E20              ;
 166+ 9E20              ;
 167+ 9E20
 168+ 9E20              Fijamos_bucle
 169+ 9E20
 170+ 9E20 3A EA 8B         ld a,(Incrementa_puntero)
 171+ 9E23 3C               inc a
 172+ 9E24 32 EB 8B         ld (Incrementa_puntero_backup),a
 173+ 9E27
 174+ 9E27 CD 9B 9E         call Incrementa_Puntero_indice_mov
 175+ 9E2A 2A E4 8B         ld hl,(Puntero_indice_mov)
 176+ 9E2D 22 E8 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E30 C9               ret
 178+ 9E31
 179+ 9E31              ; ---------- --------- --------- ---------- ----------
 180+ 9E31              ;
 181+ 9E31              ;   07/7/23
 182+ 9E31              ;
 183+ 9E31              ;   Inicia_Repetimos_movimiento
 184+ 9E31              ;
 185+ 9E31              ;
 186+ 9E31
 187+ 9E31              Inicia_Repetimos_movimiento
 188+ 9E31
 189+ 9E31              ; Iniciamos (Repetimos_movimiento).
 190+ 9E31
 191+ 9E31 DD 2A E6 8B      ld ix,(Puntero_mov)
 192+ 9E35 DD 7E 02         ld a,(ix+2)
 193+ 9E38 32 EE 8B         ld (Repetimos_movimiento),a
 194+ 9E3B
 195+ 9E3B C9               ret
 196+ 9E3C
 197+ 9E3C              ; ---------- --------- --------- ---------- ----------
 198+ 9E3C              ;
 199+ 9E3C              ;   26/6/23
 200+ 9E3C              ;
 201+ 9E3C              ;   Inicia_Puntero_mov
 202+ 9E3C              ;
 203+ 9E3C              ;
 204+ 9E3C
 205+ 9E3C 2A E4 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E3F CD 93 90         call Extrae_address
 207+ 9E42 22 E6 8B         ld (Puntero_mov),hl
 208+ 9E45 C9               ret
 209+ 9E46
 210+ 9E46              ; ---------- --------- --------- ---------- ----------
 211+ 9E46              ;
 212+ 9E46              ;   27/06/23
 213+ 9E46              ;
 214+ 9E46              ;   Aplica_movimiento.
 215+ 9E46
 216+ 9E46              Aplica_desplazamiento
 217+ 9E46
 218+ 9E46              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E46
 220+ 9E46 2A E6 8B         ld hl, (Puntero_mov)
 221+ 9E49
 222+ 9E49 7E               ld a,(hl)
 223+ 9E4A E6 F0            and $f0
 224+ 9E4C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E4D
 226+ 9E4D CB 7E            bit 7,(hl)
 227+ 9E4F 28 03            jr z,1F
 228+ 9E51 CD 28 9A         call Mov_up
 229+ 9E54 2A E6 8B     1 ld hl, (Puntero_mov)
 230+ 9E57 CB 76            bit 6,(hl)
 231+ 9E59 28 03            jr z,2F
 232+ 9E5B CD EF 99         call Mov_down
 233+ 9E5E
 234+ 9E5E              ; Se ha aplicado reinicio ???
 235+ 9E5E              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E5E
 237+ 9E5E              ;    ld a,(Ctrl_3)
 238+ 9E5E              ;    bit 1,a
 239+ 9E5E              ;    ret nz
 240+ 9E5E
 241+ 9E5E 2A E6 8B     2 ld hl, (Puntero_mov)
 242+ 9E61 CB 6E            bit 5,(hl)
 243+ 9E63 28 03            jr z,3F
 244+ 9E65 CD 8E 9B         call Mov_left
 245+ 9E68 2A E6 8B     3 ld hl, (Puntero_mov)
 246+ 9E6B CB 66            bit 4,(hl)
 247+ 9E6D C8               ret z
 248+ 9E6E CD 6B 9A         call Mov_right
 249+ 9E71 C9               ret
 250+ 9E72
 251+ 9E72              ; ---------- --------- --------- ---------- ----------
 252+ 9E72              ;
 253+ 9E72              ;   26/06/23
 254+ 9E72              ;
 255+ 9E72              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E72
 257+ 9E72              Ajusta_velocidad_desplazamiento
 258+ 9E72
 259+ 9E72              ; 1er byte de la cadena de movimiento.
 260+ 9E72              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E72
 262+ 9E72 CD 90 9E         call Extrae_nibble_alto
 263+ 9E75
 264+ 9E75 32 DA 8B         ld (Vel_up),a
 265+ 9E78 79               ld a,c
 266+ 9E79 E6 0F            and $0f
 267+ 9E7B 32 DB 8B         ld (Vel_down),a
 268+ 9E7E
 269+ 9E7E              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E7E              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E7E
 272+ 9E7E 23               inc hl
 273+ 9E7F CD 90 9E         call Extrae_nibble_alto
 274+ 9E82
 275+ 9E82 32 D8 8B         ld (Vel_left),a
 276+ 9E85 79               ld a,c
 277+ 9E86 E6 0F            and $0f
 278+ 9E88 32 D9 8B         ld (Vel_right),a
 279+ 9E8B
 280+ 9E8B              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E8B
 282+ 9E8B 23               inc hl
 283+ 9E8C 22 E6 8B         ld (Puntero_mov),hl
 284+ 9E8F C9               ret
 285+ 9E90
 286+ 9E90 06 04        Extrae_nibble_alto ld b,4
 287+ 9E92 7E               ld a,(hl)
 288+ 9E93 4F               ld c,a
 289+ 9E94 E6 F0            and $f0
 290+ 9E96 CB 3F        1 srl a
 291+ 9E98 10 FC            djnz 1B
 292+ 9E9A C9               ret
 293+ 9E9B
 294+ 9E9B              ; ---------- --------- --------- ---------- ----------
 295+ 9E9B              ;
 296+ 9E9B              ;   5/7/23
 297+ 9E9B              ;
 298+ 9E9B              ;   Incrementa_Puntero_indice_mov
 299+ 9E9B
 300+ 9E9B              Incrementa_Puntero_indice_mov
 301+ 9E9B
 302+ 9E9B 21 EA 8B         ld hl,Incrementa_puntero
 303+ 9E9E 34               inc (hl)
 304+ 9E9F
 305+ 9E9F 2A E4 8B         ld hl,(Puntero_indice_mov)
 306+ 9EA2 01 02 00         ld bc,2
 307+ 9EA5 A7               and a
 308+ 9EA6 09               add hl,bc
 309+ 9EA7 22 E4 8B         ld (Puntero_indice_mov),hl
 310+ 9EAA
 311+ 9EAA 7E               ld a,(hl)
 312+ 9EAB A7               and a
 313+ 9EAC
 314+ 9EAC              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EAC
 316+ 9EAC              ;    jr z,$
 317+ 9EAC
 318+ 9EAC              ;! Reinicia el Patrón de movimiento.
 319+ 9EAC
 320+ 9EAC CC B1 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EAF
 322+ 9EAF AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EB0
 324+ 9EB0 C9               ret
 325+ 9EB1
 326+ 9EB1              ; ---------- --------- --------- ---------- ----------
 327+ 9EB1              ;
 328+ 9EB1              ;   15/01/24
 329+ 9EB1              ;
 330+ 9EB1              ;   Inicializa_Puntero_indice_mov
 331+ 9EB1
 332+ 9EB1              Inicializa_Puntero_indice_mov_2
 333+ 9EB1
 334+ 9EB1              ; Existe etiqueta de bucle principal???
 335+ 9EB1
 336+ 9EB1 2A E8 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EB4 24               inc h
 338+ 9EB5 25               dec h
 339+ 9EB6 28 05            jr z,2F
 340+ 9EB8
 341+ 9EB8 22 E4 8B         ld (Puntero_indice_mov),hl
 342+ 9EBB 18 14            jr 3F
 343+ 9EBD
 344+ 9EBD              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EBD
 346+ 9EBD 3A EA 8B     2 ld a,(Incrementa_puntero)
 347+ 9EC0 47               ld b,a
 348+ 9EC1
 349+ 9EC1 2A E4 8B         ld hl,(Puntero_indice_mov)
 350+ 9EC4 2B           1 dec hl
 351+ 9EC5 2B               dec hl
 352+ 9EC6 10 FC            djnz 1B
 353+ 9EC8 22 E4 8B         ld (Puntero_indice_mov),hl
 354+ 9ECB
 355+ 9ECB AF               xor a
 356+ 9ECC 32 EA 8B         ld (Incrementa_puntero),a
 357+ 9ECF 18 06            jr 4F
 358+ 9ED1
 359+ 9ED1 3A EB 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9ED4 32 EA 8B         ld (Incrementa_puntero),a
 361+ 9ED7 C9           4 ret
 362+ 9ED8
 363+ 9ED8              ; ----------------------------------------------------------------------
 364+ 9ED8              ;
 365+ 9ED8              ;   30/01/24
 366+ 9ED8              ;
 367+ 9ED8              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9ED8
 369+ 9ED8 3A B3 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EDB CD 26 94         call Calcula_salto_en_BC
 371+ 9EDE 21 DC 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EE1 A7               and a
 373+ 9EE2 ED 4A            adc hl,bc
 374+ 9EE4 C9               ret
 375+ 9EE5
 376+ 9EE5              ; ----------------------------------------------------------------------
 377+ 9EE5              ;
 378+ 9EE5              ;   30/01/24
 379+ 9EE5              ;
 380+ 9EE5              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EE5              ;
 382+ 9EE5              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EE5
 384+ 9EE5 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EE6 23               inc hl
 386+ 9EE7 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EE8 69               ld l,c
 388+ 9EE9 60               ld h,b
 389+ 9EEA 22 BC 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EED C9               ret
 391+ 9EEE
# file closed: Movimiento.asm
2175  9EEE              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EEE              Motor_de_disparos_entidades
   2+ 9EEE
   3+ 9EEE 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9EF1 FE 07            cp 7
   5+ 9EF3 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9EF4
   7+ 9EF4 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9EF6 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9EF9
  10+ 9EF9 CD 93 90     1 call Extrae_address
  11+ 9EFC 13               inc de
  12+ 9EFD 13               inc de
  13+ 9EFE ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F02
  15+ 9F02 23               inc hl
  16+ 9F03
  17+ 9F03 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F04 35               dec (hl)
  19+ 9F05 28 14            jr z,3F
  20+ 9F07
  21+ 9F07 23               inc hl
  22+ 9F08
  23+ 9F08 CD 93 90         call Extrae_address
  24+ 9F0B              ;   (Puntero_de_impresion) del disparo en HL.
  25+ 9F0B
  26+ 9F0B
  27+ 9F0B              ;! Velocidad del disparo de entidades.
  28+ 9F0B
  29+ 9F0B              ;    call NextScan
  30+ 9F0B              ;    call NextScan
  31+ 9F0B              ;    call NextScan
  32+ 9F0B              ;    call NextScan
  33+ 9F0B CD A9 99         call NextScan
  34+ 9F0E
  35+ 9F0E              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  36+ 9F0E
  37+ 9F0E CD 1F 9F         call Fin_de_disparo_de_entidad
  38+ 9F11
  39+ 9F11 EB               ex de,hl
  40+ 9F12
  41+ 9F12 73               ld (hl),e
  42+ 9F13 23               inc hl
  43+ 9F14 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  44+ 9F15
  45+ 9F15 2A 27 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  46+ 9F18 18 02            jr 2F
  47+ 9F1A
  48+ 9F1A C9               ret
  49+ 9F1B
  50+ 9F1B EB           3 ex de,hl
  51+ 9F1C 10 DB        2 djnz 1B
  52+ 9F1E
  53+ 9F1E C9               ret
  54+ 9F1F
  55+ 9F1F              ; ------------- ------------- ------------
  56+ 9F1F              ;
  57+ 9F1F              ;   25/9/24
  58+ 9F1F
  59+ 9F1F              Fin_de_disparo_de_entidad
  60+ 9F1F
  61+ 9F1F 7C               ld a,h
  62+ 9F20 FE 54            cp $54
  63+ 9F22 D8               ret c
  64+ 9F23
  65+ 9F23 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  66+ 9F24
  67+ 9F24 5D               ld e,l
  68+ 9F25 54               ld d,h
  69+ 9F26
  70+ 9F26 21 E0 57         ld hl,$57e0
  71+ 9F29 ED 52            sbc hl,de
  72+ 9F2B
  73+ 9F2B 38 04            jr c,Elimina_disparo_entidad
  74+ 9F2D
  75+ 9F2D 6B               ld l,e
  76+ 9F2E 62               ld h,d
  77+ 9F2F
  78+ 9F2F D1               pop de
  79+ 9F30
  80+ 9F30 C9               ret
  81+ 9F31
  82+ 9F31              ; ------------ ----------- ------------
  83+ 9F31              ;
  84+ 9F31              ;   25/9/24
  85+ 9F31
  86+ 9F31              Elimina_disparo_entidad
  87+ 9F31
  88+ 9F31 21 14 8C         ld hl,Numero_de_disparos_de_entidades
  89+ 9F34 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
  90+ 9F35
  91+ 9F35 E1               pop hl
  92+ 9F36 E5               push hl
  93+ 9F37
  94+ 9F37 2B               dec hl
  95+ 9F38 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
  96+ 9F39
  97+ 9F39 16 06            ld d,6                                                              ; Contador
  98+ 9F3B AF               xor a                                                               ; Borrador
  99+ 9F3C
 100+ 9F3C 77           1 ld (hl),a
 101+ 9F3D 15               dec d
 102+ 9F3E 23               inc hl
 103+ 9F3F 20 FB            jr nz,1B
 104+ 9F41
 105+ 9F41 D1               pop de
 106+ 9F42
 107+ 9F42              ;    ld hl,Ctrl_5
 108+ 9F42              ;    set 2,(hl)
 109+ 9F42
 110+ 9F42 21 00 00         ld hl,0
 111+ 9F45
 112+ 9F45 C9               ret
 113+ 9F46              ; --------------------------------------------------------------------------------------
 114+ 9F46              ;
 115+ 9F46              ;   19/09/24
 116+ 9F46              ;
 117+ 9F46
 118+ 9F46              Genera_datos_de_impresion_disparos_Entidades
 119+ 9F46
 120+ 9F46              ;*  Exclusiones.
 121+ 9F46
 122+ 9F46 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 123+ 9F49 47               ld b,a
 124+ 9F4A 3E 07            ld a,7
 125+ 9F4C 90               sub b
 126+ 9F4D C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 127+ 9F4E
 128+ 9F4E 08               ex af,af
 129+ 9F4F
 130+ 9F4F              ; ---------------
 131+ 9F4F
 132+ 9F4F              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 133+ 9F4F
 134+ 9F4F CD 8C 90         call Inicia_Puntero_Disparo_Entidades
 135+ 9F52
 136+ 9F52 CD 93 90     1 call Extrae_address
 137+ 9F55
 138+ 9F55 23               inc hl
 139+ 9F56 7E               ld a,(hl)
 140+ 9F57 A7               and a
 141+ 9F58
 142+ 9F58 28 1D            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 143+ 9F5A
 144+ 9F5A 2B               dec hl
 145+ 9F5B
 146+ 9F5B ED 73 00 8C      ld (Stack),sp
 147+ 9F5F F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 148+ 9F60
 149+ 9F60              Genera_scanlines_de_los_disparos_de_entidades.
 150+ 9F60
 151+ 9F60 C1               pop bc
 152+ 9F61 E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 153+ 9F62              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 154+ 9F62 ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 155+ 9F66
 156+ 9F66 F1               pop af
 157+ 9F67 F1               pop af
 158+ 9F68 F1               pop af
 159+ 9F69
 160+ 9F69 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 161+ 9F6D
 162+ 9F6D E5               push hl                                                   ;? Sube 2º scanline al álbum.
 163+ 9F6E CD A9 99         call NextScan
 164+ 9F71 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 165+ 9F72 C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 166+ 9F73
 167+ 9F73 ED 7B 00 8C      ld sp,(Stack)
 168+ 9F77
 169+ 9F77              Situa_en_siguiente_caja
 170+ 9F77
 171+ 9F77 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 172+ 9F78 3D               dec a
 173+ 9F79 C8               ret z
 174+ 9F7A 08               ex af,af
 175+ 9F7B
 176+ 9F7B 13               inc de
 177+ 9F7C 13               inc de
 178+ 9F7D
 179+ 9F7D EB               ex de,hl
 180+ 9F7E
 181+ 9F7E 18 D2            jr 1B
 182+ 9F80
 183+ 9F80              ; --------------------------------------------------------------------------------------
 184+ 9F80              ;
 185+ 9F80              ;   18/09/24
 186+ 9F80              ;
 187+ 9F80
 188+ 9F80              Genera_disparo_de_entidad_maldosa
 189+ 9F80
 190+ 9F80              ;   Estructura de un disparo de entidades.
 191+ 9F80
 192+ 9F80              ;   Disparo_1 defw 0								; Puntero objeto.
 193+ 9F80              ; 	defw 0											; Puntero de impresión.
 194+ 9F80              ;	defw 0											; Control.
 195+ 9F80
 196+ 9F80              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 197+ 9F80              ;   _de la entidad en el momento de disparar.
 198+ 9F80
 199+ 9F80              ;   El byte alto muestra la siguiente información:
 200+ 9F80              ;
 201+ 9F80              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 202+ 9F80              ;                        _antes de desplazarse a derecha/izquierda.
 203+ 9F80              ;
 204+ 9F80              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 205+ 9F80              ;
 206+ 9F80              ;                        10xx ..... Izquierda.
 207+ 9F80              ;                        01xx ..... Derecha.
 208+ 9F80              ;                        00xx ..... Recto.
 209+ 9F80
 210+ 9F80              ;*  Exclusiones.
 211+ 9F80
 212+ 9F80              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 213+ 9F80              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 214+ 9F80
 215+ 9F80 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 216+ 9F83 A7               and a
 217+ 9F84 C8               ret z
 218+ 9F85
 219+ 9F85 3A B5 8B         ld a,(Coordenada_y)
 220+ 9F88 A7               and a
 221+ 9F89 C8               ret z
 222+ 9F8A
 223+ 9F8A 3D               dec a
 224+ 9F8B C8               ret z
 225+ 9F8C
 226+ 9F8C FE 0F            cp 15
 227+ 9F8E D0               ret nc
 228+ 9F8F
 229+ 9F8F              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 230+ 9F8F              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 231+ 9F8F              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 232+ 9F8F              ;
 233+ 9F8F
 234+ 9F8F 21 16 8C         ld hl,Permiso_de_disparo_Entidades			        ; No más disparos en este FRAME.
 235+ 9F92 35               dec (hl)
 236+ 9F93
 237+ 9F93 FD 21 70 83      ld iy,Disparo_de_entidad
 238+ 9F97
 239+ 9F97              ;   Decrementa el numero de disparos de entidades.
 240+ 9F97
 241+ 9F97 21 14 8C         ld hl,Numero_de_disparos_de_entidades
 242+ 9F9A 35               dec (hl)
 243+ 9F9B
 244+ 9F9B              ;   Puntero de impresión del disparo en BC.
 245+ 9F9B
 246+ 9F9B 21 29 8C         ld hl,Puntero_de_impresion_disparo_de_entidad
 247+ 9F9E 4E               ld c,(hl)
 248+ 9F9F 23               inc hl
 249+ 9FA0 46               ld b,(hl)
 250+ 9FA1
 251+ 9FA1 CD 8C 90         call Inicia_Puntero_Disparo_Entidades
 252+ 9FA4
 253+ 9FA4 2A 27 8C     1 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)              ; En la 1ª caja del índice.
 254+ 9FA7 CD 93 90         call Extrae_address
 255+ 9FAA
 256+ 9FAA              ;   Comprobamos si la caja está vacía.
 257+ 9FAA
 258+ 9FAA 23               inc hl
 259+ 9FAB 7E               ld a,(hl)
 260+ 9FAC A7               and a
 261+ 9FAD
 262+ 9FAD 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 263+ 9FAF
 264+ 9FAF              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 265+ 9FAF
 266+ 9FAF 2B               dec hl
 267+ 9FB0
 268+ 9FB0 FD 7D            ld a,iyl
 269+ 9FB2 77               ld (hl),a
 270+ 9FB3 23               inc hl
 271+ 9FB4 FD 7C            ld a,iyh
 272+ 9FB6 77               ld (hl),a                                           ; Guarda el (puntero objeto) del disparo en la caja.
 273+ 9FB7
 274+ 9FB7 23               inc hl
 275+ 9FB8
 276+ 9FB8 71               ld (hl),c
 277+ 9FB9 23               inc hl
 278+ 9FBA 70               ld (hl),b                                           ; Guarda el puntero de impresión.
 279+ 9FBB
 280+ 9FBB 23               inc hl
 281+ 9FBC
 282+ 9FBC 3A BE 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 283+ 9FBF 77               ld (hl),a
 284+ 9FC0
 285+ 9FC0 23               inc hl
 286+ 9FC1
 287+ 9FC1              ;! Ajusta el grado de inclinación del disparo.
 288+ 9FC1
 289+ 9FC1 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 290+ 9FC3
 291+ 9FC3              ; Determina tendencia del disparo.
 292+ 9FC3
 293+ 9FC3 3A 6E 89         ld a,(CX_Amadeus)
 294+ 9FC6 47               ld b,a
 295+ 9FC7 3A B4 8B         ld a,(Coordenada_X)
 296+ 9FCA 90               sub b
 297+ 9FCB 38 07            jr c,Disparo_a_derecha
 298+ 9FCD
 299+ 9FCD FE 04        Disparo_a_izquierda cp 4
 300+ 9FCF
 301+ 9FCF D8               ret c
 302+ 9FD0 C8               ret z
 303+ 9FD1
 304+ 9FD1 CB FE            set 7,(hl)
 305+ 9FD3 C9               ret
 306+ 9FD4
 307+ 9FD4 47           Disparo_a_derecha ld b,a
 308+ 9FD5 3E FF            ld a,$ff
 309+ 9FD7 90               sub b
 310+ 9FD8
 311+ 9FD8 FE 04            cp 4
 312+ 9FDA
 313+ 9FDA D8               ret c
 314+ 9FDB C8               ret z
 315+ 9FDC
 316+ 9FDC CB F6            set 6,(hl)
 317+ 9FDE C9               ret
 318+ 9FDF
 319+ 9FDF              ;   --- --- ---
 320+ 9FDF
 321+ 9FDF              Situa_en_siguiente_disparo
 322+ 9FDF
 323+ 9FDF 13               inc de
 324+ 9FE0 13               inc de
 325+ 9FE1
 326+ 9FE1 ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 327+ 9FE5 18 BD            jr 1B
 328+ 9FE7
 329+ 9FE7              ; --------------------------------------------------------------------------------------
 330+ 9FE7              ;
 331+ 9FE7              ;   31/08/24
 332+ 9FE7              ;
 333+ 9FE7
 334+ 9FE7              Compara_con_coordenadas_de_disparo
 335+ 9FE7
 336+ 9FE7 3A B5 8B         ld a,(Coordenada_y)
 337+ 9FEA 47               ld b,a
 338+ 9FEB 3A 2E 8C         ld a,(Coordenadas_disparo_certero)
 339+ 9FEE 90               sub b
 340+ 9FEF
 341+ 9FEF              ; A = "0" ok
 342+ 9FEF              ; A = "1" ok
 343+ 9FEF
 344+ 9FEF 28 08            jr z,Comprueba_coordenada_X
 345+ 9FF1 3D               dec a
 346+ 9FF2 28 05            jr z,Comprueba_coordenada_X
 347+ 9FF4
 348+ 9FF4              ; A = "$ff" ok
 349+ 9FF4
 350+ 9FF4 FE FE            cp $fe
 351+ 9FF6 28 01            jr z,Comprueba_coordenada_X
 352+ 9FF8
 353+ 9FF8 C9               ret
 354+ 9FF9
 355+ 9FF9              Comprueba_coordenada_X
 356+ 9FF9
 357+ 9FF9 3A B4 8B         ld a,(Coordenada_X)
 358+ 9FFC 47               ld b,a
 359+ 9FFD 21 2F 8C         ld hl,Coordenadas_disparo_certero+1
 360+ A000 7E               ld a,(hl)
 361+ A001 90               sub b
 362+ A002
 363+ A002              ; A = "0" ok
 364+ A002              ; A = "1" ok
 365+ A002
 366+ A002 28 09            jr z,Activa_Impacto_en_entidad
 367+ A004 3D               dec a
 368+ A005 28 06            jr z,Activa_Impacto_en_entidad
 369+ A007
 370+ A007              ; A = "2" ok
 371+ A007
 372+ A007 3D               dec a
 373+ A008 28 03            jr z,Activa_Impacto_en_entidad
 374+ A00A
 375+ A00A              ; A = "$ff"
 376+ A00A
 377+ A00A FE FD            cp $fd
 378+ A00C C0               ret nz
 379+ A00D
 380+ A00D              Activa_Impacto_en_entidad
 381+ A00D
 382+ A00D              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 383+ A00D
 384+ A00D 3E 02            ld a,2
 385+ A00F 32 B7 8B         ld (Impacto),a
 386+ A012
 387+ A012              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 388+ A012
 389+ A012 11 C0 87         ld de,Indice_Explosion_entidades
 390+ A015 21 BA 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 391+ A018
 392+ A018 73               ld (hl),e
 393+ A019 23               inc hl
 394+ A01A 72               ld (hl),d
 395+ A01B
 396+ A01B              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 397+ A01B
 398+ A01B 21 2B 8C         ld hl,Impacto2
 399+ A01E CB 9E            res 3,(hl)
 400+ A020
 401+ A020 C9               ret
 402+ A021
 403+ A021              ; --------------------------------------------------------------------------------------
 404+ A021              ;
 405+ A021              ;   11/09/24
 406+ A021              ;
 407+ A021
 408+ A021              Limpia_album_de_borrado_disparos
 409+ A021
 410+ A021 21 26 8C         ld hl,Ctrl_5
 411+ A024 CB 56            bit 2,(hl)
 412+ A026 C8               ret z
 413+ A027
 414+ A027              ;    jr z,1F
 415+ A027
 416+ A027              ;    res 2,(hl)
 417+ A027
 418+ A027              ;    jr Limpiando
 419+ A027
 420+ A027              ;1 bit 0,(hl)
 421+ A027              ;    ret z
 422+ A027              ;    res 0,(hl)
 423+ A027
 424+ A027              Limpiando
 425+ A027
 426+ A027 AF               xor a
 427+ A028 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 428+ A02B 77               ld (hl),a
 429+ A02C 5D               ld e,l
 430+ A02D 54               ld d,h
 431+ A02E 1C               inc e                                           ; DE = HL+1
 432+ A02F 01 3A 00         ld bc,$003a
 433+ A032 ED B0            ldir
 434+ A034
 435+ A034 C9               ret
 436+ A035
 437+ A035
 438+ A035              ; --------------------------------------------------------------------------------------
 439+ A035              ;
 440+ A035              ;   26/08/24
 441+ A035              ;
 442+ A035
 443+ A035              Calcula_bytes_pintado_disparos
 444+ A035
 445+ A035 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 446+ A038 45               ld b,l
 447+ A039 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 448+ A03C 7D               ld a,l
 449+ A03D
 450+ A03D 90               sub b
 451+ A03E 32 12 8C         ld (Num_de_bytes_album_de_disparos),a
 452+ A041
 453+ A041 C9               ret
 454+ A042
 455+ A042              ; --------------------------------------------------------------------------------------
 456+ A042              ;
 457+ A042              ;   11/09/24
 458+ A042              ;
 459+ A042              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 460+ A042              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 461+ A042              ;   _disparos que el álbum del FRAME actual).
 462+ A042
 463+ A042              Limpia_album_de_pintado_disparos
 464+ A042
 465+ A042              ;*   Exclusiones.
 466+ A042
 467+ A042 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 468+ A045 A7               and a
 469+ A046 C8               ret z
 470+ A047
 471+ A047              ; -----
 472+ A047
 473+ A047 3A 12 8C         ld a,(Num_de_bytes_album_de_disparos)
 474+ A04A 47               ld b,a
 475+ A04B 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 476+ A04E
 477+ A04E 90               sub b
 478+ A04F
 479+ A04F C8               ret z
 480+ A050 D8               ret c
 481+ A051
 482+ A051 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 483+ A054 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 484+ A055 AF               xor a                                                               ; "0".
 485+ A056
 486+ A056 77           1 ld (hl),a
 487+ A057 2C               inc l
 488+ A058 10 FC            djnz 1B
 489+ A05A
 490+ A05A C9               ret
 491+ A05B
 492+ A05B              ; --------------------------------------------------------------------------------------
 493+ A05B              ;
 494+ A05B              ;   27/08/24
 495+ A05B              ;
 496+ A05B
 497+ A05B              Motor_Disparos_Amadeus
 498+ A05B
 499+ A05B              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 500+ A05B
 501+ A05B 21 20 89         ld hl,Disparo_Amad+1
 502+ A05E
 503+ A05E 34               inc (hl)
 504+ A05F 35               dec (hl)
 505+ A060
 506+ A060 C8               ret z
 507+ A061
 508+ A061              ;   Esta caja contiene un disparo.
 509+ A061
 510+ A061 CD 68 A0         call Consulta_Impacto
 511+ A064 CC 81 A0         call z,Mueve_disparo_Amadeus
 512+ A067
 513+ A067 C9               ret
 514+ A068
 515+ A068              ; ----------------------
 516+ A068              ;
 517+ A068              ;
 518+ A068              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 519+ A068              ;
 520+ A068              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 521+ A068
 522+ A068
 523+ A068              Consulta_Impacto
 524+ A068
 525+ A068              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 526+ A068              ;   _sea lo más coherente posible.
 527+ A068
 528+ A068 E5               push hl
 529+ A069 2B               dec hl
 530+ A06A CD 62 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 531+ A06D E1               pop hl
 532+ A06E 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 533+ A06F
 534+ A06F C8               ret z
 535+ A070
 536+ A070 3A 2B 8C         ld a,(Impacto2)
 537+ A073 CB DF            set 3,a
 538+ A075 32 2B 8C         ld (Impacto2),a
 539+ A078
 540+ A078 E5               push hl
 541+ A079 CD 4F A1         call Genera_coordenadas_de_disparo_Amadeus
 542+ A07C E1               pop hl
 543+ A07D CD 9A A0         call Elimina_disparo
 544+ A080
 545+ A080 C9               ret
 546+ A081
 547+ A081              ; ----------------------
 548+ A081              ;
 549+ A081              ;
 550+ A081              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 551+ A081
 552+ A081              Mueve_disparo_Amadeus
 553+ A081
 554+ A081 CD 93 90         call Extrae_address
 555+ A084
 556+ A084 CD B8 99         call PreviousScan
 557+ A087 CD B8 99         call PreviousScan
 558+ A08A CD B8 99         call PreviousScan
 559+ A08D CD B8 99         call PreviousScan
 560+ A090
 561+ A090              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 562+ A090
 563+ A090 7C               ld a,h
 564+ A091 D6 40            sub $40
 565+ A093 EB               ex de,hl
 566+ A094 38 04            jr c,Elimina_disparo
 567+ A096
 568+ A096               ; Introduce nuevo puntero_de_impresión en la caja.
 569+ A096
 570+ A096 73               ld (hl),e
 571+ A097 23               inc hl
 572+ A098 72               ld (hl),d
 573+ A099
 574+ A099 C9               ret
 575+ A09A
 576+ A09A              ; ----------------------
 577+ A09A              ;
 578+ A09A              ;   11/9/24
 579+ A09A
 580+ A09A              Elimina_disparo
 581+ A09A
 582+ A09A              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 583+ A09A              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 584+ A09A
 585+ A09A              ;   Disparo_1A defw 0									; Puntero objeto.
 586+ A09A              ;   	defw 0											; Puntero de impresión.
 587+ A09A
 588+ A09A 2B               dec hl
 589+ A09B 2B               dec hl
 590+ A09C
 591+ A09C AF               xor a
 592+ A09D 77               ld (hl),a
 593+ A09E 23               inc hl
 594+ A09F 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 595+ A0A0
 596+ A0A0 23               inc hl
 597+ A0A1 77               ld (hl),a
 598+ A0A2 23               inc hl
 599+ A0A3 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 600+ A0A4
 601+ A0A4 3E 01            ld a,1
 602+ A0A6 32 15 8C         ld (Permiso_de_disparo_Amadeus),a
 603+ A0A9
 604+ A0A9 21 26 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 605+ A0AC CB C6            set 0,(hl)
 606+ A0AE
 607+ A0AE AF               xor a
 608+ A0AF 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 609+ A0B0
 610+ A0B0 C9               ret
 611+ A0B1
 612+ A0B1              ; --------------------------------------------------------------------------------------
 613+ A0B1              ;
 614+ A0B1              ;   21/8/24
 615+ A0B1              ;
 616+ A0B1
 617+ A0B1              Pinta_disparos
 618+ A0B1
 619+ A0B1              ;    ld a,(Ctrl_5)
 620+ A0B1              ;    bit 2,a
 621+ A0B1              ;    jr nz,$
 622+ A0B1
 623+ A0B1 ED 73 00 8C      ld (Stack),sp
 624+ A0B5 06 02            ld b,2
 625+ A0B7
 626+ A0B7 ED 7B 0E 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 627+ A0BB
 628+ A0BB D1           2 pop de
 629+ A0BC
 630+ A0BC 14               inc d
 631+ A0BD 15               dec d
 632+ A0BE
 633+ A0BE 28 1B            jr z,1F
 634+ A0C0
 635+ A0C0              Imprime_scanlines_de_disparo
 636+ A0C0
 637+ A0C0 E1               pop hl
 638+ A0C1
 639+ A0C1              ; Puntero objeto en DE.
 640+ A0C1              ; Puntero_de_impresión en HL.
 641+ A0C1
 642+ A0C1              ; 1er scanline.
 643+ A0C1
 644+ A0C1 1A               ld a,(de)
 645+ A0C2 AE               xor (hl)
 646+ A0C3 77               ld (hl),a
 647+ A0C4
 648+ A0C4 13               inc de
 649+ A0C5 2C               inc l
 650+ A0C6
 651+ A0C6 1A               ld a,(de)
 652+ A0C7 AE               xor (hl)
 653+ A0C8 77               ld (hl),a
 654+ A0C9
 655+ A0C9              ; 2º scanline.
 656+ A0C9
 657+ A0C9 E1               pop hl
 658+ A0CA 1B               dec de
 659+ A0CB
 660+ A0CB 1A               ld a,(de)
 661+ A0CC AE               xor (hl)
 662+ A0CD 77               ld (hl),a
 663+ A0CE
 664+ A0CE 13               inc de
 665+ A0CF 2C               inc l
 666+ A0D0
 667+ A0D0 1A               ld a,(de)
 668+ A0D1 AE               xor (hl)
 669+ A0D2 77               ld (hl),a
 670+ A0D3
 671+ A0D3              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 672+ A0D3
 673+ A0D3 18 E6            jr 2B
 674+ A0D5
 675+ A0D5 ED 7B 0C 8C  3 ld sp,(Album_de_pintado_disparos)
 676+ A0D9 18 E0            jr 2B
 677+ A0DB
 678+ A0DB 10 F8        1 djnz 3B
 679+ A0DD ED 7B 00 8C      ld sp,(Stack)
 680+ A0E1 C9               ret
 681+ A0E2
 682+ A0E2              ; --------------------------------------------------------------------------------------
 683+ A0E2              ;
 684+ A0E2              ;   14/09/24
 685+ A0E2              ;
 686+ A0E2              ;   Modifica: HL y DE.
 687+ A0E2
 688+ A0E2
 689+ A0E2              Genera_datos_de_impresion_disparos_Amadeus
 690+ A0E2
 691+ A0E2 ED 73 00 8C      ld (Stack),sp
 692+ A0E6 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 693+ A0E9 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 694+ A0EA
 695+ A0EA 14               inc d                                                     ;? Salimos si no hay disparo.
 696+ A0EB 15               dec d
 697+ A0EC
 698+ A0EC 28 12            jr z,Salida
 699+ A0EE
 700+ A0EE              Genera_scanlines_de_disparo_Amadeus
 701+ A0EE
 702+ A0EE E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 703+ A0EF              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 704+ A0EF ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 705+ A0F3
 706+ A0F3 C1               pop bc
 707+ A0F4 C1               pop bc
 708+ A0F5 C1               pop bc
 709+ A0F6
 710+ A0F6 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 711+ A0FA
 712+ A0FA E5               push hl                                                   ;? Sube 2º scanline al álbum.
 713+ A0FB CD B8 99         call PreviousScan
 714+ A0FE E5               push hl                                                   ;? Sube 1er scanline al álbum.
 715+ A0FF D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 716+ A100
 717+ A100              Salida
 718+ A100
 719+ A100 ED 7B 00 8C      ld sp,(Stack)
 720+ A104
 721+ A104 C9               ret
 722+ A105
 723+ A105              ; --------------------------------------------------------------------------------------
 724+ A105              ;
 725+ A105              ;   12/09/24
 726+ A105              ;
 727+ A105
 728+ A105              Genera_disparo_Amadeus
 729+ A105
 730+ A105              ;*  Exclusiones.
 731+ A105
 732+ A105 3A 15 8C         ld a,(Permiso_de_disparo_Amadeus)
 733+ A108 A7               and a
 734+ A109 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 735+ A10A
 736+ A10A 3D               dec a
 737+ A10B 32 15 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 738+ A10E
 739+ A10E              Define_puntero_objeto_disparo
 740+ A10E
 741+ A10E              ;   Inicializamos contador.
 742+ A10E
 743+ A10E 06 00            ld b,0
 744+ A110
 745+ A110 2A 72 89         ld hl,(p.imp.amadeus)
 746+ A113 2C               inc l
 747+ A114
 748+ A114 3E 80            ld a,$80
 749+ A116 BE               cp (hl)
 750+ A117 28 0D            jr z,1F
 751+ A119
 752+ A119 04               inc b
 753+ A11A
 754+ A11A 3E 60            ld a,$60
 755+ A11C BE               cp (hl)
 756+ A11D 28 07            jr z,1F
 757+ A11F
 758+ A11F
 759+ A11F 04               inc b
 760+ A120
 761+ A120 3E 18            ld a,$18
 762+ A122 BE               cp (hl)
 763+ A123 28 01            jr z,1F
 764+ A125
 765+ A125 04               inc b
 766+ A126
 767+ A126              ;   Calcula el Puntero_de_impresión del disparo.
 768+ A126
 769+ A126              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 770+ A126
 771+ A126 CD B8 99     1 call PreviousScan
 772+ A129
 773+ A129 78               ld a,b
 774+ A12A CB 3F            srl a
 775+ A12C 28 03            jr z,4F
 776+ A12E
 777+ A12E              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 778+ A12E E5               push hl
 779+ A12F 18 02            jr 5F
 780+ A131 2D           4 dec l
 781+ A132 E5               push hl
 782+ A133              ; ---
 783+ A133
 784+ A133              ;   Calcula el Puntero_objeto del disparo.
 785+ A133
 786+ A133 21 72 83     5 ld hl,Indice_disparo_Amadeus
 787+ A136 04               inc b
 788+ A137 05               dec b
 789+ A138 28 04            jr z,2F
 790+ A13A
 791+ A13A              ;   Nos desplazamos por el índice de disparos.
 792+ A13A
 793+ A13A 2C           3 inc l
 794+ A13B 2C               inc l
 795+ A13C 10 FC            djnz 3B
 796+ A13E
 797+ A13E              ; --- Guarda el Puntero_objeto del disparo en la pila.
 798+ A13E CD 93 90     2 call Extrae_address
 799+ A141 E5               push hl
 800+ A142              ; ---
 801+ A142
 802+ A142              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 803+ A142              ; HL en el 1er .db de la caja.
 804+ A142
 805+ A142 21 1F 89         ld hl,Disparo_Amad
 806+ A145
 807+ A145 06 02            ld b,2
 808+ A147
 809+ A147 D1           6 pop de
 810+ A148 73               ld (hl),e
 811+ A149 23               inc hl
 812+ A14A 72               ld (hl),d
 813+ A14B 23               inc hl
 814+ A14C
 815+ A14C 10 F9            djnz 6B
 816+ A14E
 817+ A14E C9               ret
 818+ A14F
 819+ A14F              Genera_coordenadas_de_disparo_Amadeus
 820+ A14F
 821+ A14F              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 822+ A14F              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 823+ A14F              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 824+ A14F
 825+ A14F CD 93 90         call Extrae_address
 826+ A152 CD A9 94         call Genera_coordenadas
 827+ A155
 828+ A155 3D               dec a
 829+ A156
 830+ A156 21 2E 8C         ld hl,Coordenadas_disparo_certero
 831+ A159 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 832+ A15A 23               inc hl
 833+ A15B 3A B4 8B         ld a,(Coordenada_X)
 834+ A15E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 835+ A15F
 836+ A15F AF               xor a
 837+ A160 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 838+ A161
 839+ A161 C9               ret
 840+ A162
 841+ A162              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 842+ A162              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 843+ A162              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 844+ A162
 845+ A162              ; ----------------------------------------------
 846+ A162              ;
 847+ A162              ;   27/08/24
 848+ A162              ;
 849+ A162              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 850+ A162              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 851+ A162
 852+ A162              Detecta_impacto_en_disparo_de_Amadeus
 853+ A162
 854+ A162              Extraccion_de_datos
 855+ A162
 856+ A162 13               inc de
 857+ A163 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 858+ A164
 859+ A164 5E               ld e,(hl)
 860+ A165 23               inc hl
 861+ A166 56               ld d,(hl)
 862+ A167
 863+ A167 23               inc hl
 864+ A168
 865+ A168 4E               ld c,(hl)
 866+ A169 23               inc hl
 867+ A16A 46               ld b,(hl)
 868+ A16B
 869+ A16B C5               push bc
 870+ A16C E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 871+ A16D
 872+ A16D              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 873+ A16D
 874+ A16D CD B8 99         call PreviousScan
 875+ A170 CD B8 99         call PreviousScan
 876+ A173
 877+ A173              Detecta_impacto_
 878+ A173
 879+ A173 1A               ld a,(de)
 880+ A174 A6               and (hl)
 881+ A175 C0               ret nz
 882+ A176
 883+ A176 13               inc de
 884+ A177 23               inc hl
 885+ A178
 886+ A178 1A               ld a,(de)
 887+ A179 A6               and (hl)
 888+ A17A C9               ret
 889+ A17B
 890+ A17B              ; -------------------------------------------------------------------------------------------------------------
 891+ A17B              ;
 892+ A17B              ;   8/8/24
 893+ A17B              ;
 894+ A17B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 895+ A17B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 896+ A17B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 897+ A17B              ;
 898+ A17B              ;   MODIFICA: HL,DE,BC y A.
 899+ A17B              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 900+ A17B              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 901+ A17B
 902+ A17B              Colision_Entidad_Amadeus
 903+ A17B
 904+ A17B              ; Posible contacto de entidad con Amadeus. ?????
 905+ A17B
 906+ A17B              ; Exclusiones:
 907+ A17B
 908+ A17B 3A 4E 8C         ld a,(Shield)
 909+ A17E A7               and a
 910+ A17F C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 911+ A180
 912+ A180 21 24 8C         ld hl,Ctrl_3
 913+ A183 CB 76            bit 6,(hl)
 914+ A185 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 915+ A186
 916+ A186 21 2B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 917+ A189 CB 56            bit 2,(hl)
 918+ A18B C0               ret nz
 919+ A18C
 920+ A18C 3A B5 8B     	ld a,(Coordenada_y)
 921+ A18F FE 14        	cp $14
 922+ A191 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 923+ A192
 924+ A192 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 925+ A195 A7               and a
 926+ A196 C0               ret nz
 927+ A197
 928+ A197              Genera_coordenadas_X
 929+ A197
 930+ A197              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 931+ A197              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 932+ A197
 933+ A197              ;   Limpiamos almacenes.
 934+ A197
 935+ A197              ;    call Limpia_Coordenadas_X
 936+ A197
 937+ A197              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 938+ A197
 939+ A197 21 30 8C         ld hl,Coordenadas_X_Entidad
 940+ A19A 3A B4 8B         ld a,(Coordenada_X)
 941+ A19D CD BF A1         call Guarda_coordenadas_X
 942+ A1A0
 943+ A1A0              ;   Almacenamos las coordenadas X de Amadeus.
 944+ A1A0
 945+ A1A0 3A 6E 89         ld a,(CX_Amadeus)
 946+ A1A3 CD BF A1         call Guarda_coordenadas_X
 947+ A1A6 CD D3 A1         call Compara_coordenadas_X
 948+ A1A9 C0               ret nz
 949+ A1AA
 950+ A1AA 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 951+ A1AC 32 B7 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 952+ A1AF
 953+ A1AF 2A F3 8B         ld hl,(Puntero_store_caja)
 954+ A1B2 2C               inc l
 955+ A1B3 2C               inc l
 956+ A1B4 2C               inc l
 957+ A1B5 2C               inc l
 958+ A1B6 22 2C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 959+ A1B9
 960+ A1B9 21 2B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 961+ A1BC CB D6            set 2,(hl)
 962+ A1BE
 963+ A1BE C9               ret
 964+ A1BF
 965+ A1BF               ; ----- ----- ----- ----- -----
 966+ A1BF
 967+ A1BF 77           Guarda_coordenadas_X ld (hl),a
 968+ A1C0 3C               inc a
 969+ A1C1 2C               inc l
 970+ A1C2 77               ld (hl),a
 971+ A1C3 3C               inc a
 972+ A1C4 2C               inc l
 973+ A1C5 77               ld (hl),a
 974+ A1C6 2C               inc l
 975+ A1C7 C9               ret
 976+ A1C8
 977+ A1C8 AF           Limpia_Coordenadas_X xor a
 978+ A1C9 06 06            ld b,6
 979+ A1CB 21 33 8C         ld hl,Coordenadas_X_Amadeus
 980+ A1CE 77           1 ld (hl),a
 981+ A1CF 23               inc hl
 982+ A1D0 10 FC            djnz 1B
 983+ A1D2 C9               ret
 984+ A1D3
 985+ A1D3              ; ----- ----- ----- ----- -----
 986+ A1D3
 987+ A1D3              Compara_coordenadas_X
 988+ A1D3
 989+ A1D3 DD 21 30 8C      ld ix,Coordenadas_X_Entidad
 990+ A1D7 DD 7E 00         ld a,(ix+0)
 991+ A1DA CD E8 A1         call Comparando
 992+ A1DD C8               ret z
 993+ A1DE
 994+ A1DE 3C               inc a
 995+ A1DF CD F7 A1         call Comparando_1
 996+ A1E2 C8               ret z
 997+ A1E3
 998+ A1E3 3C               inc a
 999+ A1E4 CD F7 A1         call Comparando_1
1000+ A1E7 C9               ret
1001+ A1E8
1002+ A1E8              ; ----- ----- ----- ----- -----
1003+ A1E8              ;
1004+ A1E8              ;   4/12/23
1005+ A1E8              ;
1006+ A1E8              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1007+ A1E8
1008+ A1E8              Comparando
1009+ A1E8
1010+ A1E8 DD 2C            inc ixl
1011+ A1EA DD 2C            inc ixl
1012+ A1EC DD 2C            inc ixl
1013+ A1EE
1014+ A1EE DD 46 00         ld b,(ix+0)
1015+ A1F1 DD 4E 01         ld c,(ix+1)
1016+ A1F4 DD 56 02         ld d,(ix+2)
1017+ A1F7
1018+ A1F7 B8           Comparando_1 cp b
1019+ A1F8 C8               ret z
1020+ A1F9 B9               cp c
1021+ A1FA C8               ret z
1022+ A1FB BA               cp d
1023+ A1FC C9               ret
1024+ A1FD
1025+ A1FD              ; -----------------------------------------------------------------------
1026+ A1FD              ;
1027+ A1FD              ;   04/7/24
1028+ A1FD              ;
1029+ A1FD
1030+ A1FD              Detecta_colision_nave_entidad
1031+ A1FD
1032+ A1FD              ; Exclusiones:
1033+ A1FD
1034+ A1FD              ; Salimos de la rutina si no hay advertencia de posible colisión.
1035+ A1FD
1036+ A1FD 21 2B 8C     	ld hl,Impacto2
1037+ A200 CB 56        	bit 2,(hl)
1038+ A202 C8           	ret z
1039+ A203
1040+ A203              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1041+ A203
1042+ A203 2A 74 89         ld hl,(Pamm_Amadeus)
1043+ A206 CD 93 90         call Extrae_address
1044+ A209 54               ld d,h
1045+ A20A 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1046+ A20B
1047+ A20B 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1048+ A20E 06 10            ld b,16                                        ; Contador de scanlines en B.
1049+ A210 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1050+ A213
1051+ A213 C5           1 push bc
1052+ A214 06 03            ld b,3
1053+ A216 E5               push hl
1054+ A217
1055+ A217              ; .db
1056+ A217
1057+ A217 1A           3 ld a,(de)
1058+ A218 A7               and a
1059+ A219 20 03            jr nz,4F
1060+ A21B
1061+ A21B 2C               inc l
1062+ A21C 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1063+ A21E
1064+ A21E ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1065+ A220 28 04            jr z,2F
1066+ A222
1067+ A222              ; Impacto.
1068+ A222 FD 2D            dec iyl
1069+ A224 28 22            jr z,5F
1070+ A226
1071+ A226 1C           2 inc e
1072+ A227 10 EE            djnz 3B
1073+ A229
1074+ A229 E1               pop hl
1075+ A22A
1076+ A22A              ; Hay salto de línea en el puntero de impresión ???
1077+ A22A
1078+ A22A 7C               ld a,h
1079+ A22B D6 57            sub $57
1080+ A22D 20 0A            jr nz,6F
1081+ A22F
1082+ A22F              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1083+ A22F
1084+ A22F 2A 72 89         ld hl,(p.imp.amadeus)
1085+ A232 3E 20            ld a,$20
1086+ A234 A7               and a
1087+ A235 85               add l
1088+ A236 6F               ld l,a
1089+ A237 18 01            jr 7F
1090+ A239
1091+ A239 24           6 inc h
1092+ A23A
1093+ A23A C1           7 pop bc
1094+ A23B 10 D6            djnz 1B
1095+ A23D
1096+ A23D              ;   Fin de la comparativa.
1097+ A23D
1098+ A23D              ;   NO HAY COLISIÓN !!!!!.
1099+ A23D              ;
1100+ A23D              ;   .db (Impacto) de Amadeus a "0".
1101+ A23D              ;   RES el bit2 de (Impacto2).
1102+ A23D              ;
1103+ A23D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1104+ A23D              ;   Lo colocamos a "0".
1105+ A23D
1106+ A23D 21 2B 8C         ld hl,Impacto2
1107+ A240 CB 96            res 2,(hl)
1108+ A242 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)
1109+ A245 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1110+ A247 C9               ret
1111+ A248
1112+ A248              ;   COLISIÓN !!!!!.
1113+ A248              ;
1114+ A248              ;   .db (Impacto) de Amadeus a "1".
1115+ A248              ;   SET el bit3 de (Impacto2).
1116+ A248              ;
1117+ A248              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1118+ A248
1119+ A248 E1           5 pop hl
1120+ A249 C1               pop bc
1121+ A24A
1122+ A24A 21 71 89         ld hl,Impacto_Amadeus
1123+ A24D 36 01            ld (hl),1
1124+ A24F 21 2B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1125+ A252 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1126+ A254
1127+ A254 11 C0 87         ld de,Indice_Explosion_entidades
1128+ A257 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1129+ A25A
1130+ A25A 23               inc hl
1131+ A25B 23               inc hl
1132+ A25C 23               inc hl
1133+ A25D
1134+ A25D 73               ld (hl),e
1135+ A25E 23               inc hl
1136+ A25F 72               ld (hl),d
1137+ A260
1138+ A260              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1139+ A260
1140+ A260 11 60 88         ld de,Indice_Explosion_Amadeus
1141+ A263 21 74 89         ld hl,Pamm_Amadeus
1142+ A266
1143+ A266 73               ld (hl),e
1144+ A267 23               inc hl
1145+ A268 72               ld (hl),d
1146+ A269
1147+ A269 C9               ret
1148+ A26A
1149+ A26A
1150+ A26A
# file closed: Disparo.asm
2176  A26A
2177  A26A              	SAVESNA "Pruebas.sna", START
2178  A26A
2179  A26A
2180  A26A
2181  A26A
# file closed: Banco_de_pruebas.asm
