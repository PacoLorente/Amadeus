# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD E1 8A     	call Frame
  15  A104
  16  A104 3A 06 8A     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 08 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110 ED 4D        	reti
  23  A112
  24  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A112
  26  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  27  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										 ;! 66 Bytes por entidad.
  96+ 8574
  97+ 8574 CE 85        	defw Caja_1
  98+ 8576 10 86        	defw Caja_2
  99+ 8578 52 86        	defw Caja_3
 100+ 857A 94 86        	defw Caja_4
 101+ 857C D6 86        	defw Caja_5
 102+ 857E 18 87        	defw Caja_6
 103+ 8580 5A 87        	defw Caja_7
 104+ 8582 9C 87        	defw Caja_8
 105+ 8584 DE 87        	defw Caja_9
 106+ 8586 20 88        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85BC
 145+ 85BC 00           	db 0											; (Autoriza_movimiento).
 146+ 85BD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85C1 00 00
 147+ 85C3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 148+ 85C5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 149+ 85C7 00           	db 0											; (Cola_de_desplazamiento).
 150+ 85C8
 151+ 85C8 00           	db 0 											; (Columnas).
 152+ 85C9 00 00        	defw 0											; (Limite_horizontal).
 153+ 85CB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 154+ 85CE
 155+ 85CE              ; ---------- ---------- ---------- ---------- ----------
 156+ 85CE
 157+ 85CE 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 158+ 85D0 00 00        	defw 0											; (Posicion_actual).
 159+ 85D2 00 00        	defw 0 											; (Puntero_objeto).
 160+ 85D4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 161+ 85D7
 162+ 85D7 00           	db %00000000 									; (Attr).
 163+ 85D8
 164+ 85D8 00 00        	defw 0											; (Indice_Sprite_der).
 165+ 85DA 00 00        	defw 0											; (Indice_Sprite_izq).
 166+ 85DC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 167+ 85DE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 168+ 85E0
 169+ 85E0 00 00        	defw 0											; (Posicion_inicio).
 170+ 85E2 00           	db 0											; (Cuad_objeto).
 171+ 85E3
 172+ 85E3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 173+ 85E7
 174+ 85E7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 175+ 85E8
 176+ 85E8 00 00        	db 0,0										    ; Variables_de_borrado
 177+ 85EA 00 00        	defw 0											;	" " " " " " "
 178+ 85EC 00 00        	defw 0											;	" " " " " " "
 179+ 85EE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 85F2
 181+ 85F2 00 00        	db 0,0											; Variables_de_pintado
 182+ 85F4 00 00        	defw 0											;	" " " " " " "
 183+ 85F6 00 00        	defw 0											;	" " " " " " "
 184+ 85F8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 185+ 85FC
 186+ 85FC 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 187+ 85FE
 188+ 85FE 00           	db 0											; (Autoriza_movimiento).
 189+ 85FF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 189+ 8603 00 00
 190+ 8605 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 191+ 8607 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 192+ 8609 00           	db 0											; (Cola_de_desplazamiento).
 193+ 860A
 194+ 860A 00           	db 0 											; (Columnas).
 195+ 860B 00 00        	defw 0											; (Limite_horizontal).
 196+ 860D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 197+ 8610
 198+ 8610              ; ---------- ---------- ---------- ---------- ----------
 199+ 8610
 200+ 8610 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 201+ 8612 00 00        	defw 0											; (Posicion_actual).
 202+ 8614 00 00        	defw 0 											; (Puntero_objeto).
 203+ 8616 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 204+ 8619
 205+ 8619 00           	db %00000000 									; (Attr).
 206+ 861A
 207+ 861A 00 00        	defw 0											; (Indice_Sprite_der).
 208+ 861C 00 00        	defw 0											; (Indice_Sprite_izq).
 209+ 861E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 210+ 8620 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 211+ 8622
 212+ 8622 00 00        	defw 0											; (Posicion_inicio).
 213+ 8624 00           	db 0											; (Cuad_objeto).
 214+ 8625
 215+ 8625 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 216+ 8629
 217+ 8629 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 218+ 862A
 219+ 862A 00 00        	db 0,0										    ; Variables_de_borrado
 220+ 862C 00 00        	defw 0											;	" " " " " " "
 221+ 862E 00 00        	defw 0											;	" " " " " " "
 222+ 8630 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8634
 224+ 8634 00 00        	db 0,0											; Variables_de_pintado
 225+ 8636 00 00        	defw 0											;	" " " " " " "
 226+ 8638 00 00        	defw 0											;	" " " " " " "
 227+ 863A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 228+ 863E
 229+ 863E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 230+ 8640
 231+ 8640 00           	db 0											; (Autoriza_movimiento).
 232+ 8641 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 232+ 8645 00 00
 233+ 8647 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 234+ 8649 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 235+ 864B 00           	db 0											; (Cola_de_desplazamiento).
 236+ 864C
 237+ 864C 00           	db 0 											; (Columnas).
 238+ 864D 00 00        	defw 0											; (Limite_horizontal).
 239+ 864F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 8652
 241+ 8652              ; ---------- ---------- ---------- ---------- ----------
 242+ 8652
 243+ 8652 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 244+ 8654 00 00        	defw 0											; (Posicion_actual).
 245+ 8656 00 00        	defw 0 											; (Puntero_objeto).
 246+ 8658 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 865B
 248+ 865B 00           	db %00000000 									; (Attr).
 249+ 865C
 250+ 865C 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 865E 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 8660 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 8662 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 8664
 255+ 8664 00 00        	defw 0											; (Posicion_inicio).
 256+ 8666 00           	db 0											; (Cuad_objeto).
 257+ 8667
 258+ 8667 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 866B
 260+ 866B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 866C
 262+ 866C 00 00        	db 0,0										    ; Variables_de_borrado
 263+ 866E 00 00        	defw 0											;	" " " " " " "
 264+ 8670 00 00        	defw 0											;	" " " " " " "
 265+ 8672 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 266+ 8676
 267+ 8676 00 00        	db 0,0											; Variables_de_pintado
 268+ 8678 00 00        	defw 0											;	" " " " " " "
 269+ 867A 00 00        	defw 0											;	" " " " " " "
 270+ 867C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 271+ 8680
 272+ 8680 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 273+ 8682
 274+ 8682 00           	db 0											; (Autoriza_movimiento).
 275+ 8683 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 275+ 8687 00 00
 276+ 8689 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 277+ 868B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 278+ 868D 00           	db 0											; (Cola_de_desplazamiento).
 279+ 868E
 280+ 868E 00           	db 0 											; (Columnas).
 281+ 868F 00 00        	defw 0											; (Limite_horizontal).
 282+ 8691 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 283+ 8694
 284+ 8694              ; ---------- ---------- ---------- ---------- ----------
 285+ 8694
 286+ 8694 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 287+ 8696 00 00        	defw 0											; (Posicion_actual).
 288+ 8698 00 00        	defw 0 											; (Puntero_objeto).
 289+ 869A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 290+ 869D
 291+ 869D 00           	db %00000000 									; (Attr).
 292+ 869E
 293+ 869E 00 00        	defw 0											; (Indice_Sprite_der).
 294+ 86A0 00 00        	defw 0											; (Indice_Sprite_izq).
 295+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_der).
 296+ 86A4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 297+ 86A6
 298+ 86A6 00 00        	defw 0											; (Posicion_inicio).
 299+ 86A8 00           	db 0											; (Cuad_objeto).
 300+ 86A9
 301+ 86A9 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 302+ 86AD
 303+ 86AD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 304+ 86AE
 305+ 86AE 00 00        	db 0,0										    ; Variables_de_borrado
 306+ 86B0 00 00        	defw 0											;	" " " " " " "
 307+ 86B2 00 00        	defw 0											;	" " " " " " "
 308+ 86B4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 309+ 86B8
 310+ 86B8 00 00        	db 0,0											; Variables_de_pintado
 311+ 86BA 00 00        	defw 0											;	" " " " " " "
 312+ 86BC 00 00        	defw 0											;	" " " " " " "
 313+ 86BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 314+ 86C2
 315+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 316+ 86C4
 317+ 86C4 00           	db 0											; (Autoriza_movimiento).
 318+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 318+ 86C9 00 00
 319+ 86CB 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 320+ 86CD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86CF 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86D0
 323+ 86D0 00           	db 0 											; (Columnas).
 324+ 86D1 00 00        	defw 0											; (Limite_horizontal).
 325+ 86D3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86D6
 327+ 86D6              ; ---------- ---------- ---------- ---------- ----------
 328+ 86D6
 329+ 86D6 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86D8 00 00        	defw 0											; (Posicion_actual).
 331+ 86DA 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86DC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86DF
 334+ 86DF 00           	db %00000000 									; (Attr).
 335+ 86E0
 336+ 86E0 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86E2 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86E4 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86E6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86E8
 341+ 86E8 00 00        	defw 0											; (Posicion_inicio).
 342+ 86EA 00           	db 0											; (Cuad_objeto).
 343+ 86EB
 344+ 86EB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 86EF
 346+ 86EF 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 86F0
 348+ 86F0 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 86F2 00 00        	defw 0											;	" " " " " " "
 350+ 86F4 00 00        	defw 0											;	" " " " " " "
 351+ 86F6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 86FA
 353+ 86FA 00 00        	db 0,0											; Variables_de_pintado
 354+ 86FC 00 00        	defw 0											;	" " " " " " "
 355+ 86FE 00 00        	defw 0											;	" " " " " " "
 356+ 8700 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8704
 358+ 8704 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 8706
 360+ 8706 00           	db 0											; (Autoriza_movimiento).
 361+ 8707 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 870B 00 00
 362+ 870D 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 363+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 364+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 365+ 8712
 366+ 8712 00           	db 0 											; (Columnas).
 367+ 8713 00 00        	defw 0											; (Limite_horizontal).
 368+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 369+ 8718
 370+ 8718              ; ---------- ---------- ---------- ---------- ----------
 371+ 8718
 372+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 373+ 871A 00 00        	defw 0											; (Posicion_actual).
 374+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 375+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 376+ 8721
 377+ 8721 00           	db %00000000 									; (Attr).
 378+ 8722
 379+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 380+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 381+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 382+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 383+ 872A
 384+ 872A 00 00        	defw 0											; (Posicion_inicio).
 385+ 872C 00           	db 0											; (Cuad_objeto).
 386+ 872D
 387+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 388+ 8731
 389+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 390+ 8732
 391+ 8732 00 00        	db 0,0										    ; Variables_de_borrado
 392+ 8734 00 00        	defw 0											;	" " " " " " "
 393+ 8736 00 00        	defw 0											;	" " " " " " "
 394+ 8738 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 395+ 873C
 396+ 873C 00 00        	db 0,0											; Variables_de_pintado
 397+ 873E 00 00        	defw 0											;	" " " " " " "
 398+ 8740 00 00        	defw 0											;	" " " " " " "
 399+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 400+ 8746
 401+ 8746 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 402+ 8748
 403+ 8748 00           	db 0											; (Autoriza_movimiento).
 404+ 8749 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 404+ 874D 00 00
 405+ 874F 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 406+ 8751 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 407+ 8753 00           	db 0											; (Cola_de_desplazamiento).
 408+ 8754
 409+ 8754 00           	db 0 											; (Columnas).
 410+ 8755 00 00        	defw 0											; (Limite_horizontal).
 411+ 8757 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 412+ 875A
 413+ 875A              ; ---------- ---------- ---------- ---------- ----------
 414+ 875A
 415+ 875A 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 416+ 875C 00 00        	defw 0											; (Posicion_actual).
 417+ 875E 00 00        	defw 0 											; (Puntero_objeto).
 418+ 8760 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 419+ 8763
 420+ 8763 00           	db %00000000 									; (Attr).
 421+ 8764
 422+ 8764 00 00        	defw 0											; (Indice_Sprite_der).
 423+ 8766 00 00        	defw 0											; (Indice_Sprite_izq).
 424+ 8768 00 00        	defw 0											; (Puntero_DESPLZ_der).
 425+ 876A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 426+ 876C
 427+ 876C 00 00        	defw 0											; (Posicion_inicio).
 428+ 876E 00           	db 0											; (Cuad_objeto).
 429+ 876F
 430+ 876F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 431+ 8773
 432+ 8773 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 433+ 8774
 434+ 8774 00 00        	db 0,0										    ; Variables_de_borrado
 435+ 8776 00 00        	defw 0											;	" " " " " " "
 436+ 8778 00 00        	defw 0											;	" " " " " " "
 437+ 877A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 438+ 877E
 439+ 877E 00 00        	db 0,0											; Variables_de_pintado
 440+ 8780 00 00        	defw 0											;	" " " " " " "
 441+ 8782 00 00        	defw 0											;	" " " " " " "
 442+ 8784 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 443+ 8788
 444+ 8788 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 445+ 878A
 446+ 878A 00           	db 0											; (Autoriza_movimiento).
 447+ 878B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 447+ 878F 00 00
 448+ 8791 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 449+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 450+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 451+ 8796
 452+ 8796 00           	db 0 											; (Columnas).
 453+ 8797 00 00        	defw 0											; (Limite_horizontal).
 454+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 455+ 879C
 456+ 879C              ; ---------- ---------- ---------- ---------- ----------
 457+ 879C
 458+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 459+ 879E 00 00        	defw 0											; (Posicion_actual).
 460+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 461+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 462+ 87A5
 463+ 87A5 00           	db %00000000 									; (Attr).
 464+ 87A6
 465+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 466+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 467+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 468+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 469+ 87AE
 470+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 471+ 87B0 00           	db 0											; (Cuad_objeto).
 472+ 87B1
 473+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 474+ 87B5
 475+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 476+ 87B6
 477+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 478+ 87B8 00 00        	defw 0											;	" " " " " " "
 479+ 87BA 00 00        	defw 0											;	" " " " " " "
 480+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 481+ 87C0
 482+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 483+ 87C2 00 00        	defw 0											;	" " " " " " "
 484+ 87C4 00 00        	defw 0											;	" " " " " " "
 485+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 486+ 87CA
 487+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 488+ 87CC
 489+ 87CC 00           	db 0											; (Autoriza_movimiento).
 490+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 490+ 87D1 00 00
 491+ 87D3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 492+ 87D5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 493+ 87D7 00           	db 0											; (Cola_de_desplazamiento).
 494+ 87D8
 495+ 87D8 00           	db 0 											; (Columnas).
 496+ 87D9 00 00        	defw 0											; (Limite_horizontal).
 497+ 87DB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 498+ 87DE
 499+ 87DE              ; ---------- ---------- ---------- ---------- ----------
 500+ 87DE
 501+ 87DE 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 502+ 87E0 00 00        	defw 0											; (Posicion_actual).
 503+ 87E2 00 00        	defw 0 											; (Puntero_objeto).
 504+ 87E4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 505+ 87E7
 506+ 87E7 00           	db %00000000 									; (Attr).
 507+ 87E8
 508+ 87E8 00 00        	defw 0											; (Indice_Sprite_der).
 509+ 87EA 00 00        	defw 0											; (Indice_Sprite_izq).
 510+ 87EC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 511+ 87EE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 512+ 87F0
 513+ 87F0 00 00        	defw 0											; (Posicion_inicio).
 514+ 87F2 00           	db 0											; (Cuad_objeto).
 515+ 87F3
 516+ 87F3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 517+ 87F7
 518+ 87F7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 519+ 87F8
 520+ 87F8 00 00        	db 0,0										    ; Variables_de_borrado
 521+ 87FA 00 00        	defw 0											;	" " " " " " "
 522+ 87FC 00 00        	defw 0											;	" " " " " " "
 523+ 87FE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 524+ 8802
 525+ 8802 00 00        	db 0,0											; Variables_de_pintado
 526+ 8804 00 00        	defw 0											;	" " " " " " "
 527+ 8806 00 00        	defw 0											;	" " " " " " "
 528+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 529+ 880C
 530+ 880C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 531+ 880E
 532+ 880E 00           	db 0											; (Autoriza_movimiento).
 533+ 880F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 533+ 8813 00 00
 534+ 8815 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 535+ 8817 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 536+ 8819 00           	db 0											; (Cola_de_desplazamiento).
 537+ 881A
 538+ 881A 00           	db 0 											; (Columnas).
 539+ 881B 00 00        	defw 0											; (Limite_horizontal).
 540+ 881D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 541+ 8820
 542+ 8820              ; ---------- ---------- ---------- ---------- ----------
 543+ 8820
 544+ 8820 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 545+ 8822 00 00        	defw 0											; (Posicion_actual).
 546+ 8824 00 00        	defw 0 											; (Puntero_objeto).
 547+ 8826 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 548+ 8829
 549+ 8829 00           	db %00000000 									; (Attr).
 550+ 882A
 551+ 882A 00 00        	defw 0											; (Indice_Sprite_der).
 552+ 882C 00 00        	defw 0											; (Indice_Sprite_izq).
 553+ 882E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 554+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 555+ 8832
 556+ 8832 00 00        	defw 0											; (Posicion_inicio).
 557+ 8834 00           	db 0											; (Cuad_objeto).
 558+ 8835
 559+ 8835 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 560+ 8839
 561+ 8839 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 562+ 883A
 563+ 883A 00 00        	db 0,0										    ; Variables_de_borrado
 564+ 883C 00 00        	defw 0											;	" " " " " " "
 565+ 883E 00 00        	defw 0											;	" " " " " " "
 566+ 8840 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 567+ 8844
 568+ 8844 00 00        	db 0,0											; Variables_de_pintado
 569+ 8846 00 00        	defw 0											;	" " " " " " "
 570+ 8848 00 00        	defw 0											;	" " " " " " "
 571+ 884A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 572+ 884E
 573+ 884E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 574+ 8850
 575+ 8850 00           	db 0											; (Autoriza_movimiento).
 576+ 8851 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 576+ 8855 00 00
 577+ 8857 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 578+ 8859 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 579+ 885B 00           	db 0											; (Cola_de_desplazamiento).
 580+ 885C
 581+ 885C 00           	db 0 											; (Columnas).
 582+ 885D 00 00        	defw 0											; (Limite_horizontal).
 583+ 885F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 584+ 8862
 585+ 8862              ; -------------------------------------------------------------------------------------
 586+ 8862              ;
 587+ 8862              ;	20/05/23
 588+ 8862              ;
 589+ 8862              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 590+ 8862              ;
 591+ 8862              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 592+ 8862              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 593+ 8862              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 594+ 8862              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 595+ 8862
 596+ 8862              Indice_de_entidades
 597+ 8862
 598+ 8862 6C 88        	defw Entidad_1
 599+ 8864 7C 88        	defw Entidad_2
 600+ 8866 8C 88        	defw Entidad_3
 601+ 8868 9C 88        	defw Entidad_4
 602+ 886A AC 88        	defw Entidad_5
 603+ 886C
 604+ 886C              ;	BADSAT, (Satélite malvado).
 605+ 886C
 606+ 886C 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 607+ 886E 04           	db %00000100									; (Attr).
 608+ 886F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 609+ 8871 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 610+ 8873 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 611+ 8875 01           	db 1											; (Cuad_objeto).
 612+ 8876 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 613+ 887A BD 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 614+ 887C
 615+ 887C 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 616+ 887E 02           	db %00000010									; (Attr).
 617+ 887F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 618+ 8881 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 619+ 8883 40 50        	defw $5040                                      ; (Posicion_inicio).
 620+ 8885 01           	db 1											; (Cuad_objeto).
 621+ 8886 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 622+ 888A BD 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 623+ 888C
 624+ 888C 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 625+ 888E 04           	db %00000100									; (Attr).
 626+ 888F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 627+ 8891 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 628+ 8893 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 629+ 8895 01           	db 1											; (Cuad_objeto).
 630+ 8896 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 631+ 889A BD 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 632+ 889C
 633+ 889C 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 634+ 889E 01           	db %00000001									; (Attr).
 635+ 889F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 636+ 88A1 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 637+ 88A3 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 638+ 88A5 01           	db 1											; (Cuad_objeto).
 639+ 88A6 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 640+ 88AA BD 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 641+ 88AC
 642+ 88AC 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 643+ 88AE 01           	db %00000001									; (Attr).
 644+ 88AF A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 645+ 88B1 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 646+ 88B3 07 40        	defw $4007                                      ; (Posicion_inicio).
 647+ 88B5 01           	db 1											; (Cuad_objeto).
 648+ 88B6 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 649+ 88BA BD 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 650+ 88BC
# file closed: Cajas_y_disparos.asm
  28  88BC              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BC              ; 13/05/23
   2+ 88BC
   3+ 88BC              Indice_de_niveles
   4+ 88BC
   5+ 88BC CA 88        	defw Nivel_1
   6+ 88BE CC 88        	defw Nivel_2
   7+ 88C0 D9 88        	defw Nivel_3
   8+ 88C2 E9 88        	defw Nivel_4
   9+ 88C4 FB 88        	defw Nivel_5
  10+ 88C6
  11+ 88C6              ;	...
  12+ 88C6              ;	...
  13+ 88C6              ;	+ Niveles ...
  14+ 88C6
  15+ 88C6 00 00        	defw 0
  16+ 88C8 00 00        	defw 0
  17+ 88CA
  18+ 88CA 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CB 01           	db 1
  20+ 88CC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D1 01 02
  22+ 88D3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88D7 01 02
  23+ 88D9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88DE 01
  25+ 88DF 03 01 01 01  	db 3,1,1,1,1
  25+ 88E3 01
  26+ 88E4 03 01 01 01  	db 3,1,1,1,1
  26+ 88E8 01
  27+ 88E9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88EE 01
  29+ 88EF 04 01 01 01  	db 4,1,1,1,1
  29+ 88F3 01
  30+ 88F4 04 01 01 01  	db 4,1,1,1,1
  30+ 88F8 01
  31+ 88F9 02 03        	db 2,3
  32+ 88FB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8900 01
  34+ 8901 05 01 01 01  	db 5,1,1,1,1
  34+ 8905 01
  35+ 8906 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890A 01
  36+ 890B 05 01 01 01  	db 5,1,1,1,1
  36+ 890F 01
  37+ 8910
  38+ 8910              ;---------------------------------------------------------------------------------------------------------------
  39+ 8910              ;
  40+ 8910              ;   21/5/23
  41+ 8910              ;
  42+ 8910              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8910              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8910              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8910              ;	_en la caja DRAW correspondiente.
  46+ 8910              ;
  47+ 8910              ;	MODIFICA: HL,DE y A.
  48+ 8910              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8910
  50+ 8910              Inicializa_Punteros_de_nivel
  51+ 8910
  52+ 8910 21 BC 88     	ld hl,Indice_de_niveles
  53+ 8913 22 3C 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8916 CD 35 8D     	call Extrae_address
  55+ 8919 7E           	ld a,(hl)
  56+ 891A 32 11 8A     	ld (Numero_de_entidades),a
  57+ 891D 23           	inc hl
  58+ 891E 22 3E 8A     	ld (Datos_de_nivel),hl
  59+ 8921 C9           	ret
  60+ 8922
  61+ 8922              ;---------------------------------------------------------------------------------------------------------------
  62+ 8922              ;
  63+ 8922              ;   13/5/23
  64+ 8922              ;
  65+ 8922              ;	Destruye A,BC,HL,DE
  66+ 8922
  67+ 8922              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8922              ;	_del juego.
  69+ 8922
  70+ 8922              Prepara_cajas
  71+ 8922
  72+ 8922              ; Preparamos los punteros de las cajas.
  73+ 8922
  74+ 8922 21 74 85     	ld hl,Indice_de_cajas
  75+ 8925 CD 35 8D     	call Extrae_address
  76+ 8928 CD 65 89     	call Avanza_caja
  77+ 892B
  78+ 892B CD A9 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 892E
  80+ 892E 2A 3E 8A     	ld hl,(Datos_de_nivel)
  81+ 8931
  82+ 8931              ; HL está en los datos del nivel correspondiente.
  83+ 8931              ; B actuará como contador de cajas.
  84+ 8931
  85+ 8931 C5           1 push bc
  86+ 8932
  87+ 8932 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8933 CD 56 89     	call PreparaBC
  89+ 8936
  90+ 8936 21 62 88     	ld hl,Indice_de_entidades
  91+ 8939 CD 5E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893C 22 17 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 893F
  94+ 893F CD 6F 89     	call Datos_de_entidad_a_caja
  95+ 8942
  96+ 8942 2A 0F 8A     	ld hl,(Indice_restore_caja)
  97+ 8945 CD 35 8D     	call Extrae_address
  98+ 8948 CD 65 89     	call Avanza_caja
  99+ 894B
 100+ 894B 2A 3E 8A     	ld hl,(Datos_de_nivel)
 101+ 894E 23           	inc hl
 102+ 894F 22 3E 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8952
 104+ 8952 C1           	pop bc
 105+ 8953 10 DC        	djnz 1B
 106+ 8955 C9           	ret
 107+ 8956
 108+ 8956 CB 27        PreparaBC sla a
 109+ 8958 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895A 4F           	ld c,a
 111+ 895B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 895D C9           	ret
 113+ 895E
 114+ 895E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 895F ED 4A        	adc hl,bc
 116+ 8961 CD 35 8D     	call Extrae_address
 117+ 8964 C9           	ret
 118+ 8965
 119+ 8965 22 0B 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8968 13           	inc de
 121+ 8969 13           	inc de
 122+ 896A EB           	ex de,hl
 123+ 896B 22 0F 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 896E C9           	ret
 125+ 896F
 126+ 896F              Datos_de_entidad_a_caja
 127+ 896F
 128+ 896F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 896F
 130+ 896F
 131+ 896F ED 5B 0B 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8973
 133+ 8973 01 02 00     	ld bc,2
 134+ 8976 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8978
 136+ 8978 01 07 00     	ld bc,7
 137+ 897B CD A3 89     	call Situa_DE
 138+ 897E
 139+ 897E 01 05 00     	ld bc,5
 140+ 8981 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8983
 142+ 8983 01 04 00     	ld bc,4
 143+ 8986 CD A3 89     	call Situa_DE
 144+ 8989
 145+ 8989 01 07 00     	ld bc,7
 146+ 898C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 898E
 148+ 898E 01 18 00     	ld bc,24
 149+ 8991 CD A3 89     	call Situa_DE
 150+ 8994
 151+ 8994 01 02 00     	ld bc,2
 152+ 8997 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8999
 154+ 8999              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8999              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8999
 157+ 8999 01 0E 00     	ld bc,14									; *****
 158+ 899C CD A3 89     	call Situa_DE
 159+ 899F
 160+ 899F 3E 03        	ld a,3
 161+ 89A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A2
 163+ 89A2 C9           	ret
 164+ 89A3
 165+ 89A3 EB           Situa_DE ex de,hl
 166+ 89A4 A7           	and a
 167+ 89A5 ED 4A        	adc hl,bc
 168+ 89A7 EB           	ex de,hl
 169+ 89A8 C9           	ret
 170+ 89A9
 171+ 89A9              ;---------------------------------------------------------------------------------------------------------------
 172+ 89A9              ;
 173+ 89A9              ;	21/5/23
 174+ 89A9              ;
 175+ 89A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89A9              ;
 178+ 89A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89A9              ;
 182+ 89A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89A9              ;	MODIFICA: A y B.
 184+ 89A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89A9
 186+ 89A9              Admin_num_entidades
 187+ 89A9
 188+ 89A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89A9
 190+ 89A9 3A 11 8A     	ld a,(Numero_de_entidades)
 191+ 89AC A7           	and a
 192+ 89AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89AD              ;	jr z,$
 194+ 89AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89AD
 196+ 89AD 20 03        	jr nz,3F
 197+ 89AF
 198+ 89AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89AF
 200+ 89AF CD 10 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B2
 202+ 89B2
 203+ 89B2 3A 11 8A     3 ld a,(Numero_de_entidades)
 204+ 89B5 FE 0A        	cp 10
 205+ 89B7 38 08        	jr c,1F
 206+ 89B9
 207+ 89B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89B9              ; Actualizamos variables.
 209+ 89B9
 210+ 89B9 3E 0A        	ld a,10
 211+ 89BB 32 12 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89BE 47           	ld b,a
 213+ 89BF 18 04        	jr 2F
 214+ 89C1
 215+ 89C1              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C1              ; (Numero_de_entidades)="0".
 217+ 89C1
 218+ 89C1 32 12 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C4 47           	ld b,a
 220+ 89C5 C9           2 ret
# file closed: Niveles.asm
  29  89C6
  30  89C6              ; ******************************************************************************************************************************************************************************************
  31  89C6              ; Constantes.
  32  89C6              ; ******************************************************************************************************************************************************************************************
  33  89C6              ;
  34  89C6              ; 25/05/23
  35  89C6              ;
  36  89C6              ; Constantes generales.
  37  89C6              ;
  38  89C6
  39  89C6              Sprite_vacio equ $f000
  40  89C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89C6
  45  89C6              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89C6              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89C6              ;                               				        ; De momento situamos este almacén en $7060.
  51  89C6
  52  89C6              ; ******************************************************************************************************************************************************************************************
  53  89C6              ; Variables.
  54  89C6              ; ******************************************************************************************************************************************************************************************
  55  89C6              ;
  56  89C6              ; 01/07/23
  57  89C6              ;
  58  89C6              ; Variables de DRAW. (Motor principal).
  59  89C6              ;
  60  89C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  61  89C6
  62  89C6 00           Filas db 0												; Filas. [DRAW]
  63  89C7 00           Columns db 0  											; Nº de columnas. [DRAW]
  64  89C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  65  89CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  66  89CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  67  89CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  68  89CE
  69  89CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  70  89CE
  71  89CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  72  89CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  73  89CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  74  89CF 00           Attr db 0												; Atributos de la entidad:
  75  89D0
  76  89D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  77  89D0              ;
  78  89D0              ;	COLORES: 0 ..... NEGRO
  79  89D0              ;    		 1 ..... AZUL
  80  89D0              ; 			 2 ..... ROJO
  81  89D0              ;			 3 ..... MAGENTA
  82  89D0              ; 			 4 ..... VERDE
  83  89D0              ; 			 5 ..... CIAN
  84  89D0              ;			 6 ..... AMARILLO
  85  89D0              ; 			 7 ..... BLANCO
  86  89D0
  87  89D0 00 00        Indice_Sprite_der defw 0
  88  89D2 00 00        Indice_Sprite_izq defw 0
  89  89D4 00 00        Puntero_DESPLZ_der defw 0
  90  89D6 00 00        Puntero_DESPLZ_izq defw 0
  91  89D8
  92  89D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  93  89DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  94  89DB
  95  89DB              ; Variables de objeto. (Características).
  96  89DB
  97  89DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  98  89DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  99  89DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 100  89DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 101  89DF
 102  89DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 103  89E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 104  89E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 105  89E0
 106  89E0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  89E2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  89E4 00 00        	defw 0
 109  89E6 00 00 00 00  	db 0,0,0,0
 110  89EA
 111  89EA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 112  89EC 00 00        	defw 0
 113  89EE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 114  89F0 00 00 00 00  	db 0,0,0,0
 115  89F4
 116  89F4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 117  89F4
 118  89F4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 119  89F5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 120  89F5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 121  89F5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 122  89F5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 123  89F5              ;
 124  89F5              ; 														DESCRIPCIÖN:
 125  89F5              ;
 126  89F5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 127  89F5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 128  89F5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 129  89F5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 130  89F5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 131  89F5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 132  89F5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 133  89F5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 134  89F5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 135  89F5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 136  89F5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 137  89F5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 138  89F5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 139  89F5              ;
 140  89F5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 141  89F5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 142  89F5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 143  89F5
 144  89F5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 145  89F6
 146  89F6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 147  89F6
 148  89F6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 149  89F7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 150  89F9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 151  89FB 00 00        Puntero_indice_mov_bucle defw 0							;
 152  89FD              ;
 153  89FD              ;
 154  89FD 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 155  89FE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 156  89FE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 157  89FE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 158  89FF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 159  89FF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 160  8A00 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 161  8A01 00           Cola_de_desplazamiento db 0								; Este byte indica:
 162  8A02              ;
 163  8A02              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 164  8A02              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 165  8A02              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 166  8A02              ;
 167  8A02              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 168  8A02              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 169  8A02              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 170  8A02              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 171  8A02              ;
 172  8A02              ;														;	"$ff" ..... Bucle infinito de repetición.
 173  8A02              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 174  8A02              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 175  8A02
 176  8A02
 177  8A02              ; Variables de funcionamiento. [DRAW].
 178  8A02
 179  8A02 00           Columnas db 0
 180  8A03 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 181  8A05              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 182  8A05 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 183  8A06
 184  8A06              ; variables de control general.
 185  8A06
 186  8A06 00           Ctrl_2 db 0
 187  8A07              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 188  8A07              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 189  8A07              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 190  8A07              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 191  8A07              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 192  8A07              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 193  8A07              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 194  8A07              ;
 195  8A07              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 196  8A07              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 197  8A07              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 198  8A07              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 199  8A07              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 200  8A07              ;!														BIT 4,xxx
 201  8A07
 202  8A07
 203  8A07 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 204  8A08
 205  8A08              ;! 66 Bytes por entidad.
 206  8A08
 207  8A08              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 208  8A08              ;					         		---------;      ;---------
 209  8A08
 210  8A08
 211  8A08              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 212  8A08
 213  8A08 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 214  8A09
 215  8A09              ;														DESCRIPCIÓN:
 216  8A09              ;
 217  8A09              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 218  8A09              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 219  8A09              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 220  8A09              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 221  8A09              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 222  8A09              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 223  8A09              ;														BIT 3, Recarga de nueva oleada.
 224  8A09              ;														BIT 4, Recarga de nueva oleada.
 225  8A09
 226  8A09 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 227  8A0B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 228  8A0B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 229  8A0B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 230  8A0B
 231  8A0B
 232  8A0B
 233  8A0B              ; Gestión de ENTIDADES y CAJAS.
 234  8A0B
 235  8A0B 00 00        Puntero_store_caja defw 0
 236  8A0D 00 00        Puntero_restore_caja defw 0
 237  8A0F 00 00        Indice_restore_caja defw 0
 238  8A11 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 239  8A12 00           Numero_parcial_de_entidades db 0
 240  8A13 00           Entidades_en_curso db 0									; ..... ..... .....
 241  8A14 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 242  8A15              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 243  8A15              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 244  8A15              ;														; _ (Numero_de_malotes)="0".
 245  8A15 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 246  8A17 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 247  8A19              ;														; _ puntero (Indice_entidades).
 248  8A19
 249  8A19
 250  8A19              ;---------------------------------------------------------------------------------------------------------------
 251  8A19              ;
 252  8A19              ; Sirven para PINTAR.
 253  8A19
 254  8A19 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 255  8A1B              ;														; _variable para almacenar lo posición del puntero_
 256  8A1B              ; 														; _de pila, SP.
 257  8A1B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 258  8A1D              ;														; La utiliza la rutina [Extrae_foto_registros].
 259  8A1D 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 260  8A1F              ;														; _el snapshot de los registros de la siguiente entidad.
 261  8A1F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 262  8A1F 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 263  8A21              ;														; _el snapshot de los registros del siguiente disparo.
 264  8A21              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 265  8A21
 266  8A21              ;---------------------------------------------------------------------------------------------------------------
 267  8A21
 268  8A21              ; Gestión de Disparos.
 269  8A21
 270  8A21 00           Numero_de_disparotes db 0
 271  8A22 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 272  8A24 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 273  8A26 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 274  8A27              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 275  8A27              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 276  8A27 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 277  8A29              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 278  8A29              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 279  8A29              ;														; _produzca colisión.
 280  8A29 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 281  8A2B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 282  8A2B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 283  8A2E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 284  8A2E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 285  8A31              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 286  8A31              ;---------------------------------------------------------------------------------------------------------------
 287  8A31
 288  8A31              ; Relojes y temporizaciones.
 289  8A31
 290  8A31 00           Contador_de_frames db 0
 291  8A32 04           Clock_explosion db 4
 292  8A33 1E           Clock_Entidades_en_curso db 30
 293  8A34 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 294  8A35              ;														; Repite la oleada de entidades.
 295  8A35 01           Habilita_disparo_Amadeus db 1
 296  8A36 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 297  8A37 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 298  8A38
 299  8A38 01           Habilita_disparo_entidad db 1
 300  8A39 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 301  8A3A 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 302  8A3B
 303  8A3B              ;---------------------------------------------------------------------------------------------------------------
 304  8A3B
 305  8A3B              ; Gestión de NIVELES.
 306  8A3B
 307  8A3B 00           Nivel db 0												; Nivel actual del juego.
 308  8A3C 00 00        Puntero_indice_NIVELES defw 0
 309  8A3E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 310  8A40              ; 														; _ que definen el NIVEL.
 311  8A40              ; Y todo comienza aquí .....
 312  8A40              ;
 313  8A40              ; Rutina principal *************************************************************************************************************************************************************************
 314  8A40              ;
 315  8A40              ;	14/11/22
 316  8A40
 317  8A40              START
 318  8A40
 319  8A40 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 320  8A43 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 321  8A45 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 322  8A47 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 323  8A49 F3           	DI
 324  8A4A
 325  8A4A 3E 07        	ld a,%00000111
 326  8A4C CD F1 98     	call Cls
 327  8A4F
 328  8A4F              ;	call Pinta_marco
 329  8A4F
 330  8A4F CD 10 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 331  8A52
 332  8A52 CD 0E 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 333  8A55
 334  8A55 CD 22 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 335  8A58
 336  8A58 CD E1 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 337  8A5B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 338  8A5B CD BE 8D     	call Restore_entidad
 339  8A5E
 340  8A5E 21 12 8A     	ld hl,Numero_parcial_de_entidades
 341  8A61 46           	ld b,(hl)
 342  8A62 04           	inc b
 343  8A63 05           	dec b
 344  8A64 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 345  8A66
 346  8A66              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 347  8A66              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 348  8A66              ;	Pintamos el resto de entidades:
 349  8A66
 350  8A66              ;	INICIA ENTIDADES !!!!!
 351  8A66
 352  8A66 C5           1 push bc  												; Guardo el contador de entidades.
 353  8A67
 354  8A67 CD D1 8A     	call Inicia_entidad
 355  8A6A
 356  8A6A C1           	pop bc
 357  8A6B 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 358  8A6D
 359  8A6D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 360  8A6D              ; (Esto se dá cuando se inicia una nueva oleada).
 361  8A6D
 362  8A6D 3A 08 8A     	ld a,(Ctrl_1)
 363  8A70 CB 5F        	bit 3,a
 364  8A72 20 18        	jr nz,5F											; Loop
 365  8A74
 366  8A74              ; 	INICIA AMADEUS !!!!!
 367  8A74
 368  8A74 CD E5 8D     3 call Restore_Amadeus
 369  8A77 CD 3B 8D     	call Inicia_Puntero_objeto
 370  8A7A CD 41 93     	call Draw
 371  8A7D CD A0 7F     	call Guarda_foto_registros
 372  8A80 11 8C 85     	ld de,Amadeus_db
 373  8A83 CD F7 8D     	call Store_Amadeus
 374  8A86
 375  8A86              ; 	INICIA DISPAROS !!!!!
 376  8A86
 377  8A86 CD F7 8C     	call Inicia_Puntero_Disparo_Entidades
 378  8A89 CD FE 8C     	call Inicia_Puntero_Disparo_Amadeus
 379  8A8C
 380  8A8C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 381  8A8C
 382  8A8C CD E1 8C     5 call Inicia_punteros_de_cajas
 383  8A8F CD BE 8D     	call Restore_entidad
 384  8A92
 385  8A92 3A 08 8A     	ld a,(Ctrl_1)
 386  8A95 CB 5F        	bit 3,a
 387  8A97 28 0A        	jr z,6F
 388  8A99
 389  8A99              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 390  8A99
 391  8A99 21 08 8A     	ld hl,Ctrl_1
 392  8A9C CB 9E        	res 3,(hl)
 393  8A9E CD 05 8D     	call Calcula_numero_de_malotes
 394  8AA1 18 07        	jr 7F
 395  8AA3
 396  8AA3              ; ----------
 397  8AA3
 398  8AA3 3A 12 8A     6 ld a,(Numero_parcial_de_entidades)
 399  8AA6 3C           	inc a
 400  8AA7 32 14 8A     	ld (Numero_de_malotes),a
 401  8AAA
 402  8AAA AF           7 xor a
 403  8AAB FB           2 ei
 404  8AAC 28 FD        	jr z,2B
 405  8AAE
 406  8AAE 3A 31 8A     	ld a,(Contador_de_frames)
 407  8AB1 47           	ld b,a
 408  8AB2 3A 34 8A     	ld a,(Activa_recarga_cajas)
 409  8AB5 B8           	cp b
 410  8AB6 28 08        	jr z,8F
 411  8AB8
 412  8AB8 21 08 8A     	ld hl,Ctrl_1
 413  8ABB CB E6        	set 4,(hl)
 414  8ABD AF           	xor a
 415  8ABE 18 EB        	jr 2B
 416  8AC0
 417  8AC0 21 08 8A     8 ld hl,Ctrl_1
 418  8AC3 CB A6        	res 4,(hl)
 419  8AC5 F3           	di
 420  8AC6
 421  8AC6 3A 31 8A     	ld a,(Contador_de_frames)
 422  8AC9
 423  8AC9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 424  8AC9              ;! _ IMPREDECIBLE !!!!
 425  8AC9
 426  8AC9 C6 0A        	add 10
 427  8ACB 32 33 8A     	ld (Clock_Entidades_en_curso),a
 428  8ACE
 429  8ACE C3 55 8A     	jp 4B
 430  8AD1
 431  8AD1              ; -----------------------------------------------------------------------------------
 432  8AD1
 433  8AD1 CD 3B 8D     Inicia_entidad	call Inicia_Puntero_objeto
 434  8AD4 CD 05 99     	call Recompone_posicion_inicio
 435  8AD7 CD 41 93     	call Draw
 436  8ADA CD A0 7F     	call Guarda_foto_registros
 437  8ADD CD 83 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 438  8AE0 C9           	ret
 439  8AE1
 440  8AE1              ; -----------------------------------------------------------------------------------
 441  8AE1
 442  8AE1              Frame
 443  8AE1
 444  8AE1              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 445  8AE1              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 446  8AE1
 447  8AE1              ; PINTAMOS.
 448  8AE1
 449  8AE1 3E 02            ld a,2
 450  8AE3 D3 FE            out ($fe),a
 451  8AE5 CD 45 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 452  8AE8 CD 7E 96     	call Extrae_foto_disparos
 453  8AEB 3E 01            ld a,1
 454  8AED D3 FE            out ($fe),a
 455  8AEF
 456  8AEF              ; ----------------------------------------------------------------------
 457  8AEF
 458  8AEF              ; RELOJES.
 459  8AEF
 460  8AEF 21 31 8A     	ld hl,Contador_de_frames
 461  8AF2 34           	inc (hl)											; 0 - 255
 462  8AF3
 463  8AF3 3A 33 8A     	ld a,(Clock_Entidades_en_curso)
 464  8AF6 47           	ld b,a
 465  8AF7 3A 31 8A     	ld a,(Contador_de_frames)
 466  8AFA B8           	cp b
 467  8AFB 20 18        	jr nz,13F
 468  8AFD
 469  8AFD 3A 12 8A     	ld a,(Numero_parcial_de_entidades)
 470  8B00 47           	ld b,a
 471  8B01 3A 13 8A     	ld a,(Entidades_en_curso)
 472  8B04 B8           	cp b
 473  8B05 28 0E        	jr z,13F
 474  8B07 30 0C        	jr nc,13F
 475  8B09
 476  8B09 3C           	inc a
 477  8B0A 32 13 8A     	ld (Entidades_en_curso),a
 478  8B0D
 479  8B0D 3A 33 8A     	ld a,(Clock_Entidades_en_curso)
 480  8B10
 481  8B10              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 482  8B10              ;! _ IMPREDECIBLE !!!!
 483  8B10
 484  8B10 C6 64        	add 100
 485  8B12 32 33 8A     	ld (Clock_Entidades_en_curso),a
 486  8B15
 487  8B15              ; Habilita disparos.
 488  8B15
 489  8B15 21 35 8A     13 ld hl,Habilita_disparo_Amadeus
 490  8B18 11 37 8A     	ld de,Temporiza_disparo_Amadeus
 491  8B1B CD 2C 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 492  8B1E
 493  8B1E 21 38 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 494  8B21 11 3A 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 495  8B24 CD 2C 9F     	call Habilita_disparos
 496  8B27
 497  8B27              ; COLISIONES.
 498  8B27
 499  8B27 CD 23 92     	call Selector_de_impactos
 500  8B2A
 501  8B2A              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 502  8B2A              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 503  8B2A              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 504  8B2A
 505  8B2A AF           	xor a
 506  8B2B 32 26 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 507  8B2E
 508  8B2E CD E1 8C     	call Inicia_punteros_de_cajas
 509  8B31 CD BE 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 510  8B34              ; 														; _ en DRAW.
 511  8B34 3A C6 89     	ld a,(Filas)
 512  8B37 A7           	and a
 513  8B38 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 514  8B3A CD D0 8D     	call Incrementa_punteros_de_cajas
 515  8B3D 18 F2        	jr 12B
 516  8B3F
 517  8B3F              ; ---------------------------------------------------------------------------------------
 518  8B3F
 519  8B3F CD 9E 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 520  8B42 21 00 70     	ld hl,Album_de_fotos
 521  8B45 22 1D 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 522  8B48              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 523  8B48 3A 12 8A     	ld a,(Numero_parcial_de_entidades)
 524  8B4B 47               ld b,a
 525  8B4C A7           	and a
 526  8B4D 20 14        	jr nz,2F
 527  8B4F
 528  8B4F 21 08 8A     	ld hl,Ctrl_1
 529  8B52 CB 66        	bit 4,(hl)
 530  8B54 C2 E0 8B     	jp nz,4F
 531  8B57
 532  8B57 21 08 8A     	ld hl,Ctrl_1
 533  8B5A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 534  8B5C
 535  8B5C 3A 31 8A     	ld a,(Contador_de_frames)
 536  8B5F 3C           	inc a
 537  8B60 32 34 8A     	ld (Activa_recarga_cajas),a
 538  8B63
 539  8B63              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 540  8B63
 541  8B63 3A 13 8A     2 ld a,(Entidades_en_curso)
 542  8B66 A7           	and a
 543  8B67 CA E0 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 544  8B6A 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 545  8B6B
 546  8B6B              ; Código que ejecutamos con cada entidad:
 547  8B6B
 548  8B6B
 549  8B6B C5           15 push bc 												; Nº de entidades en curso.
 550  8B6C
 551  8B6C              ; Impacto ???
 552  8B6C
 553  8B6C 3A DF 89     33 ld a,(Impacto)
 554  8B6F A7           	and a
 555  8B70 28 2D        	jr z,8F
 556  8B72
 557  8B72              ; Hay Impacto en esta entidad.
 558  8B72
 559  8B72 21 32 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 560  8B75 35           	dec (hl)
 561  8B76 20 62        	jr nz,6F
 562  8B78
 563  8B78              ;! Velocidad de la animación de la explosión.
 564  8B78
 565  8B78 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 566  8B7A              ;														; _,(velocidad de la explosión).
 567  8B7A CD 98 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 568  8B7D
 569  8B7D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 570  8B7D
 571  8B7D 3A 06 8A     	ld a,(Ctrl_2)
 572  8B80 CB 4F        	bit 1,a
 573  8B82 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 574  8B84
 575  8B84              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 576  8B84
 577  8B84 3A CE 89     	ld a,(CTRL_DESPLZ)
 578  8B87 A7           	and a
 579  8B88 20 08        	jr nz,21F
 580  8B8A
 581  8B8A 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 582  8B8D 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 583  8B90 18 06        	jr 22F
 584  8B92
 585  8B92 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 586  8B95 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 587  8B98
 588  8B98 21 06 8A     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 589  8B9B CB CE        	set 1,(hl)
 590  8B9D 18 22        	jr 7F
 591  8B9F
 592  8B9F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 593  8B9F              ; _con las coordenadas de la entidad almacenada en DRAW.
 594  8B9F
 595  8B9F 3A 08 8A     8 ld a,(Ctrl_1)
 596  8BA2 CB 57        	bit 2,a
 597  8BA4 28 1B        	jr z,7F
 598  8BA6
 599  8BA6 2A 29 8A     	ld hl,(Coordenadas_disparo_certero)
 600  8BA9 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 601  8BAA              ;														; E contiene la coordenada_X del disparo.
 602  8BAA 2A CC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 603  8BAD              ;														; H FILA, (Coordenada_y de la entidad).
 604  8BAD A7           	and a
 605  8BAE ED 52        	sbc hl,de
 606  8BB0
 607  8BB0 CD 5A 92     	call Determina_resultado_comparativa
 608  8BB3
 609  8BB3              ;! Debug colisiones
 610  8BB3 78           	ld a,b
 611  8BB4 A7           	and a
 612  8BB5              ;	ld a,(Cuad_objeto)
 613  8BB5              ;	inc b
 614  8BB5              ;	dec b
 615  8BB5 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 616  8BB7              ;	jr z,$
 617  8BB7
 618  8BB7              ;! Debug colisiones
 619  8BB7
 620  8BB7              ; ----- ----- -----
 621  8BB7
 622  8BB7 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 623  8BB9 32 DF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 624  8BBC
 625  8BBC 21 08 8A     	ld hl,Ctrl_1
 626  8BBF CB 96        	res 2,(hl)
 627  8BC1
 628  8BC1 CD 1A 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 629  8BC4
 630  8BC4 3A F4 89     	ld a,(Ctrl_0)
 631  8BC7 CB 67        	bit 4,a
 632  8BC9 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 633  8BCB
 634  8BCB              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 635  8BCB              ; [[[
 636  8BCB CD 59 8E     	call Detecta_disparo_entidad
 637  8BCE              ; ]]]
 638  8BCE CD A8 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 639  8BD1
 640  8BD1 21 F4 89     	ld hl,Ctrl_0
 641  8BD4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 642  8BD6 AF           	xor a
 643  8BD7 32 F5 89     	ld (Obj_dibujado),a
 644  8BDA
 645  8BDA
 646  8BDA
 647  8BDA CD 83 8D     6 call Store_Restore_cajas
 648  8BDD
 649  8BDD C1           	pop bc
 650  8BDE 10 8B        	djnz 15B
 651  8BE0
 652  8BE0              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 653  8BE0
 654  8BE0              ;	ld a,2
 655  8BE0              ;	ld (Limitador_de_entidades_x_frame),a
 656  8BE0
 657  8BE0              ; ------------------------------------
 658  8BE0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 659  8BE0              ; Hemos gestionado todas las unidades.
 660  8BE0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 661  8BE0
 662  8BE0              ;	ld hl,Ctrl_1
 663  8BE0              ;	res 2,(hl)
 664  8BE0
 665  8BE0              ; ------------------------------------
 666  8BE0
 667  8BE0              ; Tras la gestión de las entidades, ... AMADEUS.
 668  8BE0
 669  8BE0 CD E5 8D     4 call Restore_Amadeus
 670  8BE3
 671  8BE3 3A DF 89     	ld a,(Impacto)
 672  8BE6 A7           	and a
 673  8BE7 20 FE        	jr nz,$
 674  8BE9
 675  8BE9 CD 79 8C     	call Mov_Amadeus
 676  8BEC
 677  8BEC 3A 06 8A     	ld a,(Ctrl_2)
 678  8BEF CB 67        	bit 4,a
 679  8BF1 20 0A        	jr nz,3F
 680  8BF3
 681  8BF3 3A F4 89     	ld a,(Ctrl_0)
 682  8BF6 CB 67        	bit 4,a
 683  8BF8 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 684  8BFA
 685  8BFA CD A8 8C     	call Guarda_foto_entidad_a_pintar
 686  8BFD
 687  8BFD 21 F4 89     3 ld hl,Ctrl_0
 688  8C00 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 689  8C02 AF           	xor a
 690  8C03 32 F5 89     	ld (Obj_dibujado),a
 691  8C06
 692  8C06 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 693  8C09 CD F7 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 694  8C0C
 695  8C0C CD BC 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 696  8C0F
 697  8C0F              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 698  8C0F
 699  8C0F CD 1D 8D     	call Calcula_numero_de_disparotes
 700  8C12 CD 05 8D     9 call Calcula_numero_de_malotes
 701  8C15
 702  8C15 3E 04        	ld a,4
 703  8C17 D3 FE        	out ($fe),a
 704  8C19
 705  8C19 C9           	ret
 706  8C1A
 707  8C1A              ; --------------------------------------------------------------------------------------------------------------
 708  8C1A              ;
 709  8C1A              ;	27/05/23
 710  8C1A
 711  8C1A              Mov_obj
 712  8C1A
 713  8C1A              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 714  8C1A
 715  8C1A 3A 06 8A     	ld a,(Ctrl_2)
 716  8C1D CB 4F        	bit 1,a
 717  8C1F 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 718  8C21
 719  8C21              ; Explosión:
 720  8C21
 721  8C21 3A 07 8A     	ld a,(Frames_explosion)
 722  8C24 A7           	and a
 723  8C25 20 11        	jr nz,4F
 724  8C27
 725  8C27              ; Una alimaña menos!!!!!!!!!1
 726  8C27
 727  8C27 CD 00 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 728  8C2A 21 12 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 729  8C2D 35           	dec (hl)
 730  8C2E 21 13 8A     	ld hl,Entidades_en_curso
 731  8C31 35           	dec (hl)
 732  8C32 21 11 8A     	ld hl,Numero_de_entidades
 733  8C35 35           	dec (hl)
 734  8C36 18 40        	jr 3F
 735  8C38
 736  8C38              ; -----
 737  8C38
 738  8C38              ;	`Movemos´ la explosión.
 739  8C38
 740  8C38 2A D4 89     4 ld hl,(Puntero_DESPLZ_der)
 741  8C3B 23           	inc hl
 742  8C3C 23           	inc hl
 743  8C3D 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 744  8C40 CD 35 8D     	call Extrae_address
 745  8C43 22 CA 89     	ld (Puntero_objeto),hl
 746  8C46
 747  8C46 21 07 8A     	ld hl,Frames_explosion
 748  8C49 35           	dec (hl)
 749  8C4A
 750  8C4A CD 98 8C     	call Guarda_foto_entidad_a_borrar
 751  8C4D 18 29        	jr 3F
 752  8C4F
 753  8C4F AF           2 xor a
 754  8C50 32 F5 89     	ld (Obj_dibujado),a
 755  8C53 32 F4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 756  8C56              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 757  8C56              ; 														; _de la entidad.
 758  8C56 CD B2 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 759  8C59              ;														; Obj_dibujado="0".
 760  8C59              ; Movemos Entidades malignas.
 761  8C59
 762  8C59              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 763  8C59              ;	and a 												; _a movernos. (Limitador_de_entidades).
 764  8C59              ;	ret z
 765  8C59
 766  8C59 CD CF 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 767  8C5C
 768  8C5C 3A F4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 769  8C5F CB 67        	bit 4,a
 770  8C61 C8           	ret z
 771  8C62
 772  8C62              ; Ha habido desplazamiento de la entidad maligna.
 773  8C62              ; Ha llegado a zona de AMADEUS ???
 774  8C62
 775  8C62 3A CD 89     	ld a,(Coordenada_y)
 776  8C65 FE 14        	cp $14
 777  8C67 D4 ED 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 778  8C6A              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 779  8C6A              ; ---------
 780  8C6A
 781  8C6A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 782  8C6C 32 F5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 783  8C6F CD B2 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 784  8C72 CD C9 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 785  8C75 CD 98 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 786  8C78 C9           3 ret													; _de la misma.
 787  8C79
 788  8C79              ; --------------------------------------------------------------------------------------------------------------
 789  8C79              ;
 790  8C79              ;	29/1/23
 791  8C79
 792  8C79              Mov_Amadeus
 793  8C79
 794  8C79 AF           	xor a
 795  8C7A 32 F5 89     	ld (Obj_dibujado),a
 796  8C7D CD B2 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 797  8C80              ;														; Obj_dibujado="0".
 798  8C80              ; Movemos Amadeus.
 799  8C80
 800  8C80 CD 22 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 801  8C83 3A F4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 802  8C86 CB 67        	bit 4,a
 803  8C88 C8           	ret z
 804  8C89
 805  8C89              ; ---------
 806  8C89
 807  8C89 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 808  8C8B 32 F5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 809  8C8E CD B2 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 810  8C91 CD C9 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 811  8C94 CD 98 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 812  8C97 C9           	ret													; _de la nave.
 813  8C98
 814  8C98              ; --------------------------------------------------------------------------------------------------------------
 815  8C98              ;
 816  8C98              ;	31/01/23
 817  8C98              ;
 818  8C98              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 819  8C98
 820  8C98              Guarda_foto_entidad_a_borrar
 821  8C98
 822  8C98 CD 1B 96     	call Prepara_draw
 823  8C9B CD 55 95     	call calcula_CColumnass
 824  8C9E CD 8C 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 825  8CA1 CD E1 95     	call Define_rutina_de_impresion
 826  8CA4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 827  8CA7 C9           	ret
 828  8CA8
 829  8CA8              ; --------------------------------------------------------------------------------------------------------------
 830  8CA8              ;
 831  8CA8              ;	31/01/23
 832  8CA8              ;
 833  8CA8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 834  8CA8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 835  8CA8
 836  8CA8              Guarda_foto_entidad_a_pintar
 837  8CA8
 838  8CA8 CD D5 8C     	call Repone_pintar
 839  8CAB CD 41 93     	call Draw
 840  8CAE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 841  8CB1 C9           	ret
 842  8CB2
 843  8CB2              ; --------------------------------------------------------------------------------------------------------------
 844  8CB2              ;
 845  8CB2              ;
 846  8CB2
 847  8CB2 21 C6 89     Prepara_var_pintado_borrado	ld hl,Filas
 848  8CB5 3A F5 89     	ld a,(Obj_dibujado)
 849  8CB8 A7           	and a
 850  8CB9 28 05        	jr z,1F
 851  8CBB 11 EA 89     	ld de,Variables_de_pintado
 852  8CBE 18 03        	jr 2F
 853  8CC0 11 E0 89     1 ld de,Variables_de_borrado
 854  8CC3 01 08 00     2 ld bc,8
 855  8CC6 ED B0        	ldir
 856  8CC8 C9           	ret
 857  8CC9
 858  8CC9              ; --------------------------------------------------------------------------------------------------------------
 859  8CC9
 860  8CC9 21 E0 89     Repone_borrar ld hl,Variables_de_borrado
 861  8CCC 11 C6 89     	ld de,Filas
 862  8CCF 01 08 00     	ld bc,8
 863  8CD2 ED B0        	ldir
 864  8CD4 C9           	ret
 865  8CD5
 866  8CD5 21 EA 89     Repone_pintar ld hl,Variables_de_pintado
 867  8CD8 11 C6 89     	ld de,Filas
 868  8CDB 01 08 00     	ld bc,8
 869  8CDE ED B0        	ldir
 870  8CE0 C9           	ret
 871  8CE1
 872  8CE1              ; *************************************************************************************************************************************************************
 873  8CE1              ;
 874  8CE1              ; 8/1/23
 875  8CE1              ;
 876  8CE1              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 877  8CE1              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 878  8CE1              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 879  8CE1
 880  8CE1              ; Destruye HL y DE !!!!!
 881  8CE1
 882  8CE1              Inicia_punteros_de_cajas
 883  8CE1
 884  8CE1 21 74 85     	ld hl,Indice_de_cajas
 885  8CE4 CD 35 8D         call Extrae_address
 886  8CE7 22 0B 8A         ld (Puntero_store_caja),hl
 887  8CEA 21 76 85     	ld hl,Indice_de_cajas+2
 888  8CED 22 0F 8A     	ld (Indice_restore_caja),hl
 889  8CF0 CD 35 8D     	call Extrae_address
 890  8CF3 22 0D 8A     	ld (Puntero_restore_caja),hl
 891  8CF6 C9               ret
 892  8CF7
 893  8CF7              ; *************************************************************************************************************************************************************
 894  8CF7              ;
 895  8CF7              ; 8/1/23
 896  8CF7              ;
 897  8CF7              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 898  8CF7
 899  8CF7 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 900  8CFA 22 22 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 901  8CFD C9           	ret
 902  8CFE 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 903  8D01 22 24 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 904  8D04 C9           	ret
 905  8D05
 906  8D05              ; -------------------------------------------------------------------------------------------------------------
 907  8D05              ;
 908  8D05              ; 28/2/23
 909  8D05              ;
 910  8D05
 911  8D05              Calcula_numero_de_malotes
 912  8D05
 913  8D05 21 00 70     	ld hl,Album_de_fotos
 914  8D08 EB           	ex de,hl
 915  8D09 2A 1D 8A     	ld hl,(Stack_snapshot)
 916  8D0C
 917  8D0C 06 00        	ld b,0
 918  8D0E 7D           	ld a,l
 919  8D0F 93           	sub e
 920  8D10 28 07        	jr z,1F
 921  8D12
 922  8D12              ; Nº de malotes no es "0".
 923  8D12
 924  8D12 D6 06        2 sub 6
 925  8D14 04           	inc b
 926  8D15 A7           	and a
 927  8D16 20 FA        	jr nz,2B
 928  8D18 78           	ld a,b
 929  8D19
 930  8D19 32 14 8A     1 ld (Numero_de_malotes),a
 931  8D1C C9           	ret
 932  8D1D
 933  8D1D              ; -------------------------------------------------------------------------------------------------------------
 934  8D1D              ;
 935  8D1D              ; 28/2/23
 936  8D1D              ;
 937  8D1D
 938  8D1D              Calcula_numero_de_disparotes
 939  8D1D
 940  8D1D 21 85 70     	ld hl,Album_de_fotos_disparos
 941  8D20 EB           	ex de,hl
 942  8D21 2A 1F 8A     	ld hl,(Stack_snapshot_disparos)
 943  8D24
 944  8D24 06 00        	ld b,0
 945  8D26 7D           	ld a,l
 946  8D27 93           	sub e
 947  8D28 28 07        	jr z,1F
 948  8D2A
 949  8D2A              ; Nº de malotes no es "0".
 950  8D2A
 951  8D2A D6 06        2 sub 6
 952  8D2C 04           	inc b
 953  8D2D A7           	and a
 954  8D2E 20 FA        	jr nz,2B
 955  8D30 78           	ld a,b
 956  8D31
 957  8D31 32 21 8A     1 ld (Numero_de_disparotes),a
 958  8D34 C9           	ret
 959  8D35              ; *************************************************************************************************************************************************************
 960  8D35              ;
 961  8D35              ; 20/10/22
 962  8D35              ;
 963  8D35              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 964  8D35              ;
 965  8D35              ; Destruye el puntero y DE !!!!!
 966  8D35
 967  8D35 5E           Extrae_address ld e,(hl)
 968  8D36 23           	inc hl
 969  8D37 56           	ld d,(hl)
 970  8D38 2B           	dec hl
 971  8D39 EB           	ex de,hl
 972  8D3A C9           	ret
 973  8D3B
 974  8D3B              ; *************************************************************************************************************************************************************
 975  8D3B              ;
 976  8D3B              ;	7/2/23
 977  8D3B              ;
 978  8D3B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 979  8D3B              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 980  8D3B              ;
 981  8D3B              ;   Destruye HL y BC !!!!!,
 982  8D3B              ;
 983  8D3B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 984  8D3B              ;					"0" ..... Izquierda.
 985  8D3B
 986  8D3B              Inicia_Puntero_objeto
 987  8D3B
 988  8D3B 3A DA 89     	ld a,(Cuad_objeto)
 989  8D3E E6 01        	and 1
 990  8D40 F5           	push af
 991  8D41 CC 5F 8D     	call z,Inicia_puntero_objeto_izq
 992  8D44 F1           	pop af
 993  8D45 28 2B        	jr z,1F
 994  8D47 CD 4C 8D     	call Inicia_puntero_objeto_der
 995  8D4A 18 26        	jr 1F
 996  8D4C
 997  8D4C              ; Arrancamos desde la parte izquierda de la pantalla.
 998  8D4C              ; Iniciamos (Indice_Sprite_der).
 999  8D4C
1000  8D4C 2A D0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1001  8D4F 22 D4 89     	ld (Puntero_DESPLZ_der),hl
1002  8D52 CD 35 8D     	call Extrae_address
1003  8D55 22 CA 89     	ld (Puntero_objeto),hl
1004  8D58
1005  8D58 2A D2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1006  8D5B 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
1007  8D5E C9           	ret
1008  8D5F
1009  8D5F              ; Arrancamos desde la parte derecha de la pantalla.
1010  8D5F              ; Iniciamos (Indice_Sprite_izq).
1011  8D5F
1012  8D5F 2A D2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1013  8D62 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
1014  8D65 CD 35 8D     	call Extrae_address
1015  8D68 22 CA 89     	ld (Puntero_objeto),hl
1016  8D6B
1017  8D6B 2A D0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1018  8D6E 22 D4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1019  8D71 C9           	ret
1020  8D72
1021  8D72              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1022  8D72
1023  8D72 21 48 83     1 ld hl,Amadeus
1024  8D75 ED 4B CA 89  	ld bc,(Puntero_objeto)
1025  8D79 B7 ED 42     	sub hl,bc
1026  8D7C C0           	ret nz
1027  8D7D 21 F4 89     	ld hl,Ctrl_0
1028  8D80 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1029  8D82 C9           	ret 												; _de nuestra nave en los extremos.
1030  8D83
1031  8D83              ; *************************************************************************************************************************************************************
1032  8D83              ;
1033  8D83              ;	14/5/23
1034  8D83              ;
1035  8D83              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1036  8D83              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1037  8D83
1038  8D83              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1039  8D83              ;	_de la 2ª y 3ª entidad respectivamente.
1040  8D83
1041  8D83              Store_Restore_cajas
1042  8D83
1043  8D83 E5           	push hl
1044  8D84 D5           	push de
1045  8D85 C5            	push bc
1046  8D86
1047  8D86              ;	STORE !!!!!
1048  8D86              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1049  8D86
1050  8D86 21 C6 89     	ld hl,Filas
1051  8D89 ED 5B 0B 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1052  8D8D 01 42 00     	ld bc,66
1053  8D90 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1054  8D92
1055  8D92              ; 	Entidad_sospechosa. 20/4/23
1056  8D92
1057  8D92 3A DF 89     	ld a,(Impacto)
1058  8D95 A7           	and a
1059  8D96 28 0C        	jr z,1F
1060  8D98
1061  8D98 2A 0B 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1062  8D9B 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1063  8D9E A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1064  8D9F ED 4A        	adc hl,bc 											; _ "0" más adelante.
1065  8DA1 22 27 8A     	ld (Entidad_sospechosa_de_colision),hl
1066  8DA4
1067  8DA4              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1068  8DA4
1069  8DA4 2A 0D 8A     1 ld hl,(Puntero_restore_caja)
1070  8DA7 7E           	ld a,(hl)
1071  8DA8 A7           	and a
1072  8DA9 F5           	push af
1073  8DAA 28 08        	jr z,2F
1074  8DAC
1075  8DAC 11 C6 89     	ld de,Filas
1076  8DAF 01 42 00     	ld bc,66
1077  8DB2 ED B0        	ldir
1078  8DB4
1079  8DB4 CD D0 8D     2 call Incrementa_punteros_de_cajas
1080  8DB7 F1           	pop af
1081  8DB8 28 EA        	jr z,1B
1082  8DBA
1083  8DBA C1           	pop bc
1084  8DBB D1           	pop de
1085  8DBC E1           	pop hl
1086  8DBD
1087  8DBD C9           	ret
1088  8DBE
1089  8DBE              ; **************************************************************************************************
1090  8DBE              ;
1091  8DBE              ;	12/05/23
1092  8DBE              ;
1093  8DBE              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1094  8DBE
1095  8DBE E5           Restore_entidad push hl
1096  8DBF D5           	push de
1097  8DC0 C5            	push bc
1098  8DC1
1099  8DC1 2A 0B 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1100  8DC4 11 C6 89     	ld de,Filas
1101  8DC7 01 42 00     	ld bc,66
1102  8DCA ED B0        	ldir
1103  8DCC
1104  8DCC C1           	pop bc
1105  8DCD D1           	pop de
1106  8DCE E1           	pop hl
1107  8DCF C9           	ret
1108  8DD0
1109  8DD0
1110  8DD0              ; **************************************************************************************************
1111  8DD0              ;
1112  8DD0              ;	08/05/23
1113  8DD0              ;
1114  8DD0              ;	Incrementamos los dos punteros de entidades. (+1).
1115  8DD0
1116  8DD0 2A 0D 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1117  8DD3 22 0B 8A     	ld (Puntero_store_caja),hl
1118  8DD6 2A 0F 8A     	ld hl,(Indice_restore_caja)
1119  8DD9 23           	inc hl
1120  8DDA 23           	inc hl
1121  8DDB 22 0F 8A     	ld (Indice_restore_caja),hl
1122  8DDE CD 35 8D         call Extrae_address
1123  8DE1 22 0D 8A         ld (Puntero_restore_caja),hl
1124  8DE4 C9               ret
1125  8DE5
1126  8DE5              ; **************************************************************************************************
1127  8DE5              ;
1128  8DE5              ;	25/01/23
1129  8DE5              ;
1130  8DE5              ;	Restore_Amadeus
1131  8DE5              ;
1132  8DE5              ;	Cargamos en DRAW los parámetros de Amadeus.
1133  8DE5              ;
1134  8DE5
1135  8DE5 E5           Restore_Amadeus	push hl
1136  8DE6 D5           	push de
1137  8DE7 C5            	push bc
1138  8DE8 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1139  8DEB 11 C6 89     	ld de,Filas
1140  8DEE 01 42 00     	ld bc,66
1141  8DF1 ED B0        	ldir
1142  8DF3 C1           	pop bc
1143  8DF4 D1           	pop de
1144  8DF5 E1           	pop hl
1145  8DF6 C9           	ret
1146  8DF7
1147  8DF7              ; *************************************************************************************************************************************************************
1148  8DF7              ;
1149  8DF7              ;	29/04/23
1150  8DF7              ;
1151  8DF7              ;	Store_Amadeus
1152  8DF7              ;
1153  8DF7              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1154  8DF7              ;
1155  8DF7              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1156  8DF7              ;
1157  8DF7              ;	DESTRUYE: HL y BC y DE.
1158  8DF7
1159  8DF7 21 C6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1160  8DFA 01 42 00     	ld bc,66
1161  8DFD ED B0        	ldir
1162  8DFF C9           	ret
1163  8E00
1164  8E00              ; -----------------------------------------------------------
1165  8E00              ;
1166  8E00              ;	27/04/23
1167  8E00              ;
1168  8E00              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1169  8E00              ;
1170  8E00              ;	Destruye: HL,BC,DE,A
1171  8E00
1172  8E00 21 C6 89     Borra_datos_entidad ld hl,Filas
1173  8E03 01 41 00     	ld bc,65
1174  8E06 AF           	xor a
1175  8E07 77           	ld (hl),a
1176  8E08 11 C7 89     	ld de,Filas+1
1177  8E0B ED B0        	ldir
1178  8E0D C9           	ret
1179  8E0E
1180  8E0E              ; -----------------------------------------------------------
1181  8E0E
1182  8E0E              ; Teclado.
1183  8E0E
1184  8E0E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1185  8E10 DB FE        	in a,($fe)
1186  8E12 E6 01        	and $01
1187  8E14 28 02        	jr z,1f
1188  8E16 18 F6        	jr Pulsa_ENTER
1189  8E18 C9           1 ret
1190  8E19
1191  8E19              ; **************************************************************************************************
1192  8E19              ;
1193  8E19              ; Temporización.
1194  8E19
1195  8E19              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1196  8E19              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1197  8E19              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1198  8E19              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1199  8E19
1200  8E19              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1201  8E19              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1202  8E19              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1203  8E19
1204  8E19              ; A partir de $4f61 no hace falta DELAY.
1205  8E19
1206  8E19              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1207  8E19
1208  8E19 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1209  8E1C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1210  8E1D 78           	LD A,B
1211  8E1E A7           	AND A
1212  8E1F 20 FB        	JR NZ,wait
1213  8E21 C9           	RET
1214  8E22
1215  8E22              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1216  8E22              ;
1217  8E22              ;	5/3/23
1218  8E22              ;
1219  8E22              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1220  8E22
1221  8E22              Movimiento_Amadeus
1222  8E22
1223  8E22              ; Disparo.
1224  8E22
1225  8E22 3A 35 8A     	ld a,(Habilita_disparo_Amadeus)
1226  8E25 A7           	and a
1227  8E26 20 02        	jr nz,1F
1228  8E28 18 15        	jr 2F
1229  8E2A
1230  8E2A 3E F7        1 ld a,$f7													; "5" para disparar.
1231  8E2C DB FE        	in a,($fe)
1232  8E2E E6 10        	and $10
1233  8E30
1234  8E30 F5           	push af
1235  8E31 CC 69 8E     	call z,Genera_disparo
1236  8E34 F1           	pop af
1237  8E35 20 08        	jr nz,2F
1238  8E37
1239  8E37 3A 35 8A     	ld a,(Habilita_disparo_Amadeus)
1240  8E3A EE 01        	xor 1
1241  8E3C 32 35 8A     	ld (Habilita_disparo_Amadeus),a
1242  8E3F
1243  8E3F 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1244  8E41 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1245  8E43 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1246  8E45 CC BF 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1247  8E48 3E F7        	ld a,$f7
1248  8E4A DB FE        	in a,($fe)
1249  8E4C E6 01        	and $01
1250  8E4E C8           	ret z
1251  8E4F
1252  8E4F 3E F7        	ld a,$f7
1253  8E51 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1254  8E53 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1255  8E55 CC A1 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1256  8E58 C9           	ret
1257  8E59
1258  8E59              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1259  8E59              ;
1260  8E59              ;	Rutina provisional para que los malotes cagen balas.
1261  8E59
1262  8E59              Detecta_disparo_entidad
1263  8E59
1264  8E59 3A 38 8A     	ld a,(Habilita_disparo_entidad)
1265  8E5C A7           	and a
1266  8E5D C8           	ret z
1267  8E5E 3E 7F        	ld a,$7f
1268  8E60 DB FE        	in a,($fe)
1269  8E62 E6 01        	and 1
1270  8E64 C0           	ret nz
1271  8E65 CD 69 8E     	call Genera_disparo
1272  8E68 C9           	ret
1273  8E69
1274  8E69              ; ---------------------------------------------------------------
1275  8E69
1276  8E69              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E69              ; ******************************************************************************************************************************************************************************************
   2+ 8E69              ;
   3+ 8E69              ;   17/04/23
   4+ 8E69              ;
   5+ 8E69              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E69              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E69              ;
   8+ 8E69              ;
   9+ 8E69              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E69              ;
  11+ 8E69              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E69              ;               _ hacen las entidades hacia abajo.
  13+ 8E69              ;
  14+ 8E69              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E69              ;
  16+ 8E69              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E69              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E69              ;
  19+ 8E69              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E69              ;           _ la bala.
  21+ 8E69              ;
  22+ 8E69              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E69              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E69              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E69              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E69              ;           _ en el momento de generarse la bala)).
  27+ 8E69
  28+ 8E69              Genera_disparo
  29+ 8E69
  30+ 8E69              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E69              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E69              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E69              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E69              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E69              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E69              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E69
  38+ 8E69              ; Exclusiones:
  39+ 8E69
  40+ 8E69 3A 02 8A         ld a,(Columnas)
  41+ 8E6C 47               ld b,a
  42+ 8E6D 3A C7 89         ld a,(Columns)
  43+ 8E70 B8               cp b
  44+ 8E71 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E72
  46+ 8E72              ; ----- ----- -----
  47+ 8E72
  48+ 8E72 3A F4 89         ld a,(Ctrl_0)
  49+ 8E75 CB 77            bit 6,a
  50+ 8E77 20 06            jr nz,14F
  51+ 8E79
  52+ 8E79 3A CD 89         ld a,(Coordenada_y)
  53+ 8E7C FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E7E D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E7F
  56+ 8E7F 21 00 80     14 ld hl,Indice_disparo
  57+ 8E82 3A CE 89         ld a,(CTRL_DESPLZ)
  58+ 8E85 4F               ld c,a
  59+ 8E86 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E88              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E88              ;                                            ""        ""       "f9", B="1"
  62+ 8E88              ;                                            ""        ""       "fb", B="2"
  63+ 8E88              ;                                            ""        ""       "fb", B="3"
  64+ 8E88 A7               and a
  65+ 8E89 28 10            jr z,1F
  66+ 8E8B E6 01            and 1
  67+ 8E8D C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E8E
  69+ 8E8E 79               ld a,c
  70+ 8E8F 16 F9            ld d,$f9
  71+ 8E91 23           2 inc hl
  72+ 8E92 23               inc hl
  73+ 8E93 04               inc b
  74+ 8E94 BA               cp d
  75+ 8E95 28 04            jr z,1F
  76+ 8E97 14               inc d
  77+ 8E98 14               inc d
  78+ 8E99 18 F6            jr 2B
  79+ 8E9B
  80+ 8E9B CD 35 8D     1 call Extrae_address
  81+ 8E9E E5               push hl
  82+ 8E9F FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8EA1 DD 21 BA 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8EA5
  85+ 8EA5              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8EA5              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8EA5
  88+ 8EA5 3A F4 89         ld a,(Ctrl_0)
  89+ 8EA8 CB 77            bit 6,a
  90+ 8EAA 20 04            jr nz,19F
  91+ 8EAC
  92+ 8EAC AF               xor a
  93+ 8EAD 32 38 8A         ld (Habilita_disparo_entidad),a
  94+ 8EB0
  95+ 8EB0 3A DA 89     19 ld a,(Cuad_objeto)
  96+ 8EB3 FE 02            cp 2
  97+ 8EB5 38 66            jr c,3F
  98+ 8EB7 28 64            jr z,3F
  99+ 8EB9
 100+ 8EB9              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8EB9
 102+ 8EB9 E6 01            and 1
 103+ 8EBB 28 30            jr z,4F
 104+ 8EBD
 105+ 8EBD              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8EBD              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8EBD              ;
 108+ 8EBD              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8EBD              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8EBD              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8EBD
 112+ 8EBD 2A C8 89     	ld hl,(Posicion_actual)
 113+ 8EC0
 114+ 8EC0              ;   Amadeus o entidad ???.
 115+ 8EC0
 116+ 8EC0 3A F4 89         ld a,(Ctrl_0)
 117+ 8EC3 CB 77            bit 6,a
 118+ 8EC5 28 0A            jr z,8F
 119+ 8EC7
 120+ 8EC7              ; 	Dispara Amadeus.
 121+ 8EC7
 122+ 8EC7 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8EC9 CD 36 96         call PreviousScan
 124+ 8ECC CD 36 96         call PreviousScan
 125+ 8ECF
 126+ 8ECF              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8ECF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8ECF              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8ECF              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8ECF
 131+ 8ECF 18 11            jr 10F
 132+ 8ED1
 133+ 8ED1              ; 	Dispara Entidad.
 134+ 8ED1
 135+ 8ED1 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8ED4              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8ED4
 138+ 8ED4              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8ED4              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8ED4
 141+ 8ED4 C5               push bc
 142+ 8ED5 06 10            ld b,16
 143+ 8ED7 CD 27 96     9 call NextScan
 144+ 8EDA 10 FB            djnz 9B
 145+ 8EDC C1               pop bc
 146+ 8EDD CD 47 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EE0 18 06            jr 17F
 148+ 8EE2
 149+ 8EE2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EE2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EE2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EE2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EE2
 154+ 8EE2 CD 47 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EE5 CD BC 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EE8              ;                                                      ; _al generar el disparo.
 157+ 8EE8
 158+ 8EE8              ; 	LLegados a este punto tendremos:
 159+ 8EE8              ;
 160+ 8EE8              ;       Puntero_objeto_disparo en IY.
 161+ 8EE8              ;       Rutinas_de_impresion en IX.
 162+ 8EE8              ;       Puntero_de_impresion en HL.
 163+ 8EE8              ;       Impacto/Dirección en BC.
 164+ 8EE8
 165+ 8EE8 CD 4F 8F     17 call Almacena_disparo
 166+ 8EEB 18 52            jr 6F                                             ; RET.
 167+ 8EED
 168+ 8EED              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EED              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EED              ;
 171+ 8EED              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EED              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EED              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EED
 175+ 8EED 2A C8 89     4 ld hl,(Posicion_actual)
 176+ 8EF0
 177+ 8EF0              ;   Amadeus o entidad ???.
 178+ 8EF0
 179+ 8EF0 3A F4 89         ld a,(Ctrl_0)
 180+ 8EF3 CB 77            bit 6,a
 181+ 8EF5 28 0A            jr z,11F
 182+ 8EF7
 183+ 8EF7              ; 	Dispara Amadeus.
 184+ 8EF7
 185+ 8EF7 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EF9 CD 36 96         call PreviousScan
 187+ 8EFC CD 36 96         call PreviousScan
 188+ 8EFF
 189+ 8EFF              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EFF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EFF              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EFF              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EFF
 194+ 8EFF 18 11            jr 13F
 195+ 8F01
 196+ 8F01              ; 	Dispara Entidad.
 197+ 8F01
 198+ 8F01 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8F04              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8F04
 201+ 8F04              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8F04              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8F04
 204+ 8F04 C5               push bc
 205+ 8F05 06 10            ld b,16
 206+ 8F07 CD 27 96     12 call NextScan
 207+ 8F0A 10 FB            djnz 12B
 208+ 8F0C C1               pop bc
 209+ 8F0D
 210+ 8F0D CD 40 8F         call Ajusta_disparo_parte_derecha
 211+ 8F10 18 06            jr 18F
 212+ 8F12
 213+ 8F12              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8F12              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8F12              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8F12              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8F12
 218+ 8F12 CD 40 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8F15 CD BC 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8F18              ;                                                       ; _al generar el disparo.
 221+ 8F18
 222+ 8F18              ; LLegados a este punto tendremos:
 223+ 8F18              ;
 224+ 8F18              ;       Puntero_objeto_disparo en IY.
 225+ 8F18              ;       Rutinas_de_impresion en IX.
 226+ 8F18              ;       Puntero_de_impresion en HL.
 227+ 8F18              ;       Impacto/Dirección en BC.
 228+ 8F18
 229+ 8F18 CD 4F 8F     18 call Almacena_disparo
 230+ 8F1B 18 22            jr 6F                                               ; RET.
 231+ 8F1D
 232+ 8F1D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8F1D
 234+ 8F1D 28 11        3 jr z,5F
 235+ 8F1F
 236+ 8F1F              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8F1F              ;
 238+ 8F1F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8F1F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8F1F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8F1F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8F1F
 243+ 8F1F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8F1F              ;	   ""        ""       "f9", B="1"
 245+ 8F1F              ;	   ""        ""       "fb", B="2"
 246+ 8F1F              ; 	   ""        ""       "fb", B="3"
 247+ 8F1F
 248+ 8F1F 2A C8 89     	ld hl,(Posicion_actual)
 249+ 8F22 CD 27 96     	call NextScan
 250+ 8F25
 251+ 8F25              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8F25              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8F25              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8F25              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8F25
 256+ 8F25 CD 47 8F         call Ajusta_disparo_parte_izquierda
 257+ 8F28
 258+ 8F28              ; 	No se produce impacto. B="$80"
 259+ 8F28              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8F28
 261+ 8F28 01 80 80         ld bc,$8080
 262+ 8F2B
 263+ 8F2B              ; 	LLegados a este punto tendremos:
 264+ 8F2B              ;
 265+ 8F2B              ;       Puntero_objeto_disparo en IY.
 266+ 8F2B              ;       Rutinas_de_impresion en IX.
 267+ 8F2B              ;       Puntero_de_impresion en HL.
 268+ 8F2B              ;       Impacto/Dirección en BC.
 269+ 8F2B
 270+ 8F2B CD 4F 8F         call Almacena_disparo
 271+ 8F2E 18 0F            jr 6F                                           ; RET.
 272+ 8F30
 273+ 8F30              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F30              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F30              ;
 276+ 8F30              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F30              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F30              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F30              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F30
 281+ 8F30 2A C8 89     5 ld hl,(Posicion_actual)
 282+ 8F33 CD 27 96     	call NextScan
 283+ 8F36
 284+ 8F36              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F36              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F36              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F36              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F36
 289+ 8F36 CD 40 8F         call Ajusta_disparo_parte_derecha
 290+ 8F39
 291+ 8F39              ; 	No se produce impacto. B="$80"
 292+ 8F39              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F39
 294+ 8F39 01 80 80     15 ld bc,$8080
 295+ 8F3C
 296+ 8F3C              ; 	LLegados a este punto tendremos:
 297+ 8F3C              ;
 298+ 8F3C              ;       Puntero_objeto_disparo en IY.
 299+ 8F3C              ;       Rutinas_de_impresion en IX.
 300+ 8F3C              ;       Puntero_de_impresion en HL.
 301+ 8F3C              ;       Impacto/Dirección en BC.
 302+ 8F3C
 303+ 8F3C CD 4F 8F         call Almacena_disparo
 304+ 8F3F
 305+ 8F3F C9           6 ret
 306+ 8F40
 307+ 8F40              ; ----------------------------------------------------------------
 308+ 8F40              ;
 309+ 8F40              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F40              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F40              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F40
 313+ 8F40 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F41 FE 02            cp 2
 315+ 8F43 38 01            jr c,1F
 316+ 8F45 23               inc hl
 317+ 8F46 C9           1 ret
 318+ 8F47
 319+ 8F47 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F48 FE 01        	cp 1
 321+ 8F4A 20 01        	jr nz,1F
 322+ 8F4C 2B           	dec hl
 323+ 8F4D 2B           1 dec hl
 324+ 8F4E C9               ret
 325+ 8F4F
 326+ 8F4F              ; ----------------------------------------------------------------
 327+ 8F4F              ;
 328+ 8F4F              ;   25/02/23
 329+ 8F4F              ;
 330+ 8F4F              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F4F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F4F              ;
 333+ 8F4F              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F4F              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F4F
 336+ 8F4F              Almacena_disparo
 337+ 8F4F
 338+ 8F4F E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F50 F1               pop af
 340+ 8F51 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F52
 342+ 8F52 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F53 E6 01            and 1
 344+ 8F55 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F57              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F57              ; 	Dispara AMADEUS.
 347+ 8F57
 348+ 8F57              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F57              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F57              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F57              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F57
 353+ 8F57 C5               push bc
 354+ 8F58 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F5B 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F5E A7               and a
 357+ 8F5F ED 42            sbc hl,bc
 358+ 8F61 CC FE 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F64 C1               pop bc
 360+ 8F65 28 54            jr z,4F
 361+ 8F67
 362+ 8F67 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F6A 23               inc hl
 364+ 8F6B 23               inc hl
 365+ 8F6C 22 24 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F6F              ;                                                   ; _ Disparo_(+1).
 367+ 8F6F 18 18            jr 2F
 368+ 8F71
 369+ 8F71              ; Dispara una entidad.
 370+ 8F71
 371+ 8F71 C5           1 push bc
 372+ 8F72 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F75 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F78 A7               and a
 375+ 8F79 ED 42            sbc hl,bc
 376+ 8F7B CC F7 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F7E C1               pop bc
 378+ 8F7F 28 3A            jr z,4F
 379+ 8F81
 380+ 8F81 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F84 23               inc hl
 382+ 8F85 23               inc hl
 383+ 8F86 22 22 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F89              ;                                                   ; _ Disparo_(+1).
 385+ 8F89 CD 35 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F8C              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F8C              ;
 388+ 8F8C              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F8C              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F8C              ;                                                     Puntero_de_impresion en HL.
 391+ 8F8C              ;                                                     Impacto/Dirección en BC.
 392+ 8F8C
 393+ 8F8C 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F8D 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F8E 23               inc hl                                          ; _ al siguiente.
 396+ 8F8F A7               and a
 397+ 8F90 20 C0            jr nz,3B
 398+ 8F92
 399+ 8F92 08               ex af,af
 400+ 8F93 ED 73 19 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F97 F9               ld sp,hl
 402+ 8F98
 403+ 8F98 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F9A F5               push af                                         ; Puntero de impresión.
 405+ 8F9B FD E5            push iy                                         ; Puntero objeto.
 406+ 8F9D C5               push bc                                         ; Control.
 407+ 8F9E
 408+ 8F9E ED 7B 19 8A      ld sp,(Stack)
 409+ 8FA2
 410+ 8FA2              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8FA2
 412+ 8FA2 21 08 8A     	ld hl,Ctrl_1
 413+ 8FA5 CB C6        	set 0,(hl)
 414+ 8FA7
 415+ 8FA7 DD E5        	push ix
 416+ 8FA9 E1               pop hl
 417+ 8FAA F5               push af
 418+ 8FAB DD E1            pop ix
 419+ 8FAD
 420+ 8FAD CD A0 7F     	call Guarda_foto_registros
 421+ 8FB0
 422+ 8FB0 21 08 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8FB3 CB 86        	res 0,(hl)
 424+ 8FB5
 425+ 8FB5              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8FB5              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8FB5
 428+ 8FB5 CD FE 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8FB8 CD F7 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8FBB
 431+ 8FBB C9           4 ret
 432+ 8FBC
 433+ 8FBC              ; ----------------------------------------------------------------
 434+ 8FBC              ;
 435+ 8FBC              ;   4/3/23
 436+ 8FBC              ;
 437+ 8FBC              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8FBC              ;   _ al generarse el disparo.
 439+ 8FBC              ;
 440+ 8FBC              ;       "$80" ..... No se produce colisión.
 441+ 8FBC              ;       "$81" ..... Se produce colisión.
 442+ 8FBC
 443+ 8FBC              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8FBC              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8FBC
 446+ 8FBC
 447+ 8FBC FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8FBE E5               push hl                                        ; Puntero de impresión.
 449+ 8FBF
 450+ 8FBF 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8FC1 CD DD 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8FC4
 453+ 8FC4 7B               ld a,e
 454+ 8FC5 E6 01            and 1
 455+ 8FC7 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8FC9
 457+ 8FC9 E1               pop hl
 458+ 8FCA E5               push hl
 459+ 8FCB CD 27 96         call NextScan
 460+ 8FCE
 461+ 8FCE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FCF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FD1 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FD3              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FD3 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FD5 CD DD 8F         call Bucle_2
 467+ 8FD8
 468+ 8FD8 43           2 ld b,e
 469+ 8FD9 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FDA FD E1            pop iy
 471+ 8FDC C9               ret
 472+ 8FDD
 473+ 8FDD               ; ---------- ----------
 474+ 8FDD
 475+ 8FDD 06 02        Bucle_2 ld b,2
 476+ 8FDF FD 7E 00     2 ld a,(iy)
 477+ 8FE2 A6               and (hl)
 478+ 8FE3 28 02            jr z,1F
 479+ 8FE5 1E 81            ld e,$81
 480+ 8FE7 23           1 inc hl
 481+ 8FE8 FD 23            inc iy
 482+ 8FEA 10 F3            djnz 2B
 483+ 8FEC C9               ret
 484+ 8FED
 485+ 8FED              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FED              ;
 487+ 8FED              ;   11/04/23
 488+ 8FED              ;
 489+ 8FED              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FED              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FED              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FED              ;
 493+ 8FED              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FED
 495+ 8FED              Compara_coordenadas_X
 496+ 8FED
 497+ 8FED              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FED              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FED
 500+ 8FED              ; Preparamos registros:
 501+ 8FED
 502+ 8FED 21 CC 89         ld hl,Filas+6
 503+ 8FF0 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FF1 23               inc hl
 505+ 8FF2 23               inc hl
 506+ 8FF3 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FF4 43               ld b,e
 508+ 8FF5
 509+ 8FF5 21 DA 89         ld hl,Filas+20
 510+ 8FF8 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 511+ 8FF9 21 2E 8A         ld hl,Coordenadas_X_Entidad
 512+ 8FFC CD 10 92         call Guarda_coordenadas_X
 513+ 8FFF
 514+ 8FFF              ; Preparamos registros:
 515+ 8FFF
 516+ 8FFF 21 92 85         ld hl,Amadeus_db+6
 517+ 9002 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 518+ 9003 23               inc hl
 519+ 9004 23               inc hl
 520+ 9005 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 521+ 9006 7B               ld a,e
 522+ 9007 08               ex af,af'
 523+ 9008 21 A0 85         ld hl,Amadeus_db+20
 524+ 900B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 525+ 900C 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 526+ 900F CD 10 92         call Guarda_coordenadas_X
 527+ 9012
 528+ 9012              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 529+ 9012              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 530+ 9012
 531+ 9012 04               inc b
 532+ 9013 05               dec b
 533+ 9014 28 04            jr z,1F
 534+ 9016 06 03            ld b,3
 535+ 9018 18 02            jr 2F
 536+ 901A 06 02        1 ld b,2
 537+ 901C 08           2 ex af,af'
 538+ 901D 3C               inc a
 539+ 901E 3D               dec a
 540+ 901F 28 04            jr z,5F
 541+ 9021 0E 03            ld c,3
 542+ 9023 18 02            jr 6F
 543+ 9025 0E 02        5 ld c,2
 544+ 9027 79           6 ld a,c
 545+ 9028 08               ex af,af'
 546+ 9029 11 2E 8A         ld de,Coordenadas_X_Entidad
 547+ 902C 1A           4 ld a,(de)
 548+ 902D 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 549+ 9030 BE           3 cp (hl)
 550+ 9031 28 0E            jr z,7F
 551+ 9033 23               inc hl
 552+ 9034 0D               dec c
 553+ 9035 20 F9            jr nz,3B
 554+ 9037 13               inc de
 555+ 9038 08               ex af,af'
 556+ 9039 4F               ld c,a
 557+ 903A 08               ex af,af'
 558+ 903B 10 EF            djnz 4B
 559+ 903D
 560+ 903D              ; Limpiamos los almacenes de coordenadas y salimos.
 561+ 903D
 562+ 903D CD 4F 92     8 call Limpia_Coordenadas_X
 563+ 9040 C9               ret
 564+ 9041
 565+ 9041 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9043 32 DF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9046 21 26 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 9049 CB D6            set 2,(hl)
 569+ 904B 18 F0            jr 8B
 570+ 904D
 571+ 904D              ; -----------------------------------------------------------------------
 572+ 904D              ;
 573+ 904D              ;   17/04/23
 574+ 904D              ;
 575+ 904D
 576+ 904D              Detecta_colision_nave_entidad
 577+ 904D
 578+ 904D              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 904D
 580+ 904D 2A C8 89         ld hl,(Posicion_actual)
 581+ 9050 CD 8C 95         call Calcula_puntero_de_impresion
 582+ 9053
 583+ 9053              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9053              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9053
 586+ 9053 DD E5            push ix
 587+ 9055 E1               pop hl
 588+ 9056 E5               push hl
 589+ 9057
 590+ 9057              ; ----- ----- -----
 591+ 9057 1E 00            ld e,0                                         ; Indica impacto.
 592+ 9059 06 0A            ld b,10
 593+ 905B CD 8B 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 905E 7B               ld a,e
 595+ 905F FE 05            cp 5
 596+ 9061 38 0E            jr c,3F
 597+ 9063
 598+ 9063              ; LLegados a este punto:
 599+ 9063              ;
 600+ 9063              ;   HAY COLISIÓN !!!!!.
 601+ 9063              ;
 602+ 9063              ;   .db (Impacto) de Amadeus a "1".
 603+ 9063              ;   SET el bit3 de (Impacto2).
 604+ 9063              ;
 605+ 9063              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9063
 607+ 9063 21 A5 85         ld hl,Amadeus_db+25
 608+ 9066 36 01            ld (hl),1
 609+ 9068 21 26 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 906B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 906D CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 906F 18 18            jr 1F
 613+ 9071
 614+ 9071              ; -----
 615+ 9071
 616+ 9071 E1           3 pop hl
 617+ 9072 CD 27 96         call NextScan
 618+ 9075 E5               push hl
 619+ 9076 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9077 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 9079 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 907B 30 0C            jr nc,1F
 623+ 907D              ;                                                  ; _ 2º scanline si esto es así.
 624+ 907D 10 DC            djnz 2B
 625+ 907F
 626+ 907F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 907F
 628+ 907F              ; LLegados a este punto:
 629+ 907F              ;
 630+ 907F              ;   NO HAY COLISIÓN !!!!!.
 631+ 907F              ;
 632+ 907F              ;   .db (Impacto) de Amadeus a "0".
 633+ 907F              ;   RES el bit2 de (Impacto2).
 634+ 907F              ;
 635+ 907F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 907F              ;   Lo colocamos a "0".
 637+ 907F
 638+ 907F 21 26 8A         ld hl,Impacto2
 639+ 9082 CB 96            res 2,(hl)
 640+ 9084 2A 27 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9087 36 00            ld (hl),0
 642+ 9089
 643+ 9089 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 908A C9               ret
 645+ 908B
 646+ 908B               ; ---------- ----------
 647+ 908B
 648+ 908B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 908C 3A C7 89         ld a,(Columns)
 650+ 908F 47               ld b,a
 651+ 9090 FD 7E 00     2 ld a,(iy)
 652+ 9093 BE               cp (hl)
 653+ 9094 28 01            jr z,1F
 654+ 9096
 655+ 9096 1C               inc e
 656+ 9097
 657+ 9097 23           1 inc hl
 658+ 9098 FD 23            inc iy
 659+ 909A 10 F4            djnz 2B
 660+ 909C C1               pop bc
 661+ 909D C9               ret
 662+ 909E
 663+ 909E              ; -------------------------------------------------------------------------------------------------------------
 664+ 909E              ;
 665+ 909E              ;   13/03/23
 666+ 909E              ;
 667+ 909E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 909E              ;
 669+ 909E              ;   DESTRUYE: HL,BC,DE y A.
 670+ 909E
 671+ 909E 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 90A1 7E               ld a,(hl)
 673+ 90A2 A7               and a
 674+ 90A3 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 90A4
 676+ 90A4 44               ld b,h
 677+ 90A5 4D               ld c,l
 678+ 90A6 2A 1F 8A         ld hl,(Stack_snapshot_disparos)
 679+ 90A9 E5               push hl
 680+ 90AA A7               and a
 681+ 90AB ED 42            sbc hl,bc
 682+ 90AD E5               push hl
 683+ 90AE C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 90AF
 685+ 90AF E1               pop hl
 686+ 90B0 54               ld d,h
 687+ 90B1 5D               ld e,l
 688+ 90B2 1B               dec de
 689+ 90B3 ED B8            lddr                                                ; Limpiamos.
 690+ 90B5
 691+ 90B5 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 90B8 22 1F 8A         ld (Stack_snapshot_disparos),hl
 693+ 90BB
 694+ 90BB C9               ret
 695+ 90BC
 696+ 90BC              ; -------------------------------------------------------------------------------------------------------------
 697+ 90BC              ;
 698+ 90BC              ;   28/03/23
 699+ 90BC              ;
 700+ 90BC
 701+ 90BC 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 90BF 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 90C2
 704+ 90C2 CD 35 8D     2 call Extrae_address
 705+ 90C5 7E               ld a,(hl)
 706+ 90C6 A7               and a
 707+ 90C7 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 90C9
 709+ 90C9              ; ----- ----- ----- ----- ----- -----
 710+ 90C9
 711+ 90C9 C5               push bc
 712+ 90CA CD 86 91         call foto_disparo_a_borrar
 713+ 90CD
 714+ 90CD              ; Existe colisión con este disparo???
 715+ 90CD
 716+ 90CD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 90CE 7E               ld a,(hl)
 718+ 90CF 2B               dec hl
 719+ 90D0 E6 01            and 1
 720+ 90D2 28 1D            jr z,9F
 721+ 90D4
 722+ 90D4              ;   En este punto:
 723+ 90D4              ;
 724+ 90D4              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90D4              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90D4              ;   _con la entidad).
 727+ 90D4              ;
 728+ 90D4              ;   Disparo_2A defw 0                                ; Control.
 729+ 90D4              ;    defw 0                                          ; Puntero objeto.
 730+ 90D4              ;    defw 0                                          ; Puntero de impresión.
 731+ 90D4              ;    defw 0                                          ; Rutina de impresión.
 732+ 90D4
 733+ 90D4 E5               push hl
 734+ 90D5
 735+ 90D5 06 04            ld b,4
 736+ 90D7 23           19 inc hl
 737+ 90D8 10 FD            djnz 19B
 738+ 90DA
 739+ 90DA CD 35 8D         call Extrae_address
 740+ 90DD CD A5 9C         call Genera_coordenadas_disparo
 741+ 90E0
 742+ 90E0              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90E0
 744+ 90E0 21 29 8A         ld hl,Coordenadas_disparo_certero
 745+ 90E3 72               ld (hl),d
 746+ 90E4 23               inc hl
 747+ 90E5 73               ld (hl),e
 748+ 90E6
 749+ 90E6              ; Elimino el disparo de la base de datos.
 750+ 90E6
 751+ 90E6 E1               pop hl
 752+ 90E7 CD 05 92         call Elimina_disparo_de_base_de_datos
 753+ 90EA 21 26 8A         ld hl,Impacto2
 754+ 90ED CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90EF
 756+ 90EF 18 06            jr 11F
 757+ 90F1
 758+ 90F1 CD AF 91     9 call Mueve_disparo
 759+ 90F4 CD 86 91         call foto_disparo_a_borrar
 760+ 90F7
 761+ 90F7 C1           11 pop bc
 762+ 90F8 18 04            jr 7F
 763+ 90FA
 764+ 90FA              ; ----- ----- ----- ----- ----- -----
 765+ 90FA
 766+ 90FA ED 42        1 sbc hl,bc
 767+ 90FC 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90FE 2A 24 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 9101 23               inc hl
 770+ 9102 23               inc hl
 771+ 9103 22 24 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 9106 18 BA            jr 2B
 773+ 9108 CD FE 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 910B
 775+ 910B 01 72 85         ld bc,Disparo_11
 776+ 910E 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 9111
 778+ 9111 CD 35 8D     5 call Extrae_address
 779+ 9114 7E               ld a,(hl)
 780+ 9115 A7               and a
 781+ 9116 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 9118
 783+ 9118              ; ----- ----- ----- ----- ----- -----
 784+ 9118
 785+ 9118 C5               push bc
 786+ 9119 CD 86 91         call foto_disparo_a_borrar
 787+ 911C
 788+ 911C              ; Existe colisión con este disparo???
 789+ 911C
 790+ 911C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 911D 7E               ld a,(hl)
 792+ 911E 2B               dec hl
 793+ 911F E6 01            and 1
 794+ 9121 28 48            jr z,10F
 795+ 9123
 796+ 9123              ; La colisión se produce con Amadeus???
 797+ 9123              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 9123
 799+ 9123 E5               push hl
 800+ 9124
 801+ 9124 06 04            ld b,4
 802+ 9126 23           16 inc hl
 803+ 9127 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 9129 CD 35 8D         call Extrae_address
 805+ 912C CD A5 9C         call Genera_coordenadas_disparo
 806+ 912F
 807+ 912F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 9130 FE 16            cp $16
 809+ 9132 38 22            jr c,15F
 810+ 9134
 811+ 9134              ; (Colisiones en filas 16 y 17).
 812+ 9134
 813+ 9134 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9135
 815+ 9135              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9135
 817+ 9135 21 92 85         ld hl,Amadeus_db+6
 818+ 9138 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 9139 23               inc hl
 820+ 913A 23               inc hl
 821+ 913B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 913C 21 A0 85         ld hl,Amadeus_db+20
 823+ 913F 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9140 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 825+ 9143 CD 10 92         call Guarda_coordenadas_X
 826+ 9146
 827+ 9146 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9147
 829+ 9147              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9147
 831+ 9147 06 03            ld b,3
 832+ 9149 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 833+ 914C 7E           18 ld a,(hl)
 834+ 914D BA               cp d
 835+ 914E 20 03            jr nz,17F
 836+ 9150
 837+ 9150              ; Colisión Amadeus !!!!!!!!!!
 838+ 9150
 839+ 9150 E1               pop hl
 840+ 9151 18 09            jr 14F
 841+ 9153
 842+ 9153 23           17 inc hl
 843+ 9154 10 F6            djnz 18B
 844+ 9156
 845+ 9156              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9156              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9156
 848+ 9156 E1           15 pop hl
 849+ 9157 23               inc hl
 850+ 9158 35               dec (hl)
 851+ 9159 2B               dec hl
 852+ 915A 18 0F            jr 10F
 853+ 915C
 854+ 915C              ; -----------------------debug
 855+ 915C
 856+ 915C              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 915C              ; _ almacén de coordenadas_X de Amadeus.
 858+ 915C
 859+ 915C E5           14 push hl
 860+ 915D CD 05 92         call Elimina_disparo_de_base_de_datos
 861+ 9160 21 26 8A         ld hl,Impacto2
 862+ 9163 CB CE            set 1,(hl)
 863+ 9165 CD 4F 92         call Limpia_Coordenadas_X
 864+ 9168
 865+ 9168 E1               pop hl
 866+ 9169 18 06            jr 12F
 867+ 916B
 868+ 916B CD AF 91     10 call Mueve_disparo
 869+ 916E CD 86 91         call foto_disparo_a_borrar
 870+ 9171 C1           12 pop bc
 871+ 9172
 872+ 9172 18 04            jr 8F
 873+ 9174
 874+ 9174              ; ----- ----- ----- ----- ----- -----
 875+ 9174
 876+ 9174 ED 42        4 sbc hl,bc
 877+ 9176 28 0A            jr z,6F
 878+ 9178
 879+ 9178 2A 22 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 917B 23               inc hl
 881+ 917C 23               inc hl
 882+ 917D 22 22 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9180 18 8F            jr 5B
 884+ 9182
 885+ 9182 CD F7 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9185 C9               ret
 887+ 9186
 888+ 9186              ; ------------------------------------------------------------------
 889+ 9186
 890+ 9186              foto_disparo_a_borrar
 891+ 9186
 892+ 9186 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9187 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9188 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9189
 896+ 9189 E5               push hl
 897+ 918A 23               inc hl
 898+ 918B 23               inc hl
 899+ 918C ED 73 19 8A      ld (Stack),sp
 900+ 9190 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9191 FD E1            pop iy
 902+ 9193 DD E1            pop ix
 903+ 9195 E1               pop hl
 904+ 9196 ED 7B 19 8A      ld sp,(Stack)
 905+ 919A 3A 08 8A         ld a,(Ctrl_1)
 906+ 919D CB C7            set 0,a
 907+ 919F 32 08 8A         ld (Ctrl_1),a
 908+ 91A2 CD A0 7F         call Guarda_foto_registros
 909+ 91A5 3A 08 8A         ld a,(Ctrl_1)
 910+ 91A8 CB 87            res 0,a
 911+ 91AA 32 08 8A         ld (Ctrl_1),a
 912+ 91AD E1               pop hl
 913+ 91AE C9               ret
 914+ 91AF
 915+ 91AF E5           Mueve_disparo push hl
 916+ 91B0 7E               ld a,(hl)
 917+ 91B1 06 04            ld b,4
 918+ 91B3 23           1 inc hl
 919+ 91B4 10 FD            djnz 1B
 920+ 91B6
 921+ 91B6              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 91B6
 923+ 91B6 CD 35 8D         call Extrae_address
 924+ 91B9
 925+ 91B9 E6 01            and 1
 926+ 91BB 28 2E            jr z,2F
 927+ 91BD
 928+ 91BD              ; Disparo hacia arriba, (Amadeus).
 929+ 91BD
 930+ 91BD              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 91BD              ; _ de la dificultad.
 932+ 91BD
 933+ 91BD CD 36 96         call PreviousScan
 934+ 91C0 CD 36 96         call PreviousScan
 935+ 91C3 CD 36 96         call PreviousScan
 936+ 91C6 CD 36 96         call PreviousScan
 937+ 91C9
 938+ 91C9              ; Detecta si el disparo de Amadeus sale de pantalla:
 939+ 91C9
 940+ 91C9 7C               ld a,h
 941+ 91CA FE 40            cp $40
 942+ 91CC 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 943+ 91CE
 944+ 91CE              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 945+ 91CE
 946+ 91CE EB               ex de,hl
 947+ 91CF 06 04            ld b,4
 948+ 91D1 2B           6 dec hl
 949+ 91D2 10 FD            djnz 6B
 950+ 91D4
 951+ 91D4 CD 05 92         call Elimina_disparo_de_base_de_datos
 952+ 91D7 E1               pop hl
 953+ 91D8 18 10            jr 7F
 954+ 91DA
 955+ 91DA              ; Se ha desplazado la bala, compruebo colisión.
 956+ 91DA
 957+ 91DA D5           3 push de
 958+ 91DB C5               push bc
 959+ 91DC
 960+ 91DC CD BC 8F         call Comprueba_Colision
 961+ 91DF
 962+ 91DF              ; B="$80", no hay colisión. B="$81", existe colisión.
 963+ 91DF
 964+ 91DF 78               ld a,b
 965+ 91E0
 966+ 91E0 C1               pop bc
 967+ 91E1 D1               pop de
 968+ 91E2
 969+ 91E2 EB               ex de,hl
 970+ 91E3
 971+ 91E3 73               ld (hl),e
 972+ 91E4 23               inc hl
 973+ 91E5 72               ld (hl),d
 974+ 91E6
 975+ 91E6 E1           4 pop hl
 976+ 91E7 23               inc hl
 977+ 91E8 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 978+ 91E9 2B               dec hl
 979+ 91EA C9           7 ret
 980+ 91EB
 981+ 91EB              ; Disparo hacia abajo, (Entidad).
 982+ 91EB
 983+ 91EB              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 984+ 91EB              ;! _ de la dificultad.
 985+ 91EB
 986+ 91EB CD 27 96     2 call NextScan
 987+ 91EE CD 27 96         call NextScan
 988+ 91F1 CD 27 96         call NextScan
 989+ 91F4              ;    call NextScan
 990+ 91F4
 991+ 91F4              ; Detecta si el disparo de la entidad sale de la pantalla.
 992+ 91F4
 993+ 91F4 7C               ld a,h
 994+ 91F5 FE 58            cp $58
 995+ 91F7 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 996+ 91F9
 997+ 91F9 EB               ex de,hl
 998+ 91FA 06 04            ld b,4
 999+ 91FC 2B           5 dec hl
1000+ 91FD 10 FD            djnz 5B
1001+ 91FF
1002+ 91FF CD 05 92         call Elimina_disparo_de_base_de_datos
1003+ 9202 E1               pop hl
1004+ 9203 18 E5            jr 7B
1005+ 9205
1006+ 9205              ; HL apunta al primer byte de la base de datos del disparo.
1007+ 9205
1008+ 9205 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1009+ 9208 AF               xor a
1010+ 9209 77               ld (hl),a
1011+ 920A 54               ld d,h
1012+ 920B 5D               ld e,l
1013+ 920C 13               inc de
1014+ 920D ED B0            ldir
1015+ 920F C9               ret
1016+ 9210
1017+ 9210              ; -----------------------------------------------------------------
1018+ 9210              ;
1019+ 9210              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1020+ 9210              ;
1021+ 9210              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1022+ 9210              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1023+ 9210              ;
1024+ 9210              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1025+ 9210              ;
1026+ 9210              ;   INPUTS:
1027+ 9210              ;
1028+ 9210              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1029+ 9210              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1030+ 9210              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1031+ 9210
1032+ 9210              ;   MODIFICA: A, HL, DE y C
1033+ 9210
1034+ 9210 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1035+ 9211 79               ld a,c
1036+ 9212 E6 01            and 1
1037+ 9214 20 03            jr nz,1F
1038+ 9216 14               inc d
1039+ 9217 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1040+ 9219
1041+ 9219              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1042+ 9219              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1043+ 9219
1044+ 9219 15           1 dec d
1045+ 921A 23           2 inc hl
1046+ 921B 72               ld (hl),d
1047+ 921C
1048+ 921C 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1049+ 921D A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1050+ 921E C8               ret z
1051+ 921F
1052+ 921F AF               xor a
1053+ 9220 5F               ld e,a
1054+ 9221 18 ED            jr Guarda_coordenadas_X
1055+ 9223
1056+ 9223              ; -----------------------------------------------------------------
1057+ 9223              ;
1058+ 9223              ;   12/04/23
1059+ 9223              ;
1060+ 9223
1061+ 9223 3A 26 8A     Selector_de_impactos ld a,(Impacto2)
1062+ 9226 A7               and a
1063+ 9227 C8               ret z
1064+ 9228
1065+ 9228 FE 04            cp 4
1066+ 922A 20 09            jr nz,1F
1067+ 922C
1068+ 922C
1069+ 922C              ; La colisión se produce por contacto entre Amadeus y una entidad.
1070+ 922C
1071+ 922C CD 4D 90         call Detecta_colision_nave_entidad
1072+ 922F
1073+ 922F 21 26 8A         ld hl,Impacto2
1074+ 9232 CB 5E            bit 3,(hl)
1075+ 9234 C0               ret nz                                               ; Existe colisión, RET.
1076+ 9235
1077+ 9235              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1078+ 9235              ; Primero analizamos si algún disparo impacta en Amadeus.
1079+ 9235
1080+ 9235 21 26 8A     1 ld hl,Impacto2
1081+ 9238 CB 4E            bit 1,(hl)
1082+ 923A 28 07            jr z,2F
1083+ 923C
1084+ 923C 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1085+ 923F 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1086+ 9241 18 0B            jr 3F
1087+ 9243
1088+ 9243 21 26 8A     2 ld hl,Impacto2
1089+ 9246 CB 46            bit 0,(hl)
1090+ 9248 C8               ret z
1091+ 9249
1092+ 9249              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1093+ 9249
1094+ 9249 21 08 8A         ld hl,Ctrl_1
1095+ 924C CB D6            set 2,(hl)
1096+ 924E
1097+ 924E C9           3 ret
1098+ 924F
1099+ 924F              ; -----------------------------------------------------------------
1100+ 924F              ;
1101+ 924F              ;   16/04/23
1102+ 924F              ;
1103+ 924F
1104+ 924F AF           Limpia_Coordenadas_X xor a
1105+ 9250 06 06            ld b,6
1106+ 9252 21 2B 8A         ld hl,Coordenadas_X_Amadeus
1107+ 9255 77           1 ld (hl),a
1108+ 9256 23               inc hl
1109+ 9257 10 FC            djnz 1B
1110+ 9259 C9               ret
1111+ 925A
1112+ 925A              ; -----------------------------------------------------------------
1113+ 925A              ;
1114+ 925A              ;   25/04/23
1115+ 925A              ;
1116+ 925A
1117+ 925A              Determina_resultado_comparativa
1118+ 925A
1119+ 925A              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1120+ 925A              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1121+ 925A              ;
1122+ 925A              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1123+ 925A              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1124+ 925A              ;
1125+ 925A              ;   SBC HL,DE
1126+ 925A
1127+ 925A              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1128+ 925A              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1129+ 925A
1130+ 925A              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1131+ 925A              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1132+ 925A
1133+ 925A
1134+ 925A 3A DA 89         ld a,(Cuad_objeto)
1135+ 925D FE 02            cp 2
1136+ 925F 28 26            jr z,2F
1137+ 9261 38 24            jr c,2F
1138+ 9263
1139+ 9263              ; Cuadrantes 3º y 4º
1140+ 9263
1141+ 9263 E6 01            and 1
1142+ 9265 28 10            jr z,4F
1143+ 9267
1144+ 9267              ; Cuadrante 3º
1145+ 9267
1146+ 9267 7C               ld a,h
1147+ 9268 06 00            ld b,0
1148+ 926A
1149+ 926A CD F5 92         call Compara_cositas_H3
1150+ 926D
1151+ 926D 04               inc b
1152+ 926E 05               dec b
1153+ 926F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1154+ 9270
1155+ 9270 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1156+ 9271 06 00            ld b,0
1157+ 9273
1158+ 9273 CD 07 93         call Compara_cositas_L3
1159+ 9276 C9               ret
1160+ 9277
1161+ 9277              ; Cuadrante 4º
1162+ 9277
1163+ 9277 7C           4 ld a,h
1164+ 9278 06 00            ld b,0
1165+ 927A
1166+ 927A CD 19 93         call Compara_cositas_H4
1167+ 927D
1168+ 927D 04               inc b
1169+ 927E 05               dec b
1170+ 927F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1171+ 9280
1172+ 9280 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1173+ 9281 06 00            ld b,0
1174+ 9283
1175+ 9283 CD 2F 93         call Compara_cositas_L4
1176+ 9286 C9               ret
1177+ 9287
1178+ 9287              ; Cuadrantes 1º y 2º.
1179+ 9287
1180+ 9287 28 10        2 jr z,3F
1181+ 9289
1182+ 9289              ; 1er Cuadrante
1183+ 9289
1184+ 9289 7C               ld a,h
1185+ 928A 06 00            ld b,0
1186+ 928C
1187+ 928C CD CD 92         call Compara_cositas_H1
1188+ 928F
1189+ 928F 04               inc b
1190+ 9290 05               dec b
1191+ 9291 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1192+ 9292
1193+ 9292 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1194+ 9293 06 00            ld b,0
1195+ 9295
1196+ 9295 CD E3 92         call Compara_cositas_L1
1197+ 9298 C9               ret
1198+ 9299
1199+ 9299
1200+ 9299              ; 2º Cuadrante
1201+ 9299
1202+ 9299 7C           3 ld a,h
1203+ 929A 06 00            ld b,0
1204+ 929C
1205+ 929C CD A9 92         call Compara_cositas_H2
1206+ 929F
1207+ 929F 04               inc b
1208+ 92A0 05               dec b
1209+ 92A1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1210+ 92A2
1211+ 92A2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1212+ 92A3 06 00            ld b,0
1213+ 92A5
1214+ 92A5 CD BB 92         call Compara_cositas_L2
1215+ 92A8 C9               ret
1216+ 92A9
1217+ 92A9 A7           Compara_cositas_H2 and a
1218+ 92AA 28 0D            jr z,1F
1219+ 92AC              ;    cp $fd
1220+ 92AC              ;    jr z,1F
1221+ 92AC              ;    cp $fe
1222+ 92AC              ;    jr z,1F
1223+ 92AC FE FF            cp $ff
1224+ 92AE 28 09            jr z,1F
1225+ 92B0 FE 01            cp $01
1226+ 92B2 28 05            jr z,1F
1227+ 92B4 FE 02            cp $02
1228+ 92B6 28 01            jr z,1F
1229+ 92B8 C0               ret nz
1230+ 92B9 04           1 inc b
1231+ 92BA C9               ret
1232+ 92BB
1233+ 92BB A7           Compara_cositas_L2 and a
1234+ 92BC 28 0D            jr z,1F
1235+ 92BE              ;    cp $fd
1236+ 92BE              ;    jr z,1F
1237+ 92BE FE FE            cp $fe
1238+ 92C0 28 09            jr z,1F
1239+ 92C2 FE FF            cp $ff
1240+ 92C4 28 05            jr z,1F
1241+ 92C6 FE 01            cp $01
1242+ 92C8 28 01            jr z,1F
1243+ 92CA              ;    cp $02
1244+ 92CA              ;    jr z,1F
1245+ 92CA C0               ret nz
1246+ 92CB 04           1 inc b
1247+ 92CC C9               ret
1248+ 92CD
1249+ 92CD A7           Compara_cositas_H1 and a
1250+ 92CE 28 11            jr z,1F
1251+ 92D0              ;    cp $fd
1252+ 92D0              ;    jr z,1F
1253+ 92D0              ;    cp $fe
1254+ 92D0              ;    jr z,1F
1255+ 92D0 FE FF            cp $ff
1256+ 92D2 28 0D            jr z,1F
1257+ 92D4 FE 01            cp $01
1258+ 92D6 28 09            jr z,1F
1259+ 92D8 FE 02            cp $02
1260+ 92DA 28 05            jr z,1F
1261+ 92DC FE 03            cp $03
1262+ 92DE 28 01            jr z,1F
1263+ 92E0 C0               ret nz
1264+ 92E1 04           1 inc b
1265+ 92E2 C9               ret
1266+ 92E3
1267+ 92E3 A7           Compara_cositas_L1 and a
1268+ 92E4 28 0D            jr z,1F
1269+ 92E6              ;    cp $fd
1270+ 92E6              ;    jr z,1F
1271+ 92E6              ;    cp $fe
1272+ 92E6              ;    jr z,1F
1273+ 92E6              ;    cp $ff
1274+ 92E6              ;    jr z,1F
1275+ 92E6 FE 01            cp $01
1276+ 92E8 28 09            jr z,1F
1277+ 92EA FE 02            cp $02
1278+ 92EC 28 05            jr z,1F
1279+ 92EE FE 03            cp $03
1280+ 92F0 28 01            jr z,1F
1281+ 92F2 C0               ret nz
1282+ 92F3 04           1 inc b
1283+ 92F4 C9               ret
1284+ 92F5
1285+ 92F5 A7           Compara_cositas_H3 and a
1286+ 92F6 28 0D            jr z,1F
1287+ 92F8              ;    cp $fd
1288+ 92F8              ;    jr z,1F
1289+ 92F8 FE FE            cp $fe
1290+ 92FA 28 09            jr z,1F
1291+ 92FC FE FF            cp $ff
1292+ 92FE 28 05            jr z,1F
1293+ 9300 FE 01            cp $01
1294+ 9302 28 01            jr z,1F
1295+ 9304              ;    cp $02
1296+ 9304              ;    jr z,1F
1297+ 9304              ;    cp $03
1298+ 9304              ;    jr z,1F
1299+ 9304 C0               ret nz
1300+ 9305 04           1 inc b
1301+ 9306 C9               ret
1302+ 9307
1303+ 9307 A7           Compara_cositas_L3 and a
1304+ 9308 28 0D            jr z,1F
1305+ 930A              ;    cp $fd
1306+ 930A              ;    jr z,1F
1307+ 930A              ;    cp $fe
1308+ 930A              ;    jr z,1F
1309+ 930A              ;    cp $ff
1310+ 930A              ;    jr z,1F
1311+ 930A FE 01            cp $01
1312+ 930C 28 09            jr z,1F
1313+ 930E FE 02            cp $02
1314+ 9310 28 05            jr z,1F
1315+ 9312 FE 03            cp $03
1316+ 9314 28 01            jr z,1F
1317+ 9316 C0               ret nz
1318+ 9317 04           1 inc b
1319+ 9318 C9               ret
1320+ 9319
1321+ 9319 A7           Compara_cositas_H4 and a
1322+ 931A 28 11            jr z,1F
1323+ 931C FE FD            cp $fd
1324+ 931E 28 0D            jr z,1F
1325+ 9320 FE FE            cp $fe
1326+ 9322 28 09            jr z,1F
1327+ 9324 FE FF            cp $ff
1328+ 9326 28 05            jr z,1F
1329+ 9328 FE 01            cp $01
1330+ 932A 28 01            jr z,1F
1331+ 932C              ;    cp $02
1332+ 932C              ;    jr z,1F
1333+ 932C              ;    cp $03
1334+ 932C              ;    jr z,1F
1335+ 932C C0               ret nz
1336+ 932D 04           1 inc b
1337+ 932E C9               ret
1338+ 932F
1339+ 932F A7           Compara_cositas_L4 and a
1340+ 9330 28 0D            jr z,1F
1341+ 9332              ;    cp $fd
1342+ 9332              ;    jr z,1F
1343+ 9332 FE FE            cp $fe
1344+ 9334 28 09            jr z,1F
1345+ 9336 FE FF            cp $ff
1346+ 9338 28 05            jr z,1F
1347+ 933A FE 01            cp $01
1348+ 933C 28 01            jr z,1F
1349+ 933E              ;    cp $02
1350+ 933E              ;    jr z,1F
1351+ 933E              ;    cp $03
1352+ 933E              ;    jr z,1F
1353+ 933E C0               ret nz
1354+ 933F 04           1 inc b
1355+ 9340 C9               ret
# file closed: Disparo.asm
1277  9341              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9341              ; ******************************************************************************************************************************************************************************************
   2+ 9341              ;
   3+ 9341              ; 26/06/23
   4+ 9341              ;
   5+ 9341              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9341
   7+ 9341 CD 1B 96     Draw call Prepara_draw
   8+ 9344 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9345 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9346 28 05        	jr z,2F
  11+ 9348
  12+ 9348 3A DA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 934B 18 0C        	jr 1F
  14+ 934D 2A D8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9350 22 C8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9353 CD E2 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9356              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9356 CD 95 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  19+ 9359 3A F4 89     1 ld a,(Ctrl_0)
  20+ 935C CB 6F        	bit 5,a
  21+ 935E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9360
  23+ 9360 CD 78 93     	call Comprueba_limite_horizontal
  24+ 9363 CD 08 94     	call Comprueba_limite_vertical
  25+ 9366
  26+ 9366              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9366
  28+ 9366 CD 55 95     3 call calcula_CColumnass
  29+ 9369 CD 8C 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 936C CD E1 95     	call Define_rutina_de_impresion
  31+ 936F
  32+ 936F 3A F4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9372 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9374 32 F4 89     	ld (Ctrl_0),a
  35+ 9377
  36+ 9377 C9           	ret
  37+ 9378
  38+ 9378              ; *******************************************************************************************************************************************************************************************
  39+ 9378              ;	21/01/23
  40+ 9378              ;
  41+ 9378              ; 	Comprueba_limite_horizontal.
  42+ 9378              ;
  43+ 9378              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9378              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9378              ;
  46+ 9378              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9378              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9378              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9378              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9378
  51+ 9378
  52+ 9378
  53+ 9378 3A F4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 937B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 937D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 937F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9381 32 F4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9384 18 09            jr 6F
  59+ 9386 CB 5F        1 bit 3,a
  60+ 9388 28 0A            jr z,2F
  61+ 938A E6 F7            and $f7
  62+ 938C 32 F4 89         ld (Ctrl_0),a
  63+ 938F CD E2 94     6 call Inicializacion
  64+ 9392 18 5B            jr 5F
  65+ 9394 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9395
  67+ 9395              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9395              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9395
  70+ 9395 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9396 2A 03 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9399 CD E7 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 939C 67           	ld h,a
  74+ 939D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 939E CD E7 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 93A1 67           	ld h,a
  77+ 93A2 A7           	and a
  78+ 93A3 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 93A5 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 93A6 3A DA 89     	ld a,(Cuad_objeto)
  81+ 93A9 FE 02        	cp 2
  82+ 93AB 38 1E        	jr c,3F
  83+ 93AD 28 1C        	jr z,3F
  84+ 93AF 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 93B0 28 23            jr z,7F
  86+ 93B2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 93B4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 93B6 E1           	pop hl
  89+ 93B7
  90+ 93B7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 93B7              ; _para indicar con E="2" en caso necesario.
  92+ 93B7
  93+ 93B7 E5               push hl
  94+ 93B8 C5               push bc
  95+ 93B9 CD E7 98     	call calcula_tercio
  96+ 93BC FE 01        	cp 1
  97+ 93BE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93C0 CD F0 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93C3 28 26            jr z,9F
 100+ 93C5 38 24            jr c,9F
 101+ 93C7 1E 00        11 ld e,0
 102+ 93C9 18 22            jr 8F
 103+ 93CB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93CC 28 07        	jr z, 7F
 105+ 93CE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93D0 1E 00         	ld e,0
 107+ 93D2 E1           	pop hl
 108+ 93D3 18 04        	jr 4F
 109+ 93D5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93D7 18 15            jr 10F
 111+ 93D9
 112+ 93D9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93D9              ; _para indicar con E="2" en caso necesario.
 114+ 93D9
 115+ 93D9 E5           4 push hl
 116+ 93DA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93DB CD E7 98     	call calcula_tercio
 118+ 93DE FE 01        	cp 1
 119+ 93E0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93E2 CD F0 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93E5 28 04            jr z,9F
 122+ 93E7 30 02            jr nc,9F
 123+ 93E9 18 02        	jr 8F
 124+ 93EB 1E 02        9 ld e,2
 125+ 93ED C1           8 pop bc
 126+ 93EE E1           10 pop hl
 127+ 93EF C9           5 ret
 128+ 93F0
 129+ 93F0              ; --------------------
 130+ 93F0              ;
 131+ 93F0              ; 25/08/22
 132+ 93F0
 133+ 93F0 CD E7 98     Comprueba_centro call calcula_tercio
 134+ 93F3 67               ld h,a
 135+ 93F4 08           	ex af,af
 136+ 93F5 FE 02        	cp 2
 137+ 93F7 38 07        	jr c,1F
 138+ 93F9 28 05        	jr z,1F
 139+ 93FB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93FE 18 03        	jr 2F
 141+ 9400 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 9403 08           2 ex af,af
 143+ 9404 A7               and a
 144+ 9405 ED 42            sbc hl,bc
 145+ 9407 C9               ret
 146+ 9408
 147+ 9408              ; *********************************************************************************************************************************************************************************************
 148+ 9408              ;
 149+ 9408              ;   16/8/22
 150+ 9408              ;
 151+ 9408              ;	Comprueba_limite_vertical
 152+ 9408              ;
 153+ 9408              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 9408              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 9408              ;
 156+ 9408
 157+ 9408 2A C8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 940B 7D           	ld a,l
 159+ 940C E6 1F        	and $1F
 160+ 940E 57           	ld d,a
 161+ 940F 3A 05 8A     	ld a,(Limite_vertical)
 162+ 9412 BA           	cp d 											; Límite - Posición.
 163+ 9413 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9414 3A DA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9417 CB 47        	bit 0,a
 166+ 9419 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 941B
 168+ 941B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 941B
 170+ 941B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 941C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 941E
 173+ 941E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 941E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 941E
 176+ 941E 3A CC 89         ld a,(Coordenada_X)
 177+ 9421 16 0F            ld d,Centro_izquierda
 178+ 9423 A7               and a
 179+ 9424 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9425 28 1E            jr z,3F
 181+ 9427 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9429              ;                                                    ; _salimos sin modificar nada.
 183+ 9429 18 0E            jr 2F
 184+ 942B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 942C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 942E
 187+ 942E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 942E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 942E
 190+ 942E 3A CC 89         ld a,(Coordenada_X)
 191+ 9431 16 10            ld d,Centro_derecha
 192+ 9433 A7               and a
 193+ 9434 92               sub d
 194+ 9435 28 0E            jr z,3F
 195+ 9437 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9439              ;                                                    ; _salimos sin modificar nada.
 197+ 9439 CB 43        2 bit 0,e
 198+ 943B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 943D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 943E CD D2 94         call Modificaccionne
 201+ 9441 C1           	pop bc
 202+ 9442 CD E2 94         call Inicializacion
 203+ 9445 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9446
 205+ 9446              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9446
 207+ 9446 C5           4 push bc
 208+ 9447 01 C7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 944A 0A           	ld a,(bc)
 210+ 944B 3D           	dec a
 211+ 944C 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 944D 7D           	ld a,l
 213+ 944E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 944F CB 47        	bit 0,a
 215+ 9451 28 03        	jr z,5F
 216+ 9453 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9454 18 2E        	jr 7F
 218+ 9456
 219+ 9456              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9456
 221+ 9456 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9457 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9458 3A F4 89     	ld a,(Ctrl_0)
 224+ 945B CB 4F        	bit 1,a
 225+ 945D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 945F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9460
 228+ 9460              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9460
 230+ 9460 1C               inc e
 231+ 9461 1D               dec e
 232+ 9462 20 07            jr nz,12F
 233+ 9464 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9465 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9466 22 C8 89     	ld (Posicion_actual),hl
 236+ 9469 18 44        13 jr 9F
 237+ 946B CB 43        12 bit 0,e
 238+ 946D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 946F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 946F C1           	pop bc
 241+ 9470 18 D3        	jr 3B
 242+ 9472 80           14 add b
 243+ 9473 6F               ld l,a
 244+ 9474 22 C8 89     	ld (Posicion_actual),hl
 245+ 9477 CD D2 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 947A 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 947C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 947E 32 F4 89         ld (Ctrl_0),a
 249+ 9481 F1           	pop af
 250+ 9482 18 2B        	jr 9F
 251+ 9484
 252+ 9484              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9484
 254+ 9484 F5           7 push af
 255+ 9485 3A F4 89     	ld a,(Ctrl_0)
 256+ 9488 CB 47        	bit 0,a
 257+ 948A 20 1D        	jr nz,8F
 258+ 948C F1           	pop af
 259+ 948D
 260+ 948D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 948D
 262+ 948D 1C           	inc e
 263+ 948E 1D               dec e
 264+ 948F 20 07            jr nz,10F
 265+ 9491 90           	sub b
 266+ 9492 6F               ld l,a
 267+ 9493 22 C8 89     	ld (Posicion_actual),hl
 268+ 9496 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9498              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9498 CB 43        10 bit 0,e
 271+ 949A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 949C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 949C C1           	pop bc
 274+ 949D 18 A6        	jr 3B
 275+ 949F 90           16 sub b
 276+ 94A0 6F               ld l,a
 277+ 94A1 22 C8 89     	ld (Posicion_actual),hl
 278+ 94A4 CD D2 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 94A7 18 06            jr 9F
 280+ 94A9 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 94AB 32 F4 89         ld (Ctrl_0),a
 282+ 94AE F1           	pop af
 283+ 94AF C1           9 pop bc
 284+ 94B0 1E 00        	ld e,0
 285+ 94B2 CD E2 94         call Inicializacion
 286+ 94B5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 94B6 08           	ex af,af
 288+ 94B7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 94B8 18 8B            jr 3B
 290+ 94BA
 291+ 94BA              ; --------------------
 292+ 94BA
 293+ 94BA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 94BC CD 36 96     1 call PreviousScan
 295+ 94BF 10 FB            djnz 1B
 296+ 94C1 22 C8 89     	ld (Posicion_actual),hl
 297+ 94C4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94C5 C9           	ret
 299+ 94C6
 300+ 94C6              ; --------------------
 301+ 94C6
 302+ 94C6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94C8 CD 27 96     1 call NextScan
 304+ 94CB 10 FB            djnz 1B
 305+ 94CD 22 C8 89     	ld (Posicion_actual),hl
 306+ 94D0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94D1 C9           	ret
 308+ 94D2
 309+ 94D2              ; --------------------
 310+ 94D2              ;
 311+ 94D2              ;	22/01/23
 312+ 94D2              ;
 313+ 94D2              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94D2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94D2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94D2
 317+ 94D2
 318+ 94D2              Modificaccionne
 319+ 94D2
 320+ 94D2 3A DA 89     	ld a,(Cuad_objeto)
 321+ 94D5 FE 02        	cp 2
 322+ 94D7 CC BA 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94DA DC BA 94         call c,Modifica_Pos_actual
 324+ 94DD C8           	ret z
 325+ 94DE CD C6 94         call Modifica_Pos_actual2
 326+ 94E1 C9               ret
 327+ 94E2
 328+ 94E2              ; *************************************************************************************************************************************************************************************************
 329+ 94E2              ;
 330+ 94E2              ;	13/8/22
 331+ 94E2              ;
 332+ 94E2              ;	Inicializacion
 333+ 94E2              ;
 334+ 94E2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94E2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94E2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94E2              ;
 338+ 94E2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94E2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94E2              ;	_ desaparece/aparece.
 341+ 94E2
 342+ 94E2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94E2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94E2              ;
 345+ 94E2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94E2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94E2              ; 		   [E] ="0"
 348+ 94E2
 349+ 94E2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94E2
 351+ 94E2 CD E7 98     Inicializacion call calcula_tercio
 352+ 94E5 28 36        	jr z,primit
 353+ 94E7 E6 02        	and 2
 354+ 94E9 20 07        	jr nz,segmit
 355+ 94EB 7D           	ld a,l
 356+ 94EC FE 7F        	cp $7f
 357+ 94EE 38 2D        	jr c,primit
 358+ 94F0 28 2B        	jr z,primit
 359+ 94F2 CD 4F 95     segmit call column
 360+ 94F5 38 13        	jr c,tercuad
 361+ 94F7 3E 04        cuarcuad ld a,4
 362+ 94F9 32 DA 89     	ld (Cuad_objeto),a
 363+ 94FC 21 20 48     	ld hl,$4820
 364+ 94FF 22 03 8A     	ld (Limite_horizontal),hl
 365+ 9502 21 05 8A     	ld hl,Limite_vertical
 366+ 9505 36 0D        	ld (hl),$0d
 367+ 9507 08           	ex af,af
 368+ 9508 18 3C        	jr 1F
 369+ 950A              tercuad
 370+ 950A 3E 03        	ld a,3
 371+ 950C 32 DA 89     	ld (Cuad_objeto),a
 372+ 950F 21 20 48     	ld hl,$4820
 373+ 9512 22 03 8A     	ld (Limite_horizontal),hl
 374+ 9515 21 05 8A     	ld hl,Limite_vertical
 375+ 9518 36 12        	ld (hl),$12
 376+ 951A 08           	ex af,af
 377+ 951B 18 29        	jr 1F
 378+ 951D CD 4F 95     primit call column
 379+ 9520 38 13        	jr c, primcuad
 380+ 9522              segcuad
 381+ 9522 3E 02        	ld a,2
 382+ 9524 32 DA 89     	ld (Cuad_objeto),a
 383+ 9527 21 C0 4F     	ld hl,$4fc0
 384+ 952A 22 03 8A     	ld (Limite_horizontal),hl
 385+ 952D 21 05 8A     	ld hl,Limite_vertical
 386+ 9530 36 0D        	ld (hl),$0d
 387+ 9532 08           	ex af,af
 388+ 9533 18 11        	jr 1F
 389+ 9535              primcuad
 390+ 9535 3E 01        	ld a,1
 391+ 9537 32 DA 89     	ld (Cuad_objeto),a
 392+ 953A 21 C0 4F     	ld hl,$4fc0
 393+ 953D 22 03 8A     	ld (Limite_horizontal),hl
 394+ 9540 21 05 8A     	ld hl,Limite_vertical
 395+ 9543 36 12        	ld (hl),$12
 396+ 9545 08           	ex af,af
 397+ 9546 CD 7A 9C     1 call Genera_coordenadas
 398+ 9549 21 F4 89     	ld hl,Ctrl_0
 399+ 954C CB EE        	set 5,(hl)
 400+ 954E C9           	ret
 401+ 954F
 402+ 954F              ; ------------------------------------------------------------------------------------------------------------------
 403+ 954F
 404+ 954F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 954F              ;
 406+ 954F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 954F
 408+ 954F 7D           column ld a,l
 409+ 9550 E6 1F        	and $1f
 410+ 9552 FE 10         	cp $10
 411+ 9554 C9            	ret
 412+ 9555
 413+ 9555              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9555              ;
 415+ 9555              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9555              ;
 417+ 9555              ; 14/12/22
 418+ 9555              ;
 419+ 9555              ;	Modifica: A y BC.
 420+ 9555
 421+ 9555 3A DA 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9558 E6 01        	and 1
 423+ 955A 28 17        	jr z,1F
 424+ 955C
 425+ 955C              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 955C
 427+ 955C 3A CC 89     	ld a,(Coordenada_X)
 428+ 955F 47           	ld b,a
 429+ 9560 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9561 79           	ld a,c
 431+ 9562 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9563 38 08        	jr c,2F
 433+ 9565 47           	ld b,a
 434+ 9566 79           	ld a,c
 435+ 9567 90           	sub b
 436+ 9568 32 02 8A     	ld (Columnas),a
 437+ 956B 18 1B        	jr 4F
 438+ 956D 79           2 ld a,c
 439+ 956E 32 02 8A     	ld (Columnas),a
 440+ 9571 18 15        	jr 4F
 441+ 9573
 442+ 9573              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9573
 444+ 9573 3A CC 89     1 ld a,(Coordenada_X)
 445+ 9576 81           	add c
 446+ 9577 3D           	dec a
 447+ 9578 D6 1F        	sub $1f
 448+ 957A 38 08        	jr c,3F
 449+ 957C 47           	ld b,a
 450+ 957D 79           	ld a,c
 451+ 957E 90           	sub b
 452+ 957F 32 02 8A     	ld (Columnas),a
 453+ 9582 18 04        	jr 4F
 454+ 9584 79           3 ld a,c
 455+ 9585 32 02 8A     	ld (Columnas),a
 456+ 9588 D9           4 exx
 457+ 9589 4F           	ld c,a
 458+ 958A D9           	exx
 459+ 958B C9            ret
 460+ 958C
 461+ 958C              ; --------------------------------------------------------------------------------------------------------------------
 462+ 958C              ;
 463+ 958C              ; 7/1/23
 464+ 958C              ;
 465+ 958C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 958C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 958C              ;
 468+ 958C              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 958C              ;	DESTRUYE: HL,B Y A.
 470+ 958C
 471+ 958C 3A DA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 958F FE 02        	cp 2
 473+ 9591 38 18        	jr c,1F
 474+ 9593 28 16        	jr z,1F
 475+ 9595 E6 01        	and 1
 476+ 9597 28 0D        	jr z,3F
 477+ 9599
 478+ 9599              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9599
 480+ 9599 CD D5 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 959C
 482+ 959C 7D           9 ld a,l
 483+ 959D E6 1F        	and $1f
 484+ 959F 28 2A        	jr z,7F
 485+ 95A1 2B           	dec hl
 486+ 95A2 10 F8        	djnz 9B
 487+ 95A4 18 25        	jr 7F
 488+ 95A6
 489+ 95A6              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 95A6
 491+ 95A6 2A C8 89     3 ld hl,(Posicion_actual)
 492+ 95A9 18 20        	jr 7F
 493+ 95AB
 494+ 95AB 28 14        1 jr z,2F
 495+ 95AD
 496+ 95AD              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 95AD
 498+ 95AD CD D5 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 95B0
 500+ 95B0 7D           4 ld a,l
 501+ 95B1 E6 1F        	and $1f
 502+ 95B3 28 03        	jr z,6F
 503+ 95B5 2B           	dec hl
 504+ 95B6 10 F8        	djnz 4B
 505+ 95B8 06 0F        6 ld b,15
 506+ 95BA CD 36 96     5 call PreviousScan
 507+ 95BD 10 FB        	djnz 5B
 508+ 95BF 18 0A        	jr 7F
 509+ 95C1
 510+ 95C1              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 95C1
 512+ 95C1 CD D5 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 95C4 06 0F        	ld b,15
 514+ 95C6 CD 36 96     8 call PreviousScan
 515+ 95C9 10 FB        	djnz 8B
 516+ 95CB
 517+ 95CB E5           7 push hl
 518+ 95CC DD E1        	pop ix
 519+ 95CE
 520+ 95CE 2A CA 89     	ld hl,(Puntero_objeto)
 521+ 95D1 E5           	push hl
 522+ 95D2 FD E1        	pop iy
 523+ 95D4
 524+ 95D4 C9           	ret
 525+ 95D5
 526+ 95D5              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95D5              ;
 528+ 95D5              ;	2/1/23
 529+ 95D5              ;
 530+ 95D5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95D5              ;
 532+ 95D5              ;	Tras esta rutina tenemos:
 533+ 95D5              ;
 534+ 95D5              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95D5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95D5              ;
 537+ 95D5              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95D5
 539+ 95D5 2A C8 89     Operandos ld hl,(Posicion_actual)
 540+ 95D8 3A 02 8A     	ld a,(Columnas)
 541+ 95DB 3D           	dec a
 542+ 95DC 20 01        	jr nz,1F
 543+ 95DE 3C           	inc a
 544+ 95DF 47           1 ld b,a
 545+ 95E0 C9           	ret
 546+ 95E1
 547+ 95E1              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95E1              ;
 549+ 95E1              ;	3/1/23
 550+ 95E1              ;
 551+ 95E1              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95E1              ;
 553+ 95E1              ;	Destruye: A,B,HL y DE.
 554+ 95E1
 555+ 95E1              Define_rutina_de_impresion
 556+ 95E1
 557+ 95E1 3A C7 89     	ld a,(Columns)
 558+ 95E4 47           	ld b,a
 559+ 95E5 3A 02 8A     	ld a,(Columnas)
 560+ 95E8 B8           	cp b
 561+ 95E9 20 0D        	jr nz,2f
 562+ 95EB
 563+ 95EB              ;	La entidad se imprime entera.
 564+ 95EB
 565+ 95EB 21 B7 96     	ld hl, Indice_entidades_completas
 566+ 95EE E6 01        	and 1
 567+ 95F0 28 02        	jr z,1F
 568+ 95F2
 569+ 95F2 23           	inc hl
 570+ 95F3 23           	inc hl
 571+ 95F4
 572+ 95F4 CD 35 8D     1 call Extrae_address
 573+ 95F7 C9           	ret		;	ret
 574+ 95F8
 575+ 95F8              ;	La entidad no se imprime entera en pantalla.
 576+ 95F8
 577+ 95F8 3A DA 89     2 ld a,(Cuad_objeto)
 578+ 95FB E6 01        	and 1
 579+ 95FD 28 17        	jr z,3F
 580+ 95FF
 581+ 95FF              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95FF
 583+ 95FF 21 BB 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 9602 3A C7 89     4 ld a,(Columns)
 585+ 9605 E6 01        	and 1
 586+ 9607 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 9609
 588+ 9609 23           	inc hl
 589+ 960A 23           	inc hl
 590+ 960B
 591+ 960B 3A 02 8A     	ld a,(Columnas)
 592+ 960E E6 01        	and 1
 593+ 9610 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 9612
 595+ 9612 23           	inc hl
 596+ 9613 23           	inc hl
 597+ 9614
 598+ 9614 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 9616
 600+ 9616 21 C1 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 9619 18 E7        	jr 4B
 602+ 961B
 603+ 961B              ; --------------------------------------------------------------------------------------------------------------------
 604+ 961B              ;
 605+ 961B              ;	Prepara_draw
 606+ 961B              ;
 607+ 961B              ;	Es una rutina de carga.
 608+ 961B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 961B              ;
 610+ 961B              ;	FUNCIONAMIENTO:
 611+ 961B              ;
 612+ 961B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 961B              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 961B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 961B              ;
 616+ 961B              ;	DESTRUYE:
 617+ 961B              ;
 618+ 961B              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 961B
 620+ 961B 21 C6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 961E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 961F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 9620 4E           	ld c,(hl)
 624+ 9621 2A C8 89     	ld hl,(Posicion_actual)
 625+ 9624 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 9626 C9           	ret
 627+ 9627
 628+ 9627              ;----------------------------------------------------------------------------------------------------------------
 629+ 9627              ;
 630+ 9627              ;	5/08/22
 631+ 9627              ;
 632+ 9627              ;   NextScan.
 633+ 9627              ;
 634+ 9627              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 9627              ;
 636+ 9627              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 9627              ;
 638+ 9627              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 9627              ;
 640+ 9627              ;       DESTRUIDOS: AF y HL !!!
 641+ 9627              ;
 642+ 9627              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 9627              ;
 644+ 9627
 645+ 9627 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 9628 7C               ld a,h
 647+ 9629 E6 07            and 7
 648+ 962B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 962C
 650+ 962C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 962D C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 962F 6F               ld l,a
 653+ 9630 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9631
 655+ 9631 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9632 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9634 67               ld h,a
 658+ 9635 C9               ret
 659+ 9636
 660+ 9636              ;----------------------------------------------------------------------------------------------------------------
 661+ 9636              ;
 662+ 9636              ;	5/08/22
 663+ 9636              ;
 664+ 9636              ;   PreviousScan.
 665+ 9636              ;
 666+ 9636              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 9636              ;
 668+ 9636              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 9636              ;
 670+ 9636              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9636              ;
 672+ 9636              ;       DESTRUIDOS: AF y HL !!!
 673+ 9636              ;
 674+ 9636              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9636              ;
 676+ 9636
 677+ 9636 7C           PreviousScan ld a,h
 678+ 9637 25               dec h               ; Dec H.
 679+ 9638 E6 07            and 7
 680+ 963A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 963B
 682+ 963B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 963C D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 963E 6F               ld l,a
 685+ 963F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9640
 687+ 9640 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9641 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9643 67               ld h,a
 690+ 9644 C9               ret
 691+ 9645
 692+ 9645              ; -----------------------------------------------------------------------------------
 693+ 9645              ;
 694+ 9645              ;	28/2/23
 695+ 9645              ;
 696+ 9645              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9645              ;	Extrae fotos de Album_de_fotos.
 698+ 9645
 699+ 9645 3A 14 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 9648 A7           	and a
 701+ 9649 C8           	ret z
 702+ 964A ED 73 19 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 964E 31 00 70     	ld sp,Album_de_fotos
 704+ 9651
 705+ 9651 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9653 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9654 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9655
 709+ 9655 ED 73 1B 8A  	ld (Stack_2),sp
 710+ 9659 ED 7B 19 8A  	ld sp,(Stack)
 711+ 965D
 712+ 965D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 965D
 714+ 965D 3E CD        	ld a,$cd
 715+ 965F 32 67 96     	ld (Imprime),a
 716+ 9662 EB           	ex de,hl
 717+ 9663 22 68 96     	ld (Imprime+1),hl
 718+ 9666 EB           	ex de,hl
 719+ 9667
 720+ 9667              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9667
 722+ 9667 00 00 00     Imprime db 0,0,0
 723+ 966A
 724+ 966A 3A 14 8A     	ld a,(Numero_de_malotes)
 725+ 966D 3D           	dec a
 726+ 966E 28 09        	jr z,1F
 727+ 9670 32 14 8A      	ld (Numero_de_malotes),a
 728+ 9673
 729+ 9673 ED 7B 1B 8A   	ld sp,(Stack_2)
 730+ 9677 18 D8        	jr 2B
 731+ 9679
 732+ 9679 AF           1 xor a
 733+ 967A 32 1B 8A     	ld (Stack_2),a
 734+ 967D C9           	ret
 735+ 967E
 736+ 967E              ; -----------------------------------------------------------------------------------
 737+ 967E              ;
 738+ 967E              ;	28/2/23
 739+ 967E              ;
 740+ 967E              ;	Pinta los disparos generados.
 741+ 967E
 742+ 967E              Extrae_foto_disparos
 743+ 967E
 744+ 967E 3A 21 8A     	ld a,(Numero_de_disparotes)
 745+ 9681 A7           	and a
 746+ 9682 C8           	ret z
 747+ 9683 ED 73 19 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9687 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 968A
 750+ 968A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 968C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 968D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 968E
 754+ 968E ED 73 1B 8A  	ld (Stack_2),sp
 755+ 9692 ED 7B 19 8A  	ld sp,(Stack)
 756+ 9696
 757+ 9696              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9696
 759+ 9696 3E CD        	ld a,$cd
 760+ 9698 32 A0 96     	ld (Imprime2),a
 761+ 969B EB           	ex de,hl
 762+ 969C 22 A1 96     	ld (Imprime2+1),hl
 763+ 969F EB           	ex de,hl
 764+ 96A0
 765+ 96A0              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 96A0
 767+ 96A0 00 00 00     Imprime2 db 0,0,0
 768+ 96A3
 769+ 96A3 3A 21 8A     	ld a,(Numero_de_disparotes)
 770+ 96A6 3D           	dec a
 771+ 96A7 28 09        	jr z,1F
 772+ 96A9 32 21 8A      	ld (Numero_de_disparotes),a
 773+ 96AC
 774+ 96AC ED 7B 1B 8A  	ld sp,(Stack_2)
 775+ 96B0 18 D8        	jr 2B
 776+ 96B2
 777+ 96B2 AF           1 xor a
 778+ 96B3 32 1B 8A     	ld (Stack_2),a
 779+ 96B6 C9           	ret
 780+ 96B7
# file closed: Draw_XOR.asm
1278  96B7              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96B7              ;   índices de Rutinas de impresión.
   2+ 96B7
   3+ 96B7 C7 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96B9 F4 96            defw Pinta_Amadeus_3x2
   5+ 96BB
   6+ 96BB 4A 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96BD EA 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96BF 9E 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96C1
  10+ 96C1 74 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96C3 78 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96C5 2C 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96C7
  14+ 96C7
  15+ 96C7              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96C7              ;
  17+ 96C7              ;   12/12/22
  18+ 96C7              ;
  19+ 96C7              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96C7              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96C7              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96C7              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96C7              ;
  24+ 96C7              ;   Modifica: DE y HL.
  25+ 96C7
  26+ 96C7 ED 73 19 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96CB FD F9        	ld sp,iy
  28+ 96CD 06 10            ld b,16
  29+ 96CF D1           1 pop de
  30+ 96D0 7B               ld a,e
  31+ 96D1 AE               xor (hl)
  32+ 96D2 77           	ld (hl),a
  33+ 96D3 23           	inc hl
  34+ 96D4 7A               ld a,d
  35+ 96D5 AE               xor (hl)
  36+ 96D6 77           	ld (hl),a
  37+ 96D7 2B           	dec hl
  38+ 96D8 24           	inc h
  39+ 96D9 7C               ld a,h
  40+ 96DA E6 07            and 7
  41+ 96DC 20 0A            jr nz,2F
  42+ 96DE 7D               ld a,l
  43+ 96DF C6 20            add a,$20
  44+ 96E1 6F               ld l,a
  45+ 96E2 38 04            jr c,2F
  46+ 96E4 7C               ld a,h
  47+ 96E5 D6 08            sub 8
  48+ 96E7 67               ld h,a
  49+ 96E8 7C           2 ld a,h
  50+ 96E9 FE 58            cp $58
  51+ 96EB 28 02            jr z,3F
  52+ 96ED 10 E0            djnz 1B
  53+ 96EF ED 7B 19 8A  3 ld sp,(Stack)
  54+ 96F3 C9           	ret
  55+ 96F4
  56+ 96F4 ED 73 19 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96F8 FD F9        	ld sp,iy
  58+ 96FA 06 08            ld b,8
  59+ 96FC D1           1 pop de
  60+ 96FD 7B               ld a,e
  61+ 96FE AE               xor (hl)
  62+ 96FF 77           	ld (hl),a
  63+ 9700 23           	inc hl
  64+ 9701 7A               ld a,d
  65+ 9702 AE               xor (hl)
  66+ 9703 77           	ld (hl),a
  67+ 9704 23           	inc hl
  68+ 9705 D1           	pop de
  69+ 9706 7B               ld a,e
  70+ 9707 AE               xor (hl)
  71+ 9708 77           	ld (hl),a
  72+ 9709 2B           	dec hl
  73+ 970A 2B           	dec hl
  74+ 970B 24           	inc h
  75+ 970C 7C               ld a,h
  76+ 970D E6 07            and 7
  77+ 970F 20 0A            jr nz,2F
  78+ 9711 7D               ld a,l
  79+ 9712 C6 20            add a,$20
  80+ 9714 6F               ld l,a
  81+ 9715 38 04            jr c,2F
  82+ 9717 7C               ld a,h
  83+ 9718 D6 08            sub 8
  84+ 971A 67               ld h,a
  85+ 971B 7C           2 ld a,h
  86+ 971C FE 58            cp $58
  87+ 971E 28 25            jr z,4F
  88+ 9720 7A               ld a,d
  89+ 9721 AE               xor (hl)
  90+ 9722 77               ld (hl),a
  91+ 9723 D1           	pop de
  92+ 9724 23           	inc hl
  93+ 9725 7B               ld a,e
  94+ 9726 AE               xor (hl)
  95+ 9727 77           	ld (hl),a
  96+ 9728 23           	inc hl
  97+ 9729 7A               ld a,d
  98+ 972A AE               xor (hl)
  99+ 972B 77           	ld (hl),a
 100+ 972C 2B           	dec hl
 101+ 972D 2B           	dec hl
 102+ 972E 24           	inc h
 103+ 972F 7C               ld a,h
 104+ 9730 E6 07            and 7
 105+ 9732 20 0A            jr nz,3F
 106+ 9734 7D               ld a,l
 107+ 9735 C6 20            add a,$20
 108+ 9737 6F               ld l,a
 109+ 9738 38 04            jr c,3F
 110+ 973A 7C               ld a,h
 111+ 973B D6 08            sub 8
 112+ 973D 67               ld h,a
 113+ 973E 7C           3 ld a,h
 114+ 973F FE 58            cp $58
 115+ 9741 28 02            jr z,4F
 116+ 9743 10 B7            djnz 1B
 117+ 9745 ED 7B 19 8A  4 ld sp,(Stack)
 118+ 9749 C9           	ret
 119+ 974A
 120+ 974A              ; ---------------------------------------------------
 121+ 974A
 122+ 974A ED 73 19 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 974E FD F9        	ld sp,iy
 124+ 9750
 125+ 9750              ; >>>
 126+ 9750
 127+ 9750 06 10            ld b,16
 128+ 9752 D1           1 pop de
 129+ 9753 7A           	ld a,d
 130+ 9754 AE           	xor (hl)
 131+ 9755 77           	ld (hl),a
 132+ 9756 24           	inc h
 133+ 9757 7C               ld a,h
 134+ 9758 E6 07            and 7
 135+ 975A 20 0C            jr nz,2F
 136+ 975C 7D               ld a,l
 137+ 975D C6 20            add a,$20
 138+ 975F 6F               ld l,a
 139+ 9760 38 06            jr c,2F
 140+ 9762 7C               ld a,h
 141+ 9763 D6 08            sub 8
 142+ 9765 67               ld h,a
 143+ 9766 18 00            jr 2F
 144+ 9768 7C           2 ld a,h
 145+ 9769 FE 58            cp $58
 146+ 976B 28 02            jr z,3F
 147+ 976D 10 E3            djnz 1B
 148+ 976F ED 7B 19 8A  3 ld sp,(Stack)
 149+ 9773 C9           	ret
 150+ 9774
 151+ 9774 ED 73 19 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9778 FD F9        	ld sp,iy
 153+ 977A
 154+ 977A              ; >>>
 155+ 977A
 156+ 977A 06 10            ld b,16
 157+ 977C D1           1 pop de
 158+ 977D 7B           	ld a,e
 159+ 977E AE           	xor (hl)
 160+ 977F 77           	ld (hl),a
 161+ 9780 24           	inc h
 162+ 9781 7C               ld a,h
 163+ 9782 E6 07            and 7
 164+ 9784 20 0C            jr nz,2F
 165+ 9786 7D               ld a,l
 166+ 9787 C6 20            add a,$20
 167+ 9789 6F               ld l,a
 168+ 978A 38 06            jr c,2F
 169+ 978C 7C               ld a,h
 170+ 978D D6 08            sub 8
 171+ 978F 67               ld h,a
 172+ 9790 18 00            jr 2F
 173+ 9792 7C           2 ld a,h
 174+ 9793 FE 58            cp $58
 175+ 9795 28 02            jr z,3F
 176+ 9797 10 E3            djnz 1B
 177+ 9799 ED 7B 19 8A  3 ld sp,(Stack)
 178+ 979D C9           	ret
 179+ 979E
 180+ 979E              ; ---------------------------------------------------
 181+ 979E
 182+ 979E ED 73 19 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97A2 FD F9        	ld sp,iy
 184+ 97A4 06 08            ld b,8
 185+ 97A6 D1           1 pop de
 186+ 97A7 7A           	ld a,d
 187+ 97A8 AE           	xor (hl)
 188+ 97A9 77           	ld (hl),a
 189+ 97AA 23           	inc hl
 190+ 97AB D1           	pop de
 191+ 97AC 7B           	ld a,e
 192+ 97AD AE           	xor (hl)
 193+ 97AE 77           	ld (hl),a
 194+ 97AF 2B           	dec hl
 195+ 97B0 24            	inc h
 196+ 97B1 7C               ld a,h
 197+ 97B2 E6 07            and 7
 198+ 97B4 20 0A            jr nz,2F
 199+ 97B6 7D               ld a,l
 200+ 97B7 C6 20            add a,$20
 201+ 97B9 6F               ld l,a
 202+ 97BA 38 04            jr c,2F
 203+ 97BC 7C               ld a,h
 204+ 97BD D6 08            sub 8
 205+ 97BF 67               ld h,a
 206+ 97C0 7C           2 ld a,h
 207+ 97C1 FE 58            cp $58
 208+ 97C3 28 20            jr z,4F
 209+ 97C5 D1               pop de
 210+ 97C6 7B           	ld a,e
 211+ 97C7 AE           	xor (hl)
 212+ 97C8 77           	ld (hl),a
 213+ 97C9 23           	inc hl
 214+ 97CA 7A           	ld a,d
 215+ 97CB AE           	xor (hl)
 216+ 97CC 77           	ld (hl),a
 217+ 97CD 2B           	dec hl
 218+ 97CE 24           	inc h
 219+ 97CF 7C               ld a,h
 220+ 97D0 E6 07            and 7
 221+ 97D2 20 0A            jr nz,3F
 222+ 97D4 7D               ld a,l
 223+ 97D5 C6 20            add a,$20
 224+ 97D7 6F               ld l,a
 225+ 97D8 38 04            jr c,3F
 226+ 97DA 7C               ld a,h
 227+ 97DB D6 08            sub 8
 228+ 97DD 67               ld h,a
 229+ 97DE 7C           3 ld a,h
 230+ 97DF FE 58            cp $58
 231+ 97E1 28 02            jr z,4F
 232+ 97E3 10 C1            djnz 1B
 233+ 97E5 ED 7B 19 8A  4 ld sp,(Stack)
 234+ 97E9 C9           	ret
 235+ 97EA
 236+ 97EA ED 73 19 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97EE FD F9        	ld sp,iy
 238+ 97F0 06 08            ld b,8
 239+ 97F2 D1           1 pop de
 240+ 97F3 D1           	pop de
 241+ 97F4 7B           	ld a,e
 242+ 97F5 AE           	xor (hl)
 243+ 97F6 77           	ld (hl),a
 244+ 97F7 24            	inc h
 245+ 97F8 7C               ld a,h
 246+ 97F9 E6 07            and 7
 247+ 97FB 20 0A            jr nz,2F
 248+ 97FD 7D               ld a,l
 249+ 97FE C6 20            add a,$20
 250+ 9800 6F               ld l,a
 251+ 9801 38 04            jr c,2F
 252+ 9803 7C               ld a,h
 253+ 9804 D6 08            sub 8
 254+ 9806 67               ld h,a
 255+ 9807 7C           2 ld a,h
 256+ 9808 FE 58            cp $58
 257+ 980A 28 1B            jr z,4F
 258+ 980C D1               pop de
 259+ 980D 7A           	ld a,d
 260+ 980E AE           	xor (hl)
 261+ 980F 77           	ld (hl),a
 262+ 9810 24           	inc h
 263+ 9811 7C               ld a,h
 264+ 9812 E6 07            and 7
 265+ 9814 20 0A            jr nz,3F
 266+ 9816 7D               ld a,l
 267+ 9817 C6 20            add a,$20
 268+ 9819 6F               ld l,a
 269+ 981A 38 04            jr c,3F
 270+ 981C 7C               ld a,h
 271+ 981D D6 08            sub 8
 272+ 981F 67               ld h,a
 273+ 9820 7C           3 ld a,h
 274+ 9821 FE 58            cp $58
 275+ 9823 28 02            jr z,4F
 276+ 9825 10 CB            djnz 1B
 277+ 9827 ED 7B 19 8A  4 ld sp,(Stack)
 278+ 982B C9           	ret
 279+ 982C
 280+ 982C ED 73 19 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9830 FD F9        	ld sp,iy
 282+ 9832 06 08            ld b,8
 283+ 9834 D1           1 pop de
 284+ 9835 7B           	ld a,e
 285+ 9836 AE           	xor (hl)
 286+ 9837 77           	ld (hl),a
 287+ 9838 23           	inc hl
 288+ 9839 7A           	ld a,d
 289+ 983A AE           	xor (hl)
 290+ 983B 77           	ld (hl),a
 291+ 983C 2B           	dec hl
 292+ 983D 24             	inc h
 293+ 983E 7C               ld a,h
 294+ 983F E6 07            and 7
 295+ 9841 20 0A            jr nz,2F
 296+ 9843 7D               ld a,l
 297+ 9844 C6 20            add a,$20
 298+ 9846 6F               ld l,a
 299+ 9847 38 04            jr c,2F
 300+ 9849 7C               ld a,h
 301+ 984A D6 08            sub 8
 302+ 984C 67               ld h,a
 303+ 984D 7C           2 ld a,h
 304+ 984E FE 58            cp $58
 305+ 9850 28 21            jr z,4F
 306+ 9852 D1               pop de
 307+ 9853 7A           	ld a,d
 308+ 9854 AE           	xor (hl)
 309+ 9855 77           	ld (hl),a
 310+ 9856 23           	inc hl
 311+ 9857 D1               pop de
 312+ 9858 7B           	ld a,e
 313+ 9859 AE           	xor (hl)
 314+ 985A 77           	ld (hl),a
 315+ 985B 2B           	dec hl
 316+ 985C 24           	inc h
 317+ 985D 7C               ld a,h
 318+ 985E E6 07            and 7
 319+ 9860 20 0A            jr nz,3F
 320+ 9862 7D               ld a,l
 321+ 9863 C6 20            add a,$20
 322+ 9865 6F               ld l,a
 323+ 9866 38 04            jr c,3F
 324+ 9868 7C               ld a,h
 325+ 9869 D6 08            sub 8
 326+ 986B 67               ld h,a
 327+ 986C 7C           3 ld a,h
 328+ 986D FE 58            cp $58
 329+ 986F 28 02            jr z,4F
 330+ 9871 10 C1            djnz 1B
 331+ 9873 ED 7B 19 8A  4 ld sp,(Stack)
 332+ 9877 C9           	ret
 333+ 9878
 334+ 9878 ED 73 19 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 987C FD F9        	ld sp,iy
 336+ 987E 06 08            ld b,8
 337+ 9880 D1           1 pop de
 338+ 9881 7B           	ld a,e
 339+ 9882 AE           	xor (hl)
 340+ 9883 77           	ld (hl),a
 341+ 9884 24            	inc h
 342+ 9885 7C               ld a,h
 343+ 9886 E6 07            and 7
 344+ 9888 20 0A            jr nz,2F
 345+ 988A 7D               ld a,l
 346+ 988B C6 20            add a,$20
 347+ 988D 6F               ld l,a
 348+ 988E 38 04            jr c,2F
 349+ 9890 7C               ld a,h
 350+ 9891 D6 08            sub 8
 351+ 9893 67               ld h,a
 352+ 9894 7C           2 ld a,h
 353+ 9895 FE 58            cp $58
 354+ 9897 28 1C            jr z,4F
 355+ 9899 D1               pop de
 356+ 989A 7A           	ld a,d
 357+ 989B AE           	xor (hl)
 358+ 989C 77           	ld (hl),a
 359+ 989D 24           	inc h
 360+ 989E 7C               ld a,h
 361+ 989F E6 07            and 7
 362+ 98A1 20 0A            jr nz,3F
 363+ 98A3 7D               ld a,l
 364+ 98A4 C6 20            add a,$20
 365+ 98A6 6F               ld l,a
 366+ 98A7 38 04            jr c,3F
 367+ 98A9 7C               ld a,h
 368+ 98AA D6 08            sub 8
 369+ 98AC 67               ld h,a
 370+ 98AD 7C           3 ld a,h
 371+ 98AE FE 58            cp $58
 372+ 98B0 28 03            jr z,4F
 373+ 98B2 D1               pop de
 374+ 98B3 10 CB            djnz 1B
 375+ 98B5 ED 7B 19 8A  4 ld sp,(Stack)
 376+ 98B9 C9           	ret
 377+ 98BA
 378+ 98BA              ; ---------------------------------------------------
 379+ 98BA              ;
 380+ 98BA              ;   27/02/23
 381+ 98BA              ;
 382+ 98BA              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98BA              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98BA              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98BA
 386+ 98BA ED 73 19 8A  Pinta_Disparo ld (Stack),sp
 387+ 98BE FD F9            ld sp,iy
 388+ 98C0 06 04            ld b,4
 389+ 98C2 D1           1 pop de
 390+ 98C3 7B               ld a,e
 391+ 98C4 AE               xor (hl)
 392+ 98C5 77               ld (hl),a
 393+ 98C6 23               inc hl
 394+ 98C7 7A               ld a,d
 395+ 98C8 AE               xor (hl)
 396+ 98C9 77               ld (hl),a
 397+ 98CA 2B               dec hl
 398+ 98CB
 399+ 98CB 24               inc h
 400+ 98CC 7C               ld a,h
 401+ 98CD E6 07            and 7
 402+ 98CF 20 0A            jr nz,2F
 403+ 98D1 7D               ld a,l
 404+ 98D2 C6 20            add a,$20
 405+ 98D4 6F               ld l,a
 406+ 98D5 38 04            jr c,2F
 407+ 98D7 7C               ld a,h
 408+ 98D8 D6 08            sub 8
 409+ 98DA 67               ld h,a
 410+ 98DB 7C           2 ld a,h
 411+ 98DC FE 58            cp $58
 412+ 98DE 28 02            jr z,3F
 413+ 98E0
 414+ 98E0 10 E0            djnz 1B
 415+ 98E2 ED 7B 19 8A  3 ld sp,(Stack)
 416+ 98E6 C9               ret
 417+ 98E7
# file closed: Rutinas_de_impresion_sprites.asm
1279  98E7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98E7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98E7              ;
   3+ 98E7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98E7              ;
   5+ 98E7              ; *****************************************************************************************************************************************************************************************
   6+ 98E7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98E7
   8+ 98E7 7C           calcula_tercio ld a,h
   9+ 98E8 E6 18        	and $18
  10+ 98EA CB 2F        	sra a
  11+ 98EC CB 2F        	sra a
  12+ 98EE CB 2F        	sra a
  13+ 98F0 C9           	ret
  14+ 98F1
# file closed: calcula_tercio.asm
1280  98F1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98F1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98F1              ;
   3+ 98F1              ;
   4+ 98F1              ;	CLS.
   5+ 98F1              ;
   6+ 98F1              ;	Limpia la pantalla y define sus atributos.
   7+ 98F1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98F1              ;
   9+ 98F1              ;	COLORES: 0 ..... NEGRO
  10+ 98F1              ;    		 1 ..... AZUL
  11+ 98F1              ; 			 2 ..... ROJO
  12+ 98F1              ;			 3 ..... MAGENTA
  13+ 98F1              ; 			 4 ..... VERDE
  14+ 98F1              ; 			 5 ..... CIAN
  15+ 98F1              ;			 6 ..... AMARILLO
  16+ 98F1              ; 			 7 ..... BLANCO
  17+ 98F1              ;
  18+ 98F1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98F1              ;
  20+ 98F1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98F1
  22+ 98F1
  23+ 98F1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98F4 11 01 40     	LD DE,$4001
  25+ 98F7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98FA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98FC ED B0        	LDIR
  28+ 98FE 01 FF 02     	LD BC,767
  29+ 9901 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9902 ED B0        	LDIR
  31+ 9904 C9           	ret
  32+ 9905
# file closed: Cls.asm
1281  9905              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9905              ; ******************************************************************************************************************************************************************************************
   2+ 9905              ;
   3+ 9905              ;   20/05/23
   4+ 9905              ;
   5+ 9905              ;	Recompone_posicion_inicio
   6+ 9905              ;
   7+ 9905              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9905              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9905              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9905              ;	_ a una u otra rutina.
  11+ 9905
  12+ 9905              Recompone_posicion_inicio
  13+ 9905
  14+ 9905 2A D8 89     	ld hl,(Posicion_inicio)
  15+ 9908 7D           	ld a,l
  16+ 9909 E6 1F        	and $1f
  17+ 990B 28 16        	jr z,1F
  18+ 990D
  19+ 990D FE 1F        	cp $1f
  20+ 990F 28 0D        	jr z,3F
  21+ 9911
  22+ 9911 21 06 8A     	ld hl,Ctrl_2
  23+ 9914 CB C6        	set 0,(hl)
  24+ 9916 2A CA 89     	ld hl,(Puntero_objeto)
  25+ 9919 22 09 8A     	ld (Repone_puntero_objeto),hl
  26+ 991C 18 08        	jr 2F
  27+ 991E
  28+ 991E CD BF 9A     3 call Mov_left
  29+ 9921 18 03        	jr 2F
  30+ 9923
  31+ 9923 CD A1 99     1 call Mov_right
  32+ 9926 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9929 22 CA 89     	ld (Puntero_objeto),hl
  34+ 992C C9           	ret
  35+ 992D
  36+ 992D              ; ******************************************************************************************************************************************************************************************
  37+ 992D              ;
  38+ 992D              ;   27/05/23
  39+ 992D              ;
  40+ 992D              ;	Mov_down
  41+ 992D              ;
  42+ 992D              ; 	Mueve el Sprite X px hacia abajo.
  43+ 992D              ;
  44+ 992D              ;
  45+ 992D              Mov_down
  46+ 992D
  47+ 992D CD 8F 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9930              ;																	; _ repone (Puntero_objeto).
  49+ 9930 21 F4 89     	ld hl,Ctrl_0
  50+ 9933 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9935              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9935              ; 																	; _ en el caso de que no lo haya.
  53+ 9935 3A DE 89     	ld a,(Vel_down)
  54+ 9938 47           	ld b,a
  55+ 9939 2A C8 89         ld hl,(Posicion_actual)
  56+ 993C CD E7 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 993F E6 02        	and 2
  58+ 9941 28 0F        	jr z,1F
  59+ 9943
  60+ 9943              ; Nos encontramos en el último tercio de pantalla.
  61+ 9943              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9943
  63+ 9943 7C           	ld a,h
  64+ 9944 FE 57        	cp $57
  65+ 9946 20 0A        	jr nz,1F
  66+ 9948 7D           	ld a,l
  67+ 9949 C6 20        	add $20
  68+ 994B 30 05        	jr nc,1F
  69+ 994D
  70+ 994D              ; ------------------------------
  71+ 994D              ;	call Reaparece_arriba
  72+ 994D CD 4C 9C     	call Reinicio
  73+ 9950              ; ------------------------------
  74+ 9950
  75+ 9950 18 08        	jr 3F
  76+ 9952 CD 27 96     1 call NextScan
  77+ 9955 22 C8 89     	ld (Posicion_actual),hl
  78+ 9958 10 E2            djnz 2B
  79+ 995A CD 7A 9C     3 call Genera_coordenadas
  80+ 995D C9           	ret
  81+ 995E
  82+ 995E              ; ******************************************************************************************************************************************************************************************
  83+ 995E              ;
  84+ 995E              ;   27/05/23
  85+ 995E              ;
  86+ 995E              ;	Mov_up
  87+ 995E              ;
  88+ 995E              ; 	Mueve el Sprite hacia arriba.
  89+ 995E              ;
  90+ 995E              ;
  91+ 995E              Mov_up
  92+ 995E
  93+ 995E CD 8F 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9961              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9961 21 F4 89     	ld hl,Ctrl_0
  96+ 9964 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9966              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9966              ; 																		; _ en el caso de que no lo haya.
  99+ 9966 3A DD 89     	ld a,(Vel_up)
 100+ 9969 47           	ld b,a
 101+ 996A 2A C8 89     	ld hl,(Posicion_actual)
 102+ 996D CD E7 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9970 A7           	and a
 104+ 9971 20 10        	jr nz,1F
 105+ 9973
 106+ 9973              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9973              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9973
 109+ 9973 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9974 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9976 20 0B            jr nz,1F
 112+ 9978 7D               ld a,l
 113+ 9979 D6 20            sub $20
 114+ 997B 30 06            jr nc,1F
 115+ 997D 25               dec h
 116+ 997E
 117+ 997E              ; -----------------------------
 118+ 997E CD 2D 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9981              ;	call Reinicio
 120+ 9981              ; -----------------------------
 121+ 9981
 122+ 9981 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9983 CD 36 96     1 call PreviousScan
 124+ 9986 22 C8 89     	ld (Posicion_actual),hl
 125+ 9989 10 E2            djnz 3B
 126+ 998B CD 7A 9C     2 call Genera_coordenadas
 127+ 998E C9           	ret
 128+ 998F
 129+ 998F              ; -----------------------------
 130+ 998F              ;
 131+ 998F              ;	27/5/23
 132+ 998F              ;
 133+ 998F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 998F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 998F              ;
 136+ 998F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 998F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 998F              ;
 139+ 998F              ;	Modifica: A y (Puntero_objeto).
 140+ 998F
 141+ 998F 3A 06 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9992 CB 47        	bit 0,a
 143+ 9994 C8           	ret z
 144+ 9995 CB 87        	res 0,a
 145+ 9997 32 06 8A     	ld (Ctrl_2),a
 146+ 999A 2A 09 8A     	ld hl,(Repone_puntero_objeto)
 147+ 999D 22 CA 89     	ld (Puntero_objeto),hl
 148+ 99A0 C9           	ret
 149+ 99A1
 150+ 99A1              ; ******************************************************************************************************************************************************************************************
 151+ 99A1              ;
 152+ 99A1              ;	19/10/22
 153+ 99A1              ;
 154+ 99A1              ;	Mov_right.
 155+ 99A1              ;
 156+ 99A1              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 99A1              ;
 158+ 99A1
 159+ 99A1 21 F4 89     Mov_right ld hl,Ctrl_0
 160+ 99A4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 99A6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 99A6              ; 																	; _ en el caso de que no lo haya.
 163+ 99A6 3A F4 89     	ld a,(Ctrl_0)
 164+ 99A9 CB 77        	bit 6,a
 165+ 99AB 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 99AD
 167+ 99AD CD DB 9B     	call Stop_Amadeus_right
 168+ 99B0 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 99B1 18 4D        	jr 8F
 170+ 99B3
 171+ 99B3 3A CC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 99B6 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 99B8 20 46        	jr nz,8F
 174+ 99BA
 175+ 99BA 3A CE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 99BD A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 99BE 28 40        	jr z,8F
 178+ 99C0
 179+ 99C0              ; ---------- ---------- ----------
 180+ 99C0              ;
 181+ 99C0              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 99C0
 183+ 99C0 3A DC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 99C3 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 99C5 28 11        	jr z,1F
 186+ 99C7 38 06        	jr c,6F
 187+ 99C9 FE 04        	cp 4
 188+ 99CB 28 14        	jr z,7F
 189+ 99CD 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99CF
 191+ 99CF              ; ---------- ---------- ----------
 192+ 99CF              ;
 193+ 99CF              ; Perfiles de velocidad
 194+ 99CF              ;
 195+ 99CF
 196+ 99CF 3A CE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99D2 FE FE        	cp $fe
 198+ 99D4 20 2A        	jr nz,8F
 199+ 99D6 18 10        	jr 3F
 200+ 99D8 3A CE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99DB FE FD        	cp $fd
 202+ 99DD 20 21        	jr nz,8F
 203+ 99DF 18 07        	jr 3F
 204+ 99E1 3A CE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99E4 FE FB        	cp $fb
 206+ 99E6 20 18        	jr nz,8F
 207+ 99E8
 208+ 99E8              ; ---------- ---------- ----------
 209+ 99E8
 210+ 99E8              3
 211+ 99E8 CD 1B 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99EB              ;	call Reinicio
 213+ 99EB
 214+ 99EB              ; ---------- ---------- ----------
 215+ 99EB              ;
 216+ 99EB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99EB
 218+ 99EB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99ED C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99EE CD 07 9A     	call DESPLZ_DER
 221+ 99F1 C1           	pop bc
 222+ 99F2 10 F9        	djnz 5B
 223+ 99F4 2A C8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99F7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99F8 22 C8 89     	ld (Posicion_actual),hl
 226+ 99FB CD 7A 9C     	call Genera_coordenadas
 227+ 99FE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 9A00
 229+ 9A00              ; ---------- ---------- ----------
 230+ 9A00
 231+ 9A00 2A C8 89     8 ld hl,(Posicion_actual)
 232+ 9A03 CD 07 9A     	call DESPLZ_DER
 233+ 9A06 C9           2 ret
 234+ 9A07
 235+ 9A07              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 9A07              ;
 237+ 9A07              ;	22/9/22
 238+ 9A07              ;
 239+ 9A07
 240+ 9A07 CD 16 9A     DESPLZ_DER call Desplaza_derecha
 241+ 9A0A CD 62 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 9A0D CD 8B 9A         call Ciclo_completo
 243+ 9A10 21 F4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9A13 CB FE        	set 7,(hl)
 245+ 9A15 C9           	ret
 246+ 9A16
 247+ 9A16              ; ******************************************************************************************************************************************************************************************
 248+ 9A16              ;	15/02/23
 249+ 9A16              ;
 250+ 9A16
 251+ 9A16 3A DC 89     Desplaza_derecha ld a,(Vel_right)
 252+ 9A19 47           	ld b,a
 253+ 9A1A 2A D4 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9A1D 23           1 inc hl
 255+ 9A1E 23           	inc hl
 256+ 9A1F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9A21 22 D4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9A24 CD 35 8D     	call Extrae_address
 259+ 9A27 22 CA 89     	ld (Puntero_objeto),hl
 260+ 9A2A
 261+ 9A2A              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9A2A
 263+ 9A2A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9A2A              ; Cuántos movimientos hemos hecho ??
 265+ 9A2A              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9A2A
 267+ 9A2A 2A D0 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A2D EB           	ex de,hl
 269+ 9A2E A7           	and a
 270+ 9A2F ED 52        	sbc hl,de
 271+ 9A31 CB 3D        	srl l
 272+ 9A33 3E 08        6 ld a,8
 273+ 9A35 95           	sub l
 274+ 9A36 30 1E        	jr nc,3F
 275+ 9A38
 276+ 9A38              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A38              ; B="0".
 278+ 9A38
 279+ 9A38 04           4 inc b
 280+ 9A39 3C           	inc a
 281+ 9A3A 20 FC        	jr nz,4B
 282+ 9A3C 78           	ld a,b
 283+ 9A3D 08           	ex af,af
 284+ 9A3E 2A D0 89     	ld hl,(Indice_Sprite_der)
 285+ 9A41 23           5 inc hl
 286+ 9A42 23           	inc hl
 287+ 9A43 10 FC        	djnz 5B
 288+ 9A45 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A48 CD 35 8D     	call Extrae_address
 290+ 9A4B 22 CA 89     	ld (Puntero_objeto),hl
 291+ 9A4E
 292+ 9A4E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A4E              ; _(Posicion_actual).
 294+ 9A4E
 295+ 9A4E 21 C8 89     	ld hl,Posicion_actual
 296+ 9A51 34           	inc (hl)
 297+ 9A52 08               ex af,af
 298+ 9A53 6F           	ld l,a
 299+ 9A54 18 DD        	jr 6B
 300+ 9A56
 301+ 9A56              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A56
 303+ 9A56 47           3 ld b,a
 304+ 9A57 2A D2 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A5A 23           2 inc hl
 306+ 9A5B 23           	inc hl
 307+ 9A5C 10 FC        	djnz 2B
 308+ 9A5E 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A61 C9           8 ret
 310+ 9A62
 311+ 9A62              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A62              ;
 313+ 9A62              ;	24/7/22
 314+ 9A62              ;
 315+ 9A62              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A62              ;
 317+ 9A62              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A62              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A62              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A62
 321+ 9A62 3A CE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A65 A7           	and a
 323+ 9A66 20 1F        	jr nz,1F
 324+ 9A68 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A6A 32 CE 89         ld (CTRL_DESPLZ),a
 326+ 9A6D
 327+ 9A6D 21 C7 89     	ld hl,Columns
 328+ 9A70 34           	inc (hl)
 329+ 9A71 3A DA 89     	ld a,(Cuad_objeto)
 330+ 9A74 E6 01        	and 1
 331+ 9A76 28 0F        	jr z,1F
 332+ 9A78 2A C8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A7B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A7C 22 C8 89     	ld (Posicion_actual),hl
 335+ 9A7F CD 7A 9C     	call Genera_coordenadas
 336+ 9A82 CD E7 9B     	call Inc_CTRL_DESPLZ
 337+ 9A85 18 03        	jr 2F
 338+ 9A87 CD E7 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A8A C9           2 ret
 340+ 9A8B
 341+ 9A8B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A8B              ;
 343+ 9A8B              ;	24/7/22
 344+ 9A8B              ;
 345+ 9A8B              ;	Ciclo_completo.
 346+ 9A8B              ;
 347+ 9A8B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A8B              ;
 349+ 9A8B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A8B              ; 	Decrementamos (Columns).
 351+ 9A8B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A8B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A8B
 354+ 9A8B
 355+ 9A8B 3A CE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A8E FE FF        	cp $ff
 357+ 9A90 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A92 E6 F0        	and $f0
 359+ 9A94 20 28        	jr nz,3F
 360+ 9A96
 361+ 9A96              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A96
 363+ 9A96 3A CE 89     	ld a,(CTRL_DESPLZ)
 364+ 9A99 47           	ld b,a
 365+ 9A9A 3E F8        	ld a,$f8
 366+ 9A9C 80           	add b
 367+ 9A9D 32 CE 89     	ld (CTRL_DESPLZ),a
 368+ 9AA0 18 1C        	jr 3F
 369+ 9AA2 21 C7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9AA5 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9AA6 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9AA7 32 CE 89     	ld (CTRL_DESPLZ),a
 373+ 9AAA 3A DA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9AAD E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9AAF 20 0A        	jr nz,2F
 376+ 9AB1 2A C8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9AB4 23           	inc hl
 378+ 9AB5 22 C8 89     	ld (Posicion_actual),hl
 379+ 9AB8 CD 7A 9C     	call Genera_coordenadas
 380+ 9ABB
 381+ 9ABB              ; Inicia el puntero de Sprite.
 382+ 9ABB
 383+ 9ABB CD 4C 8D     2 call Inicia_puntero_objeto_der
 384+ 9ABE C9           3 ret
 385+ 9ABF
 386+ 9ABF              ; ******************************************************************************************************************************************************************************************
 387+ 9ABF              ;
 388+ 9ABF              ;	15/02/23
 389+ 9ABF              ;
 390+ 9ABF              ;	Mov_left.
 391+ 9ABF              ;
 392+ 9ABF              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9ABF              ;
 394+ 9ABF 21 F4 89     Mov_left ld hl,Ctrl_0
 395+ 9AC2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9AC4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9AC4              ; 																	; _ en el caso de que no lo haya.
 398+ 9AC4 3A F4 89     	ld a,(Ctrl_0)
 399+ 9AC7 CB 77        	bit 6,a
 400+ 9AC9 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9ACB
 402+ 9ACB CD E1 9B     	call Stop_Amadeus_left
 403+ 9ACE C8           	ret z
 404+ 9ACF 20 4A        	jr nz,8F
 405+ 9AD1
 406+ 9AD1 3A CC 89     11 ld a,(Coordenada_X)
 407+ 9AD4 A7           	and a
 408+ 9AD5 20 44        	jr nz,8F
 409+ 9AD7
 410+ 9AD7 3A CE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9ADA A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9ADB 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9ADD
 414+ 9ADD              ; ---------- ---------- ----------
 415+ 9ADD
 416+ 9ADD 3A DB 89     	ld a,(Vel_left)
 417+ 9AE0 FE 02        	cp 2
 418+ 9AE2 28 0F        	jr z,1F
 419+ 9AE4 38 04        	jr c,6F
 420+ 9AE6 FE 04        	cp 4
 421+ 9AE8 28 12        	jr z,7F
 422+ 9AEA
 423+ 9AEA              ; ---------- ---------- ----------
 424+ 9AEA
 425+ 9AEA 3A CE 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AED FE F8        	cp $f8
 427+ 9AEF 20 2A        	jr nz,8F
 428+ 9AF1 18 10        	jr 4F
 429+ 9AF3 3A CE 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AF6 FE F9        	cp $f9
 431+ 9AF8 20 21        	jr nz,8F
 432+ 9AFA 18 07        	jr 4F
 433+ 9AFC 3A CE 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AFF FE FB        	cp $fb
 435+ 9B01 20 18        	jr nz,8F
 436+ 9B03
 437+ 9B03              ; ---------- ---------- ----------
 438+ 9B03
 439+ 9B03              4
 440+ 9B03 CD 09 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9B06              ;	call Reinicio
 442+ 9B06
 443+ 9B06              ; ---------- ---------- ----------
 444+ 9B06
 445+ 9B06 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9B08 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9B09
 448+ 9B09              ;	ld hl,(Indice_Sprite_izq)
 449+ 9B09              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9B09
 451+ 9B09 CD 22 9B     	call DESPLZ_IZQ
 452+ 9B0C C1           	pop bc
 453+ 9B0D 10 F9        	djnz 5B
 454+ 9B0F 2A C8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9B12 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9B13 22 C8 89     	ld (Posicion_actual),hl
 457+ 9B16 CD 7A 9C     	call Genera_coordenadas
 458+ 9B19 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9B1B
 460+ 9B1B              ; ---------- ---------- ----------
 461+ 9B1B
 462+ 9B1B              ; Movemos, no hay recolocación.
 463+ 9B1B
 464+ 9B1B 2A C8 89     8 ld hl,(Posicion_actual)
 465+ 9B1E CD 22 9B     	call DESPLZ_IZQ
 466+ 9B21 C9           2 ret
 467+ 9B22
 468+ 9B22              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9B22              ;
 470+ 9B22              ;	22/9/22
 471+ 9B22
 472+ 9B22              DESPLZ_IZQ
 473+ 9B22
 474+ 9B22 CD 31 9B     	call Desplaza_izquierda
 475+ 9B25 CD 7D 9B         call modifica_parametros_1er_DESPLZ
 476+ 9B28 CD A5 9B     	call Ciclo_completo_2
 477+ 9B2B 21 F4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B2E CB BE        	res 7,(hl)
 479+ 9B30 C9           	ret
 480+ 9B31
 481+ 9B31              Desplaza_izquierda
 482+ 9B31
 483+ 9B31 3A DB 89     	ld a,(Vel_left)
 484+ 9B34 47           	ld b,a
 485+ 9B35 2A D6 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B38 23           1 inc hl
 487+ 9B39 23           	inc hl
 488+ 9B3A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B3C 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B3F CD 35 8D     	call Extrae_address
 491+ 9B42 22 CA 89     	ld (Puntero_objeto),hl
 492+ 9B45
 493+ 9B45              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B45
 495+ 9B45              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B45              ; Cuántos movimientos hemos hecho ??
 497+ 9B45              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B45
 499+ 9B45 2A D2 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B48 EB           	ex de,hl
 501+ 9B49 A7           	and a
 502+ 9B4A ED 52        	sbc hl,de
 503+ 9B4C CB 3D        	srl l
 504+ 9B4E 3E 08        6 ld a,8
 505+ 9B50 95           	sub l
 506+ 9B51 30 1E        	jr nc,3F
 507+ 9B53
 508+ 9B53              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B53              ; B="0".
 510+ 9B53
 511+ 9B53 04           4 inc b
 512+ 9B54 3C           	inc a
 513+ 9B55 20 FC        	jr nz,4B
 514+ 9B57 78           	ld a,b
 515+ 9B58 08           	ex af,af
 516+ 9B59 2A D2 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B5C 23           5 inc hl
 518+ 9B5D 23           	inc hl
 519+ 9B5E 10 FC        	djnz 5B
 520+ 9B60 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B63 CD 35 8D     	call Extrae_address
 522+ 9B66 22 CA 89     	ld (Puntero_objeto),hl
 523+ 9B69
 524+ 9B69              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B69              ; _(Posicion_actual).
 526+ 9B69
 527+ 9B69 21 C8 89     	ld hl,Posicion_actual
 528+ 9B6C 35           	dec (hl)
 529+ 9B6D 08           	ex af,af
 530+ 9B6E 6F           	ld l,a
 531+ 9B6F 18 DD        	jr 6B
 532+ 9B71
 533+ 9B71              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B71
 535+ 9B71 47           3 ld b,a
 536+ 9B72 2A D0 89     	ld hl,(Indice_Sprite_der)
 537+ 9B75 23           2 inc hl
 538+ 9B76 23           	inc hl
 539+ 9B77 10 FC        	djnz 2B
 540+ 9B79 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B7C C9           8 ret
 542+ 9B7D
 543+ 9B7D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B7D              ;
 545+ 9B7D              ;	modifica_parametros_1er_DESPLZ
 546+ 9B7D              ;
 547+ 9B7D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B7D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B7D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B7D
 551+ 9B7D 3A CE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B80 A7           	and a
 553+ 9B81 20 1E        	jr nz,1F
 554+ 9B83 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B84 32 CE 89         ld (CTRL_DESPLZ),a
 556+ 9B87 21 C7 89     	ld hl,Columns
 557+ 9B8A 34           	inc (hl)
 558+ 9B8B 3A DA 89     	ld a,(Cuad_objeto)
 559+ 9B8E E6 01        	and 1
 560+ 9B90 20 0F        	jr nz,1F
 561+ 9B92 2A C8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B95 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B96 22 C8 89     	ld (Posicion_actual),hl
 564+ 9B99 CD 7A 9C     	call Genera_coordenadas
 565+ 9B9C CD F8 9B     	call Dec_CTRL_DESPLZ
 566+ 9B9F 18 03        	jr 2F
 567+ 9BA1 CD F8 9B     1 call Dec_CTRL_DESPLZ
 568+ 9BA4 C9           2 ret
 569+ 9BA5
 570+ 9BA5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9BA5
 572+ 9BA5 3A CE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9BA8 FE F7        	cp $f7
 574+ 9BAA 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9BAC 30 2C        	jr nc,3F
 576+ 9BAE
 577+ 9BAE              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9BAE
 579+ 9BAE 06 00        	ld b,0
 580+ 9BB0 04           4 inc b
 581+ 9BB1 3C           	inc a
 582+ 9BB2 FE F7        	cp $f7
 583+ 9BB4 20 FA        	jr nz,4B
 584+ 9BB6 3E FF        	ld a,$ff
 585+ 9BB8 90           	sub b
 586+ 9BB9 32 CE 89     	ld (CTRL_DESPLZ),a
 587+ 9BBC 18 1C        	jr 3F
 588+ 9BBE
 589+ 9BBE              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9BBE
 591+ 9BBE 21 C7 89     1 ld hl,Columns
 592+ 9BC1 35           	dec (hl)
 593+ 9BC2 AF           	xor a
 594+ 9BC3 32 CE 89     	ld (CTRL_DESPLZ),a
 595+ 9BC6 3A DA 89     	ld a,(Cuad_objeto)
 596+ 9BC9 E6 01        	and 1
 597+ 9BCB 28 0A        	jr z,2F
 598+ 9BCD 2A C8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BD0 2B           	dec hl
 600+ 9BD1 22 C8 89     	ld (Posicion_actual),hl
 601+ 9BD4 CD 7A 9C     	call Genera_coordenadas
 602+ 9BD7
 603+ 9BD7              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BD7
 605+ 9BD7 CD 5F 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BDA C9           3 ret
 607+ 9BDB
 608+ 9BDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BDB              ;
 610+ 9BDB              ;	19/10/22
 611+ 9BDB              ;
 612+ 9BDB              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BDB              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BDB
 615+ 9BDB 3A CC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BDE FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BE0 C9           	ret
 618+ 9BE1
 619+ 9BE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BE1              ;
 621+ 9BE1              ;	19/10/22
 622+ 9BE1              ;
 623+ 9BE1              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BE1              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BE1
 626+ 9BE1 3A CC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BE4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BE6 C9           	ret
 629+ 9BE7
 630+ 9BE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BE7              ;
 632+ 9BE7              ;	24/7/22
 633+ 9BE7              ;
 634+ 9BE7              ;	Inc_CTRL_DESPLZ
 635+ 9BE7              ;
 636+ 9BE7              ;
 637+ 9BE7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BE7
 639+ 9BE7 21 CE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BEA 3A DC 89     	ld a,(Vel_right)
 641+ 9BED A7           	and a
 642+ 9BEE 28 06        	jr z,1F
 643+ 9BF0 47           	ld b,a
 644+ 9BF1 34           3 inc (hl)
 645+ 9BF2 10 FD        	djnz 3B
 646+ 9BF4 18 01        	jr 2F
 647+ 9BF6 34           1 inc (hl)
 648+ 9BF7 C9           2 ret
 649+ 9BF8
 650+ 9BF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BF8              ;
 652+ 9BF8              ;	5/2/23
 653+ 9BF8              ;
 654+ 9BF8              ;	Dec_CTRL_DESPLZ
 655+ 9BF8              ;
 656+ 9BF8              ;
 657+ 9BF8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BF8
 659+ 9BF8 21 CE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BFB 3A DB 89     	ld a,(Vel_left)
 661+ 9BFE A7           	and a
 662+ 9BFF 28 06        	jr z,1F
 663+ 9C01 47           	ld b,a
 664+ 9C02 35           3 dec (hl)
 665+ 9C03 10 FD        	djnz 3B
 666+ 9C05 18 01        	jr 2F
 667+ 9C07 35           1 dec (hl)
 668+ 9C08 C9           2 ret
 669+ 9C09
 670+ 9C09              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9C09
 672+ 9C09 2A C8 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9C0C 01 1F 00     	ld bc,31
 674+ 9C0F A7           	and a
 675+ 9C10 ED 4A        	adc hl,bc
 676+ 9C12 22 C8 89     	ld (Posicion_actual),hl
 677+ 9C15 21 F4 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9C18 CB C6        	set 0,(hl)
 679+ 9C1A C9           	ret
 680+ 9C1B
 681+ 9C1B              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9C1B
 683+ 9C1B 2A C8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9C1E 01 1F 00     	ld bc,31
 685+ 9C21 A7           	and a
 686+ 9C22 ED 42        	sbc hl,bc
 687+ 9C24 22 C8 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9C27 21 F4 89     	ld hl,Ctrl_0
 689+ 9C2A CB CE        	set 1,(hl)
 690+ 9C2C C9           	ret
 691+ 9C2D
 692+ 9C2D              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C2D
 694+ 9C2D 24           Reaparece_abajo inc h
 695+ 9C2E 01 E0 17     	ld bc,$17e0
 696+ 9C31 A7           	and a
 697+ 9C32 ED 4A        	adc hl,bc
 698+ 9C34 22 C8 89     	ld (Posicion_actual),hl
 699+ 9C37 21 F4 89     	ld hl,Ctrl_0
 700+ 9C3A CB D6        	set 2,(hl)
 701+ 9C3C C9           	ret
 702+ 9C3D
 703+ 9C3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C3D
 705+ 9C3D 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C40 A7           	and a
 707+ 9C41 ED 42        	sbc hl,bc
 708+ 9C43 22 C8 89     	ld (Posicion_actual),hl
 709+ 9C46 21 F4 89     	ld hl,Ctrl_0
 710+ 9C49 CB DE        	set 3,(hl)
 711+ 9C4B C9           	ret
 712+ 9C4C
 713+ 9C4C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C4C              ;
 715+ 9C4C              ;	12/07/23
 716+ 9C4C
 717+ 9C4C              Reinicio
 718+ 9C4C
 719+ 9C4C              ; Vamos a reiniciar los punteros y variables de movimiento.
 720+ 9C4C
 721+ 9C4C AF           	xor a
 722+ 9C4D 21 FB 89     	ld hl,Puntero_indice_mov_bucle
 723+ 9C50 CD 76 9C     	call Limpia_contenido_hl
 724+ 9C53
 725+ 9C53 21 C8 89     	ld hl,Posicion_actual
 726+ 9C56 CD 76 9C     	call Limpia_contenido_hl
 727+ 9C59
 728+ 9C59 CD 0D 9F     	call Inicializa_Puntero_indice_mov
 729+ 9C5C CD 95 9E     	call Inicia_Puntero_mov
 730+ 9C5F
 731+ 9C5F 21 FD 89     	ld hl,Incrementa_puntero
 732+ 9C62 06 05        	ld b,5
 733+ 9C64 77           1 ld (hl),a
 734+ 9C65 23           	inc hl
 735+ 9C66 10 FC        	djnz 1B
 736+ 9C68
 737+ 9C68
 738+ 9C68 CD 3B 8D     	call Inicia_Puntero_objeto
 739+ 9C6B CD 05 99     	call Recompone_posicion_inicio
 740+ 9C6E
 741+ 9C6E
 742+ 9C6E 21 06 8A     	ld hl,Ctrl_2
 743+ 9C71 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 744+ 9C73 CB E6        	set 4,(hl)							; Indica que se produce reinicio.
 745+ 9C75
 746+ 9C75 C9           	ret
 747+ 9C76
 748+ 9C76 77           Limpia_contenido_hl	ld (hl),a
 749+ 9C77 23           	inc hl
 750+ 9C78 77           	ld (hl),a
 751+ 9C79 C9           	ret
 752+ 9C7A
 753+ 9C7A
# file closed: Direcciones.asm
1282  9C7A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C7A              ; ------------------------------------------------------------------------
   2+ 9C7A              ;
   3+ 9C7A              ;	02/04/23
   4+ 9C7A              ;
   5+ 9C7A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C7A              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C7A              ;
   8+ 9C7A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C7A              ;
  10+ 9C7A              ;	Modifica: A,BC y DE.
  11+ 9C7A
  12+ 9C7A C5           Genera_coordenadas push bc
  13+ 9C7B E5           	push hl
  14+ 9C7C D5           	push de
  15+ 9C7D
  16+ 9C7D 2A C8 89     	ld hl,(Posicion_actual)
  17+ 9C80
  18+ 9C80 7D           	ld a,l
  19+ 9C81 E6 1F        	and $1f
  20+ 9C83 32 CC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C86
  22+ 9C86 CD E7 98     	call calcula_tercio
  23+ 9C89 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C8A
  25+ 9C8A 1E 00        	ld e,0
  26+ 9C8C 7D           	ld a,l
  27+ 9C8D E6 E0        	and $e0
  28+ 9C8F 28 01        	jr z,1F
  29+ 9C91 04           	inc b
  30+ 9C92
  31+ 9C92 04           1 inc b
  32+ 9C93 05           	dec b
  33+ 9C94 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C96              ;														; _ , salimos.
  35+ 9C96 1C           3 inc e
  36+ 9C97 D6 20        	sub 32
  37+ 9C99 20 FB        	jr nz,3B
  38+ 9C9B 10 F5        	djnz 1B
  39+ 9C9D
  40+ 9C9D 7B           2 ld a,e
  41+ 9C9E 32 CD 89     	ld (Coordenada_y),a
  42+ 9CA1
  43+ 9CA1 D1           	pop de
  44+ 9CA2 E1           	pop hl
  45+ 9CA3 C1           	pop bc
  46+ 9CA4
  47+ 9CA4 C9           	ret
  48+ 9CA5
  49+ 9CA5              ; ------------------------------------------------------------------------
  50+ 9CA5              ;	28/05/23
  51+ 9CA5              ;
  52+ 9CA5              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CA5              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CA5              ;
  55+ 9CA5              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CA5              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CA5              ;
  58+ 9CA5              ;		DE="$120d"
  59+ 9CA5              ;
  60+ 9CA5              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CA5              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CA5              ;
  63+ 9CA5              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CA5
  65+ 9CA5              ;	Modifica: A,BC y DE.
  66+ 9CA5
  67+ 9CA5
  68+ 9CA5              Genera_coordenadas_disparo
  69+ 9CA5
  70+ 9CA5              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CA5
  72+ 9CA5 7D           	ld a,l
  73+ 9CA6 E6 1F        	and $1f
  74+ 9CA8 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CA9 CD E7 98     	call calcula_tercio
  76+ 9CAC 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CAD 1E 00        	ld e,0
  78+ 9CAF 7D           	ld a,l
  79+ 9CB0 E6 E0        	and $e0
  80+ 9CB2 28 01        	jr z,1F
  81+ 9CB4 04           	inc b
  82+ 9CB5 1C           1 inc e
  83+ 9CB6 D6 20        	sub 32
  84+ 9CB8 20 FB        	jr nz,1B
  85+ 9CBA 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CBC C9           	ret
  87+ 9CBD
# file closed: Genera_coordenadas.asm
1283  9CBD              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CBD
   2+ 9CBD
   3+ 9CBD              ;   07/07/23
   4+ 9CBD              ;
   5+ 9CBD              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CBD              ;
   7+ 9CBD              ;   Codificación:
   8+ 9CBD              ;
   9+ 9CBD              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CBD              ;
  11+ 9CBD              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CBD              ;
  13+ 9CBD              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CBD              ;
  15+ 9CBD              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CBD              ;
  17+ 9CBD              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CBD              ;                               ..... %01000010 Vel_up 4
  19+ 9CBD              ;                                               Vel_down 2
  20+ 9CBD              ;                               ..... $42
  21+ 9CBD              ;
  22+ 9CBD              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CBD              ;
  24+ 9CBD              ;                               ..... %01000010 Vel_left 4
  25+ 9CBD              ;                                               Vel_right 2
  26+ 9CBD              ;                               ..... $42
  27+ 9CBD              ;
  28+ 9CBD              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CBD              ;
  30+ 9CBD              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CBD              ;
  32+ 9CBD              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CBD              ;
  34+ 9CBD              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CBD              ;                                     $53
  36+ 9CBD              ;
  37+ 9CBD              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CBD              ;
  39+ 9CBD              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CBD              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CBD              ;
  42+ 9CBD              ;                       Arriba ..... $81
  43+ 9CBD              ;                       Arriba - izquierda ..... $a1
  44+ 9CBD              ;                       Arriba - derecha ..... $91
  45+ 9CBD              ;
  46+ 9CBD              ;                       Abajo ..... $41
  47+ 9CBD              ;                       Abajo - izquierda ..... $61
  48+ 9CBD              ;                       Abajo - derecha ..... $51
  49+ 9CBD              ;
  50+ 9CBD              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CBD              ;
  52+ 9CBD              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CBD              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CBD              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CBD              ;
  56+ 9CBD              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CBD              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CBD              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CBD              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CBD              ;
  61+ 9CBD              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del DESPLAZAMIENTO.
  62+ 9CBD              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CBD              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CBD              ;
  65+ 9CBD              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CBD              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CBD              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CBD              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CBD
  70+ 9CBD              ; ----- ----- ----- ----- -----
  71+ 9CBD
  72+ 9CBD D1 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CBF
  74+ 9CBF DD 9C            defw Codo_abajo_derecha
  75+ 9CC1
  76+ 9CC1 13 9D            defw Derecha_y_subiendo
  77+ 9CC3 1D 9D            defw Derecha_y_subiendo_1
  78+ 9CC5
  79+ 9CC5 27 9D            defw Codo_derecha_abajo
  80+ 9CC7 57 9D            defw Codo_abajo_izq.
  81+ 9CC9
  82+ 9CC9 8B 9D            defw Izquierda_y_subiendo
  83+ 9CCB 95 9D            defw Izquierda_y_subiendo_1
  84+ 9CCD
  85+ 9CCD 9F 9D            defw Codo_izquierda_abajo
  86+ 9CCF
  87+ 9CCF 00 00            defw 0                                  ; Fin de patrón de movimiento.
  88+ 9CD1
  89+ 9CD1 14 11 45 01  Bajo_decelerando db $14,$11,$45,1           ; Abajo. 5rep. vel.4
  90+ 9CD5 12 11 47 01      db $12,$11,$47,1                        ; Abajo. 7rep. vel.2
  91+ 9CD9 11 11 47 FE      db $11,$11,$47,254                      ; Abajo  7rep. --- Termina movimiento.
  92+ 9CDD
  93+ 9CDD 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
  94+ 9CE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
  95+ 9CE5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  96+ 9CE9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
  97+ 9CED 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  98+ 9CF1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
  99+ 9CF5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 100+ 9CF9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 101+ 9CFD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 102+ 9D01 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 103+ 9D05 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 104+ 9D09 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 105+ 9D0D 11 11 92 FD      db $11,$11,$92,253,20,0                       ; Arriba/Derecha. 2rep. --- Termina movimiento.
 105+ 9D11 14 00
 106+ 9D13
 107+ 9D13
 108+ 9D13 11 12 14 01  Derecha_y_subiendo db $11,$12,$14,1         ; Derecha. 4rep. vel.2
 109+ 9D17 11 11 91 FD      db $11,$11,$91,253,12,0                 ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 109+ 9D1B 0C 00
 110+ 9D1D 11 11 1A 01  Derecha_y_subiendo_1 db $11,$11,$1a,1       ; Derecha. 8rep.
 111+ 9D21 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 7rep. --- Termina movimiento.
 111+ 9D25 06 00
 112+ 9D27
 113+ 9D27              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 114+ 9D27
 115+ 9D27
 116+ 9D27 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 117+ 9D2B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 118+ 9D2F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 119+ 9D33 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 120+ 9D37 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 9D3B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 122+ 9D3F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 123+ 9D43 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 124+ 9D47 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 125+ 9D4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 126+ 9D4F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 127+ 9D53 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 128+ 9D57
 129+ 9D57 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 130+ 9D5B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 131+ 9D5F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 132+ 9D63 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 133+ 9D67 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 134+ 9D6B 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 135+ 9D6F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 136+ 9D73 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 137+ 9D77 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 138+ 9D7B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 139+ 9D7F 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 140+ 9D83 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 141+ 9D87 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 142+ 9D8B
 143+ 9D8B 11 21 24 01  Izquierda_y_subiendo db $11,$21,$24,1          ; Izq. 4rep.
 144+ 9D8F 11 11 A1 FD      db $11,$11,$a1,253,12,0                    ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 144+ 9D93 0C 00
 145+ 9D95 11 11 2A 01  Izquierda_y_subiendo_1 db $11,$11,$2a,1        ; Izq. 6rep.
 146+ 9D99 11 11 A1 FD      db $11,$11,$a1,253,6,0                     ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 146+ 9D9D 06 00
 147+ 9D9F
 148+ 9D9F 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 149+ 9DA3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 150+ 9DA7 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 151+ 9DAB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 152+ 9DAF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 153+ 9DB3 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 154+ 9DB7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 155+ 9DBB 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 156+ 9DBF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 157+ 9DC3 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 158+ 9DC7 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 159+ 9DCB 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 160+ 9DCF
 161+ 9DCF              ; ----- ----- ----- ----- -----
 162+ 9DCF              ;
 163+ 9DCF              ;   27/06/23
 164+ 9DCF
 165+ 9DCF              Movimiento
 166+ 9DCF
 167+ 9DCF              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 168+ 9DCF
 169+ 9DCF              ;    jr $
 170+ 9DCF
 171+ 9DCF 3A 06 8A         ld a,(Ctrl_2)
 172+ 9DD2 CB 67            bit 4,a
 173+ 9DD4              ;    jr nz,$
 174+ 9DD4
 175+ 9DD4              ;    call nz, Inicializa_Puntero_indice_mov
 176+ 9DD4
 177+ 9DD4              ;    ld hl,(Puntero_mov)
 178+ 9DD4              ;    ld a,(hl)
 179+ 9DD4              ;    and a
 180+ 9DD4              ;    call z, Inicializa_Puntero_indice_mov                       ; Hemos terminado de ejecutar todas las cadenas de movimiento.
 181+ 9DD4
 182+ 9DD4 3A 06 8A         ld a,(Ctrl_2)
 183+ 9DD7 CB 57            bit 2,a
 184+ 9DD9 20 1B            jr nz, Desplazamiento_iniciado
 185+ 9DDB
 186+ 9DDB 2A F9 89         ld hl,(Puntero_mov)
 187+ 9DDE 7E               ld a,(hl)
 188+ 9DDF
 189+ 9DDF              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 190+ 9DDF
 191+ 9DDF              Inicia_desplazamiento.
 192+ 9DDF
 193+ 9DDF              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 194+ 9DDF
 195+ 9DDF CD CE 9E         call Ajusta_velocidad_desplazamiento
 196+ 9DE2
 197+ 9DE2              ; Iniciamos (Repetimos_mov).
 198+ 9DE2
 199+ 9DE2 7E               ld a,(hl)
 200+ 9DE3 E6 0F            and $0f
 201+ 9DE5 32 FE 89         ld (Repetimos_desplazamiento),a
 202+ 9DE8 32 FF 89         ld (Repetimos_desplazamiento_backup),a
 203+ 9DEB
 204+ 9DEB              ; Iniciamos (Cola_de_desplazamiento).
 205+ 9DEB
 206+ 9DEB 23               inc hl
 207+ 9DEC 7E               ld a,(hl)
 208+ 9DED 32 01 8A         ld (Cola_de_desplazamiento),a
 209+ 9DF0 2B               dec hl
 210+ 9DF1
 211+ 9DF1 21 06 8A         ld hl,Ctrl_2
 212+ 9DF4 CB D6            set 2,(hl)
 213+ 9DF6
 214+ 9DF6              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 215+ 9DF6              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 216+ 9DF6
 217+ 9DF6              Desplazamiento_iniciado
 218+ 9DF6
 219+ 9DF6 CD A0 9E         call Aplica_desplazamiento
 220+ 9DF9
 221+ 9DF9 3A 06 8A         ld a,(Ctrl_2)
 222+ 9DFC CB 67            bit 4,a
 223+ 9DFE C0               ret nz                              ; Salimos si se ha producido reinicio.
 224+ 9DFF
 225+ 9DFF 21 FE 89     3 ld hl,Repetimos_desplazamiento
 226+ 9E02 35               dec (hl)
 227+ 9E03 C0               ret nz
 228+ 9E04
 229+ 9E04              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 230+ 9E04              ; Hay que volver a ejecutar este desplazamiento ???.
 231+ 9E04              ; Analiza (Cola_de_desplazamiento).
 232+ 9E04
 233+ 9E04 3A 01 8A     Cola ld a,(Cola_de_desplazamiento)
 234+ 9E07 A7               and a
 235+ 9E08 CC F7 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 236+ 9E0B 28 30            jr z,Reinicia_el_movimiento
 237+ 9E0D
 238+ 9E0D FE FF            cp $ff
 239+ 9E0F 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 240+ 9E11
 241+ 9E11 FE FE            cp $fe
 242+ 9E13 CC 80 9E         call z,Fijamos_bucle
 243+ 9E16 28 25            jr z,Reinicia_el_movimiento
 244+ 9E18
 245+ 9E18 FE FD            cp $fd
 246+ 9E1A 20 11            jr nz,1F
 247+ 9E1C
 248+ 9E1C              ; ---
 249+ 9E1C              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 250+ 9E1C
 251+ 9E1C 3A 06 8A         ld a,(Ctrl_2)
 252+ 9E1F CB 5F            bit 3,a
 253+ 9E21 20 1A            jr nz,Reinicia_el_movimiento
 254+ 9E23
 255+ 9E23              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 256+ 9E23
 257+ 9E23 21 06 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 258+ 9E26 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 259+ 9E28
 260+ 9E28 CD 8A 9E         call Inicia_Repetimos_movimiento
 261+ 9E2B 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 262+ 9E2D              ; ---
 263+ 9E2D
 264+ 9E2D FE 01        1 cp 1
 265+ 9E2F CA 6A 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 266+ 9E32
 267+ 9E32 3D               dec a
 268+ 9E33 32 01 8A         ld (Cola_de_desplazamiento),a
 269+ 9E36
 270+ 9E36 3A FF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 271+ 9E39 32 FE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 272+ 9E3C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 273+ 9E3C C9               ret
 274+ 9E3D
 275+ 9E3D              Reinicia_el_movimiento
 276+ 9E3D
 277+ 9E3D 3A 06 8A         ld a,(Ctrl_2)
 278+ 9E40 CB 5F            bit 3,a
 279+ 9E42 28 1B            jr z,2F
 280+ 9E44
 281+ 9E44              ; (Cola_de_desplazamiento)="254".
 282+ 9E44
 283+ 9E44 21 00 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 284+ 9E47 35               dec (hl)
 285+ 9E48 20 15            jr nz,2F
 286+ 9E4A
 287+ 9E4A              ; Fin de las repeticiones del último movimiento.
 288+ 9E4A
 289+ 9E4A 21 06 8A         ld hl,Ctrl_2
 290+ 9E4D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 291+ 9E4F
 292+ 9E4F 2A F9 89         ld hl,(Puntero_mov)
 293+ 9E52 23               inc hl
 294+ 9E53 23               inc hl
 295+ 9E54 23               inc hl
 296+ 9E55 22 F9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 297+ 9E58              ;                                                               ; _ para ejecutar su mandato. :)
 298+ 9E58 7E               ld a,(hl)
 299+ 9E59 32 01 8A         ld (Cola_de_desplazamiento),a
 300+ 9E5C
 301+ 9E5C C3 04 9E         jp Cola
 302+ 9E5F
 303+ 9E5F
 304+ 9E5F CD 95 9E     2 call Inicia_Puntero_mov
 305+ 9E62
 306+ 9E62 21 06 8A         ld hl,Ctrl_2
 307+ 9E65 CB 96            res 2,(hl)
 308+ 9E67
 309+ 9E67 C3 CF 9D         jp Movimiento
 310+ 9E6A
 311+ 9E6A              Siguiente_desplazamiento
 312+ 9E6A
 313+ 9E6A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 314+ 9E6A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 315+ 9E6A
 316+ 9E6A 21 06 8A         ld hl,Ctrl_2
 317+ 9E6D CB 96            res 2,(hl)
 318+ 9E6F
 319+ 9E6F 2A F9 89         ld hl,(Puntero_mov)
 320+ 9E72 23               inc hl
 321+ 9E73 23               inc hl
 322+ 9E74 22 F9 89         ld (Puntero_mov),hl
 323+ 9E77
 324+ 9E77 7E               ld a,(hl)
 325+ 9E78 A7               and a
 326+ 9E79 CC F7 9E         call z,Incrementa_Puntero_indice_mov
 327+ 9E7C CA 3D 9E         jp z,Reinicia_el_movimiento
 328+ 9E7F
 329+ 9E7F C9               ret
 330+ 9E80              ; Subrutinas -----------------------------------------
 331+ 9E80              ; ---------- --------- --------- ---------- ----------
 332+ 9E80              ;
 333+ 9E80              ;   12/07/23
 334+ 9E80              ;
 335+ 9E80              ;   Fijamos_bucle
 336+ 9E80              ;
 337+ 9E80              ;
 338+ 9E80
 339+ 9E80 CD F7 9E     Fijamos_bucle call Incrementa_Puntero_indice_mov
 340+ 9E83 2A F7 89         ld hl,(Puntero_indice_mov)
 341+ 9E86 22 FB 89         ld (Puntero_indice_mov_bucle),hl
 342+ 9E89 C9               ret
 343+ 9E8A
 344+ 9E8A              ; ---------- --------- --------- ---------- ----------
 345+ 9E8A              ;
 346+ 9E8A              ;   07/7/23
 347+ 9E8A              ;
 348+ 9E8A              ;   Inicia_Repetimos_movimiento
 349+ 9E8A              ;
 350+ 9E8A              ;
 351+ 9E8A
 352+ 9E8A              Inicia_Repetimos_movimiento
 353+ 9E8A
 354+ 9E8A              ; Iniciamos (Repetimos_movimiento).
 355+ 9E8A
 356+ 9E8A DD 2A F9 89      ld ix,(Puntero_mov)
 357+ 9E8E DD 7E 02         ld a,(ix+2)
 358+ 9E91 32 00 8A         ld (Repetimos_movimiento),a
 359+ 9E94
 360+ 9E94 C9               ret
 361+ 9E95
 362+ 9E95              ; ---------- --------- --------- ---------- ----------
 363+ 9E95              ;
 364+ 9E95              ;   26/6/23
 365+ 9E95              ;
 366+ 9E95              ;   Inicia_Puntero_mov
 367+ 9E95              ;
 368+ 9E95              ;
 369+ 9E95
 370+ 9E95 2A F7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 371+ 9E98 5E               ld e,(hl)
 372+ 9E99 23               inc hl
 373+ 9E9A 56               ld d,(hl)
 374+ 9E9B EB               ex de,hl
 375+ 9E9C 22 F9 89         ld (Puntero_mov),hl
 376+ 9E9F C9               ret
 377+ 9EA0
 378+ 9EA0              ; ---------- --------- --------- ---------- ----------
 379+ 9EA0              ;
 380+ 9EA0              ;   27/06/23
 381+ 9EA0              ;
 382+ 9EA0              ;   Aplica_movimiento.
 383+ 9EA0
 384+ 9EA0              Aplica_desplazamiento
 385+ 9EA0
 386+ 9EA0              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 387+ 9EA0
 388+ 9EA0 2A F9 89         ld hl, (Puntero_mov)
 389+ 9EA3 CB 7E            bit 7,(hl)
 390+ 9EA5 28 03            jr z,1F
 391+ 9EA7 CD 5E 99         call Mov_up
 392+ 9EAA 2A F9 89     1 ld hl, (Puntero_mov)
 393+ 9EAD CB 76            bit 6,(hl)
 394+ 9EAF 28 09            jr z,2F
 395+ 9EB1 CD 2D 99         call Mov_down
 396+ 9EB4
 397+ 9EB4 3A 06 8A         ld a,(Ctrl_2)   ; Salimos de la rutina si se produce REINICIO.
 398+ 9EB7 CB 67            bit 4,a
 399+ 9EB9 C0               ret nz
 400+ 9EBA
 401+ 9EBA 2A F9 89     2 ld hl, (Puntero_mov)
 402+ 9EBD CB 6E            bit 5,(hl)
 403+ 9EBF 28 03            jr z,3F
 404+ 9EC1 CD BF 9A         call Mov_left
 405+ 9EC4 2A F9 89     3 ld hl, (Puntero_mov)
 406+ 9EC7 CB 66            bit 4,(hl)
 407+ 9EC9 C8               ret z
 408+ 9ECA CD A1 99         call Mov_right
 409+ 9ECD C9               ret
 410+ 9ECE
 411+ 9ECE              ; ---------- --------- --------- ---------- ----------
 412+ 9ECE              ;
 413+ 9ECE              ;   26/06/23
 414+ 9ECE              ;
 415+ 9ECE              ;   Ajusta_velocidad_desplazamiento.
 416+ 9ECE
 417+ 9ECE              Ajusta_velocidad_desplazamiento
 418+ 9ECE
 419+ 9ECE              ; 1er byte de la cadena de movimiento.
 420+ 9ECE              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 421+ 9ECE
 422+ 9ECE CD EC 9E         call Extrae_nibble_alto
 423+ 9ED1
 424+ 9ED1 32 DD 89         ld (Vel_up),a
 425+ 9ED4 79               ld a,c
 426+ 9ED5 E6 0F            and $0f
 427+ 9ED7 32 DE 89         ld (Vel_down),a
 428+ 9EDA
 429+ 9EDA              ; Saltamos al 2º byte de la cadena de movimiento.
 430+ 9EDA              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 431+ 9EDA
 432+ 9EDA 23               inc hl
 433+ 9EDB CD EC 9E         call Extrae_nibble_alto
 434+ 9EDE
 435+ 9EDE 32 DB 89         ld (Vel_left),a
 436+ 9EE1 79               ld a,c
 437+ 9EE2 E6 0F            and $0f
 438+ 9EE4 32 DC 89         ld (Vel_right),a
 439+ 9EE7
 440+ 9EE7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 441+ 9EE7
 442+ 9EE7 23               inc hl
 443+ 9EE8 22 F9 89         ld (Puntero_mov),hl
 444+ 9EEB C9               ret
 445+ 9EEC
 446+ 9EEC 06 04        Extrae_nibble_alto ld b,4
 447+ 9EEE 7E               ld a,(hl)
 448+ 9EEF 4F               ld c,a
 449+ 9EF0 E6 F0            and $f0
 450+ 9EF2 CB 3F        1 srl a
 451+ 9EF4 10 FC            djnz 1B
 452+ 9EF6 C9               ret
 453+ 9EF7
 454+ 9EF7              ; ---------- --------- --------- ---------- ----------
 455+ 9EF7              ;
 456+ 9EF7              ;   5/7/23
 457+ 9EF7              ;
 458+ 9EF7              ;   Incrementa_Puntero_indice_mov
 459+ 9EF7
 460+ 9EF7              Incrementa_Puntero_indice_mov
 461+ 9EF7
 462+ 9EF7 21 FD 89         ld hl,Incrementa_puntero
 463+ 9EFA 34               inc (hl)
 464+ 9EFB
 465+ 9EFB 2A F7 89         ld hl,(Puntero_indice_mov)
 466+ 9EFE 01 02 00         ld bc,2
 467+ 9F01 A7               and a
 468+ 9F02 09               add hl,bc
 469+ 9F03 22 F7 89         ld (Puntero_indice_mov),hl
 470+ 9F06
 471+ 9F06 7E               ld a,(hl)
 472+ 9F07 A7               and a
 473+ 9F08
 474+ 9F08              ;! STOP. Fin del patrón de movimiento de la entidad.
 475+ 9F08
 476+ 9F08              ;    jr z,$
 477+ 9F08
 478+ 9F08              ;! Reinicia el Patrón de movimiento.
 479+ 9F08
 480+ 9F08 CC 0D 9F         call z,Inicializa_Puntero_indice_mov
 481+ 9F0B
 482+ 9F0B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 483+ 9F0C
 484+ 9F0C C9               ret
 485+ 9F0D
 486+ 9F0D
 487+ 9F0D              ; ---------- --------- --------- ---------- ----------
 488+ 9F0D              ;
 489+ 9F0D              ;   12/07/23
 490+ 9F0D              ;
 491+ 9F0D              ;   Inicializa_Puntero_indice_mov
 492+ 9F0D
 493+ 9F0D              Inicializa_Puntero_indice_mov
 494+ 9F0D
 495+ 9F0D              ; Existe etiqueta de bucle principal???
 496+ 9F0D
 497+ 9F0D              ;    jr $
 498+ 9F0D
 499+ 9F0D              ;    ld hl,Ctrl_2
 500+ 9F0D              ;    res 4,(hl)
 501+ 9F0D
 502+ 9F0D 2A FB 89         ld hl,(Puntero_indice_mov_bucle)
 503+ 9F10 24               inc h
 504+ 9F11 25               dec h
 505+ 9F12 28 05            jr z,2F
 506+ 9F14
 507+ 9F14 22 F7 89         ld (Puntero_indice_mov),hl
 508+ 9F17 18 0E            jr 3F
 509+ 9F19
 510+ 9F19
 511+ 9F19
 512+ 9F19              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 513+ 9F19
 514+ 9F19 3A FD 89     2 ld a,(Incrementa_puntero)
 515+ 9F1C 47               ld b,a
 516+ 9F1D
 517+ 9F1D 2A F7 89         ld hl,(Puntero_indice_mov)
 518+ 9F20 2B           1 dec hl
 519+ 9F21 2B               dec hl
 520+ 9F22 10 FC            djnz 1B
 521+ 9F24
 522+ 9F24 22 F7 89         ld (Puntero_indice_mov),hl
 523+ 9F27
 524+ 9F27 AF           3 xor a
 525+ 9F28 32 FD 89         ld (Incrementa_puntero),a
 526+ 9F2B
 527+ 9F2B C9               ret
 528+ 9F2C
 529+ 9F2C
 530+ 9F2C
# file closed: Patrones_de_mov.asm
1284  9F2C              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F2C              ; Relojes y temporizaciones.
   2+ 9F2C
   3+ 9F2C              ; ------------------------------------------------------
   4+ 9F2C              ;
   5+ 9F2C              ;	27/04/23
   6+ 9F2C              ;
   7+ 9F2C              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 9F2C              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F2C              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F2C              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F2C              ;
  12+ 9F2C              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F2C              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F2C
  15+ 9F2C              Habilita_disparos
  16+ 9F2C
  17+ 9F2C 7E           	ld a,(hl)
  18+ 9F2D A7           	and a
  19+ 9F2E C0           	ret nz
  20+ 9F2F
  21+ 9F2F EB           	ex de,hl
  22+ 9F30
  23+ 9F30 35           	dec (hl)
  24+ 9F31 34           	inc (hl)
  25+ 9F32 35           	dec (hl)
  26+ 9F33 C0           	ret nz
  27+ 9F34
  28+ 9F34 2B           	dec hl
  29+ 9F35 7E           	ld a,(hl)
  30+ 9F36 23           	inc hl
  31+ 9F37 77           	ld (hl),a
  32+ 9F38
  33+ 9F38 EB           	ex de,hl
  34+ 9F39 3E 01        	ld a,1
  35+ 9F3B 77           	ld (hl),a
  36+ 9F3C C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1285  9F3D              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F3D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F3D              ;
   3+ 9F3D              ;	3/1/23
   4+ 9F3D              ;
   5+ 9F3D              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F3D
   7+ 9F3D              ;	ADC HL,SP	LD (addr),SP
   8+ 9F3D              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F3D              ;	ADD IX,SP	LD SP,nn
  10+ 9F3D              ; 	ADD IY,SP	LD SP,HL
  11+ 9F3D              ;				LD SP,IX
  12+ 9F3D              ;	DEC SP		LD SP,IY
  13+ 9F3D
  14+ 9F3D              ;	EX (SP),HL
  15+ 9F3D              ;	EX (SP),IX
  16+ 9F3D              ;	EX (SP),IY
  17+ 9F3D
  18+ 9F3D              ;	INC SP
  19+ 9F3D
  20+ 9F3D
  21+ 9F3D                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 19 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 08 8A         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 1F 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 1D 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 1F 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 1D 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 19 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1286  7FD5
1287  7FD5              	SAVESNA "Pruebas.sna", START
1288  7FD5
1289  7FD5
1290  7FD5
1291  7FD5
# file closed: Banco_de_pruebas.asm
