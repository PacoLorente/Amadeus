# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD C5 8A     	call Frame
  15  A104
  16  A104 3A F0 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  23  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										; 64 Bytes por entidad.
  96+ 8574
  97+ 8574 CC 85        	defw Caja_1
  98+ 8576 0C 86        	defw Caja_2
  99+ 8578 4C 86        	defw Caja_3
 100+ 857A 8C 86        	defw Caja_4
 101+ 857C CC 86        	defw Caja_5
 102+ 857E 0C 87        	defw Caja_6
 103+ 8580 4C 87        	defw Caja_7
 104+ 8582 8C 87        	defw Caja_8
 105+ 8584 CC 87        	defw Caja_9
 106+ 8586 0C 88        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85BC
 145+ 85BC 00           	db 0											; (Autoriza_movimiento).
 146+ 85BD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 147+ 85C1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 148+ 85C4 00           	db 0											; (Repetimos_desplazamiento_backup)
 149+ 85C5 00           	db 0											; (Cola_de_desplazamiento).
 150+ 85C6
 151+ 85C6 00           	db 0 											; (Columnas).
 152+ 85C7 00 00        	defw 0											; (Limite_horizontal).
 153+ 85C9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 154+ 85CC
 155+ 85CC              ; ---------- ---------- ---------- ---------- ----------
 156+ 85CC
 157+ 85CC 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 158+ 85CE 00 00        	defw 0											; (Posicion_actual).
 159+ 85D0 00 00        	defw 0 											; (Puntero_objeto).
 160+ 85D2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 161+ 85D5
 162+ 85D5 00           	db %00000000 									; (Attr).
 163+ 85D6
 164+ 85D6 00 00        	defw 0											; (Indice_Sprite_der).
 165+ 85D8 00 00        	defw 0											; (Indice_Sprite_izq).
 166+ 85DA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 167+ 85DC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 168+ 85DE
 169+ 85DE 00 00        	defw 0											; (Posicion_inicio).
 170+ 85E0 00           	db 0											; (Cuad_objeto).
 171+ 85E1
 172+ 85E1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 173+ 85E5
 174+ 85E5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 175+ 85E6
 176+ 85E6 00 00        	db 0,0										    ; Variables_de_borrado
 177+ 85E8 00 00        	defw 0											;	" " " " " " "
 178+ 85EA 00 00        	defw 0											;	" " " " " " "
 179+ 85EC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 85F0
 181+ 85F0 00 00        	db 0,0											; Variables_de_pintado
 182+ 85F2 00 00        	defw 0											;	" " " " " " "
 183+ 85F4 00 00        	defw 0											;	" " " " " " "
 184+ 85F6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 185+ 85FA
 186+ 85FA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 187+ 85FC
 188+ 85FC 00           	db 0											; (Autoriza_movimiento).
 189+ 85FD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 190+ 8601 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 191+ 8604 00           	db 0											; (Repetimos_desplazamiento_backup)
 192+ 8605 00           	db 0											; (Cola_de_desplazamiento).
 193+ 8606
 194+ 8606 00           	db 0 											; (Columnas).
 195+ 8607 00 00        	defw 0											; (Limite_horizontal).
 196+ 8609 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 197+ 860C
 198+ 860C              ; ---------- ---------- ---------- ---------- ----------
 199+ 860C
 200+ 860C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 201+ 860E 00 00        	defw 0											; (Posicion_actual).
 202+ 8610 00 00        	defw 0 											; (Puntero_objeto).
 203+ 8612 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 204+ 8615
 205+ 8615 00           	db %00000000 									; (Attr).
 206+ 8616
 207+ 8616 00 00        	defw 0											; (Indice_Sprite_der).
 208+ 8618 00 00        	defw 0											; (Indice_Sprite_izq).
 209+ 861A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 210+ 861C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 211+ 861E
 212+ 861E 00 00        	defw 0											; (Posicion_inicio).
 213+ 8620 00           	db 0											; (Cuad_objeto).
 214+ 8621
 215+ 8621 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 216+ 8625
 217+ 8625 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 218+ 8626
 219+ 8626 00 00        	db 0,0										    ; Variables_de_borrado
 220+ 8628 00 00        	defw 0											;	" " " " " " "
 221+ 862A 00 00        	defw 0											;	" " " " " " "
 222+ 862C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8630
 224+ 8630 00 00        	db 0,0											; Variables_de_pintado
 225+ 8632 00 00        	defw 0											;	" " " " " " "
 226+ 8634 00 00        	defw 0											;	" " " " " " "
 227+ 8636 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 228+ 863A
 229+ 863A 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 230+ 863C
 231+ 863C 00           	db 0											; (Autoriza_movimiento).
 232+ 863D 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 233+ 8641 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 234+ 8644 00           	db 0											; (Repetimos_desplazamiento_backup)
 235+ 8645 00           	db 0											; (Cola_de_desplazamiento).
 236+ 8646
 237+ 8646 00           	db 0 											; (Columnas).
 238+ 8647 00 00        	defw 0											; (Limite_horizontal).
 239+ 8649 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 864C
 241+ 864C              ; ---------- ---------- ---------- ---------- ----------
 242+ 864C
 243+ 864C 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 244+ 864E 00 00        	defw 0											; (Posicion_actual).
 245+ 8650 00 00        	defw 0 											; (Puntero_objeto).
 246+ 8652 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 8655
 248+ 8655 00           	db %00000000 									; (Attr).
 249+ 8656
 250+ 8656 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 8658 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 865A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 865C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 865E
 255+ 865E 00 00        	defw 0											; (Posicion_inicio).
 256+ 8660 00           	db 0											; (Cuad_objeto).
 257+ 8661
 258+ 8661 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 8665
 260+ 8665 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 8666
 262+ 8666 00 00        	db 0,0										    ; Variables_de_borrado
 263+ 8668 00 00        	defw 0											;	" " " " " " "
 264+ 866A 00 00        	defw 0											;	" " " " " " "
 265+ 866C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 266+ 8670
 267+ 8670 00 00        	db 0,0											; Variables_de_pintado
 268+ 8672 00 00        	defw 0											;	" " " " " " "
 269+ 8674 00 00        	defw 0											;	" " " " " " "
 270+ 8676 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 271+ 867A
 272+ 867A 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 273+ 867C
 274+ 867C 00           	db 0											; (Autoriza_movimiento).
 275+ 867D 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 276+ 8681 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 277+ 8684 00           	db 0											; (Repetimos_desplazamiento_backup)
 278+ 8685 00           	db 0											; (Cola_de_desplazamiento).
 279+ 8686
 280+ 8686 00           	db 0 											; (Columnas).
 281+ 8687 00 00        	defw 0											; (Limite_horizontal).
 282+ 8689 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 283+ 868C
 284+ 868C              ; ---------- ---------- ---------- ---------- ----------
 285+ 868C
 286+ 868C 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 287+ 868E 00 00        	defw 0											; (Posicion_actual).
 288+ 8690 00 00        	defw 0 											; (Puntero_objeto).
 289+ 8692 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 290+ 8695
 291+ 8695 00           	db %00000000 									; (Attr).
 292+ 8696
 293+ 8696 00 00        	defw 0											; (Indice_Sprite_der).
 294+ 8698 00 00        	defw 0											; (Indice_Sprite_izq).
 295+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 296+ 869C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 297+ 869E
 298+ 869E 00 00        	defw 0											; (Posicion_inicio).
 299+ 86A0 00           	db 0											; (Cuad_objeto).
 300+ 86A1
 301+ 86A1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 302+ 86A5
 303+ 86A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 304+ 86A6
 305+ 86A6 00 00        	db 0,0										    ; Variables_de_borrado
 306+ 86A8 00 00        	defw 0											;	" " " " " " "
 307+ 86AA 00 00        	defw 0											;	" " " " " " "
 308+ 86AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 309+ 86B0
 310+ 86B0 00 00        	db 0,0											; Variables_de_pintado
 311+ 86B2 00 00        	defw 0											;	" " " " " " "
 312+ 86B4 00 00        	defw 0											;	" " " " " " "
 313+ 86B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 314+ 86BA
 315+ 86BA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 316+ 86BC
 317+ 86BC 00           	db 0											; (Autoriza_movimiento).
 318+ 86BD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 319+ 86C1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 320+ 86C4 00           	db 0											; (Repetimos_desplazamiento_backup)
 321+ 86C5 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86C6
 323+ 86C6 00           	db 0 											; (Columnas).
 324+ 86C7 00 00        	defw 0											; (Limite_horizontal).
 325+ 86C9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86CC
 327+ 86CC              ; ---------- ---------- ---------- ---------- ----------
 328+ 86CC
 329+ 86CC 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86CE 00 00        	defw 0											; (Posicion_actual).
 331+ 86D0 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86D2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86D5
 334+ 86D5 00           	db %00000000 									; (Attr).
 335+ 86D6
 336+ 86D6 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86D8 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86DA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86DC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86DE
 341+ 86DE 00 00        	defw 0											; (Posicion_inicio).
 342+ 86E0 00           	db 0											; (Cuad_objeto).
 343+ 86E1
 344+ 86E1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 86E5
 346+ 86E5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 86E6
 348+ 86E6 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 86E8 00 00        	defw 0											;	" " " " " " "
 350+ 86EA 00 00        	defw 0											;	" " " " " " "
 351+ 86EC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 86F0
 353+ 86F0 00 00        	db 0,0											; Variables_de_pintado
 354+ 86F2 00 00        	defw 0											;	" " " " " " "
 355+ 86F4 00 00        	defw 0											;	" " " " " " "
 356+ 86F6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86FA
 358+ 86FA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 86FC
 360+ 86FC 00           	db 0											; (Autoriza_movimiento).
 361+ 86FD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 362+ 8701 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 363+ 8704 00           	db 0											; (Repetimos_desplazamiento_backup)
 364+ 8705 00           	db 0											; (Cola_de_desplazamiento).
 365+ 8706
 366+ 8706 00           	db 0 											; (Columnas).
 367+ 8707 00 00        	defw 0											; (Limite_horizontal).
 368+ 8709 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 369+ 870C
 370+ 870C              ; ---------- ---------- ---------- ---------- ----------
 371+ 870C
 372+ 870C 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 373+ 870E 00 00        	defw 0											; (Posicion_actual).
 374+ 8710 00 00        	defw 0 											; (Puntero_objeto).
 375+ 8712 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 376+ 8715
 377+ 8715 00           	db %00000000 									; (Attr).
 378+ 8716
 379+ 8716 00 00        	defw 0											; (Indice_Sprite_der).
 380+ 8718 00 00        	defw 0											; (Indice_Sprite_izq).
 381+ 871A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 382+ 871C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 383+ 871E
 384+ 871E 00 00        	defw 0											; (Posicion_inicio).
 385+ 8720 00           	db 0											; (Cuad_objeto).
 386+ 8721
 387+ 8721 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 388+ 8725
 389+ 8725 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 390+ 8726
 391+ 8726 00 00        	db 0,0										    ; Variables_de_borrado
 392+ 8728 00 00        	defw 0											;	" " " " " " "
 393+ 872A 00 00        	defw 0											;	" " " " " " "
 394+ 872C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 395+ 8730
 396+ 8730 00 00        	db 0,0											; Variables_de_pintado
 397+ 8732 00 00        	defw 0											;	" " " " " " "
 398+ 8734 00 00        	defw 0											;	" " " " " " "
 399+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 400+ 873A
 401+ 873A 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 402+ 873C
 403+ 873C 00           	db 0											; (Autoriza_movimiento).
 404+ 873D 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 405+ 8741 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 406+ 8744 00           	db 0											; (Repetimos_desplazamiento_backup)
 407+ 8745 00           	db 0											; (Cola_de_desplazamiento).
 408+ 8746
 409+ 8746 00           	db 0 											; (Columnas).
 410+ 8747 00 00        	defw 0											; (Limite_horizontal).
 411+ 8749 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 412+ 874C
 413+ 874C              ; ---------- ---------- ---------- ---------- ----------
 414+ 874C
 415+ 874C 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 416+ 874E 00 00        	defw 0											; (Posicion_actual).
 417+ 8750 00 00        	defw 0 											; (Puntero_objeto).
 418+ 8752 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 419+ 8755
 420+ 8755 00           	db %00000000 									; (Attr).
 421+ 8756
 422+ 8756 00 00        	defw 0											; (Indice_Sprite_der).
 423+ 8758 00 00        	defw 0											; (Indice_Sprite_izq).
 424+ 875A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 425+ 875C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 426+ 875E
 427+ 875E 00 00        	defw 0											; (Posicion_inicio).
 428+ 8760 00           	db 0											; (Cuad_objeto).
 429+ 8761
 430+ 8761 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 431+ 8765
 432+ 8765 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 433+ 8766
 434+ 8766 00 00        	db 0,0										    ; Variables_de_borrado
 435+ 8768 00 00        	defw 0											;	" " " " " " "
 436+ 876A 00 00        	defw 0											;	" " " " " " "
 437+ 876C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 438+ 8770
 439+ 8770 00 00        	db 0,0											; Variables_de_pintado
 440+ 8772 00 00        	defw 0											;	" " " " " " "
 441+ 8774 00 00        	defw 0											;	" " " " " " "
 442+ 8776 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 443+ 877A
 444+ 877A 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 445+ 877C
 446+ 877C 00           	db 0											; (Autoriza_movimiento).
 447+ 877D 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 448+ 8781 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 449+ 8784 00           	db 0											; (Repetimos_desplazamiento_backup)
 450+ 8785 00           	db 0											; (Cola_de_desplazamiento).
 451+ 8786
 452+ 8786 00           	db 0 											; (Columnas).
 453+ 8787 00 00        	defw 0											; (Limite_horizontal).
 454+ 8789 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 455+ 878C
 456+ 878C              ; ---------- ---------- ---------- ---------- ----------
 457+ 878C
 458+ 878C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 459+ 878E 00 00        	defw 0											; (Posicion_actual).
 460+ 8790 00 00        	defw 0 											; (Puntero_objeto).
 461+ 8792 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 462+ 8795
 463+ 8795 00           	db %00000000 									; (Attr).
 464+ 8796
 465+ 8796 00 00        	defw 0											; (Indice_Sprite_der).
 466+ 8798 00 00        	defw 0											; (Indice_Sprite_izq).
 467+ 879A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 468+ 879C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 469+ 879E
 470+ 879E 00 00        	defw 0											; (Posicion_inicio).
 471+ 87A0 00           	db 0											; (Cuad_objeto).
 472+ 87A1
 473+ 87A1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 474+ 87A5
 475+ 87A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 476+ 87A6
 477+ 87A6 00 00        	db 0,0										    ; Variables_de_borrado
 478+ 87A8 00 00        	defw 0											;	" " " " " " "
 479+ 87AA 00 00        	defw 0											;	" " " " " " "
 480+ 87AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 481+ 87B0
 482+ 87B0 00 00        	db 0,0											; Variables_de_pintado
 483+ 87B2 00 00        	defw 0											;	" " " " " " "
 484+ 87B4 00 00        	defw 0											;	" " " " " " "
 485+ 87B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 486+ 87BA
 487+ 87BA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 488+ 87BC
 489+ 87BC 00           	db 0											; (Autoriza_movimiento).
 490+ 87BD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 491+ 87C1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 492+ 87C4 00           	db 0											; (Repetimos_desplazamiento_backup)
 493+ 87C5 00           	db 0											; (Cola_de_desplazamiento).
 494+ 87C6
 495+ 87C6 00           	db 0 											; (Columnas).
 496+ 87C7 00 00        	defw 0											; (Limite_horizontal).
 497+ 87C9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 498+ 87CC
 499+ 87CC              ; ---------- ---------- ---------- ---------- ----------
 500+ 87CC
 501+ 87CC 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 502+ 87CE 00 00        	defw 0											; (Posicion_actual).
 503+ 87D0 00 00        	defw 0 											; (Puntero_objeto).
 504+ 87D2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 505+ 87D5
 506+ 87D5 00           	db %00000000 									; (Attr).
 507+ 87D6
 508+ 87D6 00 00        	defw 0											; (Indice_Sprite_der).
 509+ 87D8 00 00        	defw 0											; (Indice_Sprite_izq).
 510+ 87DA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 511+ 87DC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 512+ 87DE
 513+ 87DE 00 00        	defw 0											; (Posicion_inicio).
 514+ 87E0 00           	db 0											; (Cuad_objeto).
 515+ 87E1
 516+ 87E1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 517+ 87E5
 518+ 87E5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 519+ 87E6
 520+ 87E6 00 00        	db 0,0										    ; Variables_de_borrado
 521+ 87E8 00 00        	defw 0											;	" " " " " " "
 522+ 87EA 00 00        	defw 0											;	" " " " " " "
 523+ 87EC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 524+ 87F0
 525+ 87F0 00 00        	db 0,0											; Variables_de_pintado
 526+ 87F2 00 00        	defw 0											;	" " " " " " "
 527+ 87F4 00 00        	defw 0											;	" " " " " " "
 528+ 87F6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 529+ 87FA
 530+ 87FA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 531+ 87FC
 532+ 87FC 00           	db 0											; (Autoriza_movimiento).
 533+ 87FD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 534+ 8801 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 535+ 8804 00           	db 0											; (Repetimos_desplazamiento_backup)
 536+ 8805 00           	db 0											; (Cola_de_desplazamiento).
 537+ 8806
 538+ 8806 00           	db 0 											; (Columnas).
 539+ 8807 00 00        	defw 0											; (Limite_horizontal).
 540+ 8809 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 541+ 880C
 542+ 880C              ; ---------- ---------- ---------- ---------- ----------
 543+ 880C
 544+ 880C 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 545+ 880E 00 00        	defw 0											; (Posicion_actual).
 546+ 8810 00 00        	defw 0 											; (Puntero_objeto).
 547+ 8812 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 548+ 8815
 549+ 8815 00           	db %00000000 									; (Attr).
 550+ 8816
 551+ 8816 00 00        	defw 0											; (Indice_Sprite_der).
 552+ 8818 00 00        	defw 0											; (Indice_Sprite_izq).
 553+ 881A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 554+ 881C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 555+ 881E
 556+ 881E 00 00        	defw 0											; (Posicion_inicio).
 557+ 8820 00           	db 0											; (Cuad_objeto).
 558+ 8821
 559+ 8821 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 560+ 8825
 561+ 8825 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 562+ 8826
 563+ 8826 00 00        	db 0,0										    ; Variables_de_borrado
 564+ 8828 00 00        	defw 0											;	" " " " " " "
 565+ 882A 00 00        	defw 0											;	" " " " " " "
 566+ 882C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 567+ 8830
 568+ 8830 00 00        	db 0,0											; Variables_de_pintado
 569+ 8832 00 00        	defw 0											;	" " " " " " "
 570+ 8834 00 00        	defw 0											;	" " " " " " "
 571+ 8836 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 572+ 883A
 573+ 883A 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 574+ 883C
 575+ 883C 00           	db 0											; (Autoriza_movimiento).
 576+ 883D 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 577+ 8841 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_desplazamiento).
 578+ 8844 00           	db 0											; (Repetimos_desplazamiento_backup)
 579+ 8845 00           	db 0											; (Cola_de_desplazamiento).
 580+ 8846
 581+ 8846 00           	db 0 											; (Columnas).
 582+ 8847 00 00        	defw 0											; (Limite_horizontal).
 583+ 8849 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 584+ 884C
 585+ 884C              ; -------------------------------------------------------------------------------------
 586+ 884C              ;
 587+ 884C              ;	20/05/23
 588+ 884C              ;
 589+ 884C              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 590+ 884C              ;
 591+ 884C              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 592+ 884C              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 593+ 884C              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 594+ 884C              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 595+ 884C
 596+ 884C              Indice_de_entidades
 597+ 884C
 598+ 884C 56 88        	defw Entidad_1
 599+ 884E 66 88        	defw Entidad_2
 600+ 8850 76 88        	defw Entidad_3
 601+ 8852 86 88        	defw Entidad_4
 602+ 8854 96 88        	defw Entidad_5
 603+ 8856
 604+ 8856              ;	BADSAT, (Satélite malvado).
 605+ 8856
 606+ 8856 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 607+ 8858 04           	db %00000100									; (Attr).
 608+ 8859 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 609+ 885B 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 610+ 885D 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 611+ 885F 01           	db 1											; (Cuad_objeto).
 612+ 8860 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 613+ 8864 79 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 614+ 8866
 615+ 8866 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 616+ 8868 02           	db %00000010									; (Attr).
 617+ 8869 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 618+ 886B 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 619+ 886D 40 50        	defw $5040                                      ; (Posicion_inicio).
 620+ 886F 01           	db 1											; (Cuad_objeto).
 621+ 8870 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 622+ 8874 79 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 623+ 8876
 624+ 8876 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 625+ 8878 04           	db %00000100									; (Attr).
 626+ 8879 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 627+ 887B 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 628+ 887D A0 47        	defw $47a0                                      ; (Posicion_inicio).
 629+ 887F 01           	db 1											; (Cuad_objeto).
 630+ 8880 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 631+ 8884 79 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 632+ 8886
 633+ 8886 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 634+ 8888 01           	db %00000001									; (Attr).
 635+ 8889 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 636+ 888B 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 637+ 888D BF 47        	defw $47bf                                      ; (Posicion_inicio).
 638+ 888F 01           	db 1											; (Cuad_objeto).
 639+ 8890 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 640+ 8894 79 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 641+ 8896
 642+ 8896 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 643+ 8898 01           	db %00000001									; (Attr).
 644+ 8899 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 645+ 889B 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 646+ 889D 07 40        	defw $4007                                      ; (Posicion_inicio).
 647+ 889F 01           	db 1											; (Cuad_objeto).
 648+ 88A0 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 649+ 88A4 79 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 650+ 88A6
# file closed: Cajas_y_disparos.asm
  24  88A6              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A6              ; 13/05/23
   2+ 88A6
   3+ 88A6              Indice_de_niveles
   4+ 88A6
   5+ 88A6 B4 88        	defw Nivel_1
   6+ 88A8 B6 88        	defw Nivel_2
   7+ 88AA C3 88        	defw Nivel_3
   8+ 88AC D3 88        	defw Nivel_4
   9+ 88AE E5 88        	defw Nivel_5
  10+ 88B0
  11+ 88B0              ;	...
  12+ 88B0              ;	...
  13+ 88B0              ;	+ Niveles ...
  14+ 88B0
  15+ 88B0 00 00        	defw 0
  16+ 88B2 00 00        	defw 0
  17+ 88B4
  18+ 88B4 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88B5 01           	db 1
  20+ 88B6 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88B7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88BB 01 02
  22+ 88BD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C1 01 02
  23+ 88C3 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88C4 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88C8 01
  25+ 88C9 03 01 01 01  	db 3,1,1,1,1
  25+ 88CD 01
  26+ 88CE 03 01 01 01  	db 3,1,1,1,1
  26+ 88D2 01
  27+ 88D3 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88D4 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88D8 01
  29+ 88D9 04 01 01 01  	db 4,1,1,1,1
  29+ 88DD 01
  30+ 88DE 04 01 01 01  	db 4,1,1,1,1
  30+ 88E2 01
  31+ 88E3 02 03        	db 2,3
  32+ 88E5 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88E6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88EA 01
  34+ 88EB 05 01 01 01  	db 5,1,1,1,1
  34+ 88EF 01
  35+ 88F0 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88F4 01
  36+ 88F5 05 01 01 01  	db 5,1,1,1,1
  36+ 88F9 01
  37+ 88FA
  38+ 88FA              ;---------------------------------------------------------------------------------------------------------------
  39+ 88FA              ;
  40+ 88FA              ;   21/5/23
  41+ 88FA              ;
  42+ 88FA              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88FA              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88FA              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88FA              ;	_en la caja DRAW correspondiente.
  46+ 88FA              ;
  47+ 88FA              ;	MODIFICA: HL,DE y A.
  48+ 88FA              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88FA
  50+ 88FA              Inicializa_Punteros_de_nivel
  51+ 88FA
  52+ 88FA 21 A6 88     	ld hl,Indice_de_niveles
  53+ 88FD 22 24 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8900 CD 18 8D     	call Extrae_address
  55+ 8903 7E           	ld a,(hl)
  56+ 8904 32 F9 89     	ld (Numero_de_entidades),a
  57+ 8907 23           	inc hl
  58+ 8908 22 26 8A     	ld (Datos_de_nivel),hl
  59+ 890B C9           	ret
  60+ 890C
  61+ 890C              ;---------------------------------------------------------------------------------------------------------------
  62+ 890C              ;
  63+ 890C              ;   13/5/23
  64+ 890C              ;
  65+ 890C              ;	Destruye A,BC,HL,DE
  66+ 890C
  67+ 890C              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 890C              ;	_del juego.
  69+ 890C
  70+ 890C              Prepara_cajas
  71+ 890C
  72+ 890C              ; Preparamos los punteros de las cajas.
  73+ 890C
  74+ 890C 21 74 85     	ld hl,Indice_de_cajas
  75+ 890F CD 18 8D     	call Extrae_address
  76+ 8912 CD 4F 89     	call Avanza_caja
  77+ 8915
  78+ 8915 CD 93 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8918
  80+ 8918 2A 26 8A     	ld hl,(Datos_de_nivel)
  81+ 891B
  82+ 891B              ; HL está en los datos del nivel correspondiente.
  83+ 891B              ; B actuará como contador de cajas.
  84+ 891B
  85+ 891B C5           1 push bc
  86+ 891C
  87+ 891C 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 891D CD 40 89     	call PreparaBC
  89+ 8920
  90+ 8920 21 4C 88     	ld hl,Indice_de_entidades
  91+ 8923 CD 48 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8926 22 FF 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8929
  94+ 8929 CD 59 89     	call Datos_de_entidad_a_caja
  95+ 892C
  96+ 892C 2A F7 89     	ld hl,(Indice_restore_caja)
  97+ 892F CD 18 8D     	call Extrae_address
  98+ 8932 CD 4F 89     	call Avanza_caja
  99+ 8935
 100+ 8935 2A 26 8A     	ld hl,(Datos_de_nivel)
 101+ 8938 23           	inc hl
 102+ 8939 22 26 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 893C
 104+ 893C C1           	pop bc
 105+ 893D 10 DC        	djnz 1B
 106+ 893F C9           	ret
 107+ 8940
 108+ 8940 CB 27        PreparaBC sla a
 109+ 8942 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8944 4F           	ld c,a
 111+ 8945 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8947 C9           	ret
 113+ 8948
 114+ 8948 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8949 ED 4A        	adc hl,bc
 116+ 894B CD 18 8D     	call Extrae_address
 117+ 894E C9           	ret
 118+ 894F
 119+ 894F 22 F3 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8952 13           	inc de
 121+ 8953 13           	inc de
 122+ 8954 EB           	ex de,hl
 123+ 8955 22 F7 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8958 C9           	ret
 125+ 8959
 126+ 8959              Datos_de_entidad_a_caja
 127+ 8959
 128+ 8959              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8959
 130+ 8959
 131+ 8959 ED 5B F3 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 895D
 133+ 895D 01 02 00     	ld bc,2
 134+ 8960 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8962
 136+ 8962 01 07 00     	ld bc,7
 137+ 8965 CD 8D 89     	call Situa_DE
 138+ 8968
 139+ 8968 01 05 00     	ld bc,5
 140+ 896B ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 896D
 142+ 896D 01 04 00     	ld bc,4
 143+ 8970 CD 8D 89     	call Situa_DE
 144+ 8973
 145+ 8973 01 07 00     	ld bc,7
 146+ 8976 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8978
 148+ 8978 01 18 00     	ld bc,24
 149+ 897B CD 8D 89     	call Situa_DE
 150+ 897E
 151+ 897E 01 02 00     	ld bc,2
 152+ 8981 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8983
 154+ 8983              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad', hay que aumentar el valor de BC_
 155+ 8983              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8983
 157+ 8983 01 0C 00     	ld bc,12									; *****
 158+ 8986 CD 8D 89     	call Situa_DE
 159+ 8989
 160+ 8989 3E 03        	ld a,3
 161+ 898B 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 898C
 163+ 898C C9           	ret
 164+ 898D
 165+ 898D EB           Situa_DE ex de,hl
 166+ 898E A7           	and a
 167+ 898F ED 4A        	adc hl,bc
 168+ 8991 EB           	ex de,hl
 169+ 8992 C9           	ret
 170+ 8993
 171+ 8993              ;---------------------------------------------------------------------------------------------------------------
 172+ 8993              ;
 173+ 8993              ;	21/5/23
 174+ 8993              ;
 175+ 8993              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8993              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8993              ;
 178+ 8993              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8993              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8993              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8993              ;
 182+ 8993              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8993              ;	MODIFICA: A y B.
 184+ 8993              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8993
 186+ 8993              Admin_num_entidades
 187+ 8993
 188+ 8993              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8993
 190+ 8993 3A F9 89     	ld a,(Numero_de_entidades)
 191+ 8996 A7           	and a
 192+ 8997              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 8997              ;	jr z,$
 194+ 8997              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 8997
 196+ 8997 20 03        	jr nz,3F
 197+ 8999
 198+ 8999              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 8999
 200+ 8999 CD FA 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 899C
 202+ 899C
 203+ 899C 3A F9 89     3 ld a,(Numero_de_entidades)
 204+ 899F FE 0A        	cp 10
 205+ 89A1 38 08        	jr c,1F
 206+ 89A3
 207+ 89A3              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89A3              ; Actualizamos variables.
 209+ 89A3
 210+ 89A3 3E 0A        	ld a,10
 211+ 89A5 32 FA 89     	ld (Numero_parcial_de_entidades),a
 212+ 89A8 47           	ld b,a
 213+ 89A9 18 04        	jr 2F
 214+ 89AB
 215+ 89AB              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89AB              ; (Numero_de_entidades)="0".
 217+ 89AB
 218+ 89AB 32 FA 89     1 ld (Numero_parcial_de_entidades),a
 219+ 89AE 47           	ld b,a
 220+ 89AF C9           2 ret
# file closed: Niveles.asm
  25  89B0
  26  89B0              ; ******************************************************************************************************************************************************************************************
  27  89B0              ; Constantes.
  28  89B0              ; ******************************************************************************************************************************************************************************************
  29  89B0              ;
  30  89B0              ; 25/05/23
  31  89B0              ;
  32  89B0              ; Constantes generales.
  33  89B0              ;
  34  89B0
  35  89B0              Sprite_vacio equ $f000
  36  89B0              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  89B0              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  89B0              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  89B0              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  89B0
  41  89B0              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  89B0              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  89B0              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  89B0              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  89B0              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  89B0              ;                               				        ; De momento situamos este almacén en $7060.
  47  89B0
  48  89B0              ; ******************************************************************************************************************************************************************************************
  49  89B0              ; Variables.
  50  89B0              ; ******************************************************************************************************************************************************************************************
  51  89B0              ;
  52  89B0              ; 01/07/23
  53  89B0              ;
  54  89B0              ; Variables de DRAW. (Motor principal).
  55  89B0              ;
  56  89B0              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  89B0
  58  89B0 00           Filas db 0												; Filas. [DRAW]
  59  89B1 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  89B2 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  89B4 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  89B6 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  89B7 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  89B8
  65  89B8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  89B8
  67  89B8 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  89B9              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  89B9              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  89B9 00           Attr db 0												; Atributos de la entidad:
  71  89BA
  72  89BA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  89BA              ;
  74  89BA              ;	COLORES: 0 ..... NEGRO
  75  89BA              ;    		 1 ..... AZUL
  76  89BA              ; 			 2 ..... ROJO
  77  89BA              ;			 3 ..... MAGENTA
  78  89BA              ; 			 4 ..... VERDE
  79  89BA              ; 			 5 ..... CIAN
  80  89BA              ;			 6 ..... AMARILLO
  81  89BA              ; 			 7 ..... BLANCO
  82  89BA
  83  89BA 00 00        Indice_Sprite_der defw 0
  84  89BC 00 00        Indice_Sprite_izq defw 0
  85  89BE 00 00        Puntero_DESPLZ_der defw 0
  86  89C0 00 00        Puntero_DESPLZ_izq defw 0
  87  89C2
  88  89C2 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89C4 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89C5
  91  89C5              ; Variables de objeto. (Características).
  92  89C5
  93  89C5 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89C6 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89C7 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89C8 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89C9
  98  89C9 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89CA              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89CA              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89CA
 102  89CA 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89CC 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89CE 00 00        	defw 0
 105  89D0 00 00 00 00  	db 0,0,0,0
 106  89D4
 107  89D4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89D6 00 00        	defw 0
 109  89D8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89DA 00 00 00 00  	db 0,0,0,0
 111  89DE
 112  89DE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89DE
 114  89DE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89DF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89DF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89DF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89DF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89DF              ;
 120  89DF              ; 														DESCRIPCIÖN:
 121  89DF              ;
 122  89DF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89DF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89DF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89DF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89DF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89DF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89DF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89DF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89DF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89DF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89DF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89DF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89DF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89DF              ;
 136  89DF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89DF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89DF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89DF
 140  89DF 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89E0
 142  89E0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 143  89E0
 144  89E0 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89E1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89E3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 147  89E5 00           Contador_db_mov db 0									; Indica el nº de bytes que tiene la cadena de movimiento,_
 148  89E6              ;														; Hay que tener en cuenta que cada (Desplaz.) está constituido por 3 bytes._
 149  89E6              ;                   									; Así que cada movimiento podrá estar constituido como máximo, por 85 desplazamientos.
 150  89E6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 151  89E7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 152  89E7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 153  89E7 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 154  89E8              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($0-$f).
 155  89E8 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 156  89E9 00           Cola_de_desplazamiento db 0								; Este byte indica:
 157  89EA              ;
 158  89EA              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 159  89EA              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 160  89EA              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 161  89EA              ;
 162  89EA              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 163  89EA              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 164  89EA              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 165  89EA              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 166  89EA              ;
 167  89EA              ;														;	"$ff" ..... Bucle infinito de repetición.
 168  89EA              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 169  89EA              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 170  89EA
 171  89EA
 172  89EA              ; Variables de funcionamiento. [DRAW].
 173  89EA
 174  89EA 00           Columnas db 0
 175  89EB 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 176  89ED              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 177  89ED 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 178  89EE
 179  89EE              ; variables de control general.
 180  89EE
 181  89EE 00           Ctrl_2 db 0
 182  89EF              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 183  89EF              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 184  89EF              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 185  89EF              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 186  89EF              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 187  89EF              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 188  89EF              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 189  89EF              ;
 190  89EF              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 191  89EF              ;														BIT 2, Este bit es activado por la rutina [Velocidad_del_movimiento] para indicar que hemos_
 192  89EF              ;															_ modificado el perfil de velocidad de la entidad. Evita que volvamos a ejecutar esta rutina_
 193  89EF              ;															_ en las sucesivas repeticiones de un mismo movimiento de la cadena.
 194  89EF
 195  89EF
 196  89EF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 197  89F0
 198  89F0              ; 64 Bytes por entidad.
 199  89F0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 200  89F0              ;					         		---------;      ;---------
 201  89F0
 202  89F0
 203  89F0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 204  89F0
 205  89F0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 206  89F1
 207  89F1              ;														DESCRIPCIÓN:
 208  89F1              ;
 209  89F1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 210  89F1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 211  89F1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 212  89F1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 213  89F1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 214  89F1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 215  89F1              ;														BIT 3, Recarga de nueva oleada.
 216  89F1              ;														BIT 4, Recarga de nueva oleada.
 217  89F1
 218  89F1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 219  89F3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 220  89F3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 221  89F3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 222  89F3
 223  89F3
 224  89F3
 225  89F3              ; Gestión de ENTIDADES y CAJAS.
 226  89F3
 227  89F3 00 00        Puntero_store_caja defw 0
 228  89F5 00 00        Puntero_restore_caja defw 0
 229  89F7 00 00        Indice_restore_caja defw 0
 230  89F9 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 231  89FA 00           Numero_parcial_de_entidades db 0
 232  89FB 00           Entidades_en_curso db 0									; ..... ..... .....
 233  89FC 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 234  89FD              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 235  89FD              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 236  89FD              ;														; _ (Numero_de_malotes)="0".
 237  89FD 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 238  89FF 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 239  8A01              ;														; _ puntero (Indice_entidades).
 240  8A01
 241  8A01
 242  8A01              ;---------------------------------------------------------------------------------------------------------------
 243  8A01              ;
 244  8A01              ; Sirven para PINTAR.
 245  8A01
 246  8A01 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 247  8A03              ;														; _variable para almacenar lo posición del puntero_
 248  8A03              ; 														; _de pila, SP.
 249  8A03 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 250  8A05              ;														; La utiliza la rutina [Extrae_foto_registros].
 251  8A05 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 252  8A07              ;														; _el snapshot de los registros de la siguiente entidad.
 253  8A07              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 254  8A07 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 255  8A09              ;														; _el snapshot de los registros del siguiente disparo.
 256  8A09              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 257  8A09
 258  8A09              ;---------------------------------------------------------------------------------------------------------------
 259  8A09
 260  8A09              ; Gestión de Disparos.
 261  8A09
 262  8A09 00           Numero_de_disparotes db 0
 263  8A0A 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 264  8A0C 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 265  8A0E 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 266  8A0F              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 267  8A0F              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 268  8A0F 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 269  8A11              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 270  8A11              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 271  8A11              ;														; _produzca colisión.
 272  8A11 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 273  8A13              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 274  8A13 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 275  8A16              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 276  8A16 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 277  8A19              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 278  8A19              ;---------------------------------------------------------------------------------------------------------------
 279  8A19
 280  8A19              ; Relojes y temporizaciones.
 281  8A19
 282  8A19 00           Contador_de_frames db 0
 283  8A1A 04           Clock_explosion db 4
 284  8A1B 1E           Clock_Entidades_en_curso db 30
 285  8A1C 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 286  8A1D              ;														; Repite la oleada de entidades.
 287  8A1D 01           Habilita_disparo_Amadeus db 1
 288  8A1E 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 289  8A1F 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 290  8A20
 291  8A20 01           Habilita_disparo_entidad db 1
 292  8A21 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 293  8A22 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 294  8A23
 295  8A23              ;---------------------------------------------------------------------------------------------------------------
 296  8A23
 297  8A23              ; Gestión de NIVELES.
 298  8A23
 299  8A23 00           Nivel db 0												; Nivel actual del juego.
 300  8A24 00 00        Puntero_indice_NIVELES defw 0
 301  8A26 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 302  8A28              ; 														; _ que definen el NIVEL.
 303  8A28              ; Y todo comienza aquí .....
 304  8A28              ;
 305  8A28              ; Rutina principal *************************************************************************************************************************************************************************
 306  8A28              ;
 307  8A28              ;	14/11/22
 308  8A28
 309  8A28              START
 310  8A28
 311  8A28 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 312  8A2B 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 313  8A2D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 314  8A2F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 315  8A31 F3           	DI
 316  8A32
 317  8A32 3E 07        	ld a,%00000111
 318  8A34 CD D4 98     	call Cls
 319  8A37
 320  8A37              ;	call Pinta_marco
 321  8A37
 322  8A37 CD FA 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 323  8A3A
 324  8A3A CD F1 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 325  8A3D
 326  8A3D CD 0C 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 327  8A40
 328  8A40 CD C4 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 329  8A43              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 330  8A43 CD A1 8D     	call Restore_entidad
 331  8A46
 332  8A46 21 FA 89     	ld hl,Numero_parcial_de_entidades
 333  8A49 46           	ld b,(hl)
 334  8A4A 04           	inc b
 335  8A4B 05           	dec b
 336  8A4C 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 337  8A4E
 338  8A4E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 339  8A4E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 340  8A4E              ;	Pintamos el resto de entidades:
 341  8A4E
 342  8A4E              ;	INICIA ENTIDADES !!!!!
 343  8A4E
 344  8A4E C5           1 push bc  												; Guardo el contador de entidades.
 345  8A4F CD 1E 8D     	call Inicia_Puntero_objeto
 346  8A52 CD E8 98     	call Recompone_posicion_inicio
 347  8A55 CD 24 93     	call Draw
 348  8A58 CD A0 7F     	call Guarda_foto_registros
 349  8A5B CD 66 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 350  8A5E C1           	pop bc
 351  8A5F 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 352  8A61
 353  8A61              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 354  8A61              ; (Esto se dá cuando se inicia una nueva oleada).
 355  8A61
 356  8A61 3A F0 89     	ld a,(Ctrl_1)
 357  8A64 CB 5F        	bit 3,a
 358  8A66 20 18        	jr nz,5F											; Loop
 359  8A68
 360  8A68              ; 	INICIA AMADEUS !!!!!
 361  8A68
 362  8A68 CD C8 8D     3 call Restore_Amadeus
 363  8A6B CD 1E 8D     	call Inicia_Puntero_objeto
 364  8A6E CD 24 93     	call Draw
 365  8A71 CD A0 7F     	call Guarda_foto_registros
 366  8A74 11 8C 85     	ld de,Amadeus_db
 367  8A77 CD DA 8D     	call Store_Amadeus
 368  8A7A
 369  8A7A              ; 	INICIA DISPAROS !!!!!
 370  8A7A
 371  8A7A CD DA 8C     	call Inicia_Puntero_Disparo_Entidades
 372  8A7D CD E1 8C     	call Inicia_Puntero_Disparo_Amadeus
 373  8A80
 374  8A80              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 375  8A80
 376  8A80 CD C4 8C     5 call Inicia_punteros_de_cajas
 377  8A83 CD A1 8D     	call Restore_entidad
 378  8A86
 379  8A86 3A F0 89     	ld a,(Ctrl_1)
 380  8A89 CB 5F        	bit 3,a
 381  8A8B 28 0A        	jr z,6F
 382  8A8D
 383  8A8D              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 384  8A8D
 385  8A8D 21 F0 89     	ld hl,Ctrl_1
 386  8A90 CB 9E        	res 3,(hl)
 387  8A92 CD E8 8C     	call Calcula_numero_de_malotes
 388  8A95 18 07        	jr 7F
 389  8A97
 390  8A97              ; ----------
 391  8A97
 392  8A97 3A FA 89     6 ld a,(Numero_parcial_de_entidades)
 393  8A9A 3C           	inc a
 394  8A9B 32 FC 89     	ld (Numero_de_malotes),a
 395  8A9E
 396  8A9E AF           7 xor a
 397  8A9F FB           2 ei
 398  8AA0 28 FD        	jr z,2B
 399  8AA2
 400  8AA2 3A 19 8A     	ld a,(Contador_de_frames)
 401  8AA5 47           	ld b,a
 402  8AA6 3A 1C 8A     	ld a,(Activa_recarga_cajas)
 403  8AA9 B8           	cp b
 404  8AAA 28 08        	jr z,8F
 405  8AAC
 406  8AAC 21 F0 89     	ld hl,Ctrl_1
 407  8AAF CB E6        	set 4,(hl)
 408  8AB1 AF           	xor a
 409  8AB2 18 EB        	jr 2B
 410  8AB4
 411  8AB4 21 F0 89     8 ld hl,Ctrl_1
 412  8AB7 CB A6        	res 4,(hl)
 413  8AB9 F3           	di
 414  8ABA
 415  8ABA 3A 19 8A     	ld a,(Contador_de_frames)
 416  8ABD
 417  8ABD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 418  8ABD              ;! _ IMPREDECIBLE !!!!
 419  8ABD
 420  8ABD C6 0A        	add 10
 421  8ABF 32 1B 8A     	ld (Clock_Entidades_en_curso),a
 422  8AC2
 423  8AC2 C3 3D 8A     	jp 4B
 424  8AC5
 425  8AC5              ; -----------------------------------------------------------------------------------
 426  8AC5
 427  8AC5              Frame
 428  8AC5
 429  8AC5              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 430  8AC5              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 431  8AC5
 432  8AC5              ; PINTAMOS.
 433  8AC5
 434  8AC5 3E 02            ld a,2
 435  8AC7 D3 FE            out ($fe),a
 436  8AC9 CD 28 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 437  8ACC CD 61 96     	call Extrae_foto_disparos
 438  8ACF 3E 01            ld a,1
 439  8AD1 D3 FE            out ($fe),a
 440  8AD3
 441  8AD3              ; ----------------------------------------------------------------------
 442  8AD3
 443  8AD3              ; RELOJES.
 444  8AD3
 445  8AD3 21 19 8A     	ld hl,Contador_de_frames
 446  8AD6 34           	inc (hl)											; 0 - 255
 447  8AD7
 448  8AD7 3A 1B 8A     	ld a,(Clock_Entidades_en_curso)
 449  8ADA 47           	ld b,a
 450  8ADB 3A 19 8A     	ld a,(Contador_de_frames)
 451  8ADE B8           	cp b
 452  8ADF 20 18        	jr nz,13F
 453  8AE1
 454  8AE1 3A FA 89     	ld a,(Numero_parcial_de_entidades)
 455  8AE4 47           	ld b,a
 456  8AE5 3A FB 89     	ld a,(Entidades_en_curso)
 457  8AE8 B8           	cp b
 458  8AE9 28 0E        	jr z,13F
 459  8AEB 30 0C        	jr nc,13F
 460  8AED
 461  8AED 3C           	inc a
 462  8AEE 32 FB 89     	ld (Entidades_en_curso),a
 463  8AF1
 464  8AF1 3A 1B 8A     	ld a,(Clock_Entidades_en_curso)
 465  8AF4
 466  8AF4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 467  8AF4              ;! _ IMPREDECIBLE !!!!
 468  8AF4
 469  8AF4 C6 64        	add 100
 470  8AF6 32 1B 8A     	ld (Clock_Entidades_en_curso),a
 471  8AF9
 472  8AF9              ; Habilita disparos.
 473  8AF9
 474  8AF9 21 1D 8A     13 ld hl,Habilita_disparo_Amadeus
 475  8AFC 11 1F 8A     	ld de,Temporiza_disparo_Amadeus
 476  8AFF CD 40 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 477  8B02
 478  8B02 21 20 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 479  8B05 11 22 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 480  8B08 CD 40 9D     	call Habilita_disparos
 481  8B0B
 482  8B0B              ; COLISIONES.
 483  8B0B
 484  8B0B CD 06 92     	call Selector_de_impactos
 485  8B0E
 486  8B0E              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 487  8B0E              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 488  8B0E              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 489  8B0E
 490  8B0E AF           	xor a
 491  8B0F 32 0E 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 492  8B12
 493  8B12 CD C4 8C     	call Inicia_punteros_de_cajas
 494  8B15 CD A1 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 495  8B18              ; 														; _ en DRAW.
 496  8B18 3A B0 89     	ld a,(Filas)
 497  8B1B A7           	and a
 498  8B1C 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 499  8B1E CD B3 8D     	call Incrementa_punteros_de_cajas
 500  8B21 18 F2        	jr 12B
 501  8B23
 502  8B23              ; ---------------------------------------------------------------------------------------
 503  8B23
 504  8B23 CD 81 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 505  8B26 21 00 70     	ld hl,Album_de_fotos
 506  8B29 22 05 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 507  8B2C              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 508  8B2C 3A FA 89     	ld a,(Numero_parcial_de_entidades)
 509  8B2F 47               ld b,a
 510  8B30 A7           	and a
 511  8B31 20 14        	jr nz,2F
 512  8B33
 513  8B33 21 F0 89     	ld hl,Ctrl_1
 514  8B36 CB 66        	bit 4,(hl)
 515  8B38 C2 C4 8B     	jp nz,4F
 516  8B3B
 517  8B3B 21 F0 89     	ld hl,Ctrl_1
 518  8B3E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 519  8B40
 520  8B40 3A 19 8A     	ld a,(Contador_de_frames)
 521  8B43 3C           	inc a
 522  8B44 32 1C 8A     	ld (Activa_recarga_cajas),a
 523  8B47
 524  8B47              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 525  8B47
 526  8B47 3A FB 89     2 ld a,(Entidades_en_curso)
 527  8B4A A7           	and a
 528  8B4B CA C4 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 529  8B4E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 530  8B4F
 531  8B4F              ; Código que ejecutamos con cada entidad:
 532  8B4F              ; Impacto ???
 533  8B4F
 534  8B4F C5           15 push bc 												; Nº de entidades en curso.
 535  8B50
 536  8B50              ;	call Autorizacion									; NO todas las entidades se pintan. (25fps).
 537  8B50
 538  8B50 3A C9 89     	ld a,(Impacto)
 539  8B53 A7           	and a
 540  8B54 28 2D        	jr z,8F
 541  8B56
 542  8B56              ; Hay Impacto en esta entidad.
 543  8B56
 544  8B56 21 1A 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 545  8B59 35           	dec (hl)
 546  8B5A 20 62        	jr nz,6F
 547  8B5C
 548  8B5C              ;! Velocidad de la animación de la explosión.
 549  8B5C
 550  8B5C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 551  8B5E              ;														; _,(velocidad de la explosión).
 552  8B5E CD 7B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 553  8B61
 554  8B61              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 555  8B61
 556  8B61 3A EE 89     	ld a,(Ctrl_2)
 557  8B64 CB 4F        	bit 1,a
 558  8B66 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 559  8B68
 560  8B68              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 561  8B68
 562  8B68 3A B8 89     	ld a,(CTRL_DESPLZ)
 563  8B6B A7           	and a
 564  8B6C 20 08        	jr nz,21F
 565  8B6E
 566  8B6E 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 567  8B71 22 BE 89     	ld (Puntero_DESPLZ_der),hl
 568  8B74 18 06        	jr 22F
 569  8B76
 570  8B76 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 571  8B79 22 BE 89     	ld (Puntero_DESPLZ_der),hl
 572  8B7C
 573  8B7C 21 EE 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 574  8B7F CB CE        	set 1,(hl)
 575  8B81 18 22        	jr 7F
 576  8B83
 577  8B83              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 578  8B83              ; _con las coordenadas de la entidad almacenada en DRAW.
 579  8B83
 580  8B83 3A F0 89     8 ld a,(Ctrl_1)
 581  8B86 CB 57        	bit 2,a
 582  8B88 28 1B        	jr z,7F
 583  8B8A
 584  8B8A 2A 11 8A     	ld hl,(Coordenadas_disparo_certero)
 585  8B8D EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 586  8B8E              ;														; E contiene la coordenada_X del disparo.
 587  8B8E 2A B6 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 588  8B91              ;														; H FILA, (Coordenada_y de la entidad).
 589  8B91 A7           	and a
 590  8B92 ED 52        	sbc hl,de
 591  8B94
 592  8B94 CD 3D 92     	call Determina_resultado_comparativa
 593  8B97
 594  8B97              ;! Debug colisiones
 595  8B97 78           	ld a,b
 596  8B98 A7           	and a
 597  8B99              ;	ld a,(Cuad_objeto)
 598  8B99              ;	inc b
 599  8B99              ;	dec b
 600  8B99 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 601  8B9B              ;	jr z,$
 602  8B9B
 603  8B9B              ;! Debug colisiones
 604  8B9B
 605  8B9B              ; ----- ----- -----
 606  8B9B
 607  8B9B 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 608  8B9D 32 C9 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 609  8BA0
 610  8BA0 21 F0 89     	ld hl,Ctrl_1
 611  8BA3 CB 96        	res 2,(hl)
 612  8BA5
 613  8BA5 CD F7 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 614  8BA8
 615  8BA8 3A DE 89     	ld a,(Ctrl_0)
 616  8BAB CB 67        	bit 4,a
 617  8BAD 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 618  8BAF
 619  8BAF              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 620  8BAF              ; [[[
 621  8BAF CD 3C 8E     	call Detecta_disparo_entidad
 622  8BB2              ; ]]]
 623  8BB2 CD 8B 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 624  8BB5
 625  8BB5 21 DE 89     	ld hl,Ctrl_0
 626  8BB8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 627  8BBA AF           	xor a
 628  8BBB 32 DF 89     	ld (Obj_dibujado),a
 629  8BBE
 630  8BBE CD 66 8D     6 call Store_Restore_cajas
 631  8BC1
 632  8BC1 C1           	pop bc
 633  8BC2 10 8B        	djnz 15B
 634  8BC4
 635  8BC4              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 636  8BC4
 637  8BC4              ;	ld a,2
 638  8BC4              ;	ld (Limitador_de_entidades_x_frame),a
 639  8BC4
 640  8BC4              ; ------------------------------------
 641  8BC4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 642  8BC4              ; Hemos gestionado todas las unidades.
 643  8BC4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 644  8BC4
 645  8BC4              ;	ld hl,Ctrl_1
 646  8BC4              ;	res 2,(hl)
 647  8BC4
 648  8BC4              ; ------------------------------------
 649  8BC4
 650  8BC4              ; Tras la gestión de las entidades, ... AMADEUS.
 651  8BC4
 652  8BC4 CD C8 8D     4 call Restore_Amadeus
 653  8BC7
 654  8BC7 3A C9 89     	ld a,(Impacto)
 655  8BCA A7           	and a
 656  8BCB 20 FE        	jr nz,$
 657  8BCD
 658  8BCD CD 5C 8C     	call Mov_Amadeus
 659  8BD0
 660  8BD0 3A DE 89     	ld a,(Ctrl_0)
 661  8BD3 CB 67        	bit 4,a
 662  8BD5 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 663  8BD7
 664  8BD7 CD 8B 8C     	call Guarda_foto_entidad_a_pintar
 665  8BDA
 666  8BDA 21 DE 89     3 ld hl,Ctrl_0
 667  8BDD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 668  8BDF AF           	xor a
 669  8BE0 32 DF 89     	ld (Obj_dibujado),a
 670  8BE3
 671  8BE3 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 672  8BE6 CD DA 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 673  8BE9
 674  8BE9 CD 9F 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 675  8BEC
 676  8BEC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 677  8BEC
 678  8BEC CD 00 8D     	call Calcula_numero_de_disparotes
 679  8BEF CD E8 8C     9 call Calcula_numero_de_malotes
 680  8BF2
 681  8BF2 3E 04        	ld a,4
 682  8BF4 D3 FE        	out ($fe),a
 683  8BF6
 684  8BF6 C9           	ret
 685  8BF7
 686  8BF7              ; --------------------------------------------------------------------------------------------------------------
 687  8BF7              ;
 688  8BF7              ;	27/05/23
 689  8BF7
 690  8BF7              Mov_obj
 691  8BF7
 692  8BF7              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 693  8BF7
 694  8BF7 3A EE 89     	ld a,(Ctrl_2)
 695  8BFA CB 4F        	bit 1,a
 696  8BFC 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 697  8BFE
 698  8BFE              ; Explosión:
 699  8BFE
 700  8BFE 3A EF 89     	ld a,(Frames_explosion)
 701  8C01 A7           	and a
 702  8C02 20 11        	jr nz,4F
 703  8C04
 704  8C04              ; Una alimaña menos!!!!!!!!!1
 705  8C04
 706  8C04 CD E3 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 707  8C07 21 FA 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 708  8C0A 35           	dec (hl)
 709  8C0B 21 FB 89     	ld hl,Entidades_en_curso
 710  8C0E 35           	dec (hl)
 711  8C0F 21 F9 89     	ld hl,Numero_de_entidades
 712  8C12 35           	dec (hl)
 713  8C13 18 46        	jr 3F
 714  8C15
 715  8C15              ; -----
 716  8C15
 717  8C15              ;	`Movemos´ la explosión.
 718  8C15
 719  8C15 2A BE 89     4 ld hl,(Puntero_DESPLZ_der)
 720  8C18 23           	inc hl
 721  8C19 23           	inc hl
 722  8C1A 22 BE 89     	ld (Puntero_DESPLZ_der),hl
 723  8C1D CD 18 8D     	call Extrae_address
 724  8C20 22 B4 89     	ld (Puntero_objeto),hl
 725  8C23
 726  8C23 21 EF 89     	ld hl,Frames_explosion
 727  8C26 35           	dec (hl)
 728  8C27
 729  8C27 CD 7B 8C     	call Guarda_foto_entidad_a_borrar
 730  8C2A 18 2F        	jr 3F
 731  8C2C
 732  8C2C AF           2 xor a
 733  8C2D 32 DF 89     	ld (Obj_dibujado),a
 734  8C30 32 DE 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 735  8C33              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 736  8C33              ; 														; _de la entidad.
 737  8C33 CD 95 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 738  8C36              ;														; Obj_dibujado="0".
 739  8C36              ; Movemos Entidades malignas.
 740  8C36
 741  8C36              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 742  8C36              ;	and a 												; _a movernos. (Limitador_de_entidades).
 743  8C36              ;	ret z
 744  8C36
 745  8C36 21 E1 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 746  8C39 34           	inc (hl)
 747  8C3A 35           	dec (hl)                                            ; Salimos de la rutina.
 748  8C3B C8           	ret z
 749  8C3C
 750  8C3C CD 8B 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 751  8C3F
 752  8C3F 3A DE 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 753  8C42 CB 67        	bit 4,a
 754  8C44 C8           	ret z
 755  8C45
 756  8C45              ; Ha habido desplazamiento de la entidad maligna.
 757  8C45              ; Ha llegado a zona de AMADEUS ???
 758  8C45
 759  8C45 3A B7 89     	ld a,(Coordenada_y)
 760  8C48 FE 14        	cp $14
 761  8C4A D4 D0 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 762  8C4D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 763  8C4D              ; ---------
 764  8C4D
 765  8C4D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 766  8C4F 32 DF 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 767  8C52 CD 95 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 768  8C55 CD AC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 769  8C58 CD 7B 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 770  8C5B C9           3 ret													; _de la misma.
 771  8C5C
 772  8C5C              ; --------------------------------------------------------------------------------------------------------------
 773  8C5C              ;
 774  8C5C              ;	29/1/23
 775  8C5C
 776  8C5C              Mov_Amadeus
 777  8C5C
 778  8C5C AF           	xor a
 779  8C5D 32 DF 89     	ld (Obj_dibujado),a
 780  8C60 CD 95 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 781  8C63              ;														; Obj_dibujado="0".
 782  8C63              ; Movemos Amadeus.
 783  8C63
 784  8C63 CD 05 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 785  8C66 3A DE 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 786  8C69 CB 67        	bit 4,a
 787  8C6B C8           	ret z
 788  8C6C
 789  8C6C              ; ---------
 790  8C6C
 791  8C6C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 792  8C6E 32 DF 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 793  8C71 CD 95 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 794  8C74 CD AC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 795  8C77 CD 7B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 796  8C7A C9           	ret													; _de la nave.
 797  8C7B
 798  8C7B              ; --------------------------------------------------------------------------------------------------------------
 799  8C7B              ;
 800  8C7B              ;	31/01/23
 801  8C7B              ;
 802  8C7B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 803  8C7B
 804  8C7B              Guarda_foto_entidad_a_borrar
 805  8C7B
 806  8C7B CD FE 95     	call Prepara_draw
 807  8C7E CD 38 95     	call calcula_CColumnass
 808  8C81 CD 6F 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 809  8C84 CD C4 95     	call Define_rutina_de_impresion
 810  8C87 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 811  8C8A C9           	ret
 812  8C8B
 813  8C8B              ; --------------------------------------------------------------------------------------------------------------
 814  8C8B              ;
 815  8C8B              ;	31/01/23
 816  8C8B              ;
 817  8C8B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 818  8C8B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 819  8C8B
 820  8C8B              Guarda_foto_entidad_a_pintar
 821  8C8B
 822  8C8B CD B8 8C     	call Repone_pintar
 823  8C8E CD 24 93     	call Draw
 824  8C91 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 825  8C94 C9           	ret
 826  8C95
 827  8C95              ; --------------------------------------------------------------------------------------------------------------
 828  8C95              ;
 829  8C95              ;
 830  8C95
 831  8C95 21 B0 89     Prepara_var_pintado_borrado	ld hl,Filas
 832  8C98 3A DF 89     	ld a,(Obj_dibujado)
 833  8C9B A7           	and a
 834  8C9C 28 05        	jr z,1F
 835  8C9E 11 D4 89     	ld de,Variables_de_pintado
 836  8CA1 18 03        	jr 2F
 837  8CA3 11 CA 89     1 ld de,Variables_de_borrado
 838  8CA6 01 08 00     2 ld bc,8
 839  8CA9 ED B0        	ldir
 840  8CAB C9           	ret
 841  8CAC
 842  8CAC              ; --------------------------------------------------------------------------------------------------------------
 843  8CAC
 844  8CAC 21 CA 89     Repone_borrar ld hl,Variables_de_borrado
 845  8CAF 11 B0 89     	ld de,Filas
 846  8CB2 01 08 00     	ld bc,8
 847  8CB5 ED B0        	ldir
 848  8CB7 C9           	ret
 849  8CB8
 850  8CB8 21 D4 89     Repone_pintar ld hl,Variables_de_pintado
 851  8CBB 11 B0 89     	ld de,Filas
 852  8CBE 01 08 00     	ld bc,8
 853  8CC1 ED B0        	ldir
 854  8CC3 C9           	ret
 855  8CC4
 856  8CC4              ; *************************************************************************************************************************************************************
 857  8CC4              ;
 858  8CC4              ; 8/1/23
 859  8CC4              ;
 860  8CC4              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 861  8CC4              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 862  8CC4              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 863  8CC4
 864  8CC4              ; Destruye HL y DE !!!!!
 865  8CC4
 866  8CC4              Inicia_punteros_de_cajas
 867  8CC4
 868  8CC4 21 74 85     	ld hl,Indice_de_cajas
 869  8CC7 CD 18 8D         call Extrae_address
 870  8CCA 22 F3 89         ld (Puntero_store_caja),hl
 871  8CCD 21 76 85     	ld hl,Indice_de_cajas+2
 872  8CD0 22 F7 89     	ld (Indice_restore_caja),hl
 873  8CD3 CD 18 8D     	call Extrae_address
 874  8CD6 22 F5 89     	ld (Puntero_restore_caja),hl
 875  8CD9 C9               ret
 876  8CDA
 877  8CDA              ; *************************************************************************************************************************************************************
 878  8CDA              ;
 879  8CDA              ; 8/1/23
 880  8CDA              ;
 881  8CDA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 882  8CDA
 883  8CDA 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 884  8CDD 22 0A 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 885  8CE0 C9           	ret
 886  8CE1 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 887  8CE4 22 0C 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 888  8CE7 C9           	ret
 889  8CE8
 890  8CE8              ; -------------------------------------------------------------------------------------------------------------
 891  8CE8              ;
 892  8CE8              ; 28/2/23
 893  8CE8              ;
 894  8CE8
 895  8CE8              Calcula_numero_de_malotes
 896  8CE8
 897  8CE8 21 00 70     	ld hl,Album_de_fotos
 898  8CEB EB           	ex de,hl
 899  8CEC 2A 05 8A     	ld hl,(Stack_snapshot)
 900  8CEF
 901  8CEF 06 00        	ld b,0
 902  8CF1 7D           	ld a,l
 903  8CF2 93           	sub e
 904  8CF3 28 07        	jr z,1F
 905  8CF5
 906  8CF5              ; Nº de malotes no es "0".
 907  8CF5
 908  8CF5 D6 06        2 sub 6
 909  8CF7 04           	inc b
 910  8CF8 A7           	and a
 911  8CF9 20 FA        	jr nz,2B
 912  8CFB 78           	ld a,b
 913  8CFC
 914  8CFC 32 FC 89     1 ld (Numero_de_malotes),a
 915  8CFF C9           	ret
 916  8D00
 917  8D00              ; -------------------------------------------------------------------------------------------------------------
 918  8D00              ;
 919  8D00              ; 28/2/23
 920  8D00              ;
 921  8D00
 922  8D00              Calcula_numero_de_disparotes
 923  8D00
 924  8D00 21 85 70     	ld hl,Album_de_fotos_disparos
 925  8D03 EB           	ex de,hl
 926  8D04 2A 07 8A     	ld hl,(Stack_snapshot_disparos)
 927  8D07
 928  8D07 06 00        	ld b,0
 929  8D09 7D           	ld a,l
 930  8D0A 93           	sub e
 931  8D0B 28 07        	jr z,1F
 932  8D0D
 933  8D0D              ; Nº de malotes no es "0".
 934  8D0D
 935  8D0D D6 06        2 sub 6
 936  8D0F 04           	inc b
 937  8D10 A7           	and a
 938  8D11 20 FA        	jr nz,2B
 939  8D13 78           	ld a,b
 940  8D14
 941  8D14 32 09 8A     1 ld (Numero_de_disparotes),a
 942  8D17 C9           	ret
 943  8D18              ; *************************************************************************************************************************************************************
 944  8D18              ;
 945  8D18              ; 20/10/22
 946  8D18              ;
 947  8D18              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 948  8D18              ;
 949  8D18              ; Destruye el puntero y DE !!!!!
 950  8D18
 951  8D18 5E           Extrae_address ld e,(hl)
 952  8D19 23           	inc hl
 953  8D1A 56           	ld d,(hl)
 954  8D1B 2B           	dec hl
 955  8D1C EB           	ex de,hl
 956  8D1D C9           	ret
 957  8D1E
 958  8D1E              ; *************************************************************************************************************************************************************
 959  8D1E              ;
 960  8D1E              ;	7/2/23
 961  8D1E              ;
 962  8D1E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 963  8D1E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 964  8D1E              ;
 965  8D1E              ;   Destruye HL y BC !!!!!,
 966  8D1E              ;
 967  8D1E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 968  8D1E              ;					"0" ..... Izquierda.
 969  8D1E
 970  8D1E              Inicia_Puntero_objeto
 971  8D1E
 972  8D1E 3A C4 89     	ld a,(Cuad_objeto)
 973  8D21 E6 01        	and 1
 974  8D23 F5           	push af
 975  8D24 CC 42 8D     	call z,Inicia_puntero_objeto_izq
 976  8D27 F1           	pop af
 977  8D28 28 2B        	jr z,1F
 978  8D2A CD 2F 8D     	call Inicia_puntero_objeto_der
 979  8D2D 18 26        	jr 1F
 980  8D2F
 981  8D2F              ; Arrancamos desde la parte izquierda de la pantalla.
 982  8D2F              ; Iniciamos (Indice_Sprite_der).
 983  8D2F
 984  8D2F 2A BA 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 985  8D32 22 BE 89     	ld (Puntero_DESPLZ_der),hl
 986  8D35 CD 18 8D     	call Extrae_address
 987  8D38 22 B4 89     	ld (Puntero_objeto),hl
 988  8D3B
 989  8D3B 2A BC 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 990  8D3E 22 C0 89     	ld (Puntero_DESPLZ_izq),hl
 991  8D41 C9           	ret
 992  8D42
 993  8D42              ; Arrancamos desde la parte derecha de la pantalla.
 994  8D42              ; Iniciamos (Indice_Sprite_izq).
 995  8D42
 996  8D42 2A BC 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 997  8D45 22 C0 89     	ld (Puntero_DESPLZ_izq),hl
 998  8D48 CD 18 8D     	call Extrae_address
 999  8D4B 22 B4 89     	ld (Puntero_objeto),hl
1000  8D4E
1001  8D4E 2A BA 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1002  8D51 22 BE 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1003  8D54 C9           	ret
1004  8D55
1005  8D55              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1006  8D55
1007  8D55 21 48 83     1 ld hl,Amadeus
1008  8D58 ED 4B B4 89  	ld bc,(Puntero_objeto)
1009  8D5C B7 ED 42     	sub hl,bc
1010  8D5F C0           	ret nz
1011  8D60 21 DE 89     	ld hl,Ctrl_0
1012  8D63 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1013  8D65 C9           	ret 												; _de nuestra nave en los extremos.
1014  8D66
1015  8D66              ; *************************************************************************************************************************************************************
1016  8D66              ;
1017  8D66              ;	14/5/23
1018  8D66              ;
1019  8D66              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1020  8D66              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1021  8D66
1022  8D66              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1023  8D66              ;	_de la 2ª y 3ª entidad respectivamente.
1024  8D66
1025  8D66              Store_Restore_cajas
1026  8D66
1027  8D66 E5           	push hl
1028  8D67 D5           	push de
1029  8D68 C5            	push bc
1030  8D69
1031  8D69              ;	STORE !!!!!
1032  8D69              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1033  8D69
1034  8D69 21 B0 89     	ld hl,Filas
1035  8D6C ED 5B F3 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1036  8D70 01 40 00     	ld bc,64
1037  8D73 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1038  8D75
1039  8D75              ; 	Entidad_sospechosa. 20/4/23
1040  8D75
1041  8D75 3A C9 89     	ld a,(Impacto)
1042  8D78 A7           	and a
1043  8D79 28 0C        	jr z,1F
1044  8D7B
1045  8D7B 2A F3 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1046  8D7E 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1047  8D81 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1048  8D82 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1049  8D84 22 0F 8A     	ld (Entidad_sospechosa_de_colision),hl
1050  8D87
1051  8D87              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1052  8D87
1053  8D87 2A F5 89     1 ld hl,(Puntero_restore_caja)
1054  8D8A 7E           	ld a,(hl)
1055  8D8B A7           	and a
1056  8D8C F5           	push af
1057  8D8D 28 08        	jr z,2F
1058  8D8F
1059  8D8F 11 B0 89     	ld de,Filas
1060  8D92 01 40 00     	ld bc,64
1061  8D95 ED B0        	ldir
1062  8D97
1063  8D97 CD B3 8D     2 call Incrementa_punteros_de_cajas
1064  8D9A F1           	pop af
1065  8D9B 28 EA        	jr z,1B
1066  8D9D
1067  8D9D C1           	pop bc
1068  8D9E D1           	pop de
1069  8D9F E1           	pop hl
1070  8DA0
1071  8DA0 C9           	ret
1072  8DA1
1073  8DA1              ; **************************************************************************************************
1074  8DA1              ;
1075  8DA1              ;	12/05/23
1076  8DA1              ;
1077  8DA1              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1078  8DA1
1079  8DA1 E5           Restore_entidad push hl
1080  8DA2 D5           	push de
1081  8DA3 C5            	push bc
1082  8DA4
1083  8DA4 2A F3 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1084  8DA7 11 B0 89     	ld de,Filas
1085  8DAA 01 40 00     	ld bc,64
1086  8DAD ED B0        	ldir
1087  8DAF
1088  8DAF C1           	pop bc
1089  8DB0 D1           	pop de
1090  8DB1 E1           	pop hl
1091  8DB2 C9           	ret
1092  8DB3
1093  8DB3
1094  8DB3              ; **************************************************************************************************
1095  8DB3              ;
1096  8DB3              ;	08/05/23
1097  8DB3              ;
1098  8DB3              ;	Incrementamos los dos punteros de entidades. (+1).
1099  8DB3
1100  8DB3 2A F5 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1101  8DB6 22 F3 89     	ld (Puntero_store_caja),hl
1102  8DB9 2A F7 89     	ld hl,(Indice_restore_caja)
1103  8DBC 23           	inc hl
1104  8DBD 23           	inc hl
1105  8DBE 22 F7 89     	ld (Indice_restore_caja),hl
1106  8DC1 CD 18 8D         call Extrae_address
1107  8DC4 22 F5 89         ld (Puntero_restore_caja),hl
1108  8DC7 C9               ret
1109  8DC8
1110  8DC8              ; **************************************************************************************************
1111  8DC8              ;
1112  8DC8              ;	25/01/23
1113  8DC8              ;
1114  8DC8              ;	Restore_Amadeus
1115  8DC8              ;
1116  8DC8              ;	Cargamos en DRAW los parámetros de Amadeus.
1117  8DC8              ;
1118  8DC8
1119  8DC8 E5           Restore_Amadeus	push hl
1120  8DC9 D5           	push de
1121  8DCA C5            	push bc
1122  8DCB 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1123  8DCE 11 B0 89     	ld de,Filas
1124  8DD1 01 40 00     	ld bc,64
1125  8DD4 ED B0        	ldir
1126  8DD6 C1           	pop bc
1127  8DD7 D1           	pop de
1128  8DD8 E1           	pop hl
1129  8DD9 C9           	ret
1130  8DDA
1131  8DDA              ; *************************************************************************************************************************************************************
1132  8DDA              ;
1133  8DDA              ;	29/04/23
1134  8DDA              ;
1135  8DDA              ;	Store_Amadeus
1136  8DDA              ;
1137  8DDA              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1138  8DDA              ;
1139  8DDA              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1140  8DDA              ;
1141  8DDA              ;	DESTRUYE: HL y BC y DE.
1142  8DDA
1143  8DDA 21 B0 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1144  8DDD 01 40 00     	ld bc,64
1145  8DE0 ED B0        	ldir
1146  8DE2 C9           	ret
1147  8DE3
1148  8DE3              ; -----------------------------------------------------------
1149  8DE3              ;
1150  8DE3              ;	27/04/23
1151  8DE3              ;
1152  8DE3              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1153  8DE3              ;
1154  8DE3              ;	Destruye: HL,BC,DE,A
1155  8DE3
1156  8DE3 21 B0 89     Borra_datos_entidad ld hl,Filas
1157  8DE6 01 3F 00     	ld bc,63
1158  8DE9 AF           	xor a
1159  8DEA 77           	ld (hl),a
1160  8DEB 11 B1 89     	ld de,Filas+1
1161  8DEE ED B0        	ldir
1162  8DF0 C9           	ret
1163  8DF1
1164  8DF1              ; -----------------------------------------------------------
1165  8DF1
1166  8DF1              ; Teclado.
1167  8DF1
1168  8DF1 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1169  8DF3 DB FE        	in a,($fe)
1170  8DF5 E6 01        	and $01
1171  8DF7 28 02        	jr z,1f
1172  8DF9 18 F6        	jr Pulsa_ENTER
1173  8DFB C9           1 ret
1174  8DFC
1175  8DFC              ; **************************************************************************************************
1176  8DFC              ;
1177  8DFC              ; Temporización.
1178  8DFC
1179  8DFC              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1180  8DFC              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1181  8DFC              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1182  8DFC              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1183  8DFC
1184  8DFC              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1185  8DFC              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1186  8DFC              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1187  8DFC
1188  8DFC              ; A partir de $4f61 no hace falta DELAY.
1189  8DFC
1190  8DFC              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1191  8DFC
1192  8DFC 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1193  8DFF 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1194  8E00 78           	LD A,B
1195  8E01 A7           	AND A
1196  8E02 20 FB        	JR NZ,wait
1197  8E04 C9           	RET
1198  8E05
1199  8E05              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1200  8E05              ;
1201  8E05              ;	5/3/23
1202  8E05              ;
1203  8E05              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1204  8E05
1205  8E05              Movimiento_Amadeus
1206  8E05
1207  8E05              ; Disparo.
1208  8E05
1209  8E05 3A 1D 8A     	ld a,(Habilita_disparo_Amadeus)
1210  8E08 A7           	and a
1211  8E09 20 02        	jr nz,1F
1212  8E0B 18 15        	jr 2F
1213  8E0D
1214  8E0D 3E F7        1 ld a,$f7													; "5" para disparar.
1215  8E0F DB FE        	in a,($fe)
1216  8E11 E6 10        	and $10
1217  8E13
1218  8E13 F5           	push af
1219  8E14 CC 4C 8E     	call z,Genera_disparo
1220  8E17 F1           	pop af
1221  8E18 20 08        	jr nz,2F
1222  8E1A
1223  8E1A 3A 1D 8A     	ld a,(Habilita_disparo_Amadeus)
1224  8E1D EE 01        	xor 1
1225  8E1F 32 1D 8A     	ld (Habilita_disparo_Amadeus),a
1226  8E22
1227  8E22 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1228  8E24 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1229  8E26 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1230  8E28 CC A2 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1231  8E2B 3E F7        	ld a,$f7
1232  8E2D DB FE        	in a,($fe)
1233  8E2F E6 01        	and $01
1234  8E31 C8           	ret z
1235  8E32
1236  8E32 3E F7        	ld a,$f7
1237  8E34 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1238  8E36 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1239  8E38 CC 84 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1240  8E3B C9           	ret
1241  8E3C
1242  8E3C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1243  8E3C              ;
1244  8E3C              ;	Rutina provisional para que los malotes cagen balas.
1245  8E3C
1246  8E3C              Detecta_disparo_entidad
1247  8E3C
1248  8E3C 3A 20 8A     	ld a,(Habilita_disparo_entidad)
1249  8E3F A7           	and a
1250  8E40 C8           	ret z
1251  8E41 3E 7F        	ld a,$7f
1252  8E43 DB FE        	in a,($fe)
1253  8E45 E6 01        	and 1
1254  8E47 C0           	ret nz
1255  8E48 CD 4C 8E     	call Genera_disparo
1256  8E4B C9           	ret
1257  8E4C
1258  8E4C              ; ---------------------------------------------------------------
1259  8E4C
1260  8E4C              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E4C              ; ******************************************************************************************************************************************************************************************
   2+ 8E4C              ;
   3+ 8E4C              ;   17/04/23
   4+ 8E4C              ;
   5+ 8E4C              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E4C              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E4C              ;
   8+ 8E4C              ;
   9+ 8E4C              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E4C              ;
  11+ 8E4C              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E4C              ;               _ hacen las entidades hacia abajo.
  13+ 8E4C              ;
  14+ 8E4C              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E4C              ;
  16+ 8E4C              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E4C              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E4C              ;
  19+ 8E4C              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E4C              ;           _ la bala.
  21+ 8E4C              ;
  22+ 8E4C              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E4C              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E4C              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E4C              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E4C              ;           _ en el momento de generarse la bala)).
  27+ 8E4C
  28+ 8E4C              Genera_disparo
  29+ 8E4C
  30+ 8E4C              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E4C              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E4C              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E4C              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E4C              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E4C              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E4C              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E4C
  38+ 8E4C              ; Exclusiones:
  39+ 8E4C
  40+ 8E4C 3A EA 89         ld a,(Columnas)
  41+ 8E4F 47               ld b,a
  42+ 8E50 3A B1 89         ld a,(Columns)
  43+ 8E53 B8               cp b
  44+ 8E54 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E55
  46+ 8E55              ; ----- ----- -----
  47+ 8E55
  48+ 8E55 3A DE 89         ld a,(Ctrl_0)
  49+ 8E58 CB 77            bit 6,a
  50+ 8E5A 20 06            jr nz,14F
  51+ 8E5C
  52+ 8E5C 3A B7 89         ld a,(Coordenada_y)
  53+ 8E5F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E61 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E62
  56+ 8E62 21 00 80     14 ld hl,Indice_disparo
  57+ 8E65 3A B8 89         ld a,(CTRL_DESPLZ)
  58+ 8E68 4F               ld c,a
  59+ 8E69 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E6B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E6B              ;                                            ""        ""       "f9", B="1"
  62+ 8E6B              ;                                            ""        ""       "fb", B="2"
  63+ 8E6B              ;                                            ""        ""       "fb", B="3"
  64+ 8E6B A7               and a
  65+ 8E6C 28 10            jr z,1F
  66+ 8E6E E6 01            and 1
  67+ 8E70 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E71
  69+ 8E71 79               ld a,c
  70+ 8E72 16 F9            ld d,$f9
  71+ 8E74 23           2 inc hl
  72+ 8E75 23               inc hl
  73+ 8E76 04               inc b
  74+ 8E77 BA               cp d
  75+ 8E78 28 04            jr z,1F
  76+ 8E7A 14               inc d
  77+ 8E7B 14               inc d
  78+ 8E7C 18 F6            jr 2B
  79+ 8E7E
  80+ 8E7E CD 18 8D     1 call Extrae_address
  81+ 8E81 E5               push hl
  82+ 8E82 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E84 DD 21 9D 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E88
  85+ 8E88              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E88              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E88
  88+ 8E88 3A DE 89         ld a,(Ctrl_0)
  89+ 8E8B CB 77            bit 6,a
  90+ 8E8D 20 04            jr nz,19F
  91+ 8E8F
  92+ 8E8F AF               xor a
  93+ 8E90 32 20 8A         ld (Habilita_disparo_entidad),a
  94+ 8E93
  95+ 8E93 3A C4 89     19 ld a,(Cuad_objeto)
  96+ 8E96 FE 02            cp 2
  97+ 8E98 38 66            jr c,3F
  98+ 8E9A 28 64            jr z,3F
  99+ 8E9C
 100+ 8E9C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E9C
 102+ 8E9C E6 01            and 1
 103+ 8E9E 28 30            jr z,4F
 104+ 8EA0
 105+ 8EA0              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8EA0              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8EA0              ;
 108+ 8EA0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8EA0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8EA0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8EA0
 112+ 8EA0 2A B2 89     	ld hl,(Posicion_actual)
 113+ 8EA3
 114+ 8EA3              ;   Amadeus o entidad ???.
 115+ 8EA3
 116+ 8EA3 3A DE 89         ld a,(Ctrl_0)
 117+ 8EA6 CB 77            bit 6,a
 118+ 8EA8 28 0A            jr z,8F
 119+ 8EAA
 120+ 8EAA              ; 	Dispara Amadeus.
 121+ 8EAA
 122+ 8EAA 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8EAC CD 19 96         call PreviousScan
 124+ 8EAF CD 19 96         call PreviousScan
 125+ 8EB2
 126+ 8EB2              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EB2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EB2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EB2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EB2
 131+ 8EB2 18 11            jr 10F
 132+ 8EB4
 133+ 8EB4              ; 	Dispara Entidad.
 134+ 8EB4
 135+ 8EB4 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EB7              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EB7
 138+ 8EB7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EB7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EB7
 141+ 8EB7 C5               push bc
 142+ 8EB8 06 10            ld b,16
 143+ 8EBA CD 0A 96     9 call NextScan
 144+ 8EBD 10 FB            djnz 9B
 145+ 8EBF C1               pop bc
 146+ 8EC0 CD 2A 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EC3 18 06            jr 17F
 148+ 8EC5
 149+ 8EC5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EC5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EC5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EC5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EC5
 154+ 8EC5 CD 2A 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EC8 CD 9F 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8ECB              ;                                                      ; _al generar el disparo.
 157+ 8ECB
 158+ 8ECB              ; 	LLegados a este punto tendremos:
 159+ 8ECB              ;
 160+ 8ECB              ;       Puntero_objeto_disparo en IY.
 161+ 8ECB              ;       Rutinas_de_impresion en IX.
 162+ 8ECB              ;       Puntero_de_impresion en HL.
 163+ 8ECB              ;       Impacto/Dirección en BC.
 164+ 8ECB
 165+ 8ECB CD 32 8F     17 call Almacena_disparo
 166+ 8ECE 18 52            jr 6F                                             ; RET.
 167+ 8ED0
 168+ 8ED0              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8ED0              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8ED0              ;
 171+ 8ED0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8ED0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8ED0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8ED0
 175+ 8ED0 2A B2 89     4 ld hl,(Posicion_actual)
 176+ 8ED3
 177+ 8ED3              ;   Amadeus o entidad ???.
 178+ 8ED3
 179+ 8ED3 3A DE 89         ld a,(Ctrl_0)
 180+ 8ED6 CB 77            bit 6,a
 181+ 8ED8 28 0A            jr z,11F
 182+ 8EDA
 183+ 8EDA              ; 	Dispara Amadeus.
 184+ 8EDA
 185+ 8EDA 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EDC CD 19 96         call PreviousScan
 187+ 8EDF CD 19 96         call PreviousScan
 188+ 8EE2
 189+ 8EE2              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EE2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EE2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EE2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EE2
 194+ 8EE2 18 11            jr 13F
 195+ 8EE4
 196+ 8EE4              ; 	Dispara Entidad.
 197+ 8EE4
 198+ 8EE4 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EE7              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EE7
 201+ 8EE7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EE7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EE7
 204+ 8EE7 C5               push bc
 205+ 8EE8 06 10            ld b,16
 206+ 8EEA CD 0A 96     12 call NextScan
 207+ 8EED 10 FB            djnz 12B
 208+ 8EEF C1               pop bc
 209+ 8EF0
 210+ 8EF0 CD 23 8F         call Ajusta_disparo_parte_derecha
 211+ 8EF3 18 06            jr 18F
 212+ 8EF5
 213+ 8EF5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8EF5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8EF5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8EF5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8EF5
 218+ 8EF5 CD 23 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8EF8 CD 9F 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EFB              ;                                                       ; _al generar el disparo.
 221+ 8EFB
 222+ 8EFB              ; LLegados a este punto tendremos:
 223+ 8EFB              ;
 224+ 8EFB              ;       Puntero_objeto_disparo en IY.
 225+ 8EFB              ;       Rutinas_de_impresion en IX.
 226+ 8EFB              ;       Puntero_de_impresion en HL.
 227+ 8EFB              ;       Impacto/Dirección en BC.
 228+ 8EFB
 229+ 8EFB CD 32 8F     18 call Almacena_disparo
 230+ 8EFE 18 22            jr 6F                                               ; RET.
 231+ 8F00
 232+ 8F00              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8F00
 234+ 8F00 28 11        3 jr z,5F
 235+ 8F02
 236+ 8F02              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8F02              ;
 238+ 8F02              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8F02              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8F02              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8F02              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8F02
 243+ 8F02              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8F02              ;	   ""        ""       "f9", B="1"
 245+ 8F02              ;	   ""        ""       "fb", B="2"
 246+ 8F02              ; 	   ""        ""       "fb", B="3"
 247+ 8F02
 248+ 8F02 2A B2 89     	ld hl,(Posicion_actual)
 249+ 8F05 CD 0A 96     	call NextScan
 250+ 8F08
 251+ 8F08              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8F08              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8F08              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8F08              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8F08
 256+ 8F08 CD 2A 8F         call Ajusta_disparo_parte_izquierda
 257+ 8F0B
 258+ 8F0B              ; 	No se produce impacto. B="$80"
 259+ 8F0B              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8F0B
 261+ 8F0B 01 80 80         ld bc,$8080
 262+ 8F0E
 263+ 8F0E              ; 	LLegados a este punto tendremos:
 264+ 8F0E              ;
 265+ 8F0E              ;       Puntero_objeto_disparo en IY.
 266+ 8F0E              ;       Rutinas_de_impresion en IX.
 267+ 8F0E              ;       Puntero_de_impresion en HL.
 268+ 8F0E              ;       Impacto/Dirección en BC.
 269+ 8F0E
 270+ 8F0E CD 32 8F         call Almacena_disparo
 271+ 8F11 18 0F            jr 6F                                           ; RET.
 272+ 8F13
 273+ 8F13              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F13              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F13              ;
 276+ 8F13              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F13              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F13              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F13              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F13
 281+ 8F13 2A B2 89     5 ld hl,(Posicion_actual)
 282+ 8F16 CD 0A 96     	call NextScan
 283+ 8F19
 284+ 8F19              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F19              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F19              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F19              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F19
 289+ 8F19 CD 23 8F         call Ajusta_disparo_parte_derecha
 290+ 8F1C
 291+ 8F1C              ; 	No se produce impacto. B="$80"
 292+ 8F1C              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F1C
 294+ 8F1C 01 80 80     15 ld bc,$8080
 295+ 8F1F
 296+ 8F1F              ; 	LLegados a este punto tendremos:
 297+ 8F1F              ;
 298+ 8F1F              ;       Puntero_objeto_disparo en IY.
 299+ 8F1F              ;       Rutinas_de_impresion en IX.
 300+ 8F1F              ;       Puntero_de_impresion en HL.
 301+ 8F1F              ;       Impacto/Dirección en BC.
 302+ 8F1F
 303+ 8F1F CD 32 8F         call Almacena_disparo
 304+ 8F22
 305+ 8F22 C9           6 ret
 306+ 8F23
 307+ 8F23              ; ----------------------------------------------------------------
 308+ 8F23              ;
 309+ 8F23              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F23              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F23              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F23
 313+ 8F23 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F24 FE 02            cp 2
 315+ 8F26 38 01            jr c,1F
 316+ 8F28 23               inc hl
 317+ 8F29 C9           1 ret
 318+ 8F2A
 319+ 8F2A 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F2B FE 01        	cp 1
 321+ 8F2D 20 01        	jr nz,1F
 322+ 8F2F 2B           	dec hl
 323+ 8F30 2B           1 dec hl
 324+ 8F31 C9               ret
 325+ 8F32
 326+ 8F32              ; ----------------------------------------------------------------
 327+ 8F32              ;
 328+ 8F32              ;   25/02/23
 329+ 8F32              ;
 330+ 8F32              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F32              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F32              ;
 333+ 8F32              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F32              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F32
 336+ 8F32              Almacena_disparo
 337+ 8F32
 338+ 8F32 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F33 F1               pop af
 340+ 8F34 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F35
 342+ 8F35 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F36 E6 01            and 1
 344+ 8F38 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F3A              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F3A              ; 	Dispara AMADEUS.
 347+ 8F3A
 348+ 8F3A              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F3A              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F3A              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F3A              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F3A
 353+ 8F3A C5               push bc
 354+ 8F3B 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F3E 2A 0C 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F41 A7               and a
 357+ 8F42 ED 42            sbc hl,bc
 358+ 8F44 CC E1 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F47 C1               pop bc
 360+ 8F48 28 54            jr z,4F
 361+ 8F4A
 362+ 8F4A 2A 0C 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F4D 23               inc hl
 364+ 8F4E 23               inc hl
 365+ 8F4F 22 0C 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F52              ;                                                   ; _ Disparo_(+1).
 367+ 8F52 18 18            jr 2F
 368+ 8F54
 369+ 8F54              ; Dispara una entidad.
 370+ 8F54
 371+ 8F54 C5           1 push bc
 372+ 8F55 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F58 2A 0A 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F5B A7               and a
 375+ 8F5C ED 42            sbc hl,bc
 376+ 8F5E CC DA 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F61 C1               pop bc
 378+ 8F62 28 3A            jr z,4F
 379+ 8F64
 380+ 8F64 2A 0A 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F67 23               inc hl
 382+ 8F68 23               inc hl
 383+ 8F69 22 0A 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F6C              ;                                                   ; _ Disparo_(+1).
 385+ 8F6C CD 18 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F6F              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F6F              ;
 388+ 8F6F              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F6F              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F6F              ;                                                     Puntero_de_impresion en HL.
 391+ 8F6F              ;                                                     Impacto/Dirección en BC.
 392+ 8F6F
 393+ 8F6F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F70 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F71 23               inc hl                                          ; _ al siguiente.
 396+ 8F72 A7               and a
 397+ 8F73 20 C0            jr nz,3B
 398+ 8F75
 399+ 8F75 08               ex af,af
 400+ 8F76 ED 73 01 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F7A F9               ld sp,hl
 402+ 8F7B
 403+ 8F7B DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F7D F5               push af                                         ; Puntero de impresión.
 405+ 8F7E FD E5            push iy                                         ; Puntero objeto.
 406+ 8F80 C5               push bc                                         ; Control.
 407+ 8F81
 408+ 8F81 ED 7B 01 8A      ld sp,(Stack)
 409+ 8F85
 410+ 8F85              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F85
 412+ 8F85 21 F0 89     	ld hl,Ctrl_1
 413+ 8F88 CB C6        	set 0,(hl)
 414+ 8F8A
 415+ 8F8A DD E5        	push ix
 416+ 8F8C E1               pop hl
 417+ 8F8D F5               push af
 418+ 8F8E DD E1            pop ix
 419+ 8F90
 420+ 8F90 CD A0 7F     	call Guarda_foto_registros
 421+ 8F93
 422+ 8F93 21 F0 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F96 CB 86        	res 0,(hl)
 424+ 8F98
 425+ 8F98              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F98              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F98
 428+ 8F98 CD E1 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F9B CD DA 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F9E
 431+ 8F9E C9           4 ret
 432+ 8F9F
 433+ 8F9F              ; ----------------------------------------------------------------
 434+ 8F9F              ;
 435+ 8F9F              ;   4/3/23
 436+ 8F9F              ;
 437+ 8F9F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F9F              ;   _ al generarse el disparo.
 439+ 8F9F              ;
 440+ 8F9F              ;       "$80" ..... No se produce colisión.
 441+ 8F9F              ;       "$81" ..... Se produce colisión.
 442+ 8F9F
 443+ 8F9F              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F9F              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F9F
 446+ 8F9F
 447+ 8F9F FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8FA1 E5               push hl                                        ; Puntero de impresión.
 449+ 8FA2
 450+ 8FA2 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8FA4 CD C0 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8FA7
 453+ 8FA7 7B               ld a,e
 454+ 8FA8 E6 01            and 1
 455+ 8FAA 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8FAC
 457+ 8FAC E1               pop hl
 458+ 8FAD E5               push hl
 459+ 8FAE CD 0A 96         call NextScan
 460+ 8FB1
 461+ 8FB1 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FB2 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FB4 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FB6              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FB6 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FB8 CD C0 8F         call Bucle_2
 467+ 8FBB
 468+ 8FBB 43           2 ld b,e
 469+ 8FBC E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FBD FD E1            pop iy
 471+ 8FBF C9               ret
 472+ 8FC0
 473+ 8FC0               ; ---------- ----------
 474+ 8FC0
 475+ 8FC0 06 02        Bucle_2 ld b,2
 476+ 8FC2 FD 7E 00     2 ld a,(iy)
 477+ 8FC5 A6               and (hl)
 478+ 8FC6 28 02            jr z,1F
 479+ 8FC8 1E 81            ld e,$81
 480+ 8FCA 23           1 inc hl
 481+ 8FCB FD 23            inc iy
 482+ 8FCD 10 F3            djnz 2B
 483+ 8FCF C9               ret
 484+ 8FD0
 485+ 8FD0              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FD0              ;
 487+ 8FD0              ;   11/04/23
 488+ 8FD0              ;
 489+ 8FD0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FD0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FD0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FD0              ;
 493+ 8FD0              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FD0
 495+ 8FD0              Compara_coordenadas_X
 496+ 8FD0
 497+ 8FD0              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FD0              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FD0
 500+ 8FD0              ; Preparamos registros:
 501+ 8FD0
 502+ 8FD0 21 B6 89         ld hl,Filas+6
 503+ 8FD3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FD4 23               inc hl
 505+ 8FD5 23               inc hl
 506+ 8FD6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FD7 43               ld b,e
 508+ 8FD8
 509+ 8FD8 21 C4 89         ld hl,Filas+20
 510+ 8FDB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 511+ 8FDC 21 16 8A         ld hl,Coordenadas_X_Entidad
 512+ 8FDF CD F3 91         call Guarda_coordenadas_X
 513+ 8FE2
 514+ 8FE2              ; Preparamos registros:
 515+ 8FE2
 516+ 8FE2 21 92 85         ld hl,Amadeus_db+6
 517+ 8FE5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 518+ 8FE6 23               inc hl
 519+ 8FE7 23               inc hl
 520+ 8FE8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 521+ 8FE9 7B               ld a,e
 522+ 8FEA 08               ex af,af'
 523+ 8FEB 21 A0 85         ld hl,Amadeus_db+20
 524+ 8FEE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 525+ 8FEF 21 13 8A         ld hl,Coordenadas_X_Amadeus
 526+ 8FF2 CD F3 91         call Guarda_coordenadas_X
 527+ 8FF5
 528+ 8FF5              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 529+ 8FF5              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 530+ 8FF5
 531+ 8FF5 04               inc b
 532+ 8FF6 05               dec b
 533+ 8FF7 28 04            jr z,1F
 534+ 8FF9 06 03            ld b,3
 535+ 8FFB 18 02            jr 2F
 536+ 8FFD 06 02        1 ld b,2
 537+ 8FFF 08           2 ex af,af'
 538+ 9000 3C               inc a
 539+ 9001 3D               dec a
 540+ 9002 28 04            jr z,5F
 541+ 9004 0E 03            ld c,3
 542+ 9006 18 02            jr 6F
 543+ 9008 0E 02        5 ld c,2
 544+ 900A 79           6 ld a,c
 545+ 900B 08               ex af,af'
 546+ 900C 11 16 8A         ld de,Coordenadas_X_Entidad
 547+ 900F 1A           4 ld a,(de)
 548+ 9010 21 13 8A         ld hl,Coordenadas_X_Amadeus
 549+ 9013 BE           3 cp (hl)
 550+ 9014 28 0E            jr z,7F
 551+ 9016 23               inc hl
 552+ 9017 0D               dec c
 553+ 9018 20 F9            jr nz,3B
 554+ 901A 13               inc de
 555+ 901B 08               ex af,af'
 556+ 901C 4F               ld c,a
 557+ 901D 08               ex af,af'
 558+ 901E 10 EF            djnz 4B
 559+ 9020
 560+ 9020              ; Limpiamos los almacenes de coordenadas y salimos.
 561+ 9020
 562+ 9020 CD 32 92     8 call Limpia_Coordenadas_X
 563+ 9023 C9               ret
 564+ 9024
 565+ 9024 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9026 32 C9 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9029 21 0E 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 902C CB D6            set 2,(hl)
 569+ 902E 18 F0            jr 8B
 570+ 9030
 571+ 9030              ; -----------------------------------------------------------------------
 572+ 9030              ;
 573+ 9030              ;   17/04/23
 574+ 9030              ;
 575+ 9030
 576+ 9030              Detecta_colision_nave_entidad
 577+ 9030
 578+ 9030              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9030
 580+ 9030 2A B2 89         ld hl,(Posicion_actual)
 581+ 9033 CD 6F 95         call Calcula_puntero_de_impresion
 582+ 9036
 583+ 9036              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9036              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9036
 586+ 9036 DD E5            push ix
 587+ 9038 E1               pop hl
 588+ 9039 E5               push hl
 589+ 903A
 590+ 903A              ; ----- ----- -----
 591+ 903A 1E 00            ld e,0                                         ; Indica impacto.
 592+ 903C 06 0A            ld b,10
 593+ 903E CD 6E 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9041 7B               ld a,e
 595+ 9042 FE 05            cp 5
 596+ 9044 38 0E            jr c,3F
 597+ 9046
 598+ 9046              ; LLegados a este punto:
 599+ 9046              ;
 600+ 9046              ;   HAY COLISIÓN !!!!!.
 601+ 9046              ;
 602+ 9046              ;   .db (Impacto) de Amadeus a "1".
 603+ 9046              ;   SET el bit3 de (Impacto2).
 604+ 9046              ;
 605+ 9046              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9046
 607+ 9046 21 A5 85         ld hl,Amadeus_db+25
 608+ 9049 36 01            ld (hl),1
 609+ 904B 21 0E 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 904E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9050 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9052 18 18            jr 1F
 613+ 9054
 614+ 9054              ; -----
 615+ 9054
 616+ 9054 E1           3 pop hl
 617+ 9055 CD 0A 96         call NextScan
 618+ 9058 E5               push hl
 619+ 9059 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 905A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 905C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 905E 30 0C            jr nc,1F
 623+ 9060              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9060 10 DC            djnz 2B
 625+ 9062
 626+ 9062              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9062
 628+ 9062              ; LLegados a este punto:
 629+ 9062              ;
 630+ 9062              ;   NO HAY COLISIÓN !!!!!.
 631+ 9062              ;
 632+ 9062              ;   .db (Impacto) de Amadeus a "0".
 633+ 9062              ;   RES el bit2 de (Impacto2).
 634+ 9062              ;
 635+ 9062              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9062              ;   Lo colocamos a "0".
 637+ 9062
 638+ 9062 21 0E 8A         ld hl,Impacto2
 639+ 9065 CB 96            res 2,(hl)
 640+ 9067 2A 0F 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 906A 36 00            ld (hl),0
 642+ 906C
 643+ 906C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 906D C9               ret
 645+ 906E
 646+ 906E               ; ---------- ----------
 647+ 906E
 648+ 906E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 906F 3A B1 89         ld a,(Columns)
 650+ 9072 47               ld b,a
 651+ 9073 FD 7E 00     2 ld a,(iy)
 652+ 9076 BE               cp (hl)
 653+ 9077 28 01            jr z,1F
 654+ 9079
 655+ 9079 1C               inc e
 656+ 907A
 657+ 907A 23           1 inc hl
 658+ 907B FD 23            inc iy
 659+ 907D 10 F4            djnz 2B
 660+ 907F C1               pop bc
 661+ 9080 C9               ret
 662+ 9081
 663+ 9081              ; -------------------------------------------------------------------------------------------------------------
 664+ 9081              ;
 665+ 9081              ;   13/03/23
 666+ 9081              ;
 667+ 9081              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9081              ;
 669+ 9081              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9081
 671+ 9081 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9084 7E               ld a,(hl)
 673+ 9085 A7               and a
 674+ 9086 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9087
 676+ 9087 44               ld b,h
 677+ 9088 4D               ld c,l
 678+ 9089 2A 07 8A         ld hl,(Stack_snapshot_disparos)
 679+ 908C E5               push hl
 680+ 908D A7               and a
 681+ 908E ED 42            sbc hl,bc
 682+ 9090 E5               push hl
 683+ 9091 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9092
 685+ 9092 E1               pop hl
 686+ 9093 54               ld d,h
 687+ 9094 5D               ld e,l
 688+ 9095 1B               dec de
 689+ 9096 ED B8            lddr                                                ; Limpiamos.
 690+ 9098
 691+ 9098 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 909B 22 07 8A         ld (Stack_snapshot_disparos),hl
 693+ 909E
 694+ 909E C9               ret
 695+ 909F
 696+ 909F              ; -------------------------------------------------------------------------------------------------------------
 697+ 909F              ;
 698+ 909F              ;   28/03/23
 699+ 909F              ;
 700+ 909F
 701+ 909F 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 90A2 2A 0C 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 90A5
 704+ 90A5 CD 18 8D     2 call Extrae_address
 705+ 90A8 7E               ld a,(hl)
 706+ 90A9 A7               and a
 707+ 90AA 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 90AC
 709+ 90AC              ; ----- ----- ----- ----- ----- -----
 710+ 90AC
 711+ 90AC C5               push bc
 712+ 90AD CD 69 91         call foto_disparo_a_borrar
 713+ 90B0
 714+ 90B0              ; Existe colisión con este disparo???
 715+ 90B0
 716+ 90B0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 90B1 7E               ld a,(hl)
 718+ 90B2 2B               dec hl
 719+ 90B3 E6 01            and 1
 720+ 90B5 28 1D            jr z,9F
 721+ 90B7
 722+ 90B7              ;   En este punto:
 723+ 90B7              ;
 724+ 90B7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90B7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90B7              ;   _con la entidad).
 727+ 90B7              ;
 728+ 90B7              ;   Disparo_2A defw 0                                ; Control.
 729+ 90B7              ;    defw 0                                          ; Puntero objeto.
 730+ 90B7              ;    defw 0                                          ; Puntero de impresión.
 731+ 90B7              ;    defw 0                                          ; Rutina de impresión.
 732+ 90B7
 733+ 90B7 E5               push hl
 734+ 90B8
 735+ 90B8 06 04            ld b,4
 736+ 90BA 23           19 inc hl
 737+ 90BB 10 FD            djnz 19B
 738+ 90BD
 739+ 90BD CD 18 8D         call Extrae_address
 740+ 90C0 CD 61 9C         call Genera_coordenadas_disparo
 741+ 90C3
 742+ 90C3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90C3
 744+ 90C3 21 11 8A         ld hl,Coordenadas_disparo_certero
 745+ 90C6 72               ld (hl),d
 746+ 90C7 23               inc hl
 747+ 90C8 73               ld (hl),e
 748+ 90C9
 749+ 90C9              ; Elimino el disparo de la base de datos.
 750+ 90C9
 751+ 90C9 E1               pop hl
 752+ 90CA CD E8 91         call Elimina_disparo_de_base_de_datos
 753+ 90CD 21 0E 8A         ld hl,Impacto2
 754+ 90D0 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90D2
 756+ 90D2 18 06            jr 11F
 757+ 90D4
 758+ 90D4 CD 92 91     9 call Mueve_disparo
 759+ 90D7 CD 69 91         call foto_disparo_a_borrar
 760+ 90DA
 761+ 90DA C1           11 pop bc
 762+ 90DB 18 04            jr 7F
 763+ 90DD
 764+ 90DD              ; ----- ----- ----- ----- ----- -----
 765+ 90DD
 766+ 90DD ED 42        1 sbc hl,bc
 767+ 90DF 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90E1 2A 0C 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90E4 23               inc hl
 770+ 90E5 23               inc hl
 771+ 90E6 22 0C 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90E9 18 BA            jr 2B
 773+ 90EB CD E1 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90EE
 775+ 90EE 01 72 85         ld bc,Disparo_11
 776+ 90F1 2A 0A 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90F4
 778+ 90F4 CD 18 8D     5 call Extrae_address
 779+ 90F7 7E               ld a,(hl)
 780+ 90F8 A7               and a
 781+ 90F9 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90FB
 783+ 90FB              ; ----- ----- ----- ----- ----- -----
 784+ 90FB
 785+ 90FB C5               push bc
 786+ 90FC CD 69 91         call foto_disparo_a_borrar
 787+ 90FF
 788+ 90FF              ; Existe colisión con este disparo???
 789+ 90FF
 790+ 90FF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 9100 7E               ld a,(hl)
 792+ 9101 2B               dec hl
 793+ 9102 E6 01            and 1
 794+ 9104 28 48            jr z,10F
 795+ 9106
 796+ 9106              ; La colisión se produce con Amadeus???
 797+ 9106              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 9106
 799+ 9106 E5               push hl
 800+ 9107
 801+ 9107 06 04            ld b,4
 802+ 9109 23           16 inc hl
 803+ 910A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 910C CD 18 8D         call Extrae_address
 805+ 910F CD 61 9C         call Genera_coordenadas_disparo
 806+ 9112
 807+ 9112 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 9113 FE 16            cp $16
 809+ 9115 38 22            jr c,15F
 810+ 9117
 811+ 9117              ; (Colisiones en filas 16 y 17).
 812+ 9117
 813+ 9117 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9118
 815+ 9118              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9118
 817+ 9118 21 92 85         ld hl,Amadeus_db+6
 818+ 911B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 911C 23               inc hl
 820+ 911D 23               inc hl
 821+ 911E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 911F 21 A0 85         ld hl,Amadeus_db+20
 823+ 9122 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9123 21 13 8A         ld hl,Coordenadas_X_Amadeus
 825+ 9126 CD F3 91         call Guarda_coordenadas_X
 826+ 9129
 827+ 9129 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 912A
 829+ 912A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 912A
 831+ 912A 06 03            ld b,3
 832+ 912C 21 13 8A         ld hl,Coordenadas_X_Amadeus
 833+ 912F 7E           18 ld a,(hl)
 834+ 9130 BA               cp d
 835+ 9131 20 03            jr nz,17F
 836+ 9133
 837+ 9133              ; Colisión Amadeus !!!!!!!!!!
 838+ 9133
 839+ 9133 E1               pop hl
 840+ 9134 18 09            jr 14F
 841+ 9136
 842+ 9136 23           17 inc hl
 843+ 9137 10 F6            djnz 18B
 844+ 9139
 845+ 9139              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9139              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9139
 848+ 9139 E1           15 pop hl
 849+ 913A 23               inc hl
 850+ 913B 35               dec (hl)
 851+ 913C 2B               dec hl
 852+ 913D 18 0F            jr 10F
 853+ 913F
 854+ 913F              ; -----------------------debug
 855+ 913F
 856+ 913F              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 913F              ; _ almacén de coordenadas_X de Amadeus.
 858+ 913F
 859+ 913F E5           14 push hl
 860+ 9140 CD E8 91         call Elimina_disparo_de_base_de_datos
 861+ 9143 21 0E 8A         ld hl,Impacto2
 862+ 9146 CB CE            set 1,(hl)
 863+ 9148 CD 32 92         call Limpia_Coordenadas_X
 864+ 914B
 865+ 914B E1               pop hl
 866+ 914C 18 06            jr 12F
 867+ 914E
 868+ 914E CD 92 91     10 call Mueve_disparo
 869+ 9151 CD 69 91         call foto_disparo_a_borrar
 870+ 9154 C1           12 pop bc
 871+ 9155
 872+ 9155 18 04            jr 8F
 873+ 9157
 874+ 9157              ; ----- ----- ----- ----- ----- -----
 875+ 9157
 876+ 9157 ED 42        4 sbc hl,bc
 877+ 9159 28 0A            jr z,6F
 878+ 915B
 879+ 915B 2A 0A 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 915E 23               inc hl
 881+ 915F 23               inc hl
 882+ 9160 22 0A 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9163 18 8F            jr 5B
 884+ 9165
 885+ 9165 CD DA 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9168 C9               ret
 887+ 9169
 888+ 9169              ; ------------------------------------------------------------------
 889+ 9169
 890+ 9169              foto_disparo_a_borrar
 891+ 9169
 892+ 9169 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 916A A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 916B C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 916C
 896+ 916C E5               push hl
 897+ 916D 23               inc hl
 898+ 916E 23               inc hl
 899+ 916F ED 73 01 8A      ld (Stack),sp
 900+ 9173 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9174 FD E1            pop iy
 902+ 9176 DD E1            pop ix
 903+ 9178 E1               pop hl
 904+ 9179 ED 7B 01 8A      ld sp,(Stack)
 905+ 917D 3A F0 89         ld a,(Ctrl_1)
 906+ 9180 CB C7            set 0,a
 907+ 9182 32 F0 89         ld (Ctrl_1),a
 908+ 9185 CD A0 7F         call Guarda_foto_registros
 909+ 9188 3A F0 89         ld a,(Ctrl_1)
 910+ 918B CB 87            res 0,a
 911+ 918D 32 F0 89         ld (Ctrl_1),a
 912+ 9190 E1               pop hl
 913+ 9191 C9               ret
 914+ 9192
 915+ 9192 E5           Mueve_disparo push hl
 916+ 9193 7E               ld a,(hl)
 917+ 9194 06 04            ld b,4
 918+ 9196 23           1 inc hl
 919+ 9197 10 FD            djnz 1B
 920+ 9199
 921+ 9199              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9199
 923+ 9199 CD 18 8D         call Extrae_address
 924+ 919C
 925+ 919C E6 01            and 1
 926+ 919E 28 2E            jr z,2F
 927+ 91A0
 928+ 91A0              ; Disparo hacia arriba, (Amadeus).
 929+ 91A0
 930+ 91A0              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 91A0              ; _ de la dificultad.
 932+ 91A0
 933+ 91A0 CD 19 96         call PreviousScan
 934+ 91A3 CD 19 96         call PreviousScan
 935+ 91A6 CD 19 96         call PreviousScan
 936+ 91A9 CD 19 96         call PreviousScan
 937+ 91AC
 938+ 91AC              ; Detecta si el disparo de Amadeus sale de pantalla:
 939+ 91AC
 940+ 91AC 7C               ld a,h
 941+ 91AD FE 40            cp $40
 942+ 91AF 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 943+ 91B1
 944+ 91B1              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 945+ 91B1
 946+ 91B1 EB               ex de,hl
 947+ 91B2 06 04            ld b,4
 948+ 91B4 2B           6 dec hl
 949+ 91B5 10 FD            djnz 6B
 950+ 91B7
 951+ 91B7 CD E8 91         call Elimina_disparo_de_base_de_datos
 952+ 91BA E1               pop hl
 953+ 91BB 18 10            jr 7F
 954+ 91BD
 955+ 91BD              ; Se ha desplazado la bala, compruebo colisión.
 956+ 91BD
 957+ 91BD D5           3 push de
 958+ 91BE C5               push bc
 959+ 91BF
 960+ 91BF CD 9F 8F         call Comprueba_Colision
 961+ 91C2
 962+ 91C2              ; B="$80", no hay colisión. B="$81", existe colisión.
 963+ 91C2
 964+ 91C2 78               ld a,b
 965+ 91C3
 966+ 91C3 C1               pop bc
 967+ 91C4 D1               pop de
 968+ 91C5
 969+ 91C5 EB               ex de,hl
 970+ 91C6
 971+ 91C6 73               ld (hl),e
 972+ 91C7 23               inc hl
 973+ 91C8 72               ld (hl),d
 974+ 91C9
 975+ 91C9 E1           4 pop hl
 976+ 91CA 23               inc hl
 977+ 91CB 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 978+ 91CC 2B               dec hl
 979+ 91CD C9           7 ret
 980+ 91CE
 981+ 91CE              ; Disparo hacia abajo, (Entidad).
 982+ 91CE
 983+ 91CE              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 984+ 91CE              ;! _ de la dificultad.
 985+ 91CE
 986+ 91CE CD 0A 96     2 call NextScan
 987+ 91D1 CD 0A 96         call NextScan
 988+ 91D4 CD 0A 96         call NextScan
 989+ 91D7              ;    call NextScan
 990+ 91D7
 991+ 91D7              ; Detecta si el disparo de la entidad sale de la pantalla.
 992+ 91D7
 993+ 91D7 7C               ld a,h
 994+ 91D8 FE 58            cp $58
 995+ 91DA 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 996+ 91DC
 997+ 91DC EB               ex de,hl
 998+ 91DD 06 04            ld b,4
 999+ 91DF 2B           5 dec hl
1000+ 91E0 10 FD            djnz 5B
1001+ 91E2
1002+ 91E2 CD E8 91         call Elimina_disparo_de_base_de_datos
1003+ 91E5 E1               pop hl
1004+ 91E6 18 E5            jr 7B
1005+ 91E8
1006+ 91E8              ; HL apunta al primer byte de la base de datos del disparo.
1007+ 91E8
1008+ 91E8 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1009+ 91EB AF               xor a
1010+ 91EC 77               ld (hl),a
1011+ 91ED 54               ld d,h
1012+ 91EE 5D               ld e,l
1013+ 91EF 13               inc de
1014+ 91F0 ED B0            ldir
1015+ 91F2 C9               ret
1016+ 91F3
1017+ 91F3              ; -----------------------------------------------------------------
1018+ 91F3              ;
1019+ 91F3              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1020+ 91F3              ;
1021+ 91F3              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1022+ 91F3              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1023+ 91F3              ;
1024+ 91F3              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1025+ 91F3              ;
1026+ 91F3              ;   INPUTS:
1027+ 91F3              ;
1028+ 91F3              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1029+ 91F3              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1030+ 91F3              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1031+ 91F3
1032+ 91F3              ;   MODIFICA: A, HL, DE y C
1033+ 91F3
1034+ 91F3 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1035+ 91F4 79               ld a,c
1036+ 91F5 E6 01            and 1
1037+ 91F7 20 03            jr nz,1F
1038+ 91F9 14               inc d
1039+ 91FA 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1040+ 91FC
1041+ 91FC              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1042+ 91FC              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1043+ 91FC
1044+ 91FC 15           1 dec d
1045+ 91FD 23           2 inc hl
1046+ 91FE 72               ld (hl),d
1047+ 91FF
1048+ 91FF 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1049+ 9200 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1050+ 9201 C8               ret z
1051+ 9202
1052+ 9202 AF               xor a
1053+ 9203 5F               ld e,a
1054+ 9204 18 ED            jr Guarda_coordenadas_X
1055+ 9206
1056+ 9206              ; -----------------------------------------------------------------
1057+ 9206              ;
1058+ 9206              ;   12/04/23
1059+ 9206              ;
1060+ 9206
1061+ 9206 3A 0E 8A     Selector_de_impactos ld a,(Impacto2)
1062+ 9209 A7               and a
1063+ 920A C8               ret z
1064+ 920B
1065+ 920B FE 04            cp 4
1066+ 920D 20 09            jr nz,1F
1067+ 920F
1068+ 920F
1069+ 920F              ; La colisión se produce por contacto entre Amadeus y una entidad.
1070+ 920F
1071+ 920F CD 30 90         call Detecta_colision_nave_entidad
1072+ 9212
1073+ 9212 21 0E 8A         ld hl,Impacto2
1074+ 9215 CB 5E            bit 3,(hl)
1075+ 9217 C0               ret nz                                               ; Existe colisión, RET.
1076+ 9218
1077+ 9218              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1078+ 9218              ; Primero analizamos si algún disparo impacta en Amadeus.
1079+ 9218
1080+ 9218 21 0E 8A     1 ld hl,Impacto2
1081+ 921B CB 4E            bit 1,(hl)
1082+ 921D 28 07            jr z,2F
1083+ 921F
1084+ 921F 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1085+ 9222 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1086+ 9224 18 0B            jr 3F
1087+ 9226
1088+ 9226 21 0E 8A     2 ld hl,Impacto2
1089+ 9229 CB 46            bit 0,(hl)
1090+ 922B C8               ret z
1091+ 922C
1092+ 922C              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1093+ 922C
1094+ 922C 21 F0 89         ld hl,Ctrl_1
1095+ 922F CB D6            set 2,(hl)
1096+ 9231
1097+ 9231 C9           3 ret
1098+ 9232
1099+ 9232              ; -----------------------------------------------------------------
1100+ 9232              ;
1101+ 9232              ;   16/04/23
1102+ 9232              ;
1103+ 9232
1104+ 9232 AF           Limpia_Coordenadas_X xor a
1105+ 9233 06 06            ld b,6
1106+ 9235 21 13 8A         ld hl,Coordenadas_X_Amadeus
1107+ 9238 77           1 ld (hl),a
1108+ 9239 23               inc hl
1109+ 923A 10 FC            djnz 1B
1110+ 923C C9               ret
1111+ 923D
1112+ 923D              ; -----------------------------------------------------------------
1113+ 923D              ;
1114+ 923D              ;   25/04/23
1115+ 923D              ;
1116+ 923D
1117+ 923D              Determina_resultado_comparativa
1118+ 923D
1119+ 923D              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1120+ 923D              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1121+ 923D              ;
1122+ 923D              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1123+ 923D              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1124+ 923D              ;
1125+ 923D              ;   SBC HL,DE
1126+ 923D
1127+ 923D              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1128+ 923D              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1129+ 923D
1130+ 923D              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1131+ 923D              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1132+ 923D
1133+ 923D
1134+ 923D 3A C4 89         ld a,(Cuad_objeto)
1135+ 9240 FE 02            cp 2
1136+ 9242 28 26            jr z,2F
1137+ 9244 38 24            jr c,2F
1138+ 9246
1139+ 9246              ; Cuadrantes 3º y 4º
1140+ 9246
1141+ 9246 E6 01            and 1
1142+ 9248 28 10            jr z,4F
1143+ 924A
1144+ 924A              ; Cuadrante 3º
1145+ 924A
1146+ 924A 7C               ld a,h
1147+ 924B 06 00            ld b,0
1148+ 924D
1149+ 924D CD D8 92         call Compara_cositas_H3
1150+ 9250
1151+ 9250 04               inc b
1152+ 9251 05               dec b
1153+ 9252 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1154+ 9253
1155+ 9253 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1156+ 9254 06 00            ld b,0
1157+ 9256
1158+ 9256 CD EA 92         call Compara_cositas_L3
1159+ 9259 C9               ret
1160+ 925A
1161+ 925A              ; Cuadrante 4º
1162+ 925A
1163+ 925A 7C           4 ld a,h
1164+ 925B 06 00            ld b,0
1165+ 925D
1166+ 925D CD FC 92         call Compara_cositas_H4
1167+ 9260
1168+ 9260 04               inc b
1169+ 9261 05               dec b
1170+ 9262 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1171+ 9263
1172+ 9263 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1173+ 9264 06 00            ld b,0
1174+ 9266
1175+ 9266 CD 12 93         call Compara_cositas_L4
1176+ 9269 C9               ret
1177+ 926A
1178+ 926A              ; Cuadrantes 1º y 2º.
1179+ 926A
1180+ 926A 28 10        2 jr z,3F
1181+ 926C
1182+ 926C              ; 1er Cuadrante
1183+ 926C
1184+ 926C 7C               ld a,h
1185+ 926D 06 00            ld b,0
1186+ 926F
1187+ 926F CD B0 92         call Compara_cositas_H1
1188+ 9272
1189+ 9272 04               inc b
1190+ 9273 05               dec b
1191+ 9274 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1192+ 9275
1193+ 9275 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1194+ 9276 06 00            ld b,0
1195+ 9278
1196+ 9278 CD C6 92         call Compara_cositas_L1
1197+ 927B C9               ret
1198+ 927C
1199+ 927C
1200+ 927C              ; 2º Cuadrante
1201+ 927C
1202+ 927C 7C           3 ld a,h
1203+ 927D 06 00            ld b,0
1204+ 927F
1205+ 927F CD 8C 92         call Compara_cositas_H2
1206+ 9282
1207+ 9282 04               inc b
1208+ 9283 05               dec b
1209+ 9284 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1210+ 9285
1211+ 9285 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1212+ 9286 06 00            ld b,0
1213+ 9288
1214+ 9288 CD 9E 92         call Compara_cositas_L2
1215+ 928B C9               ret
1216+ 928C
1217+ 928C A7           Compara_cositas_H2 and a
1218+ 928D 28 0D            jr z,1F
1219+ 928F              ;    cp $fd
1220+ 928F              ;    jr z,1F
1221+ 928F              ;    cp $fe
1222+ 928F              ;    jr z,1F
1223+ 928F FE FF            cp $ff
1224+ 9291 28 09            jr z,1F
1225+ 9293 FE 01            cp $01
1226+ 9295 28 05            jr z,1F
1227+ 9297 FE 02            cp $02
1228+ 9299 28 01            jr z,1F
1229+ 929B C0               ret nz
1230+ 929C 04           1 inc b
1231+ 929D C9               ret
1232+ 929E
1233+ 929E A7           Compara_cositas_L2 and a
1234+ 929F 28 0D            jr z,1F
1235+ 92A1              ;    cp $fd
1236+ 92A1              ;    jr z,1F
1237+ 92A1 FE FE            cp $fe
1238+ 92A3 28 09            jr z,1F
1239+ 92A5 FE FF            cp $ff
1240+ 92A7 28 05            jr z,1F
1241+ 92A9 FE 01            cp $01
1242+ 92AB 28 01            jr z,1F
1243+ 92AD              ;    cp $02
1244+ 92AD              ;    jr z,1F
1245+ 92AD C0               ret nz
1246+ 92AE 04           1 inc b
1247+ 92AF C9               ret
1248+ 92B0
1249+ 92B0 A7           Compara_cositas_H1 and a
1250+ 92B1 28 11            jr z,1F
1251+ 92B3              ;    cp $fd
1252+ 92B3              ;    jr z,1F
1253+ 92B3              ;    cp $fe
1254+ 92B3              ;    jr z,1F
1255+ 92B3 FE FF            cp $ff
1256+ 92B5 28 0D            jr z,1F
1257+ 92B7 FE 01            cp $01
1258+ 92B9 28 09            jr z,1F
1259+ 92BB FE 02            cp $02
1260+ 92BD 28 05            jr z,1F
1261+ 92BF FE 03            cp $03
1262+ 92C1 28 01            jr z,1F
1263+ 92C3 C0               ret nz
1264+ 92C4 04           1 inc b
1265+ 92C5 C9               ret
1266+ 92C6
1267+ 92C6 A7           Compara_cositas_L1 and a
1268+ 92C7 28 0D            jr z,1F
1269+ 92C9              ;    cp $fd
1270+ 92C9              ;    jr z,1F
1271+ 92C9              ;    cp $fe
1272+ 92C9              ;    jr z,1F
1273+ 92C9              ;    cp $ff
1274+ 92C9              ;    jr z,1F
1275+ 92C9 FE 01            cp $01
1276+ 92CB 28 09            jr z,1F
1277+ 92CD FE 02            cp $02
1278+ 92CF 28 05            jr z,1F
1279+ 92D1 FE 03            cp $03
1280+ 92D3 28 01            jr z,1F
1281+ 92D5 C0               ret nz
1282+ 92D6 04           1 inc b
1283+ 92D7 C9               ret
1284+ 92D8
1285+ 92D8 A7           Compara_cositas_H3 and a
1286+ 92D9 28 0D            jr z,1F
1287+ 92DB              ;    cp $fd
1288+ 92DB              ;    jr z,1F
1289+ 92DB FE FE            cp $fe
1290+ 92DD 28 09            jr z,1F
1291+ 92DF FE FF            cp $ff
1292+ 92E1 28 05            jr z,1F
1293+ 92E3 FE 01            cp $01
1294+ 92E5 28 01            jr z,1F
1295+ 92E7              ;    cp $02
1296+ 92E7              ;    jr z,1F
1297+ 92E7              ;    cp $03
1298+ 92E7              ;    jr z,1F
1299+ 92E7 C0               ret nz
1300+ 92E8 04           1 inc b
1301+ 92E9 C9               ret
1302+ 92EA
1303+ 92EA A7           Compara_cositas_L3 and a
1304+ 92EB 28 0D            jr z,1F
1305+ 92ED              ;    cp $fd
1306+ 92ED              ;    jr z,1F
1307+ 92ED              ;    cp $fe
1308+ 92ED              ;    jr z,1F
1309+ 92ED              ;    cp $ff
1310+ 92ED              ;    jr z,1F
1311+ 92ED FE 01            cp $01
1312+ 92EF 28 09            jr z,1F
1313+ 92F1 FE 02            cp $02
1314+ 92F3 28 05            jr z,1F
1315+ 92F5 FE 03            cp $03
1316+ 92F7 28 01            jr z,1F
1317+ 92F9 C0               ret nz
1318+ 92FA 04           1 inc b
1319+ 92FB C9               ret
1320+ 92FC
1321+ 92FC A7           Compara_cositas_H4 and a
1322+ 92FD 28 11            jr z,1F
1323+ 92FF FE FD            cp $fd
1324+ 9301 28 0D            jr z,1F
1325+ 9303 FE FE            cp $fe
1326+ 9305 28 09            jr z,1F
1327+ 9307 FE FF            cp $ff
1328+ 9309 28 05            jr z,1F
1329+ 930B FE 01            cp $01
1330+ 930D 28 01            jr z,1F
1331+ 930F              ;    cp $02
1332+ 930F              ;    jr z,1F
1333+ 930F              ;    cp $03
1334+ 930F              ;    jr z,1F
1335+ 930F C0               ret nz
1336+ 9310 04           1 inc b
1337+ 9311 C9               ret
1338+ 9312
1339+ 9312 A7           Compara_cositas_L4 and a
1340+ 9313 28 0D            jr z,1F
1341+ 9315              ;    cp $fd
1342+ 9315              ;    jr z,1F
1343+ 9315 FE FE            cp $fe
1344+ 9317 28 09            jr z,1F
1345+ 9319 FE FF            cp $ff
1346+ 931B 28 05            jr z,1F
1347+ 931D FE 01            cp $01
1348+ 931F 28 01            jr z,1F
1349+ 9321              ;    cp $02
1350+ 9321              ;    jr z,1F
1351+ 9321              ;    cp $03
1352+ 9321              ;    jr z,1F
1353+ 9321 C0               ret nz
1354+ 9322 04           1 inc b
1355+ 9323 C9               ret
# file closed: Disparo.asm
1261  9324              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9324              ; ******************************************************************************************************************************************************************************************
   2+ 9324              ;
   3+ 9324              ; 26/06/23
   4+ 9324              ;
   5+ 9324              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9324
   7+ 9324 CD FE 95     Draw call Prepara_draw
   8+ 9327 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9328 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9329 28 05        	jr z,2F
  11+ 932B
  12+ 932B 3A C4 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 932E 18 0C        	jr 1F
  14+ 9330 2A C2 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9333 22 B2 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9336 CD C5 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9339              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9339 CD E0 9C     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  19+ 933C 3A DE 89     1 ld a,(Ctrl_0)
  20+ 933F CB 6F        	bit 5,a
  21+ 9341 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9343
  23+ 9343 CD 5B 93     	call Comprueba_limite_horizontal
  24+ 9346 CD EB 93     	call Comprueba_limite_vertical
  25+ 9349
  26+ 9349              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9349
  28+ 9349 CD 38 95     3 call calcula_CColumnass
  29+ 934C CD 6F 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 934F CD C4 95     	call Define_rutina_de_impresion
  31+ 9352
  32+ 9352 3A DE 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9355 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9357 32 DE 89     	ld (Ctrl_0),a
  35+ 935A
  36+ 935A C9           	ret
  37+ 935B
  38+ 935B              ; *******************************************************************************************************************************************************************************************
  39+ 935B              ;	21/01/23
  40+ 935B              ;
  41+ 935B              ; 	Comprueba_limite_horizontal.
  42+ 935B              ;
  43+ 935B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 935B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 935B              ;
  46+ 935B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 935B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 935B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 935B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 935B
  51+ 935B
  52+ 935B
  53+ 935B 3A DE 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 935E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9360 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9362 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9364 32 DE 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9367 18 09            jr 6F
  59+ 9369 CB 5F        1 bit 3,a
  60+ 936B 28 0A            jr z,2F
  61+ 936D E6 F7            and $f7
  62+ 936F 32 DE 89         ld (Ctrl_0),a
  63+ 9372 CD C5 94     6 call Inicializacion
  64+ 9375 18 5B            jr 5F
  65+ 9377 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9378
  67+ 9378              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9378              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9378
  70+ 9378 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9379 2A EB 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 937C CD CA 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 937F 67           	ld h,a
  74+ 9380 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9381 CD CA 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9384 67           	ld h,a
  77+ 9385 A7           	and a
  78+ 9386 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9388 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9389 3A C4 89     	ld a,(Cuad_objeto)
  81+ 938C FE 02        	cp 2
  82+ 938E 38 1E        	jr c,3F
  83+ 9390 28 1C        	jr z,3F
  84+ 9392 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9393 28 23            jr z,7F
  86+ 9395 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9397 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9399 E1           	pop hl
  89+ 939A
  90+ 939A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 939A              ; _para indicar con E="2" en caso necesario.
  92+ 939A
  93+ 939A E5               push hl
  94+ 939B C5               push bc
  95+ 939C CD CA 98     	call calcula_tercio
  96+ 939F FE 01        	cp 1
  97+ 93A1 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93A3 CD D3 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93A6 28 26            jr z,9F
 100+ 93A8 38 24            jr c,9F
 101+ 93AA 1E 00        11 ld e,0
 102+ 93AC 18 22            jr 8F
 103+ 93AE 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93AF 28 07        	jr z, 7F
 105+ 93B1 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93B3 1E 00         	ld e,0
 107+ 93B5 E1           	pop hl
 108+ 93B6 18 04        	jr 4F
 109+ 93B8 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93BA 18 15            jr 10F
 111+ 93BC
 112+ 93BC              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93BC              ; _para indicar con E="2" en caso necesario.
 114+ 93BC
 115+ 93BC E5           4 push hl
 116+ 93BD C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93BE CD CA 98     	call calcula_tercio
 118+ 93C1 FE 01        	cp 1
 119+ 93C3 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93C5 CD D3 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93C8 28 04            jr z,9F
 122+ 93CA 30 02            jr nc,9F
 123+ 93CC 18 02        	jr 8F
 124+ 93CE 1E 02        9 ld e,2
 125+ 93D0 C1           8 pop bc
 126+ 93D1 E1           10 pop hl
 127+ 93D2 C9           5 ret
 128+ 93D3
 129+ 93D3              ; --------------------
 130+ 93D3              ;
 131+ 93D3              ; 25/08/22
 132+ 93D3
 133+ 93D3 CD CA 98     Comprueba_centro call calcula_tercio
 134+ 93D6 67               ld h,a
 135+ 93D7 08           	ex af,af
 136+ 93D8 FE 02        	cp 2
 137+ 93DA 38 07        	jr c,1F
 138+ 93DC 28 05        	jr z,1F
 139+ 93DE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93E1 18 03        	jr 2F
 141+ 93E3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93E6 08           2 ex af,af
 143+ 93E7 A7               and a
 144+ 93E8 ED 42            sbc hl,bc
 145+ 93EA C9               ret
 146+ 93EB
 147+ 93EB              ; *********************************************************************************************************************************************************************************************
 148+ 93EB              ;
 149+ 93EB              ;   16/8/22
 150+ 93EB              ;
 151+ 93EB              ;	Comprueba_limite_vertical
 152+ 93EB              ;
 153+ 93EB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93EB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93EB              ;
 156+ 93EB
 157+ 93EB 2A B2 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93EE 7D           	ld a,l
 159+ 93EF E6 1F        	and $1F
 160+ 93F1 57           	ld d,a
 161+ 93F2 3A ED 89     	ld a,(Limite_vertical)
 162+ 93F5 BA           	cp d 											; Límite - Posición.
 163+ 93F6 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93F7 3A C4 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93FA CB 47        	bit 0,a
 166+ 93FC 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93FE
 168+ 93FE              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93FE
 170+ 93FE 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93FF 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9401
 173+ 9401              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9401              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9401
 176+ 9401 3A B6 89         ld a,(Coordenada_X)
 177+ 9404 16 0F            ld d,Centro_izquierda
 178+ 9406 A7               and a
 179+ 9407 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9408 28 1E            jr z,3F
 181+ 940A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 940C              ;                                                    ; _salimos sin modificar nada.
 183+ 940C 18 0E            jr 2F
 184+ 940E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 940F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9411
 187+ 9411              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9411              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9411
 190+ 9411 3A B6 89         ld a,(Coordenada_X)
 191+ 9414 16 10            ld d,Centro_derecha
 192+ 9416 A7               and a
 193+ 9417 92               sub d
 194+ 9418 28 0E            jr z,3F
 195+ 941A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 941C              ;                                                    ; _salimos sin modificar nada.
 197+ 941C CB 43        2 bit 0,e
 198+ 941E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9420 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9421 CD B5 94         call Modificaccionne
 201+ 9424 C1           	pop bc
 202+ 9425 CD C5 94         call Inicializacion
 203+ 9428 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9429
 205+ 9429              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9429
 207+ 9429 C5           4 push bc
 208+ 942A 01 B1 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 942D 0A           	ld a,(bc)
 210+ 942E 3D           	dec a
 211+ 942F 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9430 7D           	ld a,l
 213+ 9431 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9432 CB 47        	bit 0,a
 215+ 9434 28 03        	jr z,5F
 216+ 9436 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9437 18 2E        	jr 7F
 218+ 9439
 219+ 9439              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9439
 221+ 9439 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 943A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 943B 3A DE 89     	ld a,(Ctrl_0)
 224+ 943E CB 4F        	bit 1,a
 225+ 9440 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9442 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9443
 228+ 9443              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9443
 230+ 9443 1C               inc e
 231+ 9444 1D               dec e
 232+ 9445 20 07            jr nz,12F
 233+ 9447 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9448 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9449 22 B2 89     	ld (Posicion_actual),hl
 236+ 944C 18 44        13 jr 9F
 237+ 944E CB 43        12 bit 0,e
 238+ 9450 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9452              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9452 C1           	pop bc
 241+ 9453 18 D3        	jr 3B
 242+ 9455 80           14 add b
 243+ 9456 6F               ld l,a
 244+ 9457 22 B2 89     	ld (Posicion_actual),hl
 245+ 945A CD B5 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 945D 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 945F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9461 32 DE 89         ld (Ctrl_0),a
 249+ 9464 F1           	pop af
 250+ 9465 18 2B        	jr 9F
 251+ 9467
 252+ 9467              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9467
 254+ 9467 F5           7 push af
 255+ 9468 3A DE 89     	ld a,(Ctrl_0)
 256+ 946B CB 47        	bit 0,a
 257+ 946D 20 1D        	jr nz,8F
 258+ 946F F1           	pop af
 259+ 9470
 260+ 9470              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9470
 262+ 9470 1C           	inc e
 263+ 9471 1D               dec e
 264+ 9472 20 07            jr nz,10F
 265+ 9474 90           	sub b
 266+ 9475 6F               ld l,a
 267+ 9476 22 B2 89     	ld (Posicion_actual),hl
 268+ 9479 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 947B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 947B CB 43        10 bit 0,e
 271+ 947D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 947F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 947F C1           	pop bc
 274+ 9480 18 A6        	jr 3B
 275+ 9482 90           16 sub b
 276+ 9483 6F               ld l,a
 277+ 9484 22 B2 89     	ld (Posicion_actual),hl
 278+ 9487 CD B5 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 948A 18 06            jr 9F
 280+ 948C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 948E 32 DE 89         ld (Ctrl_0),a
 282+ 9491 F1           	pop af
 283+ 9492 C1           9 pop bc
 284+ 9493 1E 00        	ld e,0
 285+ 9495 CD C5 94         call Inicializacion
 286+ 9498 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9499 08           	ex af,af
 288+ 949A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 949B 18 8B            jr 3B
 290+ 949D
 291+ 949D              ; --------------------
 292+ 949D
 293+ 949D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 949F CD 19 96     1 call PreviousScan
 295+ 94A2 10 FB            djnz 1B
 296+ 94A4 22 B2 89     	ld (Posicion_actual),hl
 297+ 94A7 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94A8 C9           	ret
 299+ 94A9
 300+ 94A9              ; --------------------
 301+ 94A9
 302+ 94A9 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94AB CD 0A 96     1 call NextScan
 304+ 94AE 10 FB            djnz 1B
 305+ 94B0 22 B2 89     	ld (Posicion_actual),hl
 306+ 94B3 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94B4 C9           	ret
 308+ 94B5
 309+ 94B5              ; --------------------
 310+ 94B5              ;
 311+ 94B5              ;	22/01/23
 312+ 94B5              ;
 313+ 94B5              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94B5              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94B5              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94B5
 317+ 94B5
 318+ 94B5              Modificaccionne
 319+ 94B5
 320+ 94B5 3A C4 89     	ld a,(Cuad_objeto)
 321+ 94B8 FE 02        	cp 2
 322+ 94BA CC 9D 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94BD DC 9D 94         call c,Modifica_Pos_actual
 324+ 94C0 C8           	ret z
 325+ 94C1 CD A9 94         call Modifica_Pos_actual2
 326+ 94C4 C9               ret
 327+ 94C5
 328+ 94C5              ; *************************************************************************************************************************************************************************************************
 329+ 94C5              ;
 330+ 94C5              ;	13/8/22
 331+ 94C5              ;
 332+ 94C5              ;	Inicializacion
 333+ 94C5              ;
 334+ 94C5              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94C5              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94C5              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94C5              ;
 338+ 94C5              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94C5              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94C5              ;	_ desaparece/aparece.
 341+ 94C5
 342+ 94C5              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94C5              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94C5              ;
 345+ 94C5              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94C5              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94C5              ; 		   [E] ="0"
 348+ 94C5
 349+ 94C5              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94C5
 351+ 94C5 CD CA 98     Inicializacion call calcula_tercio
 352+ 94C8 28 36        	jr z,primit
 353+ 94CA E6 02        	and 2
 354+ 94CC 20 07        	jr nz,segmit
 355+ 94CE 7D           	ld a,l
 356+ 94CF FE 7F        	cp $7f
 357+ 94D1 38 2D        	jr c,primit
 358+ 94D3 28 2B        	jr z,primit
 359+ 94D5 CD 32 95     segmit call column
 360+ 94D8 38 13        	jr c,tercuad
 361+ 94DA 3E 04        cuarcuad ld a,4
 362+ 94DC 32 C4 89     	ld (Cuad_objeto),a
 363+ 94DF 21 20 48     	ld hl,$4820
 364+ 94E2 22 EB 89     	ld (Limite_horizontal),hl
 365+ 94E5 21 ED 89     	ld hl,Limite_vertical
 366+ 94E8 36 0D        	ld (hl),$0d
 367+ 94EA 08           	ex af,af
 368+ 94EB 18 3C        	jr 1F
 369+ 94ED              tercuad
 370+ 94ED 3E 03        	ld a,3
 371+ 94EF 32 C4 89     	ld (Cuad_objeto),a
 372+ 94F2 21 20 48     	ld hl,$4820
 373+ 94F5 22 EB 89     	ld (Limite_horizontal),hl
 374+ 94F8 21 ED 89     	ld hl,Limite_vertical
 375+ 94FB 36 12        	ld (hl),$12
 376+ 94FD 08           	ex af,af
 377+ 94FE 18 29        	jr 1F
 378+ 9500 CD 32 95     primit call column
 379+ 9503 38 13        	jr c, primcuad
 380+ 9505              segcuad
 381+ 9505 3E 02        	ld a,2
 382+ 9507 32 C4 89     	ld (Cuad_objeto),a
 383+ 950A 21 C0 4F     	ld hl,$4fc0
 384+ 950D 22 EB 89     	ld (Limite_horizontal),hl
 385+ 9510 21 ED 89     	ld hl,Limite_vertical
 386+ 9513 36 0D        	ld (hl),$0d
 387+ 9515 08           	ex af,af
 388+ 9516 18 11        	jr 1F
 389+ 9518              primcuad
 390+ 9518 3E 01        	ld a,1
 391+ 951A 32 C4 89     	ld (Cuad_objeto),a
 392+ 951D 21 C0 4F     	ld hl,$4fc0
 393+ 9520 22 EB 89     	ld (Limite_horizontal),hl
 394+ 9523 21 ED 89     	ld hl,Limite_vertical
 395+ 9526 36 12        	ld (hl),$12
 396+ 9528 08           	ex af,af
 397+ 9529 CD 36 9C     1 call Genera_coordenadas
 398+ 952C 21 DE 89     	ld hl,Ctrl_0
 399+ 952F CB EE        	set 5,(hl)
 400+ 9531 C9           	ret
 401+ 9532
 402+ 9532              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9532
 404+ 9532              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9532              ;
 406+ 9532              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9532
 408+ 9532 7D           column ld a,l
 409+ 9533 E6 1F        	and $1f
 410+ 9535 FE 10         	cp $10
 411+ 9537 C9            	ret
 412+ 9538
 413+ 9538              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9538              ;
 415+ 9538              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9538              ;
 417+ 9538              ; 14/12/22
 418+ 9538              ;
 419+ 9538              ;	Modifica: A y BC.
 420+ 9538
 421+ 9538 3A C4 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 953B E6 01        	and 1
 423+ 953D 28 17        	jr z,1F
 424+ 953F
 425+ 953F              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 953F
 427+ 953F 3A B6 89     	ld a,(Coordenada_X)
 428+ 9542 47           	ld b,a
 429+ 9543 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9544 79           	ld a,c
 431+ 9545 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9546 38 08        	jr c,2F
 433+ 9548 47           	ld b,a
 434+ 9549 79           	ld a,c
 435+ 954A 90           	sub b
 436+ 954B 32 EA 89     	ld (Columnas),a
 437+ 954E 18 1B        	jr 4F
 438+ 9550 79           2 ld a,c
 439+ 9551 32 EA 89     	ld (Columnas),a
 440+ 9554 18 15        	jr 4F
 441+ 9556
 442+ 9556              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9556
 444+ 9556 3A B6 89     1 ld a,(Coordenada_X)
 445+ 9559 81           	add c
 446+ 955A 3D           	dec a
 447+ 955B D6 1F        	sub $1f
 448+ 955D 38 08        	jr c,3F
 449+ 955F 47           	ld b,a
 450+ 9560 79           	ld a,c
 451+ 9561 90           	sub b
 452+ 9562 32 EA 89     	ld (Columnas),a
 453+ 9565 18 04        	jr 4F
 454+ 9567 79           3 ld a,c
 455+ 9568 32 EA 89     	ld (Columnas),a
 456+ 956B D9           4 exx
 457+ 956C 4F           	ld c,a
 458+ 956D D9           	exx
 459+ 956E C9            ret
 460+ 956F
 461+ 956F              ; --------------------------------------------------------------------------------------------------------------------
 462+ 956F              ;
 463+ 956F              ; 7/1/23
 464+ 956F              ;
 465+ 956F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 956F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 956F              ;
 468+ 956F              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 956F              ;	DESTRUYE: HL,B Y A.
 470+ 956F
 471+ 956F 3A C4 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9572 FE 02        	cp 2
 473+ 9574 38 18        	jr c,1F
 474+ 9576 28 16        	jr z,1F
 475+ 9578 E6 01        	and 1
 476+ 957A 28 0D        	jr z,3F
 477+ 957C
 478+ 957C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 957C
 480+ 957C CD B8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 957F
 482+ 957F 7D           9 ld a,l
 483+ 9580 E6 1F        	and $1f
 484+ 9582 28 2A        	jr z,7F
 485+ 9584 2B           	dec hl
 486+ 9585 10 F8        	djnz 9B
 487+ 9587 18 25        	jr 7F
 488+ 9589
 489+ 9589              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9589
 491+ 9589 2A B2 89     3 ld hl,(Posicion_actual)
 492+ 958C 18 20        	jr 7F
 493+ 958E
 494+ 958E 28 14        1 jr z,2F
 495+ 9590
 496+ 9590              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9590
 498+ 9590 CD B8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9593
 500+ 9593 7D           4 ld a,l
 501+ 9594 E6 1F        	and $1f
 502+ 9596 28 03        	jr z,6F
 503+ 9598 2B           	dec hl
 504+ 9599 10 F8        	djnz 4B
 505+ 959B 06 0F        6 ld b,15
 506+ 959D CD 19 96     5 call PreviousScan
 507+ 95A0 10 FB        	djnz 5B
 508+ 95A2 18 0A        	jr 7F
 509+ 95A4
 510+ 95A4              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 95A4
 512+ 95A4 CD B8 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 95A7 06 0F        	ld b,15
 514+ 95A9 CD 19 96     8 call PreviousScan
 515+ 95AC 10 FB        	djnz 8B
 516+ 95AE
 517+ 95AE E5           7 push hl
 518+ 95AF DD E1        	pop ix
 519+ 95B1
 520+ 95B1 2A B4 89     	ld hl,(Puntero_objeto)
 521+ 95B4 E5           	push hl
 522+ 95B5 FD E1        	pop iy
 523+ 95B7
 524+ 95B7 C9           	ret
 525+ 95B8
 526+ 95B8              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95B8              ;
 528+ 95B8              ;	2/1/23
 529+ 95B8              ;
 530+ 95B8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95B8              ;
 532+ 95B8              ;	Tras esta rutina tenemos:
 533+ 95B8              ;
 534+ 95B8              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95B8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95B8              ;
 537+ 95B8              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95B8
 539+ 95B8 2A B2 89     Operandos ld hl,(Posicion_actual)
 540+ 95BB 3A EA 89     	ld a,(Columnas)
 541+ 95BE 3D           	dec a
 542+ 95BF 20 01        	jr nz,1F
 543+ 95C1 3C           	inc a
 544+ 95C2 47           1 ld b,a
 545+ 95C3 C9           	ret
 546+ 95C4
 547+ 95C4              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95C4              ;
 549+ 95C4              ;	3/1/23
 550+ 95C4              ;
 551+ 95C4              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95C4              ;
 553+ 95C4              ;	Destruye: A,B,HL y DE.
 554+ 95C4
 555+ 95C4              Define_rutina_de_impresion
 556+ 95C4
 557+ 95C4 3A B1 89     	ld a,(Columns)
 558+ 95C7 47           	ld b,a
 559+ 95C8 3A EA 89     	ld a,(Columnas)
 560+ 95CB B8           	cp b
 561+ 95CC 20 0D        	jr nz,2f
 562+ 95CE
 563+ 95CE              ;	La entidad se imprime entera.
 564+ 95CE
 565+ 95CE 21 9A 96     	ld hl, Indice_entidades_completas
 566+ 95D1 E6 01        	and 1
 567+ 95D3 28 02        	jr z,1F
 568+ 95D5
 569+ 95D5 23           	inc hl
 570+ 95D6 23           	inc hl
 571+ 95D7
 572+ 95D7 CD 18 8D     1 call Extrae_address
 573+ 95DA C9           	ret		;	ret
 574+ 95DB
 575+ 95DB              ;	La entidad no se imprime entera en pantalla.
 576+ 95DB
 577+ 95DB 3A C4 89     2 ld a,(Cuad_objeto)
 578+ 95DE E6 01        	and 1
 579+ 95E0 28 17        	jr z,3F
 580+ 95E2
 581+ 95E2              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95E2
 583+ 95E2 21 9E 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95E5 3A B1 89     4 ld a,(Columns)
 585+ 95E8 E6 01        	and 1
 586+ 95EA 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95EC
 588+ 95EC 23           	inc hl
 589+ 95ED 23           	inc hl
 590+ 95EE
 591+ 95EE 3A EA 89     	ld a,(Columnas)
 592+ 95F1 E6 01        	and 1
 593+ 95F3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95F5
 595+ 95F5 23           	inc hl
 596+ 95F6 23           	inc hl
 597+ 95F7
 598+ 95F7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95F9
 600+ 95F9 21 A4 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95FC 18 E7        	jr 4B
 602+ 95FE
 603+ 95FE              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95FE              ;
 605+ 95FE              ;	Prepara_draw
 606+ 95FE              ;
 607+ 95FE              ;	Es una rutina de carga.
 608+ 95FE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95FE              ;
 610+ 95FE              ;	FUNCIONAMIENTO:
 611+ 95FE              ;
 612+ 95FE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95FE              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95FE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95FE              ;
 616+ 95FE              ;	DESTRUYE:
 617+ 95FE              ;
 618+ 95FE              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95FE
 620+ 95FE 21 B0 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 9601 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 9602 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 9603 4E           	ld c,(hl)
 624+ 9604 2A B2 89     	ld hl,(Posicion_actual)
 625+ 9607 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 9609 C9           	ret
 627+ 960A
 628+ 960A              ;----------------------------------------------------------------------------------------------------------------
 629+ 960A              ;
 630+ 960A              ;	5/08/22
 631+ 960A              ;
 632+ 960A              ;   NextScan.
 633+ 960A              ;
 634+ 960A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 960A              ;
 636+ 960A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 960A              ;
 638+ 960A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 960A              ;
 640+ 960A              ;       DESTRUIDOS: AF y HL !!!
 641+ 960A              ;
 642+ 960A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 960A              ;
 644+ 960A
 645+ 960A 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 960B 7C               ld a,h
 647+ 960C E6 07            and 7
 648+ 960E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 960F
 650+ 960F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 9610 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 9612 6F               ld l,a
 653+ 9613 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9614
 655+ 9614 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9615 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9617 67               ld h,a
 658+ 9618 C9               ret
 659+ 9619
 660+ 9619              ;----------------------------------------------------------------------------------------------------------------
 661+ 9619              ;
 662+ 9619              ;	5/08/22
 663+ 9619              ;
 664+ 9619              ;   PreviousScan.
 665+ 9619              ;
 666+ 9619              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 9619              ;
 668+ 9619              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 9619              ;
 670+ 9619              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9619              ;
 672+ 9619              ;       DESTRUIDOS: AF y HL !!!
 673+ 9619              ;
 674+ 9619              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9619              ;
 676+ 9619
 677+ 9619 7C           PreviousScan ld a,h
 678+ 961A 25               dec h               ; Dec H.
 679+ 961B E6 07            and 7
 680+ 961D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 961E
 682+ 961E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 961F D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9621 6F               ld l,a
 685+ 9622 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9623
 687+ 9623 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9624 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9626 67               ld h,a
 690+ 9627 C9               ret
 691+ 9628
 692+ 9628              ; -----------------------------------------------------------------------------------
 693+ 9628              ;
 694+ 9628              ;	28/2/23
 695+ 9628              ;
 696+ 9628              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9628              ;	Extrae fotos de Album_de_fotos.
 698+ 9628
 699+ 9628 3A FC 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 962B A7           	and a
 701+ 962C C8           	ret z
 702+ 962D ED 73 01 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9631 31 00 70     	ld sp,Album_de_fotos
 704+ 9634
 705+ 9634 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9636 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9637 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9638
 709+ 9638 ED 73 03 8A  	ld (Stack_2),sp
 710+ 963C ED 7B 01 8A  	ld sp,(Stack)
 711+ 9640
 712+ 9640              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9640
 714+ 9640 3E CD        	ld a,$cd
 715+ 9642 32 4A 96     	ld (Imprime),a
 716+ 9645 EB           	ex de,hl
 717+ 9646 22 4B 96     	ld (Imprime+1),hl
 718+ 9649 EB           	ex de,hl
 719+ 964A
 720+ 964A              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 964A
 722+ 964A 00 00 00     Imprime db 0,0,0
 723+ 964D
 724+ 964D 3A FC 89     	ld a,(Numero_de_malotes)
 725+ 9650 3D           	dec a
 726+ 9651 28 09        	jr z,1F
 727+ 9653 32 FC 89      	ld (Numero_de_malotes),a
 728+ 9656
 729+ 9656 ED 7B 03 8A   	ld sp,(Stack_2)
 730+ 965A 18 D8        	jr 2B
 731+ 965C
 732+ 965C AF           1 xor a
 733+ 965D 32 03 8A     	ld (Stack_2),a
 734+ 9660 C9           	ret
 735+ 9661
 736+ 9661              ; -----------------------------------------------------------------------------------
 737+ 9661              ;
 738+ 9661              ;	28/2/23
 739+ 9661              ;
 740+ 9661              ;	Pinta los disparos generados.
 741+ 9661
 742+ 9661              Extrae_foto_disparos
 743+ 9661
 744+ 9661 3A 09 8A     	ld a,(Numero_de_disparotes)
 745+ 9664 A7           	and a
 746+ 9665 C8           	ret z
 747+ 9666 ED 73 01 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 966A 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 966D
 750+ 966D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 966F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9670 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9671
 754+ 9671 ED 73 03 8A  	ld (Stack_2),sp
 755+ 9675 ED 7B 01 8A  	ld sp,(Stack)
 756+ 9679
 757+ 9679              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9679
 759+ 9679 3E CD        	ld a,$cd
 760+ 967B 32 83 96     	ld (Imprime2),a
 761+ 967E EB           	ex de,hl
 762+ 967F 22 84 96     	ld (Imprime2+1),hl
 763+ 9682 EB           	ex de,hl
 764+ 9683
 765+ 9683              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 9683
 767+ 9683 00 00 00     Imprime2 db 0,0,0
 768+ 9686
 769+ 9686 3A 09 8A     	ld a,(Numero_de_disparotes)
 770+ 9689 3D           	dec a
 771+ 968A 28 09        	jr z,1F
 772+ 968C 32 09 8A      	ld (Numero_de_disparotes),a
 773+ 968F
 774+ 968F ED 7B 03 8A  	ld sp,(Stack_2)
 775+ 9693 18 D8        	jr 2B
 776+ 9695
 777+ 9695 AF           1 xor a
 778+ 9696 32 03 8A     	ld (Stack_2),a
 779+ 9699 C9           	ret
 780+ 969A
# file closed: Draw_XOR.asm
1262  969A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 969A              ;   índices de Rutinas de impresión.
   2+ 969A
   3+ 969A AA 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 969C D7 96            defw Pinta_Amadeus_3x2
   5+ 969E
   6+ 969E 2D 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96A0 CD 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96A2 81 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96A4
  10+ 96A4 57 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96A6 5B 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96A8 0F 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96AA
  14+ 96AA
  15+ 96AA              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96AA              ;
  17+ 96AA              ;   12/12/22
  18+ 96AA              ;
  19+ 96AA              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96AA              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96AA              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96AA              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96AA              ;
  24+ 96AA              ;   Modifica: DE y HL.
  25+ 96AA
  26+ 96AA ED 73 01 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96AE FD F9        	ld sp,iy
  28+ 96B0 06 10            ld b,16
  29+ 96B2 D1           1 pop de
  30+ 96B3 7B               ld a,e
  31+ 96B4 AE               xor (hl)
  32+ 96B5 77           	ld (hl),a
  33+ 96B6 23           	inc hl
  34+ 96B7 7A               ld a,d
  35+ 96B8 AE               xor (hl)
  36+ 96B9 77           	ld (hl),a
  37+ 96BA 2B           	dec hl
  38+ 96BB 24           	inc h
  39+ 96BC 7C               ld a,h
  40+ 96BD E6 07            and 7
  41+ 96BF 20 0A            jr nz,2F
  42+ 96C1 7D               ld a,l
  43+ 96C2 C6 20            add a,$20
  44+ 96C4 6F               ld l,a
  45+ 96C5 38 04            jr c,2F
  46+ 96C7 7C               ld a,h
  47+ 96C8 D6 08            sub 8
  48+ 96CA 67               ld h,a
  49+ 96CB 7C           2 ld a,h
  50+ 96CC FE 58            cp $58
  51+ 96CE 28 02            jr z,3F
  52+ 96D0 10 E0            djnz 1B
  53+ 96D2 ED 7B 01 8A  3 ld sp,(Stack)
  54+ 96D6 C9           	ret
  55+ 96D7
  56+ 96D7 ED 73 01 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96DB FD F9        	ld sp,iy
  58+ 96DD 06 08            ld b,8
  59+ 96DF D1           1 pop de
  60+ 96E0 7B               ld a,e
  61+ 96E1 AE               xor (hl)
  62+ 96E2 77           	ld (hl),a
  63+ 96E3 23           	inc hl
  64+ 96E4 7A               ld a,d
  65+ 96E5 AE               xor (hl)
  66+ 96E6 77           	ld (hl),a
  67+ 96E7 23           	inc hl
  68+ 96E8 D1           	pop de
  69+ 96E9 7B               ld a,e
  70+ 96EA AE               xor (hl)
  71+ 96EB 77           	ld (hl),a
  72+ 96EC 2B           	dec hl
  73+ 96ED 2B           	dec hl
  74+ 96EE 24           	inc h
  75+ 96EF 7C               ld a,h
  76+ 96F0 E6 07            and 7
  77+ 96F2 20 0A            jr nz,2F
  78+ 96F4 7D               ld a,l
  79+ 96F5 C6 20            add a,$20
  80+ 96F7 6F               ld l,a
  81+ 96F8 38 04            jr c,2F
  82+ 96FA 7C               ld a,h
  83+ 96FB D6 08            sub 8
  84+ 96FD 67               ld h,a
  85+ 96FE 7C           2 ld a,h
  86+ 96FF FE 58            cp $58
  87+ 9701 28 25            jr z,4F
  88+ 9703 7A               ld a,d
  89+ 9704 AE               xor (hl)
  90+ 9705 77               ld (hl),a
  91+ 9706 D1           	pop de
  92+ 9707 23           	inc hl
  93+ 9708 7B               ld a,e
  94+ 9709 AE               xor (hl)
  95+ 970A 77           	ld (hl),a
  96+ 970B 23           	inc hl
  97+ 970C 7A               ld a,d
  98+ 970D AE               xor (hl)
  99+ 970E 77           	ld (hl),a
 100+ 970F 2B           	dec hl
 101+ 9710 2B           	dec hl
 102+ 9711 24           	inc h
 103+ 9712 7C               ld a,h
 104+ 9713 E6 07            and 7
 105+ 9715 20 0A            jr nz,3F
 106+ 9717 7D               ld a,l
 107+ 9718 C6 20            add a,$20
 108+ 971A 6F               ld l,a
 109+ 971B 38 04            jr c,3F
 110+ 971D 7C               ld a,h
 111+ 971E D6 08            sub 8
 112+ 9720 67               ld h,a
 113+ 9721 7C           3 ld a,h
 114+ 9722 FE 58            cp $58
 115+ 9724 28 02            jr z,4F
 116+ 9726 10 B7            djnz 1B
 117+ 9728 ED 7B 01 8A  4 ld sp,(Stack)
 118+ 972C C9           	ret
 119+ 972D
 120+ 972D              ; ---------------------------------------------------
 121+ 972D
 122+ 972D ED 73 01 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9731 FD F9        	ld sp,iy
 124+ 9733
 125+ 9733              ; >>>
 126+ 9733
 127+ 9733 06 10            ld b,16
 128+ 9735 D1           1 pop de
 129+ 9736 7A           	ld a,d
 130+ 9737 AE           	xor (hl)
 131+ 9738 77           	ld (hl),a
 132+ 9739 24           	inc h
 133+ 973A 7C               ld a,h
 134+ 973B E6 07            and 7
 135+ 973D 20 0C            jr nz,2F
 136+ 973F 7D               ld a,l
 137+ 9740 C6 20            add a,$20
 138+ 9742 6F               ld l,a
 139+ 9743 38 06            jr c,2F
 140+ 9745 7C               ld a,h
 141+ 9746 D6 08            sub 8
 142+ 9748 67               ld h,a
 143+ 9749 18 00            jr 2F
 144+ 974B 7C           2 ld a,h
 145+ 974C FE 58            cp $58
 146+ 974E 28 02            jr z,3F
 147+ 9750 10 E3            djnz 1B
 148+ 9752 ED 7B 01 8A  3 ld sp,(Stack)
 149+ 9756 C9           	ret
 150+ 9757
 151+ 9757 ED 73 01 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 975B FD F9        	ld sp,iy
 153+ 975D
 154+ 975D              ; >>>
 155+ 975D
 156+ 975D 06 10            ld b,16
 157+ 975F D1           1 pop de
 158+ 9760 7B           	ld a,e
 159+ 9761 AE           	xor (hl)
 160+ 9762 77           	ld (hl),a
 161+ 9763 24           	inc h
 162+ 9764 7C               ld a,h
 163+ 9765 E6 07            and 7
 164+ 9767 20 0C            jr nz,2F
 165+ 9769 7D               ld a,l
 166+ 976A C6 20            add a,$20
 167+ 976C 6F               ld l,a
 168+ 976D 38 06            jr c,2F
 169+ 976F 7C               ld a,h
 170+ 9770 D6 08            sub 8
 171+ 9772 67               ld h,a
 172+ 9773 18 00            jr 2F
 173+ 9775 7C           2 ld a,h
 174+ 9776 FE 58            cp $58
 175+ 9778 28 02            jr z,3F
 176+ 977A 10 E3            djnz 1B
 177+ 977C ED 7B 01 8A  3 ld sp,(Stack)
 178+ 9780 C9           	ret
 179+ 9781
 180+ 9781              ; ---------------------------------------------------
 181+ 9781
 182+ 9781 ED 73 01 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9785 FD F9        	ld sp,iy
 184+ 9787 06 08            ld b,8
 185+ 9789 D1           1 pop de
 186+ 978A 7A           	ld a,d
 187+ 978B AE           	xor (hl)
 188+ 978C 77           	ld (hl),a
 189+ 978D 23           	inc hl
 190+ 978E D1           	pop de
 191+ 978F 7B           	ld a,e
 192+ 9790 AE           	xor (hl)
 193+ 9791 77           	ld (hl),a
 194+ 9792 2B           	dec hl
 195+ 9793 24            	inc h
 196+ 9794 7C               ld a,h
 197+ 9795 E6 07            and 7
 198+ 9797 20 0A            jr nz,2F
 199+ 9799 7D               ld a,l
 200+ 979A C6 20            add a,$20
 201+ 979C 6F               ld l,a
 202+ 979D 38 04            jr c,2F
 203+ 979F 7C               ld a,h
 204+ 97A0 D6 08            sub 8
 205+ 97A2 67               ld h,a
 206+ 97A3 7C           2 ld a,h
 207+ 97A4 FE 58            cp $58
 208+ 97A6 28 20            jr z,4F
 209+ 97A8 D1               pop de
 210+ 97A9 7B           	ld a,e
 211+ 97AA AE           	xor (hl)
 212+ 97AB 77           	ld (hl),a
 213+ 97AC 23           	inc hl
 214+ 97AD 7A           	ld a,d
 215+ 97AE AE           	xor (hl)
 216+ 97AF 77           	ld (hl),a
 217+ 97B0 2B           	dec hl
 218+ 97B1 24           	inc h
 219+ 97B2 7C               ld a,h
 220+ 97B3 E6 07            and 7
 221+ 97B5 20 0A            jr nz,3F
 222+ 97B7 7D               ld a,l
 223+ 97B8 C6 20            add a,$20
 224+ 97BA 6F               ld l,a
 225+ 97BB 38 04            jr c,3F
 226+ 97BD 7C               ld a,h
 227+ 97BE D6 08            sub 8
 228+ 97C0 67               ld h,a
 229+ 97C1 7C           3 ld a,h
 230+ 97C2 FE 58            cp $58
 231+ 97C4 28 02            jr z,4F
 232+ 97C6 10 C1            djnz 1B
 233+ 97C8 ED 7B 01 8A  4 ld sp,(Stack)
 234+ 97CC C9           	ret
 235+ 97CD
 236+ 97CD ED 73 01 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97D1 FD F9        	ld sp,iy
 238+ 97D3 06 08            ld b,8
 239+ 97D5 D1           1 pop de
 240+ 97D6 D1           	pop de
 241+ 97D7 7B           	ld a,e
 242+ 97D8 AE           	xor (hl)
 243+ 97D9 77           	ld (hl),a
 244+ 97DA 24            	inc h
 245+ 97DB 7C               ld a,h
 246+ 97DC E6 07            and 7
 247+ 97DE 20 0A            jr nz,2F
 248+ 97E0 7D               ld a,l
 249+ 97E1 C6 20            add a,$20
 250+ 97E3 6F               ld l,a
 251+ 97E4 38 04            jr c,2F
 252+ 97E6 7C               ld a,h
 253+ 97E7 D6 08            sub 8
 254+ 97E9 67               ld h,a
 255+ 97EA 7C           2 ld a,h
 256+ 97EB FE 58            cp $58
 257+ 97ED 28 1B            jr z,4F
 258+ 97EF D1               pop de
 259+ 97F0 7A           	ld a,d
 260+ 97F1 AE           	xor (hl)
 261+ 97F2 77           	ld (hl),a
 262+ 97F3 24           	inc h
 263+ 97F4 7C               ld a,h
 264+ 97F5 E6 07            and 7
 265+ 97F7 20 0A            jr nz,3F
 266+ 97F9 7D               ld a,l
 267+ 97FA C6 20            add a,$20
 268+ 97FC 6F               ld l,a
 269+ 97FD 38 04            jr c,3F
 270+ 97FF 7C               ld a,h
 271+ 9800 D6 08            sub 8
 272+ 9802 67               ld h,a
 273+ 9803 7C           3 ld a,h
 274+ 9804 FE 58            cp $58
 275+ 9806 28 02            jr z,4F
 276+ 9808 10 CB            djnz 1B
 277+ 980A ED 7B 01 8A  4 ld sp,(Stack)
 278+ 980E C9           	ret
 279+ 980F
 280+ 980F ED 73 01 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9813 FD F9        	ld sp,iy
 282+ 9815 06 08            ld b,8
 283+ 9817 D1           1 pop de
 284+ 9818 7B           	ld a,e
 285+ 9819 AE           	xor (hl)
 286+ 981A 77           	ld (hl),a
 287+ 981B 23           	inc hl
 288+ 981C 7A           	ld a,d
 289+ 981D AE           	xor (hl)
 290+ 981E 77           	ld (hl),a
 291+ 981F 2B           	dec hl
 292+ 9820 24             	inc h
 293+ 9821 7C               ld a,h
 294+ 9822 E6 07            and 7
 295+ 9824 20 0A            jr nz,2F
 296+ 9826 7D               ld a,l
 297+ 9827 C6 20            add a,$20
 298+ 9829 6F               ld l,a
 299+ 982A 38 04            jr c,2F
 300+ 982C 7C               ld a,h
 301+ 982D D6 08            sub 8
 302+ 982F 67               ld h,a
 303+ 9830 7C           2 ld a,h
 304+ 9831 FE 58            cp $58
 305+ 9833 28 21            jr z,4F
 306+ 9835 D1               pop de
 307+ 9836 7A           	ld a,d
 308+ 9837 AE           	xor (hl)
 309+ 9838 77           	ld (hl),a
 310+ 9839 23           	inc hl
 311+ 983A D1               pop de
 312+ 983B 7B           	ld a,e
 313+ 983C AE           	xor (hl)
 314+ 983D 77           	ld (hl),a
 315+ 983E 2B           	dec hl
 316+ 983F 24           	inc h
 317+ 9840 7C               ld a,h
 318+ 9841 E6 07            and 7
 319+ 9843 20 0A            jr nz,3F
 320+ 9845 7D               ld a,l
 321+ 9846 C6 20            add a,$20
 322+ 9848 6F               ld l,a
 323+ 9849 38 04            jr c,3F
 324+ 984B 7C               ld a,h
 325+ 984C D6 08            sub 8
 326+ 984E 67               ld h,a
 327+ 984F 7C           3 ld a,h
 328+ 9850 FE 58            cp $58
 329+ 9852 28 02            jr z,4F
 330+ 9854 10 C1            djnz 1B
 331+ 9856 ED 7B 01 8A  4 ld sp,(Stack)
 332+ 985A C9           	ret
 333+ 985B
 334+ 985B ED 73 01 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 985F FD F9        	ld sp,iy
 336+ 9861 06 08            ld b,8
 337+ 9863 D1           1 pop de
 338+ 9864 7B           	ld a,e
 339+ 9865 AE           	xor (hl)
 340+ 9866 77           	ld (hl),a
 341+ 9867 24            	inc h
 342+ 9868 7C               ld a,h
 343+ 9869 E6 07            and 7
 344+ 986B 20 0A            jr nz,2F
 345+ 986D 7D               ld a,l
 346+ 986E C6 20            add a,$20
 347+ 9870 6F               ld l,a
 348+ 9871 38 04            jr c,2F
 349+ 9873 7C               ld a,h
 350+ 9874 D6 08            sub 8
 351+ 9876 67               ld h,a
 352+ 9877 7C           2 ld a,h
 353+ 9878 FE 58            cp $58
 354+ 987A 28 1C            jr z,4F
 355+ 987C D1               pop de
 356+ 987D 7A           	ld a,d
 357+ 987E AE           	xor (hl)
 358+ 987F 77           	ld (hl),a
 359+ 9880 24           	inc h
 360+ 9881 7C               ld a,h
 361+ 9882 E6 07            and 7
 362+ 9884 20 0A            jr nz,3F
 363+ 9886 7D               ld a,l
 364+ 9887 C6 20            add a,$20
 365+ 9889 6F               ld l,a
 366+ 988A 38 04            jr c,3F
 367+ 988C 7C               ld a,h
 368+ 988D D6 08            sub 8
 369+ 988F 67               ld h,a
 370+ 9890 7C           3 ld a,h
 371+ 9891 FE 58            cp $58
 372+ 9893 28 03            jr z,4F
 373+ 9895 D1               pop de
 374+ 9896 10 CB            djnz 1B
 375+ 9898 ED 7B 01 8A  4 ld sp,(Stack)
 376+ 989C C9           	ret
 377+ 989D
 378+ 989D              ; ---------------------------------------------------
 379+ 989D              ;
 380+ 989D              ;   27/02/23
 381+ 989D              ;
 382+ 989D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 989D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 989D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 989D
 386+ 989D ED 73 01 8A  Pinta_Disparo ld (Stack),sp
 387+ 98A1 FD F9            ld sp,iy
 388+ 98A3 06 04            ld b,4
 389+ 98A5 D1           1 pop de
 390+ 98A6 7B               ld a,e
 391+ 98A7 AE               xor (hl)
 392+ 98A8 77               ld (hl),a
 393+ 98A9 23               inc hl
 394+ 98AA 7A               ld a,d
 395+ 98AB AE               xor (hl)
 396+ 98AC 77               ld (hl),a
 397+ 98AD 2B               dec hl
 398+ 98AE
 399+ 98AE 24               inc h
 400+ 98AF 7C               ld a,h
 401+ 98B0 E6 07            and 7
 402+ 98B2 20 0A            jr nz,2F
 403+ 98B4 7D               ld a,l
 404+ 98B5 C6 20            add a,$20
 405+ 98B7 6F               ld l,a
 406+ 98B8 38 04            jr c,2F
 407+ 98BA 7C               ld a,h
 408+ 98BB D6 08            sub 8
 409+ 98BD 67               ld h,a
 410+ 98BE 7C           2 ld a,h
 411+ 98BF FE 58            cp $58
 412+ 98C1 28 02            jr z,3F
 413+ 98C3
 414+ 98C3 10 E0            djnz 1B
 415+ 98C5 ED 7B 01 8A  3 ld sp,(Stack)
 416+ 98C9 C9               ret
 417+ 98CA
# file closed: Rutinas_de_impresion_sprites.asm
1263  98CA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98CA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98CA              ;
   3+ 98CA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98CA              ;
   5+ 98CA              ; *****************************************************************************************************************************************************************************************
   6+ 98CA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98CA
   8+ 98CA 7C           calcula_tercio ld a,h
   9+ 98CB E6 18        	and $18
  10+ 98CD CB 2F        	sra a
  11+ 98CF CB 2F        	sra a
  12+ 98D1 CB 2F        	sra a
  13+ 98D3 C9           	ret
  14+ 98D4
# file closed: calcula_tercio.asm
1264  98D4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98D4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98D4              ;
   3+ 98D4              ;
   4+ 98D4              ;	CLS.
   5+ 98D4              ;
   6+ 98D4              ;	Limpia la pantalla y define sus atributos.
   7+ 98D4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98D4              ;
   9+ 98D4              ;	COLORES: 0 ..... NEGRO
  10+ 98D4              ;    		 1 ..... AZUL
  11+ 98D4              ; 			 2 ..... ROJO
  12+ 98D4              ;			 3 ..... MAGENTA
  13+ 98D4              ; 			 4 ..... VERDE
  14+ 98D4              ; 			 5 ..... CIAN
  15+ 98D4              ;			 6 ..... AMARILLO
  16+ 98D4              ; 			 7 ..... BLANCO
  17+ 98D4              ;
  18+ 98D4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98D4              ;
  20+ 98D4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98D4
  22+ 98D4
  23+ 98D4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98D7 11 01 40     	LD DE,$4001
  25+ 98DA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98DD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98DF ED B0        	LDIR
  28+ 98E1 01 FF 02     	LD BC,767
  29+ 98E4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98E5 ED B0        	LDIR
  31+ 98E7 C9           	ret
  32+ 98E8
# file closed: Cls.asm
1265  98E8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98E8              ; ******************************************************************************************************************************************************************************************
   2+ 98E8              ;
   3+ 98E8              ;   20/05/23
   4+ 98E8              ;
   5+ 98E8              ;	Recompone_posicion_inicio
   6+ 98E8              ;
   7+ 98E8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98E8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98E8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98E8              ;	_ a una u otra rutina.
  11+ 98E8
  12+ 98E8              Recompone_posicion_inicio
  13+ 98E8
  14+ 98E8 2A C2 89     	ld hl,(Posicion_inicio)
  15+ 98EB 7D           	ld a,l
  16+ 98EC E6 1F        	and $1f
  17+ 98EE 28 16        	jr z,1F
  18+ 98F0
  19+ 98F0 FE 1F        	cp $1f
  20+ 98F2 28 0D        	jr z,3F
  21+ 98F4
  22+ 98F4 21 EE 89     	ld hl,Ctrl_2
  23+ 98F7 CB C6        	set 0,(hl)
  24+ 98F9 2A B4 89     	ld hl,(Puntero_objeto)
  25+ 98FC 22 F1 89     	ld (Repone_puntero_objeto),hl
  26+ 98FF 18 08        	jr 2F
  27+ 9901
  28+ 9901 CD A2 9A     3 call Mov_left
  29+ 9904 18 03        	jr 2F
  30+ 9906
  31+ 9906 CD 84 99     1 call Mov_right
  32+ 9909 21 00 F0     2 ld hl,Sprite_vacio
  33+ 990C 22 B4 89     	ld (Puntero_objeto),hl
  34+ 990F C9           	ret
  35+ 9910
  36+ 9910              ; ******************************************************************************************************************************************************************************************
  37+ 9910              ;
  38+ 9910              ;   27/05/23
  39+ 9910              ;
  40+ 9910              ;	Mov_down
  41+ 9910              ;
  42+ 9910              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9910              ;
  44+ 9910              ;
  45+ 9910              Mov_down
  46+ 9910
  47+ 9910 CD 72 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9913              ;																	; _ repone (Puntero_objeto).
  49+ 9913 21 DE 89     	ld hl,Ctrl_0
  50+ 9916 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9918              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9918              ; 																	; _ en el caso de que no lo haya.
  53+ 9918 3A C8 89     	ld a,(Vel_down)
  54+ 991B 47           	ld b,a
  55+ 991C 2A B2 89         ld hl,(Posicion_actual)
  56+ 991F CD CA 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9922 E6 02        	and 2
  58+ 9924 28 0F        	jr z,1F
  59+ 9926
  60+ 9926              ; Nos encontramos en el último tercio de pantalla.
  61+ 9926              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9926
  63+ 9926 7C           	ld a,h
  64+ 9927 FE 57        	cp $57
  65+ 9929 20 0A        	jr nz,1F
  66+ 992B 7D           	ld a,l
  67+ 992C C6 20        	add $20
  68+ 992E 30 05        	jr nc,1F
  69+ 9930
  70+ 9930              ; ------------------------------
  71+ 9930 CD 20 9C     	call Reaparece_arriba
  72+ 9933              ;	call Reinicio
  73+ 9933              ; ------------------------------
  74+ 9933
  75+ 9933 18 08        	jr 3F
  76+ 9935 CD 0A 96     1 call NextScan
  77+ 9938 22 B2 89     	ld (Posicion_actual),hl
  78+ 993B 10 E2            djnz 2B
  79+ 993D CD 36 9C     3 call Genera_coordenadas
  80+ 9940 C9           	ret
  81+ 9941
  82+ 9941              ; ******************************************************************************************************************************************************************************************
  83+ 9941              ;
  84+ 9941              ;   27/05/23
  85+ 9941              ;
  86+ 9941              ;	Mov_up
  87+ 9941              ;
  88+ 9941              ; 	Mueve el Sprite hacia arriba.
  89+ 9941              ;
  90+ 9941              ;
  91+ 9941              Mov_up
  92+ 9941
  93+ 9941 CD 72 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9944              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9944 21 DE 89     	ld hl,Ctrl_0
  96+ 9947 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9949              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9949              ; 																		; _ en el caso de que no lo haya.
  99+ 9949 3A C7 89     	ld a,(Vel_up)
 100+ 994C 47           	ld b,a
 101+ 994D 2A B2 89     	ld hl,(Posicion_actual)
 102+ 9950 CD CA 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9953 A7           	and a
 104+ 9954 20 10        	jr nz,1F
 105+ 9956
 106+ 9956              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9956              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9956
 109+ 9956 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9957 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9959 20 0B            jr nz,1F
 112+ 995B 7D               ld a,l
 113+ 995C D6 20            sub $20
 114+ 995E 30 06            jr nc,1F
 115+ 9960 25               dec h
 116+ 9961
 117+ 9961              ; -----------------------------
 118+ 9961 CD 10 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9964              ;	call Reinicio
 120+ 9964              ; -----------------------------
 121+ 9964
 122+ 9964 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9966 CD 19 96     1 call PreviousScan
 124+ 9969 22 B2 89     	ld (Posicion_actual),hl
 125+ 996C 10 E2            djnz 3B
 126+ 996E CD 36 9C     2 call Genera_coordenadas
 127+ 9971 C9           	ret
 128+ 9972
 129+ 9972              ; -----------------------------
 130+ 9972              ;
 131+ 9972              ;	27/5/23
 132+ 9972              ;
 133+ 9972              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9972              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9972              ;
 136+ 9972              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9972              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9972              ;
 139+ 9972              ;	Modifica: A y (Puntero_objeto).
 140+ 9972
 141+ 9972 3A EE 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9975 CB 47        	bit 0,a
 143+ 9977 C8           	ret z
 144+ 9978 CB 87        	res 0,a
 145+ 997A 32 EE 89     	ld (Ctrl_2),a
 146+ 997D 2A F1 89     	ld hl,(Repone_puntero_objeto)
 147+ 9980 22 B4 89     	ld (Puntero_objeto),hl
 148+ 9983 C9           	ret
 149+ 9984
 150+ 9984              ; ******************************************************************************************************************************************************************************************
 151+ 9984              ;
 152+ 9984              ;	19/10/22
 153+ 9984              ;
 154+ 9984              ;	Mov_right.
 155+ 9984              ;
 156+ 9984              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9984              ;
 158+ 9984
 159+ 9984 21 DE 89     Mov_right ld hl,Ctrl_0
 160+ 9987 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9989              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9989              ; 																	; _ en el caso de que no lo haya.
 163+ 9989 3A DE 89     	ld a,(Ctrl_0)
 164+ 998C CB 77        	bit 6,a
 165+ 998E 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9990
 167+ 9990 CD BE 9B     	call Stop_Amadeus_right
 168+ 9993 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 9994 18 4D        	jr 8F
 170+ 9996
 171+ 9996 3A B6 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 9999 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 999B 20 46        	jr nz,8F
 174+ 999D
 175+ 999D 3A B8 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 99A0 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 99A1 28 40        	jr z,8F
 178+ 99A3
 179+ 99A3              ; ---------- ---------- ----------
 180+ 99A3              ;
 181+ 99A3              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 99A3
 183+ 99A3 3A C6 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 99A6 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 99A8 28 11        	jr z,1F
 186+ 99AA 38 06        	jr c,6F
 187+ 99AC FE 04        	cp 4
 188+ 99AE 28 14        	jr z,7F
 189+ 99B0 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99B2
 191+ 99B2              ; ---------- ---------- ----------
 192+ 99B2              ;
 193+ 99B2              ; Perfiles de velocidad
 194+ 99B2              ;
 195+ 99B2
 196+ 99B2 3A B8 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99B5 FE FE        	cp $fe
 198+ 99B7 20 2A        	jr nz,8F
 199+ 99B9 18 10        	jr 3F
 200+ 99BB 3A B8 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99BE FE FD        	cp $fd
 202+ 99C0 20 21        	jr nz,8F
 203+ 99C2 18 07        	jr 3F
 204+ 99C4 3A B8 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99C7 FE FB        	cp $fb
 206+ 99C9 20 18        	jr nz,8F
 207+ 99CB
 208+ 99CB              ; ---------- ---------- ----------
 209+ 99CB
 210+ 99CB              3
 211+ 99CB CD FE 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99CE              ;	call Reinicio
 213+ 99CE
 214+ 99CE              ; ---------- ---------- ----------
 215+ 99CE              ;
 216+ 99CE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99CE
 218+ 99CE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99D0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99D1 CD EA 99     	call DESPLZ_DER
 221+ 99D4 C1           	pop bc
 222+ 99D5 10 F9        	djnz 5B
 223+ 99D7 2A B2 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99DA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99DB 22 B2 89     	ld (Posicion_actual),hl
 226+ 99DE CD 36 9C     	call Genera_coordenadas
 227+ 99E1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99E3
 229+ 99E3              ; ---------- ---------- ----------
 230+ 99E3
 231+ 99E3 2A B2 89     8 ld hl,(Posicion_actual)
 232+ 99E6 CD EA 99     	call DESPLZ_DER
 233+ 99E9 C9           2 ret
 234+ 99EA
 235+ 99EA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99EA              ;
 237+ 99EA              ;	22/9/22
 238+ 99EA              ;
 239+ 99EA
 240+ 99EA CD F9 99     DESPLZ_DER call Desplaza_derecha
 241+ 99ED CD 45 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99F0 CD 6E 9A         call Ciclo_completo
 243+ 99F3 21 DE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99F6 CB FE        	set 7,(hl)
 245+ 99F8 C9           	ret
 246+ 99F9
 247+ 99F9              ; ******************************************************************************************************************************************************************************************
 248+ 99F9              ;	15/02/23
 249+ 99F9              ;
 250+ 99F9
 251+ 99F9 3A C6 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99FC 47           	ld b,a
 253+ 99FD 2A BE 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9A00 23           1 inc hl
 255+ 9A01 23           	inc hl
 256+ 9A02 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9A04 22 BE 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9A07 CD 18 8D     	call Extrae_address
 259+ 9A0A 22 B4 89     	ld (Puntero_objeto),hl
 260+ 9A0D
 261+ 9A0D              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9A0D
 263+ 9A0D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9A0D              ; Cuántos movimientos hemos hecho ??
 265+ 9A0D              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9A0D
 267+ 9A0D 2A BA 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A10 EB           	ex de,hl
 269+ 9A11 A7           	and a
 270+ 9A12 ED 52        	sbc hl,de
 271+ 9A14 CB 3D        	srl l
 272+ 9A16 3E 08        6 ld a,8
 273+ 9A18 95           	sub l
 274+ 9A19 30 1E        	jr nc,3F
 275+ 9A1B
 276+ 9A1B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A1B              ; B="0".
 278+ 9A1B
 279+ 9A1B 04           4 inc b
 280+ 9A1C 3C           	inc a
 281+ 9A1D 20 FC        	jr nz,4B
 282+ 9A1F 78           	ld a,b
 283+ 9A20 08           	ex af,af
 284+ 9A21 2A BA 89     	ld hl,(Indice_Sprite_der)
 285+ 9A24 23           5 inc hl
 286+ 9A25 23           	inc hl
 287+ 9A26 10 FC        	djnz 5B
 288+ 9A28 22 BE 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A2B CD 18 8D     	call Extrae_address
 290+ 9A2E 22 B4 89     	ld (Puntero_objeto),hl
 291+ 9A31
 292+ 9A31              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A31              ; _(Posicion_actual).
 294+ 9A31
 295+ 9A31 21 B2 89     	ld hl,Posicion_actual
 296+ 9A34 34           	inc (hl)
 297+ 9A35 08               ex af,af
 298+ 9A36 6F           	ld l,a
 299+ 9A37 18 DD        	jr 6B
 300+ 9A39
 301+ 9A39              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A39
 303+ 9A39 47           3 ld b,a
 304+ 9A3A 2A BC 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A3D 23           2 inc hl
 306+ 9A3E 23           	inc hl
 307+ 9A3F 10 FC        	djnz 2B
 308+ 9A41 22 C0 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A44 C9           8 ret
 310+ 9A45
 311+ 9A45              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A45              ;
 313+ 9A45              ;	24/7/22
 314+ 9A45              ;
 315+ 9A45              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A45              ;
 317+ 9A45              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A45              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A45              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A45
 321+ 9A45 3A B8 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A48 A7           	and a
 323+ 9A49 20 1F        	jr nz,1F
 324+ 9A4B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A4D 32 B8 89         ld (CTRL_DESPLZ),a
 326+ 9A50
 327+ 9A50 21 B1 89     	ld hl,Columns
 328+ 9A53 34           	inc (hl)
 329+ 9A54 3A C4 89     	ld a,(Cuad_objeto)
 330+ 9A57 E6 01        	and 1
 331+ 9A59 28 0F        	jr z,1F
 332+ 9A5B 2A B2 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A5E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A5F 22 B2 89     	ld (Posicion_actual),hl
 335+ 9A62 CD 36 9C     	call Genera_coordenadas
 336+ 9A65 CD CA 9B     	call Inc_CTRL_DESPLZ
 337+ 9A68 18 03        	jr 2F
 338+ 9A6A CD CA 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A6D C9           2 ret
 340+ 9A6E
 341+ 9A6E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A6E              ;
 343+ 9A6E              ;	24/7/22
 344+ 9A6E              ;
 345+ 9A6E              ;	Ciclo_completo.
 346+ 9A6E              ;
 347+ 9A6E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A6E              ;
 349+ 9A6E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A6E              ; 	Decrementamos (Columns).
 351+ 9A6E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A6E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A6E
 354+ 9A6E
 355+ 9A6E 3A B8 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A71 FE FF        	cp $ff
 357+ 9A73 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A75 E6 F0        	and $f0
 359+ 9A77 20 28        	jr nz,3F
 360+ 9A79
 361+ 9A79              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A79
 363+ 9A79 3A B8 89     	ld a,(CTRL_DESPLZ)
 364+ 9A7C 47           	ld b,a
 365+ 9A7D 3E F8        	ld a,$f8
 366+ 9A7F 80           	add b
 367+ 9A80 32 B8 89     	ld (CTRL_DESPLZ),a
 368+ 9A83 18 1C        	jr 3F
 369+ 9A85 21 B1 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A88 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A89 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A8A 32 B8 89     	ld (CTRL_DESPLZ),a
 373+ 9A8D 3A C4 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A90 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A92 20 0A        	jr nz,2F
 376+ 9A94 2A B2 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A97 23           	inc hl
 378+ 9A98 22 B2 89     	ld (Posicion_actual),hl
 379+ 9A9B CD 36 9C     	call Genera_coordenadas
 380+ 9A9E
 381+ 9A9E              ; Inicia el puntero de Sprite.
 382+ 9A9E
 383+ 9A9E CD 2F 8D     2 call Inicia_puntero_objeto_der
 384+ 9AA1 C9           3 ret
 385+ 9AA2
 386+ 9AA2              ; ******************************************************************************************************************************************************************************************
 387+ 9AA2              ;
 388+ 9AA2              ;	15/02/23
 389+ 9AA2              ;
 390+ 9AA2              ;	Mov_left.
 391+ 9AA2              ;
 392+ 9AA2              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9AA2              ;
 394+ 9AA2 21 DE 89     Mov_left ld hl,Ctrl_0
 395+ 9AA5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9AA7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9AA7              ; 																	; _ en el caso de que no lo haya.
 398+ 9AA7 3A DE 89     	ld a,(Ctrl_0)
 399+ 9AAA CB 77        	bit 6,a
 400+ 9AAC 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9AAE
 402+ 9AAE CD C4 9B     	call Stop_Amadeus_left
 403+ 9AB1 C8           	ret z
 404+ 9AB2 20 4A        	jr nz,8F
 405+ 9AB4
 406+ 9AB4 3A B6 89     11 ld a,(Coordenada_X)
 407+ 9AB7 A7           	and a
 408+ 9AB8 20 44        	jr nz,8F
 409+ 9ABA
 410+ 9ABA 3A B8 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9ABD A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9ABE 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9AC0
 414+ 9AC0              ; ---------- ---------- ----------
 415+ 9AC0
 416+ 9AC0 3A C5 89     	ld a,(Vel_left)
 417+ 9AC3 FE 02        	cp 2
 418+ 9AC5 28 0F        	jr z,1F
 419+ 9AC7 38 04        	jr c,6F
 420+ 9AC9 FE 04        	cp 4
 421+ 9ACB 28 12        	jr z,7F
 422+ 9ACD
 423+ 9ACD              ; ---------- ---------- ----------
 424+ 9ACD
 425+ 9ACD 3A B8 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AD0 FE F8        	cp $f8
 427+ 9AD2 20 2A        	jr nz,8F
 428+ 9AD4 18 10        	jr 4F
 429+ 9AD6 3A B8 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AD9 FE F9        	cp $f9
 431+ 9ADB 20 21        	jr nz,8F
 432+ 9ADD 18 07        	jr 4F
 433+ 9ADF 3A B8 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AE2 FE FB        	cp $fb
 435+ 9AE4 20 18        	jr nz,8F
 436+ 9AE6
 437+ 9AE6              ; ---------- ---------- ----------
 438+ 9AE6
 439+ 9AE6              4
 440+ 9AE6 CD EC 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AE9              ;	call Reinicio
 442+ 9AE9
 443+ 9AE9              ; ---------- ---------- ----------
 444+ 9AE9
 445+ 9AE9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AEB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9AEC
 448+ 9AEC              ;	ld hl,(Indice_Sprite_izq)
 449+ 9AEC              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9AEC
 451+ 9AEC CD 05 9B     	call DESPLZ_IZQ
 452+ 9AEF C1           	pop bc
 453+ 9AF0 10 F9        	djnz 5B
 454+ 9AF2 2A B2 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9AF5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9AF6 22 B2 89     	ld (Posicion_actual),hl
 457+ 9AF9 CD 36 9C     	call Genera_coordenadas
 458+ 9AFC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9AFE
 460+ 9AFE              ; ---------- ---------- ----------
 461+ 9AFE
 462+ 9AFE              ; Movemos, no hay recolocación.
 463+ 9AFE
 464+ 9AFE 2A B2 89     8 ld hl,(Posicion_actual)
 465+ 9B01 CD 05 9B     	call DESPLZ_IZQ
 466+ 9B04 C9           2 ret
 467+ 9B05
 468+ 9B05              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9B05              ;
 470+ 9B05              ;	22/9/22
 471+ 9B05
 472+ 9B05              DESPLZ_IZQ
 473+ 9B05
 474+ 9B05 CD 14 9B     	call Desplaza_izquierda
 475+ 9B08 CD 60 9B         call modifica_parametros_1er_DESPLZ
 476+ 9B0B CD 88 9B     	call Ciclo_completo_2
 477+ 9B0E 21 DE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B11 CB BE        	res 7,(hl)
 479+ 9B13 C9           	ret
 480+ 9B14
 481+ 9B14              Desplaza_izquierda
 482+ 9B14
 483+ 9B14 3A C5 89     	ld a,(Vel_left)
 484+ 9B17 47           	ld b,a
 485+ 9B18 2A C0 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B1B 23           1 inc hl
 487+ 9B1C 23           	inc hl
 488+ 9B1D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B1F 22 C0 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B22 CD 18 8D     	call Extrae_address
 491+ 9B25 22 B4 89     	ld (Puntero_objeto),hl
 492+ 9B28
 493+ 9B28              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B28
 495+ 9B28              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B28              ; Cuántos movimientos hemos hecho ??
 497+ 9B28              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B28
 499+ 9B28 2A BC 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B2B EB           	ex de,hl
 501+ 9B2C A7           	and a
 502+ 9B2D ED 52        	sbc hl,de
 503+ 9B2F CB 3D        	srl l
 504+ 9B31 3E 08        6 ld a,8
 505+ 9B33 95           	sub l
 506+ 9B34 30 1E        	jr nc,3F
 507+ 9B36
 508+ 9B36              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B36              ; B="0".
 510+ 9B36
 511+ 9B36 04           4 inc b
 512+ 9B37 3C           	inc a
 513+ 9B38 20 FC        	jr nz,4B
 514+ 9B3A 78           	ld a,b
 515+ 9B3B 08           	ex af,af
 516+ 9B3C 2A BC 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B3F 23           5 inc hl
 518+ 9B40 23           	inc hl
 519+ 9B41 10 FC        	djnz 5B
 520+ 9B43 22 C0 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B46 CD 18 8D     	call Extrae_address
 522+ 9B49 22 B4 89     	ld (Puntero_objeto),hl
 523+ 9B4C
 524+ 9B4C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B4C              ; _(Posicion_actual).
 526+ 9B4C
 527+ 9B4C 21 B2 89     	ld hl,Posicion_actual
 528+ 9B4F 35           	dec (hl)
 529+ 9B50 08           	ex af,af
 530+ 9B51 6F           	ld l,a
 531+ 9B52 18 DD        	jr 6B
 532+ 9B54
 533+ 9B54              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B54
 535+ 9B54 47           3 ld b,a
 536+ 9B55 2A BA 89     	ld hl,(Indice_Sprite_der)
 537+ 9B58 23           2 inc hl
 538+ 9B59 23           	inc hl
 539+ 9B5A 10 FC        	djnz 2B
 540+ 9B5C 22 BE 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B5F C9           8 ret
 542+ 9B60
 543+ 9B60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B60              ;
 545+ 9B60              ;	modifica_parametros_1er_DESPLZ
 546+ 9B60              ;
 547+ 9B60              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B60              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B60              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B60
 551+ 9B60 3A B8 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B63 A7           	and a
 553+ 9B64 20 1E        	jr nz,1F
 554+ 9B66 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B67 32 B8 89         ld (CTRL_DESPLZ),a
 556+ 9B6A 21 B1 89     	ld hl,Columns
 557+ 9B6D 34           	inc (hl)
 558+ 9B6E 3A C4 89     	ld a,(Cuad_objeto)
 559+ 9B71 E6 01        	and 1
 560+ 9B73 20 0F        	jr nz,1F
 561+ 9B75 2A B2 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B78 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B79 22 B2 89     	ld (Posicion_actual),hl
 564+ 9B7C CD 36 9C     	call Genera_coordenadas
 565+ 9B7F CD DB 9B     	call Dec_CTRL_DESPLZ
 566+ 9B82 18 03        	jr 2F
 567+ 9B84 CD DB 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B87 C9           2 ret
 569+ 9B88
 570+ 9B88              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B88
 572+ 9B88 3A B8 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B8B FE F7        	cp $f7
 574+ 9B8D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B8F 30 2C        	jr nc,3F
 576+ 9B91
 577+ 9B91              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B91
 579+ 9B91 06 00        	ld b,0
 580+ 9B93 04           4 inc b
 581+ 9B94 3C           	inc a
 582+ 9B95 FE F7        	cp $f7
 583+ 9B97 20 FA        	jr nz,4B
 584+ 9B99 3E FF        	ld a,$ff
 585+ 9B9B 90           	sub b
 586+ 9B9C 32 B8 89     	ld (CTRL_DESPLZ),a
 587+ 9B9F 18 1C        	jr 3F
 588+ 9BA1
 589+ 9BA1              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9BA1
 591+ 9BA1 21 B1 89     1 ld hl,Columns
 592+ 9BA4 35           	dec (hl)
 593+ 9BA5 AF           	xor a
 594+ 9BA6 32 B8 89     	ld (CTRL_DESPLZ),a
 595+ 9BA9 3A C4 89     	ld a,(Cuad_objeto)
 596+ 9BAC E6 01        	and 1
 597+ 9BAE 28 0A        	jr z,2F
 598+ 9BB0 2A B2 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BB3 2B           	dec hl
 600+ 9BB4 22 B2 89     	ld (Posicion_actual),hl
 601+ 9BB7 CD 36 9C     	call Genera_coordenadas
 602+ 9BBA
 603+ 9BBA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BBA
 605+ 9BBA CD 42 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BBD C9           3 ret
 607+ 9BBE
 608+ 9BBE              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BBE              ;
 610+ 9BBE              ;	19/10/22
 611+ 9BBE              ;
 612+ 9BBE              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BBE              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BBE
 615+ 9BBE 3A B6 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BC1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BC3 C9           	ret
 618+ 9BC4
 619+ 9BC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BC4              ;
 621+ 9BC4              ;	19/10/22
 622+ 9BC4              ;
 623+ 9BC4              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BC4              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BC4
 626+ 9BC4 3A B6 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BC7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BC9 C9           	ret
 629+ 9BCA
 630+ 9BCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BCA              ;
 632+ 9BCA              ;	24/7/22
 633+ 9BCA              ;
 634+ 9BCA              ;	Inc_CTRL_DESPLZ
 635+ 9BCA              ;
 636+ 9BCA              ;
 637+ 9BCA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BCA
 639+ 9BCA 21 B8 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BCD 3A C6 89     	ld a,(Vel_right)
 641+ 9BD0 A7           	and a
 642+ 9BD1 28 06        	jr z,1F
 643+ 9BD3 47           	ld b,a
 644+ 9BD4 34           3 inc (hl)
 645+ 9BD5 10 FD        	djnz 3B
 646+ 9BD7 18 01        	jr 2F
 647+ 9BD9 34           1 inc (hl)
 648+ 9BDA C9           2 ret
 649+ 9BDB
 650+ 9BDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BDB              ;
 652+ 9BDB              ;	5/2/23
 653+ 9BDB              ;
 654+ 9BDB              ;	Dec_CTRL_DESPLZ
 655+ 9BDB              ;
 656+ 9BDB              ;
 657+ 9BDB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BDB
 659+ 9BDB 21 B8 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BDE 3A C5 89     	ld a,(Vel_left)
 661+ 9BE1 A7           	and a
 662+ 9BE2 28 06        	jr z,1F
 663+ 9BE4 47           	ld b,a
 664+ 9BE5 35           3 dec (hl)
 665+ 9BE6 10 FD        	djnz 3B
 666+ 9BE8 18 01        	jr 2F
 667+ 9BEA 35           1 dec (hl)
 668+ 9BEB C9           2 ret
 669+ 9BEC
 670+ 9BEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BEC
 672+ 9BEC 2A B2 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BEF 01 1F 00     	ld bc,31
 674+ 9BF2 A7           	and a
 675+ 9BF3 ED 4A        	adc hl,bc
 676+ 9BF5 22 B2 89     	ld (Posicion_actual),hl
 677+ 9BF8 21 DE 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BFB CB C6        	set 0,(hl)
 679+ 9BFD C9           	ret
 680+ 9BFE
 681+ 9BFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BFE
 683+ 9BFE 2A B2 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9C01 01 1F 00     	ld bc,31
 685+ 9C04 A7           	and a
 686+ 9C05 ED 42        	sbc hl,bc
 687+ 9C07 22 B2 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9C0A 21 DE 89     	ld hl,Ctrl_0
 689+ 9C0D CB CE        	set 1,(hl)
 690+ 9C0F C9           	ret
 691+ 9C10
 692+ 9C10              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C10
 694+ 9C10 24           Reaparece_abajo inc h
 695+ 9C11 01 E0 17     	ld bc,$17e0
 696+ 9C14 A7           	and a
 697+ 9C15 ED 4A        	adc hl,bc
 698+ 9C17 22 B2 89     	ld (Posicion_actual),hl
 699+ 9C1A 21 DE 89     	ld hl,Ctrl_0
 700+ 9C1D CB D6        	set 2,(hl)
 701+ 9C1F C9           	ret
 702+ 9C20
 703+ 9C20              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C20
 705+ 9C20 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C23 A7           	and a
 707+ 9C24 ED 42        	sbc hl,bc
 708+ 9C26 22 B2 89     	ld (Posicion_actual),hl
 709+ 9C29 21 DE 89     	ld hl,Ctrl_0
 710+ 9C2C CB DE        	set 3,(hl)
 711+ 9C2E C9           	ret
 712+ 9C2F
 713+ 9C2F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C2F
 715+ 9C2F 2A C2 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C32 22 B2 89     	ld (Posicion_actual),hl
 717+ 9C35 C9           	ret
# file closed: Direcciones.asm
1266  9C36              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C36              ; ------------------------------------------------------------------------
   2+ 9C36              ;
   3+ 9C36              ;	02/04/23
   4+ 9C36              ;
   5+ 9C36              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C36              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C36              ;
   8+ 9C36              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C36              ;
  10+ 9C36              ;	Modifica: A,BC y DE.
  11+ 9C36
  12+ 9C36 C5           Genera_coordenadas push bc
  13+ 9C37 E5           	push hl
  14+ 9C38 D5           	push de
  15+ 9C39
  16+ 9C39 2A B2 89     	ld hl,(Posicion_actual)
  17+ 9C3C
  18+ 9C3C 7D           	ld a,l
  19+ 9C3D E6 1F        	and $1f
  20+ 9C3F 32 B6 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C42
  22+ 9C42 CD CA 98     	call calcula_tercio
  23+ 9C45 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C46
  25+ 9C46 1E 00        	ld e,0
  26+ 9C48 7D           	ld a,l
  27+ 9C49 E6 E0        	and $e0
  28+ 9C4B 28 01        	jr z,1F
  29+ 9C4D 04           	inc b
  30+ 9C4E
  31+ 9C4E 04           1 inc b
  32+ 9C4F 05           	dec b
  33+ 9C50 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C52              ;														; _ , salimos.
  35+ 9C52 1C           3 inc e
  36+ 9C53 D6 20        	sub 32
  37+ 9C55 20 FB        	jr nz,3B
  38+ 9C57 10 F5        	djnz 1B
  39+ 9C59
  40+ 9C59 7B           2 ld a,e
  41+ 9C5A 32 B7 89     	ld (Coordenada_y),a
  42+ 9C5D
  43+ 9C5D D1           	pop de
  44+ 9C5E E1           	pop hl
  45+ 9C5F C1           	pop bc
  46+ 9C60
  47+ 9C60 C9           	ret
  48+ 9C61
  49+ 9C61              ; ------------------------------------------------------------------------
  50+ 9C61              ;	28/05/23
  51+ 9C61              ;
  52+ 9C61              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C61              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C61              ;
  55+ 9C61              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C61              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C61              ;
  58+ 9C61              ;		DE="$120d"
  59+ 9C61              ;
  60+ 9C61              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C61              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C61              ;
  63+ 9C61              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C61
  65+ 9C61              ;	Modifica: A,BC y DE.
  66+ 9C61
  67+ 9C61
  68+ 9C61              Genera_coordenadas_disparo
  69+ 9C61
  70+ 9C61              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C61
  72+ 9C61 7D           	ld a,l
  73+ 9C62 E6 1F        	and $1f
  74+ 9C64 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C65 CD CA 98     	call calcula_tercio
  76+ 9C68 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C69 1E 00        	ld e,0
  78+ 9C6B 7D           	ld a,l
  79+ 9C6C E6 E0        	and $e0
  80+ 9C6E 28 01        	jr z,1F
  81+ 9C70 04           	inc b
  82+ 9C71 1C           1 inc e
  83+ 9C72 D6 20        	sub 32
  84+ 9C74 20 FB        	jr nz,1B
  85+ 9C76 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C78 C9           	ret
  87+ 9C79
# file closed: Genera_coordenadas.asm
1267  9C79              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C79
   2+ 9C79
   3+ 9C79              ;   25/06/23
   4+ 9C79              ;
   5+ 9C79              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C79              ;
   7+ 9C79              ;   Codificación:
   8+ 9C79              ;
   9+ 9C79              ;   La descripción de un movimiento consta de 5 bytes como mínimo:
  10+ 9C79              ;
  11+ 9C79              ;   db (Contador_db_mov),[(Desplaz.1),(Desplaz2),(Desplaz3),.....],(Cola_de_desplazamiento).
  12+ 9C79              ;
  13+ 9C79              ;
  14+ 9C79              ;   (Contador_db_mov) ..... Nº de bytes que componen el movimiento, (0-255).
  15+ 9C79              ;
  16+ 9C79              ;                       Hay que tener en cuenta que cada (Desplaz.) está constituido por 3 bytes.
  17+ 9C79              ;                       Así que cada movimiento podrá estar constituido como máximo, por 85 desplazamientos.
  18+ 9C79              ;
  19+ 9C79              ;   (Desplaz.1),(Desplaz.2),(Desplaz.3) ..... Bytes que describen la velocidad, dirección y repeticiones de cada uno de_
  20+ 9C79              ;                       los desplazamientos que componen el movimiento.
  21+ 9C79              ;
  22+ 9C79              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  23+ 9C79              ;
  24+ 9C79              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  25+ 9C79              ;                               ..... %01000010 Vel_up 4
  26+ 9C79              ;                                               Vel_down 2
  27+ 9C79              ;                               ..... $42
  28+ 9C79              ;
  29+ 9C79              ;                       (Byte1) ..... % (Vel_left),(Vel_right)
  30+ 9C79              ;
  31+ 9C79              ;                               ..... %01000010 Vel_left 4
  32+ 9C79              ;                                               Vel_right 2
  33+ 9C79              ;                               ..... $42
  34+ 9C79              ;
  35+ 9C79              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  36+ 9C79              ;
  37+ 9C79              ;                       (Byte3) ..... Descripción del desplazamiento.
  38+ 9C79              ;
  39+ 9C79              ;                       % up,down,left,right, Repetición del desplazamiento, (0-15).
  40+ 9C79              ;
  41+ 9C79              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  42+ 9C79              ;                                     $53
  43+ 9C79              ;
  44+ 9C79              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  45+ 9C79              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  46+ 9C79              ;
  47+ 9C79              ;                       Arriba ..... $81
  48+ 9C79              ;                       Arriba - izquierda ..... $a1
  49+ 9C79              ;                       Arriba - derecha ..... $91
  50+ 9C79              ;
  51+ 9C79              ;                       Abajo ..... $41
  52+ 9C79              ;                       Abajo - izquierda ..... $61
  53+ 9C79              ;                       Abajo - derecha ..... $51
  54+ 9C79              ;
  55+ 9C79              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  56+ 9C79              ;
  57+ 9C79              ;											;	"$00" ..... Hemos finalizado la cadena de movimiento.
  58+ 9C79              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  59+ 9C79              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  60+ 9C79              ;
  61+ 9C79              ;											;	"$01 - "$fe" ..... Repetición del movimiento.
  62+ 9C79              ;											;						Nº de veces que vamos a repetir el movimiento completo.
  63+ 9C79              ;											;						En este caso, volveremos a inicializar (Puntero_mov),_
  64+ 9C79              ;							    			;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  65+ 9C79              ;
  66+ 9C79              ;											;	"$ff" ..... Bucle infinito de repetición.
  67+ 9C79              ;											;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  68+ 9C79              ;											;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  69+ 9C79
  70+ 9C79              ; ----- ----- ----- ----- -----
  71+ 9C79
  72+ 9C79 7B 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C7B              ;    defw Codo_abajo_derecha
  74+ 9C7B
  75+ 9C7B 01 14 11 48  Bajo_decelerando db 1,$14,$11,$48,0
  75+ 9C7F 00
  76+ 9C80 01 12 11 4F      db 1,$12,$11,$4f,2
  76+ 9C84 02
  77+ 9C85 01 11 11 4F      db 1,$11,$11,$4f,2,0                                        ; El final del movimiento se indica con un "0" en
  77+ 9C89 02 00
  78+ 9C8B
  79+ 9C8B              ; ----- ----- ----- ----- -----
  80+ 9C8B              ;
  81+ 9C8B              ;   27/06/23
  82+ 9C8B
  83+ 9C8B              Movimiento
  84+ 9C8B
  85+ 9C8B 3A E5 89         ld a,(Contador_db_mov)                                      ; Hemos iniciado un movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  86+ 9C8E A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  87+ 9C8F 28 02            jr z,Inicializa_movimiento
  88+ 9C91
  89+ 9C91 18 1D            jr Movimiento_iniciado                                      ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  90+ 9C93
  91+ 9C93              ; Inicializa movimiento, (comienza un movimiento).
  92+ 9C93              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
  93+ 9C93
  94+ 9C93 2A E3 89     Inicializa_movimiento ld hl,(Puntero_mov)
  95+ 9C96 7E               ld a,(hl)
  96+ 9C97 32 E5 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes que_
  97+ 9C9A A7               and a                                                       ; _ tiene la cadena.
  98+ 9C9B 28 36            jr z, Reinicia_el_movimiento                                ; Hemos terminado de ejecutar todas las cadenas de movimiento.
  99+ 9C9D
 100+ 9C9D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Contador_db_mov).
 101+ 9C9D
 102+ 9C9D 23               inc hl
 103+ 9C9E CD 13 9D         call Ajusta_velocidad_desplazamiento
 104+ 9CA1
 105+ 9CA1              ; Iniciamos (Repetimos_mov).
 106+ 9CA1
 107+ 9CA1 7E               ld a,(hl)
 108+ 9CA2 E6 0F            and $0f
 109+ 9CA4 32 E7 89         ld (Repetimos_desplazamiento),a
 110+ 9CA7 32 E8 89         ld (Repetimos_desplazamiento_backup),a
 111+ 9CAA
 112+ 9CAA              ; Iniciamos (Cola_de_desplazamiento).
 113+ 9CAA
 114+ 9CAA 23               inc hl
 115+ 9CAB 7E               ld a,(hl)
 116+ 9CAC 32 E9 89         ld (Cola_de_desplazamiento),a
 117+ 9CAF 2B               dec hl
 118+ 9CB0
 119+ 9CB0              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 120+ 9CB0              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 121+ 9CB0
 122+ 9CB0              Movimiento_iniciado
 123+ 9CB0
 124+ 9CB0 CD EB 9C         call Aplica_desplazamiento
 125+ 9CB3
 126+ 9CB3 21 E7 89         ld hl,Repetimos_desplazamiento
 127+ 9CB6 35               dec (hl)
 128+ 9CB7 C0               ret nz
 129+ 9CB8
 130+ 9CB8
 131+ 9CB8              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 132+ 9CB8              ; Hay que volver a ejecutar este desplazamiento ???.
 133+ 9CB8
 134+ 9CB8 3A E9 89         ld a,(Cola_de_desplazamiento)
 135+ 9CBB A7               and a
 136+ 9CBC CC 3C 9D         call z, Incrementa_Puntero_indice_mov                       ; Fin de la cadena de movimiento ???.
 137+ 9CBF
 138+ 9CBF FE FF            cp $ff
 139+ 9CC1 28 10            jr z, Reinicia_el_movimiento                                ; Bucle infinito de desplazamiento?.
 140+ 9CC3
 141+ 9CC3 FE 01            cp 1
 142+ 9CC5 CC 3E 9D         call z, Siguiente_desplazamiento                            ; Pasamos al siguiente desplazamiento de movimiento?.
 143+ 9CC8
 144+ 9CC8 3D               dec a
 145+ 9CC9 32 E9 89         ld (Cola_de_desplazamiento),a
 146+ 9CCC
 147+ 9CCC 3A E8 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 148+ 9CCF 32 E7 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 149+ 9CD2              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 150+ 9CD2 C9               ret
 151+ 9CD3
 152+ 9CD3              ; !!!!!!!!!!!!!!!! Voy por aquí.
 153+ 9CD3
 154+ 9CD3
 155+ 9CD3
 156+ 9CD3              Reinicia_el_movimiento
 157+ 9CD3
 158+ 9CD3 CD E0 9C         call Inicia_Puntero_mov
 159+ 9CD6 AF               xor a
 160+ 9CD7 32 E5 89         ld (Contador_db_mov),a
 161+ 9CDA 32 E6 89         ld (Incrementa_puntero),a
 162+ 9CDD C3 8B 9C         jp Movimiento
 163+ 9CE0
 164+ 9CE0
 165+ 9CE0              ; ---------- --------- --------- ---------- ----------
 166+ 9CE0              ;
 167+ 9CE0              ;   26/6/23
 168+ 9CE0              ;
 169+ 9CE0              ;   Inicia_Puntero_mov
 170+ 9CE0              ;
 171+ 9CE0              ;
 172+ 9CE0
 173+ 9CE0 2A E1 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 174+ 9CE3 5E               ld e,(hl)
 175+ 9CE4 23               inc hl
 176+ 9CE5 56               ld d,(hl)
 177+ 9CE6 EB               ex de,hl
 178+ 9CE7 22 E3 89         ld (Puntero_mov),hl
 179+ 9CEA C9               ret
 180+ 9CEB
 181+ 9CEB              ; ---------- --------- --------- ---------- ----------
 182+ 9CEB              ;
 183+ 9CEB              ;   27/06/23
 184+ 9CEB              ;
 185+ 9CEB              ;   Aplica_movimiento.
 186+ 9CEB
 187+ 9CEB              Aplica_desplazamiento
 188+ 9CEB
 189+ 9CEB              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 190+ 9CEB
 191+ 9CEB 2A E3 89         ld hl, (Puntero_mov)
 192+ 9CEE CB 7E            bit 7,(hl)
 193+ 9CF0 28 03            jr z,1F
 194+ 9CF2 CD 41 99         call Mov_up
 195+ 9CF5 2A E3 89     1 ld hl, (Puntero_mov)
 196+ 9CF8 CB 76            bit 6,(hl)
 197+ 9CFA 28 03            jr z,2F
 198+ 9CFC CD 10 99         call Mov_down
 199+ 9CFF 2A E3 89     2 ld hl, (Puntero_mov)
 200+ 9D02 CB 6E            bit 5,(hl)
 201+ 9D04 28 03            jr z,3F
 202+ 9D06 CD A2 9A         call Mov_left
 203+ 9D09 2A E3 89     3 ld hl, (Puntero_mov)
 204+ 9D0C CB 66            bit 4,(hl)
 205+ 9D0E C8               ret z
 206+ 9D0F CD 84 99         call Mov_right
 207+ 9D12 C9               ret
 208+ 9D13
 209+ 9D13              ; ---------- --------- --------- ---------- ----------
 210+ 9D13              ;
 211+ 9D13              ;   26/06/23
 212+ 9D13              ;
 213+ 9D13              ;   Ajusta_velocidad_desplazamiento.
 214+ 9D13
 215+ 9D13              Ajusta_velocidad_desplazamiento
 216+ 9D13
 217+ 9D13              ; 1er byte de la cadena de movimiento.
 218+ 9D13              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 219+ 9D13
 220+ 9D13 CD 31 9D         call Extrae_nibble_alto
 221+ 9D16
 222+ 9D16 32 C7 89         ld (Vel_up),a
 223+ 9D19 79               ld a,c
 224+ 9D1A E6 0F            and $0f
 225+ 9D1C 32 C8 89         ld (Vel_down),a
 226+ 9D1F
 227+ 9D1F              ; Saltamos al 2º byte de la cadena de movimiento.
 228+ 9D1F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 229+ 9D1F
 230+ 9D1F 23               inc hl
 231+ 9D20 CD 31 9D         call Extrae_nibble_alto
 232+ 9D23
 233+ 9D23 32 C5 89         ld (Vel_left),a
 234+ 9D26 79               ld a,c
 235+ 9D27 E6 0F            and $0f
 236+ 9D29 32 C6 89         ld (Vel_right),a
 237+ 9D2C
 238+ 9D2C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 239+ 9D2C
 240+ 9D2C 23               inc hl
 241+ 9D2D 22 E3 89         ld (Puntero_mov),hl
 242+ 9D30 C9               ret
 243+ 9D31
 244+ 9D31 06 04        Extrae_nibble_alto ld b,4
 245+ 9D33 7E               ld a,(hl)
 246+ 9D34 4F               ld c,a
 247+ 9D35 E6 F0            and $f0
 248+ 9D37 CB 3F        1 srl a
 249+ 9D39 10 FC            djnz 1B
 250+ 9D3B C9               ret
 251+ 9D3C
 252+ 9D3C              ; ---------- --------- --------- ---------- ----------
 253+ 9D3C              ;
 254+ 9D3C              ;   27/06/23
 255+ 9D3C              ;
 256+ 9D3C              ;   Incrementa_Puntero_indice_mov
 257+ 9D3C
 258+ 9D3C 18 FE        Incrementa_Puntero_indice_mov jr $
 259+ 9D3E
 260+ 9D3E              ; ---------- --------- --------- ---------- ----------
 261+ 9D3E              ;
 262+ 9D3E              ;   01/07/23
 263+ 9D3E              ;
 264+ 9D3E              ;   Siguiente_desplazamiento
 265+ 9D3E
 266+ 9D3E 18 FE        Siguiente_desplazamiento jr $
 267+ 9D40
# file closed: Patrones_de_mov.asm
1268  9D40              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D40              ; Relojes y temporizaciones.
   2+ 9D40
   3+ 9D40              ; ------------------------------------------------------
   4+ 9D40              ;
   5+ 9D40              ;	27/04/23
   6+ 9D40              ;
   7+ 9D40              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 9D40              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D40              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D40              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D40              ;
  12+ 9D40              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D40              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D40
  15+ 9D40              Habilita_disparos
  16+ 9D40
  17+ 9D40 7E           	ld a,(hl)
  18+ 9D41 A7           	and a
  19+ 9D42 C0           	ret nz
  20+ 9D43
  21+ 9D43 EB           	ex de,hl
  22+ 9D44
  23+ 9D44 35           	dec (hl)
  24+ 9D45 34           	inc (hl)
  25+ 9D46 35           	dec (hl)
  26+ 9D47 C0           	ret nz
  27+ 9D48
  28+ 9D48 2B           	dec hl
  29+ 9D49 7E           	ld a,(hl)
  30+ 9D4A 23           	inc hl
  31+ 9D4B 77           	ld (hl),a
  32+ 9D4C
  33+ 9D4C EB           	ex de,hl
  34+ 9D4D 3E 01        	ld a,1
  35+ 9D4F 77           	ld (hl),a
  36+ 9D50 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1269  9D51              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9D51              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9D51              ;
   3+ 9D51              ;	3/1/23
   4+ 9D51              ;
   5+ 9D51              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9D51
   7+ 9D51              ;	ADC HL,SP	LD (addr),SP
   8+ 9D51              ;	ADD HL,SP	LD SP,(addr)
   9+ 9D51              ;	ADD IX,SP	LD SP,nn
  10+ 9D51              ; 	ADD IY,SP	LD SP,HL
  11+ 9D51              ;				LD SP,IX
  12+ 9D51              ;	DEC SP		LD SP,IY
  13+ 9D51
  14+ 9D51              ;	EX (SP),HL
  15+ 9D51              ;	EX (SP),IX
  16+ 9D51              ;	EX (SP),IY
  17+ 9D51
  18+ 9D51              ;	INC SP
  19+ 9D51
  20+ 9D51
  21+ 9D51                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 01 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A F0 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 07 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 05 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 07 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 05 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 01 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1270  7FD5
1271  7FD5              	SAVESNA "Pruebas.sna", START
1272  7FD5
1273  7FD5
1274  7FD5
1275  7FD5
# file closed: Banco_de_pruebas.asm
