# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD A0 8A     	call Frame
  15  A104
  16  A104 3A D1 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8
 206+ 83E8 EE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83EA 1E 84        	defw Explosion_2x3_2
 208+ 83EC 4E 84        	defw Explosion_2x3_3
 209+ 83EE
 210+ 83EE 0D ED E0 0D  Explosion_2x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 210+ 83F2 ED E0 0D ED
 211+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 211+ 83FA 0D ED E0 0D
 212+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 212+ 8402 E0 0D ED E0
 213+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 213+ 840A ED E0 0D ED
 214+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 214+ 8412 0D ED E0 0D
 215+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 215+ 841A E0 0D ED E0
 216+ 841E
 217+ 841E 01 8F 80 01  Explosion_2x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 217+ 8422 8F 80 01 8F
 218+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 218+ 842A 01 8F 80 01
 219+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 219+ 8432 80 01 8F 80
 220+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 220+ 843A 8F 80 01 8F
 221+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 221+ 8442 01 8F 80 01
 222+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 222+ 844A 80 01 8F 80
 223+ 844E
 224+ 844E 01 11 10 01  Explosion_2x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 224+ 8452 11 10 01 11
 225+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 225+ 845A 01 11 10 01
 226+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 226+ 8462 10 01 11 10
 227+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 227+ 846A 11 10 01 11
 228+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 228+ 8472 01 11 10 01
 229+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 229+ 847A 10 01 11 10
 230+ 847E
 231+ 847E              ; ------------------------------------------
 232+ 847E
 233+ 847E 84 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8480 A4 84        	defw Explosion_2x2_2
 235+ 8482 C4 84        	defw Explosion_2x2_3
 236+ 8484
 237+ 8484 DE DE DE DE  Explosion_2x2_1 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 237+ 8488 DE DE DE DE
 238+ 848C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 238+ 8490 DE DE DE DE
 239+ 8494 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 239+ 8498 DE DE DE DE
 240+ 849C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 240+ 84A0 DE DE DE DE
 241+ 84A4
 242+ 84A4 DE DE DE DE  Explosion_2x2_2	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 242+ 84A8 DE DE DE DE
 243+ 84AC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 243+ 84B0 DE DE DE DE
 244+ 84B4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 244+ 84B8 DE DE DE DE
 245+ 84BC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 245+ 84C0 DE DE DE DE
 246+ 84C4
 247+ 84C4 DE DE DE DE  Explosion_2x2_3	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 247+ 84C8 DE DE DE DE
 248+ 84CC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 248+ 84D0 DE DE DE DE
 249+ 84D4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 249+ 84D8 DE DE DE DE
 250+ 84DC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 250+ 84E0 DE DE DE DE
 251+ 84E4
# file closed: Sprites_e_indices.asm
  23  84E4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84E4
   2+ 84E4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84E4
   4+ 84E4              ; 13/05/23
   5+ 84E4
   6+ 84E4              ; Control. %00000001 00000001
   7+ 84E4              ;
   8+ 84E4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84E4              ;                    _ hacen las entidades hacia abajo.
  10+ 84E4              ;
  11+ 84E4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84E4
  13+ 84E4 EA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84E6 F2 84        	defw Disparo_2A
  15+ 84E8 FA 84        	defw Disparo_3A
  16+ 84EA
  17+ 84EA 00 00        Disparo_1A defw 0									; Control.
  18+ 84EC 00 00        	defw 0											; Puntero objeto.
  19+ 84EE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F0 00 00        	defw 0											; Rutina de impresión.
  21+ 84F2
  22+ 84F2 00 00        Disparo_2A defw 0									; Control.
  23+ 84F4 00 00        	defw 0											; Puntero objeto.
  24+ 84F6 00 00        	defw 0											; Puntero de impresión.
  25+ 84F8 00 00        	defw 0											; Rutina de impresión.
  26+ 84FA
  27+ 84FA 00 00        Disparo_3A defw 0
  28+ 84FC
  29+ 84FC 12 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 84FE 1A 85        	defw Disparo_2
  31+ 8500 22 85        	defw Disparo_3
  32+ 8502 2A 85        	defw Disparo_4
  33+ 8504 32 85        	defw Disparo_5
  34+ 8506 3A 85        	defw Disparo_6
  35+ 8508 42 85        	defw Disparo_7
  36+ 850A 4A 85        	defw Disparo_8
  37+ 850C 52 85        	defw Disparo_9
  38+ 850E 5A 85        	defw Disparo_10
  39+ 8510 62 85        	defw Disparo_11
  40+ 8512
  41+ 8512 00 00        Disparo_1 defw 0									; Control.
  42+ 8514 00 00        	defw 0											; Puntero objeto.
  43+ 8516 00 00        	defw 0											; Puntero de impresión.
  44+ 8518 00 00        	defw 0											; Rutina de impresión.
  45+ 851A
  46+ 851A 00 00        Disparo_2 defw 0									; Control.
  47+ 851C 00 00        	defw 0											; Puntero objeto.
  48+ 851E 00 00        	defw 0											; Puntero de impresión.
  49+ 8520 00 00        	defw 0											; Rutina de impresión.
  50+ 8522
  51+ 8522 00 00        Disparo_3 defw 0									; Control.
  52+ 8524 00 00        	defw 0											; Puntero objeto.
  53+ 8526 00 00        	defw 0											; Puntero de impresión.
  54+ 8528 00 00        	defw 0											; Rutina de impresión.
  55+ 852A
  56+ 852A 00 00        Disparo_4 defw 0									; Control.
  57+ 852C 00 00        	defw 0											; Puntero objeto.
  58+ 852E 00 00        	defw 0											; Puntero de impresión.
  59+ 8530 00 00        	defw 0											; Rutina de impresión.
  60+ 8532
  61+ 8532 00 00        Disparo_5 defw 0									; Control.
  62+ 8534 00 00        	defw 0											; Puntero objeto.
  63+ 8536 00 00        	defw 0											; Puntero de impresión.
  64+ 8538 00 00        	defw 0											; Rutina de impresión.
  65+ 853A
  66+ 853A 00 00        Disparo_6 defw 0									; Control.
  67+ 853C 00 00        	defw 0											; Puntero objeto.
  68+ 853E 00 00        	defw 0											; Puntero de impresión.
  69+ 8540 00 00        	defw 0											; Rutina de impresión.
  70+ 8542
  71+ 8542 00 00        Disparo_7 defw 0									; Control.
  72+ 8544 00 00        	defw 0											; Puntero objeto.
  73+ 8546 00 00        	defw 0											; Puntero de impresión.
  74+ 8548 00 00        	defw 0											; Rutina de impresión.
  75+ 854A
  76+ 854A 00 00        Disparo_8 defw 0									; Control.
  77+ 854C 00 00        	defw 0											; Puntero objeto.
  78+ 854E 00 00        	defw 0											; Puntero de impresión.
  79+ 8550 00 00        	defw 0											; Rutina de impresión.
  80+ 8552
  81+ 8552 00 00        Disparo_9 defw 0									; Control.
  82+ 8554 00 00        	defw 0											; Puntero objeto.
  83+ 8556 00 00        	defw 0											; Puntero de impresión.
  84+ 8558 00 00        	defw 0											; Rutina de impresión.
  85+ 855A
  86+ 855A 00 00        Disparo_10 defw 0									; Control.
  87+ 855C 00 00        	defw 0											; Puntero objeto.
  88+ 855E 00 00        	defw 0											; Puntero de impresión.
  89+ 8560 00 00        	defw 0											; Rutina de impresión.
  90+ 8562
  91+ 8562 00 00        Disparo_11 defw 0
  92+ 8564
  93+ 8564              ; -------------------------------------------------------------------------------------
  94+ 8564
  95+ 8564              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8564
  97+ 8564 BA 85        	defw Caja_1
  98+ 8566 F8 85        	defw Caja_2
  99+ 8568 36 86        	defw Caja_3
 100+ 856A 74 86        	defw Caja_4
 101+ 856C B2 86        	defw Caja_5
 102+ 856E F0 86        	defw Caja_6
 103+ 8570 2E 87        	defw Caja_7
 104+ 8572 6C 87        	defw Caja_8
 105+ 8574 AA 87        	defw Caja_9
 106+ 8576 E8 87        	defw Caja_10
 107+ 8578              ;	...
 108+ 8578              ;	...
 109+ 8578              ;	+ entidades ...
 110+ 8578 00 00        	defw 0
 111+ 857A 00 00        	defw 0
 112+ 857C
 113+ 857C              ; ---------- ---------- ---------- ---------- ----------
 114+ 857C
 115+ 857C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 857E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8580 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8582 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8585
 120+ 8585 05           	db %00000101									; (Attr).
 121+ 8586 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8588 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 858A
 124+ 858A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 858C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 858E
 127+ 858E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8590 04           	db 4 											; (Cuad_objeto).
 129+ 8591 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8595
 131+ 8595 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 8596
 133+ 8596 00 00        	db 0,0											; Variables_de_borrado
 134+ 8598 00 00        	defw 0											;	" " " " " " "
 135+ 859A 00 00        	defw 0											;	" " " " " " "
 136+ 859C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A0
 138+ 85A0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00        	defw 0											;	" " " " " " "
 141+ 85A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85AA
 143+ 85AA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85AD
 145+ 85AD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85B4
 148+ 85B4 00           	db 0 											; (Columnas).
 149+ 85B5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85BA
 152+ 85BA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85BA
 154+ 85BA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85BC 00 00        	defw 0											; (Posicion_actual).
 156+ 85BE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85C3
 159+ 85C3 00           	db %00000000 									; (Attr).
 160+ 85C4
 161+ 85C4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85C6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85CC
 166+ 85CC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85CE 00           	db 0											; (Cuad_objeto).
 168+ 85CF
 169+ 85CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85D3
 171+ 85D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85D4
 173+ 85D4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85D6 00 00        	defw 0											;	" " " " " " "
 175+ 85D8 00 00        	defw 0											;	" " " " " " "
 176+ 85DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85DE
 178+ 85DE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85E0 00 00        	defw 0											;	" " " " " " "
 180+ 85E2 00 00        	defw 0											;	" " " " " " "
 181+ 85E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85E8
 183+ 85E8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85EB
 185+ 85EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85F2
 188+ 85F2 00           	db 0 											; (Columnas).
 189+ 85F3 00 00        	defw 0											; (Limite_horizontal).
 190+ 85F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 191+ 85F8
 192+ 85F8              ; ---------- ---------- ---------- ---------- ----------
 193+ 85F8
 194+ 85F8 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85FA 00 00        	defw 0											; (Posicion_actual).
 196+ 85FC 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8601
 199+ 8601 00           	db %00000000 									; (Attr).
 200+ 8602
 201+ 8602 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8604 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8606 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 8608 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Posicion_inicio).
 207+ 860C 00           	db 0											; (Cuad_objeto).
 208+ 860D
 209+ 860D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8611
 211+ 8611 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8612
 213+ 8612 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8614 00 00        	defw 0											;	" " " " " " "
 215+ 8616 00 00        	defw 0											;	" " " " " " "
 216+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 861C
 218+ 861C 00 00        	db 0,0											; Variables_de_pintado
 219+ 861E 00 00        	defw 0											;	" " " " " " "
 220+ 8620 00 00        	defw 0											;	" " " " " " "
 221+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8626
 223+ 8626 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 8629
 225+ 8629 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 862D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8630
 228+ 8630 00           	db 0 											; (Columnas).
 229+ 8631 00 00        	defw 0											; (Limite_horizontal).
 230+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 8636
 232+ 8636              ; ---------- ---------- ---------- ---------- ----------
 233+ 8636
 234+ 8636 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8638 00 00        	defw 0											; (Posicion_actual).
 236+ 863A 00 00        	defw 0 											; (Puntero_objeto).
 237+ 863C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 863F
 239+ 863F 00           	db %00000000 									; (Attr).
 240+ 8640
 241+ 8640 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8642 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8644 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8646 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8648
 246+ 8648 00 00        	defw 0											; (Posicion_inicio).
 247+ 864A 00           	db 0											; (Cuad_objeto).
 248+ 864B
 249+ 864B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 864F
 251+ 864F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8650
 253+ 8650 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8652 00 00        	defw 0											;	" " " " " " "
 255+ 8654 00 00        	defw 0											;	" " " " " " "
 256+ 8656 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 865A
 258+ 865A 00 00        	db 0,0											; Variables_de_pintado
 259+ 865C 00 00        	defw 0											;	" " " " " " "
 260+ 865E 00 00        	defw 0											;	" " " " " " "
 261+ 8660 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8664
 263+ 8664 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8667
 265+ 8667 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 866B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 866E
 268+ 866E 00           	db 0 											; (Columnas).
 269+ 866F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8671 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 271+ 8674
 272+ 8674              ; ---------- ---------- ---------- ---------- ----------
 273+ 8674
 274+ 8674 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8676 00 00        	defw 0											; (Posicion_actual).
 276+ 8678 00 00        	defw 0 											; (Puntero_objeto).
 277+ 867A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 867D
 279+ 867D 00           	db %00000000 									; (Attr).
 280+ 867E
 281+ 867E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8680 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8682 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8684 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8686
 286+ 8686 00 00        	defw 0											; (Posicion_inicio).
 287+ 8688 00           	db 0											; (Cuad_objeto).
 288+ 8689
 289+ 8689 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 868D
 291+ 868D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 868E
 293+ 868E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8690 00 00        	defw 0											;	" " " " " " "
 295+ 8692 00 00        	defw 0											;	" " " " " " "
 296+ 8694 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8698
 298+ 8698 00 00        	db 0,0											; Variables_de_pintado
 299+ 869A 00 00        	defw 0											;	" " " " " " "
 300+ 869C 00 00        	defw 0											;	" " " " " " "
 301+ 869E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 86A2
 303+ 86A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 86A5
 305+ 86A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 86A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 86AC
 308+ 86AC 00           	db 0 											; (Columnas).
 309+ 86AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 86AF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86B2
 312+ 86B2              ; ---------- ---------- ---------- ---------- ----------
 313+ 86B2
 314+ 86B2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86B4 00 00        	defw 0											; (Posicion_actual).
 316+ 86B6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86BB
 319+ 86BB 00           	db %00000000 									; (Attr).
 320+ 86BC
 321+ 86BC 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86BE 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86C4
 326+ 86C4 00 00        	defw 0											; (Posicion_inicio).
 327+ 86C6 00           	db 0											; (Cuad_objeto).
 328+ 86C7
 329+ 86C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86CB
 331+ 86CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86CC
 333+ 86CC 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 86CE 00 00        	defw 0											;	" " " " " " "
 335+ 86D0 00 00        	defw 0											;	" " " " " " "
 336+ 86D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 86D6
 338+ 86D6 00 00        	db 0,0											; Variables_de_pintado
 339+ 86D8 00 00        	defw 0											;	" " " " " " "
 340+ 86DA 00 00        	defw 0											;	" " " " " " "
 341+ 86DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 86E0
 343+ 86E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 86E3
 345+ 86E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86EA
 348+ 86EA 00           	db 0 											; (Columnas).
 349+ 86EB 00 00        	defw 0											; (Limite_horizontal).
 350+ 86ED 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 351+ 86F0
 352+ 86F0              ; ---------- ---------- ---------- ---------- ----------
 353+ 86F0
 354+ 86F0 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86F2 00 00        	defw 0											; (Posicion_actual).
 356+ 86F4 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86F9
 359+ 86F9 00           	db %00000000 									; (Attr).
 360+ 86FA
 361+ 86FA 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86FC 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 8700 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8702
 366+ 8702 00 00        	defw 0											; (Posicion_inicio).
 367+ 8704 00           	db 0											; (Cuad_objeto).
 368+ 8705
 369+ 8705 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8709
 371+ 8709 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 870A
 373+ 870A 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 870C 00 00        	defw 0											;	" " " " " " "
 375+ 870E 00 00        	defw 0											;	" " " " " " "
 376+ 8710 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8714
 378+ 8714 00 00        	db 0,0											; Variables_de_pintado
 379+ 8716 00 00        	defw 0											;	" " " " " " "
 380+ 8718 00 00        	defw 0											;	" " " " " " "
 381+ 871A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 871E
 383+ 871E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 8721
 385+ 8721 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8725 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8728
 388+ 8728 00           	db 0 											; (Columnas).
 389+ 8729 00 00        	defw 0											; (Limite_horizontal).
 390+ 872B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 391+ 872E
 392+ 872E              ; ---------- ---------- ---------- ---------- ----------
 393+ 872E
 394+ 872E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 8730 00 00        	defw 0											; (Posicion_actual).
 396+ 8732 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8734 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8737
 399+ 8737 00           	db %00000000 									; (Attr).
 400+ 8738
 401+ 8738 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 873A 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 873C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 8740
 406+ 8740 00 00        	defw 0											; (Posicion_inicio).
 407+ 8742 00           	db 0											; (Cuad_objeto).
 408+ 8743
 409+ 8743 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8747
 411+ 8747 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8748
 413+ 8748 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 874A 00 00        	defw 0											;	" " " " " " "
 415+ 874C 00 00        	defw 0											;	" " " " " " "
 416+ 874E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8752
 418+ 8752 00 00        	db 0,0											; Variables_de_pintado
 419+ 8754 00 00        	defw 0											;	" " " " " " "
 420+ 8756 00 00        	defw 0											;	" " " " " " "
 421+ 8758 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 875C
 423+ 875C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 875F
 425+ 875F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8763 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8766
 428+ 8766 00           	db 0 											; (Columnas).
 429+ 8767 00 00        	defw 0											; (Limite_horizontal).
 430+ 8769 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 431+ 876C
 432+ 876C              ; ---------- ---------- ---------- ---------- ----------
 433+ 876C
 434+ 876C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 876E 00 00        	defw 0											; (Posicion_actual).
 436+ 8770 00 00        	defw 0 											; (Puntero_objeto).
 437+ 8772 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8775
 439+ 8775 00           	db %00000000 									; (Attr).
 440+ 8776
 441+ 8776 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8778 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 877A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 877C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 877E
 446+ 877E 00 00        	defw 0											; (Posicion_inicio).
 447+ 8780 00           	db 0											; (Cuad_objeto).
 448+ 8781
 449+ 8781 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8785
 451+ 8785 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8786
 453+ 8786 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8788 00 00        	defw 0											;	" " " " " " "
 455+ 878A 00 00        	defw 0											;	" " " " " " "
 456+ 878C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 8790
 458+ 8790 00 00        	db 0,0											; Variables_de_pintado
 459+ 8792 00 00        	defw 0											;	" " " " " " "
 460+ 8794 00 00        	defw 0											;	" " " " " " "
 461+ 8796 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 879A
 463+ 879A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 879D
 465+ 879D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 87A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 87A4
 468+ 87A4 00           	db 0 											; (Columnas).
 469+ 87A5 00 00        	defw 0											; (Limite_horizontal).
 470+ 87A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 471+ 87AA
 472+ 87AA              ; ---------- ---------- ---------- ---------- ----------
 473+ 87AA
 474+ 87AA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 87AC 00 00        	defw 0											; (Posicion_actual).
 476+ 87AE 00 00        	defw 0 											; (Puntero_objeto).
 477+ 87B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 87B3
 479+ 87B3 00           	db %00000000 									; (Attr).
 480+ 87B4
 481+ 87B4 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 87B6 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 87B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 87BC
 486+ 87BC 00 00        	defw 0											; (Posicion_inicio).
 487+ 87BE 00           	db 0											; (Cuad_objeto).
 488+ 87BF
 489+ 87BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 87C3
 491+ 87C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 87C4
 493+ 87C4 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 87C6 00 00        	defw 0											;	" " " " " " "
 495+ 87C8 00 00        	defw 0											;	" " " " " " "
 496+ 87CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 87CE
 498+ 87CE 00 00        	db 0,0											; Variables_de_pintado
 499+ 87D0 00 00        	defw 0											;	" " " " " " "
 500+ 87D2 00 00        	defw 0											;	" " " " " " "
 501+ 87D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 87D8
 503+ 87D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 87DB
 505+ 87DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 87DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 87E2
 508+ 87E2 00           	db 0 											; (Columnas).
 509+ 87E3 00 00        	defw 0											; (Limite_horizontal).
 510+ 87E5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 511+ 87E8
 512+ 87E8              ; ---------- ---------- ---------- ---------- ----------
 513+ 87E8
 514+ 87E8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87EA 00 00        	defw 0											; (Posicion_actual).
 516+ 87EC 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87F1
 519+ 87F1 00           	db %00000000 									; (Attr).
 520+ 87F2
 521+ 87F2 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87F4 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87FA
 526+ 87FA 00 00        	defw 0											; (Posicion_inicio).
 527+ 87FC 00           	db 0											; (Cuad_objeto).
 528+ 87FD
 529+ 87FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 8801
 531+ 8801 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 8802
 533+ 8802 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 8804 00 00        	defw 0											;	" " " " " " "
 535+ 8806 00 00        	defw 0											;	" " " " " " "
 536+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 880C
 538+ 880C 00 00        	db 0,0											; Variables_de_pintado
 539+ 880E 00 00        	defw 0											;	" " " " " " "
 540+ 8810 00 00        	defw 0											;	" " " " " " "
 541+ 8812 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8816
 543+ 8816 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8819
 545+ 8819 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 881D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 8820
 548+ 8820 00           	db 0 											; (Columnas).
 549+ 8821 00 00        	defw 0											; (Limite_horizontal).
 550+ 8823 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8826
 552+ 8826              ; -------------------------------------------------------------------------------------
 553+ 8826              ;
 554+ 8826              ;	20/05/23
 555+ 8826              ;
 556+ 8826              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 8826              ;
 558+ 8826              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 8826              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 8826              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 8826              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 8826
 563+ 8826              Indice_de_entidades
 564+ 8826
 565+ 8826 30 88        	defw Entidad_1
 566+ 8828 40 88        	defw Entidad_2
 567+ 882A 50 88        	defw Entidad_3
 568+ 882C 60 88        	defw Entidad_4
 569+ 882E 70 88        	defw Entidad_5
 570+ 8830
 571+ 8830              ;	BADSAT, (Satélite malvado).
 572+ 8830
 573+ 8830 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 8832 04           	db %00000100									; (Attr).
 575+ 8833 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 8835 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8837 60 47        	defw $4760	                             	    ; (Posicion_inicio).
 578+ 8839 01           	db 1											; (Cuad_objeto).
 579+ 883A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 883E 21 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 581+ 8840
 582+ 8840 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 8842 02           	db %00000010									; (Attr).
 584+ 8843 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 8845 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8847 5F 48        	defw $485f                                      ; (Posicion_inicio).
 587+ 8849 01           	db 1											; (Cuad_objeto).
 588+ 884A 01 01 01 02  	db 1,1,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 884E 1F 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 590+ 8850
 591+ 8850 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 8852 04           	db %00000100									; (Attr).
 593+ 8853 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 8855 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8857 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8859 01           	db 1											; (Cuad_objeto).
 597+ 885A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 885E 13 9C        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 599+ 8860
 600+ 8860 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 8862 01           	db %00000001									; (Attr).
 602+ 8863 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 8865 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8867 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8869 01           	db 1											; (Cuad_objeto).
 606+ 886A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 886E 1F 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8870
 609+ 8870 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 8872 01           	db %00000001									; (Attr).
 611+ 8873 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 8875 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8877 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8879 01           	db 1											; (Cuad_objeto).
 615+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 887E 15 9C        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 617+ 8880
# file closed: Cajas_y_disparos.asm
  24  8880              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8880              ; 13/05/23
   2+ 8880
   3+ 8880              Indice_de_niveles
   4+ 8880
   5+ 8880 8E 88        	defw Nivel_1
   6+ 8882 99 88        	defw Nivel_2
   7+ 8884 A6 88        	defw Nivel_3
   8+ 8886 B6 88        	defw Nivel_4
   9+ 8888 C8 88        	defw Nivel_5
  10+ 888A
  11+ 888A              ;	...
  12+ 888A              ;	...
  13+ 888A              ;	+ Niveles ...
  14+ 888A
  15+ 888A 00 00        	defw 0
  16+ 888C 00 00        	defw 0
  17+ 888E
  18+ 888E 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 888F 01 02 03 04  	db 1,2,3,4,5
  19+ 8893 05
  20+ 8894 01 02 03 04  	db 1,2,3,4,5
  20+ 8898 05
  21+ 8899 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 889A 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 889E 01 02
  23+ 88A0 02 01 01 01  	db 2,1,1,1,1,2
  23+ 88A4 01 02
  24+ 88A6 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 88A7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 88AB 01
  26+ 88AC 03 01 01 01  	db 3,1,1,1,1
  26+ 88B0 01
  27+ 88B1 03 01 01 01  	db 3,1,1,1,1
  27+ 88B5 01
  28+ 88B6 11           Nivel_4 db 17									; Nº de entidades.
  29+ 88B7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 88BB 01
  30+ 88BC 04 01 01 01  	db 4,1,1,1,1
  30+ 88C0 01
  31+ 88C1 04 01 01 01  	db 4,1,1,1,1
  31+ 88C5 01
  32+ 88C6 02 03        	db 2,3
  33+ 88C8 14           Nivel_5 db 20									; Nº de entidades.
  34+ 88C9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88CD 01
  35+ 88CE 05 01 01 01  	db 5,1,1,1,1
  35+ 88D2 01
  36+ 88D3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88D7 01
  37+ 88D8 05 01 01 01  	db 5,1,1,1,1
  37+ 88DC 01
  38+ 88DD
  39+ 88DD              ;---------------------------------------------------------------------------------------------------------------
  40+ 88DD              ;
  41+ 88DD              ;   21/5/23
  42+ 88DD              ;
  43+ 88DD              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 88DD              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 88DD              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 88DD              ;	_en la caja DRAW correspondiente.
  47+ 88DD              ;
  48+ 88DD              ;	MODIFICA: HL,DE y A.
  49+ 88DD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 88DD
  51+ 88DD              Inicializa_Punteros_de_nivel
  52+ 88DD
  53+ 88DD 21 80 88     	ld hl,Indice_de_niveles
  54+ 88E0 22 07 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 88E3 CD F9 8C     	call Extrae_address
  56+ 88E6 7E           	ld a,(hl)
  57+ 88E7 32 DA 89     	ld (Numero_de_entidades),a
  58+ 88EA 23           	inc hl
  59+ 88EB 22 09 8A     	ld (Datos_de_nivel),hl
  60+ 88EE C9           	ret
  61+ 88EF
  62+ 88EF              ;---------------------------------------------------------------------------------------------------------------
  63+ 88EF              ;
  64+ 88EF              ;   13/5/23
  65+ 88EF              ;
  66+ 88EF              ;	Destruye A,BC,HL,DE
  67+ 88EF
  68+ 88EF              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88EF              ;	_del juego.
  70+ 88EF
  71+ 88EF              Prepara_cajas
  72+ 88EF
  73+ 88EF              ; Preparamos los punteros de las cajas.
  74+ 88EF
  75+ 88EF 21 64 85     	ld hl,Indice_de_cajas
  76+ 88F2 CD F9 8C     	call Extrae_address
  77+ 88F5 CD 32 89     	call Avanza_caja
  78+ 88F8
  79+ 88F8 CD 76 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 88FB
  81+ 88FB 2A 09 8A     	ld hl,(Datos_de_nivel)
  82+ 88FE
  83+ 88FE              ; HL está en los datos del nivel correspondiente.
  84+ 88FE              ; B actuará como contador de cajas.
  85+ 88FE
  86+ 88FE C5           1 push bc
  87+ 88FF
  88+ 88FF 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 8900 CD 23 89     	call PreparaBC
  90+ 8903
  91+ 8903 21 26 88     	ld hl,Indice_de_entidades
  92+ 8906 CD 2B 89     	call SBC_HL_con_BC_y_Extrae
  93+ 8909 22 E0 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 890C
  95+ 890C CD 3C 89     	call Datos_de_entidad_a_caja
  96+ 890F
  97+ 890F 2A D8 89     	ld hl,(Indice_restore_caja)
  98+ 8912 CD F9 8C     	call Extrae_address
  99+ 8915 CD 32 89     	call Avanza_caja
 100+ 8918
 101+ 8918 2A 09 8A     	ld hl,(Datos_de_nivel)
 102+ 891B 23           	inc hl
 103+ 891C 22 09 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 891F
 105+ 891F C1           	pop bc
 106+ 8920 10 DC        	djnz 1B
 107+ 8922 C9           	ret
 108+ 8923
 109+ 8923 CB 27        PreparaBC sla a
 110+ 8925 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 8927 4F           	ld c,a
 112+ 8928 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 892A C9           	ret
 114+ 892B
 115+ 892B A7           SBC_HL_con_BC_y_Extrae and a
 116+ 892C ED 4A        	adc hl,bc
 117+ 892E CD F9 8C     	call Extrae_address
 118+ 8931 C9           	ret
 119+ 8932
 120+ 8932 22 D4 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 8935 13           	inc de
 122+ 8936 13           	inc de
 123+ 8937 EB           	ex de,hl
 124+ 8938 22 D8 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 893B C9           	ret
 126+ 893C
 127+ 893C              Datos_de_entidad_a_caja
 128+ 893C
 129+ 893C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 893C
 131+ 893C
 132+ 893C ED 5B D4 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8940
 134+ 8940 01 02 00     	ld bc,2
 135+ 8943 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 8945
 137+ 8945 01 07 00     	ld bc,7
 138+ 8948 CD 70 89     	call Situa_DE
 139+ 894B
 140+ 894B 01 05 00     	ld bc,5
 141+ 894E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8950
 143+ 8950 01 04 00     	ld bc,4
 144+ 8953 CD 70 89     	call Situa_DE
 145+ 8956
 146+ 8956 01 07 00     	ld bc,7
 147+ 8959 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 895B
 149+ 895B 01 18 00     	ld bc,24
 150+ 895E CD 70 89     	call Situa_DE
 151+ 8961
 152+ 8961 01 02 00     	ld bc,2
 153+ 8964 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 8966
 155+ 8966 01 0A 00     	ld bc,10
 156+ 8969 CD 70 89     	call Situa_DE
 157+ 896C
 158+ 896C 3E 03        	ld a,3
 159+ 896E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 160+ 896F
 161+ 896F C9           	ret
 162+ 8970
 163+ 8970 EB           Situa_DE ex de,hl
 164+ 8971 A7           	and a
 165+ 8972 ED 4A        	adc hl,bc
 166+ 8974 EB           	ex de,hl
 167+ 8975 C9           	ret
 168+ 8976
 169+ 8976              ;---------------------------------------------------------------------------------------------------------------
 170+ 8976              ;
 171+ 8976              ;	21/5/23
 172+ 8976              ;
 173+ 8976              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 174+ 8976              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 175+ 8976              ;
 176+ 8976              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 177+ 8976              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 178+ 8976              ;	_ total de entidades que contiene (Numero_de_entidades).
 179+ 8976              ;
 180+ 8976              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 181+ 8976              ;	MODIFICA: A y B.
 182+ 8976              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 183+ 8976
 184+ 8976              Admin_num_entidades
 185+ 8976
 186+ 8976              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 187+ 8976
 188+ 8976 3A DA 89     	ld a,(Numero_de_entidades)
 189+ 8979 A7           	and a
 190+ 897A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 191+ 897A              ;	jr z,$
 192+ 897A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 897A
 194+ 897A 20 03        	jr nz,3F
 195+ 897C
 196+ 897C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 197+ 897C
 198+ 897C CD DD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 199+ 897F
 200+ 897F
 201+ 897F 3A DA 89     3 ld a,(Numero_de_entidades)
 202+ 8982 FE 0A        	cp 10
 203+ 8984 38 08        	jr c,1F
 204+ 8986
 205+ 8986              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 8986              ; Actualizamos variables.
 207+ 8986
 208+ 8986 3E 0A        	ld a,10
 209+ 8988 32 DB 89     	ld (Numero_parcial_de_entidades),a
 210+ 898B 47           	ld b,a
 211+ 898C 18 04        	jr 2F
 212+ 898E
 213+ 898E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 898E              ; (Numero_de_entidades)="0".
 215+ 898E
 216+ 898E 32 DB 89     1 ld (Numero_parcial_de_entidades),a
 217+ 8991 47           	ld b,a
 218+ 8992 C9           2 ret
# file closed: Niveles.asm
  25  8993
  26  8993              ; ******************************************************************************************************************************************************************************************
  27  8993              ; Constantes.
  28  8993              ; ******************************************************************************************************************************************************************************************
  29  8993              ;
  30  8993              ; 25/05/23
  31  8993              ;
  32  8993              ; Constantes generales.
  33  8993              ;
  34  8993
  35  8993              Sprite_vacio equ $f000
  36  8993              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  8993              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  8993              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  8993              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  8993
  41  8993              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  8993              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  8993              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  8993              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  8993              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  8993              ;                               				        ; De momento situamos este almacén en $7060.
  47  8993
  48  8993              ; ******************************************************************************************************************************************************************************************
  49  8993              ; Variables.
  50  8993              ; ******************************************************************************************************************************************************************************************
  51  8993              ;
  52  8993              ; 30/05/23
  53  8993              ;
  54  8993              ; Variables de DRAW. (Motor principal).
  55  8993              ;
  56  8993              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  8993
  58  8993 00           Filas db 0												; Filas. [DRAW]
  59  8994 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  8995 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  8997 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8999 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  899A 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  899B
  65  899B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  899B
  67  899B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  899C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  899C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  899C 00           Attr db 0												; Atributos de la entidad:
  71  899D
  72  899D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  899D              ;
  74  899D              ;	COLORES: 0 ..... NEGRO
  75  899D              ;    		 1 ..... AZUL
  76  899D              ; 			 2 ..... ROJO
  77  899D              ;			 3 ..... MAGENTA
  78  899D              ; 			 4 ..... VERDE
  79  899D              ; 			 5 ..... CIAN
  80  899D              ;			 6 ..... AMARILLO
  81  899D              ; 			 7 ..... BLANCO
  82  899D
  83  899D 00 00        Indice_Sprite_der defw 0
  84  899F 00 00        Indice_Sprite_izq defw 0
  85  89A1 00 00        Puntero_DESPLZ_der defw 0
  86  89A3 00 00        Puntero_DESPLZ_izq defw 0
  87  89A5
  88  89A5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89A7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89A8
  91  89A8              ; Variables de objeto. (Características).
  92  89A8
  93  89A8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89A9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89AA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89AB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89AC
  98  89AC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89AD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89AD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89AD
 102  89AD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89AF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89B1 00 00        	defw 0
 105  89B3 00 00 00 00  	db 0,0,0,0
 106  89B7
 107  89B7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89B9 00 00        	defw 0
 109  89BB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89BD 00 00 00 00  	db 0,0,0,0
 111  89C1
 112  89C1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89C1
 114  89C1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89C2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89C2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89C2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89C2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89C2              ;
 120  89C2              ; 														DESCRIPCIÖN:
 121  89C2              ;
 122  89C2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89C2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89C2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89C2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89C2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89C2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89C2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89C2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89C2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89C2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89C2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89C2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89C2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89C2              ;
 136  89C2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89C2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89C2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89C2
 140  89C2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89C3
 142  89C3              ; Movimiento.
 143  89C3
 144  89C3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89C4 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89C6 00 00        Puntero_mov defw 0
 147  89C8 00           Contador_db_mov db 0
 148  89C9 00           Incrementa_puntero db 0
 149  89CA 00           Repetimos_db db 0
 150  89CB
 151  89CB              ; Variables de funcionamiento. [DRAW].
 152  89CB
 153  89CB 00           Columnas db 0
 154  89CC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89CE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89CE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89CF
 158  89CF              ; variables de control general.
 159  89CF
 160  89CF 00           Ctrl_2 db 0
 161  89D0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89D0              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89D0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89D0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89D0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89D0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89D0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89D0              ;
 169  89D0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89D0
 171  89D0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89D1
 173  89D1              ; 62 Bytes por entidad.
 174  89D1              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89D1              ;					         		---------;      ;---------
 176  89D1
 177  89D1
 178  89D1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89D1
 180  89D1 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89D2
 182  89D2              ;														DESCRIPCIÓN:
 183  89D2              ;
 184  89D2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89D2              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89D2              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89D2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89D2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89D2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89D2              ;														BIT 3, Recarga de nueva oleada.
 191  89D2              ;														BIT 4, Recarga de nueva oleada.
 192  89D2
 193  89D2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89D4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89D4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89D4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89D4
 198  89D4
 199  89D4
 200  89D4              ; Gestión de ENTIDADES y CAJAS.
 201  89D4
 202  89D4              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89D4 00 00        Puntero_store_caja defw 0
 204  89D6 00 00        Puntero_restore_caja defw 0
 205  89D8 00 00        Indice_restore_caja defw 0
 206  89DA 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89DB 00           Numero_parcial_de_entidades db 0
 208  89DC 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89DD 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89DE              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89DE              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89DE              ;														; _ (Numero_de_malotes)="0".
 213  89DE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89E0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89E2              ;														; _ puntero (Indice_entidades).
 216  89E2
 217  89E2
 218  89E2              ;---------------------------------------------------------------------------------------------------------------
 219  89E2              ;
 220  89E2              ; Sirven para PINTAR.
 221  89E2
 222  89E2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89E4              ;														; _variable para almacenar lo posición del puntero_
 224  89E4              ; 														; _de pila, SP.
 225  89E4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89E6              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89E6 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89E8              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89E8              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89E8 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89EA              ;														; _el snapshot de los registros del siguiente disparo.
 232  89EA              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89EA
 234  89EA              ;---------------------------------------------------------------------------------------------------------------
 235  89EA
 236  89EA              ; Gestión de Disparos.
 237  89EA
 238  89EA 00           Numero_de_disparotes db 0
 239  89EB 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89ED 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  89EF 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  89F0              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  89F0              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  89F0 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  89F2              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  89F2              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  89F2              ;														; _produzca colisión.
 248  89F2 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  89F4              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  89F4 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89F7              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  89F7 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  89FA              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  89FA              ;---------------------------------------------------------------------------------------------------------------
 255  89FA
 256  89FA              ; Relojes y temporizaciones.
 257  89FA
 258  89FA 00           Contador_de_frames db 0
 259  89FB 00           Secundero db 0
 260  89FC 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 261  89FD              ;														; Repite la oleada de entidades.
 262  89FD 01           Habilita_disparo_Amadeus db 1
 263  89FE 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 264  89FF 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 265  8A00
 266  8A00 01           Habilita_disparo_entidad db 1
 267  8A01 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 268  8A02 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 269  8A03
 270  8A03              ;---------------------------------------------------------------------------------------------------------------
 271  8A03
 272  8A03              ; Gestión de FRAMES.
 273  8A03
 274  8A03 00           Switch db 0
 275  8A04
 276  8A04              ; Variables de Raster y localización en pantalla.
 277  8A04
 278  8A04 00 FF        Temp_Raster defw $ff00
 279  8A06
 280  8A06              ;---------------------------------------------------------------------------------------------------------------
 281  8A06
 282  8A06              ; Gestión de NIVELES.
 283  8A06
 284  8A06 00           Nivel db 0												 ; Nivel actual del juego.
 285  8A07 00 00        Puntero_indice_NIVELES defw 0
 286  8A09 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 287  8A0B              ; 														 ; _ que definen el NIVEL.
 288  8A0B
 289  8A0B
 290  8A0B              ; Y todo comienza aquí .....
 291  8A0B              ;
 292  8A0B              ; Rutina principal *************************************************************************************************************************************************************************
 293  8A0B              ;
 294  8A0B              ;	14/11/22
 295  8A0B
 296  8A0B              START
 297  8A0B
 298  8A0B 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 299  8A0E 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 300  8A10 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 301  8A12 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 302  8A14 F3           	DI
 303  8A15
 304  8A15 3E 07        	ld a,%00000111
 305  8A17 CD F5 97     	call Cls
 306  8A1A
 307  8A1A              ;	call Pinta_marco
 308  8A1A
 309  8A1A CD DD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 310  8A1D CD D2 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 311  8A20
 312  8A20 CD EF 88     4 call Prepara_cajas
 313  8A23
 314  8A23 CD A5 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 315  8A26              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 316  8A26 CD 82 8D     	call Restore_entidad
 317  8A29
 318  8A29 21 DB 89     	ld hl,Numero_parcial_de_entidades
 319  8A2C 46           	ld b,(hl)
 320  8A2D 04           	inc b
 321  8A2E 05           	dec b
 322  8A2F 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 323  8A31
 324  8A31              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 325  8A31              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 326  8A31              ;	Pintamos el resto de entidades:
 327  8A31
 328  8A31              ;	INICIA ENTIDADES !!!!!
 329  8A31
 330  8A31 C5           1 push bc  												; Guardo el contador de entidades.
 331  8A32 CD FF 8C     	call Inicia_Puntero_objeto
 332  8A35 CD 09 98     	call Recompone_posicion_inicio
 333  8A38 CD 45 92     	call Draw
 334  8A3B CD A0 7F     	call Guarda_foto_registros
 335  8A3E CD 47 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 336  8A41 C1           	pop bc
 337  8A42 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 338  8A44
 339  8A44              ;	call Pinta_marco
 340  8A44
 341  8A44              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 342  8A44
 343  8A44 3A D1 89     	ld a,(Ctrl_1)
 344  8A47 CB 5F        	bit 3,a
 345  8A49 20 18        	jr nz,5F											; Loop
 346  8A4B
 347  8A4B              ; 	INICIA AMADEUS !!!!!
 348  8A4B
 349  8A4B CD A9 8D     3 call Restore_Amadeus
 350  8A4E CD FF 8C     	call Inicia_Puntero_objeto
 351  8A51 CD 45 92     	call Draw
 352  8A54 CD A0 7F     	call Guarda_foto_registros
 353  8A57 11 7C 85     	ld de,Amadeus_db
 354  8A5A CD BB 8D     	call Store_Amadeus
 355  8A5D
 356  8A5D              ; 	INICIA DISPAROS !!!!!
 357  8A5D
 358  8A5D CD BB 8C     	call Inicia_Puntero_Disparo_Entidades
 359  8A60 CD C2 8C     	call Inicia_Puntero_Disparo_Amadeus
 360  8A63
 361  8A63              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 362  8A63
 363  8A63 CD A5 8C     5 call Inicia_punteros_de_cajas
 364  8A66 CD 82 8D     	call Restore_entidad
 365  8A69
 366  8A69 3A D1 89     	ld a,(Ctrl_1)
 367  8A6C CB 5F        	bit 3,a
 368  8A6E 28 0A        	jr z,6F
 369  8A70
 370  8A70              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 371  8A70
 372  8A70 21 D1 89     	ld hl,Ctrl_1
 373  8A73 CB 9E        	res 3,(hl)
 374  8A75 CD C9 8C     	call Calcula_numero_de_malotes
 375  8A78 18 07        	jr 7F
 376  8A7A
 377  8A7A              ; ----------
 378  8A7A
 379  8A7A 3A DB 89     6 ld a,(Numero_parcial_de_entidades)
 380  8A7D 3C           	inc a
 381  8A7E 32 DD 89     	ld (Numero_de_malotes),a
 382  8A81
 383  8A81 AF           7 xor a
 384  8A82 FB           2 ei
 385  8A83 28 FD        	jr z,2B
 386  8A85
 387  8A85 3A FB 89     	ld a,(Secundero)
 388  8A88 47           	ld b,a
 389  8A89 3A FC 89     	ld a,(Activa_recarga_cajas)
 390  8A8C B8           	cp b
 391  8A8D 28 08        	jr z,8F
 392  8A8F
 393  8A8F 21 D1 89     	ld hl,Ctrl_1
 394  8A92 CB E6        	set 4,(hl)
 395  8A94 AF           	xor a
 396  8A95 18 EB        	jr 2B
 397  8A97
 398  8A97 21 D1 89     8 ld hl,Ctrl_1
 399  8A9A CB A6        	res 4,(hl)
 400  8A9C F3           	di
 401  8A9D
 402  8A9D C3 20 8A     	jp 4B
 403  8AA0
 404  8AA0              ; -----------------------------------------------------------------------------------
 405  8AA0
 406  8AA0              Frame
 407  8AA0
 408  8AA0              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 409  8AA0              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 410  8AA0
 411  8AA0              ; PINTAMOS.
 412  8AA0
 413  8AA0 3E 02            ld a,2
 414  8AA2 D3 FE            out ($fe),a
 415  8AA4 CD 49 95     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 416  8AA7 CD 82 95     	call Extrae_foto_disparos
 417  8AAA 3E 01            ld a,1
 418  8AAC D3 FE            out ($fe),a
 419  8AAE
 420  8AAE
 421  8AAE              ;    jr $
 422  8AAE
 423  8AAE              ; ----------------------------------------------------------------------
 424  8AAE
 425  8AAE              ; RELOJES.
 426  8AAE
 427  8AAE 21 FA 89     	ld hl,Contador_de_frames
 428  8AB1 34           	inc (hl)											; 0 - 255
 429  8AB2
 430  8AB2 3E 3C        	ld a,60
 431  8AB4 BE           	cp (hl)
 432  8AB5 20 22        	jr nz,13F
 433  8AB7
 434  8AB7 36 00        	ld (hl),0
 435  8AB9
 436  8AB9 21 FB 89     	ld hl,Secundero
 437  8ABC 34           	inc (hl)
 438  8ABD
 439  8ABD 7E           	ld a,(hl)
 440  8ABE E6 01        	and %00000001
 441  8AC0 20 10        	jr nz,20F
 442  8AC2
 443  8AC2 3A DB 89     	ld a,(Numero_parcial_de_entidades)
 444  8AC5 47           	ld b,a
 445  8AC6 3A DC 89     	ld a,(Entidades_en_curso)
 446  8AC9 B8           	cp b
 447  8ACA 28 06        	jr z,20F
 448  8ACC 30 04        	jr nc,20F
 449  8ACE
 450  8ACE 3C           	inc a
 451  8ACF 32 DC 89     	ld (Entidades_en_curso),a
 452  8AD2
 453  8AD2 3E 3C        20 ld a,60
 454  8AD4 BE           	cp (hl)
 455  8AD5 20 02        	jr nz,13F
 456  8AD7
 457  8AD7 36 00        	ld (hl),0
 458  8AD9
 459  8AD9 21 FD 89     13 ld hl,Habilita_disparo_Amadeus
 460  8ADC 11 FF 89     	ld de,Temporiza_disparo_Amadeus
 461  8ADF CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 462  8AE2
 463  8AE2 21 00 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 464  8AE5 11 02 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 465  8AE8 CD D5 7F     	call Habilita_disparos
 466  8AEB
 467  8AEB              ; COLISIONES.
 468  8AEB
 469  8AEB CD E4 91     	call Selector_de_impactos
 470  8AEE
 471  8AEE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 472  8AEE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 473  8AEE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 474  8AEE
 475  8AEE AF           	xor a
 476  8AEF 32 EF 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 477  8AF2
 478  8AF2 CD A5 8C     	call Inicia_punteros_de_cajas
 479  8AF5 CD 82 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 480  8AF8              ; 														; _ en DRAW.
 481  8AF8 3A 93 89     	ld a,(Filas)
 482  8AFB A7           	and a
 483  8AFC 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 484  8AFE CD 94 8D     	call Incrementa_punteros_de_cajas
 485  8B01 18 F2        	jr 12B
 486  8B03
 487  8B03              ; ---------------------------------------------------------------------------------------
 488  8B03
 489  8B03 CD 62 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 490  8B06 21 00 70     	ld hl,Album_de_fotos
 491  8B09 22 E6 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 492  8B0C              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 493  8B0C 3A DB 89     	ld a,(Numero_parcial_de_entidades)
 494  8B0F 47               ld b,a
 495  8B10 A7           	and a
 496  8B11 20 16        	jr nz,2F
 497  8B13
 498  8B13 21 D1 89     	ld hl,Ctrl_1
 499  8B16 CB 66        	bit 4,(hl)
 500  8B18 C2 A5 8B     	jp nz,4F
 501  8B1B
 502  8B1B 21 D1 89     	ld hl,Ctrl_1
 503  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 504  8B20 3A FB 89     	ld a,(Secundero)
 505  8B23 3C           	inc a
 506  8B24 32 FC 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 507  8B27
 508  8B27 18 7C        	jr 4F
 509  8B29
 510  8B29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 511  8B29
 512  8B29 3A DC 89     2 ld a,(Entidades_en_curso)
 513  8B2C A7           	and a
 514  8B2D 28 76        	jr z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 515  8B2F 47           	ld b,a												; Entidades en curso en B.
 516  8B30
 517  8B30              ; Código que ejecutamos con cada entidad:
 518  8B30              ; Impacto ???
 519  8B30
 520  8B30 C5           15 push bc 												; Nº de entidades en curso.
 521  8B31
 522  8B31 3A AC 89     	ld a,(Impacto)
 523  8B34 A7           	and a
 524  8B35 28 25        	jr z,8F
 525  8B37
 526  8B37              ; Hay Impacto en esta entidad.
 527  8B37
 528  8B37 CD 5C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 529  8B3A
 530  8B3A              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 531  8B3A
 532  8B3A 3A CF 89     	ld a,(Ctrl_2)
 533  8B3D CB 4F        	bit 1,a
 534  8B3F 20 45        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 535  8B41
 536  8B41 3A 9B 89     	ld a,(CTRL_DESPLZ)
 537  8B44 A7           	and a
 538  8B45 20 08        	jr nz,21F
 539  8B47
 540  8B47 21 7C 84     	ld hl,Indice_Explosion_2x2-2
 541  8B4A 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 542  8B4D 18 06        	jr 22F
 543  8B4F
 544  8B4F 21 E6 83     21 ld hl,Indice_Explosion_2x3-2
 545  8B52 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 546  8B55
 547  8B55 21 CF 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 548  8B58 CB CE        	set 1,(hl)
 549  8B5A 18 2A        	jr 7F
 550  8B5C
 551  8B5C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 552  8B5C              ; _con las coordenadas de la entidad almacenada en DRAW.
 553  8B5C
 554  8B5C 3A D1 89     8 ld a,(Ctrl_1)
 555  8B5F CB 57        	bit 2,a
 556  8B61 28 23        	jr z,7F
 557  8B63
 558  8B63 2A F2 89     	ld hl,(Coordenadas_disparo_certero)
 559  8B66 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 560  8B67              ;														; E contiene la coordenada_X del disparo.
 561  8B67 2A 99 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 562  8B6A              ;														; H FILA, (Coordenada_y de la entidad).
 563  8B6A A7           	and a
 564  8B6B ED 52        	sbc hl,de
 565  8B6D
 566  8B6D CD 1B 92     	call Determina_resultado_comparativa
 567  8B70
 568  8B70 78           	ld a,b
 569  8B71 A7           	and a
 570  8B72 28 12        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 571  8B74
 572  8B74              ; ----- ----- -----
 573  8B74
 574  8B74 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 575  8B76 32 AC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 576  8B79 21 D1 89     	ld hl,Ctrl_1
 577  8B7C CB 96        	res 2,(hl)
 578  8B7E
 579  8B7E              ; Limpiamos las coordenadas del disparo asesino. Ya tenemos víctima.
 580  8B7E
 581  8B7E 21 F2 89     	ld hl,Coordenadas_disparo_certero
 582  8B81 36 00        	ld (hl),0
 583  8B83 23           	inc hl
 584  8B84 36 00        	ld (hl),0
 585  8B86
 586  8B86 CD D8 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 587  8B89
 588  8B89 3A C1 89     	ld a,(Ctrl_0)
 589  8B8C CB 67        	bit 4,a
 590  8B8E 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 591  8B90
 592  8B90              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 593  8B90              ; [[[
 594  8B90 CD 1D 8E     	call Detecta_disparo_entidad
 595  8B93              ; ]]]
 596  8B93 CD 6C 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 597  8B96
 598  8B96 21 C1 89     	ld hl,Ctrl_0
 599  8B99 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 600  8B9B AF           	xor a
 601  8B9C 32 C2 89     	ld (Obj_dibujado),a
 602  8B9F
 603  8B9F CD 47 8D     6 call Store_Restore_cajas
 604  8BA2
 605  8BA2 C1           	pop bc
 606  8BA3 10 8B        	djnz 15B
 607  8BA5
 608  8BA5              ; Tras la gestión de las entidades, ... AMADEUS.
 609  8BA5
 610  8BA5 CD A9 8D     4 call Restore_Amadeus
 611  8BA8
 612  8BA8 3A AC 89     	ld a,(Impacto)
 613  8BAB A7           	and a
 614  8BAC 20 FE        	jr nz,$
 615  8BAE
 616  8BAE              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 617  8BAE
 618  8BAE CD 3D 8C     	call Mov_Amadeus
 619  8BB1
 620  8BB1 3A C1 89     	ld a,(Ctrl_0)
 621  8BB4 CB 67        	bit 4,a
 622  8BB6 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 623  8BB8
 624  8BB8 CD 6C 8C     	call Guarda_foto_entidad_a_pintar
 625  8BBB
 626  8BBB 21 C1 89     3 ld hl,Ctrl_0
 627  8BBE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 628  8BC0 AF           	xor a
 629  8BC1 32 C2 89     	ld (Obj_dibujado),a
 630  8BC4
 631  8BC4 11 7C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 632  8BC7 CD BB 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 633  8BCA
 634  8BCA CD 80 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 635  8BCD
 636  8BCD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 637  8BCD
 638  8BCD CD E1 8C     	call Calcula_numero_de_disparotes
 639  8BD0 CD C9 8C     9 call Calcula_numero_de_malotes
 640  8BD3
 641  8BD3 3E 04        	ld a,4
 642  8BD5 D3 FE        	out ($fe),a
 643  8BD7
 644  8BD7 C9           	ret
 645  8BD8
 646  8BD8              ; --------------------------------------------------------------------------------------------------------------
 647  8BD8              ;
 648  8BD8              ;	27/05/23
 649  8BD8
 650  8BD8              Mov_obj
 651  8BD8
 652  8BD8              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 653  8BD8
 654  8BD8 3A CF 89     	ld a,(Ctrl_2)
 655  8BDB CB 4F        	bit 1,a
 656  8BDD 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 657  8BDF
 658  8BDF              ; Explosión:
 659  8BDF
 660  8BDF 3A D0 89     	ld a,(Frames_explosion)
 661  8BE2 A7           	and a
 662  8BE3 20 11        	jr nz,4F
 663  8BE5
 664  8BE5              ; Una alimaña menos!!!!!!!!!1
 665  8BE5
 666  8BE5 CD C4 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 667  8BE8 21 DB 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 668  8BEB 35           	dec (hl)
 669  8BEC 21 DC 89     	ld hl,Entidades_en_curso
 670  8BEF 35           	dec (hl)
 671  8BF0 21 DA 89     	ld hl,Numero_de_entidades
 672  8BF3 35           	dec (hl)
 673  8BF4 18 46        	jr 3F
 674  8BF6
 675  8BF6              ; -----
 676  8BF6
 677  8BF6 2A A1 89     4 ld hl,(Puntero_DESPLZ_der)
 678  8BF9 23           	inc hl
 679  8BFA 23           	inc hl
 680  8BFB 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 681  8BFE CD F9 8C     	call Extrae_address
 682  8C01 22 97 89     	ld (Puntero_objeto),hl
 683  8C04
 684  8C04 21 D0 89     	ld hl,Frames_explosion
 685  8C07 35           	dec (hl)
 686  8C08
 687  8C08 CD 5C 8C     	call Guarda_foto_entidad_a_borrar
 688  8C0B 18 2F        	jr 3F
 689  8C0D
 690  8C0D AF           2 xor a
 691  8C0E 32 C2 89     	ld (Obj_dibujado),a
 692  8C11 32 C1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 693  8C14              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 694  8C14              ; 														; _de la entidad.
 695  8C14 CD 76 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 696  8C17              ;														; Obj_dibujado="0".
 697  8C17              ; Movemos Entidades malignas.
 698  8C17
 699  8C17 21 C4 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 700  8C1A 34           	inc (hl)
 701  8C1B 35           	dec (hl)                                            ; Salimos de la rutina.
 702  8C1C C8           	ret z
 703  8C1D
 704  8C1D CD 23 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 705  8C20
 706  8C20 3A C1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 707  8C23 CB 67        	bit 4,a
 708  8C25 C8           	ret z
 709  8C26
 710  8C26              ; Ha habido desplazamiento de la entidad maligna.
 711  8C26              ; Ha llegado a zona de AMADEUS ???
 712  8C26
 713  8C26 3A 9A 89     	ld a,(Coordenada_y)
 714  8C29 FE 14        	cp $14
 715  8C2B D4 B1 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 716  8C2E              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 717  8C2E              ; ---------
 718  8C2E
 719  8C2E 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 720  8C30 32 C2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 721  8C33 CD 76 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 722  8C36 CD 8D 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 723  8C39 CD 5C 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 724  8C3C C9           3 ret													; _de la misma.
 725  8C3D
 726  8C3D              ; --------------------------------------------------------------------------------------------------------------
 727  8C3D              ;
 728  8C3D              ;	29/1/23
 729  8C3D
 730  8C3D              Mov_Amadeus
 731  8C3D
 732  8C3D AF           	xor a
 733  8C3E 32 C2 89     	ld (Obj_dibujado),a
 734  8C41 CD 76 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 735  8C44              ;														; Obj_dibujado="0".
 736  8C44              ; Movemos Amadeus.
 737  8C44
 738  8C44 CD E6 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 739  8C47 3A C1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 740  8C4A CB 67        	bit 4,a
 741  8C4C C8           	ret z
 742  8C4D
 743  8C4D              ; ---------
 744  8C4D
 745  8C4D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 746  8C4F 32 C2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 747  8C52 CD 76 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 748  8C55 CD 8D 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 749  8C58 CD 5C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 750  8C5B C9           	ret													; _de la nave.
 751  8C5C
 752  8C5C              ; --------------------------------------------------------------------------------------------------------------
 753  8C5C              ;
 754  8C5C              ;	31/01/23
 755  8C5C              ;
 756  8C5C              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 757  8C5C
 758  8C5C              Guarda_foto_entidad_a_borrar
 759  8C5C
 760  8C5C CD 1F 95     	call Prepara_draw
 761  8C5F CD 59 94     	call calcula_CColumnass
 762  8C62 CD 90 94     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 763  8C65 CD E5 94     	call Define_rutina_de_impresion
 764  8C68 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 765  8C6B C9           	ret
 766  8C6C
 767  8C6C              ; --------------------------------------------------------------------------------------------------------------
 768  8C6C              ;
 769  8C6C              ;	31/01/23
 770  8C6C              ;
 771  8C6C              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 772  8C6C              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 773  8C6C
 774  8C6C              Guarda_foto_entidad_a_pintar
 775  8C6C
 776  8C6C CD 99 8C     	call Repone_pintar
 777  8C6F CD 45 92     	call Draw
 778  8C72 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 779  8C75 C9           	ret
 780  8C76
 781  8C76              ; --------------------------------------------------------------------------------------------------------------
 782  8C76              ;
 783  8C76              ;
 784  8C76
 785  8C76 21 93 89     Prepara_var_pintado_borrado	ld hl,Filas
 786  8C79 3A C2 89     	ld a,(Obj_dibujado)
 787  8C7C A7           	and a
 788  8C7D 28 05        	jr z,1F
 789  8C7F 11 B7 89     	ld de,Variables_de_pintado
 790  8C82 18 03        	jr 2F
 791  8C84 11 AD 89     1 ld de,Variables_de_borrado
 792  8C87 01 08 00     2 ld bc,8
 793  8C8A ED B0        	ldir
 794  8C8C C9           	ret
 795  8C8D
 796  8C8D              ; --------------------------------------------------------------------------------------------------------------
 797  8C8D
 798  8C8D 21 AD 89     Repone_borrar ld hl,Variables_de_borrado
 799  8C90 11 93 89     	ld de,Filas
 800  8C93 01 08 00     	ld bc,8
 801  8C96 ED B0        	ldir
 802  8C98 C9           	ret
 803  8C99
 804  8C99 21 B7 89     Repone_pintar ld hl,Variables_de_pintado
 805  8C9C 11 93 89     	ld de,Filas
 806  8C9F 01 08 00     	ld bc,8
 807  8CA2 ED B0        	ldir
 808  8CA4 C9           	ret
 809  8CA5
 810  8CA5              ; *************************************************************************************************************************************************************
 811  8CA5              ;
 812  8CA5              ; 8/1/23
 813  8CA5              ;
 814  8CA5              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 815  8CA5              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 816  8CA5              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 817  8CA5
 818  8CA5              ; Destruye HL y DE !!!!!
 819  8CA5
 820  8CA5              Inicia_punteros_de_cajas
 821  8CA5
 822  8CA5 21 64 85     	ld hl,Indice_de_cajas
 823  8CA8 CD F9 8C         call Extrae_address
 824  8CAB 22 D4 89         ld (Puntero_store_caja),hl
 825  8CAE 21 66 85     	ld hl,Indice_de_cajas+2
 826  8CB1 22 D8 89     	ld (Indice_restore_caja),hl
 827  8CB4 CD F9 8C     	call Extrae_address
 828  8CB7 22 D6 89     	ld (Puntero_restore_caja),hl
 829  8CBA C9               ret
 830  8CBB
 831  8CBB              ; *************************************************************************************************************************************************************
 832  8CBB              ;
 833  8CBB              ; 8/1/23
 834  8CBB              ;
 835  8CBB              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 836  8CBB
 837  8CBB 21 FC 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 838  8CBE 22 EB 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 839  8CC1 C9           	ret
 840  8CC2 21 E4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 841  8CC5 22 ED 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 842  8CC8 C9           	ret
 843  8CC9
 844  8CC9              ; -------------------------------------------------------------------------------------------------------------
 845  8CC9              ;
 846  8CC9              ; 28/2/23
 847  8CC9              ;
 848  8CC9
 849  8CC9              Calcula_numero_de_malotes
 850  8CC9
 851  8CC9 21 00 70     	ld hl,Album_de_fotos
 852  8CCC EB           	ex de,hl
 853  8CCD 2A E6 89     	ld hl,(Stack_snapshot)
 854  8CD0
 855  8CD0 06 00        	ld b,0
 856  8CD2 7D           	ld a,l
 857  8CD3 93           	sub e
 858  8CD4 28 07        	jr z,1F
 859  8CD6
 860  8CD6              ; Nº de malotes no es "0".
 861  8CD6
 862  8CD6 D6 06        2 sub 6
 863  8CD8 04           	inc b
 864  8CD9 A7           	and a
 865  8CDA 20 FA        	jr nz,2B
 866  8CDC 78           	ld a,b
 867  8CDD
 868  8CDD 32 DD 89     1 ld (Numero_de_malotes),a
 869  8CE0 C9           	ret
 870  8CE1
 871  8CE1              ; -------------------------------------------------------------------------------------------------------------
 872  8CE1              ;
 873  8CE1              ; 28/2/23
 874  8CE1              ;
 875  8CE1
 876  8CE1              Calcula_numero_de_disparotes
 877  8CE1
 878  8CE1 21 85 70     	ld hl,Album_de_fotos_disparos
 879  8CE4 EB           	ex de,hl
 880  8CE5 2A E8 89     	ld hl,(Stack_snapshot_disparos)
 881  8CE8
 882  8CE8 06 00        	ld b,0
 883  8CEA 7D           	ld a,l
 884  8CEB 93           	sub e
 885  8CEC 28 07        	jr z,1F
 886  8CEE
 887  8CEE              ; Nº de malotes no es "0".
 888  8CEE
 889  8CEE D6 06        2 sub 6
 890  8CF0 04           	inc b
 891  8CF1 A7           	and a
 892  8CF2 20 FA        	jr nz,2B
 893  8CF4 78           	ld a,b
 894  8CF5
 895  8CF5 32 EA 89     1 ld (Numero_de_disparotes),a
 896  8CF8 C9           	ret
 897  8CF9              ; *************************************************************************************************************************************************************
 898  8CF9              ;
 899  8CF9              ; 20/10/22
 900  8CF9              ;
 901  8CF9              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 902  8CF9              ;
 903  8CF9              ; Destruye el puntero y DE !!!!!
 904  8CF9
 905  8CF9 5E           Extrae_address ld e,(hl)
 906  8CFA 23           	inc hl
 907  8CFB 56           	ld d,(hl)
 908  8CFC 2B           	dec hl
 909  8CFD EB           	ex de,hl
 910  8CFE C9           	ret
 911  8CFF
 912  8CFF              ; *************************************************************************************************************************************************************
 913  8CFF              ;
 914  8CFF              ;	7/2/23
 915  8CFF              ;
 916  8CFF              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 917  8CFF              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 918  8CFF              ;
 919  8CFF              ;   Destruye HL y BC !!!!!,
 920  8CFF              ;
 921  8CFF              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 922  8CFF              ;					"0" ..... Izquierda.
 923  8CFF
 924  8CFF              Inicia_Puntero_objeto
 925  8CFF
 926  8CFF 3A A7 89     	ld a,(Cuad_objeto)
 927  8D02 E6 01        	and 1
 928  8D04 F5           	push af
 929  8D05 CC 23 8D     	call z,Inicia_puntero_objeto_izq
 930  8D08 F1           	pop af
 931  8D09 28 2B        	jr z,1F
 932  8D0B CD 10 8D     	call Inicia_puntero_objeto_der
 933  8D0E 18 26        	jr 1F
 934  8D10
 935  8D10              ; Arrancamos desde la parte izquierda de la pantalla.
 936  8D10              ; Iniciamos (Indice_Sprite_der).
 937  8D10
 938  8D10 2A 9D 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 939  8D13 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 940  8D16 CD F9 8C     	call Extrae_address
 941  8D19 22 97 89     	ld (Puntero_objeto),hl
 942  8D1C
 943  8D1C 2A 9F 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 944  8D1F 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 945  8D22 C9           	ret
 946  8D23
 947  8D23              ; Arrancamos desde la parte derecha de la pantalla.
 948  8D23              ; Iniciamos (Indice_Sprite_izq).
 949  8D23
 950  8D23 2A 9F 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 951  8D26 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 952  8D29 CD F9 8C     	call Extrae_address
 953  8D2C 22 97 89     	ld (Puntero_objeto),hl
 954  8D2F
 955  8D2F 2A 9D 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 956  8D32 22 A1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 957  8D35 C9           	ret
 958  8D36
 959  8D36              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 960  8D36
 961  8D36 21 38 83     1 ld hl,Amadeus
 962  8D39 ED 4B 97 89  	ld bc,(Puntero_objeto)
 963  8D3D B7 ED 42     	sub hl,bc
 964  8D40 C0           	ret nz
 965  8D41 21 C1 89     	ld hl,Ctrl_0
 966  8D44 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 967  8D46 C9           	ret 												; _de nuestra nave en los extremos.
 968  8D47
 969  8D47              ; *************************************************************************************************************************************************************
 970  8D47              ;
 971  8D47              ;	14/5/23
 972  8D47              ;
 973  8D47              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 974  8D47              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 975  8D47
 976  8D47              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 977  8D47              ;	_de la 2ª y 3ª entidad respectivamente.
 978  8D47
 979  8D47              Store_Restore_cajas
 980  8D47
 981  8D47 E5           	push hl
 982  8D48 D5           	push de
 983  8D49 C5            	push bc
 984  8D4A
 985  8D4A              ;	STORE !!!!!
 986  8D4A              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 987  8D4A
 988  8D4A 21 93 89     	ld hl,Filas
 989  8D4D ED 5B D4 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 990  8D51 01 3E 00     	ld bc,62
 991  8D54 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 992  8D56
 993  8D56              ; 	Entidad_sospechosa. 20/4/23
 994  8D56
 995  8D56 3A AC 89     	ld a,(Impacto)
 996  8D59 A7           	and a
 997  8D5A 28 0C        	jr z,1F
 998  8D5C
 999  8D5C 2A D4 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1000  8D5F 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1001  8D62 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1002  8D63 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1003  8D65 22 F0 89     	ld (Entidad_sospechosa_de_colision),hl
1004  8D68
1005  8D68              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1006  8D68
1007  8D68 2A D6 89     1 ld hl,(Puntero_restore_caja)
1008  8D6B 7E           	ld a,(hl)
1009  8D6C A7           	and a
1010  8D6D F5           	push af
1011  8D6E 28 08        	jr z,2F
1012  8D70
1013  8D70 11 93 89     	ld de,Filas
1014  8D73 01 3E 00     	ld bc,62
1015  8D76 ED B0        	ldir
1016  8D78
1017  8D78 CD 94 8D     2 call Incrementa_punteros_de_cajas
1018  8D7B F1           	pop af
1019  8D7C 28 EA        	jr z,1B
1020  8D7E
1021  8D7E C1           	pop bc
1022  8D7F D1           	pop de
1023  8D80 E1           	pop hl
1024  8D81
1025  8D81 C9           	ret
1026  8D82
1027  8D82              ; **************************************************************************************************
1028  8D82              ;
1029  8D82              ;	12/05/23
1030  8D82              ;
1031  8D82              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1032  8D82
1033  8D82 E5           Restore_entidad push hl
1034  8D83 D5           	push de
1035  8D84 C5            	push bc
1036  8D85
1037  8D85 2A D4 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1038  8D88 11 93 89     	ld de,Filas
1039  8D8B 01 3E 00     	ld bc,62
1040  8D8E ED B0        	ldir
1041  8D90
1042  8D90 C1           	pop bc
1043  8D91 D1           	pop de
1044  8D92 E1           	pop hl
1045  8D93 C9           	ret
1046  8D94
1047  8D94
1048  8D94              ; **************************************************************************************************
1049  8D94              ;
1050  8D94              ;	08/05/23
1051  8D94              ;
1052  8D94              ;	Incrementamos los dos punteros de entidades. (+1).
1053  8D94
1054  8D94 2A D6 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1055  8D97 22 D4 89     	ld (Puntero_store_caja),hl
1056  8D9A 2A D8 89     	ld hl,(Indice_restore_caja)
1057  8D9D 23           	inc hl
1058  8D9E 23           	inc hl
1059  8D9F 22 D8 89     	ld (Indice_restore_caja),hl
1060  8DA2 CD F9 8C         call Extrae_address
1061  8DA5 22 D6 89         ld (Puntero_restore_caja),hl
1062  8DA8 C9               ret
1063  8DA9
1064  8DA9              ; **************************************************************************************************
1065  8DA9              ;
1066  8DA9              ;	25/01/23
1067  8DA9              ;
1068  8DA9              ;	Restore_Amadeus
1069  8DA9              ;
1070  8DA9              ;	Cargamos en DRAW los parámetros de Amadeus.
1071  8DA9              ;
1072  8DA9
1073  8DA9 E5           Restore_Amadeus	push hl
1074  8DAA D5           	push de
1075  8DAB C5            	push bc
1076  8DAC 21 7C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1077  8DAF 11 93 89     	ld de,Filas
1078  8DB2 01 3E 00     	ld bc,62
1079  8DB5 ED B0        	ldir
1080  8DB7 C1           	pop bc
1081  8DB8 D1           	pop de
1082  8DB9 E1           	pop hl
1083  8DBA C9           	ret
1084  8DBB
1085  8DBB              ; *************************************************************************************************************************************************************
1086  8DBB              ;
1087  8DBB              ;	29/04/23
1088  8DBB              ;
1089  8DBB              ;	Store_Amadeus
1090  8DBB              ;
1091  8DBB              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1092  8DBB              ;
1093  8DBB              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1094  8DBB              ;
1095  8DBB              ;	DESTRUYE: HL y BC y DE.
1096  8DBB
1097  8DBB 21 93 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1098  8DBE 01 3E 00     	ld bc,62
1099  8DC1 ED B0        	ldir
1100  8DC3 C9           	ret
1101  8DC4
1102  8DC4              ; -----------------------------------------------------------
1103  8DC4              ;
1104  8DC4              ;	27/04/23
1105  8DC4              ;
1106  8DC4              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1107  8DC4              ;
1108  8DC4              ;	Destruye: HL,BC,DE,A
1109  8DC4
1110  8DC4 21 93 89     Borra_datos_entidad ld hl,Filas
1111  8DC7 01 3D 00     	ld bc,61
1112  8DCA AF           	xor a
1113  8DCB 77           	ld (hl),a
1114  8DCC 11 94 89     	ld de,Filas+1
1115  8DCF ED B0        	ldir
1116  8DD1 C9           	ret
1117  8DD2
1118  8DD2              ; -----------------------------------------------------------
1119  8DD2
1120  8DD2              ; Teclado.
1121  8DD2
1122  8DD2 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1123  8DD4 DB FE        	in a,($fe)
1124  8DD6 E6 01        	and $01
1125  8DD8 28 02        	jr z,1f
1126  8DDA 18 F6        	jr Pulsa_ENTER
1127  8DDC C9           1 ret
1128  8DDD
1129  8DDD              ; **************************************************************************************************
1130  8DDD              ;
1131  8DDD              ; Temporización.
1132  8DDD
1133  8DDD              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1134  8DDD              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1135  8DDD              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1136  8DDD              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1137  8DDD
1138  8DDD              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1139  8DDD              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1140  8DDD              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1141  8DDD
1142  8DDD              ; A partir de $4f61 no hace falta DELAY.
1143  8DDD
1144  8DDD              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1145  8DDD
1146  8DDD 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1147  8DE0 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1148  8DE1 78           	LD A,B
1149  8DE2 A7           	AND A
1150  8DE3 20 FB        	JR NZ,wait
1151  8DE5 C9           	RET
1152  8DE6
1153  8DE6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1154  8DE6              ;
1155  8DE6              ;	5/3/23
1156  8DE6              ;
1157  8DE6              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1158  8DE6
1159  8DE6              Movimiento_Amadeus
1160  8DE6
1161  8DE6              ; Disparo.
1162  8DE6
1163  8DE6 3A FD 89     	ld a,(Habilita_disparo_Amadeus)
1164  8DE9 A7           	and a
1165  8DEA 20 02        	jr nz,1F
1166  8DEC 18 15        	jr 2F
1167  8DEE
1168  8DEE 3E F7        1 ld a,$f7													; "5" para disparar.
1169  8DF0 DB FE        	in a,($fe)
1170  8DF2 E6 10        	and $10
1171  8DF4
1172  8DF4 F5           	push af
1173  8DF5 CC 2D 8E     	call z,Genera_disparo
1174  8DF8 F1           	pop af
1175  8DF9 20 08        	jr nz,2F
1176  8DFB
1177  8DFB 3A FD 89     	ld a,(Habilita_disparo_Amadeus)
1178  8DFE EE 01        	xor 1
1179  8E00 32 FD 89     	ld (Habilita_disparo_Amadeus),a
1180  8E03
1181  8E03 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1182  8E05 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1183  8E07 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1184  8E09 CC C3 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1185  8E0C 3E F7        	ld a,$f7
1186  8E0E DB FE        	in a,($fe)
1187  8E10 E6 01        	and $01
1188  8E12 C8           	ret z
1189  8E13
1190  8E13 3E F7        	ld a,$f7
1191  8E15 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1192  8E17 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1193  8E19 CC A5 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1194  8E1C C9           	ret
1195  8E1D
1196  8E1D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1197  8E1D              ;
1198  8E1D              ;	Rutina provisional para que los malotes cagen balas.
1199  8E1D
1200  8E1D              Detecta_disparo_entidad
1201  8E1D
1202  8E1D 3A 00 8A     	ld a,(Habilita_disparo_entidad)
1203  8E20 A7           	and a
1204  8E21 C8           	ret z
1205  8E22 3E 7F        	ld a,$7f
1206  8E24 DB FE        	in a,($fe)
1207  8E26 E6 01        	and 1
1208  8E28 C0           	ret nz
1209  8E29 CD 2D 8E     	call Genera_disparo
1210  8E2C C9           	ret
1211  8E2D
1212  8E2D              ; ---------------------------------------------------------------
1213  8E2D
1214  8E2D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E2D              ; ******************************************************************************************************************************************************************************************
   2+ 8E2D              ;
   3+ 8E2D              ;   17/04/23
   4+ 8E2D              ;
   5+ 8E2D              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E2D              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E2D              ;
   8+ 8E2D              ;
   9+ 8E2D              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E2D              ;
  11+ 8E2D              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E2D              ;               _ hacen las entidades hacia abajo.
  13+ 8E2D              ;
  14+ 8E2D              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E2D              ;
  16+ 8E2D              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E2D              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E2D              ;
  19+ 8E2D              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E2D              ;           _ la bala.
  21+ 8E2D              ;
  22+ 8E2D              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E2D              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E2D              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E2D              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E2D              ;           _ en el momento de generarse la bala)).
  27+ 8E2D
  28+ 8E2D              Genera_disparo
  29+ 8E2D
  30+ 8E2D              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E2D              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E2D              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E2D              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E2D              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E2D              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E2D              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E2D
  38+ 8E2D              ; Exclusiones:
  39+ 8E2D
  40+ 8E2D 3A CB 89         ld a,(Columnas)
  41+ 8E30 47               ld b,a
  42+ 8E31 3A 94 89         ld a,(Columns)
  43+ 8E34 B8               cp b
  44+ 8E35 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E36
  46+ 8E36              ; ----- ----- -----
  47+ 8E36
  48+ 8E36 3A C1 89         ld a,(Ctrl_0)
  49+ 8E39 CB 77            bit 6,a
  50+ 8E3B 20 06            jr nz,14F
  51+ 8E3D
  52+ 8E3D 3A 9A 89         ld a,(Coordenada_y)
  53+ 8E40 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E42 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E43
  56+ 8E43 21 00 80     14 ld hl,Indice_disparo
  57+ 8E46 3A 9B 89         ld a,(CTRL_DESPLZ)
  58+ 8E49 4F               ld c,a
  59+ 8E4A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E4C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E4C              ;                                            ""        ""       "f9", B="1"
  62+ 8E4C              ;                                            ""        ""       "fb", B="2"
  63+ 8E4C              ;                                            ""        ""       "fb", B="3"
  64+ 8E4C A7               and a
  65+ 8E4D 28 10            jr z,1F
  66+ 8E4F E6 01            and 1
  67+ 8E51 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E52
  69+ 8E52 79               ld a,c
  70+ 8E53 16 F9            ld d,$f9
  71+ 8E55 23           2 inc hl
  72+ 8E56 23               inc hl
  73+ 8E57 04               inc b
  74+ 8E58 BA               cp d
  75+ 8E59 28 04            jr z,1F
  76+ 8E5B 14               inc d
  77+ 8E5C 14               inc d
  78+ 8E5D 18 F6            jr 2B
  79+ 8E5F
  80+ 8E5F CD F9 8C     1 call Extrae_address
  81+ 8E62 E5               push hl
  82+ 8E63 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E65 DD 21 BE 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E69
  85+ 8E69              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E69              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E69
  88+ 8E69 3A C1 89         ld a,(Ctrl_0)
  89+ 8E6C CB 77            bit 6,a
  90+ 8E6E 20 04            jr nz,19F
  91+ 8E70
  92+ 8E70 AF               xor a
  93+ 8E71 32 00 8A         ld (Habilita_disparo_entidad),a
  94+ 8E74
  95+ 8E74 3A A7 89     19 ld a,(Cuad_objeto)
  96+ 8E77 FE 02            cp 2
  97+ 8E79 38 66            jr c,3F
  98+ 8E7B 28 64            jr z,3F
  99+ 8E7D
 100+ 8E7D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E7D
 102+ 8E7D E6 01            and 1
 103+ 8E7F 28 30            jr z,4F
 104+ 8E81
 105+ 8E81              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E81              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E81              ;
 108+ 8E81              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E81              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E81              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E81
 112+ 8E81 2A 95 89     	ld hl,(Posicion_actual)
 113+ 8E84
 114+ 8E84              ;   Amadeus o entidad ???.
 115+ 8E84
 116+ 8E84 3A C1 89         ld a,(Ctrl_0)
 117+ 8E87 CB 77            bit 6,a
 118+ 8E89 28 0A            jr z,8F
 119+ 8E8B
 120+ 8E8B              ; 	Dispara Amadeus.
 121+ 8E8B
 122+ 8E8B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E8D CD 3A 95         call PreviousScan
 124+ 8E90 CD 3A 95         call PreviousScan
 125+ 8E93
 126+ 8E93              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E93              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E93              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E93              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E93
 131+ 8E93 18 11            jr 10F
 132+ 8E95
 133+ 8E95              ; 	Dispara Entidad.
 134+ 8E95
 135+ 8E95 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E98              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E98
 138+ 8E98              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E98              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E98
 141+ 8E98 C5               push bc
 142+ 8E99 06 10            ld b,16
 143+ 8E9B CD 2B 95     9 call NextScan
 144+ 8E9E 10 FB            djnz 9B
 145+ 8EA0 C1               pop bc
 146+ 8EA1 CD 0B 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EA4 18 06            jr 17F
 148+ 8EA6
 149+ 8EA6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EA6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EA6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EA6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EA6
 154+ 8EA6 CD 0B 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EA9 CD 80 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EAC              ;                                                      ; _al generar el disparo.
 157+ 8EAC
 158+ 8EAC              ; 	LLegados a este punto tendremos:
 159+ 8EAC              ;
 160+ 8EAC              ;       Puntero_objeto_disparo en IY.
 161+ 8EAC              ;       Rutinas_de_impresion en IX.
 162+ 8EAC              ;       Puntero_de_impresion en HL.
 163+ 8EAC              ;       Impacto/Dirección en BC.
 164+ 8EAC
 165+ 8EAC CD 13 8F     17 call Almacena_disparo
 166+ 8EAF 18 52            jr 6F                                             ; RET.
 167+ 8EB1
 168+ 8EB1              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EB1              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EB1              ;
 171+ 8EB1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EB1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EB1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EB1
 175+ 8EB1 2A 95 89     4 ld hl,(Posicion_actual)
 176+ 8EB4
 177+ 8EB4              ;   Amadeus o entidad ???.
 178+ 8EB4
 179+ 8EB4 3A C1 89         ld a,(Ctrl_0)
 180+ 8EB7 CB 77            bit 6,a
 181+ 8EB9 28 0A            jr z,11F
 182+ 8EBB
 183+ 8EBB              ; 	Dispara Amadeus.
 184+ 8EBB
 185+ 8EBB 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EBD CD 3A 95         call PreviousScan
 187+ 8EC0 CD 3A 95         call PreviousScan
 188+ 8EC3
 189+ 8EC3              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EC3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EC3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EC3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EC3
 194+ 8EC3 18 11            jr 13F
 195+ 8EC5
 196+ 8EC5              ; 	Dispara Entidad.
 197+ 8EC5
 198+ 8EC5 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EC8              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EC8
 201+ 8EC8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EC8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EC8
 204+ 8EC8 C5               push bc
 205+ 8EC9 06 10            ld b,16
 206+ 8ECB CD 2B 95     12 call NextScan
 207+ 8ECE 10 FB            djnz 12B
 208+ 8ED0 C1               pop bc
 209+ 8ED1
 210+ 8ED1 CD 04 8F         call Ajusta_disparo_parte_derecha
 211+ 8ED4 18 06            jr 18F
 212+ 8ED6
 213+ 8ED6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8ED6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8ED6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8ED6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8ED6
 218+ 8ED6 CD 04 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8ED9 CD 80 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EDC              ;                                                       ; _al generar el disparo.
 221+ 8EDC
 222+ 8EDC              ; LLegados a este punto tendremos:
 223+ 8EDC              ;
 224+ 8EDC              ;       Puntero_objeto_disparo en IY.
 225+ 8EDC              ;       Rutinas_de_impresion en IX.
 226+ 8EDC              ;       Puntero_de_impresion en HL.
 227+ 8EDC              ;       Impacto/Dirección en BC.
 228+ 8EDC
 229+ 8EDC CD 13 8F     18 call Almacena_disparo
 230+ 8EDF 18 22            jr 6F                                               ; RET.
 231+ 8EE1
 232+ 8EE1              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EE1
 234+ 8EE1 28 11        3 jr z,5F
 235+ 8EE3
 236+ 8EE3              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EE3              ;
 238+ 8EE3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EE3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EE3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EE3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EE3
 243+ 8EE3              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EE3              ;	   ""        ""       "f9", B="1"
 245+ 8EE3              ;	   ""        ""       "fb", B="2"
 246+ 8EE3              ; 	   ""        ""       "fb", B="3"
 247+ 8EE3
 248+ 8EE3 2A 95 89     	ld hl,(Posicion_actual)
 249+ 8EE6 CD 2B 95     	call NextScan
 250+ 8EE9
 251+ 8EE9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EE9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EE9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EE9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EE9
 256+ 8EE9 CD 0B 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EEC
 258+ 8EEC              ; 	No se produce impacto. B="$80"
 259+ 8EEC              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EEC
 261+ 8EEC 01 80 80         ld bc,$8080
 262+ 8EEF
 263+ 8EEF              ; 	LLegados a este punto tendremos:
 264+ 8EEF              ;
 265+ 8EEF              ;       Puntero_objeto_disparo en IY.
 266+ 8EEF              ;       Rutinas_de_impresion en IX.
 267+ 8EEF              ;       Puntero_de_impresion en HL.
 268+ 8EEF              ;       Impacto/Dirección en BC.
 269+ 8EEF
 270+ 8EEF CD 13 8F         call Almacena_disparo
 271+ 8EF2 18 0F            jr 6F                                           ; RET.
 272+ 8EF4
 273+ 8EF4              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EF4              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EF4              ;
 276+ 8EF4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EF4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EF4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EF4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EF4
 281+ 8EF4 2A 95 89     5 ld hl,(Posicion_actual)
 282+ 8EF7 CD 2B 95     	call NextScan
 283+ 8EFA
 284+ 8EFA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EFA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EFA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EFA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EFA
 289+ 8EFA CD 04 8F         call Ajusta_disparo_parte_derecha
 290+ 8EFD
 291+ 8EFD              ; 	No se produce impacto. B="$80"
 292+ 8EFD              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EFD
 294+ 8EFD 01 80 80     15 ld bc,$8080
 295+ 8F00
 296+ 8F00              ; 	LLegados a este punto tendremos:
 297+ 8F00              ;
 298+ 8F00              ;       Puntero_objeto_disparo en IY.
 299+ 8F00              ;       Rutinas_de_impresion en IX.
 300+ 8F00              ;       Puntero_de_impresion en HL.
 301+ 8F00              ;       Impacto/Dirección en BC.
 302+ 8F00
 303+ 8F00 CD 13 8F         call Almacena_disparo
 304+ 8F03
 305+ 8F03 C9           6 ret
 306+ 8F04
 307+ 8F04              ; ----------------------------------------------------------------
 308+ 8F04              ;
 309+ 8F04              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F04              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F04              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F04
 313+ 8F04 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F05 FE 02            cp 2
 315+ 8F07 38 01            jr c,1F
 316+ 8F09 23               inc hl
 317+ 8F0A C9           1 ret
 318+ 8F0B
 319+ 8F0B 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F0C FE 01        	cp 1
 321+ 8F0E 20 01        	jr nz,1F
 322+ 8F10 2B           	dec hl
 323+ 8F11 2B           1 dec hl
 324+ 8F12 C9               ret
 325+ 8F13
 326+ 8F13              ; ----------------------------------------------------------------
 327+ 8F13              ;
 328+ 8F13              ;   25/02/23
 329+ 8F13              ;
 330+ 8F13              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F13              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F13              ;
 333+ 8F13              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F13              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F13
 336+ 8F13              Almacena_disparo
 337+ 8F13
 338+ 8F13 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F14 F1               pop af
 340+ 8F15 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F16
 342+ 8F16 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F17 E6 01            and 1
 344+ 8F19 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F1B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F1B              ; 	Dispara AMADEUS.
 347+ 8F1B
 348+ 8F1B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F1B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F1B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F1B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F1B
 353+ 8F1B C5               push bc
 354+ 8F1C 01 E8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F1F 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F22 A7               and a
 357+ 8F23 ED 42            sbc hl,bc
 358+ 8F25 CC C2 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F28 C1               pop bc
 360+ 8F29 28 54            jr z,4F
 361+ 8F2B
 362+ 8F2B 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F2E 23               inc hl
 364+ 8F2F 23               inc hl
 365+ 8F30 22 ED 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F33              ;                                                   ; _ Disparo_(+1).
 367+ 8F33 18 18            jr 2F
 368+ 8F35
 369+ 8F35              ; Dispara una entidad.
 370+ 8F35
 371+ 8F35 C5           1 push bc
 372+ 8F36 01 10 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F39 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F3C A7               and a
 375+ 8F3D ED 42            sbc hl,bc
 376+ 8F3F CC BB 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F42 C1               pop bc
 378+ 8F43 28 3A            jr z,4F
 379+ 8F45
 380+ 8F45 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F48 23               inc hl
 382+ 8F49 23               inc hl
 383+ 8F4A 22 EB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F4D              ;                                                   ; _ Disparo_(+1).
 385+ 8F4D CD F9 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F50              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F50              ;
 388+ 8F50              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F50              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F50              ;                                                     Puntero_de_impresion en HL.
 391+ 8F50              ;                                                     Impacto/Dirección en BC.
 392+ 8F50
 393+ 8F50 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F51 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F52 23               inc hl                                          ; _ al siguiente.
 396+ 8F53 A7               and a
 397+ 8F54 20 C0            jr nz,3B
 398+ 8F56
 399+ 8F56 08               ex af,af
 400+ 8F57 ED 73 E2 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F5B F9               ld sp,hl
 402+ 8F5C
 403+ 8F5C DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F5E F5               push af                                         ; Puntero de impresión.
 405+ 8F5F FD E5            push iy                                         ; Puntero objeto.
 406+ 8F61 C5               push bc                                         ; Control.
 407+ 8F62
 408+ 8F62 ED 7B E2 89      ld sp,(Stack)
 409+ 8F66
 410+ 8F66              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F66
 412+ 8F66 21 D1 89     	ld hl,Ctrl_1
 413+ 8F69 CB C6        	set 0,(hl)
 414+ 8F6B
 415+ 8F6B DD E5        	push ix
 416+ 8F6D E1               pop hl
 417+ 8F6E F5               push af
 418+ 8F6F DD E1            pop ix
 419+ 8F71
 420+ 8F71 CD A0 7F     	call Guarda_foto_registros
 421+ 8F74
 422+ 8F74 21 D1 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F77 CB 86        	res 0,(hl)
 424+ 8F79
 425+ 8F79              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F79              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F79
 428+ 8F79 CD C2 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F7C CD BB 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F7F
 431+ 8F7F C9           4 ret
 432+ 8F80
 433+ 8F80              ; ----------------------------------------------------------------
 434+ 8F80              ;
 435+ 8F80              ;   4/3/23
 436+ 8F80              ;
 437+ 8F80              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F80              ;   _ al generarse el disparo.
 439+ 8F80              ;
 440+ 8F80              ;       "$80" ..... No se produce colisión.
 441+ 8F80              ;       "$81" ..... Se produce colisión.
 442+ 8F80
 443+ 8F80              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F80              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F80
 446+ 8F80
 447+ 8F80 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F82 E5               push hl                                        ; Puntero de impresión.
 449+ 8F83
 450+ 8F83 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F85 CD A1 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F88
 453+ 8F88 7B               ld a,e
 454+ 8F89 E6 01            and 1
 455+ 8F8B 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F8D
 457+ 8F8D E1               pop hl
 458+ 8F8E E5               push hl
 459+ 8F8F CD 2B 95         call NextScan
 460+ 8F92
 461+ 8F92 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F93 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F95 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F97              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F97 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F99 CD A1 8F         call Bucle_2
 467+ 8F9C
 468+ 8F9C 43           2 ld b,e
 469+ 8F9D E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F9E FD E1            pop iy
 471+ 8FA0 C9               ret
 472+ 8FA1
 473+ 8FA1               ; ---------- ----------
 474+ 8FA1
 475+ 8FA1 06 02        Bucle_2 ld b,2
 476+ 8FA3 FD 7E 00     2 ld a,(iy)
 477+ 8FA6 A6               and (hl)
 478+ 8FA7 28 02            jr z,1F
 479+ 8FA9 1E 81            ld e,$81
 480+ 8FAB 23           1 inc hl
 481+ 8FAC FD 23            inc iy
 482+ 8FAE 10 F3            djnz 2B
 483+ 8FB0 C9               ret
 484+ 8FB1
 485+ 8FB1              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FB1              ;
 487+ 8FB1              ;   11/04/23
 488+ 8FB1              ;
 489+ 8FB1              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FB1              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FB1              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FB1              ;
 493+ 8FB1              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FB1
 495+ 8FB1              Compara_coordenadas_X
 496+ 8FB1
 497+ 8FB1              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FB1              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FB1
 500+ 8FB1              ; Preparamos registros:
 501+ 8FB1
 502+ 8FB1 21 99 89         ld hl,Filas+6
 503+ 8FB4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FB5 23               inc hl
 505+ 8FB6 23               inc hl
 506+ 8FB7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FB8 43               ld b,e
 508+ 8FB9 21 A7 89         ld hl,Filas+20
 509+ 8FBC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FBD 21 F7 89         ld hl,Coordenadas_X_Entidad
 511+ 8FC0 CD D1 91         call Guarda_coordenadas_X
 512+ 8FC3
 513+ 8FC3              ; Preparamos registros:
 514+ 8FC3
 515+ 8FC3 21 82 85         ld hl,Amadeus_db+6
 516+ 8FC6 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FC7 23               inc hl
 518+ 8FC8 23               inc hl
 519+ 8FC9 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FCA 7B               ld a,e
 521+ 8FCB 08               ex af,af'
 522+ 8FCC 21 90 85         ld hl,Amadeus_db+20
 523+ 8FCF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FD0 21 F4 89         ld hl,Coordenadas_X_Amadeus
 525+ 8FD3 CD D1 91         call Guarda_coordenadas_X
 526+ 8FD6
 527+ 8FD6              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FD6              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FD6
 530+ 8FD6 04               inc b
 531+ 8FD7 05               dec b
 532+ 8FD8 28 04            jr z,1F
 533+ 8FDA 06 03            ld b,3
 534+ 8FDC 18 02            jr 2F
 535+ 8FDE 06 02        1 ld b,2
 536+ 8FE0 08           2 ex af,af'
 537+ 8FE1 3C               inc a
 538+ 8FE2 3D               dec a
 539+ 8FE3 28 04            jr z,5F
 540+ 8FE5 0E 03            ld c,3
 541+ 8FE7 18 02            jr 6F
 542+ 8FE9 0E 02        5 ld c,2
 543+ 8FEB 79           6 ld a,c
 544+ 8FEC 08               ex af,af'
 545+ 8FED 11 F7 89         ld de,Coordenadas_X_Entidad
 546+ 8FF0 1A           4 ld a,(de)
 547+ 8FF1 21 F4 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FF4 BE           3 cp (hl)
 549+ 8FF5 28 0E            jr z,7F
 550+ 8FF7 23               inc hl
 551+ 8FF8 0D               dec c
 552+ 8FF9 20 F9            jr nz,3B
 553+ 8FFB 13               inc de
 554+ 8FFC 08               ex af,af'
 555+ 8FFD 4F               ld c,a
 556+ 8FFE 08               ex af,af'
 557+ 8FFF 10 EF            djnz 4B
 558+ 9001
 559+ 9001              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 9001
 561+ 9001 CD 10 92     8 call Limpia_Coordenadas_X
 562+ 9004 C9               ret
 563+ 9005
 564+ 9005              7
 565+ 9005 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9007 32 AC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 900A 21 EF 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 900D CB D6            set 2,(hl)
 569+ 900F 18 F0            jr 8B
 570+ 9011
 571+ 9011              ; -----------------------------------------------------------------------
 572+ 9011              ;
 573+ 9011              ;   17/04/23
 574+ 9011              ;
 575+ 9011
 576+ 9011              Detecta_colision_nave_entidad
 577+ 9011
 578+ 9011              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9011
 580+ 9011 2A 95 89         ld hl,(Posicion_actual)
 581+ 9014 CD 90 94         call Calcula_puntero_de_impresion
 582+ 9017
 583+ 9017              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9017              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9017
 586+ 9017 DD E5            push ix
 587+ 9019 E1               pop hl
 588+ 901A E5               push hl
 589+ 901B
 590+ 901B              ; ----- ----- -----
 591+ 901B 1E 00            ld e,0                                         ; Indica impacto.
 592+ 901D 06 0A            ld b,10
 593+ 901F CD 4F 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9022 7B               ld a,e
 595+ 9023 FE 05            cp 5
 596+ 9025 38 0E            jr c,3F
 597+ 9027
 598+ 9027              ; LLegados a este punto:
 599+ 9027              ;
 600+ 9027              ;   HAY COLISIÓN !!!!!.
 601+ 9027              ;
 602+ 9027              ;   .db (Impacto) de Amadeus a "1".
 603+ 9027              ;   SET el bit3 de (Impacto2).
 604+ 9027              ;
 605+ 9027              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9027
 607+ 9027 21 95 85         ld hl,Amadeus_db+25
 608+ 902A 36 01            ld (hl),1
 609+ 902C 21 EF 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 902F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9031 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9033 18 18            jr 1F
 613+ 9035
 614+ 9035              ; -----
 615+ 9035
 616+ 9035 E1           3 pop hl
 617+ 9036 CD 2B 95         call NextScan
 618+ 9039 E5               push hl
 619+ 903A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 903B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 903D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 903F 30 0C            jr nc,1F
 623+ 9041              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9041 10 DC            djnz 2B
 625+ 9043
 626+ 9043              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9043
 628+ 9043              ; LLegados a este punto:
 629+ 9043              ;
 630+ 9043              ;   NO HAY COLISIÓN !!!!!.
 631+ 9043              ;
 632+ 9043              ;   .db (Impacto) de Amadeus a "0".
 633+ 9043              ;   RES el bit2 de (Impacto2).
 634+ 9043              ;
 635+ 9043              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9043              ;   Lo colocamos a "0".
 637+ 9043
 638+ 9043 21 EF 89         ld hl,Impacto2
 639+ 9046 CB 96            res 2,(hl)
 640+ 9048 2A F0 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 904B 36 00            ld (hl),0
 642+ 904D
 643+ 904D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 904E C9               ret
 645+ 904F
 646+ 904F               ; ---------- ----------
 647+ 904F
 648+ 904F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9050 3A 94 89         ld a,(Columns)
 650+ 9053 47               ld b,a
 651+ 9054 FD 7E 00     2 ld a,(iy)
 652+ 9057 BE               cp (hl)
 653+ 9058 28 01            jr z,1F
 654+ 905A
 655+ 905A 1C               inc e
 656+ 905B
 657+ 905B 23           1 inc hl
 658+ 905C FD 23            inc iy
 659+ 905E 10 F4            djnz 2B
 660+ 9060 C1               pop bc
 661+ 9061 C9               ret
 662+ 9062
 663+ 9062              ; -------------------------------------------------------------------------------------------------------------
 664+ 9062              ;
 665+ 9062              ;   13/03/23
 666+ 9062              ;
 667+ 9062              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9062              ;
 669+ 9062              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9062
 671+ 9062 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9065 7E               ld a,(hl)
 673+ 9066 A7               and a
 674+ 9067 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9068
 676+ 9068 44               ld b,h
 677+ 9069 4D               ld c,l
 678+ 906A 2A E8 89         ld hl,(Stack_snapshot_disparos)
 679+ 906D E5               push hl
 680+ 906E A7               and a
 681+ 906F ED 42            sbc hl,bc
 682+ 9071 E5               push hl
 683+ 9072 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9073
 685+ 9073 E1               pop hl
 686+ 9074 54               ld d,h
 687+ 9075 5D               ld e,l
 688+ 9076 1B               dec de
 689+ 9077 ED B8            lddr                                                ; Limpiamos.
 690+ 9079
 691+ 9079 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 907C 22 E8 89         ld (Stack_snapshot_disparos),hl
 693+ 907F
 694+ 907F C9               ret
 695+ 9080
 696+ 9080              ; -------------------------------------------------------------------------------------------------------------
 697+ 9080              ;
 698+ 9080              ;   28/03/23
 699+ 9080              ;
 700+ 9080
 701+ 9080 01 FA 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 9083 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9086
 704+ 9086 CD F9 8C     2 call Extrae_address
 705+ 9089 7E               ld a,(hl)
 706+ 908A A7               and a
 707+ 908B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 908D
 709+ 908D              ; ----- ----- ----- ----- ----- -----
 710+ 908D
 711+ 908D C5               push bc
 712+ 908E CD 4A 91         call foto_disparo_a_borrar
 713+ 9091
 714+ 9091              ; Existe colisión con este disparo???
 715+ 9091
 716+ 9091 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 9092 7E               ld a,(hl)
 718+ 9093 2B               dec hl
 719+ 9094 E6 01            and 1
 720+ 9096 28 1D            jr z,9F
 721+ 9098
 722+ 9098              ;   En este punto:
 723+ 9098              ;
 724+ 9098              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 9098              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 9098              ;   _con la entidad).
 727+ 9098              ;
 728+ 9098              ;   Disparo_2A defw 0                                ; Control.
 729+ 9098              ;    defw 0                                          ; Puntero objeto.
 730+ 9098              ;    defw 0                                          ; Puntero de impresión.
 731+ 9098              ;    defw 0                                          ; Rutina de impresión.
 732+ 9098
 733+ 9098 E5               push hl
 734+ 9099
 735+ 9099 06 04            ld b,4
 736+ 909B 23           19 inc hl
 737+ 909C 10 FD            djnz 19B
 738+ 909E
 739+ 909E CD F9 8C         call Extrae_address
 740+ 90A1 CD 82 9B         call Genera_coordenadas_disparo
 741+ 90A4
 742+ 90A4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90A4
 744+ 90A4 21 F2 89         ld hl,Coordenadas_disparo_certero
 745+ 90A7 72               ld (hl),d
 746+ 90A8 23               inc hl
 747+ 90A9 73               ld (hl),e
 748+ 90AA
 749+ 90AA              ; Elimino el disparo de la base de datos.
 750+ 90AA
 751+ 90AA E1               pop hl
 752+ 90AB CD C6 91         call Elimina_disparo_de_base_de_datos
 753+ 90AE 21 EF 89         ld hl,Impacto2
 754+ 90B1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90B3
 756+ 90B3 18 06            jr 11F
 757+ 90B5
 758+ 90B5 CD 73 91     9 call Mueve_disparo
 759+ 90B8 CD 4A 91         call foto_disparo_a_borrar
 760+ 90BB
 761+ 90BB C1           11 pop bc
 762+ 90BC 18 04            jr 7F
 763+ 90BE
 764+ 90BE              ; ----- ----- ----- ----- ----- -----
 765+ 90BE
 766+ 90BE ED 42        1 sbc hl,bc
 767+ 90C0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90C2 2A ED 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90C5 23               inc hl
 770+ 90C6 23               inc hl
 771+ 90C7 22 ED 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90CA 18 BA            jr 2B
 773+ 90CC CD C2 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90CF
 775+ 90CF 01 62 85         ld bc,Disparo_11
 776+ 90D2 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90D5
 778+ 90D5 CD F9 8C     5 call Extrae_address
 779+ 90D8 7E               ld a,(hl)
 780+ 90D9 A7               and a
 781+ 90DA 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90DC
 783+ 90DC              ; ----- ----- ----- ----- ----- -----
 784+ 90DC
 785+ 90DC C5               push bc
 786+ 90DD CD 4A 91         call foto_disparo_a_borrar
 787+ 90E0
 788+ 90E0              ; Existe colisión con este disparo???
 789+ 90E0
 790+ 90E0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90E1 7E               ld a,(hl)
 792+ 90E2 2B               dec hl
 793+ 90E3 E6 01            and 1
 794+ 90E5 28 48            jr z,10F
 795+ 90E7
 796+ 90E7              ; La colisión se produce con Amadeus???
 797+ 90E7              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90E7
 799+ 90E7 E5               push hl
 800+ 90E8
 801+ 90E8 06 04            ld b,4
 802+ 90EA 23           16 inc hl
 803+ 90EB 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90ED CD F9 8C         call Extrae_address
 805+ 90F0 CD 82 9B         call Genera_coordenadas_disparo
 806+ 90F3
 807+ 90F3 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90F4 FE 16            cp $16
 809+ 90F6 38 22            jr c,15F
 810+ 90F8
 811+ 90F8              ; (Colisiones en filas 16 y 17).
 812+ 90F8
 813+ 90F8 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90F9
 815+ 90F9              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90F9
 817+ 90F9 21 82 85         ld hl,Amadeus_db+6
 818+ 90FC 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90FD 23               inc hl
 820+ 90FE 23               inc hl
 821+ 90FF 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9100 21 90 85         ld hl,Amadeus_db+20
 823+ 9103 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9104 21 F4 89         ld hl,Coordenadas_X_Amadeus
 825+ 9107 CD D1 91         call Guarda_coordenadas_X
 826+ 910A
 827+ 910A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 910B
 829+ 910B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 910B
 831+ 910B 06 03            ld b,3
 832+ 910D 21 F4 89         ld hl,Coordenadas_X_Amadeus
 833+ 9110 7E           18 ld a,(hl)
 834+ 9111 BA               cp d
 835+ 9112 20 03            jr nz,17F
 836+ 9114
 837+ 9114              ; Colisión Amadeus !!!!!!!!!!
 838+ 9114
 839+ 9114 E1               pop hl
 840+ 9115 18 09            jr 14F
 841+ 9117
 842+ 9117 23           17 inc hl
 843+ 9118 10 F6            djnz 18B
 844+ 911A
 845+ 911A              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 911A              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 911A
 848+ 911A E1           15 pop hl
 849+ 911B 23               inc hl
 850+ 911C 35               dec (hl)
 851+ 911D 2B               dec hl
 852+ 911E 18 0F            jr 10F
 853+ 9120
 854+ 9120              ; -----------------------debug
 855+ 9120
 856+ 9120              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9120              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9120
 859+ 9120 E5           14 push hl
 860+ 9121 CD C6 91         call Elimina_disparo_de_base_de_datos
 861+ 9124 21 EF 89         ld hl,Impacto2
 862+ 9127 CB CE            set 1,(hl)
 863+ 9129 CD 10 92         call Limpia_Coordenadas_X
 864+ 912C
 865+ 912C E1               pop hl
 866+ 912D 18 06            jr 12F
 867+ 912F
 868+ 912F CD 73 91     10 call Mueve_disparo
 869+ 9132 CD 4A 91         call foto_disparo_a_borrar
 870+ 9135 C1           12 pop bc
 871+ 9136
 872+ 9136 18 04            jr 8F
 873+ 9138
 874+ 9138              ; ----- ----- ----- ----- ----- -----
 875+ 9138
 876+ 9138 ED 42        4 sbc hl,bc
 877+ 913A 28 0A            jr z,6F
 878+ 913C
 879+ 913C 2A EB 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 913F 23               inc hl
 881+ 9140 23               inc hl
 882+ 9141 22 EB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9144 18 8F            jr 5B
 884+ 9146
 885+ 9146 CD BB 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9149 C9               ret
 887+ 914A
 888+ 914A              ; ------------------------------------------------------------------
 889+ 914A
 890+ 914A              foto_disparo_a_borrar
 891+ 914A
 892+ 914A 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 914B A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 914C C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 914D
 896+ 914D E5               push hl
 897+ 914E 23               inc hl
 898+ 914F 23               inc hl
 899+ 9150 ED 73 E2 89      ld (Stack),sp
 900+ 9154 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9155 FD E1            pop iy
 902+ 9157 DD E1            pop ix
 903+ 9159 E1               pop hl
 904+ 915A ED 7B E2 89      ld sp,(Stack)
 905+ 915E 3A D1 89         ld a,(Ctrl_1)
 906+ 9161 CB C7            set 0,a
 907+ 9163 32 D1 89         ld (Ctrl_1),a
 908+ 9166 CD A0 7F         call Guarda_foto_registros
 909+ 9169 3A D1 89         ld a,(Ctrl_1)
 910+ 916C CB 87            res 0,a
 911+ 916E 32 D1 89         ld (Ctrl_1),a
 912+ 9171 E1               pop hl
 913+ 9172 C9               ret
 914+ 9173
 915+ 9173 E5           Mueve_disparo push hl
 916+ 9174 7E               ld a,(hl)
 917+ 9175 06 04            ld b,4
 918+ 9177 23           1 inc hl
 919+ 9178 10 FD            djnz 1B
 920+ 917A
 921+ 917A              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 917A
 923+ 917A CD F9 8C         call Extrae_address
 924+ 917D
 925+ 917D E6 01            and 1
 926+ 917F 28 2B            jr z,2F
 927+ 9181
 928+ 9181              ; Disparo hacia arriba, (Amadeus).
 929+ 9181
 930+ 9181              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9181              ; _ de la dificultad.
 932+ 9181
 933+ 9181 CD 3A 95         call PreviousScan
 934+ 9184 CD 3A 95         call PreviousScan
 935+ 9187 CD 3A 95         call PreviousScan
 936+ 918A
 937+ 918A              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 918A
 939+ 918A 7C               ld a,h
 940+ 918B FE 40            cp $40
 941+ 918D 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 918F
 943+ 918F              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 918F
 945+ 918F EB               ex de,hl
 946+ 9190 06 04            ld b,4
 947+ 9192 2B           6 dec hl
 948+ 9193 10 FD            djnz 6B
 949+ 9195
 950+ 9195 CD C6 91         call Elimina_disparo_de_base_de_datos
 951+ 9198 E1               pop hl
 952+ 9199 18 10            jr 7F
 953+ 919B
 954+ 919B              ; Se ha desplazado la bala, compruebo colisión.
 955+ 919B
 956+ 919B D5           3 push de
 957+ 919C C5               push bc
 958+ 919D
 959+ 919D CD 80 8F         call Comprueba_Colision
 960+ 91A0
 961+ 91A0              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 91A0
 963+ 91A0 78               ld a,b
 964+ 91A1
 965+ 91A1 C1               pop bc
 966+ 91A2 D1               pop de
 967+ 91A3
 968+ 91A3 EB               ex de,hl
 969+ 91A4
 970+ 91A4 73               ld (hl),e
 971+ 91A5 23               inc hl
 972+ 91A6 72               ld (hl),d
 973+ 91A7
 974+ 91A7 E1           4 pop hl
 975+ 91A8 23               inc hl
 976+ 91A9 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 91AA 2B               dec hl
 978+ 91AB C9           7 ret
 979+ 91AC
 980+ 91AC              ; Disparo hacia abajo, (Entidad).
 981+ 91AC
 982+ 91AC              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 91AC              ; _ de la dificultad.
 984+ 91AC
 985+ 91AC CD 2B 95     2 call NextScan
 986+ 91AF CD 2B 95         call NextScan
 987+ 91B2 CD 2B 95         call NextScan
 988+ 91B5
 989+ 91B5              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 91B5
 991+ 91B5 7C               ld a,h
 992+ 91B6 FE 58            cp $58
 993+ 91B8 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 91BA
 995+ 91BA EB               ex de,hl
 996+ 91BB 06 04            ld b,4
 997+ 91BD 2B           5 dec hl
 998+ 91BE 10 FD            djnz 5B
 999+ 91C0
1000+ 91C0 CD C6 91         call Elimina_disparo_de_base_de_datos
1001+ 91C3 E1               pop hl
1002+ 91C4 18 E5            jr 7B
1003+ 91C6
1004+ 91C6              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 91C6
1006+ 91C6 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 91C9 AF               xor a
1008+ 91CA 77               ld (hl),a
1009+ 91CB 54               ld d,h
1010+ 91CC 5D               ld e,l
1011+ 91CD 13               inc de
1012+ 91CE ED B0            ldir
1013+ 91D0 C9               ret
1014+ 91D1
1015+ 91D1              ; -----------------------------------------------------------------
1016+ 91D1              ;
1017+ 91D1              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 91D1              ;
1019+ 91D1              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 91D1              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 91D1              ;
1022+ 91D1              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 91D1              ;
1024+ 91D1              ;   INPUTS:
1025+ 91D1              ;
1026+ 91D1              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 91D1              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 91D1              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 91D1
1030+ 91D1              ;   MODIFICA: A, HL, DE y C
1031+ 91D1
1032+ 91D1 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 91D2 79               ld a,c
1034+ 91D3 E6 01            and 1
1035+ 91D5 20 03            jr nz,1F
1036+ 91D7 14               inc d
1037+ 91D8 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 91DA
1039+ 91DA              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 91DA              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 91DA
1042+ 91DA 15           1 dec d
1043+ 91DB 23           2 inc hl
1044+ 91DC 72               ld (hl),d
1045+ 91DD
1046+ 91DD 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 91DE A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 91DF C8               ret z
1049+ 91E0
1050+ 91E0 AF               xor a
1051+ 91E1 5F               ld e,a
1052+ 91E2 18 ED            jr Guarda_coordenadas_X
1053+ 91E4
1054+ 91E4              ; -----------------------------------------------------------------
1055+ 91E4              ;
1056+ 91E4              ;   12/04/23
1057+ 91E4              ;
1058+ 91E4
1059+ 91E4 3A EF 89     Selector_de_impactos ld a,(Impacto2)
1060+ 91E7 A7               and a
1061+ 91E8 C8               ret z
1062+ 91E9
1063+ 91E9 FE 04            cp 4
1064+ 91EB 20 09            jr nz,1F
1065+ 91ED
1066+ 91ED
1067+ 91ED              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 91ED
1069+ 91ED CD 11 90         call Detecta_colision_nave_entidad
1070+ 91F0
1071+ 91F0 21 EF 89         ld hl,Impacto2
1072+ 91F3 CB 5E            bit 3,(hl)
1073+ 91F5 C0               ret nz                                               ; Existe colisión, RET.
1074+ 91F6
1075+ 91F6              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91F6              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91F6
1078+ 91F6 21 EF 89     1 ld hl,Impacto2
1079+ 91F9 CB 4E            bit 1,(hl)
1080+ 91FB 28 07            jr z,2F
1081+ 91FD
1082+ 91FD 21 95 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 9200 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 9202 18 0B            jr 3F
1085+ 9204
1086+ 9204 21 EF 89     2 ld hl,Impacto2
1087+ 9207 CB 46            bit 0,(hl)
1088+ 9209 C8               ret z
1089+ 920A
1090+ 920A              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 920A
1092+ 920A 21 D1 89         ld hl,Ctrl_1
1093+ 920D CB D6            set 2,(hl)
1094+ 920F
1095+ 920F C9           3 ret
1096+ 9210
1097+ 9210              ; -----------------------------------------------------------------
1098+ 9210              ;
1099+ 9210              ;   16/04/23
1100+ 9210              ;
1101+ 9210
1102+ 9210 AF           Limpia_Coordenadas_X xor a
1103+ 9211 06 06            ld b,6
1104+ 9213 21 F4 89         ld hl,Coordenadas_X_Amadeus
1105+ 9216 77           1 ld (hl),a
1106+ 9217 23               inc hl
1107+ 9218 10 FC            djnz 1B
1108+ 921A C9               ret
1109+ 921B
1110+ 921B              ; -----------------------------------------------------------------
1111+ 921B              ;
1112+ 921B              ;   25/04/23
1113+ 921B              ;
1114+ 921B
1115+ 921B              Determina_resultado_comparativa
1116+ 921B
1117+ 921B              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 921B              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 921B              ;
1120+ 921B              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 921B              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 921B              ;
1123+ 921B              ;   SBC HL,DE
1124+ 921B
1125+ 921B 7C               ld a,h
1126+ 921C 06 00            ld b,0
1127+ 921E
1128+ 921E CD 2B 92         call Compara_cositas
1129+ 9221
1130+ 9221 04               inc b
1131+ 9222 05               dec b
1132+ 9223 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 9224
1134+ 9224 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 9225 06 00            ld b,0
1136+ 9227
1137+ 9227 CD 2B 92         call Compara_cositas
1138+ 922A C9               ret
1139+ 922B
1140+ 922B A7           Compara_cositas and a
1141+ 922C 28 15            jr z,1F
1142+ 922E FE FD            cp $fd
1143+ 9230 28 11            jr z,1F
1144+ 9232 FE FE            cp $fe
1145+ 9234 28 0D            jr z,1F
1146+ 9236 FE FF            cp $ff
1147+ 9238 28 09            jr z,1F
1148+ 923A FE 01            cp $01
1149+ 923C 28 05            jr z,1F
1150+ 923E FE 02            cp $02
1151+ 9240 28 01            jr z,1F
1152+ 9242 C0               ret nz
1153+ 9243
1154+ 9243 04           1 inc b
1155+ 9244 C9               ret
1156+ 9245
# file closed: Disparo.asm
1215  9245              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9245              ; ******************************************************************************************************************************************************************************************
   2+ 9245              ;
   3+ 9245              ; 01/23
   4+ 9245              ;
   5+ 9245              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9245
   7+ 9245 CD 1F 95     Draw call Prepara_draw
   8+ 9248 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9249 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 924A 28 05        	jr z,2F
  11+ 924C
  12+ 924C 3A A7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 924F 18 0C        	jr 1F
  14+ 9251 2A A5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9254 22 95 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9257 CD E6 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 925A              ;													; _la esquina superior izquierda de la pantalla.
  18+ 925A CD A5 9C     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 925D 3A C1 89     1 ld a,(Ctrl_0)
  20+ 9260 CB 6F        	bit 5,a
  21+ 9262 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9264
  23+ 9264 CD 7C 92     	call Comprueba_limite_horizontal
  24+ 9267 CD 0C 93     	call Comprueba_limite_vertical
  25+ 926A
  26+ 926A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 926A
  28+ 926A CD 59 94     3 call calcula_CColumnass
  29+ 926D CD 90 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9270 CD E5 94     	call Define_rutina_de_impresion
  31+ 9273
  32+ 9273 3A C1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9276 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9278 32 C1 89     	ld (Ctrl_0),a
  35+ 927B
  36+ 927B C9           	ret
  37+ 927C
  38+ 927C              ; *******************************************************************************************************************************************************************************************
  39+ 927C              ;	21/01/23
  40+ 927C              ;
  41+ 927C              ; 	Comprueba_limite_horizontal.
  42+ 927C              ;
  43+ 927C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 927C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 927C              ;
  46+ 927C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 927C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 927C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 927C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 927C
  51+ 927C
  52+ 927C
  53+ 927C 3A C1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 927F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9281 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9283 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9285 32 C1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9288 18 09            jr 6F
  59+ 928A CB 5F        1 bit 3,a
  60+ 928C 28 0A            jr z,2F
  61+ 928E E6 F7            and $f7
  62+ 9290 32 C1 89         ld (Ctrl_0),a
  63+ 9293 CD E6 93     6 call Inicializacion
  64+ 9296 18 5B            jr 5F
  65+ 9298 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9299
  67+ 9299              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9299              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9299
  70+ 9299 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 929A 2A CC 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 929D CD EB 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 92A0 67           	ld h,a
  74+ 92A1 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 92A2 CD EB 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 92A5 67           	ld h,a
  77+ 92A6 A7           	and a
  78+ 92A7 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 92A9 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 92AA 3A A7 89     	ld a,(Cuad_objeto)
  81+ 92AD FE 02        	cp 2
  82+ 92AF 38 1E        	jr c,3F
  83+ 92B1 28 1C        	jr z,3F
  84+ 92B3 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 92B4 28 23            jr z,7F
  86+ 92B6 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 92B8 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 92BA E1           	pop hl
  89+ 92BB
  90+ 92BB              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 92BB              ; _para indicar con E="2" en caso necesario.
  92+ 92BB
  93+ 92BB E5               push hl
  94+ 92BC C5               push bc
  95+ 92BD CD EB 97     	call calcula_tercio
  96+ 92C0 FE 01        	cp 1
  97+ 92C2 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 92C4 CD F4 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 92C7 28 26            jr z,9F
 100+ 92C9 38 24            jr c,9F
 101+ 92CB 1E 00        11 ld e,0
 102+ 92CD 18 22            jr 8F
 103+ 92CF 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 92D0 28 07        	jr z, 7F
 105+ 92D2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 92D4 1E 00         	ld e,0
 107+ 92D6 E1           	pop hl
 108+ 92D7 18 04        	jr 4F
 109+ 92D9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 92DB 18 15            jr 10F
 111+ 92DD
 112+ 92DD              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 92DD              ; _para indicar con E="2" en caso necesario.
 114+ 92DD
 115+ 92DD E5           4 push hl
 116+ 92DE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 92DF CD EB 97     	call calcula_tercio
 118+ 92E2 FE 01        	cp 1
 119+ 92E4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 92E6 CD F4 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 92E9 28 04            jr z,9F
 122+ 92EB 30 02            jr nc,9F
 123+ 92ED 18 02        	jr 8F
 124+ 92EF 1E 02        9 ld e,2
 125+ 92F1 C1           8 pop bc
 126+ 92F2 E1           10 pop hl
 127+ 92F3 C9           5 ret
 128+ 92F4
 129+ 92F4              ; --------------------
 130+ 92F4              ;
 131+ 92F4              ; 25/08/22
 132+ 92F4
 133+ 92F4 CD EB 97     Comprueba_centro call calcula_tercio
 134+ 92F7 67               ld h,a
 135+ 92F8 08           	ex af,af
 136+ 92F9 FE 02        	cp 2
 137+ 92FB 38 07        	jr c,1F
 138+ 92FD 28 05        	jr z,1F
 139+ 92FF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 9302 18 03        	jr 2F
 141+ 9304 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 9307 08           2 ex af,af
 143+ 9308 A7               and a
 144+ 9309 ED 42            sbc hl,bc
 145+ 930B C9               ret
 146+ 930C
 147+ 930C              ; *********************************************************************************************************************************************************************************************
 148+ 930C              ;
 149+ 930C              ;   16/8/22
 150+ 930C              ;
 151+ 930C              ;	Comprueba_limite_vertical
 152+ 930C              ;
 153+ 930C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 930C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 930C              ;
 156+ 930C
 157+ 930C 2A 95 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 930F 7D           	ld a,l
 159+ 9310 E6 1F        	and $1F
 160+ 9312 57           	ld d,a
 161+ 9313 3A CE 89     	ld a,(Limite_vertical)
 162+ 9316 BA           	cp d 											; Límite - Posición.
 163+ 9317 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9318 3A A7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 931B CB 47        	bit 0,a
 166+ 931D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 931F
 168+ 931F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 931F
 170+ 931F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9320 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9322
 173+ 9322              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9322              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9322
 176+ 9322 3A 99 89         ld a,(Coordenada_X)
 177+ 9325 16 0F            ld d,Centro_izquierda
 178+ 9327 A7               and a
 179+ 9328 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9329 28 1E            jr z,3F
 181+ 932B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 932D              ;                                                    ; _salimos sin modificar nada.
 183+ 932D 18 0E            jr 2F
 184+ 932F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9330 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9332
 187+ 9332              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9332              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9332
 190+ 9332 3A 99 89         ld a,(Coordenada_X)
 191+ 9335 16 10            ld d,Centro_derecha
 192+ 9337 A7               and a
 193+ 9338 92               sub d
 194+ 9339 28 0E            jr z,3F
 195+ 933B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 933D              ;                                                    ; _salimos sin modificar nada.
 197+ 933D CB 43        2 bit 0,e
 198+ 933F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9341 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9342 CD D6 93         call Modificaccionne
 201+ 9345 C1           	pop bc
 202+ 9346 CD E6 93         call Inicializacion
 203+ 9349 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 934A
 205+ 934A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 934A
 207+ 934A C5           4 push bc
 208+ 934B 01 94 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 934E 0A           	ld a,(bc)
 210+ 934F 3D           	dec a
 211+ 9350 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9351 7D           	ld a,l
 213+ 9352 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9353 CB 47        	bit 0,a
 215+ 9355 28 03        	jr z,5F
 216+ 9357 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9358 18 2E        	jr 7F
 218+ 935A
 219+ 935A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 935A
 221+ 935A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 935B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 935C 3A C1 89     	ld a,(Ctrl_0)
 224+ 935F CB 4F        	bit 1,a
 225+ 9361 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9363 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9364
 228+ 9364              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9364
 230+ 9364 1C               inc e
 231+ 9365 1D               dec e
 232+ 9366 20 07            jr nz,12F
 233+ 9368 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9369 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 936A 22 95 89     	ld (Posicion_actual),hl
 236+ 936D 18 44        13 jr 9F
 237+ 936F CB 43        12 bit 0,e
 238+ 9371 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9373              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9373 C1           	pop bc
 241+ 9374 18 D3        	jr 3B
 242+ 9376 80           14 add b
 243+ 9377 6F               ld l,a
 244+ 9378 22 95 89     	ld (Posicion_actual),hl
 245+ 937B CD D6 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 937E 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9380 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9382 32 C1 89         ld (Ctrl_0),a
 249+ 9385 F1           	pop af
 250+ 9386 18 2B        	jr 9F
 251+ 9388
 252+ 9388              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9388
 254+ 9388 F5           7 push af
 255+ 9389 3A C1 89     	ld a,(Ctrl_0)
 256+ 938C CB 47        	bit 0,a
 257+ 938E 20 1D        	jr nz,8F
 258+ 9390 F1           	pop af
 259+ 9391
 260+ 9391              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9391
 262+ 9391 1C           	inc e
 263+ 9392 1D               dec e
 264+ 9393 20 07            jr nz,10F
 265+ 9395 90           	sub b
 266+ 9396 6F               ld l,a
 267+ 9397 22 95 89     	ld (Posicion_actual),hl
 268+ 939A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 939C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 939C CB 43        10 bit 0,e
 271+ 939E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 93A0              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 93A0 C1           	pop bc
 274+ 93A1 18 A6        	jr 3B
 275+ 93A3 90           16 sub b
 276+ 93A4 6F               ld l,a
 277+ 93A5 22 95 89     	ld (Posicion_actual),hl
 278+ 93A8 CD D6 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 93AB 18 06            jr 9F
 280+ 93AD E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 93AF 32 C1 89         ld (Ctrl_0),a
 282+ 93B2 F1           	pop af
 283+ 93B3 C1           9 pop bc
 284+ 93B4 1E 00        	ld e,0
 285+ 93B6 CD E6 93         call Inicializacion
 286+ 93B9 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 93BA 08           	ex af,af
 288+ 93BB F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 93BC 18 8B            jr 3B
 290+ 93BE
 291+ 93BE              ; --------------------
 292+ 93BE
 293+ 93BE 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 93C0 CD 3A 95     1 call PreviousScan
 295+ 93C3 10 FB            djnz 1B
 296+ 93C5 22 95 89     	ld (Posicion_actual),hl
 297+ 93C8 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 93C9 C9           	ret
 299+ 93CA
 300+ 93CA              ; --------------------
 301+ 93CA
 302+ 93CA 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 93CC CD 2B 95     1 call NextScan
 304+ 93CF 10 FB            djnz 1B
 305+ 93D1 22 95 89     	ld (Posicion_actual),hl
 306+ 93D4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 93D5 C9           	ret
 308+ 93D6
 309+ 93D6              ; --------------------
 310+ 93D6              ;
 311+ 93D6              ;	22/01/23
 312+ 93D6              ;
 313+ 93D6              ;	E="1". Hemos cambiado de cuadrante.
 314+ 93D6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 93D6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 93D6
 317+ 93D6
 318+ 93D6              Modificaccionne
 319+ 93D6
 320+ 93D6 3A A7 89     	ld a,(Cuad_objeto)
 321+ 93D9 FE 02        	cp 2
 322+ 93DB CC BE 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 93DE DC BE 93         call c,Modifica_Pos_actual
 324+ 93E1 C8           	ret z
 325+ 93E2 CD CA 93         call Modifica_Pos_actual2
 326+ 93E5 C9               ret
 327+ 93E6
 328+ 93E6              ; *************************************************************************************************************************************************************************************************
 329+ 93E6              ;
 330+ 93E6              ;	13/8/22
 331+ 93E6              ;
 332+ 93E6              ;	Inicializacion
 333+ 93E6              ;
 334+ 93E6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 93E6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 93E6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 93E6              ;
 338+ 93E6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 93E6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 93E6              ;	_ desaparece/aparece.
 341+ 93E6
 342+ 93E6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 93E6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 93E6              ;
 345+ 93E6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 93E6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 93E6              ; 		   [E] ="0"
 348+ 93E6
 349+ 93E6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 93E6
 351+ 93E6 CD EB 97     Inicializacion call calcula_tercio
 352+ 93E9 28 36        	jr z,primit
 353+ 93EB E6 02        	and 2
 354+ 93ED 20 07        	jr nz,segmit
 355+ 93EF 7D           	ld a,l
 356+ 93F0 FE 7F        	cp $7f
 357+ 93F2 38 2D        	jr c,primit
 358+ 93F4 28 2B        	jr z,primit
 359+ 93F6 CD 53 94     segmit call column
 360+ 93F9 38 13        	jr c,tercuad
 361+ 93FB 3E 04        cuarcuad ld a,4
 362+ 93FD 32 A7 89     	ld (Cuad_objeto),a
 363+ 9400 21 20 48     	ld hl,$4820
 364+ 9403 22 CC 89     	ld (Limite_horizontal),hl
 365+ 9406 21 CE 89     	ld hl,Limite_vertical
 366+ 9409 36 0D        	ld (hl),$0d
 367+ 940B 08           	ex af,af
 368+ 940C 18 3C        	jr 1F
 369+ 940E              tercuad
 370+ 940E 3E 03        	ld a,3
 371+ 9410 32 A7 89     	ld (Cuad_objeto),a
 372+ 9413 21 20 48     	ld hl,$4820
 373+ 9416 22 CC 89     	ld (Limite_horizontal),hl
 374+ 9419 21 CE 89     	ld hl,Limite_vertical
 375+ 941C 36 12        	ld (hl),$12
 376+ 941E 08           	ex af,af
 377+ 941F 18 29        	jr 1F
 378+ 9421 CD 53 94     primit call column
 379+ 9424 38 13        	jr c, primcuad
 380+ 9426              segcuad
 381+ 9426 3E 02        	ld a,2
 382+ 9428 32 A7 89     	ld (Cuad_objeto),a
 383+ 942B 21 C0 4F     	ld hl,$4fc0
 384+ 942E 22 CC 89     	ld (Limite_horizontal),hl
 385+ 9431 21 CE 89     	ld hl,Limite_vertical
 386+ 9434 36 0D        	ld (hl),$0d
 387+ 9436 08           	ex af,af
 388+ 9437 18 11        	jr 1F
 389+ 9439              primcuad
 390+ 9439 3E 01        	ld a,1
 391+ 943B 32 A7 89     	ld (Cuad_objeto),a
 392+ 943E 21 C0 4F     	ld hl,$4fc0
 393+ 9441 22 CC 89     	ld (Limite_horizontal),hl
 394+ 9444 21 CE 89     	ld hl,Limite_vertical
 395+ 9447 36 12        	ld (hl),$12
 396+ 9449 08           	ex af,af
 397+ 944A CD 57 9B     1 call Genera_coordenadas
 398+ 944D 21 C1 89     	ld hl,Ctrl_0
 399+ 9450 CB EE        	set 5,(hl)
 400+ 9452 C9           	ret
 401+ 9453
 402+ 9453              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9453
 404+ 9453              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9453              ;
 406+ 9453              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9453
 408+ 9453 7D           column ld a,l
 409+ 9454 E6 1F        	and $1f
 410+ 9456 FE 10         	cp $10
 411+ 9458 C9            	ret
 412+ 9459
 413+ 9459              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9459              ;
 415+ 9459              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9459              ;
 417+ 9459              ; 14/12/22
 418+ 9459              ;
 419+ 9459              ;	Modifica: A y BC.
 420+ 9459
 421+ 9459 3A A7 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 945C E6 01        	and 1
 423+ 945E 28 17        	jr z,1F
 424+ 9460
 425+ 9460              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9460
 427+ 9460 3A 99 89     	ld a,(Coordenada_X)
 428+ 9463 47           	ld b,a
 429+ 9464 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9465 79           	ld a,c
 431+ 9466 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9467 38 08        	jr c,2F
 433+ 9469 47           	ld b,a
 434+ 946A 79           	ld a,c
 435+ 946B 90           	sub b
 436+ 946C 32 CB 89     	ld (Columnas),a
 437+ 946F 18 1B        	jr 4F
 438+ 9471 79           2 ld a,c
 439+ 9472 32 CB 89     	ld (Columnas),a
 440+ 9475 18 15        	jr 4F
 441+ 9477
 442+ 9477              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9477
 444+ 9477 3A 99 89     1 ld a,(Coordenada_X)
 445+ 947A 81           	add c
 446+ 947B 3D           	dec a
 447+ 947C D6 1F        	sub $1f
 448+ 947E 38 08        	jr c,3F
 449+ 9480 47           	ld b,a
 450+ 9481 79           	ld a,c
 451+ 9482 90           	sub b
 452+ 9483 32 CB 89     	ld (Columnas),a
 453+ 9486 18 04        	jr 4F
 454+ 9488 79           3 ld a,c
 455+ 9489 32 CB 89     	ld (Columnas),a
 456+ 948C D9           4 exx
 457+ 948D 4F           	ld c,a
 458+ 948E D9           	exx
 459+ 948F C9            ret
 460+ 9490
 461+ 9490              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9490              ;
 463+ 9490              ; 7/1/23
 464+ 9490              ;
 465+ 9490              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9490              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9490              ;
 468+ 9490              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9490              ;	DESTRUYE: HL,B Y A.
 470+ 9490
 471+ 9490 3A A7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9493 FE 02        	cp 2
 473+ 9495 38 18        	jr c,1F
 474+ 9497 28 16        	jr z,1F
 475+ 9499 E6 01        	and 1
 476+ 949B 28 0D        	jr z,3F
 477+ 949D
 478+ 949D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 949D
 480+ 949D CD D9 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 94A0
 482+ 94A0 7D           9 ld a,l
 483+ 94A1 E6 1F        	and $1f
 484+ 94A3 28 2A        	jr z,7F
 485+ 94A5 2B           	dec hl
 486+ 94A6 10 F8        	djnz 9B
 487+ 94A8 18 25        	jr 7F
 488+ 94AA
 489+ 94AA              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 94AA
 491+ 94AA 2A 95 89     3 ld hl,(Posicion_actual)
 492+ 94AD 18 20        	jr 7F
 493+ 94AF
 494+ 94AF 28 14        1 jr z,2F
 495+ 94B1
 496+ 94B1              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 94B1
 498+ 94B1 CD D9 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 94B4
 500+ 94B4 7D           4 ld a,l
 501+ 94B5 E6 1F        	and $1f
 502+ 94B7 28 03        	jr z,6F
 503+ 94B9 2B           	dec hl
 504+ 94BA 10 F8        	djnz 4B
 505+ 94BC 06 0F        6 ld b,15
 506+ 94BE CD 3A 95     5 call PreviousScan
 507+ 94C1 10 FB        	djnz 5B
 508+ 94C3 18 0A        	jr 7F
 509+ 94C5
 510+ 94C5              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 94C5
 512+ 94C5 CD D9 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 94C8 06 0F        	ld b,15
 514+ 94CA CD 3A 95     8 call PreviousScan
 515+ 94CD 10 FB        	djnz 8B
 516+ 94CF
 517+ 94CF E5           7 push hl
 518+ 94D0 DD E1        	pop ix
 519+ 94D2
 520+ 94D2 2A 97 89     	ld hl,(Puntero_objeto)
 521+ 94D5 E5           	push hl
 522+ 94D6 FD E1        	pop iy
 523+ 94D8
 524+ 94D8 C9           	ret
 525+ 94D9
 526+ 94D9              ; --------------------------------------------------------------------------------------------------------------------
 527+ 94D9              ;
 528+ 94D9              ;	2/1/23
 529+ 94D9              ;
 530+ 94D9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 94D9              ;
 532+ 94D9              ;	Tras esta rutina tenemos:
 533+ 94D9              ;
 534+ 94D9              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 94D9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 94D9              ;
 537+ 94D9              ;	DESTRUYE!!!!! HL,B y A.
 538+ 94D9
 539+ 94D9 2A 95 89     Operandos ld hl,(Posicion_actual)
 540+ 94DC 3A CB 89     	ld a,(Columnas)
 541+ 94DF 3D           	dec a
 542+ 94E0 20 01        	jr nz,1F
 543+ 94E2 3C           	inc a
 544+ 94E3 47           1 ld b,a
 545+ 94E4 C9           	ret
 546+ 94E5
 547+ 94E5              ; --------------------------------------------------------------------------------------------------------------------
 548+ 94E5              ;
 549+ 94E5              ;	3/1/23
 550+ 94E5              ;
 551+ 94E5              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 94E5              ;
 553+ 94E5              ;	Destruye: A,B,HL y DE.
 554+ 94E5
 555+ 94E5              Define_rutina_de_impresion
 556+ 94E5
 557+ 94E5 3A 94 89     	ld a,(Columns)
 558+ 94E8 47           	ld b,a
 559+ 94E9 3A CB 89     	ld a,(Columnas)
 560+ 94EC B8           	cp b
 561+ 94ED 20 0D        	jr nz,2f
 562+ 94EF
 563+ 94EF              ;	La entidad se imprime entera.
 564+ 94EF
 565+ 94EF 21 BB 95     	ld hl, Indice_entidades_completas
 566+ 94F2 E6 01        	and 1
 567+ 94F4 28 02        	jr z,1F
 568+ 94F6
 569+ 94F6 23           	inc hl
 570+ 94F7 23           	inc hl
 571+ 94F8
 572+ 94F8 CD F9 8C     1 call Extrae_address
 573+ 94FB C9           	ret		;	ret
 574+ 94FC
 575+ 94FC              ;	La entidad no se imprime entera en pantalla.
 576+ 94FC
 577+ 94FC 3A A7 89     2 ld a,(Cuad_objeto)
 578+ 94FF E6 01        	and 1
 579+ 9501 28 17        	jr z,3F
 580+ 9503
 581+ 9503              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 9503
 583+ 9503 21 BF 95     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 9506 3A 94 89     4 ld a,(Columns)
 585+ 9509 E6 01        	and 1
 586+ 950B 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 950D
 588+ 950D 23           	inc hl
 589+ 950E 23           	inc hl
 590+ 950F
 591+ 950F 3A CB 89     	ld a,(Columnas)
 592+ 9512 E6 01        	and 1
 593+ 9514 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 9516
 595+ 9516 23           	inc hl
 596+ 9517 23           	inc hl
 597+ 9518
 598+ 9518 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 951A
 600+ 951A 21 C5 95     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 951D 18 E7        	jr 4B
 602+ 951F
 603+ 951F              ; --------------------------------------------------------------------------------------------------------------------
 604+ 951F              ;
 605+ 951F              ;	Prepara_draw
 606+ 951F              ;
 607+ 951F              ;	Es una rutina de carga.
 608+ 951F              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 951F              ;
 610+ 951F              ;	FUNCIONAMIENTO:
 611+ 951F              ;
 612+ 951F              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 951F              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 951F              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 951F              ;
 616+ 951F              ;	DESTRUYE:
 617+ 951F              ;
 618+ 951F              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 951F
 620+ 951F 21 93 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 9522 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 9523 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 9524 4E           	ld c,(hl)
 624+ 9525 2A 95 89     	ld hl,(Posicion_actual)
 625+ 9528 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 952A C9           	ret
 627+ 952B
 628+ 952B              ;----------------------------------------------------------------------------------------------------------------
 629+ 952B              ;
 630+ 952B              ;	5/08/22
 631+ 952B              ;
 632+ 952B              ;   NextScan.
 633+ 952B              ;
 634+ 952B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 952B              ;
 636+ 952B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 952B              ;
 638+ 952B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 952B              ;
 640+ 952B              ;       DESTRUIDOS: AF y HL !!!
 641+ 952B              ;
 642+ 952B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 952B              ;
 644+ 952B
 645+ 952B 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 952C 7C               ld a,h
 647+ 952D E6 07            and 7
 648+ 952F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 9530
 650+ 9530 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 9531 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 9533 6F               ld l,a
 653+ 9534 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9535
 655+ 9535 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9536 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9538 67               ld h,a
 658+ 9539 C9               ret
 659+ 953A
 660+ 953A              ;----------------------------------------------------------------------------------------------------------------
 661+ 953A              ;
 662+ 953A              ;	5/08/22
 663+ 953A              ;
 664+ 953A              ;   PreviousScan.
 665+ 953A              ;
 666+ 953A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 953A              ;
 668+ 953A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 953A              ;
 670+ 953A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 953A              ;
 672+ 953A              ;       DESTRUIDOS: AF y HL !!!
 673+ 953A              ;
 674+ 953A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 953A              ;
 676+ 953A
 677+ 953A 7C           PreviousScan ld a,h
 678+ 953B 25               dec h               ; Dec H.
 679+ 953C E6 07            and 7
 680+ 953E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 953F
 682+ 953F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 9540 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9542 6F               ld l,a
 685+ 9543 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9544
 687+ 9544 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9545 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9547 67               ld h,a
 690+ 9548 C9               ret
 691+ 9549
 692+ 9549              ; -----------------------------------------------------------------------------------
 693+ 9549              ;
 694+ 9549              ;	28/2/23
 695+ 9549              ;
 696+ 9549              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9549              ;	Extrae fotos de Album_de_fotos.
 698+ 9549
 699+ 9549 3A DD 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 954C A7           	and a
 701+ 954D C8           	ret z
 702+ 954E ED 73 E2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9552 31 00 70     	ld sp,Album_de_fotos
 704+ 9555
 705+ 9555 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9557 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9558 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9559
 709+ 9559 ED 73 E4 89  	ld (Stack_2),sp
 710+ 955D ED 7B E2 89  	ld sp,(Stack)
 711+ 9561
 712+ 9561              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9561
 714+ 9561 3E CD        	ld a,$cd
 715+ 9563 32 6B 95     	ld (Imprime),a
 716+ 9566 EB           	ex de,hl
 717+ 9567 22 6C 95     	ld (Imprime+1),hl
 718+ 956A EB           	ex de,hl
 719+ 956B
 720+ 956B              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 956B
 722+ 956B 00 00 00     Imprime db 0,0,0
 723+ 956E
 724+ 956E 3A DD 89     	ld a,(Numero_de_malotes)
 725+ 9571 3D           	dec a
 726+ 9572 28 09        	jr z,1F
 727+ 9574 32 DD 89      	ld (Numero_de_malotes),a
 728+ 9577
 729+ 9577 ED 7B E4 89   	ld sp,(Stack_2)
 730+ 957B 18 D8        	jr 2B
 731+ 957D
 732+ 957D AF           1 xor a
 733+ 957E 32 E4 89     	ld (Stack_2),a
 734+ 9581 C9           	ret
 735+ 9582
 736+ 9582              ; -----------------------------------------------------------------------------------
 737+ 9582              ;
 738+ 9582              ;	28/2/23
 739+ 9582              ;
 740+ 9582              ;	Pinta los disparos generados.
 741+ 9582
 742+ 9582              Extrae_foto_disparos
 743+ 9582
 744+ 9582 3A EA 89     	ld a,(Numero_de_disparotes)
 745+ 9585 A7           	and a
 746+ 9586 C8           	ret z
 747+ 9587 ED 73 E2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 958B 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 958E
 750+ 958E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9590 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9591 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9592
 754+ 9592 ED 73 E4 89  	ld (Stack_2),sp
 755+ 9596 ED 7B E2 89  	ld sp,(Stack)
 756+ 959A
 757+ 959A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 959A
 759+ 959A 3E CD        	ld a,$cd
 760+ 959C 32 A4 95     	ld (Imprime2),a
 761+ 959F EB           	ex de,hl
 762+ 95A0 22 A5 95     	ld (Imprime2+1),hl
 763+ 95A3 EB           	ex de,hl
 764+ 95A4
 765+ 95A4              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 95A4
 767+ 95A4 00 00 00     Imprime2 db 0,0,0
 768+ 95A7
 769+ 95A7 3A EA 89     	ld a,(Numero_de_disparotes)
 770+ 95AA 3D           	dec a
 771+ 95AB 28 09        	jr z,1F
 772+ 95AD 32 EA 89      	ld (Numero_de_disparotes),a
 773+ 95B0
 774+ 95B0 ED 7B E4 89  	ld sp,(Stack_2)
 775+ 95B4 18 D8        	jr 2B
 776+ 95B6
 777+ 95B6 AF           1 xor a
 778+ 95B7 32 E4 89     	ld (Stack_2),a
 779+ 95BA C9           	ret
 780+ 95BB
# file closed: Draw_XOR.asm
1216  95BB              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95BB              ;   índices de Rutinas de impresión.
   2+ 95BB
   3+ 95BB CB 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95BD F8 95            defw Pinta_Amadeus_3x2
   5+ 95BF
   6+ 95BF 4E 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95C1 EE 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95C3 A2 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95C5
  10+ 95C5 78 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95C7 7C 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95C9 30 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95CB
  14+ 95CB
  15+ 95CB              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95CB              ;
  17+ 95CB              ;   12/12/22
  18+ 95CB              ;
  19+ 95CB              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95CB              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95CB              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95CB              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95CB              ;
  24+ 95CB              ;   Modifica: DE y HL.
  25+ 95CB
  26+ 95CB ED 73 E2 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95CF FD F9        	ld sp,iy
  28+ 95D1 06 10            ld b,16
  29+ 95D3 D1           1 pop de
  30+ 95D4 7B               ld a,e
  31+ 95D5 AE               xor (hl)
  32+ 95D6 77           	ld (hl),a
  33+ 95D7 23           	inc hl
  34+ 95D8 7A               ld a,d
  35+ 95D9 AE               xor (hl)
  36+ 95DA 77           	ld (hl),a
  37+ 95DB 2B           	dec hl
  38+ 95DC 24           	inc h
  39+ 95DD 7C               ld a,h
  40+ 95DE E6 07            and 7
  41+ 95E0 20 0A            jr nz,2F
  42+ 95E2 7D               ld a,l
  43+ 95E3 C6 20            add a,$20
  44+ 95E5 6F               ld l,a
  45+ 95E6 38 04            jr c,2F
  46+ 95E8 7C               ld a,h
  47+ 95E9 D6 08            sub 8
  48+ 95EB 67               ld h,a
  49+ 95EC 7C           2 ld a,h
  50+ 95ED FE 58            cp $58
  51+ 95EF 28 02            jr z,3F
  52+ 95F1 10 E0            djnz 1B
  53+ 95F3 ED 7B E2 89  3 ld sp,(Stack)
  54+ 95F7 C9           	ret
  55+ 95F8
  56+ 95F8 ED 73 E2 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95FC FD F9        	ld sp,iy
  58+ 95FE 06 08            ld b,8
  59+ 9600 D1           1 pop de
  60+ 9601 7B               ld a,e
  61+ 9602 AE               xor (hl)
  62+ 9603 77           	ld (hl),a
  63+ 9604 23           	inc hl
  64+ 9605 7A               ld a,d
  65+ 9606 AE               xor (hl)
  66+ 9607 77           	ld (hl),a
  67+ 9608 23           	inc hl
  68+ 9609 D1           	pop de
  69+ 960A 7B               ld a,e
  70+ 960B AE               xor (hl)
  71+ 960C 77           	ld (hl),a
  72+ 960D 2B           	dec hl
  73+ 960E 2B           	dec hl
  74+ 960F 24           	inc h
  75+ 9610 7C               ld a,h
  76+ 9611 E6 07            and 7
  77+ 9613 20 0A            jr nz,2F
  78+ 9615 7D               ld a,l
  79+ 9616 C6 20            add a,$20
  80+ 9618 6F               ld l,a
  81+ 9619 38 04            jr c,2F
  82+ 961B 7C               ld a,h
  83+ 961C D6 08            sub 8
  84+ 961E 67               ld h,a
  85+ 961F 7C           2 ld a,h
  86+ 9620 FE 58            cp $58
  87+ 9622 28 25            jr z,4F
  88+ 9624 7A               ld a,d
  89+ 9625 AE               xor (hl)
  90+ 9626 77               ld (hl),a
  91+ 9627 D1           	pop de
  92+ 9628 23           	inc hl
  93+ 9629 7B               ld a,e
  94+ 962A AE               xor (hl)
  95+ 962B 77           	ld (hl),a
  96+ 962C 23           	inc hl
  97+ 962D 7A               ld a,d
  98+ 962E AE               xor (hl)
  99+ 962F 77           	ld (hl),a
 100+ 9630 2B           	dec hl
 101+ 9631 2B           	dec hl
 102+ 9632 24           	inc h
 103+ 9633 7C               ld a,h
 104+ 9634 E6 07            and 7
 105+ 9636 20 0A            jr nz,3F
 106+ 9638 7D               ld a,l
 107+ 9639 C6 20            add a,$20
 108+ 963B 6F               ld l,a
 109+ 963C 38 04            jr c,3F
 110+ 963E 7C               ld a,h
 111+ 963F D6 08            sub 8
 112+ 9641 67               ld h,a
 113+ 9642 7C           3 ld a,h
 114+ 9643 FE 58            cp $58
 115+ 9645 28 02            jr z,4F
 116+ 9647 10 B7            djnz 1B
 117+ 9649 ED 7B E2 89  4 ld sp,(Stack)
 118+ 964D C9           	ret
 119+ 964E
 120+ 964E              ; ---------------------------------------------------
 121+ 964E
 122+ 964E ED 73 E2 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9652 FD F9        	ld sp,iy
 124+ 9654
 125+ 9654              ; >>>
 126+ 9654
 127+ 9654 06 10            ld b,16
 128+ 9656 D1           1 pop de
 129+ 9657 7A           	ld a,d
 130+ 9658 AE           	xor (hl)
 131+ 9659 77           	ld (hl),a
 132+ 965A 24           	inc h
 133+ 965B 7C               ld a,h
 134+ 965C E6 07            and 7
 135+ 965E 20 0C            jr nz,2F
 136+ 9660 7D               ld a,l
 137+ 9661 C6 20            add a,$20
 138+ 9663 6F               ld l,a
 139+ 9664 38 06            jr c,2F
 140+ 9666 7C               ld a,h
 141+ 9667 D6 08            sub 8
 142+ 9669 67               ld h,a
 143+ 966A 18 00            jr 2F
 144+ 966C 7C           2 ld a,h
 145+ 966D FE 58            cp $58
 146+ 966F 28 02            jr z,3F
 147+ 9671 10 E3            djnz 1B
 148+ 9673 ED 7B E2 89  3 ld sp,(Stack)
 149+ 9677 C9           	ret
 150+ 9678
 151+ 9678 ED 73 E2 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 967C FD F9        	ld sp,iy
 153+ 967E
 154+ 967E              ; >>>
 155+ 967E
 156+ 967E 06 10            ld b,16
 157+ 9680 D1           1 pop de
 158+ 9681 7B           	ld a,e
 159+ 9682 AE           	xor (hl)
 160+ 9683 77           	ld (hl),a
 161+ 9684 24           	inc h
 162+ 9685 7C               ld a,h
 163+ 9686 E6 07            and 7
 164+ 9688 20 0C            jr nz,2F
 165+ 968A 7D               ld a,l
 166+ 968B C6 20            add a,$20
 167+ 968D 6F               ld l,a
 168+ 968E 38 06            jr c,2F
 169+ 9690 7C               ld a,h
 170+ 9691 D6 08            sub 8
 171+ 9693 67               ld h,a
 172+ 9694 18 00            jr 2F
 173+ 9696 7C           2 ld a,h
 174+ 9697 FE 58            cp $58
 175+ 9699 28 02            jr z,3F
 176+ 969B 10 E3            djnz 1B
 177+ 969D ED 7B E2 89  3 ld sp,(Stack)
 178+ 96A1 C9           	ret
 179+ 96A2
 180+ 96A2              ; ---------------------------------------------------
 181+ 96A2
 182+ 96A2 ED 73 E2 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96A6 FD F9        	ld sp,iy
 184+ 96A8 06 08            ld b,8
 185+ 96AA D1           1 pop de
 186+ 96AB 7A           	ld a,d
 187+ 96AC AE           	xor (hl)
 188+ 96AD 77           	ld (hl),a
 189+ 96AE 23           	inc hl
 190+ 96AF D1           	pop de
 191+ 96B0 7B           	ld a,e
 192+ 96B1 AE           	xor (hl)
 193+ 96B2 77           	ld (hl),a
 194+ 96B3 2B           	dec hl
 195+ 96B4 24            	inc h
 196+ 96B5 7C               ld a,h
 197+ 96B6 E6 07            and 7
 198+ 96B8 20 0A            jr nz,2F
 199+ 96BA 7D               ld a,l
 200+ 96BB C6 20            add a,$20
 201+ 96BD 6F               ld l,a
 202+ 96BE 38 04            jr c,2F
 203+ 96C0 7C               ld a,h
 204+ 96C1 D6 08            sub 8
 205+ 96C3 67               ld h,a
 206+ 96C4 7C           2 ld a,h
 207+ 96C5 FE 58            cp $58
 208+ 96C7 28 20            jr z,4F
 209+ 96C9 D1               pop de
 210+ 96CA 7B           	ld a,e
 211+ 96CB AE           	xor (hl)
 212+ 96CC 77           	ld (hl),a
 213+ 96CD 23           	inc hl
 214+ 96CE 7A           	ld a,d
 215+ 96CF AE           	xor (hl)
 216+ 96D0 77           	ld (hl),a
 217+ 96D1 2B           	dec hl
 218+ 96D2 24           	inc h
 219+ 96D3 7C               ld a,h
 220+ 96D4 E6 07            and 7
 221+ 96D6 20 0A            jr nz,3F
 222+ 96D8 7D               ld a,l
 223+ 96D9 C6 20            add a,$20
 224+ 96DB 6F               ld l,a
 225+ 96DC 38 04            jr c,3F
 226+ 96DE 7C               ld a,h
 227+ 96DF D6 08            sub 8
 228+ 96E1 67               ld h,a
 229+ 96E2 7C           3 ld a,h
 230+ 96E3 FE 58            cp $58
 231+ 96E5 28 02            jr z,4F
 232+ 96E7 10 C1            djnz 1B
 233+ 96E9 ED 7B E2 89  4 ld sp,(Stack)
 234+ 96ED C9           	ret
 235+ 96EE
 236+ 96EE ED 73 E2 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96F2 FD F9        	ld sp,iy
 238+ 96F4 06 08            ld b,8
 239+ 96F6 D1           1 pop de
 240+ 96F7 D1           	pop de
 241+ 96F8 7B           	ld a,e
 242+ 96F9 AE           	xor (hl)
 243+ 96FA 77           	ld (hl),a
 244+ 96FB 24            	inc h
 245+ 96FC 7C               ld a,h
 246+ 96FD E6 07            and 7
 247+ 96FF 20 0A            jr nz,2F
 248+ 9701 7D               ld a,l
 249+ 9702 C6 20            add a,$20
 250+ 9704 6F               ld l,a
 251+ 9705 38 04            jr c,2F
 252+ 9707 7C               ld a,h
 253+ 9708 D6 08            sub 8
 254+ 970A 67               ld h,a
 255+ 970B 7C           2 ld a,h
 256+ 970C FE 58            cp $58
 257+ 970E 28 1B            jr z,4F
 258+ 9710 D1               pop de
 259+ 9711 7A           	ld a,d
 260+ 9712 AE           	xor (hl)
 261+ 9713 77           	ld (hl),a
 262+ 9714 24           	inc h
 263+ 9715 7C               ld a,h
 264+ 9716 E6 07            and 7
 265+ 9718 20 0A            jr nz,3F
 266+ 971A 7D               ld a,l
 267+ 971B C6 20            add a,$20
 268+ 971D 6F               ld l,a
 269+ 971E 38 04            jr c,3F
 270+ 9720 7C               ld a,h
 271+ 9721 D6 08            sub 8
 272+ 9723 67               ld h,a
 273+ 9724 7C           3 ld a,h
 274+ 9725 FE 58            cp $58
 275+ 9727 28 02            jr z,4F
 276+ 9729 10 CB            djnz 1B
 277+ 972B ED 7B E2 89  4 ld sp,(Stack)
 278+ 972F C9           	ret
 279+ 9730
 280+ 9730 ED 73 E2 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9734 FD F9        	ld sp,iy
 282+ 9736 06 08            ld b,8
 283+ 9738 D1           1 pop de
 284+ 9739 7B           	ld a,e
 285+ 973A AE           	xor (hl)
 286+ 973B 77           	ld (hl),a
 287+ 973C 23           	inc hl
 288+ 973D 7A           	ld a,d
 289+ 973E AE           	xor (hl)
 290+ 973F 77           	ld (hl),a
 291+ 9740 2B           	dec hl
 292+ 9741 24             	inc h
 293+ 9742 7C               ld a,h
 294+ 9743 E6 07            and 7
 295+ 9745 20 0A            jr nz,2F
 296+ 9747 7D               ld a,l
 297+ 9748 C6 20            add a,$20
 298+ 974A 6F               ld l,a
 299+ 974B 38 04            jr c,2F
 300+ 974D 7C               ld a,h
 301+ 974E D6 08            sub 8
 302+ 9750 67               ld h,a
 303+ 9751 7C           2 ld a,h
 304+ 9752 FE 58            cp $58
 305+ 9754 28 21            jr z,4F
 306+ 9756 D1               pop de
 307+ 9757 7A           	ld a,d
 308+ 9758 AE           	xor (hl)
 309+ 9759 77           	ld (hl),a
 310+ 975A 23           	inc hl
 311+ 975B D1               pop de
 312+ 975C 7B           	ld a,e
 313+ 975D AE           	xor (hl)
 314+ 975E 77           	ld (hl),a
 315+ 975F 2B           	dec hl
 316+ 9760 24           	inc h
 317+ 9761 7C               ld a,h
 318+ 9762 E6 07            and 7
 319+ 9764 20 0A            jr nz,3F
 320+ 9766 7D               ld a,l
 321+ 9767 C6 20            add a,$20
 322+ 9769 6F               ld l,a
 323+ 976A 38 04            jr c,3F
 324+ 976C 7C               ld a,h
 325+ 976D D6 08            sub 8
 326+ 976F 67               ld h,a
 327+ 9770 7C           3 ld a,h
 328+ 9771 FE 58            cp $58
 329+ 9773 28 02            jr z,4F
 330+ 9775 10 C1            djnz 1B
 331+ 9777 ED 7B E2 89  4 ld sp,(Stack)
 332+ 977B C9           	ret
 333+ 977C
 334+ 977C ED 73 E2 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9780 FD F9        	ld sp,iy
 336+ 9782 06 08            ld b,8
 337+ 9784 D1           1 pop de
 338+ 9785 7B           	ld a,e
 339+ 9786 AE           	xor (hl)
 340+ 9787 77           	ld (hl),a
 341+ 9788 24            	inc h
 342+ 9789 7C               ld a,h
 343+ 978A E6 07            and 7
 344+ 978C 20 0A            jr nz,2F
 345+ 978E 7D               ld a,l
 346+ 978F C6 20            add a,$20
 347+ 9791 6F               ld l,a
 348+ 9792 38 04            jr c,2F
 349+ 9794 7C               ld a,h
 350+ 9795 D6 08            sub 8
 351+ 9797 67               ld h,a
 352+ 9798 7C           2 ld a,h
 353+ 9799 FE 58            cp $58
 354+ 979B 28 1C            jr z,4F
 355+ 979D D1               pop de
 356+ 979E 7A           	ld a,d
 357+ 979F AE           	xor (hl)
 358+ 97A0 77           	ld (hl),a
 359+ 97A1 24           	inc h
 360+ 97A2 7C               ld a,h
 361+ 97A3 E6 07            and 7
 362+ 97A5 20 0A            jr nz,3F
 363+ 97A7 7D               ld a,l
 364+ 97A8 C6 20            add a,$20
 365+ 97AA 6F               ld l,a
 366+ 97AB 38 04            jr c,3F
 367+ 97AD 7C               ld a,h
 368+ 97AE D6 08            sub 8
 369+ 97B0 67               ld h,a
 370+ 97B1 7C           3 ld a,h
 371+ 97B2 FE 58            cp $58
 372+ 97B4 28 03            jr z,4F
 373+ 97B6 D1               pop de
 374+ 97B7 10 CB            djnz 1B
 375+ 97B9 ED 7B E2 89  4 ld sp,(Stack)
 376+ 97BD C9           	ret
 377+ 97BE
 378+ 97BE              ; ---------------------------------------------------
 379+ 97BE              ;
 380+ 97BE              ;   27/02/23
 381+ 97BE              ;
 382+ 97BE              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97BE              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97BE              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97BE
 386+ 97BE ED 73 E2 89  Pinta_Disparo ld (Stack),sp
 387+ 97C2 FD F9            ld sp,iy
 388+ 97C4 06 02            ld b,2
 389+ 97C6 D1           1 pop de
 390+ 97C7 7B               ld a,e
 391+ 97C8 AE               xor (hl)
 392+ 97C9 77               ld (hl),a
 393+ 97CA 23               inc hl
 394+ 97CB 7A               ld a,d
 395+ 97CC AE               xor (hl)
 396+ 97CD 77               ld (hl),a
 397+ 97CE 2B               dec hl
 398+ 97CF
 399+ 97CF 24               inc h
 400+ 97D0 7C               ld a,h
 401+ 97D1 E6 07            and 7
 402+ 97D3 20 0A            jr nz,2F
 403+ 97D5 7D               ld a,l
 404+ 97D6 C6 20            add a,$20
 405+ 97D8 6F               ld l,a
 406+ 97D9 38 04            jr c,2F
 407+ 97DB 7C               ld a,h
 408+ 97DC D6 08            sub 8
 409+ 97DE 67               ld h,a
 410+ 97DF 7C           2 ld a,h
 411+ 97E0 FE 58            cp $58
 412+ 97E2 28 02            jr z,3F
 413+ 97E4
 414+ 97E4 10 E0            djnz 1B
 415+ 97E6 ED 7B E2 89  3 ld sp,(Stack)
 416+ 97EA C9               ret
 417+ 97EB
# file closed: Rutinas_de_impresion_sprites.asm
1217  97EB              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97EB              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97EB              ;
   3+ 97EB              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97EB              ;
   5+ 97EB              ; *****************************************************************************************************************************************************************************************
   6+ 97EB              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97EB
   8+ 97EB 7C           calcula_tercio ld a,h
   9+ 97EC E6 18        	and $18
  10+ 97EE CB 2F        	sra a
  11+ 97F0 CB 2F        	sra a
  12+ 97F2 CB 2F        	sra a
  13+ 97F4 C9           	ret
  14+ 97F5
# file closed: calcula_tercio.asm
1218  97F5              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97F5              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97F5              ;
   3+ 97F5              ;
   4+ 97F5              ;	CLS.
   5+ 97F5              ;
   6+ 97F5              ;	Limpia la pantalla y define sus atributos.
   7+ 97F5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97F5              ;
   9+ 97F5              ;	COLORES: 0 ..... NEGRO
  10+ 97F5              ;    		 1 ..... AZUL
  11+ 97F5              ; 			 2 ..... ROJO
  12+ 97F5              ;			 3 ..... MAGENTA
  13+ 97F5              ; 			 4 ..... VERDE
  14+ 97F5              ; 			 5 ..... CIAN
  15+ 97F5              ;			 6 ..... AMARILLO
  16+ 97F5              ; 			 7 ..... BLANCO
  17+ 97F5              ;
  18+ 97F5              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97F5              ;
  20+ 97F5              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97F5
  22+ 97F5
  23+ 97F5 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97F8 11 01 40     	LD DE,$4001
  25+ 97FB 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97FE 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9800 ED B0        	LDIR
  28+ 9802 01 FF 02     	LD BC,767
  29+ 9805 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9806 ED B0        	LDIR
  31+ 9808 C9           	ret
  32+ 9809
# file closed: Cls.asm
1219  9809              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9809              ; ******************************************************************************************************************************************************************************************
   2+ 9809              ;
   3+ 9809              ;   20/05/23
   4+ 9809              ;
   5+ 9809              ;	Recompone_posicion_inicio
   6+ 9809              ;
   7+ 9809              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9809              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9809              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9809              ;	_ a una u otra rutina.
  11+ 9809
  12+ 9809              Recompone_posicion_inicio
  13+ 9809
  14+ 9809 2A A5 89     	ld hl,(Posicion_inicio)
  15+ 980C 7D           	ld a,l
  16+ 980D E6 1F        	and $1f
  17+ 980F 28 16        	jr z,1F
  18+ 9811
  19+ 9811 FE 1F        	cp $1f
  20+ 9813 28 0D        	jr z,3F
  21+ 9815
  22+ 9815 21 CF 89     	ld hl,Ctrl_2
  23+ 9818 CB C6        	set 0,(hl)
  24+ 981A 2A 97 89     	ld hl,(Puntero_objeto)
  25+ 981D 22 D2 89     	ld (Repone_puntero_objeto),hl
  26+ 9820 18 08        	jr 2F
  27+ 9822
  28+ 9822 CD C3 99     3 call Mov_left
  29+ 9825 18 03        	jr 2F
  30+ 9827
  31+ 9827 CD A5 98     1 call Mov_right
  32+ 982A 21 00 F0     2 ld hl,Sprite_vacio
  33+ 982D 22 97 89     	ld (Puntero_objeto),hl
  34+ 9830 C9           	ret
  35+ 9831
  36+ 9831              ; ******************************************************************************************************************************************************************************************
  37+ 9831              ;
  38+ 9831              ;   27/05/23
  39+ 9831              ;
  40+ 9831              ;	Mov_down
  41+ 9831              ;
  42+ 9831              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9831              ;
  44+ 9831              ;
  45+ 9831              Mov_down
  46+ 9831
  47+ 9831 CD 93 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9834              ;																	; _ repone (Puntero_objeto).
  49+ 9834 21 C1 89     	ld hl,Ctrl_0
  50+ 9837 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9839              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9839              ; 																	; _ en el caso de que no lo haya.
  53+ 9839 3A AB 89     	ld a,(Vel_down)
  54+ 983C 47           	ld b,a
  55+ 983D 2A 95 89         ld hl,(Posicion_actual)
  56+ 9840 CD EB 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9843 E6 02        	and 2
  58+ 9845 28 0F        	jr z,1F
  59+ 9847
  60+ 9847              ; Nos encontramos en el último tercio de pantalla.
  61+ 9847              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9847
  63+ 9847 7C           	ld a,h
  64+ 9848 FE 57        	cp $57
  65+ 984A 20 0A        	jr nz,1F
  66+ 984C 7D           	ld a,l
  67+ 984D C6 20        	add $20
  68+ 984F 30 05        	jr nc,1F
  69+ 9851
  70+ 9851              ; ------------------------------
  71+ 9851 CD 41 9B     	call Reaparece_arriba
  72+ 9854              ;	call Reinicio
  73+ 9854              ; ------------------------------
  74+ 9854
  75+ 9854 18 08        	jr 3F
  76+ 9856 CD 2B 95     1 call NextScan
  77+ 9859 22 95 89     	ld (Posicion_actual),hl
  78+ 985C 10 E2            djnz 2B
  79+ 985E CD 57 9B     3 call Genera_coordenadas
  80+ 9861 C9           	ret
  81+ 9862
  82+ 9862              ; ******************************************************************************************************************************************************************************************
  83+ 9862              ;
  84+ 9862              ;   27/05/23
  85+ 9862              ;
  86+ 9862              ;	Mov_up
  87+ 9862              ;
  88+ 9862              ; 	Mueve el Sprite hacia arriba.
  89+ 9862              ;
  90+ 9862              ;
  91+ 9862              Mov_up
  92+ 9862
  93+ 9862 CD 93 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9865              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9865 21 C1 89     	ld hl,Ctrl_0
  96+ 9868 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 986A              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 986A              ; 																		; _ en el caso de que no lo haya.
  99+ 986A 3A AA 89     	ld a,(Vel_up)
 100+ 986D 47           	ld b,a
 101+ 986E 2A 95 89     	ld hl,(Posicion_actual)
 102+ 9871 CD EB 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9874 A7           	and a
 104+ 9875 20 10        	jr nz,1F
 105+ 9877
 106+ 9877              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9877              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9877
 109+ 9877 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9878 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 987A 20 0B            jr nz,1F
 112+ 987C 7D               ld a,l
 113+ 987D D6 20            sub $20
 114+ 987F 30 06            jr nc,1F
 115+ 9881 25               dec h
 116+ 9882
 117+ 9882              ; -----------------------------
 118+ 9882 CD 31 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9885              ;	call Reinicio
 120+ 9885              ; -----------------------------
 121+ 9885
 122+ 9885 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9887 CD 3A 95     1 call PreviousScan
 124+ 988A 22 95 89     	ld (Posicion_actual),hl
 125+ 988D 10 E2            djnz 3B
 126+ 988F CD 57 9B     2 call Genera_coordenadas
 127+ 9892 C9           	ret
 128+ 9893
 129+ 9893              ; -----------------------------
 130+ 9893              ;
 131+ 9893              ;	27/5/23
 132+ 9893              ;
 133+ 9893              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9893              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9893              ;
 136+ 9893              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9893              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9893              ;
 139+ 9893              ;	Modifica: A y (Puntero_objeto).
 140+ 9893
 141+ 9893 3A CF 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9896 CB 47        	bit 0,a
 143+ 9898 C8           	ret z
 144+ 9899 CB 87        	res 0,a
 145+ 989B 32 CF 89     	ld (Ctrl_2),a
 146+ 989E 2A D2 89     	ld hl,(Repone_puntero_objeto)
 147+ 98A1 22 97 89     	ld (Puntero_objeto),hl
 148+ 98A4 C9           	ret
 149+ 98A5
 150+ 98A5              ; ******************************************************************************************************************************************************************************************
 151+ 98A5              ;
 152+ 98A5              ;	19/10/22
 153+ 98A5              ;
 154+ 98A5              ;	Mov_right.
 155+ 98A5              ;
 156+ 98A5              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 98A5              ;
 158+ 98A5
 159+ 98A5 21 C1 89     Mov_right ld hl,Ctrl_0
 160+ 98A8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 98AA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 98AA              ; 																	; _ en el caso de que no lo haya.
 163+ 98AA 3A C1 89     	ld a,(Ctrl_0)
 164+ 98AD CB 77        	bit 6,a
 165+ 98AF 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 98B1
 167+ 98B1 CD DF 9A     	call Stop_Amadeus_right
 168+ 98B4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 98B5 18 4D        	jr 8F
 170+ 98B7
 171+ 98B7 3A 99 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 98BA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 98BC 20 46        	jr nz,8F
 174+ 98BE
 175+ 98BE 3A 9B 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 98C1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 98C2 28 40        	jr z,8F
 178+ 98C4
 179+ 98C4              ; ---------- ---------- ----------
 180+ 98C4              ;
 181+ 98C4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 98C4
 183+ 98C4 3A A9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 98C7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 98C9 28 11        	jr z,1F
 186+ 98CB 38 06        	jr c,6F
 187+ 98CD FE 04        	cp 4
 188+ 98CF 28 14        	jr z,7F
 189+ 98D1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 98D3
 191+ 98D3              ; ---------- ---------- ----------
 192+ 98D3              ;
 193+ 98D3              ; Perfiles de velocidad
 194+ 98D3              ;
 195+ 98D3
 196+ 98D3 3A 9B 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 98D6 FE FE        	cp $fe
 198+ 98D8 20 2A        	jr nz,8F
 199+ 98DA 18 10        	jr 3F
 200+ 98DC 3A 9B 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 98DF FE FD        	cp $fd
 202+ 98E1 20 21        	jr nz,8F
 203+ 98E3 18 07        	jr 3F
 204+ 98E5 3A 9B 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 98E8 FE FB        	cp $fb
 206+ 98EA 20 18        	jr nz,8F
 207+ 98EC
 208+ 98EC              ; ---------- ---------- ----------
 209+ 98EC
 210+ 98EC              3
 211+ 98EC CD 1F 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 98EF              ;	call Reinicio
 213+ 98EF
 214+ 98EF              ; ---------- ---------- ----------
 215+ 98EF              ;
 216+ 98EF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 98EF
 218+ 98EF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 98F1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 98F2 CD 0B 99     	call DESPLZ_DER
 221+ 98F5 C1           	pop bc
 222+ 98F6 10 F9        	djnz 5B
 223+ 98F8 2A 95 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 98FB 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 98FC 22 95 89     	ld (Posicion_actual),hl
 226+ 98FF CD 57 9B     	call Genera_coordenadas
 227+ 9902 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 9904
 229+ 9904              ; ---------- ---------- ----------
 230+ 9904
 231+ 9904 2A 95 89     8 ld hl,(Posicion_actual)
 232+ 9907 CD 0B 99     	call DESPLZ_DER
 233+ 990A C9           2 ret
 234+ 990B
 235+ 990B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 990B              ;
 237+ 990B              ;	22/9/22
 238+ 990B              ;
 239+ 990B
 240+ 990B CD 1A 99     DESPLZ_DER call Desplaza_derecha
 241+ 990E CD 66 99         call modifica_parametros_1er_DESPLZ_2
 242+ 9911 CD 8F 99         call Ciclo_completo
 243+ 9914 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9917 CB FE        	set 7,(hl)
 245+ 9919 C9           	ret
 246+ 991A
 247+ 991A              ; ******************************************************************************************************************************************************************************************
 248+ 991A              ;	15/02/23
 249+ 991A              ;
 250+ 991A
 251+ 991A 3A A9 89     Desplaza_derecha ld a,(Vel_right)
 252+ 991D 47           	ld b,a
 253+ 991E 2A A1 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9921 23           1 inc hl
 255+ 9922 23           	inc hl
 256+ 9923 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9925 22 A1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9928 CD F9 8C     	call Extrae_address
 259+ 992B 22 97 89     	ld (Puntero_objeto),hl
 260+ 992E
 261+ 992E              ; Modifica (Puntero_DESPLZ_izq).
 262+ 992E
 263+ 992E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 992E              ; Cuántos movimientos hemos hecho ??
 265+ 992E              ; DE contiene (Puntero_DESPLZ_der).
 266+ 992E
 267+ 992E 2A 9D 89     7 ld hl,(Indice_Sprite_der)
 268+ 9931 EB           	ex de,hl
 269+ 9932 A7           	and a
 270+ 9933 ED 52        	sbc hl,de
 271+ 9935 CB 3D        	srl l
 272+ 9937 3E 08        6 ld a,8
 273+ 9939 95           	sub l
 274+ 993A 30 1E        	jr nc,3F
 275+ 993C
 276+ 993C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 993C              ; B="0".
 278+ 993C
 279+ 993C 04           4 inc b
 280+ 993D 3C           	inc a
 281+ 993E 20 FC        	jr nz,4B
 282+ 9940 78           	ld a,b
 283+ 9941 08           	ex af,af
 284+ 9942 2A 9D 89     	ld hl,(Indice_Sprite_der)
 285+ 9945 23           5 inc hl
 286+ 9946 23           	inc hl
 287+ 9947 10 FC        	djnz 5B
 288+ 9949 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 289+ 994C CD F9 8C     	call Extrae_address
 290+ 994F 22 97 89     	ld (Puntero_objeto),hl
 291+ 9952
 292+ 9952              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9952              ; _(Posicion_actual).
 294+ 9952
 295+ 9952 21 95 89     	ld hl,Posicion_actual
 296+ 9955 34           	inc (hl)
 297+ 9956 08               ex af,af
 298+ 9957 6F           	ld l,a
 299+ 9958 18 DD        	jr 6B
 300+ 995A
 301+ 995A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 995A
 303+ 995A 47           3 ld b,a
 304+ 995B 2A 9F 89     	ld hl,(Indice_Sprite_izq)
 305+ 995E 23           2 inc hl
 306+ 995F 23           	inc hl
 307+ 9960 10 FC        	djnz 2B
 308+ 9962 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9965 C9           8 ret
 310+ 9966
 311+ 9966              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9966              ;
 313+ 9966              ;	24/7/22
 314+ 9966              ;
 315+ 9966              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9966              ;
 317+ 9966              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9966              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9966              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9966
 321+ 9966 3A 9B 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9969 A7           	and a
 323+ 996A 20 1F        	jr nz,1F
 324+ 996C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 996E 32 9B 89         ld (CTRL_DESPLZ),a
 326+ 9971
 327+ 9971 21 94 89     	ld hl,Columns
 328+ 9974 34           	inc (hl)
 329+ 9975 3A A7 89     	ld a,(Cuad_objeto)
 330+ 9978 E6 01        	and 1
 331+ 997A 28 0F        	jr z,1F
 332+ 997C 2A 95 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 997F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9980 22 95 89     	ld (Posicion_actual),hl
 335+ 9983 CD 57 9B     	call Genera_coordenadas
 336+ 9986 CD EB 9A     	call Inc_CTRL_DESPLZ
 337+ 9989 18 03        	jr 2F
 338+ 998B CD EB 9A     1 call Inc_CTRL_DESPLZ
 339+ 998E C9           2 ret
 340+ 998F
 341+ 998F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 998F              ;
 343+ 998F              ;	24/7/22
 344+ 998F              ;
 345+ 998F              ;	Ciclo_completo.
 346+ 998F              ;
 347+ 998F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 998F              ;
 349+ 998F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 998F              ; 	Decrementamos (Columns).
 351+ 998F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 998F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 998F
 354+ 998F
 355+ 998F 3A 9B 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9992 FE FF        	cp $ff
 357+ 9994 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9996 E6 F0        	and $f0
 359+ 9998 20 28        	jr nz,3F
 360+ 999A
 361+ 999A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 999A
 363+ 999A 3A 9B 89     	ld a,(CTRL_DESPLZ)
 364+ 999D 47           	ld b,a
 365+ 999E 3E F8        	ld a,$f8
 366+ 99A0 80           	add b
 367+ 99A1 32 9B 89     	ld (CTRL_DESPLZ),a
 368+ 99A4 18 1C        	jr 3F
 369+ 99A6 21 94 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 99A9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 99AA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 99AB 32 9B 89     	ld (CTRL_DESPLZ),a
 373+ 99AE 3A A7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 99B1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 99B3 20 0A        	jr nz,2F
 376+ 99B5 2A 95 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 99B8 23           	inc hl
 378+ 99B9 22 95 89     	ld (Posicion_actual),hl
 379+ 99BC CD 57 9B     	call Genera_coordenadas
 380+ 99BF
 381+ 99BF              ; Inicia el puntero de Sprite.
 382+ 99BF
 383+ 99BF CD 10 8D     2 call Inicia_puntero_objeto_der
 384+ 99C2 C9           3 ret
 385+ 99C3
 386+ 99C3              ; ******************************************************************************************************************************************************************************************
 387+ 99C3              ;
 388+ 99C3              ;	15/02/23
 389+ 99C3              ;
 390+ 99C3              ;	Mov_left.
 391+ 99C3              ;
 392+ 99C3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 99C3              ;
 394+ 99C3 21 C1 89     Mov_left ld hl,Ctrl_0
 395+ 99C6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 99C8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 99C8              ; 																	; _ en el caso de que no lo haya.
 398+ 99C8 3A C1 89     	ld a,(Ctrl_0)
 399+ 99CB CB 77        	bit 6,a
 400+ 99CD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 99CF
 402+ 99CF CD E5 9A     	call Stop_Amadeus_left
 403+ 99D2 C8           	ret z
 404+ 99D3 20 4A        	jr nz,8F
 405+ 99D5
 406+ 99D5 3A 99 89     11 ld a,(Coordenada_X)
 407+ 99D8 A7           	and a
 408+ 99D9 20 44        	jr nz,8F
 409+ 99DB
 410+ 99DB 3A 9B 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 99DE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 99DF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 99E1
 414+ 99E1              ; ---------- ---------- ----------
 415+ 99E1
 416+ 99E1 3A A8 89     	ld a,(Vel_left)
 417+ 99E4 FE 02        	cp 2
 418+ 99E6 28 0F        	jr z,1F
 419+ 99E8 38 04        	jr c,6F
 420+ 99EA FE 04        	cp 4
 421+ 99EC 28 12        	jr z,7F
 422+ 99EE
 423+ 99EE              ; ---------- ---------- ----------
 424+ 99EE
 425+ 99EE 3A 9B 89     6 ld a,(CTRL_DESPLZ)
 426+ 99F1 FE F8        	cp $f8
 427+ 99F3 20 2A        	jr nz,8F
 428+ 99F5 18 10        	jr 4F
 429+ 99F7 3A 9B 89     1 ld a,(CTRL_DESPLZ)
 430+ 99FA FE F9        	cp $f9
 431+ 99FC 20 21        	jr nz,8F
 432+ 99FE 18 07        	jr 4F
 433+ 9A00 3A 9B 89     7 ld a,(CTRL_DESPLZ)
 434+ 9A03 FE FB        	cp $fb
 435+ 9A05 20 18        	jr nz,8F
 436+ 9A07
 437+ 9A07              ; ---------- ---------- ----------
 438+ 9A07
 439+ 9A07              4
 440+ 9A07 CD 0D 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9A0A              ;	call Reinicio
 442+ 9A0A
 443+ 9A0A              ; ---------- ---------- ----------
 444+ 9A0A
 445+ 9A0A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9A0C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9A0D
 448+ 9A0D              ;	ld hl,(Indice_Sprite_izq)
 449+ 9A0D              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9A0D
 451+ 9A0D CD 26 9A     	call DESPLZ_IZQ
 452+ 9A10 C1           	pop bc
 453+ 9A11 10 F9        	djnz 5B
 454+ 9A13 2A 95 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9A16 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9A17 22 95 89     	ld (Posicion_actual),hl
 457+ 9A1A CD 57 9B     	call Genera_coordenadas
 458+ 9A1D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9A1F
 460+ 9A1F              ; ---------- ---------- ----------
 461+ 9A1F
 462+ 9A1F              ; Movemos, no hay recolocación.
 463+ 9A1F
 464+ 9A1F 2A 95 89     8 ld hl,(Posicion_actual)
 465+ 9A22 CD 26 9A     	call DESPLZ_IZQ
 466+ 9A25 C9           2 ret
 467+ 9A26
 468+ 9A26              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9A26              ;
 470+ 9A26              ;	22/9/22
 471+ 9A26
 472+ 9A26              DESPLZ_IZQ
 473+ 9A26
 474+ 9A26 CD 35 9A     	call Desplaza_izquierda
 475+ 9A29 CD 81 9A         call modifica_parametros_1er_DESPLZ
 476+ 9A2C CD A9 9A     	call Ciclo_completo_2
 477+ 9A2F 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9A32 CB BE        	res 7,(hl)
 479+ 9A34 C9           	ret
 480+ 9A35
 481+ 9A35              Desplaza_izquierda
 482+ 9A35
 483+ 9A35 3A A8 89     	ld a,(Vel_left)
 484+ 9A38 47           	ld b,a
 485+ 9A39 2A A3 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9A3C 23           1 inc hl
 487+ 9A3D 23           	inc hl
 488+ 9A3E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9A40 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9A43 CD F9 8C     	call Extrae_address
 491+ 9A46 22 97 89     	ld (Puntero_objeto),hl
 492+ 9A49
 493+ 9A49              ; Modifica (Puntero_DESPLZ_der).
 494+ 9A49
 495+ 9A49              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9A49              ; Cuántos movimientos hemos hecho ??
 497+ 9A49              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9A49
 499+ 9A49 2A 9F 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9A4C EB           	ex de,hl
 501+ 9A4D A7           	and a
 502+ 9A4E ED 52        	sbc hl,de
 503+ 9A50 CB 3D        	srl l
 504+ 9A52 3E 08        6 ld a,8
 505+ 9A54 95           	sub l
 506+ 9A55 30 1E        	jr nc,3F
 507+ 9A57
 508+ 9A57              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9A57              ; B="0".
 510+ 9A57
 511+ 9A57 04           4 inc b
 512+ 9A58 3C           	inc a
 513+ 9A59 20 FC        	jr nz,4B
 514+ 9A5B 78           	ld a,b
 515+ 9A5C 08           	ex af,af
 516+ 9A5D 2A 9F 89     	ld hl,(Indice_Sprite_izq)
 517+ 9A60 23           5 inc hl
 518+ 9A61 23           	inc hl
 519+ 9A62 10 FC        	djnz 5B
 520+ 9A64 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9A67 CD F9 8C     	call Extrae_address
 522+ 9A6A 22 97 89     	ld (Puntero_objeto),hl
 523+ 9A6D
 524+ 9A6D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9A6D              ; _(Posicion_actual).
 526+ 9A6D
 527+ 9A6D 21 95 89     	ld hl,Posicion_actual
 528+ 9A70 35           	dec (hl)
 529+ 9A71 08           	ex af,af
 530+ 9A72 6F           	ld l,a
 531+ 9A73 18 DD        	jr 6B
 532+ 9A75
 533+ 9A75              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9A75
 535+ 9A75 47           3 ld b,a
 536+ 9A76 2A 9D 89     	ld hl,(Indice_Sprite_der)
 537+ 9A79 23           2 inc hl
 538+ 9A7A 23           	inc hl
 539+ 9A7B 10 FC        	djnz 2B
 540+ 9A7D 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9A80 C9           8 ret
 542+ 9A81
 543+ 9A81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9A81              ;
 545+ 9A81              ;	modifica_parametros_1er_DESPLZ
 546+ 9A81              ;
 547+ 9A81              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9A81              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9A81              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9A81
 551+ 9A81 3A 9B 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9A84 A7           	and a
 553+ 9A85 20 1E        	jr nz,1F
 554+ 9A87 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9A88 32 9B 89         ld (CTRL_DESPLZ),a
 556+ 9A8B 21 94 89     	ld hl,Columns
 557+ 9A8E 34           	inc (hl)
 558+ 9A8F 3A A7 89     	ld a,(Cuad_objeto)
 559+ 9A92 E6 01        	and 1
 560+ 9A94 20 0F        	jr nz,1F
 561+ 9A96 2A 95 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9A99 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9A9A 22 95 89     	ld (Posicion_actual),hl
 564+ 9A9D CD 57 9B     	call Genera_coordenadas
 565+ 9AA0 CD FC 9A     	call Dec_CTRL_DESPLZ
 566+ 9AA3 18 03        	jr 2F
 567+ 9AA5 CD FC 9A     1 call Dec_CTRL_DESPLZ
 568+ 9AA8 C9           2 ret
 569+ 9AA9
 570+ 9AA9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9AA9
 572+ 9AA9 3A 9B 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9AAC FE F7        	cp $f7
 574+ 9AAE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9AB0 30 2C        	jr nc,3F
 576+ 9AB2
 577+ 9AB2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9AB2
 579+ 9AB2 06 00        	ld b,0
 580+ 9AB4 04           4 inc b
 581+ 9AB5 3C           	inc a
 582+ 9AB6 FE F7        	cp $f7
 583+ 9AB8 20 FA        	jr nz,4B
 584+ 9ABA 3E FF        	ld a,$ff
 585+ 9ABC 90           	sub b
 586+ 9ABD 32 9B 89     	ld (CTRL_DESPLZ),a
 587+ 9AC0 18 1C        	jr 3F
 588+ 9AC2
 589+ 9AC2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9AC2
 591+ 9AC2 21 94 89     1 ld hl,Columns
 592+ 9AC5 35           	dec (hl)
 593+ 9AC6 AF           	xor a
 594+ 9AC7 32 9B 89     	ld (CTRL_DESPLZ),a
 595+ 9ACA 3A A7 89     	ld a,(Cuad_objeto)
 596+ 9ACD E6 01        	and 1
 597+ 9ACF 28 0A        	jr z,2F
 598+ 9AD1 2A 95 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9AD4 2B           	dec hl
 600+ 9AD5 22 95 89     	ld (Posicion_actual),hl
 601+ 9AD8 CD 57 9B     	call Genera_coordenadas
 602+ 9ADB
 603+ 9ADB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9ADB
 605+ 9ADB CD 23 8D     2 call Inicia_puntero_objeto_izq
 606+ 9ADE C9           3 ret
 607+ 9ADF
 608+ 9ADF              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9ADF              ;
 610+ 9ADF              ;	19/10/22
 611+ 9ADF              ;
 612+ 9ADF              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9ADF              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9ADF
 615+ 9ADF 3A 99 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9AE2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9AE4 C9           	ret
 618+ 9AE5
 619+ 9AE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9AE5              ;
 621+ 9AE5              ;	19/10/22
 622+ 9AE5              ;
 623+ 9AE5              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9AE5              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9AE5
 626+ 9AE5 3A 99 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9AE8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9AEA C9           	ret
 629+ 9AEB
 630+ 9AEB              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9AEB              ;
 632+ 9AEB              ;	24/7/22
 633+ 9AEB              ;
 634+ 9AEB              ;	Inc_CTRL_DESPLZ
 635+ 9AEB              ;
 636+ 9AEB              ;
 637+ 9AEB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9AEB
 639+ 9AEB 21 9B 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9AEE 3A A9 89     	ld a,(Vel_right)
 641+ 9AF1 A7           	and a
 642+ 9AF2 28 06        	jr z,1F
 643+ 9AF4 47           	ld b,a
 644+ 9AF5 34           3 inc (hl)
 645+ 9AF6 10 FD        	djnz 3B
 646+ 9AF8 18 01        	jr 2F
 647+ 9AFA 34           1 inc (hl)
 648+ 9AFB C9           2 ret
 649+ 9AFC
 650+ 9AFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9AFC              ;
 652+ 9AFC              ;	5/2/23
 653+ 9AFC              ;
 654+ 9AFC              ;	Dec_CTRL_DESPLZ
 655+ 9AFC              ;
 656+ 9AFC              ;
 657+ 9AFC              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9AFC
 659+ 9AFC 21 9B 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9AFF 3A A8 89     	ld a,(Vel_left)
 661+ 9B02 A7           	and a
 662+ 9B03 28 06        	jr z,1F
 663+ 9B05 47           	ld b,a
 664+ 9B06 35           3 dec (hl)
 665+ 9B07 10 FD        	djnz 3B
 666+ 9B09 18 01        	jr 2F
 667+ 9B0B 35           1 dec (hl)
 668+ 9B0C C9           2 ret
 669+ 9B0D
 670+ 9B0D              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9B0D
 672+ 9B0D 2A 95 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9B10 01 1F 00     	ld bc,31
 674+ 9B13 A7           	and a
 675+ 9B14 ED 4A        	adc hl,bc
 676+ 9B16 22 95 89     	ld (Posicion_actual),hl
 677+ 9B19 21 C1 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9B1C CB C6        	set 0,(hl)
 679+ 9B1E C9           	ret
 680+ 9B1F
 681+ 9B1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9B1F
 683+ 9B1F 2A 95 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9B22 01 1F 00     	ld bc,31
 685+ 9B25 A7           	and a
 686+ 9B26 ED 42        	sbc hl,bc
 687+ 9B28 22 95 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9B2B 21 C1 89     	ld hl,Ctrl_0
 689+ 9B2E CB CE        	set 1,(hl)
 690+ 9B30 C9           	ret
 691+ 9B31
 692+ 9B31              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9B31
 694+ 9B31 24           Reaparece_abajo inc h
 695+ 9B32 01 E0 17     	ld bc,$17e0
 696+ 9B35 A7           	and a
 697+ 9B36 ED 4A        	adc hl,bc
 698+ 9B38 22 95 89     	ld (Posicion_actual),hl
 699+ 9B3B 21 C1 89     	ld hl,Ctrl_0
 700+ 9B3E CB D6        	set 2,(hl)
 701+ 9B40 C9           	ret
 702+ 9B41
 703+ 9B41              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9B41
 705+ 9B41 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9B44 A7           	and a
 707+ 9B45 ED 42        	sbc hl,bc
 708+ 9B47 22 95 89     	ld (Posicion_actual),hl
 709+ 9B4A 21 C1 89     	ld hl,Ctrl_0
 710+ 9B4D CB DE        	set 3,(hl)
 711+ 9B4F C9           	ret
 712+ 9B50
 713+ 9B50              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9B50
 715+ 9B50 2A A5 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9B53 22 95 89     	ld (Posicion_actual),hl
 717+ 9B56 C9           	ret
# file closed: Direcciones.asm
1220  9B57              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B57              ; ------------------------------------------------------------------------
   2+ 9B57              ;
   3+ 9B57              ;	02/04/23
   4+ 9B57              ;
   5+ 9B57              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B57              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B57              ;
   8+ 9B57              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B57              ;
  10+ 9B57              ;	Modifica: A,BC y DE.
  11+ 9B57
  12+ 9B57 C5           Genera_coordenadas push bc
  13+ 9B58 E5           	push hl
  14+ 9B59 D5           	push de
  15+ 9B5A
  16+ 9B5A 2A 95 89     	ld hl,(Posicion_actual)
  17+ 9B5D
  18+ 9B5D 7D           	ld a,l
  19+ 9B5E E6 1F        	and $1f
  20+ 9B60 32 99 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9B63
  22+ 9B63 CD EB 97     	call calcula_tercio
  23+ 9B66 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9B67
  25+ 9B67 1E 00        	ld e,0
  26+ 9B69 7D           	ld a,l
  27+ 9B6A E6 E0        	and $e0
  28+ 9B6C 28 01        	jr z,1F
  29+ 9B6E 04           	inc b
  30+ 9B6F
  31+ 9B6F 04           1 inc b
  32+ 9B70 05           	dec b
  33+ 9B71 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9B73              ;														; _ , salimos.
  35+ 9B73 1C           3 inc e
  36+ 9B74 D6 20        	sub 32
  37+ 9B76 20 FB        	jr nz,3B
  38+ 9B78 10 F5        	djnz 1B
  39+ 9B7A
  40+ 9B7A 7B           2 ld a,e
  41+ 9B7B 32 9A 89     	ld (Coordenada_y),a
  42+ 9B7E
  43+ 9B7E D1           	pop de
  44+ 9B7F E1           	pop hl
  45+ 9B80 C1           	pop bc
  46+ 9B81
  47+ 9B81 C9           	ret
  48+ 9B82
  49+ 9B82              ; ------------------------------------------------------------------------
  50+ 9B82              ;	28/05/23
  51+ 9B82              ;
  52+ 9B82              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9B82              ;	Fila superior "0", Columna izquierda "0".
  54+ 9B82              ;
  55+ 9B82              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9B82              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9B82              ;
  58+ 9B82              ;		DE="$120d"
  59+ 9B82              ;
  60+ 9B82              ;		D, (Coordenada_X), Columnas, $12
  61+ 9B82              ;		E, (Coordenada_y), Filas, $0d
  62+ 9B82              ;
  63+ 9B82              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9B82
  65+ 9B82              ;	Modifica: A,BC y DE.
  66+ 9B82
  67+ 9B82
  68+ 9B82              Genera_coordenadas_disparo
  69+ 9B82
  70+ 9B82              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9B82
  72+ 9B82 7D           	ld a,l
  73+ 9B83 E6 1F        	and $1f
  74+ 9B85 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9B86 CD EB 97     	call calcula_tercio
  76+ 9B89 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9B8A 1E 00        	ld e,0
  78+ 9B8C 7D           	ld a,l
  79+ 9B8D E6 E0        	and $e0
  80+ 9B8F 28 01        	jr z,1F
  81+ 9B91 04           	inc b
  82+ 9B92 1C           1 inc e
  83+ 9B93 D6 20        	sub 32
  84+ 9B95 20 FB        	jr nz,1B
  85+ 9B97 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9B99 C9           	ret
  87+ 9B9A
# file closed: Genera_coordenadas.asm
1221  9B9A              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9B9A
   2+ 9B9A
   3+ 9B9A              ;   11/8/22
   4+ 9B9A              ;
   5+ 9B9A              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9B9A              ;
   7+ 9B9A              ;   Mov_obj.asm
   8+ 9B9A              ;
   9+ 9B9A              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9B9A              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9B9A              ;
  12+ 9B9A              ;   Codificación:
  13+ 9B9A              ;
  14+ 9B9A              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9B9A
  16+ 9B9A              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9B9A
  18+ 9B9A 02 40 00     Arriba db 2,%01000000,0
  19+ 9B9D 02 80 00     Abajo db 2,%10000000,0
  20+ 9BA0 02 20 00     Derecha db 2,%00100000,0
  21+ 9BA3 02 10 00     Izquierda db 2,%00010000,0
  22+ 9BA6 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9BAA 60 42 60 40
  22+ 9BAE 63
  23+ 9BAF 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9BB3 22 A3 80 A0
  24+ 9BB7 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9BBB 84 A0 83 A0
  25+ 9BBF 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9BC3 80 A3 22 A0
  26+ 9BC7 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9BCB 40 60 42 60
  27+ 9BCF 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9BD3
  29+ 9BD3 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9BD7 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9BDB 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9BDF 84 00
  32+ 9BE1 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9BE5 84 00
  33+ 9BE7 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9BEB 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9BEF 1F 1F 1F 1F
  35+ 9BF3 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9BF7 1F 1F 1F 1F
  35+ 9BFB 1F
  36+ 9BFC 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9C00 2F 2F 2F 2F
  36+ 9C04 2F 2F
  37+ 9C06 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9C0A 2F 2F 00
  38+ 9C0D
  39+ 9C0D              ; ----- ----- ----- ----- -----
  40+ 9C0D
  41+ 9C0D EB 9B        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9C0F E7 9B        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9C11 A3 9B        Indice_mov_Izquierda defw Izquierda
  44+ 9C13 A0 9B        Indice_mov_Derecha defw Derecha
  45+ 9C15 9D 9B        Indice_mov_Abajo defw Abajo
  46+ 9C17 9A 9B        Indice_mov_Arriba defw Arriba
  47+ 9C19 D7 9B        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9C1B DB 9B        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9C1D D3 9B        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9C1F E1 9B        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9C21 A6 9B        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9C23              ; ----- ----- ----- ----- -----
  53+ 9C23
  54+ 9C23 3A C8 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9C26 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9C27 28 02            jr z,1F
  57+ 9C29 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9C2B 3A C9 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9C2E C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9C30 32 C9 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9C33              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9C33 2A C6 89         ld hl,(Puntero_mov)
  63+ 9C36 7E               ld a,(hl)
  64+ 9C37 32 C8 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9C3A 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9C3B 22 C6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9C3E
  68+ 9C3E 3A CA 89     Decoder ld a,(Repetimos_db)
  69+ 9C41 A7               and a
  70+ 9C42 20 0C            jr nz,12F
  71+ 9C44 2A C6 89         ld hl,(Puntero_mov)
  72+ 9C47 7E               ld a,(hl)
  73+ 9C48 A7               and a
  74+ 9C49 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9C4B E6 0F            and $0f
  76+ 9C4D 32 CA 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9C50              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9C50 2A C6 89     12 ld hl,(Puntero_mov)
  79+ 9C53 CB 7E            bit 7,(hl)
  80+ 9C55 28 03            jr z,2F
  81+ 9C57 CD 31 98         call Mov_down
  82+ 9C5A 2A C6 89     2 ld hl, (Puntero_mov)
  83+ 9C5D CB 76            bit 6,(hl)
  84+ 9C5F 28 03            jr z,3F
  85+ 9C61 CD 62 98         call Mov_up
  86+ 9C64 2A C6 89     3 ld hl, (Puntero_mov)
  87+ 9C67 CB 6E            bit 5,(hl)
  88+ 9C69 28 03            jr z,4F
  89+ 9C6B CD A5 98         call Mov_right
  90+ 9C6E 2A C6 89     4 ld hl, (Puntero_mov)
  91+ 9C71 CB 66            bit 4,(hl)
  92+ 9C73 28 03            jr z,5F
  93+ 9C75 CD C3 99         call Mov_left
  94+ 9C78
  95+ 9C78              ; ---------- --------- --------- ---------- ----------
  96+ 9C78
  97+ 9C78 3A CA 89     5 ld a,(Repetimos_db)
  98+ 9C7B A7               and a
  99+ 9C7C 28 07            jr z,6F
 100+ 9C7E 3D               dec a
 101+ 9C7F 32 CA 89         ld (Repetimos_db),a
 102+ 9C82 28 01            jr z,6f
 103+ 9C84 C9           11 ret
 104+ 9C85 21 C8 89     6 ld hl,Contador_db_mov
 105+ 9C88 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9C89 2A C6 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9C8C 23               inc hl
 108+ 9C8D 22 C6 89         ld (Puntero_mov),hl
 109+ 9C90 18 F2            jr 11B
 110+ 9C92 2A C4 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9C95 3A C9 89         ld a,(Incrementa_puntero)
 112+ 9C98 47               ld b,a
 113+ 9C99 23           8 inc hl
 114+ 9C9A 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9C9C 5E               ld e,(hl)
 116+ 9C9D 23               inc hl
 117+ 9C9E 56               ld d,(hl)
 118+ 9C9F EB               ex de,hl
 119+ 9CA0 22 C6 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9CA3 18 DF            jr 11B
 121+ 9CA5
 122+ 9CA5              ; ---------- --------- --------- ---------- ----------
 123+ 9CA5              ;
 124+ 9CA5              ;   11/8/22
 125+ 9CA5              ;
 126+ 9CA5              ;   Prepara_Puntero_mov
 127+ 9CA5
 128+ 9CA5 E5           Prepara_Puntero_mov push hl
 129+ 9CA6 D5               push de
 130+ 9CA7 2A C4 89         ld hl,(Puntero_indice_mov)
 131+ 9CAA 5E               ld e,(hl)
 132+ 9CAB 23               inc hl
 133+ 9CAC 56               ld d,(hl)
 134+ 9CAD EB               ex de,hl
 135+ 9CAE 22 C6 89         ld (Puntero_mov),hl
 136+ 9CB1 D1               pop de
 137+ 9CB2 E1               pop hl
 138+ 9CB3 C9               ret
 139+ 9CB4
 140+ 9CB4              ; ---------- --------- --------- ---------- ----------
 141+ 9CB4              ;
 142+ 9CB4              ;   11/8/22
 143+ 9CB4              ;
 144+ 9CB4              ;   Reinicia_el_movimiento
 145+ 9CB4
 146+ 9CB4 CD A5 9C     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9CB7 AF               xor a
 148+ 9CB8 32 C8 89         ld (Contador_db_mov),a
 149+ 9CBB 32 C9 89         ld (Incrementa_puntero),a
 150+ 9CBE C3 23 9C         jp Movimiento
 151+ 9CC1 C9               ret
 152+ 9CC2              ; ---------- --------- --------- ---------- ----------
 153+ 9CC2
 154+ 9CC2
 155+ 9CC2
 156+ 9CC2
 157+ 9CC2
 158+ 9CC2
 159+ 9CC2
 160+ 9CC2
 161+ 9CC2
 162+ 9CC2
 163+ 9CC2
 164+ 9CC2
 165+ 9CC2
 166+ 9CC2
 167+ 9CC2
 168+ 9CC2
 169+ 9CC2
 170+ 9CC2
# file closed: Patrones_de_mov.asm
1222  9CC2              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9CC2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9CC2              ;
   3+ 9CC2              ;	3/1/23
   4+ 9CC2              ;
   5+ 9CC2              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9CC2
   7+ 9CC2              ;	ADC HL,SP	LD (addr),SP
   8+ 9CC2              ;	ADD HL,SP	LD SP,(addr)
   9+ 9CC2              ;	ADD IX,SP	LD SP,nn
  10+ 9CC2              ; 	ADD IY,SP	LD SP,HL
  11+ 9CC2              ;				LD SP,IX
  12+ 9CC2              ;	DEC SP		LD SP,IY
  13+ 9CC2
  14+ 9CC2              ;	EX (SP),HL
  15+ 9CC2              ;	EX (SP),IX
  16+ 9CC2              ;	EX (SP),IY
  17+ 9CC2
  18+ 9CC2              ;	INC SP
  19+ 9CC2
  20+ 9CC2
  21+ 9CC2                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 E2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D1 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E8 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E6 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E8 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E6 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B E2 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1223  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1224  7FE6
1225  7FE6              	SAVESNA "Pruebas.sna", START
1226  7FE6
1227  7FE6
1228  7FE6
1229  7FE6
# file closed: Banco_de_pruebas.asm
