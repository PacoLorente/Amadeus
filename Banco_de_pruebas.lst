# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2E 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD C7 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD E7 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD F7 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 183  8BC4
 184  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC6
 187  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC6
 189  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC7
 195  8BC7 00           Ctrl_2 db 0
 196  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC8              ;
 204  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC8              ;														BIT 4, ???
 210  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC8
 212  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC9              ;
 218  8BC9              ; 														DESCRIPCIÖN:
 219  8BC9              ;
 220  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC9              ;
 234  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC9
 238  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC9
 240  8BC9 00           Filas db 0												; Filas. [DRAW]
 241  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCF
 245  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCF
 247  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BD0
 251  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BD0
 253  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BD0              ;
 255  8BD0              ;	COLORES: 0 ..... NEGRO
 256  8BD0              ;    		 1 ..... AZUL
 257  8BD0              ; 			 2 ..... ROJO
 258  8BD0              ;			 3 ..... MAGENTA
 259  8BD0              ; 			 4 ..... VERDE
 260  8BD0              ; 			 5 ..... CIAN
 261  8BD0              ;			 6 ..... AMARILLO
 262  8BD0              ; 			 7 ..... BLANCO
 263  8BD0
 264  8BD0 00 00        Indice_Sprite_der defw 0
 265  8BD2 00 00        Indice_Sprite_izq defw 0
 266  8BD4 00 00        Puntero_DESPLZ_der defw 0
 267  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD8
 269  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BDB 00           Columnas db 0
 272  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDF
 276  8BDF              ; variables de control general.
 277  8BDF
 278  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BE0
 280  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BE0
 282  8BE0              Perfiles_de_velocidad
 283  8BE0
 284  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE4
 289  8BE4              ; Contadores de 16 bits.
 290  8BE4
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BEC
 296  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BEC
 298  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BF2              ;
 302  8BF2              ;
 303  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BF3 00           Incrementa_puntero_backup db 0
 307  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF8              ;
 313  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF8              ;
 317  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF8              ;
 322  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF8
 326  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF9
 328  8BF9              ;														DESCRIPCIÓN:
 329  8BF9              ;
 330  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF9
 337  8BF9              ;														BIT 3, Recarga de nueva oleada.
 338  8BF9              ;														BIT 4, Recarga de nueva oleada.
 339  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF9              ;														BIT 6, **** Frame completo.
 341  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF9
 343  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BFB
 348  8BFB              ; Gestión de ENTIDADES y CAJAS.
 349  8BFB
 350  8BFB 00 00        Puntero_store_caja defw 0
 351  8BFD 00 00        Puntero_restore_caja defw 0
 352  8BFF 00 00        Indice_restore_caja defw 0
 353  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C04
 357  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C08              ;														; _ puntero (Indice_entidades).
 360  8C08
 361  8C08              ;---------------------------------------------------------------------------------------------------------------
 362  8C08              ;
 363  8C08              ;	12/08/24
 364  8C08              ;
 365  8C08              ;	Álbumes.
 366  8C08
 367  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C0A              ;														; _variable para almacenar lo posición del puntero_
 369  8C0A              ; 														; _de pila, SP.
 370  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C0C
 373  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C0C
 375  8C0C 00 00        Album_de_pintado defw 0
 376  8C0E 00 00        Album_de_borrado defw 0
 377  8C10 00 00        Album_de_pintado_Amadeus defw 0
 378  8C12 00 00        Album_de_borrado_Amadeus defw 0
 379  8C14 00 00        Album_de_pintado_disparos defw 0
 380  8C16 00 00        Album_de_borrado_disparos defw 0
 381  8C18
 382  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C1A 00           Num_de_bytes_album_de_disparos db 0
 384  8C1B 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C1C
 386  8C1C 02           Numero_de_disparos_de_Amadeus db 2						; Inicialmente disponemos de 2 disparos.
 387  8C1D 00           Numero_de_disparos_de_entidades db 0
 388  8C1E
 389  8C1E 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 390  8C1F              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 391  8C1F
 392  8C1F 00 00        Puntero_rancio_disparos_album defw 0
 393  8C21
 394  8C21 00 00        Techo_Scanlines_album defw 0
 395  8C23 00 00        Techo_Scanlines_album_2 defw 0
 396  8C25 00           Switch db 0
 397  8C26 00 00        Techo defw 0
 398  8C28 00 00        Scanlines_album_SP defw 0
 399  8C2A 00 89        India_SP defw Tabla_de_pintado
 400  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 401  8C2E
 402  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 403  8C2F              ;
 404  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 405  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 406  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 407  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 408  8C2F              ;																Habilita el borrado/pintado de sprites.
 409  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 410  8C2F              ;																_ a la baja.
 411  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 412  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 413  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 414  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 415  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 416  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 417  8C2F
 418  8C2F 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 419  8C30              ;
 420  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 421  8C30              ;
 422  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 423  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 424  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 425  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 426  8C30              ;
 427  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 428  8C30              ;															_ masticados ya generados.
 429  8C30              ;
 430  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 431  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 432  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 433  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 434  8C30
 435  8C30 00           Ctrl_5 db 0
 436  8C31
 437  8C31              ; Gestión de Disparos.
 438  8C31
 439  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 440  8C33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 441  8C35
 442  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 443  8C36
 444  8C36              ;
 445  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 446  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 447  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 448  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 449  8C36
 450  8C36
 451  8C36
 452  8C36
 453  8C36
 454  8C36
 455  8C36
 456  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 457  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 458  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 459  8C38
 460  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 461  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 462  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 464  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 466  8C40
 467  8C40              ;---------------------------------------------------------------------------------------------------------------
 468  8C40
 469  8C40              ; Relojes y temporizaciones.
 470  8C40
 471  8C40 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 472  8C41 05           Clock_explosion_Amadeus db 5
 473  8C42 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 474  8C43
 475  8C43 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 476  8C45
 477  8C45 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 478  8C47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 479  8C48              ;														; Repite la oleada de entidades.
 480  8C48
 481  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 482  8C48              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 483  8C48              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 484  8C48              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 485  8C48
 486  8C48              ;---------------------------------------------------------------------------------------------------------------
 487  8C48
 488  8C48              ; Gestión de NIVELES.
 489  8C48
 490  8C48 00           Nivel db 0												; Nivel actual del juego.
 491  8C49 00 00        Puntero_indice_NIVELES defw 0
 492  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 493  8C4D              ; 														; _ que definen el NIVEL.
 494  8C4D
 495  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 496  8C4D
 497  8C4D              ; Temporizaciones Shield.
 498  8C4D
 499  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 500  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 501  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 502  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 503  8C55 00           Shield_3 db 0
 504  8C56
 505  8C56 06           Lives db 6
 506  8C57
 507  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 508  8C57              ;
 509  8C57              ;	5/1/24
 510  8C57
 511  8C57              START
 512  8C57
 513  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 514  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 515  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 516  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 517  8C60 F3           	DI
 518  8C61
 519  8C61              ; Limpiamos pantalla.
 520  8C61
 521  8C61 3E 07        	ld a,%00000111
 522  8C63              ;	call Cls
 523  8C63 CD DC 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 524  8C66
 525  8C66              ; INICIALIZACIÓN.
 526  8C66
 527  8C66 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 528  8C68 CD 29 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 529  8C6B CD 70 8E     	call Extrae_numero_aleatorio_y_avanza
 530  8C6E
 531  8C6E 6F           	ld l,a
 532  8C6F 26 00        	ld h,0
 533  8C71 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 534  8C74
 535  8C74              ;	Inicializa 1er Nivel.
 536  8C74
 537  8C74 21 97 8B     	ld hl,Indice_de_niveles
 538  8C77 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 539  8C7A CD 59 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 540  8C7D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 541  8C7D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 542  8C7D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 543  8C7D
 544  8C7D              ;	Inicia los álbumes de líneas.
 545  8C7D
 546  8C7D CD 25 90     	call Inicia_albumes_de_lineas
 547  8C80              ;
 548  8C80 CD 35 90     	call Inicia_albumes_de_lineas_Amadeus
 549  8C83 CD 42 90     	call Inicia_albumes_de_disparos
 550  8C86
 551  8C86
 552  8C86 CD 9E 92     4 call Inicia_Entidades
 553  8C89 CD 01 93     	call Inicia_Amadeus
 554  8C8C
 555  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 556  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 557  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 558  8C8C
 559  8C8C 11 70 89     	ld de,Amadeus_BOX
 560  8C8F CD 54 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 561  8C92 CD 44 93     	call Limpiamos_bandeja_DRAW
 562  8C95
 563  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 564  8C95
 565  8C95 06 3C        	ld b,60
 566  8C97 CD 26 9D     2 call Amadeus_a_izquierda
 567  8C9A 10 FB        	djnz 2B
 568  8C9C
 569  8C9C CD 03 90     	call Genera_datos_de_impresion_Amadeus
 570  8C9F
 571  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 572  8C9F
 573  8C9F CD 55 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 574  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 575  8CA2
 576  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 577  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 578  8CA2
 579  8CA2              ;	ld a,(Ctrl_1)
 580  8CA2              ;	bit 3,a
 581  8CA2              ;	jr nz,5F											 ; Loop
 582  8CA2
 583  8CA2              ;	ld de,Amadeus_db
 584  8CA2              ;	call Store_Amadeus
 585  8CA2
 586  8CA2              ; 	INICIA DISPAROS !!!!!
 587  8CA2
 588  8CA2 CD 6B 90     	call Inicia_Puntero_Disparo_Entidades
 589  8CA5 CD 72 90     	call Inicia_Puntero_Disparo_Amadeus
 590  8CA8
 591  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CA8
 593  8CA8              ;5 call Inicia_punteros_de_cajas
 594  8CA8              ;	call Restore_entidad
 595  8CA8
 596  8CA8              ;	ld a,(Ctrl_1)
 597  8CA8              ;	bit 3,a
 598  8CA8              ;	jr z,6F
 599  8CA8
 600  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CA8
 602  8CA8              ;	ld hl,Ctrl_1
 603  8CA8              ;	res 3,(hl)
 604  8CA8              ;	jr Main
 605  8CA8
 606  8CA8              ; Damos por concluida la construcción del FRAME.
 607  8CA8              ;
 608  8CA8
 609  8CA8 CD E7 90     	call Inicia_Shield
 610  8CAB
 611  8CAB
 612  8CAB 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 613  8CAE 22 21 8C     	ld (Techo_Scanlines_album),hl
 614  8CB1
 615  8CB1 2A 0E 8C     	ld hl,(Album_de_borrado)
 616  8CB4 22 28 8C     	ld (Scanlines_album_SP),hl
 617  8CB7
 618  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 619  8CBA 22 2A 8C     	ld (India_SP),hl
 620  8CBD
 621  8CBD 21 2E 8C     	ld hl,Ctrl_3
 622  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CC2 CB D6        	set 2,(hl)
 624  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC6
 626  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC7
 628  8CC7 76           	halt
 629  8CC8
 630  8CC8              ; ------------------------------------
 631  8CC8
 632  8CC8              Main
 633  8CC8              ;
 634  8CC8              ; 22/08/24
 635  8CC8
 636  8CC8              ; Gestión de disparos.
 637  8CC8
 638  8CC8 CD E7 9E     	call Limpia_album_de_borrado_disparos
 639  8CCB CD 52 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 640  8CCE CD 2A 9F     	call Motor_Disparos
 641  8CD1
 642  8CD1              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 643  8CD1              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 644  8CD1              ; Este hecho lo indica el bit2 de (Impacto2).
 645  8CD1
 646  8CD1 CD 3C A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CD4
 648  8CD4 2A 45 8C     16 ld hl,(Clock_next_entity)
 649  8CD7 ED 4B 78 5C  	ld bc,(FRAMES)
 650  8CDB A7           	and a
 651  8CDC ED 42        	sbc hl,bc
 652  8CDE 20 16        	jr nz,13F
 653  8CE0
 654  8CE0              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 655  8CE0              ; _ (Clock_next_entity) para la siguiente entidad.
 656  8CE0
 657  8CE0 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 658  8CE3 47           	ld b,a
 659  8CE4 3A 03 8C     	ld a,(Entidades_en_curso)
 660  8CE7 B8           	cp b
 661  8CE8 28 0C        	jr z,13F
 662  8CEA 30 0A        	jr nc,13F
 663  8CEC
 664  8CEC 3C           	inc a
 665  8CED 32 03 8C     	ld (Entidades_en_curso),a
 666  8CF0
 667  8CF0              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 668  8CF0
 669  8CF0 CD 70 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 670  8CF3 CD 8C 8E     	call Define_Clock_next_entity
 671  8CF6
 672  8CF6              ; -------------------------------------------------------------------------------------------------------------
 673  8CF6
 674  8CF6              ; Habilita disparos.
 675  8CF6
 676  8CF6              13
 677  8CF6
 678  8CF6              ;	ld hl,Disparo_Amadeus
 679  8CF6              ;	ld de,CLOCK_repone_disparo_Amadeus
 680  8CF6              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 681  8CF6
 682  8CF6              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 683  8CF6              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 684  8CF6              ;	call Habilita_disparos
 685  8CF6
 686  8CF6              ; COLISIONES.
 687  8CF6
 688  8CF6              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 689  8CF6
 690  8CF6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 691  8CF6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 692  8CF6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 693  8CF6
 694  8CF6              ;	xor a
 695  8CF6              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 696  8CF6
 697  8CF6              ;	call Inicia_punteros_de_cajas
 698  8CF6              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 699  8CF6              ; 														; _ en DRAW.
 700  8CF6
 701  8CF6              ;	ld a,(Filas)
 702  8CF6              ;	and a
 703  8CF6              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 704  8CF6              ;	call Incrementa_punteros_de_cajas
 705  8CF6              ;	jr 12B
 706  8CF6
 707  8CF6              ; ---------------------------------------------------------------------------------------
 708  8CF6
 709  8CF6              ;10 ld a,(Numero_parcial_de_entidades)
 710  8CF6              ;    ld b,a
 711  8CF6              ;	and a
 712  8CF6              ;	jr nz,11F
 713  8CF6
 714  8CF6              ;	ld hl,Ctrl_1;
 715  8CF6              ;	bit 4,(hl)
 716  8CF6              ;	jp nz,16F
 717  8CF6
 718  8CF6              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 719  8CF6
 720  8CF6              ;	ld hl,Ctrl_1
 721  8CF6              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 722  8CF6
 723  8CF6              ;	ld a,(Contador_de_frames)
 724  8CF6              ;	inc a
 725  8CF6              ;	ld (Activa_recarga_cajas),a
 726  8CF6
 727  8CF6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 728  8CF6
 729  8CF6 3A 03 8C     11 ld a,(Entidades_en_curso)
 730  8CF9 A7           	and a
 731  8CFA CA 6E 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 732  8CFD 47           	ld b,a												; No hay entidades que gestionar.
 733  8CFE
 734  8CFE              ; ( Código que ejecutamos con cada entidad: ).
 735  8CFE
 736  8CFE              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 737  8CFE              ;
 738  8CFE              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 739  8CFE
 740  8CFE 21 00 89     	ld hl,Tabla_de_pintado
 741  8D01 22 2A 8C     	ld (India_SP),hl
 742  8D04
 743  8D04 21 2E 8C     	ld hl,Ctrl_3
 744  8D07 CB D6        	set 2,(hl)
 745  8D09 CD 27 8E     	call Change
 746  8D0C
 747  8D0C C5           15 push bc 												; Nº de entidades en curso.
 748  8D0D
 749  8D0D CD B4 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 750  8D10 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 751  8D14
 752  8D14              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 753  8D14
 754  8D14              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 755  8D14              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 756  8D14
 757  8D14 3A 35 8C     	ld a,(Impacto2)
 758  8D17 CB 5F        	bit 3,a
 759  8D19 C4 D3 9E     	call nz,Compara_con_coordenadas_de_disparo
 760  8D1C
 761  8D1C              ; En 2º lugar, ... existe Colisión de esta entidad con Amadeus ???
 762  8D1C
 763  8D1C 3A BF 8B     	ld a,(Impacto)
 764  8D1F A7           	and a
 765  8D20 28 17        	jr z,8F
 766  8D22
 767  8D22 F3           	di
 768  8D23 18 FE        	jr $
 769  8D25 FB           	ei
 770  8D26
 771  8D26
 772  8D26
 773  8D26              ; 5/7/24
 774  8D26              ; Nota importante:
 775  8D26              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 776  8D26              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 777  8D26              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 778  8D26
 779  8D26 3A 2E 8C     	ld a,(Ctrl_3)
 780  8D29 CB 7F        	bit 7,a
 781  8D2B 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 782  8D2D              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 783  8D2D 3A 74 89     	ld a,(Impacto_Amadeus)
 784  8D30 A7           	and a
 785  8D31 C4 C4 91     	call nz,Genera_explosion
 786  8D34 20 1B        	jr nz,Gestiona_siguiente_entidad
 787  8D36
 788  8D36              ; Falsa colisión !!!
 789  8D36
 790  8D36 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 791  8D39
 792  8D39              ; -------------------------------------------
 793  8D39
 794  8D39 CD D0 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 795  8D3C CD 07 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 796  8D3F CD BC 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 797  8D42 CD C4 94     	call Genera_datos_de_impresion
 798  8D45 CD 67 93     	call Decrementa_Contador_de_mov_masticados
 799  8D48
 800  8D48              ; -------------------------------------------
 801  8D48
 802  8D48              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 803  8D48
 804  8D48 2A C0 8B     	ld hl,(Puntero_de_impresion)
 805  8D4B CD 98 94     	call Genera_coordenadas
 806  8D4E
 807  8D4E CD BA A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 808  8D51
 809  8D51              ;	ld hl,Ctrl_0
 810  8D51              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 811  8D51
 812  8D51              Gestiona_siguiente_entidad
 813  8D51
 814  8D51 CD 39 93      	call Store_Restore_cajas
 815  8D54 C1           	pop bc
 816  8D55 10 B5        	djnz 15B
 817  8D57
 818  8D57              ; Hemos gestionado todas las entidades.
 819  8D57
 820  8D57 CD E0 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 821  8D5A CD F7 8E     	call Ordena_tabla_de_impresion
 822  8D5D CD 55 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 823  8D60
 824  8D60              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 825  8D60              ; Hemos gestionado todas las unidades.
 826  8D60              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 827  8D60
 828  8D60              ;	ld hl,Ctrl_1
 829  8D60              ;	res 2,(hl)
 830  8D60
 831  8D60 CD A1 8E     	call Borra_diferencia
 832  8D63
 833  8D63 3A 2E 8C     	ld a,(Ctrl_3)
 834  8D66 CB 5F        	bit 3,a
 835  8D68 20 04        	jr nz,Gestion_de_Amadeus
 836  8D6A
 837  8D6A EB           	ex de,hl
 838  8D6B 71           	ld (hl),c
 839  8D6C 2C           	inc l
 840  8D6D 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 841  8D6E
 842  8D6E
 843  8D6E              ;! GESTIONA AMADEUS !!!!!!!!!!
 844  8D6E
 845  8D6E              Gestion_de_Amadeus
 846  8D6E
 847  8D6E              ; ----- ----- -----
 848  8D6E              ;
 849  8D6E              ;	Restaura pepinasso de Amadeus a BIXO !!!!!!!
 850  8D6E
 851  8D6E 21 35 8C     	ld hl,Impacto2
 852  8D71 CB 9E        	res 3,(hl)																; Deshabilitamos el FLAG de "Impacto" en disparos de Amadeus.
 853  8D73              ;																			; Vuelta a empezar.
 854  8D73 21 38 8C     	ld hl,Coordenadas_disparo_certero
 855  8D76 AF           	xor a
 856  8D77 77           	ld (hl),a
 857  8D78 23           	inc hl
 858  8D79 77           	ld (hl),a
 859  8D7A
 860  8D7A              ; ----- ----- -----
 861  8D7A
 862  8D7A 21 2E 8C     	ld hl,Ctrl_3
 863  8D7D CB 76        	bit 6,(hl)
 864  8D7F 28 13        	jr z,Amadeus_vivo
 865  8D81
 866  8D81              ; Amadeus ha sido destruido.
 867  8D81              ; Decrementa (Temp_new_live).
 868  8D81
 869  8D81 21 42 8C     	ld hl,Temp_new_live
 870  8D84 35           	dec (hl)
 871  8D85 20 26        	jr nz,End_frame
 872  8D87
 873  8D87              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 874  8D87
 875  8D87 21 56 8C     	ld hl,Lives
 876  8D8A 35           	dec (hl)
 877  8D8B
 878  8D8B              ;! Fin del juego
 879  8D8B
 880  8D8B F3           	di
 881  8D8C 28 FE        	jr z,$
 882  8D8E FB           	ei
 883  8D8F
 884  8D8F              ; Nueva nave.
 885  8D8F
 886  8D8F CD CD 8D     	call Reinicia_Amadeus
 887  8D92 18 19        	jr End_frame
 888  8D94
 889  8D94              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 890  8D94
 891  8D94              Amadeus_vivo
 892  8D94
 893  8D94 3A 74 89     	ld a,(Impacto_Amadeus)
 894  8D97 A7           	and a
 895  8D98 C4 F4 91     	call nz, Genera_explosion_Amadeus
 896  8D9B 20 10        	jr nz, End_frame
 897  8D9D
 898  8D9D CD A1 91     	call Teclado
 899  8DA0
 900  8DA0 21 2E 8C     	ld hl,Ctrl_3
 901  8DA3 CB 6E        	bit 5,(hl)
 902  8DA5 28 06        	jr z,End_frame
 903  8DA7
 904  8DA7              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 905  8DA7
 906  8DA7 CD 42 8E     	call Change_Amadeus
 907  8DAA CD 03 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 908  8DAD
 909  8DAD              End_frame
 910  8DAD
 911  8DAD              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 912  8DAD              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 913  8DAD
 914  8DAD CD F8 9F     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 915  8DB0 CD 03 9F     	call Calcula_bytes_pintado_disparos
 916  8DB3 CD 10 9F     	call Limpia_album_de_pintado_disparos
 917  8DB6
 918  8DB6              ; ------------ ------------- --------------
 919  8DB6
 920  8DB6 2A 0E 8C     	ld hl,(Album_de_borrado)
 921  8DB9 22 28 8C     	ld (Scanlines_album_SP),hl
 922  8DBC
 923  8DBC 21 2E 8C     	ld hl,Ctrl_3
 924  8DBF CB C6        	set 0,(hl) 											; Indica Frame completo.
 925  8DC1 CB 9E        	res 3,(hl)
 926  8DC3 CB A6        	res 4,(hl)
 927  8DC5
 928  8DC5 AF           	xor a
 929  8DC6 D3 FE        	out ($fe),a
 930  8DC8
 931  8DC8 76           	halt
 932  8DC9
 933  8DC9              ; ----------------------------------------
 934  8DC9
 935  8DC9              ;	ld a,(Ctrl_1) 										; Existe Loop?
 936  8DC9              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 937  8DC9 CA C8 8C     	jp z,Main
 938  8DCC
 939  8DCC              ; RECARGA DE NUEVA OLEADA.
 940  8DCC
 941  8DCC              ;	ld a,(Contador_de_frames)
 942  8DCC              ;	ld b,a
 943  8DCC              ;	ld a,(Activa_recarga_cajas)
 944  8DCC              ;	cp b
 945  8DCC              ;	jr z,20F
 946  8DCC
 947  8DCC              ;	ld hl,Ctrl_1
 948  8DCC              ;	set 4,(hl)
 949  8DCC              ;	jp Main
 950  8DCC
 951  8DCC              ;20 ld hl,Ctrl_1
 952  8DCC              ;	res 4,(hl)
 953  8DCC
 954  8DCC              ;	ld a,(Contador_de_frames)
 955  8DCC
 956  8DCC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 957  8DCC              ;! _ IMPREDECIBLE !!!!
 958  8DCC
 959  8DCC              ;	add 10
 960  8DCC              ;	ld (Clock_next_entity),a
 961  8DCC
 962  8DCC              ;	jp 4B
 963  8DCC
 964  8DCC C9           	ret
 965  8DCD
 966  8DCD              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 967  8DCD              ;
 968  8DCD              ;	16/11/23
 969  8DCD
 970  8DCD              ;;Gestiona_Amadeus
 971  8DCD
 972  8DCD              ;! Activa/desactiva impacto con Amadeus.
 973  8DCD
 974  8DCD              ;	ld a,(Impacto)
 975  8DCD              ;	and a
 976  8DCD              ;	jr nz,2F
 977  8DCD
 978  8DCD              ;;	call Mov_Amadeus
 979  8DCD
 980  8DCD              ;;2 ld a,(Ctrl_0)
 981  8DCD              ;;	bit 4,a
 982  8DCD              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 983  8DCD
 984  8DCD              ;;	call Guarda_foto_entidad_a_pintar
 985  8DCD              ;;	call Guarda_datos_de_borrado_Amadeus
 986  8DCD
 987  8DCD              ;;1 ld hl,Ctrl_0
 988  8DCD              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 989  8DCD
 990  8DCD              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 991  8DCD
 992  8DCD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 993  8DCD
 994  8DCD              ;	call Calcula_numero_de_disparotes
 995  8DCD
 996  8DCD              ;;	ret
 997  8DCD
 998  8DCD              ; -----------------------------
 999  8DCD              ;
1000  8DCD              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
1001  8DCD              ;
1002  8DCD              ;	INPUTS: B a de estar a "0".
1003  8DCD
1004  8DCD              ;Prepara_Borra_sprites
1005  8DCD
1006  8DCD              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1007  8DCD              ;	ld a,l
1008  8DCD              ;	ret z
1009  8DCD
1010  8DCD              ;	srl a
1011  8DCD
1012  8DCD              ;2 sub 16
1013  8DCD              ;	jr z,1F
1014  8DCD              ;	inc b
1015  8DCD              ;	jr 2B
1016  8DCD
1017  8DCD              ;1 inc b
1018  8DCD
1019  8DCD              ;	exx
1020  8DCD              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1021  8DCD              ;	exx
1022  8DCD
1023  8DCD              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1024  8DCD              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1025  8DCD
1026  8DCD              ;	ret
1027  8DCD
1028  8DCD              ; --------------------------------------------------------------------------------------------------------------
1029  8DCD              ;
1030  8DCD              ;	15/12/23
1031  8DCD
1032  8DCD              ;Mov_obj
1033  8DCD
1034  8DCD              ;	ld a,(Ctrl_2)
1035  8DCD              ;	bit 1,a
1036  8DCD              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1037  8DCD
1038  8DCD              ; Explosión:
1039  8DCD
1040  8DCD              ;	ld a,(Frames_explosion)
1041  8DCD              ;	and a
1042  8DCD              ;	jr nz,4F
1043  8DCD
1044  8DCD              ;!  Una alimaña menos!!!!!!!!!1
1045  8DCD
1046  8DCD              ; Se trataba de una Entidad_guía ???
1047  8DCD
1048  8DCD              ;	ld a,(Ctrl_2)
1049  8DCD              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1050  8DCD              ;	jr z,5F
1051  8DCD
1052  8DCD              ;	ld hl,Ctrl_3
1053  8DCD              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1054  8DCD
1055  8DCD              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1056  8DCD              ;!! _generado puede ser distinto, (aletoriedad).
1057  8DCD
1058  8DCD              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1059  8DCD              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1060  8DCD              ;	dec (hl)
1061  8DCD              ;	ld hl,Entidades_en_curso
1062  8DCD              ;	dec (hl)
1063  8DCD              ;	ld hl,Numero_de_entidades
1064  8DCD              ;	dec (hl)
1065  8DCD              ;	jr 3F
1066  8DCD
1067  8DCD              ; -----
1068  8DCD
1069  8DCD              ;	`Movemos´ la explosión.
1070  8DCD
1071  8DCD              ;4 ld hl,(Puntero_DESPLZ_der)
1072  8DCD              ;	inc hl
1073  8DCD              ;	inc hl
1074  8DCD              ;	call Extrae_address
1075  8DCD              ;;	ld (Puntero_objeto),hl
1076  8DCD
1077  8DCD              ;;	ld hl,Frames_explosion
1078  8DCD              ;;	dec (hl)
1079  8DCD
1080  8DCD              ;;	ld hl,Ctrl_0
1081  8DCD              ;;	set 4,(hl);;
1082  8DCD
1083  8DCD              ;;	jr 3F
1084  8DCD
1085  8DCD              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1086  8DCD
1087  8DCD              ;2 xor a
1088  8DCD              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1089  8DCD
1090  8DCD              ; Movemos Entidades malignas.
1091  8DCD              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1092  8DCD
1093  8DCD              ;	ld a,(Ctrl_2)
1094  8DCD              ;	bit 5,a
1095  8DCD              ;	jr nz,8F
1096  8DCD
1097  8DCD              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1098  8DCD              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1099  8DCD              ;	jr 7F
1100  8DCD
1101  8DCD              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1102  8DCD
1103  8DCD              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1104  8DCD              ;	bit 4,a
1105  8DCD              ;	ret z
1106  8DCD
1107  8DCD              ; Ha habido desplazamiento de la entidad maligna.
1108  8DCD              ; Ha llegado a zona de AMADEUS ???
1109  8DCD
1110  8DCD              ;7 ld a,(Coordenada_y)
1111  8DCD              ;	cp $14
1112  8DCD              ;	jr c,1F
1113  8DCD
1114  8DCD              ; ---------
1115  8DCD
1116  8DCD              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1117  8DCD              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1118  8DCD
1119  8DCD              ;	di
1120  8DCD              ;	call Genera_coordenadas_X
1121  8DCD              ;	call Compara_coordenadas_X
1122  8DCD              ;	ei
1123  8DCD
1124  8DCD              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1125  8DCD
1126  8DCD              ; ---------
1127  8DCD
1128  8DCD              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1129  8DCD              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1130  8DCD              ;	call Limpia_Variables_de_borrado
1131  8DCD
1132  8DCD              ;3 ret
1133  8DCD
1134  8DCD              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1135  8DCD              ;
1136  8DCD              ;	24/07/24
1137  8DCD
1138  8DCD              Reinicia_Amadeus
1139  8DCD
1140  8DCD              ;	Reinicia posición y estado.
1141  8DCD
1142  8DCD 21 CF 50     	ld hl,$50cf
1143  8DD0 22 75 89     	ld (p.imp.amadeus),hl
1144  8DD3 21 F0 E0     	ld hl,$e0f0
1145  8DD6 22 77 89     	ld (Pamm_Amadeus),hl
1146  8DD9 21 3D 00     	ld hl,$003d
1147  8DDC 22 79 89     	ld (Comm_Amadeus),hl
1148  8DDF
1149  8DDF              ;	limpiamos el álbum de borrado.
1150  8DDF
1151  8DDF 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1152  8DE2
1153  8DE2 AF           	xor a
1154  8DE3 77           	ld (hl),a
1155  8DE4
1156  8DE4 E5           	push hl
1157  8DE5 D1           	pop de
1158  8DE6 13           	inc de
1159  8DE7
1160  8DE7 01 23 00     	ld bc,35
1161  8DEA ED B0        	ldir
1162  8DEC
1163  8DEC CD 03 90     	call Genera_datos_de_impresion_Amadeus
1164  8DEF
1165  8DEF              ;	Reinicia temporizaciones.
1166  8DEF
1167  8DEF CD E7 90     	call Inicia_Shield
1168  8DF2
1169  8DF2 3E 5A        	ld a,90
1170  8DF4 32 53 8C     	ld (Shield),a
1171  8DF7
1172  8DF7 3E 64        	ld a,100
1173  8DF9 32 42 8C     	ld (Temp_new_live),a
1174  8DFC
1175  8DFC              ; 	Restauramos el FLAG: Amadeus vivo.
1176  8DFC
1177  8DFC 21 2E 8C     	ld hl,Ctrl_3
1178  8DFF CB B6        	res 6,(hl)
1179  8E01
1180  8E01              ;	Fuerza la impresión de la nave en el siguiente frame.
1181  8E01
1182  8E01 21 2E 8C      	ld hl,Ctrl_3
1183  8E04 CB EE        	set 5,(hl)
1184  8E06
1185  8E06 C9           	ret
1186  8E07
1187  8E07              ; --------------------------------------------------------------------------------------------------------------
1188  8E07              ;
1189  8E07              ;	12/05/24
1190  8E07
1191  8E07 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1192  8E0A CB 27        	sla a
1193  8E0C 32 C6 8B     	ld (Velocidad),a
1194  8E0F E6 10        	and $10
1195  8E11 C8           	ret z
1196  8E12
1197  8E12              ; Restaura (Velocidad) a razón del nº de vueltas.
1198  8E12
1199  8E12 3A BE 8B     	ld a,(Contador_de_vueltas)
1200  8E15 CB 2F        	sra a
1201  8E17 CB 2F        	sra a
1202  8E19 32 C6 8B     	ld (Velocidad),a
1203  8E1C
1204  8E1C 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1205  8E1F 23           	inc hl
1206  8E20 23           	inc hl
1207  8E21 23           	inc hl
1208  8E22 23           	inc hl
1209  8E23 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1210  8E26
1211  8E26 C9           	ret
1212  8E27
1213  8E27              ; --------------------------------------------------------------------------------------------------------------
1214  8E27              ;
1215  8E27              ;	25/08/24
1216  8E27
1217  8E27              Change
1218  8E27
1219  8E27 3A 25 8C     	ld a,(Switch)
1220  8E2A EE 01        	xor 1
1221  8E2C 32 25 8C     	ld (Switch),a
1222  8E2F 2A 0C 8C     	ld hl,(Album_de_pintado)
1223  8E32 ED 5B 0E 8C  	ld de,(Album_de_borrado)
1224  8E36 EB           	ex de,hl
1225  8E37 22 0C 8C     	ld (Album_de_pintado),hl
1226  8E3A 22 28 8C     	ld (Scanlines_album_SP),hl
1227  8E3D ED 53 0E 8C  	ld (Album_de_borrado),de
1228  8E41 C9           	ret
1229  8E42
1230  8E42              Change_Amadeus
1231  8E42
1232  8E42 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1233  8E45 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1234  8E49 EB           	ex de,hl
1235  8E4A 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1236  8E4D ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1237  8E51 C9           	ret
1238  8E52
1239  8E52              Change_Disparos
1240  8E52
1241  8E52              ;	Exclusiones:
1242  8E52
1243  8E52 3A 1C 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1244  8E55 A7           	and a
1245  8E56 C8           	ret z
1246  8E57
1247  8E57              ; -----
1248  8E57
1249  8E57 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1250  8E5A ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1251  8E5E EB           	ex de,hl
1252  8E5F 22 14 8C     	ld (Album_de_pintado_disparos),hl
1253  8E62 ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1254  8E66 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1255  8E69
1256  8E69 3A 1A 8C     	ld a,(Num_de_bytes_album_de_disparos)
1257  8E6C 32 1B 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1258  8E6F
1259  8E6F C9           	ret
1260  8E70
1261  8E70              ; ------------------------------------
1262  8E70              ;
1263  8E70              ; 1/05/24
1264  8E70
1265  8E70              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1266  8E70              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1267  8E70
1268  8E70              ;	DESTRUYE: HL,DE,A
1269  8E70              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1270  8E70
1271  8E70              ;	Variables implicadas: (RND_SP).
1272  8E70
1273  8E70              Extrae_numero_aleatorio_y_avanza
1274  8E70
1275  8E70 21 00 89     	ld hl,Tabla_de_pintado
1276  8E73 EB           	ex de,hl
1277  8E74 2A 43 8C     	ld hl,(RND_SP)
1278  8E77 EB           	ex de,hl
1279  8E78 A7           	and a
1280  8E79 ED 52        	sbc hl,de
1281  8E7B
1282  8E7B 2A 43 8C     	ld hl,(RND_SP)
1283  8E7E 20 06        	jr nz,1F
1284  8E80
1285  8E80              ; Sitúa HL al principio de la tabla de nº aleatorios.
1286  8E80
1287  8E80 21 F6 88     	ld hl,Numeros_aleatorios
1288  8E83 22 43 8C     	ld (RND_SP),HL
1289  8E86
1290  8E86              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1291  8E86
1292  8E86 7E           1 ld a,(hl)
1293  8E87 23           	inc hl
1294  8E88 22 43 8C     	ld (RND_SP),hl
1295  8E8B C9           	ret
1296  8E8C
1297  8E8C              ; ------------------------------------
1298  8E8C              ;
1299  8E8C              ; 1/05/24
1300  8E8C
1301  8E8C              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1302  8E8C              ; (1 a 4 segundos).
1303  8E8C              ; Actualizamos (Clock_next_entity) con A.
1304  8E8C
1305  8E8C              ;	DESTRUYE: A y B.
1306  8E8C              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1307  8E8C              ;			 Actualiza (Clock_next_entity) con A.
1308  8E8C
1309  8E8C              ;	Variables implicadas: (Clock_next_entity).
1310  8E8C
1311  8E8C              ; Notas:
1312  8E8C
1313  8E8C              ; 	$32 1 seg.
1314  8E8C              ; 	$64 2 seg.
1315  8E8C              ; 	$96 3 seg.
1316  8E8C              ; 	$c8 4 seg.
1317  8E8C              ; 	$fa 5 seg.
1318  8E8C
1319  8E8C              ; $ffff 1310,7 seg, 22 minutos.
1320  8E8C
1321  8E8C              ;	$0100  5 seg. aproximadamente.
1322  8E8C              ;	$0200 10 seg. aproximadamente.
1323  8E8C              ;	$0300 15 seg. aproximadamente.
1324  8E8C              ;	$0400 20 seg. aproximadamente.
1325  8E8C              ;	$0500 25 seg. aproximadamente.
1326  8E8C              ;	$0600 30 seg. aproximadamente.
1327  8E8C
1328  8E8C              Define_Clock_next_entity
1329  8E8C
1330  8E8C FE 34        	cp $34
1331  8E8E 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1332  8E90
1333  8E90              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1334  8E90
1335  8E90 4F           3 ld c,a
1336  8E91 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1337  8E93 2A 78 5C     	ld hl,(FRAMES)
1338  8E96 A7           	and a
1339  8E97 ED 4A        	adc hl,bc
1340  8E99 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1341  8E9C C9           	ret
1342  8E9D
1343  8E9D 3E 34        1 ld a,$34
1344  8E9F 18 EF        	jr 3B
1345  8EA1
1346  8EA1              ; ------------------------------------
1347  8EA1              ;
1348  8EA1              ; 18/03/24
1349  8EA1
1350  8EA1              Borra_diferencia
1351  8EA1
1352  8EA1 ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1353  8EA5
1354  8EA5 3A 25 8C     	ld a,(Switch)
1355  8EA8 A7           	and a
1356  8EA9 28 08        	jr z,2F
1357  8EAB
1358  8EAB 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1359  8EAE 11 23 8C     	ld de,Techo_Scanlines_album_2
1360  8EB1 18 06        	jr 3F
1361  8EB3
1362  8EB3 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1363  8EB6 11 21 8C     	ld de,Techo_Scanlines_album
1364  8EB9
1365  8EB9              ; Diferencia.
1366  8EB9
1367  8EB9 ED 42        3 sbc hl,bc
1368  8EBB
1369  8EBB C8           	ret z
1370  8EBC D8           	ret c
1371  8EBD
1372  8EBD              ; Nuevo techo, (más bajo que el anterior).
1373  8EBD              ; Fijamos nuevo techo y borramos bytes sobrantes.
1374  8EBD
1375  8EBD EB           	ex de,hl
1376  8EBE
1377  8EBE 71           	ld (hl),c
1378  8EBF 2C           	inc l
1379  8EC0 70           	ld (hl),b
1380  8EC1
1381  8EC1 AF           	xor a
1382  8EC2 43           	ld b,e
1383  8EC3
1384  8EC3 2A 28 8C     	ld hl,(Scanlines_album_SP)
1385  8EC6
1386  8EC6 77           1 ld (hl),a
1387  8EC7 23           	inc hl
1388  8EC8 10 FC        	djnz 1B
1389  8ECA
1390  8ECA              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1391  8ECA
1392  8ECA 21 2E 8C     	ld hl,Ctrl_3
1393  8ECD CB DE        	set 3,(hl)
1394  8ECF
1395  8ECF C9           	ret
1396  8ED0
1397  8ED0              ; --------------------------------------------------------------------------------------------------------------
1398  8ED0              ;
1399  8ED0              ;	26/3/24
1400  8ED0
1401  8ED0              Recauda_informacion_de_entidad_en_curso
1402  8ED0
1403  8ED0              ; Almacena la Coordenada Y de la entidad en curso.
1404  8ED0
1405  8ED0              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1406  8ED0
1407  8ED0 3A BD 8B     	ld a,(Coordenada_y)
1408  8ED3 2A 2A 8C     	ld hl,(India_SP)
1409  8ED6 77           	ld (hl),a
1410  8ED7 2C           	inc l
1411  8ED8
1412  8ED8              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1413  8ED8
1414  8ED8              ;	ld de,(Scanlines_album_SP)
1415  8ED8
1416  8ED8 73           	ld (hl),e
1417  8ED9 2C           	inc l
1418  8EDA 72           	ld (hl),d
1419  8EDB 2C           	inc l
1420  8EDC
1421  8EDC 22 2A 8C     	ld (India_SP),hl
1422  8EDF
1423  8EDF C9           	ret
1424  8EE0
1425  8EE0              ; --------------------------------------------------------------------------------------------------------------
1426  8EE0              ;
1427  8EE0              ;	27/03/24
1428  8EE0              ;
1429  8EE0
1430  8EE0              Inicializa_India_y_limpia_Tabla_de_impresion
1431  8EE0
1432  8EE0 2A 2A 8C     	ld hl,(India_SP)
1433  8EE3 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1434  8EE6
1435  8EE6 79           	ld a,c
1436  8EE7 95           	sub l
1437  8EE8 28 06        	jr z,2F
1438  8EEA 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1439  8EEB              ;														; _ y pasamos a inicializar (India_SP).
1440  8EEB AF           	xor a
1441  8EEC
1442  8EEC 77           1 ld (hl),a
1443  8EED 2C           	inc l
1444  8EEE 10 FC        	djnz 1B												; Limpia Tabla.
1445  8EF0
1446  8EF0 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1447  8EF3 22 2A 8C     	ld (India_SP),hl
1448  8EF6
1449  8EF6 C9           	ret
1450  8EF7
1451  8EF7              ; --------------------------------------------------------------------------------------------------------------
1452  8EF7              ;
1453  8EF7              ;	31/3/24
1454  8EF7
1455  8EF7              Ordena_tabla_de_impresion
1456  8EF7
1457  8EF7              ; 5794 T/states.
1458  8EF7              ; 6278 T/states.
1459  8EF7              ; 5310 T/states.
1460  8EF7
1461  8EF7              ; Inicializamos punteros (India_SP) e (India_2_SP).
1462  8EF7              ; Inicializamos contador de comparaciones, [C].
1463  8EF7              ; Cargamos los registros A y B para efectuar comparación.
1464  8EF7
1465  8EF7 FD 2E 00     	ld iyl,0
1466  8EFA
1467  8EFA 3A 03 8C     	ld a,(Entidades_en_curso)
1468  8EFD FE 04        	cp 4 	;	4
1469  8EFF D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1470  8F00
1471  8F00 3D           	dec a
1472  8F01 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1473  8F02 51           	ld d,c 										; Copia de respaldo.
1474  8F03
1475  8F03 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1476  8F04
1477  8F04 21 03 89     	ld hl,Tabla_de_pintado+3
1478  8F07 46           	ld b,(hl)
1479  8F08 22 2C 8C     	ld (India_2_SP),hl
1480  8F0B
1481  8F0B B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1482  8F0C DC 34 8F     	call c, Avanza_India_2_SP
1483  8F0F CC 34 8F     	call z, Avanza_India_2_SP
1484  8F12
1485  8F12 FD 2D        	dec iyl
1486  8F14 28 18        	jr z,2F
1487  8F16
1488  8F16
1489  8F16              ; --------------------------------------------------------------------------------------------------------------
1490  8F16              ;
1491  8F16              ;	7/4/24
1492  8F16
1493  8F16              Trueque
1494  8F16
1495  8F16              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1496  8F16              ;  			A contiene en nº de fila de (India_SP).
1497  8F16              ;			HL contiene (India_2_SP).
1498  8F16
1499  8F16 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1500  8F17 E5           	push hl										; Preservo (India_2_SP).
1501  8F18
1502  8F18 ED 5B 2A 8C  	ld de,(India_SP)
1503  8F1C EB           	ex de,hl
1504  8F1D 70           	ld (hl),b
1505  8F1E 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1506  8F1F
1507  8F1F CD 60 8F     	call Intercambia_1_byte
1508  8F22 CD 60 8F     	call Intercambia_1_byte
1509  8F25
1510  8F25
1511  8F25              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1512  8F25              ; Recuperamos (India_2_SP) en HL.
1513  8F25
1514  8F25 2A 2A 8C     	ld hl,(India_SP)
1515  8F28 7E           	ld a,(hl)
1516  8F29
1517  8F29 E1           	pop hl
1518  8F2A D1           	pop de
1519  8F2B
1520  8F2B              ; --------------------------------------------------------------------------------------------------------------
1521  8F2B
1522  8F2B CD 34 8F     	call Avanza_India_2_SP
1523  8F2E
1524  8F2E 14           2 inc d
1525  8F2F 15           	dec d
1526  8F30 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1527  8F31 18 D8        	jr 1B
1528  8F33
1529  8F33 C9           	ret
1530  8F34
1531  8F34              ; ----- ----- ----- ----- -----
1532  8F34
1533  8F34              Avanza_India_2_SP
1534  8F34
1535  8F34 0D           	dec c
1536  8F35 28 0A        	jr z,Avanza_punteros_indios
1537  8F37
1538  8F37 FD 2C        	inc iyl
1539  8F39
1540  8F39 2C           	inc l
1541  8F3A 2C           	inc l
1542  8F3B 2C           	inc l
1543  8F3C
1544  8F3C 46           	ld b,(hl)
1545  8F3D 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1546  8F40
1547  8F40 C9           	ret
1548  8F41
1549  8F41              ; ----- ----- ----- ----- -----
1550  8F41
1551  8F41              Avanza_punteros_indios
1552  8F41
1553  8F41 15           	dec d
1554  8F42 28 15        	jr z,Prepara_salida
1555  8F44
1556  8F44 4A           	ld c,d
1557  8F45
1558  8F45 2A 2A 8C     	ld hl,(India_SP)
1559  8F48 2C           	inc l
1560  8F49 2C           	inc l
1561  8F4A 2C           	inc l
1562  8F4B 7E           	ld a,(hl)
1563  8F4C 22 2A 8C     	ld (India_SP),hl
1564  8F4F
1565  8F4F 2C           	inc l
1566  8F50 2C           	inc l
1567  8F51 2C           	inc l
1568  8F52 46           	ld b,(hl)
1569  8F53 22 2C 8C     	ld (India_2_SP),hl
1570  8F56
1571  8F56 FD 2C        	inc iyl
1572  8F58
1573  8F58 C9           	ret
1574  8F59
1575  8F59              Prepara_salida
1576  8F59
1577  8F59 21 00 89     	ld hl,Tabla_de_pintado
1578  8F5C 22 2A 8C     	ld (India_SP),hl
1579  8F5F C9           	ret
1580  8F60
1581  8F60
1582  8F60 2C           Intercambia_1_byte inc l
1583  8F61 1C           	inc e
1584  8F62 46           	ld b,(hl)
1585  8F63 1A           	ld a,(de)
1586  8F64 EB           	ex de,hl
1587  8F65 70           	ld (hl),b
1588  8F66 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1589  8F67 C9           	ret
1590  8F68
1591  8F68              ; -----------------------------------------------------------------------------------
1592  8F68              ;
1593  8F68              ;	20/01/24
1594  8F68              ;
1595  8F68              ;
1596  8F68
1597  8F68              Construye_movimientos_masticados_entidad
1598  8F68
1599  8F68 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1600  8F6B E5           	push hl
1601  8F6C CD AF 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1602  8F6F              ;															; _ el (Contador_de_mov_masticados).
1603  8F6F CD 7F 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1604  8F72              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1605  8F72 CD AC 99     	call Recompone_posicion_inicio
1606  8F75
1607  8F75 CD DC 96     1 call Draw
1608  8F78 CD 94 8F     	call Guarda_movimiento_masticado
1609  8F7B
1610  8F7B CD 59 9D     	call Movimiento
1611  8F7E
1612  8F7E 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1613  8F81 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1614  8F83 28 F0        	jr z,1B
1615  8F85
1616  8F85              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1617  8F85              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1618  8F85
1619  8F85 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1620  8F86 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1621  8F89
1622  8F89              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1623  8F89
1624  8F89 CD BD 9E     	call Situa_en_contador_general_de_mov_masticados
1625  8F8C
1626  8F8C              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1627  8F8C              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1628  8F8C
1629  8F8C ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1630  8F90
1631  8F90 71           	ld (hl),c
1632  8F91 23           	inc hl
1633  8F92 70           	ld (hl),b
1634  8F93
1635  8F93 C9           	ret
1636  8F94
1637  8F94              ; -----------------------------------------------------------------------------------
1638  8F94              ;
1639  8F94              ;	28/12/23
1640  8F94              ;
1641  8F94              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1642  8F94              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1643  8F94
1644  8F94              Guarda_movimiento_masticado
1645  8F94
1646  8F94 ED 73 08 8C  	ld (Stack),sp
1647  8F98 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1648  8F9C
1649  8F9C DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1650  8F9E FD E5            push iy 												; Pushea Puntero_objeto.
1651  8FA0
1652  8FA0 ED 7B 08 8C      ld sp,(Stack)
1653  8FA4
1654  8FA4 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1655  8FA7 23           	inc hl
1656  8FA8 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1657  8FAB
1658  8FAB CD AF 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1659  8FAE              ;															; _ el (Contador_de_mov_masticados).
1660  8FAE C9               ret
1661  8FAF
1662  8FAF              ; --------------------------------------------------------------------------------------------------------------
1663  8FAF              ;
1664  8FAF              ;	12/1/24
1665  8FAF              ;
1666  8FAF              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1667  8FAF
1668  8FAF              Actualiza_Puntero_de_almacen_de_mov_masticados
1669  8FAF
1670  8FAF 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1671  8FB2 01 04 00     	ld bc,4
1672  8FB5 A7           	and a
1673  8FB6 ED 4A        	adc hl,bc
1674  8FB8 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1675  8FBB C9           	ret
1676  8FBC
1677  8FBC              ; --------------------------------------------------------------------------------------------------------------
1678  8FBC              ;
1679  8FBC              ;	24/03/24
1680  8FBC              ;
1681  8FBC              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1682  8FBC              ;
1683  8FBC              ;	IX contiene el puntero de impresión.
1684  8FBC              ;	DE contiene (Puntero_objeto).
1685  8FBC
1686  8FBC
1687  8FBC              Cargamos_registros_con_mov_masticado
1688  8FBC
1689  8FBC ED 73 08 8C  	ld (Stack),sp
1690  8FC0 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1691  8FC4
1692  8FC4 D1           	pop de 															; DE contiene Puntero_objeto
1693  8FC5 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1694  8FC7
1695  8FC7 ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1696  8FCB ED 7B 08 8C  	ld sp,(Stack)
1697  8FCF
1698  8FCF 7B           	ld a,e
1699  8FD0 82           	add d															; Comprueba si ya no hay datos en el almacén.
1700  8FD1
1701  8FD1 CC 6F 93     	call z,Reinicia_entidad_maliciosa
1702  8FD4
1703  8FD4 C9           	ret
1704  8FD5
1705  8FD5              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1706  8FD5              ;
1707  8FD5              ;	22/7/24
1708  8FD5
1709  8FD5              Cargamos_registros_con_explosion
1710  8FD5
1711  8FD5
1712  8FD5 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1713  8FD8 CD 79 90     	call Extrae_address
1714  8FDB
1715  8FDB 5D           	ld e,l
1716  8FDC 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1717  8FDD
1718  8FDD DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1719  8FE1
1720  8FE1 C9           	ret
1721  8FE2
1722  8FE2
1723  8FE2              Cargamos_registros_con_explosion_Amadeus
1724  8FE2
1725  8FE2 2A 77 89     	ld hl,(Pamm_Amadeus)
1726  8FE5 CD 79 90     	call Extrae_address
1727  8FE8
1728  8FE8 5D           	ld e,l
1729  8FE9 54           	ld d,h
1730  8FEA
1731  8FEA DD 2A 75 89  	ld ix,(p.imp.amadeus)
1732  8FEE
1733  8FEE C9           	ret
1734  8FEF
1735  8FEF              ; --------------------------------------------------------------------------------------------------------------
1736  8FEF              ;
1737  8FEF              ;	17/06/24
1738  8FEF              ;
1739  8FEF              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1740  8FEF              ;
1741  8FEF              ;	IX contiene el puntero de impresión.
1742  8FEF              ;	DE contiene (Puntero_objeto).
1743  8FEF
1744  8FEF
1745  8FEF              Cargamos_registros_con_mov_masticado_Amadeus
1746  8FEF
1747  8FEF ED 73 08 8C  	ld (Stack),sp
1748  8FF3 ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1749  8FF7 D1           	pop de 															; DE contiene Puntero_objeto
1750  8FF8 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1751  8FFA DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1752  8FFE ED 7B 08 8C  	ld sp,(Stack)
1753  9002 C9           	ret
1754  9003
1755  9003              ; ---------------------------------------------------------------------------------------------------------------------
1756  9003              ;
1757  9003              ;	18/6/24
1758  9003              ;
1759  9003              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1760  9003
1761  9003              Genera_datos_de_impresion_Amadeus
1762  9003
1763  9003 3A 74 89     	ld a,(Impacto_Amadeus)
1764  9006 A7           	and a
1765  9007 20 03        	jr nz,1F
1766  9009
1767  9009              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1768  9009              ; _apuntando a la correspondiente explosión.
1769  9009
1770  9009 CD EF 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1771  900C
1772  900C DD 7D        1 ld a,ixl
1773  900E E6 1F        	and $1f
1774  9010 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1775  9013
1776  9013 2A 28 8C     	ld hl,(Scanlines_album_SP)
1777  9016 E5           	push hl
1778  9017
1779  9017 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1780  901A 22 28 8C     	ld (Scanlines_album_SP),hl
1781  901D
1782  901D CD C4 94     	call Genera_datos_de_impresion
1783  9020
1784  9020 E1           	pop hl
1785  9021 22 28 8C     	ld (Scanlines_album_SP),hl
1786  9024
1787  9024 C9           	ret
1788  9025
1789  9025              ; ---------------------------------------------------------------------------------------------------------------------
1790  9025              ;
1791  9025              ;	13/03/24
1792  9025              ;
1793  9025              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1794  9025
1795  9025              Inicia_albumes_de_lineas
1796  9025
1797  9025 21 00 80     	ld hl,Scanlines_album
1798  9028 22 0C 8C     	ld (Album_de_pintado),hl
1799  902B 22 28 8C     	ld (Scanlines_album_SP),hl
1800  902E
1801  902E 21 1A 81     	ld hl,Scanlines_album_2
1802  9031 22 0E 8C     	ld (Album_de_borrado),hl
1803  9034
1804  9034 C9           	ret
1805  9035
1806  9035              Inicia_albumes_de_lineas_Amadeus
1807  9035
1808  9035 21 34 82     	ld hl,Amadeus_scanlines_album
1809  9038 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1810  903B 21 58 82     	ld hl,Amadeus_scanlines_album_2
1811  903E 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1812  9041
1813  9041 C9           	ret
1814  9042
1815  9042              Inicia_albumes_de_disparos
1816  9042
1817  9042 21 7C 82     	ld hl,Disparos_scanlines_album
1818  9045 22 14 8C     	ld (Album_de_pintado_disparos),hl
1819  9048 21 8E 82     	ld hl,Disparos_scanlines_album_2
1820  904B 22 16 8C     	ld (Album_de_borrado_disparos),hl
1821  904E
1822  904E 21 7C 82     	ld hl,Disparos_scanlines_album
1823  9051 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1824  9054
1825  9054 C9           	ret
1826  9055
1827  9055              ; ---------------------------------------------------------------------------------------------------------------------
1828  9055              ;
1829  9055              ; 8/1/23
1830  9055              ;
1831  9055              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1832  9055              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1833  9055              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1834  9055
1835  9055              ; Destruye HL y DE !!!!!
1836  9055
1837  9055              Inicia_punteros_de_cajas
1838  9055
1839  9055 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1840  9058 CD 79 90         call Extrae_address
1841  905B 22 FB 8B         ld (Puntero_store_caja),hl
1842  905E 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1843  9061 22 FF 8B     	ld (Indice_restore_caja),hl
1844  9064 CD 79 90     	call Extrae_address
1845  9067 22 FD 8B     	ld (Puntero_restore_caja),hl
1846  906A C9               ret
1847  906B
1848  906B              ; *************************************************************************************************************************************************************
1849  906B              ;
1850  906B              ; 8/1/23
1851  906B              ;
1852  906B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1853  906B
1854  906B 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1855  906E 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1856  9071 C9           	ret
1857  9072 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1858  9075 22 33 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1859  9078 C9           	ret
1860  9079
1861  9079              ; *************************************************************************************************************************************************************
1862  9079              ;
1863  9079              ; 20/10/22
1864  9079              ;
1865  9079              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1866  9079              ;
1867  9079              ; Destruye el puntero y DE !!!!!
1868  9079
1869  9079 5E           Extrae_address ld e,(hl)
1870  907A 23           	inc hl
1871  907B 56           	ld d,(hl)
1872  907C 2B           	dec hl
1873  907D EB           	ex de,hl
1874  907E C9           	ret
1875  907F
1876  907F              ; *************************************************************************************************************************************************************
1877  907F              ;
1878  907F              ;	20/1/24
1879  907F              ;
1880  907F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1881  907F              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1882  907F              ;
1883  907F              ;   Destruye HL y BC !!!!!,
1884  907F              ;
1885  907F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1886  907F              ;					"0" ..... Izquierda.
1887  907F
1888  907F              Inicia_Puntero_objeto
1889  907F
1890  907F 3A DA 8B     	ld a,(Cuad_objeto)
1891  9082 E6 01        	and 1
1892  9084 F5           	push af
1893  9085 CC A1 90     	call z,Inicia_puntero_objeto_izq
1894  9088 F1           	pop af
1895  9089 C8           	ret z
1896  908A CD 8E 90     	call Inicia_puntero_objeto_der
1897  908D C9           	ret
1898  908E
1899  908E              ; Arrancamos desde la parte izquierda de la pantalla.
1900  908E              ; Iniciamos (Indice_Sprite_der).
1901  908E
1902  908E 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1903  9091 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1904  9094 CD 79 90     	call Extrae_address
1905  9097 22 CD 8B     	ld (Puntero_objeto),hl
1906  909A
1907  909A 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1908  909D 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1909  90A0 C9           	ret
1910  90A1
1911  90A1              ; Arrancamos desde la parte derecha de la pantalla.
1912  90A1              ; Iniciamos (Indice_Sprite_izq).
1913  90A1
1914  90A1 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1915  90A4 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1916  90A7 CD 79 90     	call Extrae_address
1917  90AA 22 CD 8B     	ld (Puntero_objeto),hl
1918  90AD
1919  90AD 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1920  90B0 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1921  90B3 C9           	ret
1922  90B4
1923  90B4              ; **************************************************************************************************
1924  90B4              ;
1925  90B4              ;	06/07/24
1926  90B4              ;
1927  90B4              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1928  90B4
1929  90B4              Restore_entidad
1930  90B4
1931  90B4 2A FB 8B     	ld hl,(Puntero_store_caja)
1932  90B7 7E           	ld a,(hl)
1933  90B8 A7           	and a
1934  90B9 CC C7 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1935  90BC 28 F6        	jr z,Restore_entidad
1936  90BE
1937  90BE 11 BB 8B     	ld de,Bandeja_DRAW
1938  90C1 01 0C 00     	ld bc,12
1939  90C4 ED B0        	ldir
1940  90C6 C9           	ret
1941  90C7
1942  90C7              ; **************************************************************************************************
1943  90C7              ;
1944  90C7              ;	08/05/23
1945  90C7              ;
1946  90C7              ;	Incrementamos los dos punteros de entidades. (+1).
1947  90C7
1948  90C7              Incrementa_punteros_de_cajas
1949  90C7
1950  90C7 2A FD 8B     	ld hl,(Puntero_restore_caja)
1951  90CA 22 FB 8B     	ld (Puntero_store_caja),hl
1952  90CD 2A FF 8B     	ld hl,(Indice_restore_caja)
1953  90D0 23           	inc hl
1954  90D1 23           	inc hl
1955  90D2 22 FF 8B     	ld (Indice_restore_caja),hl
1956  90D5 CD 79 90         call Extrae_address
1957  90D8 22 FD 8B         ld (Puntero_restore_caja),hl
1958  90DB C9               ret
1959  90DC
1960  90DC              ; -----------------------------------------------------------
1961  90DC
1962  90DC              ; Teclado.
1963  90DC
1964  90DC 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1965  90DE DB FE        	in a,($fe)
1966  90E0 E6 01        	and $01
1967  90E2 28 02        	jr z,1f
1968  90E4 18 F6        	jr Pulsa_ENTER
1969  90E6 C9           1 ret
1970  90E7
1971  90E7              ; **************************************************************************************************
1972  90E7              ;
1973  90E7              ; Temporización.
1974  90E7
1975  90E7              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1976  90E7              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1977  90E7              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1978  90E7              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1979  90E7
1980  90E7              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1981  90E7              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1982  90E7              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1983  90E7
1984  90E7              ; A partir de $4f61 no hace falta DELAY.
1985  90E7
1986  90E7              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1987  90E7
1988  90E7              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1989  90E7              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1990  90E7              ;	LD A,B
1991  90E7              ;	AND A
1992  90E7              ;	JR NZ,wait
1993  90E7              ;	RET
1994  90E7
1995  90E7              ; ---------------------------------------------------------------------------------------------------------------
1996  90E7              ;
1997  90E7              ;	13/07/24
1998  90E7              ;
1999  90E7
2000  90E7              Inicia_Shield
2001  90E7
2002  90E7 21 4D 8C     	ld hl,Datos_Shield
2003  90EA 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2004  90ED
2005  90ED 7E           	ld a,(hl)
2006  90EE 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2007  90F1
2008  90F1 3E 01        	ld a,1
2009  90F3 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2010  90F6
2011  90F6 C9           	ret
2012  90F7
2013  90F7              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2014  90F7              ;
2015  90F7              ;	4/6/24
2016  90F7              ;
2017  90F7              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2018  90F7              ;
2019  90F7              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2020  90F7              ;
2021  90F7
2022  90F7              Actualiza_pantalla
2023  90F7
2024  90F7 3E 02        	ld a,2
2025  90F9 D3 FE        	out ($fe),a
2026  90FB
2027  90FB 3A 2E 8C     	ld a,(Ctrl_3)
2028  90FE CB 57        	bit 2,a
2029  9100 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2030  9102
2031  9102              Borrando_entidades
2032  9102
2033  9102 2A 28 8C     	ld hl,(Scanlines_album_SP)
2034  9105 CD 79 90     	call Extrae_address
2035  9108 24           	inc h
2036  9109 25           	dec h
2037  910A 28 05        	jr z,Pintando_entidades
2038  910C CD B9 95     	call Pinta_Sprites
2039  910F 18 F1        	jr Borrando_entidades
2040  9111
2041  9111              Pintando_entidades
2042  9111
2043  9111 2A 2A 8C     	ld hl,(India_SP)
2044  9114 2C           	inc l
2045  9115 CD 79 90     	call Extrae_address
2046  9118 24           	inc h
2047  9119 25           	dec h
2048  911A 28 0E        	jr z,Ejecuta_escudo
2049  911C 1C           	inc e
2050  911D 1C           	inc e
2051  911E ED 53 2A 8C  	ld (India_SP),de
2052  9122 CD 79 90     	call Extrae_address
2053  9125 CD B9 95     	call Pinta_Sprites
2054  9128 18 E7        	jr Pintando_entidades
2055  912A
2056  912A              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2057  912A
2058  912A              Ejecuta_escudo
2059  912A
2060  912A 3A 53 8C     	ld a,(Shield)
2061  912D A7           	and a
2062  912E 20 2F        	jr nz,Aplica_Shield
2063  9130
2064  9130              Borrando_Amadeus
2065  9130
2066  9130 21 2E 8C     	ld hl,Ctrl_3
2067  9133 CB 6E        	bit 5,(hl)
2068  9135 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2069  9137
2070  9137 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2071  913A CD 79 90     	call Extrae_address
2072  913D 24           	inc h
2073  913E 25           	dec h
2074  913F 28 03        	jr z,Pintando_Amadeus
2075  9141 CD B9 95     	call Pinta_Sprites
2076  9144
2077  9144              Pintando_Amadeus
2078  9144
2079  9144 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2080  9147 CD 79 90     	call Extrae_address
2081  914A 24           	inc h
2082  914B 25           	dec h
2083  914C 28 03        	jr z,1F
2084  914E CD B9 95     	call Pinta_Sprites
2085  9151
2086  9151              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2087  9151
2088  9151 21 2E 8C     1 ld hl,Ctrl_3
2089  9154 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2090  9156 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2091  9158 CB AE        	res 5,(hl)
2092  915A
2093  915A 3E 01        	ld a,1												; Borde azul.
2094  915C D3 FE        	out ($fe),a
2095  915E
2096  915E C9           	ret
2097  915F
2098  915F              Aplica_Shield
2099  915F
2100  915F              ;	Bit 1 "1" (Shield_3) Sólo borra.
2101  915F              ;		  "0"     ""     Borra/Pinta.
2102  915F              ;	Bit 2    ""  RET.	 No borra, no pinta.
2103  915F
2104  915F 21 55 8C     	ld hl,Shield_3
2105  9162
2106  9162 CB 5E        	bit 3,(hl)
2107  9164 20 DE        	jr nz,Pintando_Amadeus
2108  9166
2109  9166 CB 56        	bit 2,(hl)
2110  9168 20 E7        	jr nz,1B
2111  916A
2112  916A CB 4E        	bit 1,(hl)
2113  916C C4 73 91     	call nz,Borra_Amadeus_shield
2114  916F
2115  916F 28 BF        	jr z,Borrando_Amadeus
2116  9171 18 DE        	jr 1B
2117  9173
2118  9173              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2119  9173
2120  9173              Borra_Amadeus_shield
2121  9173
2122  9173 3A 2E 8C     	ld a,(Ctrl_3)
2123  9176 CB 6F        	bit 5,a
2124  9178 28 08        	jr z,1F
2125  917A
2126  917A 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2127  917D CD 79 90     	call Extrae_address
2128  9180 18 06        	jr 2F
2129  9182
2130  9182 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2131  9185 CD 79 90     	call Extrae_address
2132  9188
2133  9188 CD B9 95     2 call Pinta_Sprites
2134  918B
2135  918B AF           	xor a
2136  918C 3C           	inc a											; Asegura NZ en la salida de la rutina.
2137  918D
2138  918D C9           	ret
2139  918E
2140  918E              Pinta_Amadeus_shield
2141  918E
2142  918E 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2143  9191 CD 79 90     	call Extrae_address
2144  9194 CD B9 95     	call Pinta_Sprites
2145  9197
2146  9197 AF           	xor a
2147  9198 3C           	inc a											; Asegura NZ en la salida de la rutina.
2148  9199
2149  9199 C9           	ret
2150  919A
2151  919A              Borra_Pinta_Amadeus_shield
2152  919A
2153  919A CD 73 91     	call Borra_Amadeus_shield
2154  919D CD 8E 91     	call Pinta_Amadeus_shield
2155  91A0 C9           	ret
2156  91A1
2157  91A1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2158  91A1              ;
2159  91A1              ;	19/6/24
2160  91A1              ;
2161  91A1
2162  91A1              Teclado
2163  91A1
2164  91A1              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2165  91A1
2166  91A1 3E F7        	ld a,$f7												; "5" para disparar.
2167  91A3 DB FE        	in a,($fe)
2168  91A5 E6 10        	and $10
2169  91A7
2170  91A7 CC 37 A0     	call z,Genera_disparo_Amadeus
2171  91AA
2172  91AA 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2173  91AC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2174  91AE E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2175  91B0 CC 26 9D         call z,Amadeus_a_izquierda
2176  91B3
2177  91B3 3E F7        	ld a,$f7
2178  91B5 DB FE        	in a,($fe)
2179  91B7 E6 01        	and $01
2180  91B9 C8           	ret z
2181  91BA
2182  91BA 3E F7        	ld a,$f7
2183  91BC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2184  91BE E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2185  91C0 CC 3E 9D     	call z,Amadeus_a_derecha
2186  91C3
2187  91C3 C9           	ret
2188  91C4
2189  91C4              ; ------------------------------------------------------------------------------------------------------------------------
2190  91C4              ;
2191  91C4              ;	06/07/24
2192  91C4              ;
2193  91C4
2194  91C4              Genera_explosion
2195  91C4
2196  91C4 21 40 8C     	ld hl,Clock_explosion
2197  91C7 35           	dec (hl)
2198  91C8 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2199  91CA
2200  91CA              Borra_entidad_colisionada
2201  91CA
2202  91CA CD D0 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2203  91CD CD D5 8F     	call Cargamos_registros_con_explosion
2204  91D0 CD C4 94     	call Genera_datos_de_impresion
2205  91D3
2206  91D3 AF           	xor a
2207  91D4 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2208  91D5
2209  91D5 C9           	ret
2210  91D6
2211  91D6              Siguiente_frame_explosion
2212  91D6
2213  91D6 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2214  91D8
2215  91D8              ; Avanza Frame de explosión.
2216  91D8
2217  91D8 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2218  91DB 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2219  91DE
2220  91DE 79           	ld a,c
2221  91DF 95           	sub l
2222  91E0 20 0B        	jr nz,1F
2223  91E2
2224  91E2              ; Fín de la entidad !!!!!!!!!!!!!
2225  91E2
2226  91E2 21 02 8C     	ld hl,Numero_parcial_de_entidades
2227  91E5 35           	dec (hl)
2228  91E6 23           	inc hl
2229  91E7 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2230  91E8
2231  91E8 CD 44 93     	call Limpiamos_bandeja_DRAW
2232  91EB 18 DD        	jr Borra_entidad_colisionada
2233  91ED
2234  91ED 23           1 inc hl
2235  91EE 23           	inc hl
2236  91EF 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2237  91F2 18 D6        	jr Borra_entidad_colisionada
2238  91F4
2239  91F4              ; ----- ----- ----- ----- -----
2240  91F4
2241  91F4              Genera_explosion_Amadeus
2242  91F4
2243  91F4 21 41 8C     	ld hl,Clock_explosion_Amadeus
2244  91F7 35           	dec (hl)
2245  91F8 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2246  91FA
2247  91FA              Borra_Amadeus_impactado
2248  91FA
2249  91FA CD 42 8E     	call Change_Amadeus
2250  91FD CD E2 8F     	call Cargamos_registros_con_explosion_Amadeus
2251  9200 CD 03 90     	call Genera_datos_de_impresion_Amadeus
2252  9203
2253  9203 21 2E 8C     	ld hl,Ctrl_3
2254  9206 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2255  9208
2256  9208 AF           	xor a
2257  9209 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2258  920A
2259  920A C9           	ret
2260  920B
2261  920B              Siguiente_frame_explosion_Amadeus
2262  920B
2263  920B 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2264  920D
2265  920D              ; Avanza Frame de explosión.
2266  920D
2267  920D 2A 77 89     	ld hl,(Pamm_Amadeus)
2268  9210 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2269  9213
2270  9213 79           	ld a,c
2271  9214 95           	sub l
2272  9215 20 0B        	jr nz,1F
2273  9217
2274  9217              ; Fín de Amadeus !!!!!!!!!!!!!
2275  9217              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2276  9217
2277  9217 AF           	xor a
2278  9218 32 74 89     	ld (Impacto_Amadeus),a
2279  921B 21 2E 8C     	ld hl,Ctrl_3
2280  921E CB F6        	set 6,(hl)
2281  9220
2282  9220 18 D8        	jr Borra_Amadeus_impactado
2283  9222
2284  9222 23           1 inc hl
2285  9223 23           	inc hl
2286  9224 22 77 89     	ld (Pamm_Amadeus),hl
2287  9227 18 D1        	jr Borra_Amadeus_impactado
2288  9229
2289  9229              ; ---------------------------------------------------------------
2290  9229
2291  9229              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9229              ; ******************************************************************************************************************************************************************************************
   2+ 9229              ;
   3+ 9229              ;   21/04/24
   4+ 9229              ;
   5+ 9229              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9229              ;   (XOR) bit a bit.
   7+ 9229              ;
   8+ 9229              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9229
  10+ 9229              Derivando_RND
  11+ 9229
  12+ 9229 21 F6 88         ld hl,Numeros_aleatorios
  13+ 922C
  14+ 922C ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 922E C5               push bc
  16+ 922F              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 922F 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9232              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9232
  20+ 9232 A7           6 and a                                 ; Carry a "0".
  21+ 9233 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9235 30 02            jr nc,1F
  23+ 9237
  24+ 9237 CB C1            set 0,c
  25+ 9239
  26+ 9239 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 923A E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 923C 5F               ld e,a
  29+ 923D
  30+ 923D 7A               ld a,d
  31+ 923E E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9240 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9242
  34+ 9242 CB 3F            srl a
  35+ 9244
  36+ 9244 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9245
  38+ 9245 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9246 28 04            jr z,4F
  40+ 9248
  41+ 9248 CB FF            set 7,a
  42+ 924A 18 02            jr 5F
  43+ 924C
  44+ 924C CB BF        4 res 7,a
  45+ 924E
  46+ 924E CB 21        5 sla c
  47+ 9250 10 E0            djnz 6B
  48+ 9252
  49+ 9252 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9253
  51+ 9253 77               ld (hl),a
  52+ 9254 23               inc hl
  53+ 9255 C1               pop bc
  54+ 9256 10 D4            djnz 3B
  55+ 9258
  56+ 9258 C9               ret
  57+ 9259
  58+ 9259
  59+ 9259
# file closed: RND_Derivando.asm
2292  9259              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9259              ;---------------------------------------------------------------------------------------------------------------
   2+ 9259              ;
   3+ 9259              ;   8/3/24
   4+ 9259              ;
   5+ 9259              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9259              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9259              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9259              ;	_ de la 1ª entidad del Nivel.
   9+ 9259              ;
  10+ 9259              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9259
  12+ 9259              ;	MODIFICA: HL,DE y A.
  13+ 9259              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9259
  15+ 9259              Inicializa_Nivel
  16+ 9259
  17+ 9259 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 925C CD 79 90     	call Extrae_address
  19+ 925F 7E           	ld a,(hl)
  20+ 9260 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9263 23           	inc hl
  22+ 9264 CD 71 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9267 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 926A CD 7A 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 926D
  26+ 926D CD 8B 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9270 C9           	ret
  28+ 9271
  29+ 9271              ; ----------------------
  30+ 9271
  31+ 9271 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9274 01 04 00     	ld bc,4
  33+ 9277 ED B0        	ldir
  34+ 9279 C9           	ret
  35+ 927A
  36+ 927A 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 927B CD 15 94         call Calcula_salto_en_BC
  38+ 927E 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9281 A7               and a
  40+ 9282 ED 4A            adc hl,bc
  41+ 9284 CD 79 90         call Extrae_address
  42+ 9287 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 928A C9               ret
  44+ 928B
  45+ 928B 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 928E CD 15 94     	call Calcula_salto_en_BC
  47+ 9291 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9294 A7               and a
  49+ 9295 ED 4A            adc hl,bc
  50+ 9297 CD 79 90         call Extrae_address
  51+ 929A 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 929D C9           	ret
  53+ 929E
  54+ 929E              ;---------------------------------------------------------------------------------------------------------------
  55+ 929E              ;
  56+ 929E              ;   5/1/24
  57+ 929E              ;
  58+ 929E              ;	Destruye A,BC,HL,DE
  59+ 929E
  60+ 929E              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 929E              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 929E
  63+ 929E              Inicia_Entidades
  64+ 929E
  65+ 929E              ; Preparamos los punteros de las cajas de entidades:
  66+ 929E
  67+ 929E CD 55 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92A1              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92A1 CD 5D 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92A4
  71+ 92A4 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92A7
  73+ 92A7 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92AA
  75+ 92AA CD C3 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92AD
  77+ 92AD 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 92B0
  79+ 92B0              ; En este punto:
  80+ 92B0              ;
  81+ 92B0              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92B0              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92B0
  84+ 92B0 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92B1
  86+ 92B1 7E           	ld a,(hl)
  87+ 92B2 CD 2F 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92B5
  89+ 92B5 CD 27 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92B8
  91+ 92B8              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92B8
  93+ 92B8 CD E5 93     	call Busca_mov_masticados_segun_tipo
  94+ 92BB
  95+ 92BB A7           	and a
  96+ 92BC 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92BE
  98+ 92BE              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92BE
 100+ 92BE              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92BE              ;	_ de este tipo de entidad.
 102+ 92BE
 103+ 92BE CD BD 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92C1 CD CA 9E     	call Transfiere_datos_de_contadores
 105+ 92C4
 106+ 92C4 18 06        	jr 4F
 107+ 92C6
 108+ 92C6 CD 68 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92C9
 110+ 92C9              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92C9              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92C9              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92C9              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92C9              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92C9
 116+ 92C9 CD A3 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92CC              ;																; _ Mov_masticados ya generados.
 118+ 92CC
 119+ 92CC CD BC 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92CF
 121+ 92CF DD E5        	push ix
 122+ 92D1 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92D2
 124+ 92D2 D5           	push de
 125+ 92D3 CD 98 94     	call Genera_coordenadas
 126+ 92D6
 127+ 92D6 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 128+ 92DA CD D0 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92DD D1           	pop de
 130+ 92DE
 131+ 92DE CD C4 94     	call Genera_datos_de_impresion
 132+ 92E1              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92E1              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92E1              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92E1              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92E1
 137+ 92E1 CD 67 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92E4
 139+ 92E4              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92E4
 141+ 92E4 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92E8 CD 54 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92EB
 144+ 92EB CD 44 93     	call Limpiamos_bandeja_DRAW
 145+ 92EE CD C7 90     	call Incrementa_punteros_de_cajas
 146+ 92F1
 147+ 92F1              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92F1              ; _ entidad del Nivel.
 149+ 92F1
 150+ 92F1 3A 2F 8C     	ld a,(Ctrl_4)
 151+ 92F4 E6 F0        	and $f0
 152+ 92F6 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92F9
 154+ 92F9              ; Siguiente entidad del Nivel.
 155+ 92F9
 156+ 92F9 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92FC 23           	inc hl 														; _ entidad del Nivel.
 158+ 92FD
 159+ 92FD C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92FE
 161+ 92FE 10 A7        	djnz 2B
 162+ 9300
 163+ 9300 C9           	ret
 164+ 9301
 165+ 9301              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9301              ;
 167+ 9301              ;	27/5/24
 168+ 9301              ;
 169+ 9301              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9301              ;
 171+ 9301
 172+ 9301              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9301              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9301
 175+ 9301 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9304 CD 27 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9307
 178+ 9307
 179+ 9307              Construye_movimientos_masticados_Amadeus
 180+ 9307
 181+ 9307 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 930A CD AF 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 930D              ;															; _ el (Contador_de_mov_masticados).
 184+ 930D CD 7F 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9310              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9310
 187+ 9310              ; Generamos movimientos masticados de Amadeus.
 188+ 9310
 189+ 9310 06 79        	ld b,121												; $0079, 121d.
 190+ 9312
 191+ 9312 C5           1 push bc
 192+ 9313 CD DC 96     	call Draw
 193+ 9316 CD 94 8F     	call Guarda_movimiento_masticado
 194+ 9319
 195+ 9319 CD 50 9A     	call Mov_right
 196+ 931C CD 50 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 931F
 198+ 931F C1           	pop bc
 199+ 9320 10 F0        	djnz 1B
 200+ 9322
 201+ 9322              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9322
 203+ 9322              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9322              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9322
 206+ 9322 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9325 01 08 00     	ld bc,8
 208+ 9328 A7           	and a
 209+ 9329 ED 42        	sbc hl,bc
 210+ 932B 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 932E
 212+ 932E C9           	ret
 213+ 932F
 214+ 932F              ; ---------------------------------------------------------------------
 215+ 932F              ;
 216+ 932F              ;	10/02/24
 217+ 932F              ;
 218+ 932F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 932F              ;
 220+ 932F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 932F
 222+ 932F              Definicion_segun_tipo
 223+ 932F
 224+ 932F CD 15 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9332 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9335 CD 1D 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9338 C9           	ret
 228+ 9339
 229+ 9339              ; ---------------------------------------------------------------------
 230+ 9339              ;
 231+ 9339              ;	6/7/24
 232+ 9339
 233+ 9339
 234+ 9339              Store_Restore_cajas
 235+ 9339
 236+ 9339 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 933D CD 54 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9340 CD C7 90     	call Incrementa_punteros_de_cajas
 239+ 9343 C9           	ret
 240+ 9344
 241+ 9344              ; ---------------------------------------------------------------------
 242+ 9344              ;
 243+ 9344              ;	23/6/24
 244+ 9344              ;
 245+ 9344              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9344              ;
 247+ 9344              ;	MODIFY: HL
 248+ 9344
 249+ 9344              Limpiamos_bandeja_DRAW
 250+ 9344
 251+ 9344 ED 73 08 8C  	ld (Stack),sp
 252+ 9348 31 E0 8B     	ld sp,Vel_left
 253+ 934B
 254+ 934B AF           	xor a
 255+ 934C 67           	ld h,a
 256+ 934D 6F           	ld l,a
 257+ 934E
 258+ 934E E5           	push hl
 259+ 934F E5           	push hl
 260+ 9350 E5           	push hl
 261+ 9351 E5           	push hl
 262+ 9352 E5           	push hl
 263+ 9353 E5           	push hl
 264+ 9354 E5           	push hl
 265+ 9355 E5           	push hl
 266+ 9356 E5           	push hl
 267+ 9357 E5           	push hl
 268+ 9358 E5           	push hl
 269+ 9359 E5           	push hl
 270+ 935A E5           	push hl
 271+ 935B E5           	push hl
 272+ 935C E5           	push hl
 273+ 935D E5           	push hl
 274+ 935E E5           	push hl
 275+ 935F E5           	push hl
 276+ 9360
 277+ 9360 33           	inc sp
 278+ 9361
 279+ 9361 E5           	push hl
 280+ 9362 ED 7B 08 8C  	ld sp,(Stack)
 281+ 9366
 282+ 9366 C9           	ret
 283+ 9367
 284+ 9367              ; ---------------------------------------------------------------------
 285+ 9367              ;
 286+ 9367              ;	24/03/24
 287+ 9367
 288+ 9367 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 936A 2B           	dec hl
 290+ 936B 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 936E C9           	ret
 292+ 936F
 293+ 936F              ; ---------------------------------------------------------------------
 294+ 936F              ;
 295+ 936F              ;	8/5/24
 296+ 936F
 297+ 936F              Reinicia_entidad_maliciosa
 298+ 936F
 299+ 936F              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 936F
 301+ 936F CD BD 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9372 CD CA 9E     	call Transfiere_datos_de_contadores
 303+ 9375
 304+ 9375              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9375
 306+ 9375 3A BB 8B     	ld a,(Tipo)
 307+ 9378 CD 2F 93     	call Definicion_segun_tipo
 308+ 937B
 309+ 937B E5           	push hl
 310+ 937C DD E1        	pop ix
 311+ 937E
 312+ 937E DD 6E 0B     	ld l,(ix+11)
 313+ 9381 DD 66 0C     	ld h,(ix+12)
 314+ 9384
 315+ 9384 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9387
 317+ 9387 CD BC 8F     	call Cargamos_registros_con_mov_masticado
 318+ 938A
 319+ 938A              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 938A              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 938A              ; Ejemplos.
 322+ 938A
 323+ 938A              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 938A              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 938A              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 938A              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 938A              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 938A
 329+ 938A 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 938D CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 938F
 332+ 938F 7E           	ld a,(hl)
 333+ 9390 CB 2F        	sra a
 334+ 9392 CB 2F        	sra a
 335+ 9394
 336+ 9394 32 C6 8B     	ld (Velocidad),a
 337+ 9397
 338+ 9397 3E 40        	ld a,$40
 339+ 9399 BE           	cp (hl)
 340+ 939A C0           	ret nz
 341+ 939B
 342+ 939B              ; Límitador.
 343+ 939B
 344+ 939B              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 939B
 346+ 939B CB 2E        	sra (hl)
 347+ 939D 21 C6 8B     	ld hl,Velocidad
 348+ 93A0 CB 2E        	sra (hl)
 349+ 93A2
 350+ 93A2 C9           	ret
 351+ 93A3
 352+ 93A3              ; ---------------------------------------------------------------------
 353+ 93A3              ;
 354+ 93A3              ;	22/01/24
 355+ 93A3
 356+ 93A3 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93A6 CB 46        	bit 0,(hl)
 358+ 93A8 20 0D        	jr nz,1F
 359+ 93AA CB 4E        	bit 1,(hl)
 360+ 93AC 20 0C        	jr nz,2F
 361+ 93AE CB 56        	bit 2,(hl)
 362+ 93B0 20 0B        	jr nz,3F
 363+ 93B2 CB 5E        	bit 3,(hl)
 364+ 93B4 20 0A        	jr nz,4F
 365+ 93B6 C9           	ret
 366+ 93B7
 367+ 93B7 CB E6        1 set 4,(hl)
 368+ 93B9 C9           	ret
 369+ 93BA CB EE        2 set 5,(hl)
 370+ 93BC C9           	ret
 371+ 93BD CB F6        3 set 6,(hl)
 372+ 93BF C9           	ret
 373+ 93C0 CB FE        4 set 7,(hl)
 374+ 93C2 C9           	ret
 375+ 93C3
 376+ 93C3              ; ---------------------------------------------------------------------
 377+ 93C3              ;
 378+ 93C3              ;	23/01/24
 379+ 93C3              ;
 380+ 93C3              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93C3              ;
 382+ 93C3              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93C3              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93C3              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93C3              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93C3
 387+ 93C3              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93C3
 389+ 93C3 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93C4 3D           	dec a
 391+ 93C5 20 06        	jr nz,1F
 392+ 93C7
 393+ 93C7              ; --- Tipo_1
 394+ 93C7
 395+ 93C7 21 2F 8C     	ld hl,Ctrl_4
 396+ 93CA CB C6        	set 0,(hl)
 397+ 93CC C9           	ret
 398+ 93CD
 399+ 93CD 3D           1 dec a
 400+ 93CE 20 06        	jr nz,2F
 401+ 93D0
 402+ 93D0              ; --- Tipo_2
 403+ 93D0
 404+ 93D0 21 2F 8C     	ld hl,Ctrl_4
 405+ 93D3 CB CE        	set 1,(hl)
 406+ 93D5 C9           	ret
 407+ 93D6
 408+ 93D6 3D           2 dec a
 409+ 93D7 20 06        	jr nz,3F
 410+ 93D9
 411+ 93D9              ; --- Tipo_3
 412+ 93D9
 413+ 93D9 21 2F 8C     	ld hl,Ctrl_4
 414+ 93DC CB D6        	set 2,(hl)
 415+ 93DE C9           	ret
 416+ 93DF
 417+ 93DF              ; --- Tipo_3
 418+ 93DF
 419+ 93DF 21 2F 8C     3 ld hl,Ctrl_4
 420+ 93E2 CB D6        	set 2,(hl)
 421+ 93E4 C9           	ret
 422+ 93E5
 423+ 93E5              ; ---------------------------------------------------------------------
 424+ 93E5              ;
 425+ 93E5              ;	22/01/24
 426+ 93E5
 427+ 93E5 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93E8 CB 46        	bit 0,(hl)
 429+ 93EA 20 0E        	jr nz,1F
 430+ 93EC
 431+ 93EC CB 4E        	bit 1,(hl)
 432+ 93EE 20 10        	jr nz,2F
 433+ 93F0
 434+ 93F0 CB 56        	bit 2,(hl)
 435+ 93F2 20 12        	jr nz,3F
 436+ 93F4
 437+ 93F4 CB 5E        	bit 3,(hl)
 438+ 93F6 20 14        	jr nz,4F
 439+ 93F8 18 19        	jr 6F
 440+ 93FA
 441+ 93FA              ; Entidad_de_Tipo_1.
 442+ 93FA
 443+ 93FA CB 66        1 bit 4,(hl)
 444+ 93FC 28 15        	jr z,6F
 445+ 93FE 18 10        	jr 5F
 446+ 9400
 447+ 9400              ; Entidad_de_Tipo_2.
 448+ 9400
 449+ 9400 CB 6E        2 bit 5,(hl)
 450+ 9402 28 0F        	jr z,6F
 451+ 9404 18 0A        	jr 5F
 452+ 9406
 453+ 9406              ; Entidad_de_Tipo_3.
 454+ 9406
 455+ 9406 CB 76        3 bit 6,(hl)
 456+ 9408 28 09        	jr z,6F
 457+ 940A 18 04        	jr 5F
 458+ 940C
 459+ 940C              ; Entidad_de_Tipo_4.
 460+ 940C
 461+ 940C CB 7E        4 bit 7,(hl)
 462+ 940E 28 03        	jr z,6F
 463+ 9410
 464+ 9410              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9410
 466+ 9410 AF           5 xor a
 467+ 9411 3C           	inc a
 468+ 9412 C9           	ret
 469+ 9413
 470+ 9413              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9413
 472+ 9413 AF           6 xor a
 473+ 9414 C9           	ret
 474+ 9415
 475+ 9415              ;	------------------------------------------------------------------------------------
 476+ 9415              ;
 477+ 9415              ;	12/01/24
 478+ 9415              ;
 479+ 9415              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9415              ;
 481+ 9415              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9415              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9415
 484+ 9415 CB 27        Calcula_salto_en_BC sla a
 485+ 9417 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9419 4F           	ld c,a
 487+ 941A 06 00        	ld b,0
 488+ 941C C9           	ret
 489+ 941D
 490+ 941D              ; ------------------------------------------------------------------
 491+ 941D              ;
 492+ 941D              ;	19/1/24
 493+ 941D              ;
 494+ 941D              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 941D              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 941D
 497+ 941D A7           Situa_en_datos_de_definicion and a
 498+ 941E ED 4A        	adc hl,bc
 499+ 9420 CD 79 90     	call Extrae_address
 500+ 9423 22 06 8C         ld (Datos_de_entidad),hl
 501+ 9426 C9           	ret
 502+ 9427
 503+ 9427              ; ------------------------------------------------------------------
 504+ 9427
 505+ 9427              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9427              ; 	inc de
 507+ 9427              ; 	inc de
 508+ 9427              ; 	ex de,hl
 509+ 9427              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9427              ; 	ret
 511+ 9427
 512+ 9427              ; ----------------------------------------------------------------------------------------------------------
 513+ 9427              ;
 514+ 9427              ;	24/6/24
 515+ 9427              ;
 516+ 9427              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9427              ;	_ de entidad.
 518+ 9427              ;
 519+ 9427              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9427              ;
 521+ 9427              ;
 522+ 9427              ;	MODIFICA: HL,DE y BC
 523+ 9427
 524+ 9427
 525+ 9427              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9427
 527+ 9427 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 942A 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 942B 12           	ld (de),a
 530+ 942C 23           	inc hl
 531+ 942D              ;
 532+ 942D 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9430 01 02 00     	ld bc,2
 534+ 9433 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9435              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9435 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 9438 7E           	ld a,(hl)
 538+ 9439 12           	ld (de),a
 539+ 943A 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 943B
 541+ 943B 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 943E 01 04 00     	ld bc,4
 543+ 9441 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9443
 545+ 9443 11 D8 8B     	ld de,Posicion_inicio
 546+ 9446 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9449 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 944B
 549+ 944B 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 944E 01 02 00     	ld bc,2
 551+ 9451 ED B0        	ldir
 552+ 9453
 553+ 9453 C9           	ret
 554+ 9454
 555+ 9454              ; ----------------------------------------------------------------------------------------------------------
 556+ 9454              ;
 557+ 9454              ;	1/8/24
 558+ 9454              ;
 559+ 9454
 560+ 9454              Parametros_de_bandeja_DRAW_a_caja
 561+ 9454
 562+ 9454 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 9457 01 0C 00     	ld bc,12
 564+ 945A ED B0        	ldir
 565+ 945C C9           	ret
 566+ 945D
 567+ 945D              ;---------------------------------------------------------------------------------------------------------------
 568+ 945D              ;
 569+ 945D              ;	5/1/24
 570+ 945D              ;
 571+ 945D              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 945D              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 945D              ;
 574+ 945D              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 945D              ;
 576+ 945D              ;	(Numero_parcial_de_entidades)="7".
 577+ 945D              ;
 578+ 945D              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 945D              ;
 580+ 945D              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 945D              ;
 582+ 945D              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 945D              ;	MODIFICA: A y B.
 584+ 945D              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 945D
 586+ 945D              Inicializa_Numero_parcial_de_entidades
 587+ 945D
 588+ 945D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 945D
 590+ 945D 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 9460 A7           	and a
 592+ 9461
 593+ 9461              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9461              ;	jr z,$
 595+ 9461              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9461
 597+ 9461 20 03        	jr nz,3F
 598+ 9463
 599+ 9463              ; ---------- ---------- ----------
 600+ 9463
 601+ 9463              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9463              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9463
 604+ 9463 CD 59 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9466
 606+ 9466              ; ---------- ---------- ----------
 607+ 9466
 608+ 9466 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9469 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 946B 38 08        	jr c,1F
 611+ 946D
 612+ 946D              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 946D              ; Actualizamos variables.
 614+ 946D
 615+ 946D 3E 07        	ld a,7
 616+ 946F 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9472 47           	ld b,a
 618+ 9473 18 04        	jr 2F
 619+ 9475
 620+ 9475              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9475              ; (Numero_de_entidades)="0".
 622+ 9475
 623+ 9475 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9478 47           	ld b,a
 625+ 9479 C9           2 ret
 626+ 947A
# file closed: Rutinas_de_inicio_y_niveles.asm
2293  947A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 947A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 947A              ;
   3+ 947A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 947A              ;
   5+ 947A              ; *****************************************************************************************************************************************************************************************
   6+ 947A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 947A
   8+ 947A 7C           calcula_tercio ld a,h
   9+ 947B E6 18        	and $18
  10+ 947D CB 2F        	sra a
  11+ 947F CB 2F        	sra a
  12+ 9481 CB 2F        	sra a
  13+ 9483 C9           	ret
  14+ 9484
# file closed: calcula_tercio.asm
2294  9484              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9484              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9484              ;
   3+ 9484              ;
   4+ 9484              ;	CLS.
   5+ 9484              ;
   6+ 9484              ;	Limpia la pantalla y define sus atributos.
   7+ 9484              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9484              ;
   9+ 9484              ;	COLORES: 0 ..... NEGRO
  10+ 9484              ;    		 1 ..... AZUL
  11+ 9484              ; 			 2 ..... ROJO
  12+ 9484              ;			 3 ..... MAGENTA
  13+ 9484              ; 			 4 ..... VERDE
  14+ 9484              ; 			 5 ..... CIAN
  15+ 9484              ;			 6 ..... AMARILLO
  16+ 9484              ; 			 7 ..... BLANCO
  17+ 9484              ;
  18+ 9484              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9484              ;
  20+ 9484              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9484
  22+ 9484
  23+ 9484 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9487 11 01 40     	LD DE,$4001
  25+ 948A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 948D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 948F ED B0        	LDIR
  28+ 9491 01 FF 02     	LD BC,767
  29+ 9494 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9495 ED B0        	LDIR
  31+ 9497 C9           	ret
  32+ 9498
# file closed: Cls.asm
2295  9498              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9498              ; ------------------------------------------------------------------------
   2+ 9498              ;
   3+ 9498              ;	30/1/24
   4+ 9498              ;
   5+ 9498              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9498              ;	Fila superior "0", Columna izquierda "0".
   7+ 9498              ;
   8+ 9498              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9498              ;
  10+ 9498              ;	Modifica: A,BC y DE.
  11+ 9498
  12+ 9498 7D           Genera_coordenadas ld a,l
  13+ 9499 E6 1F        	and $1f
  14+ 949B 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 949E
  16+ 949E 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 949F FE 40        	cp $40
  18+ 94A1 38 1C        	jr c,4F
  19+ 94A3
  20+ 94A3 CD 7A 94     	call calcula_tercio
  21+ 94A6 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94A7
  23+ 94A7 1E 00        	ld e,0
  24+ 94A9 7D           	ld a,l
  25+ 94AA E6 E0        	and $e0
  26+ 94AC 28 01        	jr z,1F
  27+ 94AE 04           	inc b
  28+ 94AF
  29+ 94AF 04           1 inc b
  30+ 94B0 05           	dec b
  31+ 94B1 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94B3              ;														; _ , salimos.
  33+ 94B3 1C           3 inc e
  34+ 94B4 D6 20        	sub 32
  35+ 94B6 20 FB        	jr nz,3B
  36+ 94B8 10 F5        	djnz 1B
  37+ 94BA
  38+ 94BA 7B           2 ld a,e
  39+ 94BB 32 BD 8B     	ld (Coordenada_y),a
  40+ 94BE C9           	ret
  41+ 94BF
  42+ 94BF AF           4 xor a
  43+ 94C0 32 BD 8B     	ld (Coordenada_y),a
  44+ 94C3 C9           	ret
  45+ 94C4
# file closed: Genera_coordenadas.asm
2296  94C4              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94C4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94C4              ;
   3+ 94C4              ;	11/03/24
   4+ 94C4              ;
   5+ 94C4              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94C4              ;   DE contiene Puntero_objeto.
   7+ 94C4              ;   IX contiene el Puntero de impresión.
   8+ 94C4
   9+ 94C4              Genera_datos_de_impresion
  10+ 94C4
  11+ 94C4 ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94C8
  13+ 94C8 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94CB DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94CD
  16+ 94CD 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 94D0
  18+ 94D0 3E 05            ld a,5
  19+ 94D2 85               add l
  20+ 94D3 6F               ld l,a
  21+ 94D4
  22+ 94D4 F9               ld sp,hl
  23+ 94D5 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 94D8
  25+ 94D8 21 00 00         ld hl,0
  26+ 94DB
  27+ 94DB DD E5            push ix
  28+ 94DD 3B               dec sp
  29+ 94DE ED 7A            adc hl,sp
  30+ 94E0 D5               push de
  31+ 94E1
  32+ 94E1              ; Recuperamos SP.
  33+ 94E1
  34+ 94E1 ED 7B 08 8C      ld sp,(Stack)
  35+ 94E5
  36+ 94E5 E5               push hl
  37+ 94E6 F1               pop af
  38+ 94E7 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94E8
  40+ 94E8              ; Tenemos el encabezado listo.
  41+ 94E8              ; Preparamos registros para generar los scanlines.
  42+ 94E8
  43+ 94E8 DD E5            push ix
  44+ 94EA E1               pop hl                                          ; 1er scanline en HL.
  45+ 94EB
  46+ 94EB ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 94EF
  48+ 94EF              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94EF              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94EF
  51+ 94EF 7C               ld a,h
  52+ 94F0 FE 50            cp $50
  53+ 94F2 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94F4
  55+ 94F4 20 05            jr nz,2F
  56+ 94F6
  57+ 94F6 7D               ld a,l
  58+ 94F7 FE E0            cp $e0
  59+ 94F9 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94FB
  61+ 94FB 7D           2 ld a,l
  62+ 94FC FE C0            cp $c0
  63+ 94FE D2 90 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9501
  65+ 9501              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9501
  67+ 9501 CD 8E 99         call NextScan
  68+ 9504 EB               ex de,hl
  69+ 9505
  70+ 9505 73               ld (hl),e
  71+ 9506 23               inc hl
  72+ 9507 72               ld (hl),d
  73+ 9508 23               inc hl
  74+ 9509
  75+ 9509 EB               ex de,hl
  76+ 950A
  77+ 950A CD 8E 99         call NextScan
  78+ 950D EB               ex de,hl
  79+ 950E
  80+ 950E 73               ld (hl),e
  81+ 950F 23               inc hl
  82+ 9510 72               ld (hl),d
  83+ 9511 23               inc hl
  84+ 9512
  85+ 9512 EB               ex de,hl
  86+ 9513
  87+ 9513 CD 8E 99         call NextScan
  88+ 9516 EB               ex de,hl
  89+ 9517
  90+ 9517 73               ld (hl),e
  91+ 9518 23               inc hl
  92+ 9519 72               ld (hl),d
  93+ 951A 23               inc hl
  94+ 951B
  95+ 951B EB               ex de,hl
  96+ 951C
  97+ 951C CD 8E 99         call NextScan
  98+ 951F EB               ex de,hl
  99+ 9520
 100+ 9520 73               ld (hl),e
 101+ 9521 23               inc hl
 102+ 9522 72               ld (hl),d
 103+ 9523 23               inc hl
 104+ 9524
 105+ 9524 EB               ex de,hl
 106+ 9525
 107+ 9525 CD 8E 99         call NextScan
 108+ 9528 EB               ex de,hl
 109+ 9529
 110+ 9529 73               ld (hl),e
 111+ 952A 23               inc hl
 112+ 952B 72               ld (hl),d
 113+ 952C 23               inc hl
 114+ 952D
 115+ 952D EB               ex de,hl
 116+ 952E
 117+ 952E CD 8E 99         call NextScan
 118+ 9531 EB               ex de,hl
 119+ 9532
 120+ 9532 73               ld (hl),e
 121+ 9533 23               inc hl
 122+ 9534 72               ld (hl),d
 123+ 9535 23               inc hl
 124+ 9536
 125+ 9536 EB               ex de,hl
 126+ 9537
 127+ 9537 CD 8E 99         call NextScan
 128+ 953A EB               ex de,hl
 129+ 953B
 130+ 953B 73               ld (hl),e
 131+ 953C 23               inc hl
 132+ 953D 72               ld (hl),d
 133+ 953E 23               inc hl
 134+ 953F
 135+ 953F EB               ex de,hl
 136+ 9540
 137+ 9540 CD 8E 99         call NextScan
 138+ 9543 EB               ex de,hl
 139+ 9544
 140+ 9544 73               ld (hl),e
 141+ 9545 23               inc hl
 142+ 9546 72               ld (hl),d
 143+ 9547 23               inc hl
 144+ 9548
 145+ 9548 EB               ex de,hl
 146+ 9549
 147+ 9549 CD 8E 99         call NextScan
 148+ 954C EB               ex de,hl
 149+ 954D
 150+ 954D 73               ld (hl),e
 151+ 954E 23               inc hl
 152+ 954F 72               ld (hl),d
 153+ 9550 23               inc hl
 154+ 9551
 155+ 9551 EB               ex de,hl
 156+ 9552
 157+ 9552 CD 8E 99         call NextScan
 158+ 9555 EB               ex de,hl
 159+ 9556
 160+ 9556 73               ld (hl),e
 161+ 9557 23               inc hl
 162+ 9558 72               ld (hl),d
 163+ 9559 23               inc hl
 164+ 955A
 165+ 955A EB               ex de,hl
 166+ 955B
 167+ 955B CD 8E 99         call NextScan
 168+ 955E EB               ex de,hl
 169+ 955F
 170+ 955F 73               ld (hl),e
 171+ 9560 23               inc hl
 172+ 9561 72               ld (hl),d
 173+ 9562 23               inc hl
 174+ 9563
 175+ 9563 EB               ex de,hl
 176+ 9564
 177+ 9564 CD 8E 99         call NextScan
 178+ 9567 EB               ex de,hl
 179+ 9568
 180+ 9568 73               ld (hl),e
 181+ 9569 23               inc hl
 182+ 956A 72               ld (hl),d
 183+ 956B 23               inc hl
 184+ 956C
 185+ 956C EB               ex de,hl
 186+ 956D
 187+ 956D CD 8E 99         call NextScan
 188+ 9570 EB               ex de,hl
 189+ 9571
 190+ 9571 73               ld (hl),e
 191+ 9572 23               inc hl
 192+ 9573 72               ld (hl),d
 193+ 9574 23               inc hl
 194+ 9575
 195+ 9575 EB               ex de,hl
 196+ 9576
 197+ 9576 CD 8E 99         call NextScan
 198+ 9579 EB               ex de,hl
 199+ 957A
 200+ 957A 73               ld (hl),e
 201+ 957B 23               inc hl
 202+ 957C 72               ld (hl),d
 203+ 957D 23               inc hl
 204+ 957E
 205+ 957E EB               ex de,hl
 206+ 957F
 207+ 957F CD 8E 99         call NextScan
 208+ 9582 EB               ex de,hl
 209+ 9583
 210+ 9583 73               ld (hl),e
 211+ 9584 23               inc hl
 212+ 9585 72               ld (hl),d
 213+ 9586 23               inc hl
 214+ 9587
 215+ 9587              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9587
 217+ 9587 22 28 8C         ld (Scanlines_album_SP),hl
 218+ 958A
 219+ 958A              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 958A
 221+ 958A 08               ex af,af
 222+ 958B
 223+ 958B F5               push af
 224+ 958C E1               pop hl
 225+ 958D
 226+ 958D 36 10            ld (hl),16
 227+ 958F
 228+ 958F C9               ret
 229+ 9590
 230+ 9590              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9590
 232+ 9590              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9590
 234+ 9590 3E 57            ld a,$57
 235+ 9592 94               sub h
 236+ 9593 47               ld b,a
 237+ 9594
 238+ 9594 3E DF            ld a,$df
 239+ 9596 BD               cp l
 240+ 9597 38 04            jr c,1F
 241+ 9599
 242+ 9599 3E 08            ld a,8
 243+ 959B 80               add b
 244+ 959C 47               ld b,a
 245+ 959D
 246+ 959D              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 959D              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 959D
 249+ 959D 48           1 ld c,b
 250+ 959E 0C               inc c
 251+ 959F
 252+ 959F 04               inc b
 253+ 95A0 05               dec b
 254+ 95A1 20 02            jr nz,3F
 255+ 95A3
 256+ 95A3 18 0B            jr 6F
 257+ 95A5
 258+ 95A5 CD 8E 99     3 call NextScan
 259+ 95A8 EB               ex de,hl
 260+ 95A9
 261+ 95A9 73               ld (hl),e
 262+ 95AA 23               inc hl
 263+ 95AB 72               ld (hl),d
 264+ 95AC 23               inc hl
 265+ 95AD
 266+ 95AD EB               ex de,hl
 267+ 95AE 10 F5            djnz 3B
 268+ 95B0
 269+ 95B0 ED 53 28 8C  6 ld (Scanlines_album_SP),de
 270+ 95B4
 271+ 95B4 08           5 ex af,af
 272+ 95B5 F5               push af
 273+ 95B6 E1               pop hl
 274+ 95B7
 275+ 95B7 71               ld (hl),c
 276+ 95B8
 277+ 95B8 C9               ret
 278+ 95B9
# file closed: Genera_datos_de_impresion.asm
2297  95B9              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95B9              ; -----------------------------------------------------------------------------
   2+ 95B9              ;
   3+ 95B9              ;   11/03/24
   4+ 95B9              ;
   5+ 95B9
   6+ 95B9              Pinta_Sprites
   7+ 95B9
   8+ 95B9              ;    ld hl,(Scanlines_album_SP)
   9+ 95B9              ;    call Extrae_address
  10+ 95B9
  11+ 95B9              ;    inc h
  12+ 95B9              ;    dec h
  13+ 95B9              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95B9
  15+ 95B9 ED 73 08 8C      ld (Stack),sp
  16+ 95BD
  17+ 95BD EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95BE              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95BE 2C               inc l
  20+ 95BF 2C               inc l
  21+ 95C0
  22+ 95C0 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95C1
  24+ 95C1 2C               inc l
  25+ 95C2 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95C3
  27+ 95C3              ;   Seleccionamos rutina de impresión:
  28+ 95C3
  29+ 95C3 3E 10            ld a,16
  30+ 95C5 B8               cp b
  31+ 95C6 C2 C2 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95C9
  33+ 95C9              ;   Rutinas:
  34+ 95C9
  35+ 95C9              Pinta_rapido    ;   1520 t/states.
  36+ 95C9
  37+ 95C9 E1               pop hl
  38+ 95CA
  39+ 95CA 1A               ld a,(de)
  40+ 95CB AE               xor (hl)
  41+ 95CC 77               ld (hl),a
  42+ 95CD 2C               inc l
  43+ 95CE 1C               inc e
  44+ 95CF 1A               ld a,(de)
  45+ 95D0 AE               xor (hl)
  46+ 95D1 77               ld (hl),a
  47+ 95D2 2C               inc l
  48+ 95D3 1C               inc e
  49+ 95D4 1A               ld a,(de)
  50+ 95D5 AE               xor (hl)
  51+ 95D6 77               ld (hl),a
  52+ 95D7 13               inc de
  53+ 95D8
  54+ 95D8 E1               pop hl
  55+ 95D9
  56+ 95D9 1A               ld a,(de)
  57+ 95DA AE               xor (hl)
  58+ 95DB 77               ld (hl),a
  59+ 95DC 2C               inc l
  60+ 95DD 1C               inc e
  61+ 95DE 1A               ld a,(de)
  62+ 95DF AE               xor (hl)
  63+ 95E0 77               ld (hl),a
  64+ 95E1 2C               inc l
  65+ 95E2 1C               inc e
  66+ 95E3 1A               ld a,(de)
  67+ 95E4 AE               xor (hl)
  68+ 95E5 77               ld (hl),a
  69+ 95E6 13               inc de
  70+ 95E7
  71+ 95E7 E1               pop hl
  72+ 95E8
  73+ 95E8 1A               ld a,(de)
  74+ 95E9 AE               xor (hl)
  75+ 95EA 77               ld (hl),a
  76+ 95EB 2C               inc l
  77+ 95EC 1C               inc e
  78+ 95ED 1A               ld a,(de)
  79+ 95EE AE               xor (hl)
  80+ 95EF 77               ld (hl),a
  81+ 95F0 2C               inc l
  82+ 95F1 1C               inc e
  83+ 95F2 1A               ld a,(de)
  84+ 95F3 AE               xor (hl)
  85+ 95F4 77               ld (hl),a
  86+ 95F5 13               inc de
  87+ 95F6
  88+ 95F6 E1               pop hl
  89+ 95F7
  90+ 95F7 1A               ld a,(de)
  91+ 95F8 AE               xor (hl)
  92+ 95F9 77               ld (hl),a
  93+ 95FA 2C               inc l
  94+ 95FB 1C               inc e
  95+ 95FC 1A               ld a,(de)
  96+ 95FD AE               xor (hl)
  97+ 95FE 77               ld (hl),a
  98+ 95FF 2C               inc l
  99+ 9600 1C               inc e
 100+ 9601 1A               ld a,(de)
 101+ 9602 AE               xor (hl)
 102+ 9603 77               ld (hl),a
 103+ 9604 13               inc de
 104+ 9605
 105+ 9605 E1               pop hl
 106+ 9606
 107+ 9606 1A               ld a,(de)
 108+ 9607 AE               xor (hl)
 109+ 9608 77               ld (hl),a
 110+ 9609 2C               inc l
 111+ 960A 1C               inc e
 112+ 960B 1A               ld a,(de)
 113+ 960C AE               xor (hl)
 114+ 960D 77               ld (hl),a
 115+ 960E 2C               inc l
 116+ 960F 1C               inc e
 117+ 9610 1A               ld a,(de)
 118+ 9611 AE               xor (hl)
 119+ 9612 77               ld (hl),a
 120+ 9613 13               inc de
 121+ 9614
 122+ 9614 E1               pop hl
 123+ 9615
 124+ 9615 1A               ld a,(de)
 125+ 9616 AE               xor (hl)
 126+ 9617 77               ld (hl),a
 127+ 9618 2C               inc l
 128+ 9619 1C               inc e
 129+ 961A 1A               ld a,(de)
 130+ 961B AE               xor (hl)
 131+ 961C 77               ld (hl),a
 132+ 961D 2C               inc l
 133+ 961E 1C               inc e
 134+ 961F 1A               ld a,(de)
 135+ 9620 AE               xor (hl)
 136+ 9621 77               ld (hl),a
 137+ 9622 13               inc de
 138+ 9623
 139+ 9623 E1               pop hl
 140+ 9624
 141+ 9624 1A               ld a,(de)
 142+ 9625 AE               xor (hl)
 143+ 9626 77               ld (hl),a
 144+ 9627 2C               inc l
 145+ 9628 1C               inc e
 146+ 9629 1A               ld a,(de)
 147+ 962A AE               xor (hl)
 148+ 962B 77               ld (hl),a
 149+ 962C 2C               inc l
 150+ 962D 1C               inc e
 151+ 962E 1A               ld a,(de)
 152+ 962F AE               xor (hl)
 153+ 9630 77               ld (hl),a
 154+ 9631 13               inc de
 155+ 9632
 156+ 9632 E1               pop hl
 157+ 9633
 158+ 9633 1A               ld a,(de)
 159+ 9634 AE               xor (hl)
 160+ 9635 77               ld (hl),a
 161+ 9636 2C               inc l
 162+ 9637 1C               inc e
 163+ 9638 1A               ld a,(de)
 164+ 9639 AE               xor (hl)
 165+ 963A 77               ld (hl),a
 166+ 963B 2C               inc l
 167+ 963C 1C               inc e
 168+ 963D 1A               ld a,(de)
 169+ 963E AE               xor (hl)
 170+ 963F 77               ld (hl),a
 171+ 9640 13               inc de
 172+ 9641
 173+ 9641 E1               pop hl
 174+ 9642
 175+ 9642 1A               ld a,(de)
 176+ 9643 AE               xor (hl)
 177+ 9644 77               ld (hl),a
 178+ 9645 2C               inc l
 179+ 9646 1C               inc e
 180+ 9647 1A               ld a,(de)
 181+ 9648 AE               xor (hl)
 182+ 9649 77               ld (hl),a
 183+ 964A 2C               inc l
 184+ 964B 1C               inc e
 185+ 964C 1A               ld a,(de)
 186+ 964D AE               xor (hl)
 187+ 964E 77               ld (hl),a
 188+ 964F 13               inc de
 189+ 9650
 190+ 9650 E1               pop hl
 191+ 9651
 192+ 9651 1A               ld a,(de)
 193+ 9652 AE               xor (hl)
 194+ 9653 77               ld (hl),a
 195+ 9654 2C               inc l
 196+ 9655 1C               inc e
 197+ 9656 1A               ld a,(de)
 198+ 9657 AE               xor (hl)
 199+ 9658 77               ld (hl),a
 200+ 9659 2C               inc l
 201+ 965A 1C               inc e
 202+ 965B 1A               ld a,(de)
 203+ 965C AE               xor (hl)
 204+ 965D 77               ld (hl),a
 205+ 965E 13               inc de
 206+ 965F
 207+ 965F E1               pop hl
 208+ 9660
 209+ 9660 1A               ld a,(de)
 210+ 9661 AE               xor (hl)
 211+ 9662 77               ld (hl),a
 212+ 9663 2C               inc l
 213+ 9664 1C               inc e
 214+ 9665 1A               ld a,(de)
 215+ 9666 AE               xor (hl)
 216+ 9667 77               ld (hl),a
 217+ 9668 2C               inc l
 218+ 9669 1C               inc e
 219+ 966A 1A               ld a,(de)
 220+ 966B AE               xor (hl)
 221+ 966C 77               ld (hl),a
 222+ 966D 13               inc de
 223+ 966E
 224+ 966E E1               pop hl
 225+ 966F
 226+ 966F 1A               ld a,(de)
 227+ 9670 AE               xor (hl)
 228+ 9671 77               ld (hl),a
 229+ 9672 2C               inc l
 230+ 9673 1C               inc e
 231+ 9674 1A               ld a,(de)
 232+ 9675 AE               xor (hl)
 233+ 9676 77               ld (hl),a
 234+ 9677 2C               inc l
 235+ 9678 1C               inc e
 236+ 9679 1A               ld a,(de)
 237+ 967A AE               xor (hl)
 238+ 967B 77               ld (hl),a
 239+ 967C 13               inc de
 240+ 967D
 241+ 967D E1               pop hl
 242+ 967E
 243+ 967E 1A               ld a,(de)
 244+ 967F AE               xor (hl)
 245+ 9680 77               ld (hl),a
 246+ 9681 2C               inc l
 247+ 9682 1C               inc e
 248+ 9683 1A               ld a,(de)
 249+ 9684 AE               xor (hl)
 250+ 9685 77               ld (hl),a
 251+ 9686 2C               inc l
 252+ 9687 1C               inc e
 253+ 9688 1A               ld a,(de)
 254+ 9689 AE               xor (hl)
 255+ 968A 77               ld (hl),a
 256+ 968B 13               inc de
 257+ 968C
 258+ 968C E1               pop hl
 259+ 968D
 260+ 968D 1A               ld a,(de)
 261+ 968E AE               xor (hl)
 262+ 968F 77               ld (hl),a
 263+ 9690 2C               inc l
 264+ 9691 1C               inc e
 265+ 9692 1A               ld a,(de)
 266+ 9693 AE               xor (hl)
 267+ 9694 77               ld (hl),a
 268+ 9695 2C               inc l
 269+ 9696 1C               inc e
 270+ 9697 1A               ld a,(de)
 271+ 9698 AE               xor (hl)
 272+ 9699 77               ld (hl),a
 273+ 969A 13               inc de
 274+ 969B
 275+ 969B E1               pop hl
 276+ 969C
 277+ 969C 1A               ld a,(de)
 278+ 969D AE               xor (hl)
 279+ 969E 77               ld (hl),a
 280+ 969F 2C               inc l
 281+ 96A0 1C               inc e
 282+ 96A1 1A               ld a,(de)
 283+ 96A2 AE               xor (hl)
 284+ 96A3 77               ld (hl),a
 285+ 96A4 2C               inc l
 286+ 96A5 1C               inc e
 287+ 96A6 1A               ld a,(de)
 288+ 96A7 AE               xor (hl)
 289+ 96A8 77               ld (hl),a
 290+ 96A9 13               inc de
 291+ 96AA
 292+ 96AA E1               pop hl
 293+ 96AB
 294+ 96AB 1A               ld a,(de)
 295+ 96AC AE               xor (hl)
 296+ 96AD 77               ld (hl),a
 297+ 96AE 2C               inc l
 298+ 96AF 1C               inc e
 299+ 96B0 1A               ld a,(de)
 300+ 96B1 AE               xor (hl)
 301+ 96B2 77               ld (hl),a
 302+ 96B3 2C               inc l
 303+ 96B4 1C               inc e
 304+ 96B5 1A               ld a,(de)
 305+ 96B6 AE               xor (hl)
 306+ 96B7 77               ld (hl),a
 307+ 96B8 13               inc de
 308+ 96B9
 309+ 96B9 ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 96BD ED 7B 08 8C      ld sp,(Stack)
 311+ 96C1 C9               ret
 312+ 96C2
 313+ 96C2              Pinta_lento
 314+ 96C2
 315+ 96C2 E1           1 pop hl
 316+ 96C3
 317+ 96C3 1A               ld a,(de)
 318+ 96C4 AE               xor (hl)
 319+ 96C5 77               ld (hl),a
 320+ 96C6 2C               inc l
 321+ 96C7 1C               inc e
 322+ 96C8 1A               ld a,(de)
 323+ 96C9 AE               xor (hl)
 324+ 96CA 77               ld (hl),a
 325+ 96CB 2C               inc l
 326+ 96CC 1C               inc e
 327+ 96CD 1A               ld a,(de)
 328+ 96CE AE               xor (hl)
 329+ 96CF 77               ld (hl),a
 330+ 96D0 13               inc de
 331+ 96D1
 332+ 96D1 10 EF            djnz 1B
 333+ 96D3
 334+ 96D3 ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 96D7 ED 7B 08 8C      ld sp,(Stack)
 336+ 96DB C9               ret
# file closed: Pinta_Sprites.asm
2298  96DC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96DC              ; ******************************************************************************************************************************************************************************************
   2+ 96DC              ;
   3+ 96DC              ; 26/06/23
   4+ 96DC              ;
   5+ 96DC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96DC
   7+ 96DC              Draw
   8+ 96DC
   9+ 96DC CD 82 99     	call Prepara_draw
  10+ 96DF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96E0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96E1 28 05        	jr z,2F
  13+ 96E3
  14+ 96E3 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96E6 18 0C        	jr 1F
  16+ 96E8
  17+ 96E8 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96EB 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96EE CD 7A 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96F1              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96F1
  22+ 96F1 CD 21 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96F4
  24+ 96F4 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96F7 CB 6F        	bit 5,a
  26+ 96F9 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96FB
  28+ 96FB CD 10 97     	call Comprueba_limite_horizontal
  29+ 96FE CD A0 97     	call Comprueba_limite_vertical
  30+ 9701
  31+ 9701              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9701              ; -----------------------
  33+ 9701              ; -----------------------
  34+ 9701              ; -----------------------
  35+ 9701
  36+ 9701 CD F6 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9704 CD 2D 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9707
  39+ 9707 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 970A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 970C 32 C8 8B     	ld (Ctrl_0),a
  42+ 970F
  43+ 970F C9           	ret
  44+ 9710
  45+ 9710              ; *******************************************************************************************************************************************************************************************
  46+ 9710              ;	21/01/23
  47+ 9710              ;
  48+ 9710              ; 	Comprueba_limite_horizontal.
  49+ 9710              ;
  50+ 9710              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9710              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9710              ;
  53+ 9710              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9710              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9710              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9710              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9710
  58+ 9710
  59+ 9710
  60+ 9710 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9713 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9715 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9717 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9719 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 971C 18 09            jr 6F
  66+ 971E CB 5F        1 bit 3,a
  67+ 9720 28 0A            jr z,2F
  68+ 9722 E6 F7            and $f7
  69+ 9724 32 C8 8B         ld (Ctrl_0),a
  70+ 9727 CD 7A 98     6 call Inicializacion
  71+ 972A 18 5B            jr 5F
  72+ 972C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 972D
  74+ 972D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 972D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 972D
  77+ 972D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 972E 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9731 CD 7A 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9734 67           	ld h,a
  81+ 9735 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9736 CD 7A 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9739 67           	ld h,a
  84+ 973A A7           	and a
  85+ 973B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 973D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 973E 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 9741 FE 02        	cp 2
  89+ 9743 38 1E        	jr c,3F
  90+ 9745 28 1C        	jr z,3F
  91+ 9747 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9748 28 23            jr z,7F
  93+ 974A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 974C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 974E E1           	pop hl
  96+ 974F
  97+ 974F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 974F              ; _para indicar con E="2" en caso necesario.
  99+ 974F
 100+ 974F E5               push hl
 101+ 9750 C5               push bc
 102+ 9751 CD 7A 94     	call calcula_tercio
 103+ 9754 FE 01        	cp 1
 104+ 9756 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9758 CD 88 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 975B 28 26            jr z,9F
 107+ 975D 38 24            jr c,9F
 108+ 975F 1E 00        11 ld e,0
 109+ 9761 18 22            jr 8F
 110+ 9763 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9764 28 07        	jr z, 7F
 112+ 9766 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9768 1E 00         	ld e,0
 114+ 976A E1           	pop hl
 115+ 976B 18 04        	jr 4F
 116+ 976D 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 976F 18 15            jr 10F
 118+ 9771
 119+ 9771              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9771              ; _para indicar con E="2" en caso necesario.
 121+ 9771
 122+ 9771 E5           4 push hl
 123+ 9772 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9773 CD 7A 94     	call calcula_tercio
 125+ 9776 FE 01        	cp 1
 126+ 9778 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 977A CD 88 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 977D 28 04            jr z,9F
 129+ 977F 30 02            jr nc,9F
 130+ 9781 18 02        	jr 8F
 131+ 9783 1E 02        9 ld e,2
 132+ 9785 C1           8 pop bc
 133+ 9786 E1           10 pop hl
 134+ 9787 C9           5 ret
 135+ 9788
 136+ 9788              ; --------------------
 137+ 9788              ;
 138+ 9788              ; 25/08/22
 139+ 9788
 140+ 9788 CD 7A 94     Comprueba_centro call calcula_tercio
 141+ 978B 67               ld h,a
 142+ 978C 08           	ex af,af
 143+ 978D FE 02        	cp 2
 144+ 978F 38 07        	jr c,1F
 145+ 9791 28 05        	jr z,1F
 146+ 9793 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9796 18 03        	jr 2F
 148+ 9798 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 979B 08           2 ex af,af
 150+ 979C A7               and a
 151+ 979D ED 42            sbc hl,bc
 152+ 979F C9               ret
 153+ 97A0
 154+ 97A0              ; *********************************************************************************************************************************************************************************************
 155+ 97A0              ;
 156+ 97A0              ;   16/8/22
 157+ 97A0              ;
 158+ 97A0              ;	Comprueba_limite_vertical
 159+ 97A0              ;
 160+ 97A0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97A0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97A0              ;
 163+ 97A0
 164+ 97A0 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97A3 7D           	ld a,l
 166+ 97A4 E6 1F        	and $1F
 167+ 97A6 57           	ld d,a
 168+ 97A7 3A DE 8B     	ld a,(Limite_vertical)
 169+ 97AA BA           	cp d 											; Límite - Posición.
 170+ 97AB 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97AC 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97AF CB 47        	bit 0,a
 173+ 97B1 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97B3
 175+ 97B3              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97B3
 177+ 97B3 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97B4 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97B6
 180+ 97B6              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97B6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97B6
 183+ 97B6 3A BC 8B         ld a,(Coordenada_X)
 184+ 97B9 16 0F            ld d,Centro_izquierda
 185+ 97BB A7               and a
 186+ 97BC 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97BD 28 1E            jr z,3F
 188+ 97BF 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97C1              ;                                                    ; _salimos sin modificar nada.
 190+ 97C1 18 0E            jr 2F
 191+ 97C3 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97C4 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97C6
 194+ 97C6              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97C6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97C6
 197+ 97C6 3A BC 8B         ld a,(Coordenada_X)
 198+ 97C9 16 10            ld d,Centro_derecha
 199+ 97CB A7               and a
 200+ 97CC 92               sub d
 201+ 97CD 28 0E            jr z,3F
 202+ 97CF 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97D1              ;                                                    ; _salimos sin modificar nada.
 204+ 97D1 CB 43        2 bit 0,e
 205+ 97D3 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97D5 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97D6 CD 6A 98         call Modificaccionne
 208+ 97D9 C1           	pop bc
 209+ 97DA CD 7A 98         call Inicializacion
 210+ 97DD C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97DE
 212+ 97DE              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97DE
 214+ 97DE C5           4 push bc
 215+ 97DF 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97E2 0A           	ld a,(bc)
 217+ 97E3 3D           	dec a
 218+ 97E4 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97E5 7D           	ld a,l
 220+ 97E6 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97E7 CB 47        	bit 0,a
 222+ 97E9 28 03        	jr z,5F
 223+ 97EB 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97EC 18 2E        	jr 7F
 225+ 97EE
 226+ 97EE              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97EE
 228+ 97EE 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97EF F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97F0 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97F3 CB 4F        	bit 1,a
 232+ 97F5 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97F7 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97F8
 235+ 97F8              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97F8
 237+ 97F8 1C               inc e
 238+ 97F9 1D               dec e
 239+ 97FA 20 07            jr nz,12F
 240+ 97FC 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97FD 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97FE 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9801 18 44        13 jr 9F
 244+ 9803 CB 43        12 bit 0,e
 245+ 9805 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9807              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9807 C1           	pop bc
 248+ 9808 18 D3        	jr 3B
 249+ 980A 80           14 add b
 250+ 980B 6F               ld l,a
 251+ 980C 22 CB 8B     	ld (Posicion_actual),hl
 252+ 980F CD 6A 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9812 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9814 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9816 32 C8 8B         ld (Ctrl_0),a
 256+ 9819 F1           	pop af
 257+ 981A 18 2B        	jr 9F
 258+ 981C
 259+ 981C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 981C
 261+ 981C F5           7 push af
 262+ 981D 3A C8 8B     	ld a,(Ctrl_0)
 263+ 9820 CB 47        	bit 0,a
 264+ 9822 20 1D        	jr nz,8F
 265+ 9824 F1           	pop af
 266+ 9825
 267+ 9825              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9825
 269+ 9825 1C           	inc e
 270+ 9826 1D               dec e
 271+ 9827 20 07            jr nz,10F
 272+ 9829 90           	sub b
 273+ 982A 6F               ld l,a
 274+ 982B 22 CB 8B     	ld (Posicion_actual),hl
 275+ 982E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9830              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9830 CB 43        10 bit 0,e
 278+ 9832 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9834              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9834 C1           	pop bc
 281+ 9835 18 A6        	jr 3B
 282+ 9837 90           16 sub b
 283+ 9838 6F               ld l,a
 284+ 9839 22 CB 8B     	ld (Posicion_actual),hl
 285+ 983C CD 6A 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 983F 18 06            jr 9F
 287+ 9841 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9843 32 C8 8B         ld (Ctrl_0),a
 289+ 9846 F1           	pop af
 290+ 9847 C1           9 pop bc
 291+ 9848 1E 00        	ld e,0
 292+ 984A CD 7A 98         call Inicializacion
 293+ 984D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 984E 08           	ex af,af
 295+ 984F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9850 18 8B            jr 3B
 297+ 9852
 298+ 9852              ; --------------------
 299+ 9852
 300+ 9852 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9854 CD 9D 99     1 call PreviousScan
 302+ 9857 10 FB            djnz 1B
 303+ 9859 22 CB 8B     	ld (Posicion_actual),hl
 304+ 985C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 985D C9           	ret
 306+ 985E
 307+ 985E              ; --------------------
 308+ 985E
 309+ 985E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9860 CD 8E 99     1 call NextScan
 311+ 9863 10 FB            djnz 1B
 312+ 9865 22 CB 8B     	ld (Posicion_actual),hl
 313+ 9868 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9869 C9           	ret
 315+ 986A
 316+ 986A              ; --------------------
 317+ 986A              ;
 318+ 986A              ;	22/01/23
 319+ 986A              ;
 320+ 986A              ;	E="1". Hemos cambiado de cuadrante.
 321+ 986A              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 986A              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 986A
 324+ 986A
 325+ 986A              Modificaccionne
 326+ 986A
 327+ 986A 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 986D FE 02        	cp 2
 329+ 986F CC 52 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9872 DC 52 98         call c,Modifica_Pos_actual
 331+ 9875 C8           	ret z
 332+ 9876 CD 5E 98         call Modifica_Pos_actual2
 333+ 9879 C9               ret
 334+ 987A
 335+ 987A              ; *************************************************************************************************************************************************************************************************
 336+ 987A              ;
 337+ 987A              ;	13/8/22
 338+ 987A              ;
 339+ 987A              ;	Inicializacion
 340+ 987A              ;
 341+ 987A              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 987A              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 987A              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 987A              ;
 345+ 987A              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 987A              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 987A              ;	_ desaparece/aparece.
 348+ 987A
 349+ 987A              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 987A              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 987A              ;
 352+ 987A              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 987A              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 987A              ; 		   [E] ="0"
 355+ 987A
 356+ 987A              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 987A
 358+ 987A CD 7A 94     Inicializacion call calcula_tercio
 359+ 987D 28 36        	jr z,primit
 360+ 987F E6 02        	and 2
 361+ 9881 20 07        	jr nz,segmit
 362+ 9883 7D           	ld a,l
 363+ 9884 FE 7F        	cp $7f
 364+ 9886 38 2D        	jr c,primit
 365+ 9888 28 2B        	jr z,primit
 366+ 988A CD F0 98     segmit call column
 367+ 988D 38 13        	jr c,tercuad
 368+ 988F 3E 04        cuarcuad ld a,4
 369+ 9891 32 DA 8B     	ld (Cuad_objeto),a
 370+ 9894 21 20 48     	ld hl,$4820
 371+ 9897 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 989A 21 DE 8B     	ld hl,Limite_vertical
 373+ 989D 36 0D        	ld (hl),$0d
 374+ 989F 08           	ex af,af
 375+ 98A0 18 3C        	jr 1F
 376+ 98A2              tercuad
 377+ 98A2 3E 03        	ld a,3
 378+ 98A4 32 DA 8B     	ld (Cuad_objeto),a
 379+ 98A7 21 20 48     	ld hl,$4820
 380+ 98AA 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 98AD 21 DE 8B     	ld hl,Limite_vertical
 382+ 98B0 36 12        	ld (hl),$12
 383+ 98B2 08           	ex af,af
 384+ 98B3 18 29        	jr 1F
 385+ 98B5 CD F0 98     primit call column
 386+ 98B8 38 13        	jr c, primcuad
 387+ 98BA              segcuad
 388+ 98BA 3E 02        	ld a,2
 389+ 98BC 32 DA 8B     	ld (Cuad_objeto),a
 390+ 98BF 21 C0 4F     	ld hl,$4fc0
 391+ 98C2 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 98C5 21 DE 8B     	ld hl,Limite_vertical
 393+ 98C8 36 0D        	ld (hl),$0d
 394+ 98CA 08           	ex af,af
 395+ 98CB 18 11        	jr 1F
 396+ 98CD              primcuad
 397+ 98CD 3E 01        	ld a,1
 398+ 98CF 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98D2 21 C0 4F     	ld hl,$4fc0
 400+ 98D5 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98D8 21 DE 8B     	ld hl,Limite_vertical
 402+ 98DB 36 12        	ld (hl),$12
 403+ 98DD 08           	ex af,af
 404+ 98DE
 405+ 98DE C5           1 push bc
 406+ 98DF E5           	push hl
 407+ 98E0 D5           	push de
 408+ 98E1
 409+ 98E1 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98E4 CD 98 94     	call Genera_coordenadas
 411+ 98E7
 412+ 98E7 D1           	pop de
 413+ 98E8 E1           	pop hl
 414+ 98E9 C1           	pop bc
 415+ 98EA
 416+ 98EA 21 C8 8B     	ld hl,Ctrl_0
 417+ 98ED CB EE        	set 5,(hl)
 418+ 98EF C9           	ret
 419+ 98F0
 420+ 98F0              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98F0
 422+ 98F0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98F0              ;
 424+ 98F0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98F0
 426+ 98F0 7D           column ld a,l
 427+ 98F1 E6 1F        	and $1f
 428+ 98F3 FE 10         	cp $10
 429+ 98F5 C9            	ret
 430+ 98F6
 431+ 98F6              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98F6              ;
 433+ 98F6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98F6              ;
 435+ 98F6              ; 14/12/22
 436+ 98F6              ;
 437+ 98F6              ;	Modifica: A y BC.
 438+ 98F6
 439+ 98F6 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98F9 E6 01        	and 1
 441+ 98FB 28 17        	jr z,1F
 442+ 98FD
 443+ 98FD              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98FD
 445+ 98FD 3A BC 8B     	ld a,(Coordenada_X)
 446+ 9900 47           	ld b,a
 447+ 9901 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9902 79           	ld a,c
 449+ 9903 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9904 38 08        	jr c,2F
 451+ 9906 47           	ld b,a
 452+ 9907 79           	ld a,c
 453+ 9908 90           	sub b
 454+ 9909 32 DB 8B     	ld (Columnas),a
 455+ 990C 18 1B        	jr 4F
 456+ 990E 79           2 ld a,c
 457+ 990F 32 DB 8B     	ld (Columnas),a
 458+ 9912 18 15        	jr 4F
 459+ 9914
 460+ 9914              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9914
 462+ 9914 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 9917 81           	add c
 464+ 9918 3D           	dec a
 465+ 9919 D6 1F        	sub $1f
 466+ 991B 38 08        	jr c,3F
 467+ 991D 47           	ld b,a
 468+ 991E 79           	ld a,c
 469+ 991F 90           	sub b
 470+ 9920 32 DB 8B     	ld (Columnas),a
 471+ 9923 18 04        	jr 4F
 472+ 9925 79           3 ld a,c
 473+ 9926 32 DB 8B     	ld (Columnas),a
 474+ 9929 D9           4 exx
 475+ 992A 4F           	ld c,a
 476+ 992B D9           	exx
 477+ 992C C9            ret
 478+ 992D
 479+ 992D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 992D              ;
 481+ 992D              ;   19/7/23
 482+ 992D              ;
 483+ 992D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 992D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 992D              ;
 486+ 992D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 992D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 992D              ;
 489+ 992D              ;	DESTRUYE: HL,B Y A.
 490+ 992D
 491+ 992D 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9930 FE 02        	cp 2
 493+ 9932 38 18        	jr c,1F
 494+ 9934 28 16        	jr z,1F
 495+ 9936 E6 01        	and 1
 496+ 9938 28 0D        	jr z,3F
 497+ 993A
 498+ 993A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 993A
 500+ 993A CD 76 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 993D
 502+ 993D 7D           9 ld a,l
 503+ 993E E6 1F        	and $1f
 504+ 9940 28 2A        	jr z,7F
 505+ 9942 2B           	dec hl
 506+ 9943 10 F8        	djnz 9B
 507+ 9945 18 25        	jr 7F
 508+ 9947
 509+ 9947              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9947
 511+ 9947 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 994A 18 20        	jr 7F
 513+ 994C
 514+ 994C 28 14        1 jr z,2F
 515+ 994E
 516+ 994E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 994E
 518+ 994E CD 76 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9951
 520+ 9951 7D           4 ld a,l
 521+ 9952 E6 1F        	and $1f
 522+ 9954 28 03        	jr z,6F
 523+ 9956 2B           	dec hl
 524+ 9957 10 F8        	djnz 4B
 525+ 9959 06 0F        6 ld b,15
 526+ 995B CD 9D 99     5 call PreviousScan
 527+ 995E 10 FB        	djnz 5B
 528+ 9960 18 0A        	jr 7F
 529+ 9962
 530+ 9962              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9962
 532+ 9962 CD 76 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9965 06 0F        	ld b,15
 534+ 9967 CD 9D 99     8 call PreviousScan
 535+ 996A 10 FB        	djnz 8B
 536+ 996C
 537+ 996C E5           7 push hl
 538+ 996D DD E1        	pop ix
 539+ 996F
 540+ 996F 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 9972 E5           	push hl
 542+ 9973 FD E1        	pop iy
 543+ 9975
 544+ 9975 C9           	ret
 545+ 9976
 546+ 9976              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9976              ;
 548+ 9976              ;	2/1/23
 549+ 9976              ;
 550+ 9976              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9976              ;
 552+ 9976              ;	Tras esta rutina tenemos:
 553+ 9976              ;
 554+ 9976              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9976              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9976              ;
 557+ 9976              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9976
 559+ 9976 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9979 3A DB 8B     	ld a,(Columnas)
 561+ 997C 3D           	dec a
 562+ 997D 20 01        	jr nz,1F
 563+ 997F 3C           	inc a
 564+ 9980 47           1 ld b,a
 565+ 9981 C9           	ret
 566+ 9982
 567+ 9982              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9982              ;
 569+ 9982              ;	Prepara_draw
 570+ 9982              ;
 571+ 9982              ;	Es una rutina de carga.
 572+ 9982              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9982              ;
 574+ 9982              ;	FUNCIONAMIENTO:
 575+ 9982              ;
 576+ 9982              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9982              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9982              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9982              ;
 580+ 9982              ;	DESTRUYE:
 581+ 9982              ;
 582+ 9982              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9982
 584+ 9982 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9985 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9986 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9987 4E           	ld c,(hl)
 588+ 9988 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 998B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 998D C9           	ret
 591+ 998E
 592+ 998E              ;----------------------------------------------------------------------------------------------------------------
 593+ 998E              ;
 594+ 998E              ;	5/08/22
 595+ 998E              ;
 596+ 998E              ;   NextScan.
 597+ 998E              ;
 598+ 998E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 998E              ;
 600+ 998E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 998E              ;
 602+ 998E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 998E              ;
 604+ 998E              ;       DESTRUIDOS: AF y HL !!!
 605+ 998E              ;
 606+ 998E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 998E              ;
 608+ 998E
 609+ 998E 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 998F 7C               ld a,h
 611+ 9990 E6 07            and 7
 612+ 9992 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9993
 614+ 9993 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9994 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9996 6F               ld l,a
 617+ 9997 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9998
 619+ 9998 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9999 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 999B 67               ld h,a
 622+ 999C C9               ret
 623+ 999D
 624+ 999D              ;----------------------------------------------------------------------------------------------------------------
 625+ 999D              ;
 626+ 999D              ;	5/08/22
 627+ 999D              ;
 628+ 999D              ;   PreviousScan.
 629+ 999D              ;
 630+ 999D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 999D              ;
 632+ 999D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 999D              ;
 634+ 999D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 999D              ;
 636+ 999D              ;       DESTRUIDOS: AF y HL !!!
 637+ 999D              ;
 638+ 999D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 999D              ;
 640+ 999D
 641+ 999D 7C           PreviousScan ld a,h
 642+ 999E 25               dec h               ; Dec H.
 643+ 999F E6 07            and 7
 644+ 99A1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99A2
 646+ 99A2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99A3 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99A5 6F               ld l,a
 649+ 99A6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99A7
 651+ 99A7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99A8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99AA 67               ld h,a
 654+ 99AB C9               ret
 655+ 99AC
 656+ 99AC
 657+ 99AC
 658+ 99AC
 659+ 99AC
 660+ 99AC
 661+ 99AC
 662+ 99AC
 663+ 99AC
 664+ 99AC
 665+ 99AC
 666+ 99AC
# file closed: Draw_XOR.asm
2299  99AC              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99AC
   2+ 99AC              ; ******************************************************************************************************************************************************************************************
   3+ 99AC              ;
   4+ 99AC              ;   20/05/23
   5+ 99AC              ;
   6+ 99AC              ;	Recompone_posicion_inicio
   7+ 99AC              ;
   8+ 99AC              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99AC              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99AC              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99AC              ;	_ a una u otra rutina.
  12+ 99AC
  13+ 99AC              Recompone_posicion_inicio
  14+ 99AC
  15+ 99AC 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 99AF 7D           	ld a,l
  17+ 99B0 E6 1F        	and $1f
  18+ 99B2 28 16        	jr z,1F
  19+ 99B4
  20+ 99B4 FE 1F        	cp $1f
  21+ 99B6 28 0D        	jr z,3F
  22+ 99B8
  23+ 99B8 21 C7 8B     	ld hl,Ctrl_2
  24+ 99BB CB C6        	set 0,(hl)
  25+ 99BD 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 99C0 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 99C3 18 08        	jr 2F
  28+ 99C5
  29+ 99C5 CD 73 9B     3 call Mov_left
  30+ 99C8 18 03        	jr 2F
  31+ 99CA
  32+ 99CA CD 50 9A     1 call Mov_right
  33+ 99CD 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99D0 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99D3 C9           	ret
  36+ 99D4
  37+ 99D4              ; ******************************************************************************************************************************************************************************************
  38+ 99D4              ;
  39+ 99D4              ;   27/05/23
  40+ 99D4              ;
  41+ 99D4              ;	Mov_down
  42+ 99D4              ;
  43+ 99D4              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99D4              ;
  45+ 99D4              ;
  46+ 99D4              Mov_down
  47+ 99D4
  48+ 99D4 CD 3E 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99D7              ;																	; _ repone (Puntero_objeto).
  50+ 99D7 21 C8 8B     	ld hl,Ctrl_0
  51+ 99DA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99DC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99DC              ; 																	; _ en el caso de que no lo haya.
  54+ 99DC 3A E3 8B     	ld a,(Vel_down)
  55+ 99DF 47           	ld b,a
  56+ 99E0 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99E3 CD 7A 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99E6 E6 02        	and 2
  59+ 99E8 28 17        	jr z,1F
  60+ 99EA
  61+ 99EA              ; Nos encontramos en el último tercio de pantalla.
  62+ 99EA              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99EA
  64+ 99EA 7C           	ld a,h
  65+ 99EB FE 57        	cp $57
  66+ 99ED 20 12        	jr nz,1F
  67+ 99EF
  68+ 99EF 7D           	ld a,l
  69+ 99F0 C6 20        	add $20
  70+ 99F2 30 0D        	jr nc,1F
  71+ 99F4
  72+ 99F4              ; ------------------------------
  73+ 99F4              ;
  74+ 99F4              ;	12/01/24
  75+ 99F4
  76+ 99F4              ;	call Reaparece_arriba
  77+ 99F4 CD 00 9D     	call Reinicio
  78+ 99F7
  79+ 99F7              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99F7
  81+ 99F7 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 99FA CB CF        	set 1,a
  83+ 99FC 32 2E 8C     	ld (Ctrl_3),a
  84+ 99FF
  85+ 99FF 18 08        	jr 3F
  86+ 9A01              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A01              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A01              ; ------------------------------
  89+ 9A01
  90+ 9A01 CD 8E 99     1 call NextScan
  91+ 9A04 22 CB 8B     	ld (Posicion_actual),hl
  92+ 9A07 10 DA            djnz 2B
  93+ 9A09 CD 98 94     3 call Genera_coordenadas
  94+ 9A0C C9           	ret
  95+ 9A0D
  96+ 9A0D              ; ******************************************************************************************************************************************************************************************
  97+ 9A0D              ;
  98+ 9A0D              ;   27/05/23
  99+ 9A0D              ;
 100+ 9A0D              ;	Mov_up
 101+ 9A0D              ;
 102+ 9A0D              ; 	Mueve el Sprite hacia arriba.
 103+ 9A0D              ;
 104+ 9A0D              ;
 105+ 9A0D              Mov_up
 106+ 9A0D
 107+ 9A0D CD 3E 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A10              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A10 21 C8 8B     	ld hl,Ctrl_0
 110+ 9A13 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A15              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A15              ; 																		; _ en el caso de que no lo haya.
 113+ 9A15 3A E2 8B     	ld a,(Vel_up)
 114+ 9A18 47           	ld b,a
 115+ 9A19 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 9A1C CD 7A 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A1F A7           	and a
 118+ 9A20 20 10        	jr nz,1F
 119+ 9A22
 120+ 9A22              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A22              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A22
 123+ 9A22 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A23 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A25 20 0B            jr nz,1F
 126+ 9A27 7D               ld a,l
 127+ 9A28 D6 20            sub $20
 128+ 9A2A 30 06            jr nc,1F
 129+ 9A2C 25               dec h
 130+ 9A2D
 131+ 9A2D              ; -----------------------------
 132+ 9A2D CD E1 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A30              ;	call Reinicio
 134+ 9A30              ; -----------------------------
 135+ 9A30
 136+ 9A30 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A32 CD 9D 99     1 call PreviousScan
 138+ 9A35 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A38 10 E2            djnz 3B
 140+ 9A3A CD 98 94     2 call Genera_coordenadas
 141+ 9A3D C9           	ret
 142+ 9A3E
 143+ 9A3E              ; -----------------------------
 144+ 9A3E              ;
 145+ 9A3E              ;	27/5/23
 146+ 9A3E              ;
 147+ 9A3E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A3E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A3E              ;
 150+ 9A3E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A3E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A3E              ;
 153+ 9A3E              ;	Modifica: A y (Puntero_objeto).
 154+ 9A3E
 155+ 9A3E 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A41 CB 47        	bit 0,a
 157+ 9A43 C8           	ret z
 158+ 9A44 CB 87        	res 0,a
 159+ 9A46 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A49 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A4C 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A4F C9           	ret
 163+ 9A50
 164+ 9A50              ; ******************************************************************************************************************************************************************************************
 165+ 9A50              ;
 166+ 9A50              ;	19/10/22
 167+ 9A50              ;
 168+ 9A50              ;	Mov_right.
 169+ 9A50              ;
 170+ 9A50              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A50              ;
 172+ 9A50
 173+ 9A50 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A53 CB 77        	bit 6,a
 175+ 9A55 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A57
 177+ 9A57 CD 8F 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A5A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A5B
 180+ 9A5B 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A5E CB E6        	set 4,(hl)
 182+ 9A60 18 52        	jr 8F
 183+ 9A62
 184+ 9A62 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A65 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A67              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A67              ; 																	; _ en el caso de que no lo haya.
 188+ 9A67 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A6A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A6C 20 46        	jr nz,8F
 191+ 9A6E
 192+ 9A6E 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A71 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A72 28 40        	jr z,8F
 195+ 9A74
 196+ 9A74              ; ---------- ---------- ----------
 197+ 9A74              ;
 198+ 9A74              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A74
 200+ 9A74 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A77 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A79 28 11        	jr z,1F
 203+ 9A7B 38 06        	jr c,6F
 204+ 9A7D FE 04        	cp 4
 205+ 9A7F 28 14        	jr z,7F
 206+ 9A81 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A83
 208+ 9A83              ; ---------- ---------- ----------
 209+ 9A83              ;
 210+ 9A83              ; Perfiles de velocidad
 211+ 9A83              ;
 212+ 9A83
 213+ 9A83 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A86 FE FE        	cp $fe
 215+ 9A88 20 2A        	jr nz,8F
 216+ 9A8A 18 10        	jr 3F
 217+ 9A8C 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A8F FE FD        	cp $fd
 219+ 9A91 20 21        	jr nz,8F
 220+ 9A93 18 07        	jr 3F
 221+ 9A95 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A98 FE FB        	cp $fb
 223+ 9A9A 20 18        	jr nz,8F
 224+ 9A9C
 225+ 9A9C              ; ---------- ---------- ----------
 226+ 9A9C
 227+ 9A9C              3
 228+ 9A9C CD CF 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A9F              ;	call Reinicio
 230+ 9A9F
 231+ 9A9F              ; ---------- ---------- ----------
 232+ 9A9F              ;
 233+ 9A9F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A9F
 235+ 9A9F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AA1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AA2 CD BB 9A     	call DESPLZ_DER
 238+ 9AA5 C1           	pop bc
 239+ 9AA6 10 F9        	djnz 5B
 240+ 9AA8 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AAB 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AAC 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9AAF CD 98 94     	call Genera_coordenadas
 244+ 9AB2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AB4
 246+ 9AB4              ; ---------- ---------- ----------
 247+ 9AB4
 248+ 9AB4 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9AB7 CD BB 9A     	call DESPLZ_DER
 250+ 9ABA C9           2 ret
 251+ 9ABB
 252+ 9ABB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9ABB              ;
 254+ 9ABB              ;	22/9/22
 255+ 9ABB              ;
 256+ 9ABB
 257+ 9ABB CD CA 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9ABE CD 16 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AC1 CD 3F 9B         call Ciclo_completo
 260+ 9AC4 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AC7 CB FE        	set 7,(hl)
 262+ 9AC9 C9           	ret
 263+ 9ACA
 264+ 9ACA              ; ******************************************************************************************************************************************************************************************
 265+ 9ACA              ;	15/02/23
 266+ 9ACA              ;
 267+ 9ACA
 268+ 9ACA 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9ACD 47           	ld b,a
 270+ 9ACE 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AD1 23           1 inc hl
 272+ 9AD2 23           	inc hl
 273+ 9AD3 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AD5 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AD8 CD 79 90     	call Extrae_address
 276+ 9ADB 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9ADE
 278+ 9ADE              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9ADE
 280+ 9ADE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9ADE              ; Cuántos movimientos hemos hecho ??
 282+ 9ADE              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9ADE
 284+ 9ADE 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AE1 EB           	ex de,hl
 286+ 9AE2 A7           	and a
 287+ 9AE3 ED 52        	sbc hl,de
 288+ 9AE5 CB 3D        	srl l
 289+ 9AE7 3E 08        6 ld a,8
 290+ 9AE9 95           	sub l
 291+ 9AEA 30 1E        	jr nc,3F
 292+ 9AEC
 293+ 9AEC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AEC              ; B="0".
 295+ 9AEC
 296+ 9AEC 04           4 inc b
 297+ 9AED 3C           	inc a
 298+ 9AEE 20 FC        	jr nz,4B
 299+ 9AF0 78           	ld a,b
 300+ 9AF1 08           	ex af,af
 301+ 9AF2 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AF5 23           5 inc hl
 303+ 9AF6 23           	inc hl
 304+ 9AF7 10 FC        	djnz 5B
 305+ 9AF9 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AFC CD 79 90     	call Extrae_address
 307+ 9AFF 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9B02
 309+ 9B02              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B02              ; _(Posicion_actual).
 311+ 9B02
 312+ 9B02 21 CB 8B     	ld hl,Posicion_actual
 313+ 9B05 34           	inc (hl)
 314+ 9B06 08               ex af,af
 315+ 9B07 6F           	ld l,a
 316+ 9B08 18 DD        	jr 6B
 317+ 9B0A
 318+ 9B0A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B0A
 320+ 9B0A 47           3 ld b,a
 321+ 9B0B 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B0E 23           2 inc hl
 323+ 9B0F 23           	inc hl
 324+ 9B10 10 FC        	djnz 2B
 325+ 9B12 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B15 C9           8 ret
 327+ 9B16
 328+ 9B16              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B16              ;
 330+ 9B16              ;	24/7/22
 331+ 9B16              ;
 332+ 9B16              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B16              ;
 334+ 9B16              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B16              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B16              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B16
 338+ 9B16 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B19 A7           	and a
 340+ 9B1A 20 1F        	jr nz,1F
 341+ 9B1C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B1E 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9B21
 344+ 9B21 21 CA 8B     	ld hl,Columns
 345+ 9B24 34           	inc (hl)
 346+ 9B25 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9B28 E6 01        	and 1
 348+ 9B2A 28 0F        	jr z,1F
 349+ 9B2C 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B2F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B30 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B33 CD 98 94     	call Genera_coordenadas
 353+ 9B36 CD 9B 9C     	call Inc_CTRL_DESPLZ
 354+ 9B39 18 03        	jr 2F
 355+ 9B3B CD 9B 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B3E C9           2 ret
 357+ 9B3F
 358+ 9B3F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B3F              ;
 360+ 9B3F              ;	24/7/22
 361+ 9B3F              ;
 362+ 9B3F              ;	Ciclo_completo.
 363+ 9B3F              ;
 364+ 9B3F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B3F              ;
 366+ 9B3F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B3F              ; 	Decrementamos (Columns).
 368+ 9B3F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B3F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B3F
 371+ 9B3F
 372+ 9B3F 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B42 FE FF        	cp $ff
 374+ 9B44 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B46 E6 F0        	and $f0
 376+ 9B48 20 28        	jr nz,3F
 377+ 9B4A
 378+ 9B4A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B4A
 380+ 9B4A 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B4D 47           	ld b,a
 382+ 9B4E 3E F8        	ld a,$f8
 383+ 9B50 80           	add b
 384+ 9B51 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B54 18 1C        	jr 3F
 386+ 9B56 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B59 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B5A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B5B 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B5E 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B61 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B63 20 0A        	jr nz,2F
 393+ 9B65 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B68 23           	inc hl
 395+ 9B69 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B6C CD 98 94     	call Genera_coordenadas
 397+ 9B6F
 398+ 9B6F              ; Inicia el puntero de Sprite.
 399+ 9B6F
 400+ 9B6F CD 8E 90     2 call Inicia_puntero_objeto_der
 401+ 9B72 C9           3 ret
 402+ 9B73
 403+ 9B73              ; ******************************************************************************************************************************************************************************************
 404+ 9B73              ;
 405+ 9B73              ;	15/02/23
 406+ 9B73              ;
 407+ 9B73              ;	Mov_left.
 408+ 9B73              ;
 409+ 9B73              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B73              ;
 411+ 9B73              Mov_left
 412+ 9B73
 413+ 9B73 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B76 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B78              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B78              ; 																	; _ en el caso de que no lo haya.
 417+ 9B78 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B7B CB 77        	bit 6,a
 419+ 9B7D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B7F
 421+ 9B7F CD 95 9C     	call Stop_Amadeus_left
 422+ 9B82 C8           	ret z
 423+ 9B83 20 4A        	jr nz,8F
 424+ 9B85
 425+ 9B85 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B88 A7           	and a
 427+ 9B89 20 44        	jr nz,8F
 428+ 9B8B
 429+ 9B8B 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B8E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B8F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B91
 433+ 9B91              ; ---------- ---------- ----------
 434+ 9B91
 435+ 9B91 3A E0 8B     	ld a,(Vel_left)
 436+ 9B94 FE 02        	cp 2
 437+ 9B96 28 0F        	jr z,1F
 438+ 9B98 38 04        	jr c,6F
 439+ 9B9A FE 04        	cp 4
 440+ 9B9C 28 12        	jr z,7F
 441+ 9B9E
 442+ 9B9E              ; ---------- ---------- ----------
 443+ 9B9E
 444+ 9B9E 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BA1 FE F8        	cp $f8
 446+ 9BA3 20 2A        	jr nz,8F
 447+ 9BA5 18 10        	jr 4F
 448+ 9BA7 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BAA FE F9        	cp $f9
 450+ 9BAC 20 21        	jr nz,8F
 451+ 9BAE 18 07        	jr 4F
 452+ 9BB0 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BB3 FE FB        	cp $fb
 454+ 9BB5 20 18        	jr nz,8F
 455+ 9BB7
 456+ 9BB7              ; ---------- ---------- ----------
 457+ 9BB7
 458+ 9BB7              4
 459+ 9BB7 CD BD 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BBA              ;	call Reinicio
 461+ 9BBA
 462+ 9BBA              ; ---------- ---------- ----------
 463+ 9BBA
 464+ 9BBA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BBC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BBD
 467+ 9BBD              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BBD              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BBD
 470+ 9BBD CD D6 9B     	call DESPLZ_IZQ
 471+ 9BC0 C1           	pop bc
 472+ 9BC1 10 F9        	djnz 5B
 473+ 9BC3 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BC6 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BC7 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9BCA CD 98 94     	call Genera_coordenadas
 477+ 9BCD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BCF
 479+ 9BCF              ; ---------- ---------- ----------
 480+ 9BCF
 481+ 9BCF              ; Movemos, no hay recolocación.
 482+ 9BCF
 483+ 9BCF 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BD2 CD D6 9B     	call DESPLZ_IZQ
 485+ 9BD5 C9           2 ret
 486+ 9BD6
 487+ 9BD6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BD6              ;
 489+ 9BD6              ;	22/9/22
 490+ 9BD6
 491+ 9BD6              DESPLZ_IZQ
 492+ 9BD6
 493+ 9BD6 CD E5 9B     	call Desplaza_izquierda
 494+ 9BD9 CD 31 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BDC CD 59 9C     	call Ciclo_completo_2
 496+ 9BDF 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BE2 CB BE        	res 7,(hl)
 498+ 9BE4 C9           	ret
 499+ 9BE5
 500+ 9BE5              Desplaza_izquierda
 501+ 9BE5
 502+ 9BE5 3A E0 8B     	ld a,(Vel_left)
 503+ 9BE8 47           	ld b,a
 504+ 9BE9 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BEC 23           1 inc hl
 506+ 9BED 23           	inc hl
 507+ 9BEE 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BF0 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BF3 CD 79 90     	call Extrae_address
 510+ 9BF6 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BF9
 512+ 9BF9              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BF9
 514+ 9BF9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BF9              ; Cuántos movimientos hemos hecho ??
 516+ 9BF9              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BF9
 518+ 9BF9 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BFC EB           	ex de,hl
 520+ 9BFD A7           	and a
 521+ 9BFE ED 52        	sbc hl,de
 522+ 9C00 CB 3D        	srl l
 523+ 9C02 3E 08        6 ld a,8
 524+ 9C04 95           	sub l
 525+ 9C05 30 1E        	jr nc,3F
 526+ 9C07
 527+ 9C07              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C07              ; B="0".
 529+ 9C07
 530+ 9C07 04           4 inc b
 531+ 9C08 3C           	inc a
 532+ 9C09 20 FC        	jr nz,4B
 533+ 9C0B 78           	ld a,b
 534+ 9C0C 08           	ex af,af
 535+ 9C0D 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C10 23           5 inc hl
 537+ 9C11 23           	inc hl
 538+ 9C12 10 FC        	djnz 5B
 539+ 9C14 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C17 CD 79 90     	call Extrae_address
 541+ 9C1A 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9C1D
 543+ 9C1D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C1D              ; _(Posicion_actual).
 545+ 9C1D
 546+ 9C1D 21 CB 8B     	ld hl,Posicion_actual
 547+ 9C20 35           	dec (hl)
 548+ 9C21 08           	ex af,af
 549+ 9C22 6F           	ld l,a
 550+ 9C23 18 DD        	jr 6B
 551+ 9C25
 552+ 9C25              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C25
 554+ 9C25 47           3 ld b,a
 555+ 9C26 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C29 23           2 inc hl
 557+ 9C2A 23           	inc hl
 558+ 9C2B 10 FC        	djnz 2B
 559+ 9C2D 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C30 C9           8 ret
 561+ 9C31
 562+ 9C31              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C31              ;
 564+ 9C31              ;	modifica_parametros_1er_DESPLZ
 565+ 9C31              ;
 566+ 9C31              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C31              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C31              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C31
 570+ 9C31 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C34 A7           	and a
 572+ 9C35 20 1E        	jr nz,1F
 573+ 9C37 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C38 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C3B 21 CA 8B     	ld hl,Columns
 576+ 9C3E 34           	inc (hl)
 577+ 9C3F 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C42 E6 01        	and 1
 579+ 9C44 20 0F        	jr nz,1F
 580+ 9C46 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C49 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C4A 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C4D CD 98 94     	call Genera_coordenadas
 584+ 9C50 CD AC 9C     	call Dec_CTRL_DESPLZ
 585+ 9C53 18 03        	jr 2F
 586+ 9C55 CD AC 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C58 C9           2 ret
 588+ 9C59
 589+ 9C59              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C59
 591+ 9C59 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C5C FE F7        	cp $f7
 593+ 9C5E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C60 30 2C        	jr nc,3F
 595+ 9C62
 596+ 9C62              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C62
 598+ 9C62 06 00        	ld b,0
 599+ 9C64 04           4 inc b
 600+ 9C65 3C           	inc a
 601+ 9C66 FE F7        	cp $f7
 602+ 9C68 20 FA        	jr nz,4B
 603+ 9C6A 3E FF        	ld a,$ff
 604+ 9C6C 90           	sub b
 605+ 9C6D 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C70 18 1C        	jr 3F
 607+ 9C72
 608+ 9C72              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C72
 610+ 9C72 21 CA 8B     1 ld hl,Columns
 611+ 9C75 35           	dec (hl)
 612+ 9C76 AF           	xor a
 613+ 9C77 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C7A 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C7D E6 01        	and 1
 616+ 9C7F 28 0A        	jr z,2F
 617+ 9C81 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C84 2B           	dec hl
 619+ 9C85 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C88 CD 98 94     	call Genera_coordenadas
 621+ 9C8B
 622+ 9C8B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C8B
 624+ 9C8B CD A1 90     2 call Inicia_puntero_objeto_izq
 625+ 9C8E C9           3 ret
 626+ 9C8F
 627+ 9C8F              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C8F              ;
 629+ 9C8F              ;	19/10/22
 630+ 9C8F              ;
 631+ 9C8F              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C8F              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C8F
 634+ 9C8F 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C92 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C94 C9           	ret
 637+ 9C95
 638+ 9C95              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C95              ;
 640+ 9C95              ;	19/10/22
 641+ 9C95              ;
 642+ 9C95              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C95              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C95
 645+ 9C95 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C98 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C9A C9           	ret
 648+ 9C9B
 649+ 9C9B              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C9B              ;
 651+ 9C9B              ;	24/7/22
 652+ 9C9B              ;
 653+ 9C9B              ;	Inc_CTRL_DESPLZ
 654+ 9C9B              ;
 655+ 9C9B              ;
 656+ 9C9B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C9B
 658+ 9C9B 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C9E 3A E1 8B     	ld a,(Vel_right)
 660+ 9CA1 A7           	and a
 661+ 9CA2 28 06        	jr z,1F
 662+ 9CA4 47           	ld b,a
 663+ 9CA5 34           3 inc (hl)
 664+ 9CA6 10 FD        	djnz 3B
 665+ 9CA8 18 01        	jr 2F
 666+ 9CAA 34           1 inc (hl)
 667+ 9CAB C9           2 ret
 668+ 9CAC
 669+ 9CAC              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CAC              ;
 671+ 9CAC              ;	5/2/23
 672+ 9CAC              ;
 673+ 9CAC              ;	Dec_CTRL_DESPLZ
 674+ 9CAC              ;
 675+ 9CAC              ;
 676+ 9CAC              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CAC
 678+ 9CAC 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CAF 3A E0 8B     	ld a,(Vel_left)
 680+ 9CB2 A7           	and a
 681+ 9CB3 28 06        	jr z,1F
 682+ 9CB5 47           	ld b,a
 683+ 9CB6 35           3 dec (hl)
 684+ 9CB7 10 FD        	djnz 3B
 685+ 9CB9 18 01        	jr 2F
 686+ 9CBB 35           1 dec (hl)
 687+ 9CBC C9           2 ret
 688+ 9CBD
 689+ 9CBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CBD
 691+ 9CBD 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CC0 01 1F 00     	ld bc,31
 693+ 9CC3 A7           	and a
 694+ 9CC4 ED 4A        	adc hl,bc
 695+ 9CC6 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9CC9 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CCC CB C6        	set 0,(hl)
 698+ 9CCE C9           	ret
 699+ 9CCF
 700+ 9CCF              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CCF
 702+ 9CCF 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CD2 01 1F 00     	ld bc,31
 704+ 9CD5 A7           	and a
 705+ 9CD6 ED 42        	sbc hl,bc
 706+ 9CD8 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CDB 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CDE CB CE        	set 1,(hl)
 709+ 9CE0 C9           	ret
 710+ 9CE1
 711+ 9CE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CE1
 713+ 9CE1 24           Reaparece_abajo inc h
 714+ 9CE2 01 E0 17     	ld bc,$17e0
 715+ 9CE5 A7           	and a
 716+ 9CE6 ED 4A        	adc hl,bc
 717+ 9CE8 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CEB 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CEE CB D6        	set 2,(hl)
 720+ 9CF0 C9           	ret
 721+ 9CF1
 722+ 9CF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CF1
 724+ 9CF1 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CF4 A7           	and a
 726+ 9CF5 ED 42        	sbc hl,bc
 727+ 9CF7 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CFA 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CFD CB DE        	set 3,(hl)
 730+ 9CFF C9           	ret
 731+ 9D00
 732+ 9D00              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D00              ;
 734+ 9D00              ;	15/07/23
 735+ 9D00
 736+ 9D00              Reinicio
 737+ 9D00
 738+ 9D00              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D00
 740+ 9D00 AF           	xor a
 741+ 9D01 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D04 CD 22 9D     	call Limpia_contenido_hl
 743+ 9D07
 744+ 9D07 21 CB 8B     	ld hl,Posicion_actual
 745+ 9D0A CD 22 9D     	call Limpia_contenido_hl
 746+ 9D0D
 747+ 9D0D CD 7A 92     	call Inicializa_Puntero_indice_mov
 748+ 9D10 CD 21 9E     	call Inicia_Puntero_mov
 749+ 9D13
 750+ 9D13 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9D16 06 05        	ld b,5
 752+ 9D18 77           1 ld (hl),a
 753+ 9D19 23           	inc hl
 754+ 9D1A 10 FC        	djnz 1B
 755+ 9D1C
 756+ 9D1C 21 C7 8B     	ld hl,Ctrl_2
 757+ 9D1F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D21
 759+ 9D21 C9           	ret
 760+ 9D22
 761+ 9D22 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D23 23           	inc hl
 763+ 9D24 77           	ld (hl),a
 764+ 9D25 C9           	ret
 765+ 9D26
 766+ 9D26              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D26              ;
 768+ 9D26              ;	18/6/24
 769+ 9D26              ;
 770+ 9D26
 771+ 9D26              Amadeus_a_izquierda
 772+ 9D26
 773+ 9D26              ;	Actualiza contador de movimientos.
 774+ 9D26
 775+ 9D26 21 79 89     	ld hl,Comm_Amadeus
 776+ 9D29 35           	dec (hl)
 777+ 9D2A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D2C
 779+ 9D2C 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D2F 2B           	dec hl
 781+ 9D30 2B           	dec hl
 782+ 9D31 2B           	dec hl
 783+ 9D32 2B           	dec hl
 784+ 9D33 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D36
 786+ 9D36 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D39 CB EE        	set 5,(hl)
 788+ 9D3B
 789+ 9D3B C9           	ret
 790+ 9D3C
 791+ 9D3C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D3D C9           	ret
 793+ 9D3E
 794+ 9D3E
 795+ 9D3E              Amadeus_a_derecha
 796+ 9D3E
 797+ 9D3E              ;	Actualiza contador de movimientos.
 798+ 9D3E
 799+ 9D3E 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D41 34           	inc (hl)
 801+ 9D42 3E 7A        	ld a,$7a
 802+ 9D44 BE           	cp (hl)
 803+ 9D45 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D47
 805+ 9D47 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D4A 23           	inc hl
 807+ 9D4B 23           	inc hl
 808+ 9D4C 23           	inc hl
 809+ 9D4D 23           	inc hl
 810+ 9D4E 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D51
 812+ 9D51 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D54 CB EE        	set 5,(hl)
 814+ 9D56 C9           	ret
 815+ 9D57
 816+ 9D57 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D58 C9           	ret
# file closed: Direcciones.asm
2300  9D59              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D59              ; ----- ----- ----- ----- -----
   2+ 9D59              ;
   3+ 9D59              ;   28/12/23
   4+ 9D59
   5+ 9D59              Movimiento
   6+ 9D59
   7+ 9D59              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D59
   9+ 9D59 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D5C CB 57            bit 2,a
  11+ 9D5E 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D60
  13+ 9D60 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D63 7E               ld a,(hl)
  15+ 9D64
  16+ 9D64              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D64
  18+ 9D64              Inicia_desplazamiento.
  19+ 9D64
  20+ 9D64              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D64
  22+ 9D64 CD 57 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D67
  24+ 9D67              ; Iniciamos (Repetimos_mov).
  25+ 9D67
  26+ 9D67 7E               ld a,(hl)
  27+ 9D68 E6 0F            and $0f
  28+ 9D6A 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D6D 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D70
  31+ 9D70              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D70
  33+ 9D70 23               inc hl
  34+ 9D71 7E               ld a,(hl)
  35+ 9D72 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D75 2B               dec hl
  37+ 9D76
  38+ 9D76 21 C7 8B         ld hl,Ctrl_2
  39+ 9D79 CB D6            set 2,(hl)
  40+ 9D7B
  41+ 9D7B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D7B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D7B
  44+ 9D7B              Desplazamiento_iniciado
  45+ 9D7B
  46+ 9D7B CD 2B 9E         call Aplica_desplazamiento
  47+ 9D7E
  48+ 9D7E              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D7E
  50+ 9D7E 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9D81 CB 4F            bit 1,a
  52+ 9D83 C0               ret nz
  53+ 9D84
  54+ 9D84 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D87 35               dec (hl)
  56+ 9D88 C0               ret nz
  57+ 9D89
  58+ 9D89              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D89              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D89              ; Analiza (Cola_de_desplazamiento).
  61+ 9D89
  62+ 9D89 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D8C A7               and a
  64+ 9D8D CC 80 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D90 28 30            jr z,Reinicia_el_movimiento
  66+ 9D92
  67+ 9D92 FE FF            cp $ff
  68+ 9D94 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D96
  70+ 9D96 FE FE            cp $fe
  71+ 9D98 CC 05 9E         call z,Fijamos_bucle
  72+ 9D9B 28 25            jr z,Reinicia_el_movimiento
  73+ 9D9D
  74+ 9D9D FE FD            cp $fd
  75+ 9D9F 20 11            jr nz,1F
  76+ 9DA1
  77+ 9DA1              ; ---
  78+ 9DA1              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DA1
  80+ 9DA1 3A C7 8B         ld a,(Ctrl_2)
  81+ 9DA4 CB 5F            bit 3,a
  82+ 9DA6 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DA8
  84+ 9DA8              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DA8
  86+ 9DA8 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DAB CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DAD
  89+ 9DAD CD 16 9E         call Inicia_Repetimos_movimiento
  90+ 9DB0 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DB2              ; ---
  92+ 9DB2
  93+ 9DB2 FE 01        1 cp 1
  94+ 9DB4 CA EF 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DB7
  96+ 9DB7 3D               dec a
  97+ 9DB8 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9DBB
  99+ 9DBB 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DBE 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DC1              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DC1 C9               ret
 103+ 9DC2
 104+ 9DC2              Reinicia_el_movimiento
 105+ 9DC2
 106+ 9DC2 3A C7 8B         ld a,(Ctrl_2)
 107+ 9DC5 CB 5F            bit 3,a
 108+ 9DC7 28 1B            jr z,2F
 109+ 9DC9
 110+ 9DC9              ; (Cola_de_desplazamiento)="254".
 111+ 9DC9
 112+ 9DC9 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DCC 35               dec (hl)
 114+ 9DCD 20 15            jr nz,2F
 115+ 9DCF
 116+ 9DCF              ; Fin de las repeticiones del último movimiento.
 117+ 9DCF
 118+ 9DCF 21 C7 8B         ld hl,Ctrl_2
 119+ 9DD2 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DD4
 121+ 9DD4 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DD7 23               inc hl
 123+ 9DD8 23               inc hl
 124+ 9DD9 23               inc hl
 125+ 9DDA 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DDD              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DDD 7E               ld a,(hl)
 128+ 9DDE 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DE1
 130+ 9DE1 C3 89 9D         jp Cola
 131+ 9DE4
 132+ 9DE4 CD 21 9E     2 call Inicia_Puntero_mov
 133+ 9DE7
 134+ 9DE7 21 C7 8B         ld hl,Ctrl_2
 135+ 9DEA CB 96            res 2,(hl)
 136+ 9DEC
 137+ 9DEC C3 59 9D         jp Movimiento
 138+ 9DEF
 139+ 9DEF              Siguiente_desplazamiento
 140+ 9DEF
 141+ 9DEF              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DEF              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DEF
 144+ 9DEF 21 C7 8B         ld hl,Ctrl_2
 145+ 9DF2 CB 96            res 2,(hl)
 146+ 9DF4
 147+ 9DF4 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DF7 23               inc hl
 149+ 9DF8 23               inc hl
 150+ 9DF9 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DFC
 152+ 9DFC 7E               ld a,(hl)
 153+ 9DFD A7               and a
 154+ 9DFE CC 80 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E01 CA C2 9D         jp z,Reinicia_el_movimiento
 156+ 9E04
 157+ 9E04 C9               ret
 158+ 9E05
 159+ 9E05              ; Subrutinas -----------------------------------------
 160+ 9E05              ; ---------- --------- --------- ---------- ----------
 161+ 9E05              ;
 162+ 9E05              ;   24/07/23
 163+ 9E05              ;
 164+ 9E05              ;   Fijamos_bucle
 165+ 9E05              ;
 166+ 9E05              ;
 167+ 9E05
 168+ 9E05              Fijamos_bucle
 169+ 9E05
 170+ 9E05 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9E08 3C               inc a
 172+ 9E09 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9E0C
 174+ 9E0C CD 80 9E         call Incrementa_Puntero_indice_mov
 175+ 9E0F 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9E12 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E15 C9               ret
 178+ 9E16
 179+ 9E16              ; ---------- --------- --------- ---------- ----------
 180+ 9E16              ;
 181+ 9E16              ;   07/7/23
 182+ 9E16              ;
 183+ 9E16              ;   Inicia_Repetimos_movimiento
 184+ 9E16              ;
 185+ 9E16              ;
 186+ 9E16
 187+ 9E16              Inicia_Repetimos_movimiento
 188+ 9E16
 189+ 9E16              ; Iniciamos (Repetimos_movimiento).
 190+ 9E16
 191+ 9E16 DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9E1A DD 7E 02         ld a,(ix+2)
 193+ 9E1D 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9E20
 195+ 9E20 C9               ret
 196+ 9E21
 197+ 9E21              ; ---------- --------- --------- ---------- ----------
 198+ 9E21              ;
 199+ 9E21              ;   26/6/23
 200+ 9E21              ;
 201+ 9E21              ;   Inicia_Puntero_mov
 202+ 9E21              ;
 203+ 9E21              ;
 204+ 9E21
 205+ 9E21 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E24 CD 79 90         call Extrae_address
 207+ 9E27 22 EE 8B         ld (Puntero_mov),hl
 208+ 9E2A C9               ret
 209+ 9E2B
 210+ 9E2B              ; ---------- --------- --------- ---------- ----------
 211+ 9E2B              ;
 212+ 9E2B              ;   27/06/23
 213+ 9E2B              ;
 214+ 9E2B              ;   Aplica_movimiento.
 215+ 9E2B
 216+ 9E2B              Aplica_desplazamiento
 217+ 9E2B
 218+ 9E2B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E2B
 220+ 9E2B 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9E2E
 222+ 9E2E 7E               ld a,(hl)
 223+ 9E2F E6 F0            and $f0
 224+ 9E31 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E32
 226+ 9E32 CB 7E            bit 7,(hl)
 227+ 9E34 28 03            jr z,1F
 228+ 9E36 CD 0D 9A         call Mov_up
 229+ 9E39 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E3C CB 76            bit 6,(hl)
 231+ 9E3E 28 03            jr z,2F
 232+ 9E40 CD D4 99         call Mov_down
 233+ 9E43
 234+ 9E43              ; Se ha aplicado reinicio ???
 235+ 9E43              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E43
 237+ 9E43              ;    ld a,(Ctrl_3)
 238+ 9E43              ;    bit 1,a
 239+ 9E43              ;    ret nz
 240+ 9E43
 241+ 9E43 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E46 CB 6E            bit 5,(hl)
 243+ 9E48 28 03            jr z,3F
 244+ 9E4A CD 73 9B         call Mov_left
 245+ 9E4D 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E50 CB 66            bit 4,(hl)
 247+ 9E52 C8               ret z
 248+ 9E53 CD 50 9A         call Mov_right
 249+ 9E56 C9               ret
 250+ 9E57
 251+ 9E57              ; ---------- --------- --------- ---------- ----------
 252+ 9E57              ;
 253+ 9E57              ;   26/06/23
 254+ 9E57              ;
 255+ 9E57              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E57
 257+ 9E57              Ajusta_velocidad_desplazamiento
 258+ 9E57
 259+ 9E57              ; 1er byte de la cadena de movimiento.
 260+ 9E57              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E57
 262+ 9E57 CD 75 9E         call Extrae_nibble_alto
 263+ 9E5A
 264+ 9E5A 32 E2 8B         ld (Vel_up),a
 265+ 9E5D 79               ld a,c
 266+ 9E5E E6 0F            and $0f
 267+ 9E60 32 E3 8B         ld (Vel_down),a
 268+ 9E63
 269+ 9E63              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E63              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E63
 272+ 9E63 23               inc hl
 273+ 9E64 CD 75 9E         call Extrae_nibble_alto
 274+ 9E67
 275+ 9E67 32 E0 8B         ld (Vel_left),a
 276+ 9E6A 79               ld a,c
 277+ 9E6B E6 0F            and $0f
 278+ 9E6D 32 E1 8B         ld (Vel_right),a
 279+ 9E70
 280+ 9E70              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E70
 282+ 9E70 23               inc hl
 283+ 9E71 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E74 C9               ret
 285+ 9E75
 286+ 9E75 06 04        Extrae_nibble_alto ld b,4
 287+ 9E77 7E               ld a,(hl)
 288+ 9E78 4F               ld c,a
 289+ 9E79 E6 F0            and $f0
 290+ 9E7B CB 3F        1 srl a
 291+ 9E7D 10 FC            djnz 1B
 292+ 9E7F C9               ret
 293+ 9E80
 294+ 9E80              ; ---------- --------- --------- ---------- ----------
 295+ 9E80              ;
 296+ 9E80              ;   5/7/23
 297+ 9E80              ;
 298+ 9E80              ;   Incrementa_Puntero_indice_mov
 299+ 9E80
 300+ 9E80              Incrementa_Puntero_indice_mov
 301+ 9E80
 302+ 9E80 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E83 34               inc (hl)
 304+ 9E84
 305+ 9E84 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E87 01 02 00         ld bc,2
 307+ 9E8A A7               and a
 308+ 9E8B 09               add hl,bc
 309+ 9E8C 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E8F
 311+ 9E8F 7E               ld a,(hl)
 312+ 9E90 A7               and a
 313+ 9E91
 314+ 9E91              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E91
 316+ 9E91              ;    jr z,$
 317+ 9E91
 318+ 9E91              ;! Reinicia el Patrón de movimiento.
 319+ 9E91
 320+ 9E91 CC 96 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E94
 322+ 9E94 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E95
 324+ 9E95 C9               ret
 325+ 9E96
 326+ 9E96              ; ---------- --------- --------- ---------- ----------
 327+ 9E96              ;
 328+ 9E96              ;   15/01/24
 329+ 9E96              ;
 330+ 9E96              ;   Inicializa_Puntero_indice_mov
 331+ 9E96
 332+ 9E96              Inicializa_Puntero_indice_mov_2
 333+ 9E96
 334+ 9E96              ; Existe etiqueta de bucle principal???
 335+ 9E96
 336+ 9E96 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E99 24               inc h
 338+ 9E9A 25               dec h
 339+ 9E9B 28 05            jr z,2F
 340+ 9E9D
 341+ 9E9D 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9EA0 18 14            jr 3F
 343+ 9EA2
 344+ 9EA2              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EA2
 346+ 9EA2 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9EA5 47               ld b,a
 348+ 9EA6
 349+ 9EA6 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9EA9 2B           1 dec hl
 351+ 9EAA 2B               dec hl
 352+ 9EAB 10 FC            djnz 1B
 353+ 9EAD 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9EB0
 355+ 9EB0 AF               xor a
 356+ 9EB1 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9EB4 18 06            jr 4F
 358+ 9EB6
 359+ 9EB6 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EB9 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9EBC C9           4 ret
 362+ 9EBD
 363+ 9EBD              ; ----------------------------------------------------------------------
 364+ 9EBD              ;
 365+ 9EBD              ;   30/01/24
 366+ 9EBD              ;
 367+ 9EBD              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EBD
 369+ 9EBD 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EC0 CD 15 94         call Calcula_salto_en_BC
 371+ 9EC3 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EC6 A7               and a
 373+ 9EC7 ED 4A            adc hl,bc
 374+ 9EC9 C9               ret
 375+ 9ECA
 376+ 9ECA              ; ----------------------------------------------------------------------
 377+ 9ECA              ;
 378+ 9ECA              ;   30/01/24
 379+ 9ECA              ;
 380+ 9ECA              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9ECA              ;
 382+ 9ECA              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9ECA
 384+ 9ECA 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9ECB 23               inc hl
 386+ 9ECC 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9ECD 69               ld l,c
 388+ 9ECE 60               ld h,b
 389+ 9ECF 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9ED2 C9               ret
 391+ 9ED3
# file closed: Movimiento.asm
2301  9ED3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9ED3              ; --------------------------------------------------------------------------------------
   2+ 9ED3              ;
   3+ 9ED3              ;   28/08/24
   4+ 9ED3              ;
   5+ 9ED3
   6+ 9ED3              Compara_con_coordenadas_de_disparo
   7+ 9ED3
   8+ 9ED3              ;    di
   9+ 9ED3              ;    jr $
  10+ 9ED3              ;    ei
  11+ 9ED3
  12+ 9ED3 3A BD 8B         ld a,(Coordenada_y)
  13+ 9ED6 47               ld b,a
  14+ 9ED7 3A 38 8C         ld a,(Coordenadas_disparo_certero)
  15+ 9EDA 90               sub b
  16+ 9EDB
  17+ 9EDB              ; A = "0" ok
  18+ 9EDB              ; A = "1" ok
  19+ 9EDB
  20+ 9EDB 28 04            jr z,Activa_Impacto_en_entidad
  21+ 9EDD 3D               dec a
  22+ 9EDE 28 01            jr z,Activa_Impacto_en_entidad
  23+ 9EE0
  24+ 9EE0 C9               ret
  25+ 9EE1
  26+ 9EE1              Activa_Impacto_en_entidad
  27+ 9EE1
  28+ 9EE1 3E 01            ld a,1
  29+ 9EE3 32 BF 8B         ld (Impacto),a
  30+ 9EE6
  31+ 9EE6 C9               ret
  32+ 9EE7
  33+ 9EE7
  34+ 9EE7              ; --------------------------------------------------------------------------------------
  35+ 9EE7              ;
  36+ 9EE7              ;   26/08/24
  37+ 9EE7              ;
  38+ 9EE7
  39+ 9EE7              Limpia_album_de_borrado_disparos
  40+ 9EE7
  41+ 9EE7 21 30 8C         ld hl,Ctrl_5
  42+ 9EEA CB 46            bit 0,(hl)
  43+ 9EEC C8               ret z
  44+ 9EED CB 86            res 0,(hl)
  45+ 9EEF
  46+ 9EEF 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  47+ 9EF2 3D               dec a
  48+ 9EF3 3D               dec a
  49+ 9EF4 C0               ret nz
  50+ 9EF5
  51+ 9EF5              Limpiando
  52+ 9EF5
  53+ 9EF5 AF               xor a
  54+ 9EF6 2A 16 8C         ld hl,(Album_de_borrado_disparos)
  55+ 9EF9 77               ld (hl),a
  56+ 9EFA 5D               ld e,l
  57+ 9EFB 54               ld d,h
  58+ 9EFC 1C               inc e                                           ; DE = HL+1
  59+ 9EFD 01 3A 00         ld bc,$003a
  60+ 9F00 ED B0            ldir
  61+ 9F02
  62+ 9F02 C9               ret
  63+ 9F03
  64+ 9F03
  65+ 9F03              ; --------------------------------------------------------------------------------------
  66+ 9F03              ;
  67+ 9F03              ;   26/08/24
  68+ 9F03              ;
  69+ 9F03
  70+ 9F03              Calcula_bytes_pintado_disparos
  71+ 9F03
  72+ 9F03 2A 14 8C         ld hl,(Album_de_pintado_disparos)
  73+ 9F06 45               ld b,l
  74+ 9F07 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
  75+ 9F0A 7D               ld a,l
  76+ 9F0B
  77+ 9F0B 90               sub b
  78+ 9F0C 32 1A 8C         ld (Num_de_bytes_album_de_disparos),a
  79+ 9F0F
  80+ 9F0F C9               ret
  81+ 9F10
  82+ 9F10              ; --------------------------------------------------------------------------------------
  83+ 9F10              ;
  84+ 9F10              ;   23/08/24
  85+ 9F10              ;
  86+ 9F10              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
  87+ 9F10              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
  88+ 9F10              ;   _disparos que el álbum del FRAME actual).
  89+ 9F10
  90+ 9F10              Limpia_album_de_pintado_disparos
  91+ 9F10
  92+ 9F10              ;   Exclusiones.
  93+ 9F10
  94+ 9F10 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
  95+ 9F13 A7               and a
  96+ 9F14 C8               ret z
  97+ 9F15
  98+ 9F15              ; -----
  99+ 9F15
 100+ 9F15 A7               and a
 101+ 9F16
 102+ 9F16 3A 1A 8C         ld a,(Num_de_bytes_album_de_disparos)
 103+ 9F19 47               ld b,a
 104+ 9F1A 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 105+ 9F1D
 106+ 9F1D 90               sub b
 107+ 9F1E
 108+ 9F1E C8               ret z
 109+ 9F1F D8               ret c
 110+ 9F20
 111+ 9F20 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 112+ 9F23 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 113+ 9F24 AF               xor a                                                               ; "0".
 114+ 9F25
 115+ 9F25 77           1 ld (hl),a
 116+ 9F26 2C               inc l
 117+ 9F27 10 FC            djnz 1B
 118+ 9F29
 119+ 9F29 C9               ret
 120+ 9F2A
 121+ 9F2A              ; --------------------------------------------------------------------------------------
 122+ 9F2A              ;
 123+ 9F2A              ;   27/08/24
 124+ 9F2A              ;
 125+ 9F2A
 126+ 9F2A              Motor_Disparos
 127+ 9F2A
 128+ 9F2A              ;    Exclusiones:
 129+ 9F2A
 130+ 9F2A 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 131+ 9F2D 3D               dec a
 132+ 9F2E 3D               dec a
 133+ 9F2F 28 1A            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
 134+ 9F31
 135+ 9F31              ; .........................
 136+ 9F31
 137+ 9F31              ; Nos situamos en el (puntero_de_impresión) de la 1ª caja.
 138+ 9F31
 139+ 9F31 21 26 89         ld hl,Disparo_1A+3
 140+ 9F34
 141+ 9F34 34               inc (hl)
 142+ 9F35 35               dec (hl)
 143+ 9F36
 144+ 9F36 28 06            jr z,1F
 145+ 9F38
 146+ 9F38              ; Esta caja contiene un disparo.
 147+ 9F38
 148+ 9F38 CD 67 9F         call Elimina_disparo_si_procede
 149+ 9F3B CC 84 9F         call z,Mueve_disparo_Amadeus
 150+ 9F3E
 151+ 9F3E 21 2B 89     1 ld hl,Disparo_2A+3
 152+ 9F41
 153+ 9F41 34               inc (hl)
 154+ 9F42 35               dec (hl)
 155+ 9F43 28 06            jr z,2F
 156+ 9F45
 157+ 9F45              ; Esta caja contiene un disparo.
 158+ 9F45
 159+ 9F45 CD 67 9F         call Elimina_disparo_si_procede
 160+ 9F48 CC 84 9F         call z,Mueve_disparo_Amadeus
 161+ 9F4B
 162+ 9F4B              ; Disparos de entidades.
 163+ 9F4B
 164+ 9F4B 3A 1D 8C     2 ld a,(Numero_de_disparos_de_entidades)
 165+ 9F4E A7               and a
 166+ 9F4F C8               ret z
 167+ 9F50
 168+ 9F50 06 07            ld b,7                                                               ; Contador de disparos.
 169+ 9F52 21 2D 89         ld hl,Indice_de_disparos_entidades
 170+ 9F55
 171+ 9F55 CD 79 90     4 call Extrae_address
 172+ 9F58 13               inc de
 173+ 9F59 13               inc de
 174+ 9F5A ED 53 1F 8C      ld (Puntero_rancio_disparos_album),de
 175+ 9F5E
 176+ 9F5E 23               inc hl
 177+ 9F5F
 178+ 9F5F 34               inc (hl)                                                           ; Dispone de Puntero_objeto ???
 179+ 9F60 35               dec (hl)
 180+ 9F61 28 00            jr z,3F
 181+ 9F63
 182+ 9F63 EB           3 ex de,hl
 183+ 9F64 10 EF            djnz 4B
 184+ 9F66
 185+ 9F66 C9               ret
 186+ 9F67
 187+ 9F67              ; --------------------------------------------------------
 188+ 9F67              ;
 189+ 9F67              ;   28/8/24
 190+ 9F67              ;
 191+ 9F67              ;   Averigua si existe impacto en este disparo. Lo elimina si es así.
 192+ 9F67              ;   Mueve el disparo si este no está impactado.
 193+ 9F67
 194+ 9F67
 195+ 9F67              Elimina_disparo_si_procede
 196+ 9F67
 197+ 9F67 CD 6E 9F         call  Consulta_Impacto
 198+ 9F6A C4 A7 9F         call nz, Elimina_disparo                    ; HL apunta al .db (Puntero_de-impresion) del disparo.
 199+ 9F6D
 200+ 9F6D C9               ret
 201+ 9F6E
 202+ 9F6E              ; ----------------------
 203+ 9F6E              ;
 204+ 9F6E              ;
 205+ 9F6E              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 206+ 9F6E              ;
 207+ 9F6E              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 208+ 9F6E
 209+ 9F6E
 210+ 9F6E              Consulta_Impacto
 211+ 9F6E
 212+ 9F6E 23               inc hl
 213+ 9F6F
 214+ 9F6F 34               inc (hl)
 215+ 9F70 35               dec (hl)
 216+ 9F71
 217+ 9F71 2B               dec hl
 218+ 9F72 2B               dec hl
 219+ 9F73
 220+ 9F73 C8               ret z
 221+ 9F74
 222+ 9F74              ; Existe (Impacto).
 223+ 9F74              ; Activamos el FLAG correspondiente y generamos las coordenadas del disparo.
 224+ 9F74
 225+ 9F74 3A 35 8C         ld a,(Impacto2)
 226+ 9F77 CB DF            set 3,a
 227+ 9F79 32 35 8C         ld (Impacto2),a
 228+ 9F7C
 229+ 9F7C              ; (Puntero_de_impresion) en HL.
 230+ 9F7C
 231+ 9F7C E5               push hl
 232+ 9F7D CD 98 A0         call Genera_coordenadas_de_disparo_Amadeus
 233+ 9F80 E1               pop hl
 234+ 9F81
 235+ 9F81 AF               xor a
 236+ 9F82 3C               inc a                                           ; Fuerza NZ a la salida para forzar la "eliminación" del disparo.
 237+ 9F83
 238+ 9F83 C9               ret
 239+ 9F84
 240+ 9F84              ; ----------------------
 241+ 9F84              ;
 242+ 9F84              ;
 243+ 9F84              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 244+ 9F84
 245+ 9F84              Mueve_disparo_Amadeus
 246+ 9F84
 247+ 9F84 CD 79 90         call Extrae_address
 248+ 9F87
 249+ 9F87 CD 9D 99         call PreviousScan
 250+ 9F8A CD 9D 99         call PreviousScan
 251+ 9F8D CD 9D 99         call PreviousScan
 252+ 9F90              ;    call PreviousScan
 253+ 9F90
 254+ 9F90              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 255+ 9F90
 256+ 9F90 7C               ld a,h
 257+ 9F91 D6 40            sub $40
 258+ 9F93 EB               ex de,hl
 259+ 9F94 38 11            jr c,Elimina_disparo
 260+ 9F96
 261+ 9F96               ; Introduce nuevo puntero_de_impresión en la caja.
 262+ 9F96
 263+ 9F96 73               ld (hl),e
 264+ 9F97 23               inc hl
 265+ 9F98 72               ld (hl),d
 266+ 9F99
 267+ 9F99              ; Hemos movido el disparo.
 268+ 9F99              ; Cada vez que movemos un disparo debemos comprobar si existe Impacto en la nueva posición.
 269+ 9F99
 270+ 9F99 E5               push hl
 271+ 9F9A
 272+ 9F9A 2B               dec hl
 273+ 9F9B 2B               dec hl
 274+ 9F9C 2B               dec hl
 275+ 9F9D
 276+ 9F9D CD A9 A0         call Detecta_impacto_en_disparo_de_Amadeus
 277+ 9FA0
 278+ 9FA0              ; El FLAG Z indica si existe (Impacto) tras el desplazamiento.
 279+ 9FA0              ; (NZ) indica (Impacto).
 280+ 9FA0
 281+ 9FA0 E1               pop hl
 282+ 9FA1 23               inc hl                                      ; .db (Impacto) del disparo
 283+ 9FA2
 284+ 9FA2 C8               ret z
 285+ 9FA3
 286+ 9FA3              ; (Impacto) a "1".
 287+ 9FA3
 288+ 9FA3 3E 01            ld a,1
 289+ 9FA5 77               ld (hl),a
 290+ 9FA6
 291+ 9FA6 C9               ret
 292+ 9FA7
 293+ 9FA7              ; ----------------------
 294+ 9FA7              ;
 295+ 9FA7              ;   23/08/24
 296+ 9FA7
 297+ 9FA7              Elimina_disparo
 298+ 9FA7
 299+ 9FA7              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 300+ 9FA7              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 301+ 9FA7
 302+ 9FA7              ;   Disparo_1A defw 0									; Puntero objeto.
 303+ 9FA7              ;   	defw 0											; Puntero de impresión.
 304+ 9FA7              ;   	db 0											; Impacto.
 305+ 9FA7
 306+ 9FA7 2B               dec hl
 307+ 9FA8 2B               dec hl
 308+ 9FA9
 309+ 9FA9 AF               xor a
 310+ 9FAA 77               ld (hl),a
 311+ 9FAB 23               inc hl
 312+ 9FAC 77               ld (hl),a                                           ; Puntero_objeto borrado.
 313+ 9FAD 23               inc hl
 314+ 9FAE 77               ld (hl),a
 315+ 9FAF 23               inc hl
 316+ 9FB0 77               ld (hl),a                                           ; Puntero_de_impresion borrado.
 317+ 9FB1 23               inc hl
 318+ 9FB2 77               ld (hl),a                                           ; Impacto borrado.
 319+ 9FB3
 320+ 9FB3 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 321+ 9FB6 34               inc (hl)
 322+ 9FB7
 323+ 9FB7 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
 324+ 9FBA F6 01            or 1
 325+ 9FBC 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 326+ 9FBF
 327+ 9FBF 21 30 8C         ld hl,Ctrl_5                                        ; Indica que ha desaparecido un disparo.
 328+ 9FC2 CB C6            set 0,(hl)
 329+ 9FC4
 330+ 9FC4 AF               xor a
 331+ 9FC5 3C               inc a                                               ; Fuerza NZ a la salida.
 332+ 9FC6
 333+ 9FC6 C9               ret
 334+ 9FC7
 335+ 9FC7              ; --------------------------------------------------------------------------------------
 336+ 9FC7              ;
 337+ 9FC7              ;   21/8/24
 338+ 9FC7              ;
 339+ 9FC7
 340+ 9FC7              Pinta_disparos
 341+ 9FC7
 342+ 9FC7 ED 73 08 8C      ld (Stack),sp
 343+ 9FCB 06 02            ld b,2
 344+ 9FCD
 345+ 9FCD ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 346+ 9FD1
 347+ 9FD1 D1           2 pop de
 348+ 9FD2
 349+ 9FD2 14               inc d
 350+ 9FD3 15               dec d
 351+ 9FD4
 352+ 9FD4 28 1B            jr z,1F
 353+ 9FD6
 354+ 9FD6              Imprime_scanlines_de_disparo
 355+ 9FD6
 356+ 9FD6 E1               pop hl
 357+ 9FD7
 358+ 9FD7              ; Puntero objeto en DE.
 359+ 9FD7              ; Puntero_de_impresión en HL.
 360+ 9FD7
 361+ 9FD7              ; 1er scanline.
 362+ 9FD7
 363+ 9FD7 1A               ld a,(de)
 364+ 9FD8 AE               xor (hl)
 365+ 9FD9 77               ld (hl),a
 366+ 9FDA
 367+ 9FDA 13               inc de
 368+ 9FDB 2C               inc l
 369+ 9FDC
 370+ 9FDC 1A               ld a,(de)
 371+ 9FDD AE               xor (hl)
 372+ 9FDE 77               ld (hl),a
 373+ 9FDF
 374+ 9FDF              ; 2º scanline.
 375+ 9FDF
 376+ 9FDF E1               pop hl
 377+ 9FE0 1B               dec de
 378+ 9FE1
 379+ 9FE1 1A               ld a,(de)
 380+ 9FE2 AE               xor (hl)
 381+ 9FE3 77               ld (hl),a
 382+ 9FE4
 383+ 9FE4 13               inc de
 384+ 9FE5 2C               inc l
 385+ 9FE6
 386+ 9FE6 1A               ld a,(de)
 387+ 9FE7 AE               xor (hl)
 388+ 9FE8 77               ld (hl),a
 389+ 9FE9
 390+ 9FE9              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 391+ 9FE9
 392+ 9FE9 18 E6            jr 2B
 393+ 9FEB
 394+ 9FEB ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
 395+ 9FEF 18 E0            jr 2B
 396+ 9FF1
 397+ 9FF1 10 F8        1 djnz 3B
 398+ 9FF3 ED 7B 08 8C      ld sp,(Stack)
 399+ 9FF7 C9               ret
 400+ 9FF8
 401+ 9FF8              ; --------------------------------------------------------------------------------------
 402+ 9FF8              ;
 403+ 9FF8              ;   28/8/24
 404+ 9FF8              ;
 405+ 9FF8              ;   Modifica: HL y DE.
 406+ 9FF8
 407+ 9FF8
 408+ 9FF8              Genera_datos_de_impresion_disparos_Amadeus
 409+ 9FF8
 410+ 9FF8              ;   Exclusiones:
 411+ 9FF8
 412+ 9FF8 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 413+ 9FFB 3D               dec a
 414+ 9FFC 3D               dec a
 415+ 9FFD C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 416+ 9FFE
 417+ 9FFE              ; -----
 418+ 9FFE
 419+ 9FFE ED 73 08 8C      ld (Stack),sp
 420+ A002 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 421+ A005
 422+ A005 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 423+ A008 ED 72            sbc hl,sp                                                 ; Última caja ???
 424+ A00A 28 26            jr z,Salida
 425+ A00C
 426+ A00C D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 427+ A00D
 428+ A00D 14               inc d
 429+ A00E 15               dec d
 430+ A00F
 431+ A00F 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 432+ A011
 433+ A011              Siguiente_disparo_Amadeus
 434+ A011
 435+ A011 D1               pop de
 436+ A012 33               inc sp
 437+ A013 18 F0            jr 1B
 438+ A015
 439+ A015              Genera_scanlines_de_disparo_Amadeus
 440+ A015
 441+ A015 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 442+ A016              ;                                                             ; Puntero_de_impresión del disparo en HL.
 443+ A016
 444+ A016 33               inc sp
 445+ A017 ED 73 1F 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 446+ A01B
 447+ A01B ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 448+ A01F
 449+ A01F C1               pop bc
 450+ A020 C1               pop bc
 451+ A021 C1               pop bc
 452+ A022
 453+ A022 ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 454+ A026
 455+ A026 E5               push hl                                                   ; Sube 2º scanline al álbum.
 456+ A027 CD 9D 99         call PreviousScan
 457+ A02A E5               push hl                                                   ; Sube 1er scanline al álbum.
 458+ A02B D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 459+ A02C
 460+ A02C ED 7B 1F 8C      ld sp,(Puntero_rancio_disparos_album)
 461+ A030 18 D3            jr 1B
 462+ A032
 463+ A032
 464+ A032              Salida
 465+ A032
 466+ A032 ED 7B 08 8C      ld sp,(Stack)
 467+ A036 C9               ret
 468+ A037
 469+ A037              ; --------------------------------------------------------------------------------------
 470+ A037              ;
 471+ A037              ;   17/08/24
 472+ A037              ;
 473+ A037
 474+ A037              Genera_disparo_Amadeus
 475+ A037
 476+ A037              ;   Exclusiones.
 477+ A037
 478+ A037 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
 479+ A03A A7               and a
 480+ A03B C8               ret z                                                    ; Salimos si no hay permiso de disparo.
 481+ A03C 3D               dec a
 482+ A03D 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 483+ A040
 484+ A040 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 485+ A043 A7               and a
 486+ A044 C8               ret z                                                    ; Hay 2 disparos en pantalla, no hay cajas libres.
 487+ A045
 488+ A045              ; ---------------------------------------------------------------------------------------------------------------
 489+ A045
 490+ A045              ;   Dec nº de disparos de Amadeus.
 491+ A045
 492+ A045 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 493+ A048 35               dec (hl)
 494+ A049
 495+ A049              ;   Nos situamos en la 1ª caja que encontramos vacía.
 496+ A049
 497+ A049 21 24 89         ld hl,Disparo_1A+1
 498+ A04C
 499+ A04C 34               inc (hl)
 500+ A04D 35               dec (hl)
 501+ A04E 2B               dec hl
 502+ A04F
 503+ A04F 28 03            jr z,7F
 504+ A051
 505+ A051 21 28 89         ld hl,Disparo_2A
 506+ A054
 507+ A054 22 33 8C     7 ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 508+ A057
 509+ A057              ; ---------------------------------------------------------------------------------------------------------------
 510+ A057
 511+ A057              Define_puntero_objeto_disparo
 512+ A057
 513+ A057              ;   Inicializamos contador.
 514+ A057
 515+ A057 06 00            ld b,0
 516+ A059
 517+ A059 2A 75 89         ld hl,(p.imp.amadeus)
 518+ A05C 2C               inc l
 519+ A05D
 520+ A05D 3E 80            ld a,$80
 521+ A05F BE               cp (hl)
 522+ A060 28 0D            jr z,1F
 523+ A062
 524+ A062 04               inc b
 525+ A063
 526+ A063 3E 60            ld a,$60
 527+ A065 BE               cp (hl)
 528+ A066 28 07            jr z,1F
 529+ A068
 530+ A068
 531+ A068 04               inc b
 532+ A069
 533+ A069 3E 18            ld a,$18
 534+ A06B BE               cp (hl)
 535+ A06C 28 01            jr z,1F
 536+ A06E
 537+ A06E 04               inc b
 538+ A06F
 539+ A06F              ;   Calcula el Puntero_de_impresión del disparo.
 540+ A06F
 541+ A06F              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 542+ A06F
 543+ A06F CD 9D 99     1 call PreviousScan
 544+ A072
 545+ A072 78               ld a,b
 546+ A073 CB 3F            srl a
 547+ A075 28 03            jr z,4F
 548+ A077
 549+ A077              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 550+ A077 E5               push hl
 551+ A078 18 02            jr 5F
 552+ A07A 2D           4 dec l
 553+ A07B E5               push hl
 554+ A07C              ; ---
 555+ A07C
 556+ A07C              ;   Calcula el Puntero_objeto del disparo.
 557+ A07C
 558+ A07C 21 70 83     5 ld hl,Indice_disparo
 559+ A07F 04               inc b
 560+ A080 05               dec b
 561+ A081 28 04            jr z,2F
 562+ A083
 563+ A083              ;   Nos desplazamos por el índice de disparos.
 564+ A083
 565+ A083 2C           3 inc l
 566+ A084 2C               inc l
 567+ A085 10 FC            djnz 3B
 568+ A087
 569+ A087              ; --- Guarda el Puntero_objeto del disparo en la pila.
 570+ A087 CD 79 90     2 call Extrae_address
 571+ A08A E5               push hl
 572+ A08B              ; ---
 573+ A08B
 574+ A08B              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 575+ A08B              ; HL en el 1er .db de la caja.
 576+ A08B
 577+ A08B 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 578+ A08E
 579+ A08E 06 02            ld b,2
 580+ A090
 581+ A090 D1           6 pop de
 582+ A091 73               ld (hl),e
 583+ A092 23               inc hl
 584+ A093 72               ld (hl),d
 585+ A094 23               inc hl
 586+ A095
 587+ A095 10 F9            djnz 6B
 588+ A097
 589+ A097 C9               ret
 590+ A098
 591+ A098              Genera_coordenadas_de_disparo_Amadeus
 592+ A098
 593+ A098              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 594+ A098              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 595+ A098              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 596+ A098
 597+ A098 CD 79 90         call Extrae_address
 598+ A09B CD 98 94         call Genera_coordenadas
 599+ A09E
 600+ A09E 3D               dec a
 601+ A09F
 602+ A09F 21 38 8C         ld hl,Coordenadas_disparo_certero
 603+ A0A2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 604+ A0A3 23               inc hl
 605+ A0A4 3A BC 8B         ld a,(Coordenada_X)
 606+ A0A7 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 607+ A0A8
 608+ A0A8 C9               ret
 609+ A0A9
 610+ A0A9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 611+ A0A9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 612+ A0A9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 613+ A0A9
 614+ A0A9              ; ----------------------------------------------
 615+ A0A9              ;
 616+ A0A9              ;   27/08/24
 617+ A0A9              ;
 618+ A0A9              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 619+ A0A9              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 620+ A0A9
 621+ A0A9              Detecta_impacto_en_disparo_de_Amadeus
 622+ A0A9
 623+ A0A9              Extraccion_de_datos
 624+ A0A9
 625+ A0A9 5E               ld e,(hl)
 626+ A0AA 23               inc hl
 627+ A0AB 56               ld d,(hl)
 628+ A0AC 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 629+ A0AD
 630+ A0AD 4E               ld c,(hl)
 631+ A0AE 23               inc hl
 632+ A0AF 46               ld b,(hl)
 633+ A0B0
 634+ A0B0 C5               push bc
 635+ A0B1 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 636+ A0B2
 637+ A0B2              Detecta_impacto_
 638+ A0B2
 639+ A0B2 1A               ld a,(de)
 640+ A0B3 A6               and (hl)
 641+ A0B4 C0               ret nz
 642+ A0B5
 643+ A0B5 13               inc de
 644+ A0B6 23               inc hl
 645+ A0B7
 646+ A0B7 1A               ld a,(de)
 647+ A0B8 A6               and (hl)
 648+ A0B9 C9               ret
 649+ A0BA
 650+ A0BA              ; -------------------------------------------------------------------------------------------------------------
 651+ A0BA              ;
 652+ A0BA              ;   8/8/24
 653+ A0BA              ;
 654+ A0BA              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 655+ A0BA              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 656+ A0BA              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 657+ A0BA              ;
 658+ A0BA              ;   MODIFICA: HL,DE,BC y A.
 659+ A0BA              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 660+ A0BA              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 661+ A0BA
 662+ A0BA              Colision_Entidad_Amadeus
 663+ A0BA
 664+ A0BA              ; Posible contacto de entidad con Amadeus. ?????
 665+ A0BA
 666+ A0BA              ; Exclusiones:
 667+ A0BA
 668+ A0BA 3A 53 8C         ld a,(Shield)
 669+ A0BD A7               and a
 670+ A0BE C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 671+ A0BF
 672+ A0BF 21 2E 8C         ld hl,Ctrl_3
 673+ A0C2 CB 76            bit 6,(hl)
 674+ A0C4 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 675+ A0C5
 676+ A0C5 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 677+ A0C8 CB 56            bit 2,(hl)
 678+ A0CA C0               ret nz
 679+ A0CB
 680+ A0CB 3A BD 8B     	ld a,(Coordenada_y)
 681+ A0CE FE 14        	cp $14
 682+ A0D0 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 683+ A0D1
 684+ A0D1 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 685+ A0D4 A7               and a
 686+ A0D5 C0               ret nz
 687+ A0D6
 688+ A0D6              Genera_coordenadas_X
 689+ A0D6
 690+ A0D6              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 691+ A0D6              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 692+ A0D6
 693+ A0D6              ;   Limpiamos almacenes.
 694+ A0D6
 695+ A0D6              ;    call Limpia_Coordenadas_X
 696+ A0D6
 697+ A0D6              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 698+ A0D6
 699+ A0D6 21 3A 8C         ld hl,Coordenadas_X_Entidad
 700+ A0D9 3A BC 8B         ld a,(Coordenada_X)
 701+ A0DC CD FE A0         call Guarda_coordenadas_X
 702+ A0DF
 703+ A0DF              ;   Almacenamos las coordenadas X de Amadeus.
 704+ A0DF
 705+ A0DF 3A 71 89         ld a,(CX_Amadeus)
 706+ A0E2 CD FE A0         call Guarda_coordenadas_X
 707+ A0E5 CD 12 A1         call Compara_coordenadas_X
 708+ A0E8 C0               ret nz
 709+ A0E9
 710+ A0E9 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 711+ A0EB 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 712+ A0EE
 713+ A0EE 2A FB 8B         ld hl,(Puntero_store_caja)
 714+ A0F1 2C               inc l
 715+ A0F2 2C               inc l
 716+ A0F3 2C               inc l
 717+ A0F4 2C               inc l
 718+ A0F5 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 719+ A0F8
 720+ A0F8 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 721+ A0FB CB D6            set 2,(hl)
 722+ A0FD
 723+ A0FD C9               ret
 724+ A0FE
 725+ A0FE               ; ----- ----- ----- ----- -----
 726+ A0FE
 727+ A0FE 77           Guarda_coordenadas_X ld (hl),a
 728+ A0FF 3C               inc a
 729+ A100 2C               inc l
 730+ A101 77               ld (hl),a
 731+ A102 3C               inc a
 732+ A103 2C               inc l
 733+ A104 77               ld (hl),a
 734+ A105 2C               inc l
 735+ A106 C9               ret
 736+ A107
 737+ A107 AF           Limpia_Coordenadas_X xor a
 738+ A108 06 06            ld b,6
 739+ A10A 21 3D 8C         ld hl,Coordenadas_X_Amadeus
 740+ A10D 77           1 ld (hl),a
 741+ A10E 23               inc hl
 742+ A10F 10 FC            djnz 1B
 743+ A111 C9               ret
 744+ A112
 745+ A112              ; ----- ----- ----- ----- -----
 746+ A112
 747+ A112              Compara_coordenadas_X
 748+ A112
 749+ A112 DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
 750+ A116 DD 7E 00         ld a,(ix+0)
 751+ A119 CD 27 A1         call Comparando
 752+ A11C C8               ret z
 753+ A11D
 754+ A11D 3C               inc a
 755+ A11E CD 36 A1         call Comparando_1
 756+ A121 C8               ret z
 757+ A122
 758+ A122 3C               inc a
 759+ A123 CD 36 A1         call Comparando_1
 760+ A126 C9               ret
 761+ A127
 762+ A127              ; ----- ----- ----- ----- -----
 763+ A127              ;
 764+ A127              ;   4/12/23
 765+ A127              ;
 766+ A127              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 767+ A127
 768+ A127              Comparando
 769+ A127
 770+ A127 DD 2C            inc ixl
 771+ A129 DD 2C            inc ixl
 772+ A12B DD 2C            inc ixl
 773+ A12D
 774+ A12D DD 46 00         ld b,(ix+0)
 775+ A130 DD 4E 01         ld c,(ix+1)
 776+ A133 DD 56 02         ld d,(ix+2)
 777+ A136
 778+ A136 B8           Comparando_1 cp b
 779+ A137 C8               ret z
 780+ A138 B9               cp c
 781+ A139 C8               ret z
 782+ A13A BA               cp d
 783+ A13B C9               ret
 784+ A13C
 785+ A13C              ; -----------------------------------------------------------------------
 786+ A13C              ;
 787+ A13C              ;   04/7/24
 788+ A13C              ;
 789+ A13C
 790+ A13C              Detecta_colision_nave_entidad
 791+ A13C
 792+ A13C              ; Exclusiones:
 793+ A13C
 794+ A13C              ; Salimos de la rutina si no hay advertencia de posible colisión.
 795+ A13C
 796+ A13C 21 35 8C     	ld hl,Impacto2
 797+ A13F CB 56        	bit 2,(hl)
 798+ A141 C8           	ret z
 799+ A142
 800+ A142              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 801+ A142
 802+ A142 2A 77 89         ld hl,(Pamm_Amadeus)
 803+ A145 CD 79 90         call Extrae_address
 804+ A148 54               ld d,h
 805+ A149 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 806+ A14A
 807+ A14A 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 808+ A14D 06 10            ld b,16                                        ; Contador de scanlines en B.
 809+ A14F FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 810+ A152
 811+ A152 C5           1 push bc
 812+ A153 06 03            ld b,3
 813+ A155 E5               push hl
 814+ A156
 815+ A156              ; .db
 816+ A156
 817+ A156 1A           3 ld a,(de)
 818+ A157 A7               and a
 819+ A158 20 03            jr nz,4F
 820+ A15A
 821+ A15A 2C               inc l
 822+ A15B 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 823+ A15D
 824+ A15D ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 825+ A15F 28 04            jr z,2F
 826+ A161
 827+ A161              ; Impacto.
 828+ A161 FD 2D            dec iyl
 829+ A163 28 22            jr z,5F
 830+ A165
 831+ A165 1C           2 inc e
 832+ A166 10 EE            djnz 3B
 833+ A168
 834+ A168 E1               pop hl
 835+ A169
 836+ A169              ; Hay salto de línea en el puntero de impresión ???
 837+ A169
 838+ A169 7C               ld a,h
 839+ A16A D6 57            sub $57
 840+ A16C 20 0A            jr nz,6F
 841+ A16E
 842+ A16E              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 843+ A16E
 844+ A16E 2A 75 89         ld hl,(p.imp.amadeus)
 845+ A171 3E 20            ld a,$20
 846+ A173 A7               and a
 847+ A174 85               add l
 848+ A175 6F               ld l,a
 849+ A176 18 01            jr 7F
 850+ A178
 851+ A178 24           6 inc h
 852+ A179
 853+ A179 C1           7 pop bc
 854+ A17A 10 D6            djnz 1B
 855+ A17C
 856+ A17C              ;   Fin de la comparativa.
 857+ A17C
 858+ A17C              ;   NO HAY COLISIÓN !!!!!.
 859+ A17C              ;
 860+ A17C              ;   .db (Impacto) de Amadeus a "0".
 861+ A17C              ;   RES el bit2 de (Impacto2).
 862+ A17C              ;
 863+ A17C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 864+ A17C              ;   Lo colocamos a "0".
 865+ A17C
 866+ A17C 21 35 8C         ld hl,Impacto2
 867+ A17F CB 96            res 2,(hl)
 868+ A181 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
 869+ A184 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 870+ A186 C9               ret
 871+ A187
 872+ A187              ;   COLISIÓN !!!!!.
 873+ A187              ;
 874+ A187              ;   .db (Impacto) de Amadeus a "1".
 875+ A187              ;   SET el bit3 de (Impacto2).
 876+ A187              ;
 877+ A187              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 878+ A187
 879+ A187 E1           5 pop hl
 880+ A188 C1               pop bc
 881+ A189
 882+ A189 21 74 89         ld hl,Impacto_Amadeus
 883+ A18C 36 01            ld (hl),1
 884+ A18E 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 885+ A191 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 886+ A193
 887+ A193 11 C0 87         ld de,Indice_Explosion_entidades
 888+ A196 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 889+ A199
 890+ A199 23               inc hl
 891+ A19A 23               inc hl
 892+ A19B 23               inc hl
 893+ A19C
 894+ A19C 73               ld (hl),e
 895+ A19D 23               inc hl
 896+ A19E 72               ld (hl),d
 897+ A19F
 898+ A19F              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 899+ A19F
 900+ A19F 11 60 88         ld de,Indice_Explosion_Amadeus
 901+ A1A2 21 77 89         ld hl,Pamm_Amadeus
 902+ A1A5
 903+ A1A5 73               ld (hl),e
 904+ A1A6 23               inc hl
 905+ A1A7 72               ld (hl),d
 906+ A1A8
 907+ A1A8 C9               ret
 908+ A1A9
 909+ A1A9
 910+ A1A9
# file closed: Disparo.asm
2302  A1A9
2303  A1A9              	SAVESNA "Pruebas.sna", START
2304  A1A9
2305  A1A9
2306  A1A9
2307  A1A9
# file closed: Banco_de_pruebas.asm
