# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2C 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD CD 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 52 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD E1 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 50 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 50 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 53 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD F1 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7C 83        	defw Disparo_f9
  13+ 8374 80 83        	defw Disparo_fb
  14+ 8376 84 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  19+ 837C              ; Disparo (CTRL_DESPLZ)="f9"
  20+ 837C 00 60        Disparo_f9 DEFB $00,$60
  21+ 837E 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  22+ 8380              ; Disparo (CTRL_DESPLZ)="fb"
  23+ 8380 18 00        Disparo_fb DEFB $18,$00
  24+ 8382 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  25+ 8384              ; Disparo (CTRL_DESPLZ)="fd"
  26+ 8384 06 00        Disparo_fd DEFB $06,$00
  27+ 8386 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  28+ 8388
  29+ 8388              ; ----------------------------------------------------------------------------------------
  30+ 8388
  31+ 8388              ; Badsat_izq. 2x2.
  32+ 8388
  33+ 8388 98 83        Indice_Badsat_izq defw Badsat_izquierda
  34+ 838A 00 85        	defw Badsat_izq_fe
  35+ 838C C0 84        	defw Badsat_izq_fd
  36+ 838E 90 84        	defw Badsat_izq_fc
  37+ 8390 60 84        	defw Badsat_izq_fb
  38+ 8392 30 84        	defw Badsat_izq_fa
  39+ 8394 00 84        	defw Badsat_izq_f9
  40+ 8396 C8 83        	defw Badsat_izq_f8
  41+ 8398
  42+ 8398 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  43+ 839B 02 14 00     	DEFB 	$02,$14,$00
  44+ 839E 02 2A 00     	DEFB 	$02,$2A,$00
  45+ 83A1 02 55 00     	DEFB 	$02,$55,$00
  46+ 83A4 02 AA 00     	DEFB	$02,$AA,$00
  47+ 83A7 02 54 00     	DEFB 	$02,$54,$00
  48+ 83AA 7F E8 00     	DEFB 	$7F,$E8,$00
  49+ 83AD 03 60 00     	DEFB 	$03,$60,$00
  50+ 83B0 0A E0 00     	DEFB	$0A,$E0,$00
  51+ 83B3 17 F8 00     	DEFB 	$17,$F8,$00
  52+ 83B6 2B E8 00     	DEFB 	$2B,$E8,$00
  53+ 83B9 54 40 00     	DEFB 	$54,$40,$00
  54+ 83BC AA 60 00     	DEFB	$AA,$60,$00
  55+ 83BF 54 00 00     	DEFB 	$54,$00,$00
  56+ 83C2 28 00 00     	DEFB 	$28,$00,$00
  57+ 83C5 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  58+ 83C8
  59+ 83C8 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  59+ 83CC 0A 00 01 15
  60+ 83D0 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  60+ 83D4 01 55 00 01
  61+ 83D8 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  61+ 83DC 00 01 B0 00
  62+ 83E0 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  62+ 83E4 FC 00 15 F4
  63+ 83E8 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  63+ 83EC 55 30 00 2A
  64+ 83F0 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  64+ 83F4 00 08 00 00
  65+ 83F8
  66+ 83F8              	org $8400
  67+ 8400
  68+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  68+ 8404 85 00 00 8A
  69+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  69+ 840C 00 AA 80 00
  70+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  70+ 8414 00 00 D8 00
  71+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  71+ 841C FE 00 0A FA
  72+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  72+ 8424 2A 98 00 15
  73+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  73+ 842C 00 04 00 00
  74+ 8430
  75+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  75+ 8434 42 80 00 45
  76+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  76+ 843C 00 55 40 00
  77+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  77+ 8444 00 00 6C 00
  78+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  78+ 844C FF 00 05 7D
  79+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  79+ 8454 15 4C 00 0A
  80+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  80+ 845C 00 02 00 00
  81+ 8460
  82+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  82+ 8464 21 40 00 22
  83+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  83+ 846C 00 2A A0 00
  84+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  84+ 8474 80 00 36 00
  85+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  85+ 847C 7F 80 02 BE
  86+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  86+ 8484 0A A6 00 05
  87+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  87+ 848C 00 01 00 00
  88+ 8490
  89+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  89+ 8494 10 A0 00 11
  90+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  90+ 849C 00 15 50 00
  91+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  91+ 84A4 40 00 1B 00
  92+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  92+ 84AC BF C0 01 5F
  93+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  93+ 84B4 05 53 00 02
  94+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  94+ 84BC 00 00 80 00
  95+ 84C0
  96+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  96+ 84C4 08 50 00 08
  97+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  97+ 84CC 00 0A A8 00
  98+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  98+ 84D4 A0 00 0D 80
  99+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  99+ 84DC 5F F8 00 AF
 100+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 100+ 84E4 02 A9 00 01
 101+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 101+ 84EC 00 00 40 00
 102+ 84F0
 103+ 84F0              	org $8500
 104+ 8500
 105+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 105+ 8504 04 28 00 04
 106+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 106+ 850C 00 05 54 00
 107+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 107+ 8514 D0 00 06 C0
 108+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 108+ 851C 2F FC 00 57
 109+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 109+ 8524 01 54 80 00
 110+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 110+ 852C 00 00 20 00
 111+ 8530
 112+ 8530
 113+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 114+ 8532 70 85        	defw Badsat_der_f8
 115+ 8534 A0 85        	defw Badsat_der_f9
 116+ 8536 D0 85        	defw Badsat_der_fa
 117+ 8538 00 86        	defw Badsat_der_fb
 118+ 853A 30 86        	defw Badsat_der_fc
 119+ 853C 60 86        	defw Badsat_der_fd
 120+ 853E 90 86        	defw Badsat_der_fe
 121+ 8540
 122+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 123+ 8543 28 40 00     	DEFB    $28,$40,$00
 124+ 8546 54 40 00     	DEFB	$54,$40,$00
 125+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 126+ 854C 55 40 00     	DEFB	$55,$40,$00
 127+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 128+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 129+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 130+ 8558 07 50 00     	DEFB	$07,$50,$00
 131+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 132+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 133+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 134+ 8564 06 55 00     	DEFB	$06,$55,$00
 135+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 136+ 856A 00 14 00     	DEFB	$00,$14,$00
 137+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 138+ 8570
 139+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 139+ 8574 20 00 2A 20
 140+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 140+ 857C 2A A0 00 15
 141+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 141+ 8584 00 03 60 00
 142+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 142+ 858C F4 00 0B EA
 143+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 143+ 8594 03 2A 80 00
 144+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 144+ 859C 00 00 04 00
 145+ 85A0
 146+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 146+ 85A4 10 00 15 10
 147+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 147+ 85AC 15 50 00 0A
 148+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 148+ 85B4 80 01 B0 00
 149+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 149+ 85BC FA 00 05 F5
 150+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 150+ 85C4 01 95 40 00
 151+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 151+ 85CC 00 00 02 00
 152+ 85D0
 153+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 153+ 85D4 08 00 0A 88
 154+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 154+ 85DC 0A A8 00 05
 155+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 155+ 85E4 C0 00 D8 00
 156+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 156+ 85EC FD 00 02 FA
 157+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 157+ 85F4 00 CA A0 00
 158+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 158+ 85FC 80 00 01 00
 159+ 8600
 160+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 160+ 8604 84 00 05 44
 161+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 161+ 860C 05 54 00 02
 162+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 162+ 8614 E0 00 6C 00
 163+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 163+ 861C FE 80 01 7D
 164+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 164+ 8624 00 65 50 00
 165+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 165+ 862C 40 00 00 80
 166+ 8630
 167+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 167+ 8634 42 00 02 A2
 168+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 168+ 863C 02 AA 00 01
 169+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 169+ 8644 F0 00 36 00
 170+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 170+ 864C FF 40 00 BE
 171+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 171+ 8654 00 32 A8 00
 172+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 172+ 865C A0 00 00 40
 173+ 8660
 174+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 174+ 8664 A1 00 01 51
 175+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 175+ 866C 01 55 00 00
 176+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 176+ 8674 F8 00 1B 00
 177+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 177+ 867C FF A0 00 1F
 178+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 178+ 8684 00 09 54 00
 179+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 179+ 868C 50 00 00 20
 180+ 8690
 181+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 181+ 8694 50 80 00 A8
 182+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 182+ 869C 00 AA 80 00
 183+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 183+ 86A4 FC 00 0D 80
 184+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 184+ 86AC FF D0 00 0F
 185+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 185+ 86B4 00 04 AA 00
 186+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 186+ 86BC 28 00 00 10
 187+ 86C0
 188+ 86C0              ; ----------------------------------------------------------------------------------------
 189+ 86C0
 190+ 86C0              ; Amadeus. 2x2.
 191+ 86C0
 192+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 193+ 86C2 00 00        	defw 0
 194+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 195+ 86C6 00 00        	defw 0
 196+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 197+ 86CA 00 00        	defw 0
 198+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 199+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 200+ 86D0
 201+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 202+ 86D2 00 00        	defw 0
 203+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 204+ 86D6 00 00        	defw 0
 205+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 206+ 86DA 00 00        	defw 0
 207+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 208+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 209+ 86E0
 210+ 86E0              	org $8700
 211+ 8700
 212+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 213+ 8703 23 C4 00     	DEFB	$23,$C4,0
 214+ 8706 26 64 00     	DEFB	$26,$64,0
 215+ 8709 24 24 00     	DEFB	$24,$24,0
 216+ 870C 2C 34 00     	DEFB	$2C,$34,0
 217+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 218+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 219+ 8715 67 E6 00     	DEFB	$67,$E6,0
 220+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 221+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 222+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 223+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 224+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 225+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 226+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 227+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 228+ 8730
 229+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 229+ 8734 F1 00 09 99
 230+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 230+ 873C 0B 0D 00 1B
 231+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 231+ 8744 80 19 F9 80
 232+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 232+ 874C F3 C0 3D FB
 233+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 233+ 8754 3E F7 C0 3E
 234+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 234+ 875C 40 1C 63 80
 235+ 8760
 236+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 236+ 8764 3C 40 02 66
 237+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 237+ 876C 02 C3 40 06
 238+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 238+ 8774 60 06 7E 60
 239+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 239+ 877C 3C F0 0F 7E
 240+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 240+ 8784 0F BD F0 0F
 241+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 241+ 878C 10 07 18 E0
 242+ 8790
 243+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 243+ 8794 8F 10 00 99
 244+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 244+ 879C 00 B0 D0 01
 245+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 245+ 87A4 D8 01 9F 98
 246+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 246+ 87AC CF 3C 03 DF
 247+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 247+ 87B4 03 EF 7C 03
 248+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 248+ 87BC 44 01 C6 38
 249+ 87C0
 250+ 87C0              ; ----------------------------------------------------------------------------------------
 251+ 87C0
 252+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 253+ 87C2 00 88        	defw Explosion_entidades_2
 254+ 87C4 30 88        	defw Explosion_entidades_3
 255+ 87C6
 256+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 257+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 258+ 87CC 04 38 40     	DEFB	$04,$38,$40
 259+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 260+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 261+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 262+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 263+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 264+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 265+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 266+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 267+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 268+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 269+ 87ED 03 00 40     	DEFB	$03,$00,$40
 270+ 87F0 04 00 00     	DEFB	$04,$00,$00
 271+ 87F3 08 00 00     	DEFB	$08,$00,$00
 272+ 87F6
 273+ 87F6              	org $8800
 274+ 8800
 275+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 275+ 8804 38 10 03 BC
 276+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 276+ 880C 04 06 C0 00
 277+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 277+ 8814 00 03 DD 80
 278+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 278+ 881C 3A 70 01 9C
 279+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 279+ 8824 04 F8 80 06
 280+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 280+ 882C 00 00 00 00
 281+ 8830
 282+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 282+ 8834 00 20 08 00
 283+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 283+ 883C 00 06 00 00
 284+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 284+ 8844 00 00 14 30
 285+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 285+ 884C 38 00 01 08
 286+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 286+ 8854 00 80 00 04
 287+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 287+ 885C 10 08 00 20
 288+ 8860
 289+ 8860              ; ------------------------------------------
 290+ 8860
 291+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 292+ 8862 96 88        	defw Explosion_Amadeus_2
 293+ 8864 C6 88        	defw Explosion_Amadeus_3
 294+ 8866
 295+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 296+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 297+ 886C 02 66 56     	DEFB	$02,$66,$56
 298+ 886F 02 42 48     	DEFB	$02,$42,$48
 299+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 300+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 301+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 302+ 887B 06 79 68     	DEFB	$06,$79,$68
 303+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 304+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 305+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 306+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 307+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 308+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 309+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 310+ 8893 07 19 80     	DEFB	$07,$19,$80
 311+ 8896
 312+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 313+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 314+ 889C 00 66 56     	DEFB	$00,$66,$56
 315+ 889F 04 42 48     	DEFB	$04,$42,$48
 316+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 317+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 318+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 319+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 320+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 321+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 322+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 323+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 324+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 325+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 326+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 327+ 88C3 07 19 80     	DEFB	$07,$19,$80
 328+ 88C6
 329+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 330+ 88C9 00 00 00     	DEFB	$00,$00,$00
 331+ 88CC 00 00 00     	DEFB	$00,$00,$00
 332+ 88CF 00 00 40     	DEFB	$00,$00,$40
 333+ 88D2 00 00 30     	DEFB	$00,$00,$30
 334+ 88D5 00 00 08     	DEFB	$00,$00,$08
 335+ 88D8 00 82 40     	DEFB	$00,$82,$40
 336+ 88DB 04 04 68     	DEFB	$04,$04,$68
 337+ 88DE 04 20 58     	DEFB	$04,$20,$58
 338+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 339+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 340+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 341+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 342+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 343+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 344+ 88F3 07 11 80     	DEFB	$07,$11,$80
 345+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F9 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 27 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927
  39+ 8927 00 00        Disparo_2A defw 0									; Puntero objeto.
  40+ 8929 00 00        	defw 0											; Puntero de impresión.
  41+ 892B
  42+ 892B 39 89        Indice_de_disparos_entidades defw Disparo_1
  43+ 892D 3E 89        	defw Disparo_2
  44+ 892F 43 89        	defw Disparo_3
  45+ 8931 48 89        	defw Disparo_4
  46+ 8933 4D 89        	defw Disparo_5
  47+ 8935 52 89        	defw Disparo_6
  48+ 8937 57 89        	defw Disparo_7
  49+ 8939
  50+ 8939 00 00        Disparo_1 defw 0									; Puntero objeto.
  51+ 893B 00 00        	defw 0											; Puntero de impresión.
  52+ 893D 00           	db 0											; Control.
  53+ 893E
  54+ 893E 00 00        Disparo_2 defw 0									; Puntero objeto.
  55+ 8940 00 00        	defw 0											; Puntero de impresión.
  56+ 8942 00           	db 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_3 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00           	db 0											; Control.
  61+ 8948
  62+ 8948 00 00        Disparo_4 defw 0									; Puntero objeto.
  63+ 894A 00 00        	defw 0											; Puntero de impresión.
  64+ 894C 00           	db 0											; Control.
  65+ 894D
  66+ 894D 00 00        Disparo_5 defw 0									; Puntero objeto.
  67+ 894F 00 00        	defw 0											; Puntero de impresión.
  68+ 8951 00           	db 0											; Control.
  69+ 8952
  70+ 8952 00 00        Disparo_6 defw 0									; Puntero objeto.
  71+ 8954 00 00        	defw 0											; Puntero de impresión.
  72+ 8956 00           	db 0											; Control.
  73+ 8957
  74+ 8957 00 00        Disparo_7 defw 0									; Puntero objeto.
  75+ 8959 00 00        	defw 0											; Puntero de impresión.
  76+ 895B 00           	db 0											; Control.
  77+ 895C
  78+ 895C              ; -------------------------------------------------------------------------------------
  79+ 895C              ;
  80+ 895C              ;	Índice de cajas de entidades.
  81+ 895C              ;
  82+ 895C              ;	18/1/24
  83+ 895C              ;
  84+ 895C
  85+ 895C              Indice_de_cajas_de_entidades
  86+ 895C
  87+ 895C 7A 89        	defw Caja_1
  88+ 895E 86 89        	defw Caja_2
  89+ 8960 92 89        	defw Caja_3
  90+ 8962 9E 89        	defw Caja_4
  91+ 8964 AA 89        	defw Caja_5
  92+ 8966 B6 89        	defw Caja_6
  93+ 8968 C2 89        	defw Caja_7
  94+ 896A
  95+ 896A 00 00        	defw 0
  96+ 896C 00 00        	defw 0
  97+ 896E
  98+ 896E              ; -------------------------
  99+ 896E
 100+ 896E              ; Relleno para que no se corrompa el movimiento. ?????
 101+ 896E
 102+ 896E              ;	db 0
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E              ;
 106+ 896E              ;	28/05/24
 107+ 896E              ;
 108+ 896E              ; 	Cada caja tiene 14 bytes !!!
 109+ 896E              ;
 110+ 896E              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 111+ 896E
 112+ 896E 00           Amadeus_BOX db 0										; (Tipo).
 113+ 896F 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 114+ 8971 00           	db 0												; (Contador_de_vueltas).
 115+ 8972 00           Impacto_Amadeus	db 0									; (Impacto).
 116+ 8973 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 117+ 8975 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 118+ 8977 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 119+ 8979 00           	db 0												; (Velocidad).
 120+ 897A
 121+ 897A              ; ---------- ---------- ---------- ---------- ----------
 122+ 897A              ;
 123+ 897A              ;	22/01/24
 124+ 897A              ;
 125+ 897A              ; 	Cada caja tiene 12 bytes !!!
 126+ 897A
 127+ 897A 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 128+ 897D 00           	db 0												; (Contador_de_vueltas).
 129+ 897E 00           	db 0												; (Impacto).
 130+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 131+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 132+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 133+ 8985 00           	db 0												; (Velocidad).
 134+ 8986
 135+ 8986              ; ---------- ---------- ---------- ---------- ----------
 136+ 8986
 137+ 8986 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 138+ 8989 00           	db 0 												; (Contador_de_vueltas).
 139+ 898A 00           	db 0												; (Impacto).
 140+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 141+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 142+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 143+ 8991 00           	db 0												; (Velocidad).
 144+ 8992
 145+ 8992              ; ---------- ---------- ---------- ---------- ----------
 146+ 8992
 147+ 8992 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 148+ 8995 00           	db 0 												; (Contador_de_vueltas).
 149+ 8996 00           	db 0												; (Impacto).
 150+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 151+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 152+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 153+ 899D 00           	db 0												; (Velocidad).
 154+ 899E
 155+ 899E              ; ---------- ---------- ---------- ---------- ----------
 156+ 899E
 157+ 899E 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 158+ 89A1 00           	db 0 												; (Contador_de_vueltas).
 159+ 89A2 00           	db 0												; (Impacto).
 160+ 89A3 00 00        	defw 0												; (Puntero_de_impresion).
 161+ 89A5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 162+ 89A7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 163+ 89A9 00           	db 0												; (Velocidad).
 164+ 89AA
 165+ 89AA              ; ---------- ---------- ---------- ---------- ----------
 166+ 89AA
 167+ 89AA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 168+ 89AD 00           	db 0 												; (Contador_de_vueltas).
 169+ 89AE 00           	db 0												; (Impacto).
 170+ 89AF 00 00        	defw 0												; (Puntero_de_impresion).
 171+ 89B1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 172+ 89B3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 173+ 89B5 00           	db 0												; (Velocidad).
 174+ 89B6
 175+ 89B6              ; ---------- ---------- ---------- ---------- ----------
 176+ 89B6
 177+ 89B6 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 178+ 89B9 00           	db 0 												; (Contador_de_vueltas).
 179+ 89BA 00           	db 0												; (Impacto).
 180+ 89BB 00 00        	defw 0												; (Puntero_de_impresion).
 181+ 89BD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 182+ 89BF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 183+ 89C1 00           	db 0												; (Velocidad).
 184+ 89C2
 185+ 89C2              ; ---------- ---------- ---------- ---------- ----------
 186+ 89C2
 187+ 89C2 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 188+ 89C5 00           	db 0 												; (Contador_de_vueltas).
 189+ 89C6 00           	db 0												; (Impacto).
 190+ 89C7 00 00        	defw 0												; (Puntero_de_impresion).
 191+ 89C9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 192+ 89CB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 193+ 89CD 00           	db 0												; (Velocidad).
 194+ 89CE
 195+ 89CE              ; -------------------------------------------------------------------------------------
 196+ 89CE              ;
 197+ 89CE              ;	11/1/24
 198+ 89CE              ;
 199+ 89CE              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 200+ 89CE              ;
 201+ 89CE              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 202+ 89CE              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 203+ 89CE              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 204+ 89CE              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 205+ 89CE
 206+ 89CE              Indice_de_definiciones_de_entidades
 207+ 89CE
 208+ 89CE D2 89        	defw Entidad_1
 209+ 89D0 DF 89        	defw Entidad_2
 210+ 89D2
 211+ 89D2              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 212+ 89D2
 213+ 89D2              ;	BADSAT, (Satélite malvado).
 214+ 89D2
 215+ 89D2 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 216+ 89D5 01           	db 1												; (Contador_de_vueltas).
 217+ 89D6 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 218+ 89D8 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 219+ 89DA 03 40        	defw $4003	                                     	; (Posicion_inicio).
 220+ 89DC 01           	db 1												; (Cuad_objeto).
 221+ 89DD 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 222+ 89DF
 223+ 89DF 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 224+ 89E2 01           	db 1												; (Contador_de_vueltas).
 225+ 89E3 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 226+ 89E5 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 227+ 89E7 40 50        	defw $5040                                      	; (Posicion_inicio).
 228+ 89E9 01           	db 1												; (Cuad_objeto).
 229+ 89EA 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 230+ 89EC
 231+ 89EC              ; -------------------------------------------------------------------------------------
 232+ 89EC              ;
 233+ 89EC              ;	28/05/24
 234+ 89EC              ;
 235+ 89EC              ;	Definición de Amadeus.
 236+ 89EC              ;
 237+ 89EC              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 238+ 89EC              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 239+ 89EC
 240+ 89EC 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 241+ 89EF 00           	db 0												; (Contador_de_vueltas).
 242+ 89F0 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 243+ 89F2 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 244+ 89F4 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 245+ 89F6 03           	db 3												; (Cuad_objeto).
 246+ 89F7 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F9              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F9
   2+ 89F9
   3+ 89F9              ;   07/07/23
   4+ 89F9              ;
   5+ 89F9              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F9              ;
   7+ 89F9              ;   Codificación:
   8+ 89F9              ;
   9+ 89F9              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F9              ;
  11+ 89F9              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F9              ;
  13+ 89F9              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F9              ;
  15+ 89F9              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F9              ;
  17+ 89F9              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F9              ;                               ..... %01000010 Vel_up 4
  19+ 89F9              ;                                               Vel_down 2
  20+ 89F9              ;                               ..... $42
  21+ 89F9              ;
  22+ 89F9              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F9              ;
  24+ 89F9              ;                               ..... %01000010 Vel_left 4
  25+ 89F9              ;                                               Vel_right 2
  26+ 89F9              ;                               ..... $42
  27+ 89F9              ;
  28+ 89F9              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F9              ;
  30+ 89F9              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F9              ;
  32+ 89F9              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F9              ;
  34+ 89F9              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F9              ;                                     $53
  36+ 89F9              ;
  37+ 89F9              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F9              ;
  39+ 89F9              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F9              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F9              ;
  42+ 89F9              ;                       Arriba ..... $81
  43+ 89F9              ;                       Arriba - izquierda ..... $a1
  44+ 89F9              ;                       Arriba - derecha ..... $91
  45+ 89F9              ;
  46+ 89F9              ;                       Abajo ..... $41
  47+ 89F9              ;                       Abajo - izquierda ..... $61
  48+ 89F9              ;                       Abajo - derecha ..... $51
  49+ 89F9              ;
  50+ 89F9              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F9              ;
  52+ 89F9              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F9              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F9              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F9              ;
  56+ 89F9              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F9              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F9              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F9              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F9              ;
  61+ 89F9              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F9              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F9              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F9              ;
  65+ 89F9              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F9              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F9              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F9              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F9
  70+ 89F9              ; ----- ----- ----- ----- -----
  71+ 89F9
  72+ 89F9 25 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FB 2D 8A            defw F_1
  74+ 89FD 37 8A            defw F_2
  75+ 89FF 41 8A            defw Codo_abajo_derecha
  76+ 8A01 75 8A            defw Derecha_y_subiendo
  77+ 8A03 7F 8A            defw Derecha_y_subiendo_1
  78+ 8A05 89 8A            defw F_3
  79+ 8A07 93 8A            defw F_4
  80+ 8A09 9D 8A            defw Derecha_y_bajando
  81+ 8A0B A7 8A            defw Derecha_y_bajando_1
  82+ 8A0D B1 8A            defw Derecha_y_bajando_2
  83+ 8A0F BB 8A            defw Codo_derecha_abajo
  84+ 8A11 EB 8A            defw Codo_abajo_izq.
  85+ 8A13 1F 8B            defw Izquierda_y_subiendo
  86+ 8A15 29 8B            defw Izquierda_y_subiendo_1
  87+ 8A17 33 8B            defw F_5
  88+ 8A19 3D 8B            defw F_6
  89+ 8A1B 47 8B            defw Izquierda_y_bajando
  90+ 8A1D 51 8B            defw Izquierda_y_bajando_1
  91+ 8A1F 5B 8B            defw Izquierda_y_bajando_2
  92+ 8A21 65 8B            defw Codo_izquierda_abajo
  93+ 8A23 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A25
  95+ 8A25 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A29 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2D
  98+ 8A2D 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A31 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A35 08 00
 100+ 8A37
 101+ 8A37 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3B 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3F 0F FE
 103+ 8A41
 104+ 8A41 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A45 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A49 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A51 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A55 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A59 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A61 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A65 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A69 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A71 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A75
 118+ 8A75 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A79 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7D 06 00
 120+ 8A7F
 121+ 8A7F 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A83 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A87 02 00
 123+ 8A89
 124+ 8A89 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8D 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A91 04 00
 126+ 8A93
 127+ 8A93 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A97 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9B 08 00
 129+ 8A9D
 130+ 8A9D 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA1 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA5 02 00
 132+ 8AA7
 133+ 8AA7 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAB 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAF 06 00
 135+ 8AB1
 136+ 8AB1 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB5 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB9 06 00
 138+ 8ABB
 139+ 8ABB              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABB
 141+ 8ABB 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACF 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE7 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEB
 154+ 8AEB 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFF 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B03 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B07 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0B 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B13 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B17 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1B 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1F
 168+ 8B1F 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B23 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B27 06 00
 170+ 8B29
 171+ 8B29 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2D 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B31 02 00
 173+ 8B33
 174+ 8B33 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B37 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3B 04 00
 176+ 8B3D
 177+ 8B3D 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B41 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B45 08 00
 179+ 8B47
 180+ 8B47 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4B 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4F 02 00
 182+ 8B51
 183+ 8B51 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B55 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B59 06 00
 185+ 8B5B
 186+ 8B5B 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5F 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B63 06 00
 188+ 8B65
 189+ 8B65 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B69 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B71 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B75 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B79 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B81 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B85 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B89 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B91 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B95
 202+ 8B95
 203+ 8B95
 204+ 8B95
 205+ 8B95
 206+ 8B95
 207+ 8B95
 208+ 8B95
 209+ 8B95
 210+ 8B95
# file closed: Patrones_de_mov.asm
 143  8B95              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B95              ; 19/1/24
   2+ 8B95
   3+ 8B95              Indice_de_niveles
   4+ 8B95
   5+ 8B95 9D 8B        	defw Nivel_1
   6+ 8B97 A8 8B        	defw Nivel_2
   7+ 8B99
   8+ 8B99              ;	...
   9+ 8B99              ;	...
  10+ 8B99              ;	+ Niveles ...
  11+ 8B99
  12+ 8B99 00 00        	defw 0
  13+ 8B9B 00 00        	defw 0
  14+ 8B9D
  15+ 8B9D 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8B9E 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA2 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA6 01 01
  18+ 8BA8
  19+ 8BA8 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA9 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB1 01 02
  22+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB7 01 02
  23+ 8BB9
# file closed: Niveles.asm
 144  8BB9
 145  8BB9              ; --------------------------------------------------------------------------------
 146  8BB9              ;
 147  8BB9              ; 12/05/24
 148  8BB9              ;
 149  8BB9              ; Parámetros DRAW.
 150  8BB9              ;
 151  8BB9
 152  8BB9              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BB9
 154  8BB9 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBA              ;															- Patrón de movimiento.
 156  8BBA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBC
 159  8BBC 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBD              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBD
 162  8BBD              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBD              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBD              ; Ejemplos.
 165  8BBD
 166  8BBD              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBD              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBD              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBD              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBD              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBD
 172  8BBD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BBE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BBE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BBE
 176  8BBE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC0              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC0
 179  8BC0 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC2
 181  8BC2              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC2
 183  8BC2 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BC4              ;														; _palabras que componen el "movimiento_masticado".
 185  8BC4
 186  8BC4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BC4
 188  8BC4 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BC5              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BC5              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BC5              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BC5              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BC5
 194  8BC5 00           Ctrl_2 db 0
 195  8BC6              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC6              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC6              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC6              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC6              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC6              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC6              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC6              ;
 203  8BC6              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC6              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC6              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC6              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC6              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC6              ;														BIT 4, ???
 209  8BC6              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC6
 211  8BC6 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC7              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC7              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC7              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC7              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC7              ;
 217  8BC7              ; 														DESCRIPCIÖN:
 218  8BC7              ;
 219  8BC7              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC7              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC7              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC7              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC7              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC7              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC7              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC7              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC7              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC7              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC7              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC7              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC7              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC7              ;
 233  8BC7              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC7              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC7              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC7
 237  8BC7              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC7
 239  8BC7 00           Filas db 0												; Filas. [DRAW]
 240  8BC8 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BC9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BCB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BCD
 244  8BCD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BCD
 246  8BCD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BCE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BCE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BCE
 250  8BCE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BCE
 252  8BCE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BCE              ;
 254  8BCE              ;	COLORES: 0 ..... NEGRO
 255  8BCE              ;    		 1 ..... AZUL
 256  8BCE              ; 			 2 ..... ROJO
 257  8BCE              ;			 3 ..... MAGENTA
 258  8BCE              ; 			 4 ..... VERDE
 259  8BCE              ; 			 5 ..... CIAN
 260  8BCE              ;			 6 ..... AMARILLO
 261  8BCE              ; 			 7 ..... BLANCO
 262  8BCE
 263  8BCE 00 00        Indice_Sprite_der defw 0
 264  8BD0 00 00        Indice_Sprite_izq defw 0
 265  8BD2 00 00        Puntero_DESPLZ_der defw 0
 266  8BD4 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD6
 268  8BD6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BD9 00           Columnas db 0
 271  8BDA 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BDC              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BDC 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDD
 275  8BDD              ; variables de control general.
 276  8BDD
 277  8BDD 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BDE
 279  8BDE              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BDE
 281  8BDE              Perfiles_de_velocidad
 282  8BDE
 283  8BDE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BDF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BE0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BE1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BE2
 288  8BE2              ; Contadores de 16 bits.
 289  8BE2
 290  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BEA
 295  8BEA              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BEA
 297  8BEA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BEC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BEE 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BF0              ;
 301  8BF0              ;
 302  8BF0 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BF1              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BF1              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BF1 00           Incrementa_puntero_backup db 0
 306  8BF2 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BF3              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BF3 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BF4 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BF5 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF6              ;
 312  8BF6              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF6              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF6              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF6              ;
 316  8BF6              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF6              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF6              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF6              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF6              ;
 321  8BF6              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF6              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF6              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF6
 325  8BF6 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF7
 327  8BF7              ;														DESCRIPCIÓN:
 328  8BF7              ;
 329  8BF7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF7              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF7              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF7
 336  8BF7              ;														BIT 3, Recarga de nueva oleada.
 337  8BF7              ;														BIT 4, Recarga de nueva oleada.
 338  8BF7              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF7              ;														BIT 6, **** Frame completo.
 340  8BF7              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF7
 342  8BF7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BF9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BF9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BF9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BF9
 347  8BF9              ; Gestión de ENTIDADES y CAJAS.
 348  8BF9
 349  8BF9 00 00        Puntero_store_caja defw 0
 350  8BFB 00 00        Puntero_restore_caja defw 0
 351  8BFD 00 00        Indice_restore_caja defw 0
 352  8BFF 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8C00 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8C01 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8C02
 356  8C02 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8C04 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C06              ;														; _ puntero (Indice_entidades).
 359  8C06
 360  8C06              ;---------------------------------------------------------------------------------------------------------------
 361  8C06              ;
 362  8C06              ;	11/09/24
 363  8C06              ;
 364  8C06              ;	Álbumes.
 365  8C06
 366  8C06 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C08              ;														; _variable para almacenar lo posición del puntero_
 368  8C08              ; 														; _de pila, SP.
 369  8C08 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C0A              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C0A
 372  8C0A              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C0A
 374  8C0A 00 00        Album_de_pintado defw 0
 375  8C0C 00 00        Album_de_borrado defw 0
 376  8C0E 00 00        Album_de_pintado_Amadeus defw 0
 377  8C10 00 00        Album_de_borrado_Amadeus defw 0
 378  8C12 00 00        Album_de_pintado_disparos defw 0
 379  8C14 00 00        Album_de_borrado_disparos defw 0
 380  8C16
 381  8C16 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C18 00           Num_de_bytes_album_de_disparos db 0
 383  8C19 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C1A
 385  8C1A 02           Numero_de_disparos_de_Amadeus db 2						; Inicialmente disponemos de 2 disparos.
 386  8C1B 00           Numero_de_disparos_de_entidades db 0
 387  8C1C
 388  8C1C 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 389  8C1D              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 390  8C1D
 391  8C1D 00 00        Puntero_rancio_disparos_album defw 0
 392  8C1F
 393  8C1F 00 00        Techo_Scanlines_album defw 0
 394  8C21 00 00        Techo_Scanlines_album_2 defw 0
 395  8C23 00           Switch db 0
 396  8C24 00 00        Techo defw 0
 397  8C26 00 00        Scanlines_album_SP defw 0
 398  8C28 00 89        India_SP defw Tabla_de_pintado
 399  8C2A 03 89        India_2_SP defw Tabla_de_pintado+3
 400  8C2C
 401  8C2C 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 402  8C2D              ;
 403  8C2D              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 404  8C2D              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 405  8C2D              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 406  8C2D              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 407  8C2D              ;																Habilita el borrado/pintado de sprites.
 408  8C2D              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 409  8C2D              ;																_ a la baja.
 410  8C2D              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 411  8C2D              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 412  8C2D              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 413  8C2D              ; 																_ el último frame de la explosión de nuestra nave.
 414  8C2D              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 415  8C2D              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 416  8C2D
 417  8C2D 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 418  8C2E              ;
 419  8C2E              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 420  8C2E              ;
 421  8C2E              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 422  8C2E              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 423  8C2E              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 424  8C2E              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 425  8C2E              ;
 426  8C2E              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 427  8C2E              ;															_ masticados ya generados.
 428  8C2E              ;
 429  8C2E              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 430  8C2E              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 431  8C2E              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 432  8C2E              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 433  8C2E
 434  8C2E 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 435  8C2F              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 436  8C2F              ; Gestión de Disparos.
 437  8C2F
 438  8C2F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C31 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 440  8C33
 441  8C33 00           Impacto2 db 0											; Byte de control de impactos.
 442  8C34
 443  8C34              ;
 444  8C34              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 445  8C34              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 446  8C34              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 447  8C34              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 448  8C34
 449  8C34
 450  8C34
 451  8C34
 452  8C34
 453  8C34
 454  8C34
 455  8C34 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 456  8C36              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 457  8C36              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 458  8C36
 459  8C36 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 460  8C38              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 461  8C38 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 462  8C3B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 463  8C3B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C3E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 465  8C3E
 466  8C3E              ;---------------------------------------------------------------------------------------------------------------
 467  8C3E
 468  8C3E              ; Relojes y temporizaciones.
 469  8C3E
 470  8C3E 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 471  8C3F 05           Clock_explosion_Amadeus db 5
 472  8C40 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 473  8C41
 474  8C41 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 475  8C43
 476  8C43 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 477  8C45 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 478  8C46              ;														; Repite la oleada de entidades.
 479  8C46
 480  8C46              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 481  8C46 12           CLOCK_repone_disparo_Amadeus db 18	 					; Reloj, decreciente. Nº de frames mínimo que hay entre disparo y disparo de Amadeus.
 482  8C47              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 483  8C47              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 484  8C47
 485  8C47              ;---------------------------------------------------------------------------------------------------------------
 486  8C47
 487  8C47              ; Gestión de NIVELES.
 488  8C47
 489  8C47 00           Nivel db 0												; Nivel actual del juego.
 490  8C48 00 00        Puntero_indice_NIVELES defw 0
 491  8C4A 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 492  8C4C              ; 														; _ que definen el NIVEL.
 493  8C4C
 494  8C4C              ; ---------------------------------------------------------------------------------------------------------------
 495  8C4C
 496  8C4C              ; Temporizaciones Shield.
 497  8C4C
 498  8C4C 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 499  8C50 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 500  8C52 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 501  8C53 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 502  8C54 00           Shield_3 db 0
 503  8C55
 504  8C55 06           Lives db 6
 505  8C56
 506  8C56              ; 	INICIO  *************************************************************************************************************************************************************************
 507  8C56              ;
 508  8C56              ;	5/1/24
 509  8C56
 510  8C56              START
 511  8C56
 512  8C56 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 513  8C59 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 514  8C5B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 515  8C5D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 516  8C5F F3           	DI
 517  8C60
 518  8C60              ; Limpiamos pantalla.
 519  8C60
 520  8C60 3E 07        	ld a,%00000111
 521  8C62 CD 7E 94     	call Cls
 522  8C65 CD D6 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 523  8C68
 524  8C68              ; INICIALIZACIÓN.
 525  8C68
 526  8C68 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 527  8C6A CD 23 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 528  8C6D CD 66 8E     	call Extrae_numero_aleatorio_y_avanza
 529  8C70
 530  8C70 6F           	ld l,a
 531  8C71 26 00        	ld h,0
 532  8C73 22 43 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 533  8C76
 534  8C76              ;	Inicializa 1er Nivel.
 535  8C76
 536  8C76 21 95 8B     	ld hl,Indice_de_niveles
 537  8C79 22 48 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 538  8C7C CD 53 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 539  8C7F              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 540  8C7F              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 541  8C7F              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 542  8C7F
 543  8C7F              ;	Inicia los álbumes de líneas.
 544  8C7F
 545  8C7F CD 1F 90     	call Inicia_albumes_de_lineas
 546  8C82              ;
 547  8C82 CD 2F 90     	call Inicia_albumes_de_lineas_Amadeus
 548  8C85 CD 3C 90     	call Inicia_albumes_de_disparos
 549  8C88
 550  8C88
 551  8C88 CD 98 92     4 call Inicia_Entidades
 552  8C8B CD FB 92     	call Inicia_Amadeus
 553  8C8E
 554  8C8E              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 555  8C8E              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 556  8C8E              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 557  8C8E
 558  8C8E 11 6E 89     	ld de,Amadeus_BOX
 559  8C91 CD 4E 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 560  8C94 CD 3E 93     	call Limpiamos_bandeja_DRAW
 561  8C97
 562  8C97              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 563  8C97
 564  8C97 06 3C        	ld b,60
 565  8C99 CD 20 9D     2 call Amadeus_a_izquierda
 566  8C9C 10 FB        	djnz 2B
 567  8C9E
 568  8C9E CD FD 8F     	call Genera_datos_de_impresion_Amadeus
 569  8CA1
 570  8CA1              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 571  8CA1
 572  8CA1 CD 4F 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 573  8CA4              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 574  8CA4
 575  8CA4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 576  8CA4              ; (Esto se dá cuando se inicia una nueva oleada).
 577  8CA4
 578  8CA4              ;	ld a,(Ctrl_1)
 579  8CA4              ;	bit 3,a
 580  8CA4              ;	jr nz,5F											 ; Loop
 581  8CA4
 582  8CA4              ;	ld de,Amadeus_db
 583  8CA4              ;	call Store_Amadeus
 584  8CA4
 585  8CA4              ; 	INICIA DISPAROS !!!!!
 586  8CA4
 587  8CA4 CD 65 90     	call Inicia_Puntero_Disparo_Entidades
 588  8CA7 CD 6C 90     	call Inicia_Puntero_Disparo_Amadeus
 589  8CAA
 590  8CAA              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CAA
 592  8CAA              ;5 call Inicia_punteros_de_cajas
 593  8CAA              ;	call Restore_entidad
 594  8CAA
 595  8CAA              ;	ld a,(Ctrl_1)
 596  8CAA              ;	bit 3,a
 597  8CAA              ;	jr z,6F
 598  8CAA
 599  8CAA              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CAA
 601  8CAA              ;	ld hl,Ctrl_1
 602  8CAA              ;	res 3,(hl)
 603  8CAA              ;	jr Main
 604  8CAA
 605  8CAA              ; Damos por concluida la construcción del FRAME.
 606  8CAA              ;
 607  8CAA
 608  8CAA CD E1 90     	call Inicia_Shield
 609  8CAD
 610  8CAD
 611  8CAD 2A 26 8C     6 ld hl,(Scanlines_album_SP)
 612  8CB0 22 1F 8C     	ld (Techo_Scanlines_album),hl
 613  8CB3
 614  8CB3 2A 0C 8C     	ld hl,(Album_de_borrado)
 615  8CB6 22 26 8C     	ld (Scanlines_album_SP),hl
 616  8CB9
 617  8CB9 21 00 89     	ld hl,Tabla_de_pintado
 618  8CBC 22 28 8C     	ld (India_SP),hl
 619  8CBF
 620  8CBF 21 2C 8C     	ld hl,Ctrl_3
 621  8CC2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CC4 CB D6        	set 2,(hl)
 623  8CC6 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CC8
 625  8CC8 FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CC9
 627  8CC9 76           	halt
 628  8CCA
 629  8CCA              ; ------------------------------------
 630  8CCA
 631  8CCA              Main
 632  8CCA              ;
 633  8CCA              ; 22/08/24
 634  8CCA
 635  8CCA              ; Gestión de disparos.
 636  8CCA
 637  8CCA CD 07 9F     	call Limpia_album_de_borrado_disparos
 638  8CCD CD 47 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 639  8CD0 CD 43 9F     	call Motor_Disparos
 640  8CD3
 641  8CD3              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 642  8CD3              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 643  8CD3              ; Este hecho lo indica el bit2 de (Impacto2).
 644  8CD3
 645  8CD3 CD 4A A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 646  8CD6
 647  8CD6              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 648  8CD6
 649  8CD6 2A 43 8C     	ld hl,(Clock_next_entity)
 650  8CD9 ED 4B 78 5C  	ld bc,(FRAMES)
 651  8CDD A7           	and a
 652  8CDE ED 42        	sbc hl,bc
 653  8CE0 20 16        	jr nz,1F
 654  8CE2
 655  8CE2              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 656  8CE2              ; _ (Clock_next_entity) para la siguiente entidad.
 657  8CE2
 658  8CE2 3A 00 8C     	ld a,(Numero_parcial_de_entidades)
 659  8CE5 47           	ld b,a
 660  8CE6 3A 01 8C     	ld a,(Entidades_en_curso)
 661  8CE9 B8           	cp b
 662  8CEA 28 0C        	jr z,1F
 663  8CEC 30 0A        	jr nc,1F
 664  8CEE
 665  8CEE 3C           	inc a
 666  8CEF 32 01 8C     	ld (Entidades_en_curso),a
 667  8CF2
 668  8CF2              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 669  8CF2
 670  8CF2 CD 66 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 671  8CF5 CD 82 8E     	call Define_Clock_next_entity
 672  8CF8
 673  8CF8 3A 01 8C     1 ld a,(Entidades_en_curso)
 674  8CFB A7           	and a
 675  8CFC CA 6F 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 676  8CFF 47           	ld b,a												; No hay entidades que gestionar.
 677  8D00
 678  8D00              ; ( Código que ejecutamos con cada entidad: ).
 679  8D00
 680  8D00              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 681  8D00              ;
 682  8D00              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 683  8D00
 684  8D00 21 00 89     	ld hl,Tabla_de_pintado
 685  8D03 22 28 8C     	ld (India_SP),hl
 686  8D06
 687  8D06 21 2C 8C     	ld hl,Ctrl_3
 688  8D09 CB D6        	set 2,(hl)
 689  8D0B CD 1C 8E     	call Change
 690  8D0E
 691  8D0E C5           2 push bc 												; Nº de entidades en curso.
 692  8D0F
 693  8D0F CD AE 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 694  8D12 ED 5B 26 8C  	ld de,(Scanlines_album_SP)
 695  8D16
 696  8D16              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 697  8D16
 698  8D16              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 699  8D16              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 700  8D16
 701  8D16 3A 33 8C     	ld a,(Impacto2)
 702  8D19 CB 5F        	bit 3,a
 703  8D1B C4 CD 9E     	call nz,Compara_con_coordenadas_de_disparo
 704  8D1E
 705  8D1E 3A BD 8B     	ld a,(Impacto)
 706  8D21 CB 4F        	bit 1,a
 707  8D23 C4 BE 91     	call nz,Genera_explosion
 708  8D26 20 2A        	jr nz,Gestiona_siguiente_entidad
 709  8D28
 710  8D28 3A BD 8B     	ld a,(Impacto)
 711  8D2B A7           	and a
 712  8D2C 28 0C        	jr z,3F
 713  8D2E
 714  8D2E              ; IMPACTO en entidad por colisión con Amadeus.
 715  8D2E
 716  8D2E              ; 5/7/24
 717  8D2E              ; Nota importante:
 718  8D2E              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 719  8D2E              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 720  8D2E              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 721  8D2E
 722  8D2E 3A 72 89     	ld a,(Impacto_Amadeus)
 723  8D31 A7           	and a
 724  8D32 C4 BE 91     	call nz,Genera_explosion
 725  8D35 20 1B        	jr nz,Gestiona_siguiente_entidad
 726  8D37
 727  8D37              ; Falsa colisión !!!
 728  8D37
 729  8D37 32 BD 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 730  8D3A
 731  8D3A              ; -------------------------------------------
 732  8D3A
 733  8D3A CD C6 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 734  8D3D CD FC 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 735  8D40 CD B6 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 736  8D43 CD BE 94     	call Genera_datos_de_impresion
 737  8D46 CD 61 93     	call Decrementa_Contador_de_mov_masticados
 738  8D49
 739  8D49              ; -------------------------------------------
 740  8D49
 741  8D49              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 742  8D49
 743  8D49 2A BE 8B     	ld hl,(Puntero_de_impresion)
 744  8D4C CD 92 94     	call Genera_coordenadas
 745  8D4F
 746  8D4F CD C8 A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 747  8D52
 748  8D52              Gestiona_siguiente_entidad
 749  8D52
 750  8D52 CD 33 93      	call Store_Restore_cajas
 751  8D55 C1           	pop bc
 752  8D56 10 B6        	djnz 2B
 753  8D58
 754  8D58              ; Hemos gestionado todas las entidades.
 755  8D58
 756  8D58              ; ----- ----- -----
 757  8D58
 758  8D58 CD DA 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 759  8D5B CD F1 8E     	call Ordena_tabla_de_impresion
 760  8D5E CD 4F 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 761  8D61
 762  8D61              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 763  8D61              ; Hemos gestionado todas las unidades.
 764  8D61              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 765  8D61
 766  8D61              ;	ld hl,Ctrl_1
 767  8D61              ;	res 2,(hl)
 768  8D61
 769  8D61 CD 97 8E     	call Borra_diferencia
 770  8D64
 771  8D64 3A 2C 8C     	ld a,(Ctrl_3)
 772  8D67 CB 5F        	bit 3,a
 773  8D69 20 04        	jr nz,Gestion_de_Amadeus
 774  8D6B
 775  8D6B EB           	ex de,hl
 776  8D6C 71           	ld (hl),c
 777  8D6D 2C           	inc l
 778  8D6E 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 779  8D6F
 780  8D6F
 781  8D6F              ;! GESTIONA AMADEUS !!!!!!!!!!
 782  8D6F
 783  8D6F              Gestion_de_Amadeus
 784  8D6F
 785  8D6F 21 2C 8C     	ld hl,Ctrl_3
 786  8D72 CB 76        	bit 6,(hl)
 787  8D74 28 13        	jr z,Amadeus_vivo
 788  8D76
 789  8D76              ; Amadeus ha sido destruido.
 790  8D76              ; Decrementa (Temp_new_live).
 791  8D76
 792  8D76 21 40 8C     	ld hl,Temp_new_live
 793  8D79 35           	dec (hl)
 794  8D7A 20 26        	jr nz,End_frame
 795  8D7C
 796  8D7C              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 797  8D7C
 798  8D7C 21 55 8C     	ld hl,Lives
 799  8D7F 35           	dec (hl)
 800  8D80
 801  8D80              ;! Fin del juego
 802  8D80
 803  8D80 F3           	di
 804  8D81 28 FE        	jr z,$
 805  8D83 FB           	ei
 806  8D84
 807  8D84              ; Nueva nave.
 808  8D84
 809  8D84 CD C2 8D     	call Reinicia_Amadeus
 810  8D87 18 19        	jr End_frame
 811  8D89
 812  8D89              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 813  8D89
 814  8D89              Amadeus_vivo
 815  8D89
 816  8D89 3A 72 89     	ld a,(Impacto_Amadeus)
 817  8D8C A7           	and a
 818  8D8D C4 EE 91     	call nz, Genera_explosion_Amadeus
 819  8D90 20 10        	jr nz, End_frame
 820  8D92
 821  8D92 CD 9B 91     	call Teclado
 822  8D95
 823  8D95 21 2C 8C     	ld hl,Ctrl_3
 824  8D98 CB 6E        	bit 5,(hl)
 825  8D9A 28 06        	jr z,End_frame
 826  8D9C
 827  8D9C              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 828  8D9C
 829  8D9C CD 37 8E     	call Change_Amadeus
 830  8D9F CD FD 8F     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 831  8DA2
 832  8DA2              End_frame
 833  8DA2
 834  8DA2              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 835  8DA2              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 836  8DA2
 837  8DA2 CD FE 9F     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 838  8DA5 CD 1D 9F     	call Calcula_bytes_pintado_disparos
 839  8DA8 CD 2A 9F     	call Limpia_album_de_pintado_disparos
 840  8DAB
 841  8DAB              ; ------------ ------------- --------------
 842  8DAB
 843  8DAB 2A 0C 8C     	ld hl,(Album_de_borrado)
 844  8DAE 22 26 8C     	ld (Scanlines_album_SP),hl
 845  8DB1
 846  8DB1 21 2C 8C     	ld hl,Ctrl_3
 847  8DB4 CB C6        	set 0,(hl) 											; Indica Frame completo.
 848  8DB6 CB 9E        	res 3,(hl)
 849  8DB8 CB A6        	res 4,(hl)
 850  8DBA
 851  8DBA AF           	xor a
 852  8DBB D3 FE        	out ($fe),a
 853  8DBD
 854  8DBD 76           	halt
 855  8DBE
 856  8DBE              ; ----------------------------------------
 857  8DBE
 858  8DBE              ;	ld a,(Ctrl_1) 										; Existe Loop?
 859  8DBE              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 860  8DBE CA CA 8C     	jp z,Main
 861  8DC1
 862  8DC1              ; ----------------------------------------
 863  8DC1
 864  8DC1              ; RECARGA DE NUEVA OLEADA.
 865  8DC1
 866  8DC1              ;	ld a,(Contador_de_frames)
 867  8DC1              ;	ld b,a
 868  8DC1              ;	ld a,(Activa_recarga_cajas)
 869  8DC1              ;	cp b
 870  8DC1              ;	jr z,20F
 871  8DC1
 872  8DC1              ;	ld hl,Ctrl_1
 873  8DC1              ;	set 4,(hl)
 874  8DC1              ;	jp Main
 875  8DC1
 876  8DC1              ;20 ld hl,Ctrl_1
 877  8DC1              ;	res 4,(hl)
 878  8DC1
 879  8DC1              ;	ld a,(Contador_de_frames)
 880  8DC1
 881  8DC1              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 882  8DC1              ;! _ IMPREDECIBLE !!!!
 883  8DC1
 884  8DC1              ;	add 10
 885  8DC1              ;	ld (Clock_next_entity),a
 886  8DC1
 887  8DC1              ;	jp 4B
 888  8DC1
 889  8DC1 C9           	ret
 890  8DC2
 891  8DC2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 892  8DC2              ;
 893  8DC2              ;	16/11/23
 894  8DC2
 895  8DC2              ;;Gestiona_Amadeus
 896  8DC2
 897  8DC2              ;! Activa/desactiva impacto con Amadeus.
 898  8DC2
 899  8DC2              ;	ld a,(Impacto)
 900  8DC2              ;	and a
 901  8DC2              ;	jr nz,2F
 902  8DC2
 903  8DC2              ;;	call Mov_Amadeus
 904  8DC2
 905  8DC2              ;;2 ld a,(Ctrl_0)
 906  8DC2              ;;	bit 4,a
 907  8DC2              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 908  8DC2
 909  8DC2              ;;	call Guarda_foto_entidad_a_pintar
 910  8DC2              ;;	call Guarda_datos_de_borrado_Amadeus
 911  8DC2
 912  8DC2              ;;1 ld hl,Ctrl_0
 913  8DC2              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 914  8DC2
 915  8DC2              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 916  8DC2
 917  8DC2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 918  8DC2
 919  8DC2              ;	call Calcula_numero_de_disparotes
 920  8DC2
 921  8DC2              ;;	ret
 922  8DC2
 923  8DC2              ; -----------------------------
 924  8DC2              ;
 925  8DC2              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 926  8DC2              ;
 927  8DC2              ;	INPUTS: B a de estar a "0".
 928  8DC2
 929  8DC2              ;Prepara_Borra_sprites
 930  8DC2
 931  8DC2              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 932  8DC2              ;	ld a,l
 933  8DC2              ;	ret z
 934  8DC2
 935  8DC2              ;	srl a
 936  8DC2
 937  8DC2              ;2 sub 16
 938  8DC2              ;	jr z,1F
 939  8DC2              ;	inc b
 940  8DC2              ;	jr 2B
 941  8DC2
 942  8DC2              ;1 inc b
 943  8DC2
 944  8DC2              ;	exx
 945  8DC2              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 946  8DC2              ;	exx
 947  8DC2
 948  8DC2              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 949  8DC2              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 950  8DC2
 951  8DC2              ;	ret
 952  8DC2
 953  8DC2              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 954  8DC2              ;
 955  8DC2              ;	24/07/24
 956  8DC2
 957  8DC2              Reinicia_Amadeus
 958  8DC2
 959  8DC2              ;	Reinicia posición y estado.
 960  8DC2
 961  8DC2 21 CF 50     	ld hl,$50cf
 962  8DC5 22 73 89     	ld (p.imp.amadeus),hl
 963  8DC8 21 F0 E0     	ld hl,$e0f0
 964  8DCB 22 75 89     	ld (Pamm_Amadeus),hl
 965  8DCE 21 3D 00     	ld hl,$003d
 966  8DD1 22 77 89     	ld (Comm_Amadeus),hl
 967  8DD4
 968  8DD4              ;	limpiamos el álbum de borrado.
 969  8DD4
 970  8DD4 2A 10 8C     	ld hl,(Album_de_borrado_Amadeus)
 971  8DD7
 972  8DD7 AF           	xor a
 973  8DD8 77           	ld (hl),a
 974  8DD9
 975  8DD9 E5           	push hl
 976  8DDA D1           	pop de
 977  8DDB 13           	inc de
 978  8DDC
 979  8DDC 01 23 00     	ld bc,35
 980  8DDF ED B0        	ldir
 981  8DE1
 982  8DE1 CD FD 8F     	call Genera_datos_de_impresion_Amadeus
 983  8DE4
 984  8DE4              ;	Reinicia temporizaciones.
 985  8DE4
 986  8DE4 CD E1 90     	call Inicia_Shield
 987  8DE7
 988  8DE7 3E 5A        	ld a,90
 989  8DE9 32 52 8C     	ld (Shield),a
 990  8DEC
 991  8DEC 3E 64        	ld a,100
 992  8DEE 32 40 8C     	ld (Temp_new_live),a
 993  8DF1
 994  8DF1              ; 	Restauramos el FLAG: Amadeus vivo.
 995  8DF1
 996  8DF1 21 2C 8C     	ld hl,Ctrl_3
 997  8DF4 CB B6        	res 6,(hl)
 998  8DF6
 999  8DF6              ;	Fuerza la impresión de la nave en el siguiente frame.
1000  8DF6
1001  8DF6 21 2C 8C      	ld hl,Ctrl_3
1002  8DF9 CB EE        	set 5,(hl)
1003  8DFB
1004  8DFB C9           	ret
1005  8DFC
1006  8DFC              ; --------------------------------------------------------------------------------------------------------------
1007  8DFC              ;
1008  8DFC              ;	12/05/24
1009  8DFC
1010  8DFC 3A C4 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1011  8DFF CB 27        	sla a
1012  8E01 32 C4 8B     	ld (Velocidad),a
1013  8E04 E6 10        	and $10
1014  8E06 C8           	ret z
1015  8E07
1016  8E07              ; Restaura (Velocidad) a razón del nº de vueltas.
1017  8E07
1018  8E07 3A BC 8B     	ld a,(Contador_de_vueltas)
1019  8E0A CB 2F        	sra a
1020  8E0C CB 2F        	sra a
1021  8E0E 32 C4 8B     	ld (Velocidad),a
1022  8E11
1023  8E11 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1024  8E14 23           	inc hl
1025  8E15 23           	inc hl
1026  8E16 23           	inc hl
1027  8E17 23           	inc hl
1028  8E18 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1029  8E1B
1030  8E1B C9           	ret
1031  8E1C
1032  8E1C              ; --------------------------------------------------------------------------------------------------------------
1033  8E1C              ;
1034  8E1C              ;	25/08/24
1035  8E1C
1036  8E1C              Change
1037  8E1C
1038  8E1C 3A 23 8C     	ld a,(Switch)
1039  8E1F EE 01        	xor 1
1040  8E21 32 23 8C     	ld (Switch),a
1041  8E24 2A 0A 8C     	ld hl,(Album_de_pintado)
1042  8E27 ED 5B 0C 8C  	ld de,(Album_de_borrado)
1043  8E2B EB           	ex de,hl
1044  8E2C 22 0A 8C     	ld (Album_de_pintado),hl
1045  8E2F 22 26 8C     	ld (Scanlines_album_SP),hl
1046  8E32 ED 53 0C 8C  	ld (Album_de_borrado),de
1047  8E36 C9           	ret
1048  8E37
1049  8E37              Change_Amadeus
1050  8E37
1051  8E37 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1052  8E3A ED 5B 10 8C  	ld de,(Album_de_borrado_Amadeus)
1053  8E3E EB           	ex de,hl
1054  8E3F 22 0E 8C     	ld (Album_de_pintado_Amadeus),hl
1055  8E42 ED 53 10 8C  	ld (Album_de_borrado_Amadeus),de
1056  8E46 C9           	ret
1057  8E47
1058  8E47              Change_Disparos
1059  8E47
1060  8E47              ; Exclusiones:
1061  8E47
1062  8E47 3A 1A 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1063  8E4A FE 02        	cp 2
1064  8E4C C8           	ret z																;? Salimos de la rutina. No hay ningún disparo en pantalla.
1065  8E4D
1066  8E4D              ; -----
1067  8E4D
1068  8E4D 2A 12 8C     	ld hl,(Album_de_pintado_disparos)
1069  8E50 ED 5B 14 8C  	ld de,(Album_de_borrado_disparos)
1070  8E54 EB           	ex de,hl
1071  8E55 22 12 8C     	ld (Album_de_pintado_disparos),hl
1072  8E58 ED 53 14 8C  	ld (Album_de_borrado_disparos),de
1073  8E5C 22 16 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1074  8E5F
1075  8E5F 3A 18 8C     	ld a,(Num_de_bytes_album_de_disparos)
1076  8E62 32 19 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1077  8E65
1078  8E65 C9           	ret
1079  8E66
1080  8E66              ; ------------------------------------
1081  8E66              ;
1082  8E66              ; 1/05/24
1083  8E66
1084  8E66              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1085  8E66              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1086  8E66
1087  8E66              ;	DESTRUYE: HL,DE,A
1088  8E66              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1089  8E66
1090  8E66              ;	Variables implicadas: (RND_SP).
1091  8E66
1092  8E66              Extrae_numero_aleatorio_y_avanza
1093  8E66
1094  8E66 21 00 89     	ld hl,Tabla_de_pintado
1095  8E69 EB           	ex de,hl
1096  8E6A 2A 41 8C     	ld hl,(RND_SP)
1097  8E6D EB           	ex de,hl
1098  8E6E A7           	and a
1099  8E6F ED 52        	sbc hl,de
1100  8E71
1101  8E71 2A 41 8C     	ld hl,(RND_SP)
1102  8E74 20 06        	jr nz,1F
1103  8E76
1104  8E76              ; Sitúa HL al principio de la tabla de nº aleatorios.
1105  8E76
1106  8E76 21 F6 88     	ld hl,Numeros_aleatorios
1107  8E79 22 41 8C     	ld (RND_SP),HL
1108  8E7C
1109  8E7C              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1110  8E7C
1111  8E7C 7E           1 ld a,(hl)
1112  8E7D 23           	inc hl
1113  8E7E 22 41 8C     	ld (RND_SP),hl
1114  8E81 C9           	ret
1115  8E82
1116  8E82              ; ------------------------------------
1117  8E82              ;
1118  8E82              ; 1/05/24
1119  8E82
1120  8E82              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1121  8E82              ; (1 a 4 segundos).
1122  8E82              ; Actualizamos (Clock_next_entity) con A.
1123  8E82
1124  8E82              ;	DESTRUYE: A y B.
1125  8E82              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1126  8E82              ;			 Actualiza (Clock_next_entity) con A.
1127  8E82
1128  8E82              ;	Variables implicadas: (Clock_next_entity).
1129  8E82
1130  8E82              ; Notas:
1131  8E82
1132  8E82              ; 	$32 1 seg.
1133  8E82              ; 	$64 2 seg.
1134  8E82              ; 	$96 3 seg.
1135  8E82              ; 	$c8 4 seg.
1136  8E82              ; 	$fa 5 seg.
1137  8E82
1138  8E82              ; $ffff 1310,7 seg, 22 minutos.
1139  8E82
1140  8E82              ;	$0100  5 seg. aproximadamente.
1141  8E82              ;	$0200 10 seg. aproximadamente.
1142  8E82              ;	$0300 15 seg. aproximadamente.
1143  8E82              ;	$0400 20 seg. aproximadamente.
1144  8E82              ;	$0500 25 seg. aproximadamente.
1145  8E82              ;	$0600 30 seg. aproximadamente.
1146  8E82
1147  8E82              Define_Clock_next_entity
1148  8E82
1149  8E82 FE 34        	cp $34
1150  8E84 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1151  8E86
1152  8E86              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1153  8E86
1154  8E86 4F           3 ld c,a
1155  8E87 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1156  8E89 2A 78 5C     	ld hl,(FRAMES)
1157  8E8C A7           	and a
1158  8E8D ED 4A        	adc hl,bc
1159  8E8F 22 43 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1160  8E92 C9           	ret
1161  8E93
1162  8E93 3E 34        1 ld a,$34
1163  8E95 18 EF        	jr 3B
1164  8E97
1165  8E97              ; ------------------------------------
1166  8E97              ;
1167  8E97              ; 18/03/24
1168  8E97
1169  8E97              Borra_diferencia
1170  8E97
1171  8E97 ED 4B 26 8C  	ld bc,(Scanlines_album_SP)
1172  8E9B
1173  8E9B 3A 23 8C     	ld a,(Switch)
1174  8E9E A7           	and a
1175  8E9F 28 08        	jr z,2F
1176  8EA1
1177  8EA1 2A 21 8C     	ld hl,(Techo_Scanlines_album_2)
1178  8EA4 11 21 8C     	ld de,Techo_Scanlines_album_2
1179  8EA7 18 06        	jr 3F
1180  8EA9
1181  8EA9 2A 1F 8C     2 ld hl,(Techo_Scanlines_album)
1182  8EAC 11 1F 8C     	ld de,Techo_Scanlines_album
1183  8EAF
1184  8EAF              ; Diferencia.
1185  8EAF
1186  8EAF ED 42        3 sbc hl,bc
1187  8EB1
1188  8EB1 C8           	ret z
1189  8EB2 D8           	ret c
1190  8EB3
1191  8EB3              ; Nuevo techo, (más bajo que el anterior).
1192  8EB3              ; Fijamos nuevo techo y borramos bytes sobrantes.
1193  8EB3
1194  8EB3 EB           	ex de,hl
1195  8EB4
1196  8EB4 71           	ld (hl),c
1197  8EB5 2C           	inc l
1198  8EB6 70           	ld (hl),b
1199  8EB7
1200  8EB7 AF           	xor a
1201  8EB8 43           	ld b,e
1202  8EB9
1203  8EB9 2A 26 8C     	ld hl,(Scanlines_album_SP)
1204  8EBC
1205  8EBC 77           1 ld (hl),a
1206  8EBD 23           	inc hl
1207  8EBE 10 FC        	djnz 1B
1208  8EC0
1209  8EC0              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1210  8EC0
1211  8EC0 21 2C 8C     	ld hl,Ctrl_3
1212  8EC3 CB DE        	set 3,(hl)
1213  8EC5
1214  8EC5 C9           	ret
1215  8EC6
1216  8EC6              ; --------------------------------------------------------------------------------------------------------------
1217  8EC6              ;
1218  8EC6              ;	26/3/24
1219  8EC6
1220  8EC6              Recauda_informacion_de_entidad_en_curso
1221  8EC6
1222  8EC6              ; Almacena la Coordenada Y de la entidad en curso.
1223  8EC6
1224  8EC6              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1225  8EC6
1226  8EC6 3A BB 8B     	ld a,(Coordenada_y)
1227  8EC9 2A 28 8C     	ld hl,(India_SP)
1228  8ECC 77           	ld (hl),a
1229  8ECD 2C           	inc l
1230  8ECE
1231  8ECE              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1232  8ECE
1233  8ECE ED 5B 26 8C  	ld de,(Scanlines_album_SP)
1234  8ED2
1235  8ED2 73           	ld (hl),e
1236  8ED3 2C           	inc l
1237  8ED4 72           	ld (hl),d
1238  8ED5 2C           	inc l
1239  8ED6
1240  8ED6 22 28 8C     	ld (India_SP),hl
1241  8ED9
1242  8ED9 C9           	ret
1243  8EDA
1244  8EDA              ; --------------------------------------------------------------------------------------------------------------
1245  8EDA              ;
1246  8EDA              ;	27/03/24
1247  8EDA              ;
1248  8EDA
1249  8EDA              Inicializa_India_y_limpia_Tabla_de_impresion
1250  8EDA
1251  8EDA 2A 28 8C     	ld hl,(India_SP)
1252  8EDD 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1253  8EE0
1254  8EE0 79           	ld a,c
1255  8EE1 95           	sub l
1256  8EE2 28 06        	jr z,2F
1257  8EE4 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1258  8EE5              ;														; _ y pasamos a inicializar (India_SP).
1259  8EE5 AF           	xor a
1260  8EE6
1261  8EE6 77           1 ld (hl),a
1262  8EE7 2C           	inc l
1263  8EE8 10 FC        	djnz 1B												; Limpia Tabla.
1264  8EEA
1265  8EEA 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1266  8EED 22 28 8C     	ld (India_SP),hl
1267  8EF0
1268  8EF0 C9           	ret
1269  8EF1
1270  8EF1              ; --------------------------------------------------------------------------------------------------------------
1271  8EF1              ;
1272  8EF1              ;	31/3/24
1273  8EF1
1274  8EF1              Ordena_tabla_de_impresion
1275  8EF1
1276  8EF1              ; 5794 T/states.
1277  8EF1              ; 6278 T/states.
1278  8EF1              ; 5310 T/states.
1279  8EF1
1280  8EF1              ; Inicializamos punteros (India_SP) e (India_2_SP).
1281  8EF1              ; Inicializamos contador de comparaciones, [C].
1282  8EF1              ; Cargamos los registros A y B para efectuar comparación.
1283  8EF1
1284  8EF1 FD 2E 00     	ld iyl,0
1285  8EF4
1286  8EF4 3A 01 8C     	ld a,(Entidades_en_curso)
1287  8EF7 FE 04        	cp 4 	;	4
1288  8EF9 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1289  8EFA
1290  8EFA 3D           	dec a
1291  8EFB 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1292  8EFC 51           	ld d,c 										; Copia de respaldo.
1293  8EFD
1294  8EFD 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1295  8EFE
1296  8EFE 21 03 89     	ld hl,Tabla_de_pintado+3
1297  8F01 46           	ld b,(hl)
1298  8F02 22 2A 8C     	ld (India_2_SP),hl
1299  8F05
1300  8F05 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1301  8F06 DC 2E 8F     	call c, Avanza_India_2_SP
1302  8F09 CC 2E 8F     	call z, Avanza_India_2_SP
1303  8F0C
1304  8F0C FD 2D        	dec iyl
1305  8F0E 28 18        	jr z,2F
1306  8F10
1307  8F10
1308  8F10              ; --------------------------------------------------------------------------------------------------------------
1309  8F10              ;
1310  8F10              ;	7/4/24
1311  8F10
1312  8F10              Trueque
1313  8F10
1314  8F10              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1315  8F10              ;  			A contiene en nº de fila de (India_SP).
1316  8F10              ;			HL contiene (India_2_SP).
1317  8F10
1318  8F10 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1319  8F11 E5           	push hl										; Preservo (India_2_SP).
1320  8F12
1321  8F12 ED 5B 28 8C  	ld de,(India_SP)
1322  8F16 EB           	ex de,hl
1323  8F17 70           	ld (hl),b
1324  8F18 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1325  8F19
1326  8F19 CD 5A 8F     	call Intercambia_1_byte
1327  8F1C CD 5A 8F     	call Intercambia_1_byte
1328  8F1F
1329  8F1F
1330  8F1F              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1331  8F1F              ; Recuperamos (India_2_SP) en HL.
1332  8F1F
1333  8F1F 2A 28 8C     	ld hl,(India_SP)
1334  8F22 7E           	ld a,(hl)
1335  8F23
1336  8F23 E1           	pop hl
1337  8F24 D1           	pop de
1338  8F25
1339  8F25              ; --------------------------------------------------------------------------------------------------------------
1340  8F25
1341  8F25 CD 2E 8F     	call Avanza_India_2_SP
1342  8F28
1343  8F28 14           2 inc d
1344  8F29 15           	dec d
1345  8F2A C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1346  8F2B 18 D8        	jr 1B
1347  8F2D
1348  8F2D C9           	ret
1349  8F2E
1350  8F2E              ; ----- ----- ----- ----- -----
1351  8F2E
1352  8F2E              Avanza_India_2_SP
1353  8F2E
1354  8F2E 0D           	dec c
1355  8F2F 28 0A        	jr z,Avanza_punteros_indios
1356  8F31
1357  8F31 FD 2C        	inc iyl
1358  8F33
1359  8F33 2C           	inc l
1360  8F34 2C           	inc l
1361  8F35 2C           	inc l
1362  8F36
1363  8F36 46           	ld b,(hl)
1364  8F37 22 2A 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1365  8F3A
1366  8F3A C9           	ret
1367  8F3B
1368  8F3B              ; ----- ----- ----- ----- -----
1369  8F3B
1370  8F3B              Avanza_punteros_indios
1371  8F3B
1372  8F3B 15           	dec d
1373  8F3C 28 15        	jr z,Prepara_salida
1374  8F3E
1375  8F3E 4A           	ld c,d
1376  8F3F
1377  8F3F 2A 28 8C     	ld hl,(India_SP)
1378  8F42 2C           	inc l
1379  8F43 2C           	inc l
1380  8F44 2C           	inc l
1381  8F45 7E           	ld a,(hl)
1382  8F46 22 28 8C     	ld (India_SP),hl
1383  8F49
1384  8F49 2C           	inc l
1385  8F4A 2C           	inc l
1386  8F4B 2C           	inc l
1387  8F4C 46           	ld b,(hl)
1388  8F4D 22 2A 8C     	ld (India_2_SP),hl
1389  8F50
1390  8F50 FD 2C        	inc iyl
1391  8F52
1392  8F52 C9           	ret
1393  8F53
1394  8F53              Prepara_salida
1395  8F53
1396  8F53 21 00 89     	ld hl,Tabla_de_pintado
1397  8F56 22 28 8C     	ld (India_SP),hl
1398  8F59 C9           	ret
1399  8F5A
1400  8F5A
1401  8F5A 2C           Intercambia_1_byte inc l
1402  8F5B 1C           	inc e
1403  8F5C 46           	ld b,(hl)
1404  8F5D 1A           	ld a,(de)
1405  8F5E EB           	ex de,hl
1406  8F5F 70           	ld (hl),b
1407  8F60 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1408  8F61 C9           	ret
1409  8F62
1410  8F62              ; -----------------------------------------------------------------------------------
1411  8F62              ;
1412  8F62              ;	20/01/24
1413  8F62              ;
1414  8F62              ;
1415  8F62
1416  8F62              Construye_movimientos_masticados_entidad
1417  8F62
1418  8F62 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1419  8F65 E5           	push hl
1420  8F66 CD A9 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1421  8F69              ;															; _ el (Contador_de_mov_masticados).
1422  8F69 CD 79 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1423  8F6C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1424  8F6C CD A6 99     	call Recompone_posicion_inicio
1425  8F6F
1426  8F6F CD D6 96     1 call Draw
1427  8F72 CD 8E 8F     	call Guarda_movimiento_masticado
1428  8F75
1429  8F75 CD 53 9D     	call Movimiento
1430  8F78
1431  8F78 3A 2C 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1432  8F7B CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1433  8F7D 28 F0        	jr z,1B
1434  8F7F
1435  8F7F              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1436  8F7F              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1437  8F7F
1438  8F7F E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1439  8F80 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1440  8F83
1441  8F83              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1442  8F83
1443  8F83 CD B7 9E     	call Situa_en_contador_general_de_mov_masticados
1444  8F86
1445  8F86              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1446  8F86              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1447  8F86
1448  8F86 ED 4B C2 8B  	ld bc,(Contador_de_mov_masticados)
1449  8F8A
1450  8F8A 71           	ld (hl),c
1451  8F8B 23           	inc hl
1452  8F8C 70           	ld (hl),b
1453  8F8D
1454  8F8D C9           	ret
1455  8F8E
1456  8F8E              ; -----------------------------------------------------------------------------------
1457  8F8E              ;
1458  8F8E              ;	28/12/23
1459  8F8E              ;
1460  8F8E              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1461  8F8E              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1462  8F8E
1463  8F8E              Guarda_movimiento_masticado
1464  8F8E
1465  8F8E ED 73 06 8C  	ld (Stack),sp
1466  8F92 ED 7B C0 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1467  8F96
1468  8F96 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1469  8F98 FD E5            push iy 												; Pushea Puntero_objeto.
1470  8F9A
1471  8F9A ED 7B 06 8C      ld sp,(Stack)
1472  8F9E
1473  8F9E 2A C2 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1474  8FA1 23           	inc hl
1475  8FA2 22 C2 8B     	ld (Contador_de_mov_masticados),hl
1476  8FA5
1477  8FA5 CD A9 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1478  8FA8              ;															; _ el (Contador_de_mov_masticados).
1479  8FA8 C9               ret
1480  8FA9
1481  8FA9              ; --------------------------------------------------------------------------------------------------------------
1482  8FA9              ;
1483  8FA9              ;	12/1/24
1484  8FA9              ;
1485  8FA9              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1486  8FA9
1487  8FA9              Actualiza_Puntero_de_almacen_de_mov_masticados
1488  8FA9
1489  8FA9 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1490  8FAC 01 04 00     	ld bc,4
1491  8FAF A7           	and a
1492  8FB0 ED 4A        	adc hl,bc
1493  8FB2 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1494  8FB5 C9           	ret
1495  8FB6
1496  8FB6              ; --------------------------------------------------------------------------------------------------------------
1497  8FB6              ;
1498  8FB6              ;	24/03/24
1499  8FB6              ;
1500  8FB6              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1501  8FB6              ;
1502  8FB6              ;	IX contiene el puntero de impresión.
1503  8FB6              ;	DE contiene (Puntero_objeto).
1504  8FB6
1505  8FB6
1506  8FB6              Cargamos_registros_con_mov_masticado
1507  8FB6
1508  8FB6 ED 73 06 8C  	ld (Stack),sp
1509  8FBA ED 7B C0 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1510  8FBE
1511  8FBE D1           	pop de 															; DE contiene Puntero_objeto
1512  8FBF DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1513  8FC1
1514  8FC1 ED 73 C0 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1515  8FC5 ED 7B 06 8C  	ld sp,(Stack)
1516  8FC9
1517  8FC9 7B           	ld a,e
1518  8FCA 82           	add d															; Comprueba si ya no hay datos en el almacén.
1519  8FCB
1520  8FCB CC 69 93     	call z,Reinicia_entidad_maliciosa
1521  8FCE
1522  8FCE C9           	ret
1523  8FCF
1524  8FCF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1525  8FCF              ;
1526  8FCF              ;	22/7/24
1527  8FCF
1528  8FCF              Cargamos_registros_con_explosion
1529  8FCF
1530  8FCF
1531  8FCF 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1532  8FD2 CD 73 90     	call Extrae_address
1533  8FD5
1534  8FD5 5D           	ld e,l
1535  8FD6 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1536  8FD7
1537  8FD7 DD 2A BE 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1538  8FDB
1539  8FDB C9           	ret
1540  8FDC
1541  8FDC
1542  8FDC              Cargamos_registros_con_explosion_Amadeus
1543  8FDC
1544  8FDC 2A 75 89     	ld hl,(Pamm_Amadeus)
1545  8FDF CD 73 90     	call Extrae_address
1546  8FE2
1547  8FE2 5D           	ld e,l
1548  8FE3 54           	ld d,h
1549  8FE4
1550  8FE4 DD 2A 73 89  	ld ix,(p.imp.amadeus)
1551  8FE8
1552  8FE8 C9           	ret
1553  8FE9
1554  8FE9              ; --------------------------------------------------------------------------------------------------------------
1555  8FE9              ;
1556  8FE9              ;	17/06/24
1557  8FE9              ;
1558  8FE9              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1559  8FE9              ;
1560  8FE9              ;	IX contiene el puntero de impresión.
1561  8FE9              ;	DE contiene (Puntero_objeto).
1562  8FE9
1563  8FE9
1564  8FE9              Cargamos_registros_con_mov_masticado_Amadeus
1565  8FE9
1566  8FE9 ED 73 06 8C  	ld (Stack),sp
1567  8FED ED 7B 75 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1568  8FF1 D1           	pop de 															; DE contiene Puntero_objeto
1569  8FF2 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1570  8FF4 DD 22 73 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1571  8FF8 ED 7B 06 8C  	ld sp,(Stack)
1572  8FFC C9           	ret
1573  8FFD
1574  8FFD              ; ---------------------------------------------------------------------------------------------------------------------
1575  8FFD              ;
1576  8FFD              ;	18/6/24
1577  8FFD              ;
1578  8FFD              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1579  8FFD
1580  8FFD              Genera_datos_de_impresion_Amadeus
1581  8FFD
1582  8FFD 3A 72 89     	ld a,(Impacto_Amadeus)
1583  9000 A7           	and a
1584  9001 20 03        	jr nz,1F
1585  9003
1586  9003              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1587  9003              ; _apuntando a la correspondiente explosión.
1588  9003
1589  9003 CD E9 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1590  9006
1591  9006 DD 7D        1 ld a,ixl
1592  9008 E6 1F        	and $1f
1593  900A 32 6F 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1594  900D
1595  900D 2A 26 8C     	ld hl,(Scanlines_album_SP)
1596  9010 E5           	push hl
1597  9011
1598  9011 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1599  9014 22 26 8C     	ld (Scanlines_album_SP),hl
1600  9017
1601  9017 CD BE 94     	call Genera_datos_de_impresion
1602  901A
1603  901A E1           	pop hl
1604  901B 22 26 8C     	ld (Scanlines_album_SP),hl
1605  901E
1606  901E C9           	ret
1607  901F
1608  901F              ; ---------------------------------------------------------------------------------------------------------------------
1609  901F              ;
1610  901F              ;	13/03/24
1611  901F              ;
1612  901F              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1613  901F
1614  901F              Inicia_albumes_de_lineas
1615  901F
1616  901F 21 00 80     	ld hl,Scanlines_album
1617  9022 22 0A 8C     	ld (Album_de_pintado),hl
1618  9025 22 26 8C     	ld (Scanlines_album_SP),hl
1619  9028
1620  9028 21 1A 81     	ld hl,Scanlines_album_2
1621  902B 22 0C 8C     	ld (Album_de_borrado),hl
1622  902E
1623  902E C9           	ret
1624  902F
1625  902F              Inicia_albumes_de_lineas_Amadeus
1626  902F
1627  902F 21 34 82     	ld hl,Amadeus_scanlines_album
1628  9032 22 0E 8C     	ld (Album_de_pintado_Amadeus),hl
1629  9035 21 58 82     	ld hl,Amadeus_scanlines_album_2
1630  9038 22 10 8C     	ld (Album_de_borrado_Amadeus),hl
1631  903B
1632  903B C9           	ret
1633  903C
1634  903C              Inicia_albumes_de_disparos
1635  903C
1636  903C 21 7C 82     	ld hl,Disparos_scanlines_album
1637  903F 22 12 8C     	ld (Album_de_pintado_disparos),hl
1638  9042 21 B8 82     	ld hl,Disparos_scanlines_album_2
1639  9045 22 14 8C     	ld (Album_de_borrado_disparos),hl
1640  9048
1641  9048 21 7C 82     	ld hl,Disparos_scanlines_album
1642  904B 22 16 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1643  904E
1644  904E C9           	ret
1645  904F
1646  904F              ; ---------------------------------------------------------------------------------------------------------------------
1647  904F              ;
1648  904F              ; 8/1/23
1649  904F              ;
1650  904F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1651  904F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1652  904F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1653  904F
1654  904F              ; Destruye HL y DE !!!!!
1655  904F
1656  904F              Inicia_punteros_de_cajas
1657  904F
1658  904F 21 5C 89     	ld hl,Indice_de_cajas_de_entidades
1659  9052 CD 73 90         call Extrae_address
1660  9055 22 F9 8B         ld (Puntero_store_caja),hl
1661  9058 21 5E 89     	ld hl,Indice_de_cajas_de_entidades+2
1662  905B 22 FD 8B     	ld (Indice_restore_caja),hl
1663  905E CD 73 90     	call Extrae_address
1664  9061 22 FB 8B     	ld (Puntero_restore_caja),hl
1665  9064 C9               ret
1666  9065
1667  9065              ; *************************************************************************************************************************************************************
1668  9065              ;
1669  9065              ; 8/1/23
1670  9065              ;
1671  9065              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1672  9065
1673  9065 21 2B 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1674  9068 22 2F 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1675  906B C9           	ret
1676  906C 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1677  906F 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1678  9072 C9           	ret
1679  9073
1680  9073              ; *************************************************************************************************************************************************************
1681  9073              ;
1682  9073              ; 20/10/22
1683  9073              ;
1684  9073              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1685  9073              ;
1686  9073              ; Destruye el puntero y DE !!!!!
1687  9073
1688  9073 5E           Extrae_address ld e,(hl)
1689  9074 23           	inc hl
1690  9075 56           	ld d,(hl)
1691  9076 2B           	dec hl
1692  9077 EB           	ex de,hl
1693  9078 C9           	ret
1694  9079
1695  9079              ; *************************************************************************************************************************************************************
1696  9079              ;
1697  9079              ;	20/1/24
1698  9079              ;
1699  9079              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1700  9079              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1701  9079              ;
1702  9079              ;   Destruye HL y BC !!!!!,
1703  9079              ;
1704  9079              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1705  9079              ;					"0" ..... Izquierda.
1706  9079
1707  9079              Inicia_Puntero_objeto
1708  9079
1709  9079 3A D8 8B     	ld a,(Cuad_objeto)
1710  907C E6 01        	and 1
1711  907E F5           	push af
1712  907F CC 9B 90     	call z,Inicia_puntero_objeto_izq
1713  9082 F1           	pop af
1714  9083 C8           	ret z
1715  9084 CD 88 90     	call Inicia_puntero_objeto_der
1716  9087 C9           	ret
1717  9088
1718  9088              ; Arrancamos desde la parte izquierda de la pantalla.
1719  9088              ; Iniciamos (Indice_Sprite_der).
1720  9088
1721  9088 2A CE 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1722  908B 22 D2 8B     	ld (Puntero_DESPLZ_der),hl
1723  908E CD 73 90     	call Extrae_address
1724  9091 22 CB 8B     	ld (Puntero_objeto),hl
1725  9094
1726  9094 2A D0 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1727  9097 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
1728  909A C9           	ret
1729  909B
1730  909B              ; Arrancamos desde la parte derecha de la pantalla.
1731  909B              ; Iniciamos (Indice_Sprite_izq).
1732  909B
1733  909B 2A D0 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1734  909E 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
1735  90A1 CD 73 90     	call Extrae_address
1736  90A4 22 CB 8B     	ld (Puntero_objeto),hl
1737  90A7
1738  90A7 2A CE 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1739  90AA 22 D2 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1740  90AD C9           	ret
1741  90AE
1742  90AE              ; **************************************************************************************************
1743  90AE              ;
1744  90AE              ;	06/07/24
1745  90AE              ;
1746  90AE              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1747  90AE
1748  90AE              Restore_entidad
1749  90AE
1750  90AE 2A F9 8B     	ld hl,(Puntero_store_caja)
1751  90B1 7E           	ld a,(hl)
1752  90B2 A7           	and a
1753  90B3 CC C1 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1754  90B6 28 F6        	jr z,Restore_entidad
1755  90B8
1756  90B8 11 B9 8B     	ld de,Bandeja_DRAW
1757  90BB 01 0C 00     	ld bc,12
1758  90BE ED B0        	ldir
1759  90C0 C9           	ret
1760  90C1
1761  90C1              ; **************************************************************************************************
1762  90C1              ;
1763  90C1              ;	08/05/23
1764  90C1              ;
1765  90C1              ;	Incrementamos los dos punteros de entidades. (+1).
1766  90C1
1767  90C1              Incrementa_punteros_de_cajas
1768  90C1
1769  90C1 2A FB 8B     	ld hl,(Puntero_restore_caja)
1770  90C4 22 F9 8B     	ld (Puntero_store_caja),hl
1771  90C7 2A FD 8B     	ld hl,(Indice_restore_caja)
1772  90CA 23           	inc hl
1773  90CB 23           	inc hl
1774  90CC 22 FD 8B     	ld (Indice_restore_caja),hl
1775  90CF CD 73 90         call Extrae_address
1776  90D2 22 FB 8B         ld (Puntero_restore_caja),hl
1777  90D5 C9               ret
1778  90D6
1779  90D6              ; -----------------------------------------------------------
1780  90D6
1781  90D6              ; Teclado.
1782  90D6
1783  90D6 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1784  90D8 DB FE        	in a,($fe)
1785  90DA E6 01        	and $01
1786  90DC 28 02        	jr z,1f
1787  90DE 18 F6        	jr Pulsa_ENTER
1788  90E0 C9           1 ret
1789  90E1
1790  90E1              ; **************************************************************************************************
1791  90E1              ;
1792  90E1              ; Temporización.
1793  90E1
1794  90E1              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1795  90E1              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1796  90E1              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1797  90E1              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1798  90E1
1799  90E1              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1800  90E1              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1801  90E1              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1802  90E1
1803  90E1              ; A partir de $4f61 no hace falta DELAY.
1804  90E1
1805  90E1              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1806  90E1
1807  90E1              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1808  90E1              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1809  90E1              ;	LD A,B
1810  90E1              ;	AND A
1811  90E1              ;	JR NZ,wait
1812  90E1              ;	RET
1813  90E1
1814  90E1              ; ---------------------------------------------------------------------------------------------------------------
1815  90E1              ;
1816  90E1              ;	13/07/24
1817  90E1              ;
1818  90E1
1819  90E1              Inicia_Shield
1820  90E1
1821  90E1 21 4C 8C     	ld hl,Datos_Shield
1822  90E4 22 50 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1823  90E7
1824  90E7 7E           	ld a,(hl)
1825  90E8 32 53 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1826  90EB
1827  90EB 3E 01        	ld a,1
1828  90ED 32 54 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1829  90F0
1830  90F0 C9           	ret
1831  90F1
1832  90F1              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1833  90F1              ;
1834  90F1              ;	4/6/24
1835  90F1              ;
1836  90F1              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1837  90F1              ;
1838  90F1              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1839  90F1              ;
1840  90F1
1841  90F1              Actualiza_pantalla
1842  90F1
1843  90F1 3E 02        	ld a,2
1844  90F3 D3 FE        	out ($fe),a
1845  90F5
1846  90F5 3A 2C 8C     	ld a,(Ctrl_3)
1847  90F8 CB 57        	bit 2,a
1848  90FA 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1849  90FC
1850  90FC              Borrando_entidades
1851  90FC
1852  90FC 2A 26 8C     	ld hl,(Scanlines_album_SP)
1853  90FF CD 73 90     	call Extrae_address
1854  9102 24           	inc h
1855  9103 25           	dec h
1856  9104 28 05        	jr z,Pintando_entidades
1857  9106 CD B3 95     	call Pinta_Sprites
1858  9109 18 F1        	jr Borrando_entidades
1859  910B
1860  910B              Pintando_entidades
1861  910B
1862  910B 2A 28 8C     	ld hl,(India_SP)
1863  910E 2C           	inc l
1864  910F CD 73 90     	call Extrae_address
1865  9112 24           	inc h
1866  9113 25           	dec h
1867  9114 28 0E        	jr z,Ejecuta_escudo
1868  9116 1C           	inc e
1869  9117 1C           	inc e
1870  9118 ED 53 28 8C  	ld (India_SP),de
1871  911C CD 73 90     	call Extrae_address
1872  911F CD B3 95     	call Pinta_Sprites
1873  9122 18 E7        	jr Pintando_entidades
1874  9124
1875  9124              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1876  9124
1877  9124              Ejecuta_escudo
1878  9124
1879  9124 3A 52 8C     	ld a,(Shield)
1880  9127 A7           	and a
1881  9128 20 2F        	jr nz,Aplica_Shield
1882  912A
1883  912A              Borrando_Amadeus
1884  912A
1885  912A 21 2C 8C     	ld hl,Ctrl_3
1886  912D CB 6E        	bit 5,(hl)
1887  912F 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1888  9131
1889  9131 2A 10 8C     	ld hl,(Album_de_borrado_Amadeus)
1890  9134 CD 73 90     	call Extrae_address
1891  9137 24           	inc h
1892  9138 25           	dec h
1893  9139 28 03        	jr z,Pintando_Amadeus
1894  913B CD B3 95     	call Pinta_Sprites
1895  913E
1896  913E              Pintando_Amadeus
1897  913E
1898  913E 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1899  9141 CD 73 90     	call Extrae_address
1900  9144 24           	inc h
1901  9145 25           	dec h
1902  9146 28 03        	jr z,1F
1903  9148 CD B3 95     	call Pinta_Sprites
1904  914B
1905  914B              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1906  914B
1907  914B 21 2C 8C     1 ld hl,Ctrl_3
1908  914E CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1909  9150 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1910  9152 CB AE        	res 5,(hl)
1911  9154
1912  9154 3E 01        	ld a,1												; Borde azul.
1913  9156 D3 FE        	out ($fe),a
1914  9158
1915  9158 C9           	ret
1916  9159
1917  9159              Aplica_Shield
1918  9159
1919  9159              ;	Bit 1 "1" (Shield_3) Sólo borra.
1920  9159              ;		  "0"     ""     Borra/Pinta.
1921  9159              ;	Bit 2    ""  RET.	 No borra, no pinta.
1922  9159
1923  9159 21 54 8C     	ld hl,Shield_3
1924  915C
1925  915C CB 5E        	bit 3,(hl)
1926  915E 20 DE        	jr nz,Pintando_Amadeus
1927  9160
1928  9160 CB 56        	bit 2,(hl)
1929  9162 20 E7        	jr nz,1B
1930  9164
1931  9164 CB 4E        	bit 1,(hl)
1932  9166 C4 6D 91     	call nz,Borra_Amadeus_shield
1933  9169
1934  9169 28 BF        	jr z,Borrando_Amadeus
1935  916B 18 DE        	jr 1B
1936  916D
1937  916D              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1938  916D
1939  916D              Borra_Amadeus_shield
1940  916D
1941  916D 3A 2C 8C     	ld a,(Ctrl_3)
1942  9170 CB 6F        	bit 5,a
1943  9172 28 08        	jr z,1F
1944  9174
1945  9174 2A 10 8C     	ld hl,(Album_de_borrado_Amadeus)
1946  9177 CD 73 90     	call Extrae_address
1947  917A 18 06        	jr 2F
1948  917C
1949  917C 2A 0E 8C     1 ld hl,(Album_de_pintado_Amadeus)
1950  917F CD 73 90     	call Extrae_address
1951  9182
1952  9182 CD B3 95     2 call Pinta_Sprites
1953  9185
1954  9185 AF           	xor a
1955  9186 3C           	inc a											; Asegura NZ en la salida de la rutina.
1956  9187
1957  9187 C9           	ret
1958  9188
1959  9188              Pinta_Amadeus_shield
1960  9188
1961  9188 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1962  918B CD 73 90     	call Extrae_address
1963  918E CD B3 95     	call Pinta_Sprites
1964  9191
1965  9191 AF           	xor a
1966  9192 3C           	inc a											; Asegura NZ en la salida de la rutina.
1967  9193
1968  9193 C9           	ret
1969  9194
1970  9194              Borra_Pinta_Amadeus_shield
1971  9194
1972  9194 CD 6D 91     	call Borra_Amadeus_shield
1973  9197 CD 88 91     	call Pinta_Amadeus_shield
1974  919A C9           	ret
1975  919B
1976  919B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1977  919B              ;
1978  919B              ;	19/6/24
1979  919B              ;
1980  919B
1981  919B              Teclado
1982  919B
1983  919B              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1984  919B
1985  919B 3E F7        	ld a,$f7												; "5" para disparar.
1986  919D DB FE        	in a,($fe)
1987  919F E6 10        	and $10
1988  91A1
1989  91A1 CC 3B A0     	call z,Genera_disparo_Amadeus
1990  91A4
1991  91A4 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1992  91A6 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1993  91A8 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1994  91AA CC 20 9D         call z,Amadeus_a_izquierda
1995  91AD
1996  91AD 3E F7        	ld a,$f7
1997  91AF DB FE        	in a,($fe)
1998  91B1 E6 01        	and $01
1999  91B3 C8           	ret z
2000  91B4
2001  91B4 3E F7        	ld a,$f7
2002  91B6 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2003  91B8 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2004  91BA CC 38 9D     	call z,Amadeus_a_derecha
2005  91BD
2006  91BD C9           	ret
2007  91BE
2008  91BE              ; ------------------------------------------------------------------------------------------------------------------------
2009  91BE              ;
2010  91BE              ;	06/07/24
2011  91BE              ;
2012  91BE
2013  91BE              Genera_explosion
2014  91BE
2015  91BE 21 3E 8C     	ld hl,Clock_explosion
2016  91C1 35           	dec (hl)
2017  91C2 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2018  91C4
2019  91C4              Borra_entidad_colisionada
2020  91C4
2021  91C4 CD C6 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2022  91C7 CD CF 8F     	call Cargamos_registros_con_explosion
2023  91CA CD BE 94     	call Genera_datos_de_impresion
2024  91CD
2025  91CD AF           	xor a
2026  91CE 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2027  91CF
2028  91CF C9           	ret
2029  91D0
2030  91D0              Siguiente_frame_explosion
2031  91D0
2032  91D0 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2033  91D2
2034  91D2              ; Avanza Frame de explosión.
2035  91D2
2036  91D2 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2037  91D5 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2038  91D8
2039  91D8 79           	ld a,c
2040  91D9 95           	sub l
2041  91DA 20 0B        	jr nz,1F
2042  91DC
2043  91DC              ; Fín de la entidad !!!!!!!!!!!!!
2044  91DC
2045  91DC 21 00 8C     	ld hl,Numero_parcial_de_entidades
2046  91DF 35           	dec (hl)
2047  91E0 23           	inc hl
2048  91E1 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2049  91E2
2050  91E2 CD 3E 93     	call Limpiamos_bandeja_DRAW
2051  91E5 18 DD        	jr Borra_entidad_colisionada
2052  91E7
2053  91E7 23           1 inc hl
2054  91E8 23           	inc hl
2055  91E9 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2056  91EC 18 D6        	jr Borra_entidad_colisionada
2057  91EE
2058  91EE              ; ----- ----- ----- ----- -----
2059  91EE
2060  91EE              Genera_explosion_Amadeus
2061  91EE
2062  91EE 21 3F 8C     	ld hl,Clock_explosion_Amadeus
2063  91F1 35           	dec (hl)
2064  91F2 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2065  91F4
2066  91F4              Borra_Amadeus_impactado
2067  91F4
2068  91F4 CD 37 8E     	call Change_Amadeus
2069  91F7 CD DC 8F     	call Cargamos_registros_con_explosion_Amadeus
2070  91FA CD FD 8F     	call Genera_datos_de_impresion_Amadeus
2071  91FD
2072  91FD 21 2C 8C     	ld hl,Ctrl_3
2073  9200 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2074  9202
2075  9202 AF           	xor a
2076  9203 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2077  9204
2078  9204 C9           	ret
2079  9205
2080  9205              Siguiente_frame_explosion_Amadeus
2081  9205
2082  9205 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2083  9207
2084  9207              ; Avanza Frame de explosión.
2085  9207
2086  9207 2A 75 89     	ld hl,(Pamm_Amadeus)
2087  920A 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2088  920D
2089  920D 79           	ld a,c
2090  920E 95           	sub l
2091  920F 20 0B        	jr nz,1F
2092  9211
2093  9211              ; Fín de Amadeus !!!!!!!!!!!!!
2094  9211              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2095  9211
2096  9211 AF           	xor a
2097  9212 32 72 89     	ld (Impacto_Amadeus),a
2098  9215 21 2C 8C     	ld hl,Ctrl_3
2099  9218 CB F6        	set 6,(hl)
2100  921A
2101  921A 18 D8        	jr Borra_Amadeus_impactado
2102  921C
2103  921C 23           1 inc hl
2104  921D 23           	inc hl
2105  921E 22 75 89     	ld (Pamm_Amadeus),hl
2106  9221 18 D1        	jr Borra_Amadeus_impactado
2107  9223
2108  9223              ; ---------------------------------------------------------------
2109  9223
2110  9223              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9223              ; ******************************************************************************************************************************************************************************************
   2+ 9223              ;
   3+ 9223              ;   21/04/24
   4+ 9223              ;
   5+ 9223              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9223              ;   (XOR) bit a bit.
   7+ 9223              ;
   8+ 9223              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9223
  10+ 9223              Derivando_RND
  11+ 9223
  12+ 9223 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9226
  14+ 9226 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9228 C5               push bc
  16+ 9229              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9229 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 922C              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 922C
  20+ 922C A7           6 and a                                 ; Carry a "0".
  21+ 922D CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 922F 30 02            jr nc,1F
  23+ 9231
  24+ 9231 CB C1            set 0,c
  25+ 9233
  26+ 9233 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9234 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9236 5F               ld e,a
  29+ 9237
  30+ 9237 7A               ld a,d
  31+ 9238 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 923A 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 923C
  34+ 923C CB 3F            srl a
  35+ 923E
  36+ 923E AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 923F
  38+ 923F 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9240 28 04            jr z,4F
  40+ 9242
  41+ 9242 CB FF            set 7,a
  42+ 9244 18 02            jr 5F
  43+ 9246
  44+ 9246 CB BF        4 res 7,a
  45+ 9248
  46+ 9248 CB 21        5 sla c
  47+ 924A 10 E0            djnz 6B
  48+ 924C
  49+ 924C 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 924D
  51+ 924D 77               ld (hl),a
  52+ 924E 23               inc hl
  53+ 924F C1               pop bc
  54+ 9250 10 D4            djnz 3B
  55+ 9252
  56+ 9252 C9               ret
  57+ 9253
  58+ 9253
  59+ 9253
# file closed: RND_Derivando.asm
2111  9253              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9253              ;---------------------------------------------------------------------------------------------------------------
   2+ 9253              ;
   3+ 9253              ;   8/3/24
   4+ 9253              ;
   5+ 9253              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9253              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9253              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9253              ;	_ de la 1ª entidad del Nivel.
   9+ 9253              ;
  10+ 9253              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9253
  12+ 9253              ;	MODIFICA: HL,DE y A.
  13+ 9253              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9253
  15+ 9253              Inicializa_Nivel
  16+ 9253
  17+ 9253 2A 48 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9256 CD 73 90     	call Extrae_address
  19+ 9259 7E           	ld a,(hl)
  20+ 925A 32 FF 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 925D 23           	inc hl
  22+ 925E CD 6B 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9261 22 4A 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9264 CD 74 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9267
  26+ 9267 CD 85 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 926A C9           	ret
  28+ 926B
  29+ 926B              ; ----------------------
  30+ 926B
  31+ 926B 11 DE 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 926E 01 04 00     	ld bc,4
  33+ 9271 ED B0        	ldir
  34+ 9273 C9           	ret
  35+ 9274
  36+ 9274 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9275 CD 0F 94         call Calcula_salto_en_BC
  38+ 9278 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 927B A7               and a
  40+ 927C ED 4A            adc hl,bc
  41+ 927E CD 73 90         call Extrae_address
  42+ 9281 22 EA 8B         ld (Puntero_indice_mov),hl
  43+ 9284 C9               ret
  44+ 9285
  45+ 9285 3A B9 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9288 CD 0F 94     	call Calcula_salto_en_BC
  47+ 928B 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 928E A7               and a
  49+ 928F ED 4A            adc hl,bc
  50+ 9291 CD 73 90         call Extrae_address
  51+ 9294 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 9297 C9           	ret
  53+ 9298
  54+ 9298              ;---------------------------------------------------------------------------------------------------------------
  55+ 9298              ;
  56+ 9298              ;   5/1/24
  57+ 9298              ;
  58+ 9298              ;	Destruye A,BC,HL,DE
  59+ 9298
  60+ 9298              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 9298              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 9298
  63+ 9298              Inicia_Entidades
  64+ 9298
  65+ 9298              ; Preparamos los punteros de las cajas de entidades:
  66+ 9298
  67+ 9298 CD 4F 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 929B              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 929B CD 57 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 929E
  71+ 929E 2A 4A 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92A1
  73+ 92A1 22 4A 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92A4
  75+ 92A4 CD BD 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92A7
  77+ 92A7 2A 4A 8C     	ld hl,(Datos_de_nivel)
  78+ 92AA
  79+ 92AA              ; En este punto:
  80+ 92AA              ;
  81+ 92AA              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92AA              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92AA
  84+ 92AA C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92AB
  86+ 92AB 7E           	ld a,(hl)
  87+ 92AC CD 29 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92AF
  89+ 92AF CD 21 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92B2
  91+ 92B2              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92B2
  93+ 92B2 CD DF 93     	call Busca_mov_masticados_segun_tipo
  94+ 92B5
  95+ 92B5 A7           	and a
  96+ 92B6 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92B8
  98+ 92B8              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92B8
 100+ 92B8              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92B8              ;	_ de este tipo de entidad.
 102+ 92B8
 103+ 92B8 CD B7 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92BB CD C4 9E     	call Transfiere_datos_de_contadores
 105+ 92BE
 106+ 92BE 18 06        	jr 4F
 107+ 92C0
 108+ 92C0 CD 62 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92C3
 110+ 92C3              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92C3              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92C3              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92C3              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92C3              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92C3
 116+ 92C3 CD 9D 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92C6              ;																; _ Mov_masticados ya generados.
 118+ 92C6
 119+ 92C6 CD B6 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92C9
 121+ 92C9 DD E5        	push ix
 122+ 92CB E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92CC
 124+ 92CC D5           	push de
 125+ 92CD CD 92 94     	call Genera_coordenadas
 126+ 92D0
 127+ 92D0 ED 5B 26 8C  	ld de,(Scanlines_album_SP)
 128+ 92D4 CD C6 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92D7 D1           	pop de
 130+ 92D8
 131+ 92D8 CD BE 94     	call Genera_datos_de_impresion
 132+ 92DB              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92DB              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92DB              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92DB              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92DB
 137+ 92DB CD 61 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92DE
 139+ 92DE              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92DE
 141+ 92DE ED 5B F9 8B  	ld de,(Puntero_store_caja)
 142+ 92E2 CD 4E 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92E5
 144+ 92E5 CD 3E 93     	call Limpiamos_bandeja_DRAW
 145+ 92E8 CD C1 90     	call Incrementa_punteros_de_cajas
 146+ 92EB
 147+ 92EB              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92EB              ; _ entidad del Nivel.
 149+ 92EB
 150+ 92EB 3A 2D 8C     	ld a,(Ctrl_4)
 151+ 92EE E6 F0        	and $f0
 152+ 92F0 32 2D 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92F3
 154+ 92F3              ; Siguiente entidad del Nivel.
 155+ 92F3
 156+ 92F3 2A 4A 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92F6 23           	inc hl 														; _ entidad del Nivel.
 158+ 92F7
 159+ 92F7 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92F8
 161+ 92F8 10 A7        	djnz 2B
 162+ 92FA
 163+ 92FA C9           	ret
 164+ 92FB
 165+ 92FB              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92FB              ;
 167+ 92FB              ;	27/5/24
 168+ 92FB              ;
 169+ 92FB              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92FB              ;
 171+ 92FB
 172+ 92FB              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92FB              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92FB
 175+ 92FB 21 EC 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92FE CD 21 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9301
 178+ 9301
 179+ 9301              Construye_movimientos_masticados_Amadeus
 180+ 9301
 181+ 9301 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9304 CD A9 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9307              ;															; _ el (Contador_de_mov_masticados).
 184+ 9307 CD 79 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 930A              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 930A
 187+ 930A              ; Generamos movimientos masticados de Amadeus.
 188+ 930A
 189+ 930A 06 79        	ld b,121												; $0079, 121d.
 190+ 930C
 191+ 930C C5           1 push bc
 192+ 930D CD D6 96     	call Draw
 193+ 9310 CD 8E 8F     	call Guarda_movimiento_masticado
 194+ 9313
 195+ 9313 CD 4A 9A     	call Mov_right
 196+ 9316 CD 4A 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9319
 198+ 9319 C1           	pop bc
 199+ 931A 10 F0        	djnz 1B
 200+ 931C
 201+ 931C              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 931C
 203+ 931C              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 931C              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 931C
 206+ 931C 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 931F 01 08 00     	ld bc,8
 208+ 9322 A7           	and a
 209+ 9323 ED 42        	sbc hl,bc
 210+ 9325 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9328
 212+ 9328 C9           	ret
 213+ 9329
 214+ 9329              ; ---------------------------------------------------------------------
 215+ 9329              ;
 216+ 9329              ;	10/02/24
 217+ 9329              ;
 218+ 9329              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9329              ;
 220+ 9329              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9329
 222+ 9329              Definicion_segun_tipo
 223+ 9329
 224+ 9329 CD 0F 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 932C 21 CE 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 932F CD 17 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9332 C9           	ret
 228+ 9333
 229+ 9333              ; ---------------------------------------------------------------------
 230+ 9333              ;
 231+ 9333              ;	6/7/24
 232+ 9333
 233+ 9333
 234+ 9333              Store_Restore_cajas
 235+ 9333
 236+ 9333 ED 5B F9 8B  	ld de,(Puntero_store_caja)
 237+ 9337 CD 4E 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 933A CD C1 90     	call Incrementa_punteros_de_cajas
 239+ 933D C9           	ret
 240+ 933E
 241+ 933E              ; ---------------------------------------------------------------------
 242+ 933E              ;
 243+ 933E              ;	23/6/24
 244+ 933E              ;
 245+ 933E              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 933E              ;
 247+ 933E              ;	MODIFY: HL
 248+ 933E
 249+ 933E              Limpiamos_bandeja_DRAW
 250+ 933E
 251+ 933E ED 73 06 8C  	ld (Stack),sp
 252+ 9342 31 DE 8B     	ld sp,Vel_left
 253+ 9345
 254+ 9345 AF           	xor a
 255+ 9346 67           	ld h,a
 256+ 9347 6F           	ld l,a
 257+ 9348
 258+ 9348 E5           	push hl
 259+ 9349 E5           	push hl
 260+ 934A E5           	push hl
 261+ 934B E5           	push hl
 262+ 934C E5           	push hl
 263+ 934D E5           	push hl
 264+ 934E E5           	push hl
 265+ 934F E5           	push hl
 266+ 9350 E5           	push hl
 267+ 9351 E5           	push hl
 268+ 9352 E5           	push hl
 269+ 9353 E5           	push hl
 270+ 9354 E5           	push hl
 271+ 9355 E5           	push hl
 272+ 9356 E5           	push hl
 273+ 9357 E5           	push hl
 274+ 9358 E5           	push hl
 275+ 9359 E5           	push hl
 276+ 935A
 277+ 935A 33           	inc sp
 278+ 935B
 279+ 935B E5           	push hl
 280+ 935C ED 7B 06 8C  	ld sp,(Stack)
 281+ 9360
 282+ 9360 C9           	ret
 283+ 9361
 284+ 9361              ; ---------------------------------------------------------------------
 285+ 9361              ;
 286+ 9361              ;	24/03/24
 287+ 9361
 288+ 9361 2A C2 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9364 2B           	dec hl
 290+ 9365 22 C2 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9368 C9           	ret
 292+ 9369
 293+ 9369              ; ---------------------------------------------------------------------
 294+ 9369              ;
 295+ 9369              ;	8/5/24
 296+ 9369
 297+ 9369              Reinicia_entidad_maliciosa
 298+ 9369
 299+ 9369              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9369
 301+ 9369 CD B7 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 936C CD C4 9E     	call Transfiere_datos_de_contadores
 303+ 936F
 304+ 936F              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 936F
 306+ 936F 3A B9 8B     	ld a,(Tipo)
 307+ 9372 CD 29 93     	call Definicion_segun_tipo
 308+ 9375
 309+ 9375 E5           	push hl
 310+ 9376 DD E1        	pop ix
 311+ 9378
 312+ 9378 DD 6E 0B     	ld l,(ix+11)
 313+ 937B DD 66 0C     	ld h,(ix+12)
 314+ 937E
 315+ 937E 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9381
 317+ 9381 CD B6 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9384
 319+ 9384              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9384              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9384              ; Ejemplos.
 322+ 9384
 323+ 9384              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9384              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9384              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9384              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9384              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9384
 329+ 9384 21 BC 8B     	ld hl,Contador_de_vueltas
 330+ 9387 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9389
 332+ 9389 7E           	ld a,(hl)
 333+ 938A CB 2F        	sra a
 334+ 938C CB 2F        	sra a
 335+ 938E
 336+ 938E 32 C4 8B     	ld (Velocidad),a
 337+ 9391
 338+ 9391 3E 40        	ld a,$40
 339+ 9393 BE           	cp (hl)
 340+ 9394 C0           	ret nz
 341+ 9395
 342+ 9395              ; Límitador.
 343+ 9395
 344+ 9395              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 9395
 346+ 9395 CB 2E        	sra (hl)
 347+ 9397 21 C4 8B     	ld hl,Velocidad
 348+ 939A CB 2E        	sra (hl)
 349+ 939C
 350+ 939C C9           	ret
 351+ 939D
 352+ 939D              ; ---------------------------------------------------------------------
 353+ 939D              ;
 354+ 939D              ;	22/01/24
 355+ 939D
 356+ 939D 21 2D 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93A0 CB 46        	bit 0,(hl)
 358+ 93A2 20 0D        	jr nz,1F
 359+ 93A4 CB 4E        	bit 1,(hl)
 360+ 93A6 20 0C        	jr nz,2F
 361+ 93A8 CB 56        	bit 2,(hl)
 362+ 93AA 20 0B        	jr nz,3F
 363+ 93AC CB 5E        	bit 3,(hl)
 364+ 93AE 20 0A        	jr nz,4F
 365+ 93B0 C9           	ret
 366+ 93B1
 367+ 93B1 CB E6        1 set 4,(hl)
 368+ 93B3 C9           	ret
 369+ 93B4 CB EE        2 set 5,(hl)
 370+ 93B6 C9           	ret
 371+ 93B7 CB F6        3 set 6,(hl)
 372+ 93B9 C9           	ret
 373+ 93BA CB FE        4 set 7,(hl)
 374+ 93BC C9           	ret
 375+ 93BD
 376+ 93BD              ; ---------------------------------------------------------------------
 377+ 93BD              ;
 378+ 93BD              ;	23/01/24
 379+ 93BD              ;
 380+ 93BD              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93BD              ;
 382+ 93BD              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93BD              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93BD              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93BD              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93BD
 387+ 93BD              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93BD
 389+ 93BD 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93BE 3D           	dec a
 391+ 93BF 20 06        	jr nz,1F
 392+ 93C1
 393+ 93C1              ; --- Tipo_1
 394+ 93C1
 395+ 93C1 21 2D 8C     	ld hl,Ctrl_4
 396+ 93C4 CB C6        	set 0,(hl)
 397+ 93C6 C9           	ret
 398+ 93C7
 399+ 93C7 3D           1 dec a
 400+ 93C8 20 06        	jr nz,2F
 401+ 93CA
 402+ 93CA              ; --- Tipo_2
 403+ 93CA
 404+ 93CA 21 2D 8C     	ld hl,Ctrl_4
 405+ 93CD CB CE        	set 1,(hl)
 406+ 93CF C9           	ret
 407+ 93D0
 408+ 93D0 3D           2 dec a
 409+ 93D1 20 06        	jr nz,3F
 410+ 93D3
 411+ 93D3              ; --- Tipo_3
 412+ 93D3
 413+ 93D3 21 2D 8C     	ld hl,Ctrl_4
 414+ 93D6 CB D6        	set 2,(hl)
 415+ 93D8 C9           	ret
 416+ 93D9
 417+ 93D9              ; --- Tipo_3
 418+ 93D9
 419+ 93D9 21 2D 8C     3 ld hl,Ctrl_4
 420+ 93DC CB D6        	set 2,(hl)
 421+ 93DE C9           	ret
 422+ 93DF
 423+ 93DF              ; ---------------------------------------------------------------------
 424+ 93DF              ;
 425+ 93DF              ;	22/01/24
 426+ 93DF
 427+ 93DF 21 2D 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93E2 CB 46        	bit 0,(hl)
 429+ 93E4 20 0E        	jr nz,1F
 430+ 93E6
 431+ 93E6 CB 4E        	bit 1,(hl)
 432+ 93E8 20 10        	jr nz,2F
 433+ 93EA
 434+ 93EA CB 56        	bit 2,(hl)
 435+ 93EC 20 12        	jr nz,3F
 436+ 93EE
 437+ 93EE CB 5E        	bit 3,(hl)
 438+ 93F0 20 14        	jr nz,4F
 439+ 93F2 18 19        	jr 6F
 440+ 93F4
 441+ 93F4              ; Entidad_de_Tipo_1.
 442+ 93F4
 443+ 93F4 CB 66        1 bit 4,(hl)
 444+ 93F6 28 15        	jr z,6F
 445+ 93F8 18 10        	jr 5F
 446+ 93FA
 447+ 93FA              ; Entidad_de_Tipo_2.
 448+ 93FA
 449+ 93FA CB 6E        2 bit 5,(hl)
 450+ 93FC 28 0F        	jr z,6F
 451+ 93FE 18 0A        	jr 5F
 452+ 9400
 453+ 9400              ; Entidad_de_Tipo_3.
 454+ 9400
 455+ 9400 CB 76        3 bit 6,(hl)
 456+ 9402 28 09        	jr z,6F
 457+ 9404 18 04        	jr 5F
 458+ 9406
 459+ 9406              ; Entidad_de_Tipo_4.
 460+ 9406
 461+ 9406 CB 7E        4 bit 7,(hl)
 462+ 9408 28 03        	jr z,6F
 463+ 940A
 464+ 940A              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 940A
 466+ 940A AF           5 xor a
 467+ 940B 3C           	inc a
 468+ 940C C9           	ret
 469+ 940D
 470+ 940D              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 940D
 472+ 940D AF           6 xor a
 473+ 940E C9           	ret
 474+ 940F
 475+ 940F              ;	------------------------------------------------------------------------------------
 476+ 940F              ;
 477+ 940F              ;	12/01/24
 478+ 940F              ;
 479+ 940F              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 940F              ;
 481+ 940F              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 940F              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 940F
 484+ 940F CB 27        Calcula_salto_en_BC sla a
 485+ 9411 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9413 4F           	ld c,a
 487+ 9414 06 00        	ld b,0
 488+ 9416 C9           	ret
 489+ 9417
 490+ 9417              ; ------------------------------------------------------------------
 491+ 9417              ;
 492+ 9417              ;	19/1/24
 493+ 9417              ;
 494+ 9417              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9417              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9417
 497+ 9417 A7           Situa_en_datos_de_definicion and a
 498+ 9418 ED 4A        	adc hl,bc
 499+ 941A CD 73 90     	call Extrae_address
 500+ 941D 22 04 8C         ld (Datos_de_entidad),hl
 501+ 9420 C9           	ret
 502+ 9421
 503+ 9421              ; ------------------------------------------------------------------
 504+ 9421
 505+ 9421              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9421              ; 	inc de
 507+ 9421              ; 	inc de
 508+ 9421              ; 	ex de,hl
 509+ 9421              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9421              ; 	ret
 511+ 9421
 512+ 9421              ; ----------------------------------------------------------------------------------------------------------
 513+ 9421              ;
 514+ 9421              ;	24/6/24
 515+ 9421              ;
 516+ 9421              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9421              ;	_ de entidad.
 518+ 9421              ;
 519+ 9421              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9421              ;
 521+ 9421              ;
 522+ 9421              ;	MODIFICA: HL,DE y BC
 523+ 9421
 524+ 9421
 525+ 9421              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9421
 527+ 9421 11 B9 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9424 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9425 12           	ld (de),a
 530+ 9426 23           	inc hl
 531+ 9427              ;
 532+ 9427 11 C7 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 942A 01 02 00     	ld bc,2
 534+ 942D ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 942F              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 942F 11 BC 8B     	ld de,Contador_de_vueltas
 537+ 9432 7E           	ld a,(hl)
 538+ 9433 12           	ld (de),a
 539+ 9434 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9435
 541+ 9435 11 CE 8B     	ld de,Indice_Sprite_der
 542+ 9438 01 04 00     	ld bc,4
 543+ 943B ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 943D
 545+ 943D 11 D6 8B     	ld de,Posicion_inicio
 546+ 9440 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9443 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9445
 549+ 9445 11 C0 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9448 01 02 00     	ld bc,2
 551+ 944B ED B0        	ldir
 552+ 944D
 553+ 944D C9           	ret
 554+ 944E
 555+ 944E              ; ----------------------------------------------------------------------------------------------------------
 556+ 944E              ;
 557+ 944E              ;	1/8/24
 558+ 944E              ;
 559+ 944E
 560+ 944E              Parametros_de_bandeja_DRAW_a_caja
 561+ 944E
 562+ 944E 21 B9 8B     	ld hl,Bandeja_DRAW
 563+ 9451 01 0C 00     	ld bc,12
 564+ 9454 ED B0        	ldir
 565+ 9456 C9           	ret
 566+ 9457
 567+ 9457              ;---------------------------------------------------------------------------------------------------------------
 568+ 9457              ;
 569+ 9457              ;	5/1/24
 570+ 9457              ;
 571+ 9457              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9457              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9457              ;
 574+ 9457              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9457              ;
 576+ 9457              ;	(Numero_parcial_de_entidades)="7".
 577+ 9457              ;
 578+ 9457              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9457              ;
 580+ 9457              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9457              ;
 582+ 9457              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9457              ;	MODIFICA: A y B.
 584+ 9457              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9457
 586+ 9457              Inicializa_Numero_parcial_de_entidades
 587+ 9457
 588+ 9457              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9457
 590+ 9457 3A FF 8B     	ld a,(Numero_de_entidades)
 591+ 945A A7           	and a
 592+ 945B
 593+ 945B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 945B              ;	jr z,$
 595+ 945B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 945B
 597+ 945B 20 03        	jr nz,3F
 598+ 945D
 599+ 945D              ; ---------- ---------- ----------
 600+ 945D
 601+ 945D              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 945D              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 945D
 604+ 945D CD 53 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9460
 606+ 9460              ; ---------- ---------- ----------
 607+ 9460
 608+ 9460 3A FF 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9463 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9465 38 08        	jr c,1F
 611+ 9467
 612+ 9467              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9467              ; Actualizamos variables.
 614+ 9467
 615+ 9467 3E 07        	ld a,7
 616+ 9469 32 00 8C     	ld (Numero_parcial_de_entidades),a
 617+ 946C 47           	ld b,a
 618+ 946D 18 04        	jr 2F
 619+ 946F
 620+ 946F              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 946F              ; (Numero_de_entidades)="0".
 622+ 946F
 623+ 946F 32 00 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9472 47           	ld b,a
 625+ 9473 C9           2 ret
 626+ 9474
# file closed: Rutinas_de_inicio_y_niveles.asm
2112  9474              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9474              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9474              ;
   3+ 9474              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9474              ;
   5+ 9474              ; *****************************************************************************************************************************************************************************************
   6+ 9474              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9474
   8+ 9474 7C           calcula_tercio ld a,h
   9+ 9475 E6 18        	and $18
  10+ 9477 CB 2F        	sra a
  11+ 9479 CB 2F        	sra a
  12+ 947B CB 2F        	sra a
  13+ 947D C9           	ret
  14+ 947E
# file closed: calcula_tercio.asm
2113  947E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 947E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 947E              ;
   3+ 947E              ;
   4+ 947E              ;	CLS.
   5+ 947E              ;
   6+ 947E              ;	Limpia la pantalla y define sus atributos.
   7+ 947E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 947E              ;
   9+ 947E              ;	COLORES: 0 ..... NEGRO
  10+ 947E              ;    		 1 ..... AZUL
  11+ 947E              ; 			 2 ..... ROJO
  12+ 947E              ;			 3 ..... MAGENTA
  13+ 947E              ; 			 4 ..... VERDE
  14+ 947E              ; 			 5 ..... CIAN
  15+ 947E              ;			 6 ..... AMARILLO
  16+ 947E              ; 			 7 ..... BLANCO
  17+ 947E              ;
  18+ 947E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 947E              ;
  20+ 947E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 947E
  22+ 947E
  23+ 947E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9481 11 01 40     	LD DE,$4001
  25+ 9484 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9487 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9489 ED B0        	LDIR
  28+ 948B 01 FF 02     	LD BC,767
  29+ 948E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 948F ED B0        	LDIR
  31+ 9491 C9           	ret
  32+ 9492
# file closed: Cls.asm
2114  9492              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9492              ; ------------------------------------------------------------------------
   2+ 9492              ;
   3+ 9492              ;	30/1/24
   4+ 9492              ;
   5+ 9492              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9492              ;	Fila superior "0", Columna izquierda "0".
   7+ 9492              ;
   8+ 9492              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9492              ;
  10+ 9492              ;	Modifica: A,BC y DE.
  11+ 9492
  12+ 9492 7D           Genera_coordenadas ld a,l
  13+ 9493 E6 1F        	and $1f
  14+ 9495 32 BA 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9498
  16+ 9498 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9499 FE 40        	cp $40
  18+ 949B 38 1C        	jr c,4F
  19+ 949D
  20+ 949D CD 74 94     	call calcula_tercio
  21+ 94A0 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94A1
  23+ 94A1 1E 00        	ld e,0
  24+ 94A3 7D           	ld a,l
  25+ 94A4 E6 E0        	and $e0
  26+ 94A6 28 01        	jr z,1F
  27+ 94A8 04           	inc b
  28+ 94A9
  29+ 94A9 04           1 inc b
  30+ 94AA 05           	dec b
  31+ 94AB 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94AD              ;														; _ , salimos.
  33+ 94AD 1C           3 inc e
  34+ 94AE D6 20        	sub 32
  35+ 94B0 20 FB        	jr nz,3B
  36+ 94B2 10 F5        	djnz 1B
  37+ 94B4
  38+ 94B4 7B           2 ld a,e
  39+ 94B5 32 BB 8B     	ld (Coordenada_y),a
  40+ 94B8 C9           	ret
  41+ 94B9
  42+ 94B9 AF           4 xor a
  43+ 94BA 32 BB 8B     	ld (Coordenada_y),a
  44+ 94BD C9           	ret
  45+ 94BE
# file closed: Genera_coordenadas.asm
2115  94BE              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94BE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94BE              ;
   3+ 94BE              ;	11/03/24
   4+ 94BE              ;
   5+ 94BE              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94BE              ;   DE contiene Puntero_objeto.
   7+ 94BE              ;   IX contiene el Puntero de impresión.
   8+ 94BE
   9+ 94BE              Genera_datos_de_impresion
  10+ 94BE
  11+ 94BE ED 73 06 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94C2
  13+ 94C2 31 C0 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94C5 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94C7
  16+ 94C7 2A 26 8C         ld hl,(Scanlines_album_SP)
  17+ 94CA
  18+ 94CA 3E 05            ld a,5
  19+ 94CC 85               add l
  20+ 94CD 6F               ld l,a
  21+ 94CE
  22+ 94CE F9               ld sp,hl
  23+ 94CF 22 26 8C         ld (Scanlines_album_SP),hl
  24+ 94D2
  25+ 94D2 21 00 00         ld hl,0
  26+ 94D5
  27+ 94D5 DD E5            push ix
  28+ 94D7 3B               dec sp
  29+ 94D8 ED 7A            adc hl,sp
  30+ 94DA D5               push de
  31+ 94DB
  32+ 94DB              ; Recuperamos SP.
  33+ 94DB
  34+ 94DB ED 7B 06 8C      ld sp,(Stack)
  35+ 94DF
  36+ 94DF E5               push hl
  37+ 94E0 F1               pop af
  38+ 94E1 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94E2
  40+ 94E2              ; Tenemos el encabezado listo.
  41+ 94E2              ; Preparamos registros para generar los scanlines.
  42+ 94E2
  43+ 94E2 DD E5            push ix
  44+ 94E4 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94E5
  46+ 94E5 ED 5B 26 8C      ld de,(Scanlines_album_SP)
  47+ 94E9
  48+ 94E9              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94E9              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94E9
  51+ 94E9 7C               ld a,h
  52+ 94EA FE 50            cp $50
  53+ 94EC 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94EE
  55+ 94EE 20 05            jr nz,2F
  56+ 94F0
  57+ 94F0 7D               ld a,l
  58+ 94F1 FE E0            cp $e0
  59+ 94F3 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94F5
  61+ 94F5 7D           2 ld a,l
  62+ 94F6 FE C0            cp $c0
  63+ 94F8 D2 8A 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94FB
  65+ 94FB              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94FB
  67+ 94FB CD 88 99         call NextScan
  68+ 94FE EB               ex de,hl
  69+ 94FF
  70+ 94FF 73               ld (hl),e
  71+ 9500 23               inc hl
  72+ 9501 72               ld (hl),d
  73+ 9502 23               inc hl
  74+ 9503
  75+ 9503 EB               ex de,hl
  76+ 9504
  77+ 9504 CD 88 99         call NextScan
  78+ 9507 EB               ex de,hl
  79+ 9508
  80+ 9508 73               ld (hl),e
  81+ 9509 23               inc hl
  82+ 950A 72               ld (hl),d
  83+ 950B 23               inc hl
  84+ 950C
  85+ 950C EB               ex de,hl
  86+ 950D
  87+ 950D CD 88 99         call NextScan
  88+ 9510 EB               ex de,hl
  89+ 9511
  90+ 9511 73               ld (hl),e
  91+ 9512 23               inc hl
  92+ 9513 72               ld (hl),d
  93+ 9514 23               inc hl
  94+ 9515
  95+ 9515 EB               ex de,hl
  96+ 9516
  97+ 9516 CD 88 99         call NextScan
  98+ 9519 EB               ex de,hl
  99+ 951A
 100+ 951A 73               ld (hl),e
 101+ 951B 23               inc hl
 102+ 951C 72               ld (hl),d
 103+ 951D 23               inc hl
 104+ 951E
 105+ 951E EB               ex de,hl
 106+ 951F
 107+ 951F CD 88 99         call NextScan
 108+ 9522 EB               ex de,hl
 109+ 9523
 110+ 9523 73               ld (hl),e
 111+ 9524 23               inc hl
 112+ 9525 72               ld (hl),d
 113+ 9526 23               inc hl
 114+ 9527
 115+ 9527 EB               ex de,hl
 116+ 9528
 117+ 9528 CD 88 99         call NextScan
 118+ 952B EB               ex de,hl
 119+ 952C
 120+ 952C 73               ld (hl),e
 121+ 952D 23               inc hl
 122+ 952E 72               ld (hl),d
 123+ 952F 23               inc hl
 124+ 9530
 125+ 9530 EB               ex de,hl
 126+ 9531
 127+ 9531 CD 88 99         call NextScan
 128+ 9534 EB               ex de,hl
 129+ 9535
 130+ 9535 73               ld (hl),e
 131+ 9536 23               inc hl
 132+ 9537 72               ld (hl),d
 133+ 9538 23               inc hl
 134+ 9539
 135+ 9539 EB               ex de,hl
 136+ 953A
 137+ 953A CD 88 99         call NextScan
 138+ 953D EB               ex de,hl
 139+ 953E
 140+ 953E 73               ld (hl),e
 141+ 953F 23               inc hl
 142+ 9540 72               ld (hl),d
 143+ 9541 23               inc hl
 144+ 9542
 145+ 9542 EB               ex de,hl
 146+ 9543
 147+ 9543 CD 88 99         call NextScan
 148+ 9546 EB               ex de,hl
 149+ 9547
 150+ 9547 73               ld (hl),e
 151+ 9548 23               inc hl
 152+ 9549 72               ld (hl),d
 153+ 954A 23               inc hl
 154+ 954B
 155+ 954B EB               ex de,hl
 156+ 954C
 157+ 954C CD 88 99         call NextScan
 158+ 954F EB               ex de,hl
 159+ 9550
 160+ 9550 73               ld (hl),e
 161+ 9551 23               inc hl
 162+ 9552 72               ld (hl),d
 163+ 9553 23               inc hl
 164+ 9554
 165+ 9554 EB               ex de,hl
 166+ 9555
 167+ 9555 CD 88 99         call NextScan
 168+ 9558 EB               ex de,hl
 169+ 9559
 170+ 9559 73               ld (hl),e
 171+ 955A 23               inc hl
 172+ 955B 72               ld (hl),d
 173+ 955C 23               inc hl
 174+ 955D
 175+ 955D EB               ex de,hl
 176+ 955E
 177+ 955E CD 88 99         call NextScan
 178+ 9561 EB               ex de,hl
 179+ 9562
 180+ 9562 73               ld (hl),e
 181+ 9563 23               inc hl
 182+ 9564 72               ld (hl),d
 183+ 9565 23               inc hl
 184+ 9566
 185+ 9566 EB               ex de,hl
 186+ 9567
 187+ 9567 CD 88 99         call NextScan
 188+ 956A EB               ex de,hl
 189+ 956B
 190+ 956B 73               ld (hl),e
 191+ 956C 23               inc hl
 192+ 956D 72               ld (hl),d
 193+ 956E 23               inc hl
 194+ 956F
 195+ 956F EB               ex de,hl
 196+ 9570
 197+ 9570 CD 88 99         call NextScan
 198+ 9573 EB               ex de,hl
 199+ 9574
 200+ 9574 73               ld (hl),e
 201+ 9575 23               inc hl
 202+ 9576 72               ld (hl),d
 203+ 9577 23               inc hl
 204+ 9578
 205+ 9578 EB               ex de,hl
 206+ 9579
 207+ 9579 CD 88 99         call NextScan
 208+ 957C EB               ex de,hl
 209+ 957D
 210+ 957D 73               ld (hl),e
 211+ 957E 23               inc hl
 212+ 957F 72               ld (hl),d
 213+ 9580 23               inc hl
 214+ 9581
 215+ 9581              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9581
 217+ 9581 22 26 8C         ld (Scanlines_album_SP),hl
 218+ 9584
 219+ 9584              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 9584
 221+ 9584 08               ex af,af
 222+ 9585
 223+ 9585 F5               push af
 224+ 9586 E1               pop hl
 225+ 9587
 226+ 9587 36 10            ld (hl),16
 227+ 9589
 228+ 9589 C9               ret
 229+ 958A
 230+ 958A              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 958A
 232+ 958A              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 958A
 234+ 958A 3E 57            ld a,$57
 235+ 958C 94               sub h
 236+ 958D 47               ld b,a
 237+ 958E
 238+ 958E 3E DF            ld a,$df
 239+ 9590 BD               cp l
 240+ 9591 38 04            jr c,1F
 241+ 9593
 242+ 9593 3E 08            ld a,8
 243+ 9595 80               add b
 244+ 9596 47               ld b,a
 245+ 9597
 246+ 9597              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 9597              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 9597
 249+ 9597 48           1 ld c,b
 250+ 9598 0C               inc c
 251+ 9599
 252+ 9599 04               inc b
 253+ 959A 05               dec b
 254+ 959B 20 02            jr nz,3F
 255+ 959D
 256+ 959D 18 0B            jr 6F
 257+ 959F
 258+ 959F CD 88 99     3 call NextScan
 259+ 95A2 EB               ex de,hl
 260+ 95A3
 261+ 95A3 73               ld (hl),e
 262+ 95A4 23               inc hl
 263+ 95A5 72               ld (hl),d
 264+ 95A6 23               inc hl
 265+ 95A7
 266+ 95A7 EB               ex de,hl
 267+ 95A8 10 F5            djnz 3B
 268+ 95AA
 269+ 95AA ED 53 26 8C  6 ld (Scanlines_album_SP),de
 270+ 95AE
 271+ 95AE 08           5 ex af,af
 272+ 95AF F5               push af
 273+ 95B0 E1               pop hl
 274+ 95B1
 275+ 95B1 71               ld (hl),c
 276+ 95B2
 277+ 95B2 C9               ret
 278+ 95B3
# file closed: Genera_datos_de_impresion.asm
2116  95B3              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95B3              ; -----------------------------------------------------------------------------
   2+ 95B3              ;
   3+ 95B3              ;   11/03/24
   4+ 95B3              ;
   5+ 95B3
   6+ 95B3              Pinta_Sprites
   7+ 95B3
   8+ 95B3              ;    ld hl,(Scanlines_album_SP)
   9+ 95B3              ;    call Extrae_address
  10+ 95B3
  11+ 95B3              ;    inc h
  12+ 95B3              ;    dec h
  13+ 95B3              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95B3
  15+ 95B3 ED 73 06 8C      ld (Stack),sp
  16+ 95B7
  17+ 95B7 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95B8              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95B8 2C               inc l
  20+ 95B9 2C               inc l
  21+ 95BA
  22+ 95BA 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95BB
  24+ 95BB 2C               inc l
  25+ 95BC F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95BD
  27+ 95BD              ;   Seleccionamos rutina de impresión:
  28+ 95BD
  29+ 95BD 3E 10            ld a,16
  30+ 95BF B8               cp b
  31+ 95C0 C2 BC 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95C3
  33+ 95C3              ;   Rutinas:
  34+ 95C3
  35+ 95C3              Pinta_rapido    ;   1520 t/states.
  36+ 95C3
  37+ 95C3 E1               pop hl
  38+ 95C4
  39+ 95C4 1A               ld a,(de)
  40+ 95C5 AE               xor (hl)
  41+ 95C6 77               ld (hl),a
  42+ 95C7 2C               inc l
  43+ 95C8 1C               inc e
  44+ 95C9 1A               ld a,(de)
  45+ 95CA AE               xor (hl)
  46+ 95CB 77               ld (hl),a
  47+ 95CC 2C               inc l
  48+ 95CD 1C               inc e
  49+ 95CE 1A               ld a,(de)
  50+ 95CF AE               xor (hl)
  51+ 95D0 77               ld (hl),a
  52+ 95D1 13               inc de
  53+ 95D2
  54+ 95D2 E1               pop hl
  55+ 95D3
  56+ 95D3 1A               ld a,(de)
  57+ 95D4 AE               xor (hl)
  58+ 95D5 77               ld (hl),a
  59+ 95D6 2C               inc l
  60+ 95D7 1C               inc e
  61+ 95D8 1A               ld a,(de)
  62+ 95D9 AE               xor (hl)
  63+ 95DA 77               ld (hl),a
  64+ 95DB 2C               inc l
  65+ 95DC 1C               inc e
  66+ 95DD 1A               ld a,(de)
  67+ 95DE AE               xor (hl)
  68+ 95DF 77               ld (hl),a
  69+ 95E0 13               inc de
  70+ 95E1
  71+ 95E1 E1               pop hl
  72+ 95E2
  73+ 95E2 1A               ld a,(de)
  74+ 95E3 AE               xor (hl)
  75+ 95E4 77               ld (hl),a
  76+ 95E5 2C               inc l
  77+ 95E6 1C               inc e
  78+ 95E7 1A               ld a,(de)
  79+ 95E8 AE               xor (hl)
  80+ 95E9 77               ld (hl),a
  81+ 95EA 2C               inc l
  82+ 95EB 1C               inc e
  83+ 95EC 1A               ld a,(de)
  84+ 95ED AE               xor (hl)
  85+ 95EE 77               ld (hl),a
  86+ 95EF 13               inc de
  87+ 95F0
  88+ 95F0 E1               pop hl
  89+ 95F1
  90+ 95F1 1A               ld a,(de)
  91+ 95F2 AE               xor (hl)
  92+ 95F3 77               ld (hl),a
  93+ 95F4 2C               inc l
  94+ 95F5 1C               inc e
  95+ 95F6 1A               ld a,(de)
  96+ 95F7 AE               xor (hl)
  97+ 95F8 77               ld (hl),a
  98+ 95F9 2C               inc l
  99+ 95FA 1C               inc e
 100+ 95FB 1A               ld a,(de)
 101+ 95FC AE               xor (hl)
 102+ 95FD 77               ld (hl),a
 103+ 95FE 13               inc de
 104+ 95FF
 105+ 95FF E1               pop hl
 106+ 9600
 107+ 9600 1A               ld a,(de)
 108+ 9601 AE               xor (hl)
 109+ 9602 77               ld (hl),a
 110+ 9603 2C               inc l
 111+ 9604 1C               inc e
 112+ 9605 1A               ld a,(de)
 113+ 9606 AE               xor (hl)
 114+ 9607 77               ld (hl),a
 115+ 9608 2C               inc l
 116+ 9609 1C               inc e
 117+ 960A 1A               ld a,(de)
 118+ 960B AE               xor (hl)
 119+ 960C 77               ld (hl),a
 120+ 960D 13               inc de
 121+ 960E
 122+ 960E E1               pop hl
 123+ 960F
 124+ 960F 1A               ld a,(de)
 125+ 9610 AE               xor (hl)
 126+ 9611 77               ld (hl),a
 127+ 9612 2C               inc l
 128+ 9613 1C               inc e
 129+ 9614 1A               ld a,(de)
 130+ 9615 AE               xor (hl)
 131+ 9616 77               ld (hl),a
 132+ 9617 2C               inc l
 133+ 9618 1C               inc e
 134+ 9619 1A               ld a,(de)
 135+ 961A AE               xor (hl)
 136+ 961B 77               ld (hl),a
 137+ 961C 13               inc de
 138+ 961D
 139+ 961D E1               pop hl
 140+ 961E
 141+ 961E 1A               ld a,(de)
 142+ 961F AE               xor (hl)
 143+ 9620 77               ld (hl),a
 144+ 9621 2C               inc l
 145+ 9622 1C               inc e
 146+ 9623 1A               ld a,(de)
 147+ 9624 AE               xor (hl)
 148+ 9625 77               ld (hl),a
 149+ 9626 2C               inc l
 150+ 9627 1C               inc e
 151+ 9628 1A               ld a,(de)
 152+ 9629 AE               xor (hl)
 153+ 962A 77               ld (hl),a
 154+ 962B 13               inc de
 155+ 962C
 156+ 962C E1               pop hl
 157+ 962D
 158+ 962D 1A               ld a,(de)
 159+ 962E AE               xor (hl)
 160+ 962F 77               ld (hl),a
 161+ 9630 2C               inc l
 162+ 9631 1C               inc e
 163+ 9632 1A               ld a,(de)
 164+ 9633 AE               xor (hl)
 165+ 9634 77               ld (hl),a
 166+ 9635 2C               inc l
 167+ 9636 1C               inc e
 168+ 9637 1A               ld a,(de)
 169+ 9638 AE               xor (hl)
 170+ 9639 77               ld (hl),a
 171+ 963A 13               inc de
 172+ 963B
 173+ 963B E1               pop hl
 174+ 963C
 175+ 963C 1A               ld a,(de)
 176+ 963D AE               xor (hl)
 177+ 963E 77               ld (hl),a
 178+ 963F 2C               inc l
 179+ 9640 1C               inc e
 180+ 9641 1A               ld a,(de)
 181+ 9642 AE               xor (hl)
 182+ 9643 77               ld (hl),a
 183+ 9644 2C               inc l
 184+ 9645 1C               inc e
 185+ 9646 1A               ld a,(de)
 186+ 9647 AE               xor (hl)
 187+ 9648 77               ld (hl),a
 188+ 9649 13               inc de
 189+ 964A
 190+ 964A E1               pop hl
 191+ 964B
 192+ 964B 1A               ld a,(de)
 193+ 964C AE               xor (hl)
 194+ 964D 77               ld (hl),a
 195+ 964E 2C               inc l
 196+ 964F 1C               inc e
 197+ 9650 1A               ld a,(de)
 198+ 9651 AE               xor (hl)
 199+ 9652 77               ld (hl),a
 200+ 9653 2C               inc l
 201+ 9654 1C               inc e
 202+ 9655 1A               ld a,(de)
 203+ 9656 AE               xor (hl)
 204+ 9657 77               ld (hl),a
 205+ 9658 13               inc de
 206+ 9659
 207+ 9659 E1               pop hl
 208+ 965A
 209+ 965A 1A               ld a,(de)
 210+ 965B AE               xor (hl)
 211+ 965C 77               ld (hl),a
 212+ 965D 2C               inc l
 213+ 965E 1C               inc e
 214+ 965F 1A               ld a,(de)
 215+ 9660 AE               xor (hl)
 216+ 9661 77               ld (hl),a
 217+ 9662 2C               inc l
 218+ 9663 1C               inc e
 219+ 9664 1A               ld a,(de)
 220+ 9665 AE               xor (hl)
 221+ 9666 77               ld (hl),a
 222+ 9667 13               inc de
 223+ 9668
 224+ 9668 E1               pop hl
 225+ 9669
 226+ 9669 1A               ld a,(de)
 227+ 966A AE               xor (hl)
 228+ 966B 77               ld (hl),a
 229+ 966C 2C               inc l
 230+ 966D 1C               inc e
 231+ 966E 1A               ld a,(de)
 232+ 966F AE               xor (hl)
 233+ 9670 77               ld (hl),a
 234+ 9671 2C               inc l
 235+ 9672 1C               inc e
 236+ 9673 1A               ld a,(de)
 237+ 9674 AE               xor (hl)
 238+ 9675 77               ld (hl),a
 239+ 9676 13               inc de
 240+ 9677
 241+ 9677 E1               pop hl
 242+ 9678
 243+ 9678 1A               ld a,(de)
 244+ 9679 AE               xor (hl)
 245+ 967A 77               ld (hl),a
 246+ 967B 2C               inc l
 247+ 967C 1C               inc e
 248+ 967D 1A               ld a,(de)
 249+ 967E AE               xor (hl)
 250+ 967F 77               ld (hl),a
 251+ 9680 2C               inc l
 252+ 9681 1C               inc e
 253+ 9682 1A               ld a,(de)
 254+ 9683 AE               xor (hl)
 255+ 9684 77               ld (hl),a
 256+ 9685 13               inc de
 257+ 9686
 258+ 9686 E1               pop hl
 259+ 9687
 260+ 9687 1A               ld a,(de)
 261+ 9688 AE               xor (hl)
 262+ 9689 77               ld (hl),a
 263+ 968A 2C               inc l
 264+ 968B 1C               inc e
 265+ 968C 1A               ld a,(de)
 266+ 968D AE               xor (hl)
 267+ 968E 77               ld (hl),a
 268+ 968F 2C               inc l
 269+ 9690 1C               inc e
 270+ 9691 1A               ld a,(de)
 271+ 9692 AE               xor (hl)
 272+ 9693 77               ld (hl),a
 273+ 9694 13               inc de
 274+ 9695
 275+ 9695 E1               pop hl
 276+ 9696
 277+ 9696 1A               ld a,(de)
 278+ 9697 AE               xor (hl)
 279+ 9698 77               ld (hl),a
 280+ 9699 2C               inc l
 281+ 969A 1C               inc e
 282+ 969B 1A               ld a,(de)
 283+ 969C AE               xor (hl)
 284+ 969D 77               ld (hl),a
 285+ 969E 2C               inc l
 286+ 969F 1C               inc e
 287+ 96A0 1A               ld a,(de)
 288+ 96A1 AE               xor (hl)
 289+ 96A2 77               ld (hl),a
 290+ 96A3 13               inc de
 291+ 96A4
 292+ 96A4 E1               pop hl
 293+ 96A5
 294+ 96A5 1A               ld a,(de)
 295+ 96A6 AE               xor (hl)
 296+ 96A7 77               ld (hl),a
 297+ 96A8 2C               inc l
 298+ 96A9 1C               inc e
 299+ 96AA 1A               ld a,(de)
 300+ 96AB AE               xor (hl)
 301+ 96AC 77               ld (hl),a
 302+ 96AD 2C               inc l
 303+ 96AE 1C               inc e
 304+ 96AF 1A               ld a,(de)
 305+ 96B0 AE               xor (hl)
 306+ 96B1 77               ld (hl),a
 307+ 96B2 13               inc de
 308+ 96B3
 309+ 96B3 ED 73 26 8C      ld (Scanlines_album_SP),sp
 310+ 96B7 ED 7B 06 8C      ld sp,(Stack)
 311+ 96BB C9               ret
 312+ 96BC
 313+ 96BC              Pinta_lento
 314+ 96BC
 315+ 96BC E1           1 pop hl
 316+ 96BD
 317+ 96BD 1A               ld a,(de)
 318+ 96BE AE               xor (hl)
 319+ 96BF 77               ld (hl),a
 320+ 96C0 2C               inc l
 321+ 96C1 1C               inc e
 322+ 96C2 1A               ld a,(de)
 323+ 96C3 AE               xor (hl)
 324+ 96C4 77               ld (hl),a
 325+ 96C5 2C               inc l
 326+ 96C6 1C               inc e
 327+ 96C7 1A               ld a,(de)
 328+ 96C8 AE               xor (hl)
 329+ 96C9 77               ld (hl),a
 330+ 96CA 13               inc de
 331+ 96CB
 332+ 96CB 10 EF            djnz 1B
 333+ 96CD
 334+ 96CD ED 73 26 8C      ld (Scanlines_album_SP),sp
 335+ 96D1 ED 7B 06 8C      ld sp,(Stack)
 336+ 96D5 C9               ret
# file closed: Pinta_Sprites.asm
2117  96D6              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96D6              ; ******************************************************************************************************************************************************************************************
   2+ 96D6              ;
   3+ 96D6              ; 26/06/23
   4+ 96D6              ;
   5+ 96D6              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96D6
   7+ 96D6              Draw
   8+ 96D6
   9+ 96D6 CD 7C 99     	call Prepara_draw
  10+ 96D9 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96DA A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96DB 28 05        	jr z,2F
  13+ 96DD
  14+ 96DD 3A D8 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96E0 18 0C        	jr 1F
  16+ 96E2
  17+ 96E2 2A D6 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96E5 22 C9 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96E8 CD 74 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96EB              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96EB
  22+ 96EB CD 1B 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96EE
  24+ 96EE 3A C6 8B     1 ld a,(Ctrl_0)
  25+ 96F1 CB 6F        	bit 5,a
  26+ 96F3 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96F5
  28+ 96F5 CD 0A 97     	call Comprueba_limite_horizontal
  29+ 96F8 CD 9A 97     	call Comprueba_limite_vertical
  30+ 96FB
  31+ 96FB              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96FB              ; -----------------------
  33+ 96FB              ; -----------------------
  34+ 96FB              ; -----------------------
  35+ 96FB
  36+ 96FB CD F0 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96FE CD 27 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9701
  39+ 9701 3A C6 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9704 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9706 32 C6 8B     	ld (Ctrl_0),a
  42+ 9709
  43+ 9709 C9           	ret
  44+ 970A
  45+ 970A              ; *******************************************************************************************************************************************************************************************
  46+ 970A              ;	21/01/23
  47+ 970A              ;
  48+ 970A              ; 	Comprueba_limite_horizontal.
  49+ 970A              ;
  50+ 970A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 970A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 970A              ;
  53+ 970A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 970A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 970A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 970A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 970A
  58+ 970A
  59+ 970A
  60+ 970A 3A C6 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 970D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 970F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9711 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9713 32 C6 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9716 18 09            jr 6F
  66+ 9718 CB 5F        1 bit 3,a
  67+ 971A 28 0A            jr z,2F
  68+ 971C E6 F7            and $f7
  69+ 971E 32 C6 8B         ld (Ctrl_0),a
  70+ 9721 CD 74 98     6 call Inicializacion
  71+ 9724 18 5B            jr 5F
  72+ 9726 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9727
  74+ 9727              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9727              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9727
  77+ 9727 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9728 2A DA 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 972B CD 74 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 972E 67           	ld h,a
  81+ 972F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9730 CD 74 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9733 67           	ld h,a
  84+ 9734 A7           	and a
  85+ 9735 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9737 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9738 3A D8 8B     	ld a,(Cuad_objeto)
  88+ 973B FE 02        	cp 2
  89+ 973D 38 1E        	jr c,3F
  90+ 973F 28 1C        	jr z,3F
  91+ 9741 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9742 28 23            jr z,7F
  93+ 9744 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9746 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9748 E1           	pop hl
  96+ 9749
  97+ 9749              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9749              ; _para indicar con E="2" en caso necesario.
  99+ 9749
 100+ 9749 E5               push hl
 101+ 974A C5               push bc
 102+ 974B CD 74 94     	call calcula_tercio
 103+ 974E FE 01        	cp 1
 104+ 9750 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9752 CD 82 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9755 28 26            jr z,9F
 107+ 9757 38 24            jr c,9F
 108+ 9759 1E 00        11 ld e,0
 109+ 975B 18 22            jr 8F
 110+ 975D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 975E 28 07        	jr z, 7F
 112+ 9760 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9762 1E 00         	ld e,0
 114+ 9764 E1           	pop hl
 115+ 9765 18 04        	jr 4F
 116+ 9767 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9769 18 15            jr 10F
 118+ 976B
 119+ 976B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 976B              ; _para indicar con E="2" en caso necesario.
 121+ 976B
 122+ 976B E5           4 push hl
 123+ 976C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 976D CD 74 94     	call calcula_tercio
 125+ 9770 FE 01        	cp 1
 126+ 9772 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9774 CD 82 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9777 28 04            jr z,9F
 129+ 9779 30 02            jr nc,9F
 130+ 977B 18 02        	jr 8F
 131+ 977D 1E 02        9 ld e,2
 132+ 977F C1           8 pop bc
 133+ 9780 E1           10 pop hl
 134+ 9781 C9           5 ret
 135+ 9782
 136+ 9782              ; --------------------
 137+ 9782              ;
 138+ 9782              ; 25/08/22
 139+ 9782
 140+ 9782 CD 74 94     Comprueba_centro call calcula_tercio
 141+ 9785 67               ld h,a
 142+ 9786 08           	ex af,af
 143+ 9787 FE 02        	cp 2
 144+ 9789 38 07        	jr c,1F
 145+ 978B 28 05        	jr z,1F
 146+ 978D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9790 18 03        	jr 2F
 148+ 9792 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9795 08           2 ex af,af
 150+ 9796 A7               and a
 151+ 9797 ED 42            sbc hl,bc
 152+ 9799 C9               ret
 153+ 979A
 154+ 979A              ; *********************************************************************************************************************************************************************************************
 155+ 979A              ;
 156+ 979A              ;   16/8/22
 157+ 979A              ;
 158+ 979A              ;	Comprueba_limite_vertical
 159+ 979A              ;
 160+ 979A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 979A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 979A              ;
 163+ 979A
 164+ 979A 2A C9 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 979D 7D           	ld a,l
 166+ 979E E6 1F        	and $1F
 167+ 97A0 57           	ld d,a
 168+ 97A1 3A DC 8B     	ld a,(Limite_vertical)
 169+ 97A4 BA           	cp d 											; Límite - Posición.
 170+ 97A5 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97A6 3A D8 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97A9 CB 47        	bit 0,a
 173+ 97AB 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97AD
 175+ 97AD              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97AD
 177+ 97AD 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97AE 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97B0
 180+ 97B0              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97B0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97B0
 183+ 97B0 3A BA 8B         ld a,(Coordenada_X)
 184+ 97B3 16 0F            ld d,Centro_izquierda
 185+ 97B5 A7               and a
 186+ 97B6 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97B7 28 1E            jr z,3F
 188+ 97B9 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97BB              ;                                                    ; _salimos sin modificar nada.
 190+ 97BB 18 0E            jr 2F
 191+ 97BD 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97BE 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97C0
 194+ 97C0              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97C0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97C0
 197+ 97C0 3A BA 8B         ld a,(Coordenada_X)
 198+ 97C3 16 10            ld d,Centro_derecha
 199+ 97C5 A7               and a
 200+ 97C6 92               sub d
 201+ 97C7 28 0E            jr z,3F
 202+ 97C9 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97CB              ;                                                    ; _salimos sin modificar nada.
 204+ 97CB CB 43        2 bit 0,e
 205+ 97CD 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97CF C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97D0 CD 64 98         call Modificaccionne
 208+ 97D3 C1           	pop bc
 209+ 97D4 CD 74 98         call Inicializacion
 210+ 97D7 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97D8
 212+ 97D8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97D8
 214+ 97D8 C5           4 push bc
 215+ 97D9 01 C8 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97DC 0A           	ld a,(bc)
 217+ 97DD 3D           	dec a
 218+ 97DE 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97DF 7D           	ld a,l
 220+ 97E0 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97E1 CB 47        	bit 0,a
 222+ 97E3 28 03        	jr z,5F
 223+ 97E5 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97E6 18 2E        	jr 7F
 225+ 97E8
 226+ 97E8              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97E8
 228+ 97E8 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97E9 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97EA 3A C6 8B     	ld a,(Ctrl_0)
 231+ 97ED CB 4F        	bit 1,a
 232+ 97EF 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97F1 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97F2
 235+ 97F2              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97F2
 237+ 97F2 1C               inc e
 238+ 97F3 1D               dec e
 239+ 97F4 20 07            jr nz,12F
 240+ 97F6 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97F7 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97F8 22 C9 8B     	ld (Posicion_actual),hl
 243+ 97FB 18 44        13 jr 9F
 244+ 97FD CB 43        12 bit 0,e
 245+ 97FF 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9801              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9801 C1           	pop bc
 248+ 9802 18 D3        	jr 3B
 249+ 9804 80           14 add b
 250+ 9805 6F               ld l,a
 251+ 9806 22 C9 8B     	ld (Posicion_actual),hl
 252+ 9809 CD 64 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 980C 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 980E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9810 32 C6 8B         ld (Ctrl_0),a
 256+ 9813 F1           	pop af
 257+ 9814 18 2B        	jr 9F
 258+ 9816
 259+ 9816              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9816
 261+ 9816 F5           7 push af
 262+ 9817 3A C6 8B     	ld a,(Ctrl_0)
 263+ 981A CB 47        	bit 0,a
 264+ 981C 20 1D        	jr nz,8F
 265+ 981E F1           	pop af
 266+ 981F
 267+ 981F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 981F
 269+ 981F 1C           	inc e
 270+ 9820 1D               dec e
 271+ 9821 20 07            jr nz,10F
 272+ 9823 90           	sub b
 273+ 9824 6F               ld l,a
 274+ 9825 22 C9 8B     	ld (Posicion_actual),hl
 275+ 9828 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 982A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 982A CB 43        10 bit 0,e
 278+ 982C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 982E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 982E C1           	pop bc
 281+ 982F 18 A6        	jr 3B
 282+ 9831 90           16 sub b
 283+ 9832 6F               ld l,a
 284+ 9833 22 C9 8B     	ld (Posicion_actual),hl
 285+ 9836 CD 64 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9839 18 06            jr 9F
 287+ 983B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 983D 32 C6 8B         ld (Ctrl_0),a
 289+ 9840 F1           	pop af
 290+ 9841 C1           9 pop bc
 291+ 9842 1E 00        	ld e,0
 292+ 9844 CD 74 98         call Inicializacion
 293+ 9847 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9848 08           	ex af,af
 295+ 9849 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 984A 18 8B            jr 3B
 297+ 984C
 298+ 984C              ; --------------------
 299+ 984C
 300+ 984C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 984E CD 97 99     1 call PreviousScan
 302+ 9851 10 FB            djnz 1B
 303+ 9853 22 C9 8B     	ld (Posicion_actual),hl
 304+ 9856 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9857 C9           	ret
 306+ 9858
 307+ 9858              ; --------------------
 308+ 9858
 309+ 9858 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 985A CD 88 99     1 call NextScan
 311+ 985D 10 FB            djnz 1B
 312+ 985F 22 C9 8B     	ld (Posicion_actual),hl
 313+ 9862 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9863 C9           	ret
 315+ 9864
 316+ 9864              ; --------------------
 317+ 9864              ;
 318+ 9864              ;	22/01/23
 319+ 9864              ;
 320+ 9864              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9864              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9864              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9864
 324+ 9864
 325+ 9864              Modificaccionne
 326+ 9864
 327+ 9864 3A D8 8B     	ld a,(Cuad_objeto)
 328+ 9867 FE 02        	cp 2
 329+ 9869 CC 4C 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 986C DC 4C 98         call c,Modifica_Pos_actual
 331+ 986F C8           	ret z
 332+ 9870 CD 58 98         call Modifica_Pos_actual2
 333+ 9873 C9               ret
 334+ 9874
 335+ 9874              ; *************************************************************************************************************************************************************************************************
 336+ 9874              ;
 337+ 9874              ;	13/8/22
 338+ 9874              ;
 339+ 9874              ;	Inicializacion
 340+ 9874              ;
 341+ 9874              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9874              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9874              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9874              ;
 345+ 9874              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9874              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9874              ;	_ desaparece/aparece.
 348+ 9874
 349+ 9874              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9874              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9874              ;
 352+ 9874              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9874              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9874              ; 		   [E] ="0"
 355+ 9874
 356+ 9874              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9874
 358+ 9874 CD 74 94     Inicializacion call calcula_tercio
 359+ 9877 28 36        	jr z,primit
 360+ 9879 E6 02        	and 2
 361+ 987B 20 07        	jr nz,segmit
 362+ 987D 7D           	ld a,l
 363+ 987E FE 7F        	cp $7f
 364+ 9880 38 2D        	jr c,primit
 365+ 9882 28 2B        	jr z,primit
 366+ 9884 CD EA 98     segmit call column
 367+ 9887 38 13        	jr c,tercuad
 368+ 9889 3E 04        cuarcuad ld a,4
 369+ 988B 32 D8 8B     	ld (Cuad_objeto),a
 370+ 988E 21 20 48     	ld hl,$4820
 371+ 9891 22 DA 8B     	ld (Limite_horizontal),hl
 372+ 9894 21 DC 8B     	ld hl,Limite_vertical
 373+ 9897 36 0D        	ld (hl),$0d
 374+ 9899 08           	ex af,af
 375+ 989A 18 3C        	jr 1F
 376+ 989C              tercuad
 377+ 989C 3E 03        	ld a,3
 378+ 989E 32 D8 8B     	ld (Cuad_objeto),a
 379+ 98A1 21 20 48     	ld hl,$4820
 380+ 98A4 22 DA 8B     	ld (Limite_horizontal),hl
 381+ 98A7 21 DC 8B     	ld hl,Limite_vertical
 382+ 98AA 36 12        	ld (hl),$12
 383+ 98AC 08           	ex af,af
 384+ 98AD 18 29        	jr 1F
 385+ 98AF CD EA 98     primit call column
 386+ 98B2 38 13        	jr c, primcuad
 387+ 98B4              segcuad
 388+ 98B4 3E 02        	ld a,2
 389+ 98B6 32 D8 8B     	ld (Cuad_objeto),a
 390+ 98B9 21 C0 4F     	ld hl,$4fc0
 391+ 98BC 22 DA 8B     	ld (Limite_horizontal),hl
 392+ 98BF 21 DC 8B     	ld hl,Limite_vertical
 393+ 98C2 36 0D        	ld (hl),$0d
 394+ 98C4 08           	ex af,af
 395+ 98C5 18 11        	jr 1F
 396+ 98C7              primcuad
 397+ 98C7 3E 01        	ld a,1
 398+ 98C9 32 D8 8B     	ld (Cuad_objeto),a
 399+ 98CC 21 C0 4F     	ld hl,$4fc0
 400+ 98CF 22 DA 8B     	ld (Limite_horizontal),hl
 401+ 98D2 21 DC 8B     	ld hl,Limite_vertical
 402+ 98D5 36 12        	ld (hl),$12
 403+ 98D7 08           	ex af,af
 404+ 98D8
 405+ 98D8 C5           1 push bc
 406+ 98D9 E5           	push hl
 407+ 98DA D5           	push de
 408+ 98DB
 409+ 98DB 2A C9 8B     	ld hl,(Posicion_actual)
 410+ 98DE CD 92 94     	call Genera_coordenadas
 411+ 98E1
 412+ 98E1 D1           	pop de
 413+ 98E2 E1           	pop hl
 414+ 98E3 C1           	pop bc
 415+ 98E4
 416+ 98E4 21 C6 8B     	ld hl,Ctrl_0
 417+ 98E7 CB EE        	set 5,(hl)
 418+ 98E9 C9           	ret
 419+ 98EA
 420+ 98EA              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98EA
 422+ 98EA              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98EA              ;
 424+ 98EA              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98EA
 426+ 98EA 7D           column ld a,l
 427+ 98EB E6 1F        	and $1f
 428+ 98ED FE 10         	cp $10
 429+ 98EF C9            	ret
 430+ 98F0
 431+ 98F0              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98F0              ;
 433+ 98F0              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98F0              ;
 435+ 98F0              ; 14/12/22
 436+ 98F0              ;
 437+ 98F0              ;	Modifica: A y BC.
 438+ 98F0
 439+ 98F0 3A D8 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98F3 E6 01        	and 1
 441+ 98F5 28 17        	jr z,1F
 442+ 98F7
 443+ 98F7              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98F7
 445+ 98F7 3A BA 8B     	ld a,(Coordenada_X)
 446+ 98FA 47           	ld b,a
 447+ 98FB 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98FC 79           	ld a,c
 449+ 98FD 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98FE 38 08        	jr c,2F
 451+ 9900 47           	ld b,a
 452+ 9901 79           	ld a,c
 453+ 9902 90           	sub b
 454+ 9903 32 D9 8B     	ld (Columnas),a
 455+ 9906 18 1B        	jr 4F
 456+ 9908 79           2 ld a,c
 457+ 9909 32 D9 8B     	ld (Columnas),a
 458+ 990C 18 15        	jr 4F
 459+ 990E
 460+ 990E              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 990E
 462+ 990E 3A BA 8B     1 ld a,(Coordenada_X)
 463+ 9911 81           	add c
 464+ 9912 3D           	dec a
 465+ 9913 D6 1F        	sub $1f
 466+ 9915 38 08        	jr c,3F
 467+ 9917 47           	ld b,a
 468+ 9918 79           	ld a,c
 469+ 9919 90           	sub b
 470+ 991A 32 D9 8B     	ld (Columnas),a
 471+ 991D 18 04        	jr 4F
 472+ 991F 79           3 ld a,c
 473+ 9920 32 D9 8B     	ld (Columnas),a
 474+ 9923 D9           4 exx
 475+ 9924 4F           	ld c,a
 476+ 9925 D9           	exx
 477+ 9926 C9            ret
 478+ 9927
 479+ 9927              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9927              ;
 481+ 9927              ;   19/7/23
 482+ 9927              ;
 483+ 9927              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9927              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9927              ;
 486+ 9927              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9927              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9927              ;
 489+ 9927              ;	DESTRUYE: HL,B Y A.
 490+ 9927
 491+ 9927 3A D8 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 992A FE 02        	cp 2
 493+ 992C 38 18        	jr c,1F
 494+ 992E 28 16        	jr z,1F
 495+ 9930 E6 01        	and 1
 496+ 9932 28 0D        	jr z,3F
 497+ 9934
 498+ 9934              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9934
 500+ 9934 CD 70 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9937
 502+ 9937 7D           9 ld a,l
 503+ 9938 E6 1F        	and $1f
 504+ 993A 28 2A        	jr z,7F
 505+ 993C 2B           	dec hl
 506+ 993D 10 F8        	djnz 9B
 507+ 993F 18 25        	jr 7F
 508+ 9941
 509+ 9941              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9941
 511+ 9941 2A C9 8B     3 ld hl,(Posicion_actual)
 512+ 9944 18 20        	jr 7F
 513+ 9946
 514+ 9946 28 14        1 jr z,2F
 515+ 9948
 516+ 9948              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9948
 518+ 9948 CD 70 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 994B
 520+ 994B 7D           4 ld a,l
 521+ 994C E6 1F        	and $1f
 522+ 994E 28 03        	jr z,6F
 523+ 9950 2B           	dec hl
 524+ 9951 10 F8        	djnz 4B
 525+ 9953 06 0F        6 ld b,15
 526+ 9955 CD 97 99     5 call PreviousScan
 527+ 9958 10 FB        	djnz 5B
 528+ 995A 18 0A        	jr 7F
 529+ 995C
 530+ 995C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 995C
 532+ 995C CD 70 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 995F 06 0F        	ld b,15
 534+ 9961 CD 97 99     8 call PreviousScan
 535+ 9964 10 FB        	djnz 8B
 536+ 9966
 537+ 9966 E5           7 push hl
 538+ 9967 DD E1        	pop ix
 539+ 9969
 540+ 9969 2A CB 8B     	ld hl,(Puntero_objeto)
 541+ 996C E5           	push hl
 542+ 996D FD E1        	pop iy
 543+ 996F
 544+ 996F C9           	ret
 545+ 9970
 546+ 9970              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9970              ;
 548+ 9970              ;	2/1/23
 549+ 9970              ;
 550+ 9970              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9970              ;
 552+ 9970              ;	Tras esta rutina tenemos:
 553+ 9970              ;
 554+ 9970              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9970              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9970              ;
 557+ 9970              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9970
 559+ 9970 2A C9 8B     Operandos ld hl,(Posicion_actual)
 560+ 9973 3A D9 8B     	ld a,(Columnas)
 561+ 9976 3D           	dec a
 562+ 9977 20 01        	jr nz,1F
 563+ 9979 3C           	inc a
 564+ 997A 47           1 ld b,a
 565+ 997B C9           	ret
 566+ 997C
 567+ 997C              ; --------------------------------------------------------------------------------------------------------------------
 568+ 997C              ;
 569+ 997C              ;	Prepara_draw
 570+ 997C              ;
 571+ 997C              ;	Es una rutina de carga.
 572+ 997C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 997C              ;
 574+ 997C              ;	FUNCIONAMIENTO:
 575+ 997C              ;
 576+ 997C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 997C              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 997C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 997C              ;
 580+ 997C              ;	DESTRUYE:
 581+ 997C              ;
 582+ 997C              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 997C
 584+ 997C 21 C7 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 997F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9980 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9981 4E           	ld c,(hl)
 588+ 9982 2A C9 8B     	ld hl,(Posicion_actual)
 589+ 9985 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9987 C9           	ret
 591+ 9988
 592+ 9988              ;----------------------------------------------------------------------------------------------------------------
 593+ 9988              ;
 594+ 9988              ;	5/08/22
 595+ 9988              ;
 596+ 9988              ;   NextScan.
 597+ 9988              ;
 598+ 9988              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9988              ;
 600+ 9988              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9988              ;
 602+ 9988              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9988              ;
 604+ 9988              ;       DESTRUIDOS: AF y HL !!!
 605+ 9988              ;
 606+ 9988              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9988              ;
 608+ 9988
 609+ 9988 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9989 7C               ld a,h
 611+ 998A E6 07            and 7
 612+ 998C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 998D
 614+ 998D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 998E C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9990 6F               ld l,a
 617+ 9991 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9992
 619+ 9992 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9993 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9995 67               ld h,a
 622+ 9996 C9               ret
 623+ 9997
 624+ 9997              ;----------------------------------------------------------------------------------------------------------------
 625+ 9997              ;
 626+ 9997              ;	5/08/22
 627+ 9997              ;
 628+ 9997              ;   PreviousScan.
 629+ 9997              ;
 630+ 9997              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9997              ;
 632+ 9997              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9997              ;
 634+ 9997              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9997              ;
 636+ 9997              ;       DESTRUIDOS: AF y HL !!!
 637+ 9997              ;
 638+ 9997              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9997              ;
 640+ 9997
 641+ 9997 7C           PreviousScan ld a,h
 642+ 9998 25               dec h               ; Dec H.
 643+ 9999 E6 07            and 7
 644+ 999B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 999C
 646+ 999C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 999D D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 999F 6F               ld l,a
 649+ 99A0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99A1
 651+ 99A1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99A2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99A4 67               ld h,a
 654+ 99A5 C9               ret
 655+ 99A6
 656+ 99A6
 657+ 99A6
 658+ 99A6
 659+ 99A6
 660+ 99A6
 661+ 99A6
 662+ 99A6
 663+ 99A6
 664+ 99A6
 665+ 99A6
 666+ 99A6
# file closed: Draw_XOR.asm
2118  99A6              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99A6
   2+ 99A6              ; ******************************************************************************************************************************************************************************************
   3+ 99A6              ;
   4+ 99A6              ;   20/05/23
   5+ 99A6              ;
   6+ 99A6              ;	Recompone_posicion_inicio
   7+ 99A6              ;
   8+ 99A6              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99A6              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99A6              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99A6              ;	_ a una u otra rutina.
  12+ 99A6
  13+ 99A6              Recompone_posicion_inicio
  14+ 99A6
  15+ 99A6 2A D6 8B     	ld hl,(Posicion_inicio)
  16+ 99A9 7D           	ld a,l
  17+ 99AA E6 1F        	and $1f
  18+ 99AC 28 16        	jr z,1F
  19+ 99AE
  20+ 99AE FE 1F        	cp $1f
  21+ 99B0 28 0D        	jr z,3F
  22+ 99B2
  23+ 99B2 21 C5 8B     	ld hl,Ctrl_2
  24+ 99B5 CB C6        	set 0,(hl)
  25+ 99B7 2A CB 8B     	ld hl,(Puntero_objeto)
  26+ 99BA 22 F7 8B     	ld (Repone_puntero_objeto),hl
  27+ 99BD 18 08        	jr 2F
  28+ 99BF
  29+ 99BF CD 6D 9B     3 call Mov_left
  30+ 99C2 18 03        	jr 2F
  31+ 99C4
  32+ 99C4 CD 4A 9A     1 call Mov_right
  33+ 99C7 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99CA 22 CB 8B     	ld (Puntero_objeto),hl
  35+ 99CD C9           	ret
  36+ 99CE
  37+ 99CE              ; ******************************************************************************************************************************************************************************************
  38+ 99CE              ;
  39+ 99CE              ;   27/05/23
  40+ 99CE              ;
  41+ 99CE              ;	Mov_down
  42+ 99CE              ;
  43+ 99CE              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99CE              ;
  45+ 99CE              ;
  46+ 99CE              Mov_down
  47+ 99CE
  48+ 99CE CD 38 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99D1              ;																	; _ repone (Puntero_objeto).
  50+ 99D1 21 C6 8B     	ld hl,Ctrl_0
  51+ 99D4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99D6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99D6              ; 																	; _ en el caso de que no lo haya.
  54+ 99D6 3A E1 8B     	ld a,(Vel_down)
  55+ 99D9 47           	ld b,a
  56+ 99DA 2A C9 8B         ld hl,(Posicion_actual)
  57+ 99DD CD 74 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99E0 E6 02        	and 2
  59+ 99E2 28 17        	jr z,1F
  60+ 99E4
  61+ 99E4              ; Nos encontramos en el último tercio de pantalla.
  62+ 99E4              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99E4
  64+ 99E4 7C           	ld a,h
  65+ 99E5 FE 57        	cp $57
  66+ 99E7 20 12        	jr nz,1F
  67+ 99E9
  68+ 99E9 7D           	ld a,l
  69+ 99EA C6 20        	add $20
  70+ 99EC 30 0D        	jr nc,1F
  71+ 99EE
  72+ 99EE              ; ------------------------------
  73+ 99EE              ;
  74+ 99EE              ;	12/01/24
  75+ 99EE
  76+ 99EE              ;	call Reaparece_arriba
  77+ 99EE CD FA 9C     	call Reinicio
  78+ 99F1
  79+ 99F1              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99F1
  81+ 99F1 3A 2C 8C     	ld a,(Ctrl_3)
  82+ 99F4 CB CF        	set 1,a
  83+ 99F6 32 2C 8C     	ld (Ctrl_3),a
  84+ 99F9
  85+ 99F9 18 08        	jr 3F
  86+ 99FB              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99FB              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99FB              ; ------------------------------
  89+ 99FB
  90+ 99FB CD 88 99     1 call NextScan
  91+ 99FE 22 C9 8B     	ld (Posicion_actual),hl
  92+ 9A01 10 DA            djnz 2B
  93+ 9A03 CD 92 94     3 call Genera_coordenadas
  94+ 9A06 C9           	ret
  95+ 9A07
  96+ 9A07              ; ******************************************************************************************************************************************************************************************
  97+ 9A07              ;
  98+ 9A07              ;   27/05/23
  99+ 9A07              ;
 100+ 9A07              ;	Mov_up
 101+ 9A07              ;
 102+ 9A07              ; 	Mueve el Sprite hacia arriba.
 103+ 9A07              ;
 104+ 9A07              ;
 105+ 9A07              Mov_up
 106+ 9A07
 107+ 9A07 CD 38 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A0A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A0A 21 C6 8B     	ld hl,Ctrl_0
 110+ 9A0D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A0F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A0F              ; 																		; _ en el caso de que no lo haya.
 113+ 9A0F 3A E0 8B     	ld a,(Vel_up)
 114+ 9A12 47           	ld b,a
 115+ 9A13 2A C9 8B     	ld hl,(Posicion_actual)
 116+ 9A16 CD 74 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A19 A7           	and a
 118+ 9A1A 20 10        	jr nz,1F
 119+ 9A1C
 120+ 9A1C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A1C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A1C
 123+ 9A1C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A1D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A1F 20 0B            jr nz,1F
 126+ 9A21 7D               ld a,l
 127+ 9A22 D6 20            sub $20
 128+ 9A24 30 06            jr nc,1F
 129+ 9A26 25               dec h
 130+ 9A27
 131+ 9A27              ; -----------------------------
 132+ 9A27 CD DB 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A2A              ;	call Reinicio
 134+ 9A2A              ; -----------------------------
 135+ 9A2A
 136+ 9A2A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A2C CD 97 99     1 call PreviousScan
 138+ 9A2F 22 C9 8B     	ld (Posicion_actual),hl
 139+ 9A32 10 E2            djnz 3B
 140+ 9A34 CD 92 94     2 call Genera_coordenadas
 141+ 9A37 C9           	ret
 142+ 9A38
 143+ 9A38              ; -----------------------------
 144+ 9A38              ;
 145+ 9A38              ;	27/5/23
 146+ 9A38              ;
 147+ 9A38              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A38              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A38              ;
 150+ 9A38              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A38              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A38              ;
 153+ 9A38              ;	Modifica: A y (Puntero_objeto).
 154+ 9A38
 155+ 9A38 3A C5 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A3B CB 47        	bit 0,a
 157+ 9A3D C8           	ret z
 158+ 9A3E CB 87        	res 0,a
 159+ 9A40 32 C5 8B     	ld (Ctrl_2),a
 160+ 9A43 2A F7 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A46 22 CB 8B     	ld (Puntero_objeto),hl
 162+ 9A49 C9           	ret
 163+ 9A4A
 164+ 9A4A              ; ******************************************************************************************************************************************************************************************
 165+ 9A4A              ;
 166+ 9A4A              ;	19/10/22
 167+ 9A4A              ;
 168+ 9A4A              ;	Mov_right.
 169+ 9A4A              ;
 170+ 9A4A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A4A              ;
 172+ 9A4A
 173+ 9A4A 3A C6 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A4D CB 77        	bit 6,a
 175+ 9A4F 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A51
 177+ 9A51 CD 89 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A54 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A55
 180+ 9A55 21 C6 8B     	ld hl,Ctrl_0
 181+ 9A58 CB E6        	set 4,(hl)
 182+ 9A5A 18 52        	jr 8F
 183+ 9A5C
 184+ 9A5C 21 C6 8B     10 ld hl,Ctrl_0
 185+ 9A5F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A61              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A61              ; 																	; _ en el caso de que no lo haya.
 188+ 9A61 3A BA 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A64 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A66 20 46        	jr nz,8F
 191+ 9A68
 192+ 9A68 3A CD 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A6B A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A6C 28 40        	jr z,8F
 195+ 9A6E
 196+ 9A6E              ; ---------- ---------- ----------
 197+ 9A6E              ;
 198+ 9A6E              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A6E
 200+ 9A6E 3A DF 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A71 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A73 28 11        	jr z,1F
 203+ 9A75 38 06        	jr c,6F
 204+ 9A77 FE 04        	cp 4
 205+ 9A79 28 14        	jr z,7F
 206+ 9A7B 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A7D
 208+ 9A7D              ; ---------- ---------- ----------
 209+ 9A7D              ;
 210+ 9A7D              ; Perfiles de velocidad
 211+ 9A7D              ;
 212+ 9A7D
 213+ 9A7D 3A CD 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A80 FE FE        	cp $fe
 215+ 9A82 20 2A        	jr nz,8F
 216+ 9A84 18 10        	jr 3F
 217+ 9A86 3A CD 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A89 FE FD        	cp $fd
 219+ 9A8B 20 21        	jr nz,8F
 220+ 9A8D 18 07        	jr 3F
 221+ 9A8F 3A CD 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A92 FE FB        	cp $fb
 223+ 9A94 20 18        	jr nz,8F
 224+ 9A96
 225+ 9A96              ; ---------- ---------- ----------
 226+ 9A96
 227+ 9A96              3
 228+ 9A96 CD C9 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A99              ;	call Reinicio
 230+ 9A99
 231+ 9A99              ; ---------- ---------- ----------
 232+ 9A99              ;
 233+ 9A99              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A99
 235+ 9A99 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A9B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A9C CD B5 9A     	call DESPLZ_DER
 238+ 9A9F C1           	pop bc
 239+ 9AA0 10 F9        	djnz 5B
 240+ 9AA2 2A C9 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AA5 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AA6 22 C9 8B     	ld (Posicion_actual),hl
 243+ 9AA9 CD 92 94     	call Genera_coordenadas
 244+ 9AAC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AAE
 246+ 9AAE              ; ---------- ---------- ----------
 247+ 9AAE
 248+ 9AAE 2A C9 8B     8 ld hl,(Posicion_actual)
 249+ 9AB1 CD B5 9A     	call DESPLZ_DER
 250+ 9AB4 C9           2 ret
 251+ 9AB5
 252+ 9AB5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AB5              ;
 254+ 9AB5              ;	22/9/22
 255+ 9AB5              ;
 256+ 9AB5
 257+ 9AB5 CD C4 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AB8 CD 10 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9ABB CD 39 9B         call Ciclo_completo
 260+ 9ABE 21 C6 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AC1 CB FE        	set 7,(hl)
 262+ 9AC3 C9           	ret
 263+ 9AC4
 264+ 9AC4              ; ******************************************************************************************************************************************************************************************
 265+ 9AC4              ;	15/02/23
 266+ 9AC4              ;
 267+ 9AC4
 268+ 9AC4 3A DF 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AC7 47           	ld b,a
 270+ 9AC8 2A D2 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9ACB 23           1 inc hl
 272+ 9ACC 23           	inc hl
 273+ 9ACD 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9ACF 22 D2 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AD2 CD 73 90     	call Extrae_address
 276+ 9AD5 22 CB 8B     	ld (Puntero_objeto),hl
 277+ 9AD8
 278+ 9AD8              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AD8
 280+ 9AD8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AD8              ; Cuántos movimientos hemos hecho ??
 282+ 9AD8              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AD8
 284+ 9AD8 2A CE 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9ADB EB           	ex de,hl
 286+ 9ADC A7           	and a
 287+ 9ADD ED 52        	sbc hl,de
 288+ 9ADF CB 3D        	srl l
 289+ 9AE1 3E 08        6 ld a,8
 290+ 9AE3 95           	sub l
 291+ 9AE4 30 1E        	jr nc,3F
 292+ 9AE6
 293+ 9AE6              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AE6              ; B="0".
 295+ 9AE6
 296+ 9AE6 04           4 inc b
 297+ 9AE7 3C           	inc a
 298+ 9AE8 20 FC        	jr nz,4B
 299+ 9AEA 78           	ld a,b
 300+ 9AEB 08           	ex af,af
 301+ 9AEC 2A CE 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AEF 23           5 inc hl
 303+ 9AF0 23           	inc hl
 304+ 9AF1 10 FC        	djnz 5B
 305+ 9AF3 22 D2 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AF6 CD 73 90     	call Extrae_address
 307+ 9AF9 22 CB 8B     	ld (Puntero_objeto),hl
 308+ 9AFC
 309+ 9AFC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AFC              ; _(Posicion_actual).
 311+ 9AFC
 312+ 9AFC 21 C9 8B     	ld hl,Posicion_actual
 313+ 9AFF 34           	inc (hl)
 314+ 9B00 08               ex af,af
 315+ 9B01 6F           	ld l,a
 316+ 9B02 18 DD        	jr 6B
 317+ 9B04
 318+ 9B04              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B04
 320+ 9B04 47           3 ld b,a
 321+ 9B05 2A D0 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B08 23           2 inc hl
 323+ 9B09 23           	inc hl
 324+ 9B0A 10 FC        	djnz 2B
 325+ 9B0C 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B0F C9           8 ret
 327+ 9B10
 328+ 9B10              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B10              ;
 330+ 9B10              ;	24/7/22
 331+ 9B10              ;
 332+ 9B10              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B10              ;
 334+ 9B10              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B10              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B10              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B10
 338+ 9B10 3A CD 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B13 A7           	and a
 340+ 9B14 20 1F        	jr nz,1F
 341+ 9B16 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B18 32 CD 8B         ld (CTRL_DESPLZ),a
 343+ 9B1B
 344+ 9B1B 21 C8 8B     	ld hl,Columns
 345+ 9B1E 34           	inc (hl)
 346+ 9B1F 3A D8 8B     	ld a,(Cuad_objeto)
 347+ 9B22 E6 01        	and 1
 348+ 9B24 28 0F        	jr z,1F
 349+ 9B26 2A C9 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B29 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B2A 22 C9 8B     	ld (Posicion_actual),hl
 352+ 9B2D CD 92 94     	call Genera_coordenadas
 353+ 9B30 CD 95 9C     	call Inc_CTRL_DESPLZ
 354+ 9B33 18 03        	jr 2F
 355+ 9B35 CD 95 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B38 C9           2 ret
 357+ 9B39
 358+ 9B39              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B39              ;
 360+ 9B39              ;	24/7/22
 361+ 9B39              ;
 362+ 9B39              ;	Ciclo_completo.
 363+ 9B39              ;
 364+ 9B39              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B39              ;
 366+ 9B39              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B39              ; 	Decrementamos (Columns).
 368+ 9B39              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B39              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B39
 371+ 9B39
 372+ 9B39 3A CD 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B3C FE FF        	cp $ff
 374+ 9B3E 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B40 E6 F0        	and $f0
 376+ 9B42 20 28        	jr nz,3F
 377+ 9B44
 378+ 9B44              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B44
 380+ 9B44 3A CD 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B47 47           	ld b,a
 382+ 9B48 3E F8        	ld a,$f8
 383+ 9B4A 80           	add b
 384+ 9B4B 32 CD 8B     	ld (CTRL_DESPLZ),a
 385+ 9B4E 18 1C        	jr 3F
 386+ 9B50 21 C8 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B53 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B54 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B55 32 CD 8B     	ld (CTRL_DESPLZ),a
 390+ 9B58 3A D8 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B5B E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B5D 20 0A        	jr nz,2F
 393+ 9B5F 2A C9 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B62 23           	inc hl
 395+ 9B63 22 C9 8B     	ld (Posicion_actual),hl
 396+ 9B66 CD 92 94     	call Genera_coordenadas
 397+ 9B69
 398+ 9B69              ; Inicia el puntero de Sprite.
 399+ 9B69
 400+ 9B69 CD 88 90     2 call Inicia_puntero_objeto_der
 401+ 9B6C C9           3 ret
 402+ 9B6D
 403+ 9B6D              ; ******************************************************************************************************************************************************************************************
 404+ 9B6D              ;
 405+ 9B6D              ;	15/02/23
 406+ 9B6D              ;
 407+ 9B6D              ;	Mov_left.
 408+ 9B6D              ;
 409+ 9B6D              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B6D              ;
 411+ 9B6D              Mov_left
 412+ 9B6D
 413+ 9B6D 21 C6 8B     	ld hl,Ctrl_0
 414+ 9B70 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B72              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B72              ; 																	; _ en el caso de que no lo haya.
 417+ 9B72 3A C6 8B     	ld a,(Ctrl_0)
 418+ 9B75 CB 77        	bit 6,a
 419+ 9B77 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B79
 421+ 9B79 CD 8F 9C     	call Stop_Amadeus_left
 422+ 9B7C C8           	ret z
 423+ 9B7D 20 4A        	jr nz,8F
 424+ 9B7F
 425+ 9B7F 3A BA 8B     11 ld a,(Coordenada_X)
 426+ 9B82 A7           	and a
 427+ 9B83 20 44        	jr nz,8F
 428+ 9B85
 429+ 9B85 3A CD 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B88 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B89 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B8B
 433+ 9B8B              ; ---------- ---------- ----------
 434+ 9B8B
 435+ 9B8B 3A DE 8B     	ld a,(Vel_left)
 436+ 9B8E FE 02        	cp 2
 437+ 9B90 28 0F        	jr z,1F
 438+ 9B92 38 04        	jr c,6F
 439+ 9B94 FE 04        	cp 4
 440+ 9B96 28 12        	jr z,7F
 441+ 9B98
 442+ 9B98              ; ---------- ---------- ----------
 443+ 9B98
 444+ 9B98 3A CD 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B9B FE F8        	cp $f8
 446+ 9B9D 20 2A        	jr nz,8F
 447+ 9B9F 18 10        	jr 4F
 448+ 9BA1 3A CD 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BA4 FE F9        	cp $f9
 450+ 9BA6 20 21        	jr nz,8F
 451+ 9BA8 18 07        	jr 4F
 452+ 9BAA 3A CD 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BAD FE FB        	cp $fb
 454+ 9BAF 20 18        	jr nz,8F
 455+ 9BB1
 456+ 9BB1              ; ---------- ---------- ----------
 457+ 9BB1
 458+ 9BB1              4
 459+ 9BB1 CD B7 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BB4              ;	call Reinicio
 461+ 9BB4
 462+ 9BB4              ; ---------- ---------- ----------
 463+ 9BB4
 464+ 9BB4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BB6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BB7
 467+ 9BB7              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BB7              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BB7
 470+ 9BB7 CD D0 9B     	call DESPLZ_IZQ
 471+ 9BBA C1           	pop bc
 472+ 9BBB 10 F9        	djnz 5B
 473+ 9BBD 2A C9 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BC0 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BC1 22 C9 8B     	ld (Posicion_actual),hl
 476+ 9BC4 CD 92 94     	call Genera_coordenadas
 477+ 9BC7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BC9
 479+ 9BC9              ; ---------- ---------- ----------
 480+ 9BC9
 481+ 9BC9              ; Movemos, no hay recolocación.
 482+ 9BC9
 483+ 9BC9 2A C9 8B     8 ld hl,(Posicion_actual)
 484+ 9BCC CD D0 9B     	call DESPLZ_IZQ
 485+ 9BCF C9           2 ret
 486+ 9BD0
 487+ 9BD0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BD0              ;
 489+ 9BD0              ;	22/9/22
 490+ 9BD0
 491+ 9BD0              DESPLZ_IZQ
 492+ 9BD0
 493+ 9BD0 CD DF 9B     	call Desplaza_izquierda
 494+ 9BD3 CD 2B 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BD6 CD 53 9C     	call Ciclo_completo_2
 496+ 9BD9 21 C6 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BDC CB BE        	res 7,(hl)
 498+ 9BDE C9           	ret
 499+ 9BDF
 500+ 9BDF              Desplaza_izquierda
 501+ 9BDF
 502+ 9BDF 3A DE 8B     	ld a,(Vel_left)
 503+ 9BE2 47           	ld b,a
 504+ 9BE3 2A D4 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BE6 23           1 inc hl
 506+ 9BE7 23           	inc hl
 507+ 9BE8 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BEA 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BED CD 73 90     	call Extrae_address
 510+ 9BF0 22 CB 8B     	ld (Puntero_objeto),hl
 511+ 9BF3
 512+ 9BF3              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BF3
 514+ 9BF3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BF3              ; Cuántos movimientos hemos hecho ??
 516+ 9BF3              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BF3
 518+ 9BF3 2A D0 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BF6 EB           	ex de,hl
 520+ 9BF7 A7           	and a
 521+ 9BF8 ED 52        	sbc hl,de
 522+ 9BFA CB 3D        	srl l
 523+ 9BFC 3E 08        6 ld a,8
 524+ 9BFE 95           	sub l
 525+ 9BFF 30 1E        	jr nc,3F
 526+ 9C01
 527+ 9C01              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C01              ; B="0".
 529+ 9C01
 530+ 9C01 04           4 inc b
 531+ 9C02 3C           	inc a
 532+ 9C03 20 FC        	jr nz,4B
 533+ 9C05 78           	ld a,b
 534+ 9C06 08           	ex af,af
 535+ 9C07 2A D0 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C0A 23           5 inc hl
 537+ 9C0B 23           	inc hl
 538+ 9C0C 10 FC        	djnz 5B
 539+ 9C0E 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C11 CD 73 90     	call Extrae_address
 541+ 9C14 22 CB 8B     	ld (Puntero_objeto),hl
 542+ 9C17
 543+ 9C17              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C17              ; _(Posicion_actual).
 545+ 9C17
 546+ 9C17 21 C9 8B     	ld hl,Posicion_actual
 547+ 9C1A 35           	dec (hl)
 548+ 9C1B 08           	ex af,af
 549+ 9C1C 6F           	ld l,a
 550+ 9C1D 18 DD        	jr 6B
 551+ 9C1F
 552+ 9C1F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C1F
 554+ 9C1F 47           3 ld b,a
 555+ 9C20 2A CE 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C23 23           2 inc hl
 557+ 9C24 23           	inc hl
 558+ 9C25 10 FC        	djnz 2B
 559+ 9C27 22 D2 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C2A C9           8 ret
 561+ 9C2B
 562+ 9C2B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C2B              ;
 564+ 9C2B              ;	modifica_parametros_1er_DESPLZ
 565+ 9C2B              ;
 566+ 9C2B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C2B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C2B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C2B
 570+ 9C2B 3A CD 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C2E A7           	and a
 572+ 9C2F 20 1E        	jr nz,1F
 573+ 9C31 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C32 32 CD 8B         ld (CTRL_DESPLZ),a
 575+ 9C35 21 C8 8B     	ld hl,Columns
 576+ 9C38 34           	inc (hl)
 577+ 9C39 3A D8 8B     	ld a,(Cuad_objeto)
 578+ 9C3C E6 01        	and 1
 579+ 9C3E 20 0F        	jr nz,1F
 580+ 9C40 2A C9 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C43 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C44 22 C9 8B     	ld (Posicion_actual),hl
 583+ 9C47 CD 92 94     	call Genera_coordenadas
 584+ 9C4A CD A6 9C     	call Dec_CTRL_DESPLZ
 585+ 9C4D 18 03        	jr 2F
 586+ 9C4F CD A6 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C52 C9           2 ret
 588+ 9C53
 589+ 9C53              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C53
 591+ 9C53 3A CD 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C56 FE F7        	cp $f7
 593+ 9C58 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C5A 30 2C        	jr nc,3F
 595+ 9C5C
 596+ 9C5C              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C5C
 598+ 9C5C 06 00        	ld b,0
 599+ 9C5E 04           4 inc b
 600+ 9C5F 3C           	inc a
 601+ 9C60 FE F7        	cp $f7
 602+ 9C62 20 FA        	jr nz,4B
 603+ 9C64 3E FF        	ld a,$ff
 604+ 9C66 90           	sub b
 605+ 9C67 32 CD 8B     	ld (CTRL_DESPLZ),a
 606+ 9C6A 18 1C        	jr 3F
 607+ 9C6C
 608+ 9C6C              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C6C
 610+ 9C6C 21 C8 8B     1 ld hl,Columns
 611+ 9C6F 35           	dec (hl)
 612+ 9C70 AF           	xor a
 613+ 9C71 32 CD 8B     	ld (CTRL_DESPLZ),a
 614+ 9C74 3A D8 8B     	ld a,(Cuad_objeto)
 615+ 9C77 E6 01        	and 1
 616+ 9C79 28 0A        	jr z,2F
 617+ 9C7B 2A C9 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C7E 2B           	dec hl
 619+ 9C7F 22 C9 8B     	ld (Posicion_actual),hl
 620+ 9C82 CD 92 94     	call Genera_coordenadas
 621+ 9C85
 622+ 9C85              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C85
 624+ 9C85 CD 9B 90     2 call Inicia_puntero_objeto_izq
 625+ 9C88 C9           3 ret
 626+ 9C89
 627+ 9C89              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C89              ;
 629+ 9C89              ;	19/10/22
 630+ 9C89              ;
 631+ 9C89              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C89              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C89
 634+ 9C89 3A BA 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C8C FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C8E C9           	ret
 637+ 9C8F
 638+ 9C8F              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C8F              ;
 640+ 9C8F              ;	19/10/22
 641+ 9C8F              ;
 642+ 9C8F              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C8F              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C8F
 645+ 9C8F 3A BA 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C92 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C94 C9           	ret
 648+ 9C95
 649+ 9C95              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C95              ;
 651+ 9C95              ;	24/7/22
 652+ 9C95              ;
 653+ 9C95              ;	Inc_CTRL_DESPLZ
 654+ 9C95              ;
 655+ 9C95              ;
 656+ 9C95              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C95
 658+ 9C95 21 CD 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C98 3A DF 8B     	ld a,(Vel_right)
 660+ 9C9B A7           	and a
 661+ 9C9C 28 06        	jr z,1F
 662+ 9C9E 47           	ld b,a
 663+ 9C9F 34           3 inc (hl)
 664+ 9CA0 10 FD        	djnz 3B
 665+ 9CA2 18 01        	jr 2F
 666+ 9CA4 34           1 inc (hl)
 667+ 9CA5 C9           2 ret
 668+ 9CA6
 669+ 9CA6              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CA6              ;
 671+ 9CA6              ;	5/2/23
 672+ 9CA6              ;
 673+ 9CA6              ;	Dec_CTRL_DESPLZ
 674+ 9CA6              ;
 675+ 9CA6              ;
 676+ 9CA6              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CA6
 678+ 9CA6 21 CD 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CA9 3A DE 8B     	ld a,(Vel_left)
 680+ 9CAC A7           	and a
 681+ 9CAD 28 06        	jr z,1F
 682+ 9CAF 47           	ld b,a
 683+ 9CB0 35           3 dec (hl)
 684+ 9CB1 10 FD        	djnz 3B
 685+ 9CB3 18 01        	jr 2F
 686+ 9CB5 35           1 dec (hl)
 687+ 9CB6 C9           2 ret
 688+ 9CB7
 689+ 9CB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CB7
 691+ 9CB7 2A C9 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CBA 01 1F 00     	ld bc,31
 693+ 9CBD A7           	and a
 694+ 9CBE ED 4A        	adc hl,bc
 695+ 9CC0 22 C9 8B     	ld (Posicion_actual),hl
 696+ 9CC3 21 C6 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CC6 CB C6        	set 0,(hl)
 698+ 9CC8 C9           	ret
 699+ 9CC9
 700+ 9CC9              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CC9
 702+ 9CC9 2A C9 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CCC 01 1F 00     	ld bc,31
 704+ 9CCF A7           	and a
 705+ 9CD0 ED 42        	sbc hl,bc
 706+ 9CD2 22 C9 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CD5 21 C6 8B     	ld hl,Ctrl_0
 708+ 9CD8 CB CE        	set 1,(hl)
 709+ 9CDA C9           	ret
 710+ 9CDB
 711+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CDB
 713+ 9CDB 24           Reaparece_abajo inc h
 714+ 9CDC 01 E0 17     	ld bc,$17e0
 715+ 9CDF A7           	and a
 716+ 9CE0 ED 4A        	adc hl,bc
 717+ 9CE2 22 C9 8B     	ld (Posicion_actual),hl
 718+ 9CE5 21 C6 8B     	ld hl,Ctrl_0
 719+ 9CE8 CB D6        	set 2,(hl)
 720+ 9CEA C9           	ret
 721+ 9CEB
 722+ 9CEB              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CEB
 724+ 9CEB 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CEE A7           	and a
 726+ 9CEF ED 42        	sbc hl,bc
 727+ 9CF1 22 C9 8B     	ld (Posicion_actual),hl
 728+ 9CF4 21 C6 8B     	ld hl,Ctrl_0
 729+ 9CF7 CB DE        	set 3,(hl)
 730+ 9CF9 C9           	ret
 731+ 9CFA
 732+ 9CFA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CFA              ;
 734+ 9CFA              ;	15/07/23
 735+ 9CFA
 736+ 9CFA              Reinicio
 737+ 9CFA
 738+ 9CFA              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CFA
 740+ 9CFA AF           	xor a
 741+ 9CFB 21 EE 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CFE CD 1C 9D     	call Limpia_contenido_hl
 743+ 9D01
 744+ 9D01 21 C9 8B     	ld hl,Posicion_actual
 745+ 9D04 CD 1C 9D     	call Limpia_contenido_hl
 746+ 9D07
 747+ 9D07 CD 74 92     	call Inicializa_Puntero_indice_mov
 748+ 9D0A CD 1B 9E     	call Inicia_Puntero_mov
 749+ 9D0D
 750+ 9D0D 21 F0 8B     	ld hl,Incrementa_puntero
 751+ 9D10 06 05        	ld b,5
 752+ 9D12 77           1 ld (hl),a
 753+ 9D13 23           	inc hl
 754+ 9D14 10 FC        	djnz 1B
 755+ 9D16
 756+ 9D16 21 C5 8B     	ld hl,Ctrl_2
 757+ 9D19 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D1B
 759+ 9D1B C9           	ret
 760+ 9D1C
 761+ 9D1C 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D1D 23           	inc hl
 763+ 9D1E 77           	ld (hl),a
 764+ 9D1F C9           	ret
 765+ 9D20
 766+ 9D20              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D20              ;
 768+ 9D20              ;	18/6/24
 769+ 9D20              ;
 770+ 9D20
 771+ 9D20              Amadeus_a_izquierda
 772+ 9D20
 773+ 9D20              ;	Actualiza contador de movimientos.
 774+ 9D20
 775+ 9D20 21 77 89     	ld hl,Comm_Amadeus
 776+ 9D23 35           	dec (hl)
 777+ 9D24 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D26
 779+ 9D26 2A 75 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D29 2B           	dec hl
 781+ 9D2A 2B           	dec hl
 782+ 9D2B 2B           	dec hl
 783+ 9D2C 2B           	dec hl
 784+ 9D2D 22 75 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D30
 786+ 9D30 21 2C 8C     	ld hl,Ctrl_3
 787+ 9D33 CB EE        	set 5,(hl)
 788+ 9D35
 789+ 9D35 C9           	ret
 790+ 9D36
 791+ 9D36 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D37 C9           	ret
 793+ 9D38
 794+ 9D38
 795+ 9D38              Amadeus_a_derecha
 796+ 9D38
 797+ 9D38              ;	Actualiza contador de movimientos.
 798+ 9D38
 799+ 9D38 21 77 89     	ld hl,Comm_Amadeus
 800+ 9D3B 34           	inc (hl)
 801+ 9D3C 3E 7A        	ld a,$7a
 802+ 9D3E BE           	cp (hl)
 803+ 9D3F 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D41
 805+ 9D41 2A 75 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D44 23           	inc hl
 807+ 9D45 23           	inc hl
 808+ 9D46 23           	inc hl
 809+ 9D47 23           	inc hl
 810+ 9D48 22 75 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D4B
 812+ 9D4B 21 2C 8C     	ld hl,Ctrl_3
 813+ 9D4E CB EE        	set 5,(hl)
 814+ 9D50 C9           	ret
 815+ 9D51
 816+ 9D51 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D52 C9           	ret
# file closed: Direcciones.asm
2119  9D53              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D53              ; ----- ----- ----- ----- -----
   2+ 9D53              ;
   3+ 9D53              ;   28/12/23
   4+ 9D53
   5+ 9D53              Movimiento
   6+ 9D53
   7+ 9D53              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D53
   9+ 9D53 3A C5 8B         ld a,(Ctrl_2)
  10+ 9D56 CB 57            bit 2,a
  11+ 9D58 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D5A
  13+ 9D5A 2A EC 8B         ld hl,(Puntero_mov)
  14+ 9D5D 7E               ld a,(hl)
  15+ 9D5E
  16+ 9D5E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D5E
  18+ 9D5E              Inicia_desplazamiento.
  19+ 9D5E
  20+ 9D5E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D5E
  22+ 9D5E CD 51 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D61
  24+ 9D61              ; Iniciamos (Repetimos_mov).
  25+ 9D61
  26+ 9D61 7E               ld a,(hl)
  27+ 9D62 E6 0F            and $0f
  28+ 9D64 32 F2 8B         ld (Repetimos_desplazamiento),a
  29+ 9D67 32 F3 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D6A
  31+ 9D6A              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D6A
  33+ 9D6A 23               inc hl
  34+ 9D6B 7E               ld a,(hl)
  35+ 9D6C 32 F5 8B         ld (Cola_de_desplazamiento),a
  36+ 9D6F 2B               dec hl
  37+ 9D70
  38+ 9D70 21 C5 8B         ld hl,Ctrl_2
  39+ 9D73 CB D6            set 2,(hl)
  40+ 9D75
  41+ 9D75              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D75              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D75
  44+ 9D75              Desplazamiento_iniciado
  45+ 9D75
  46+ 9D75 CD 25 9E         call Aplica_desplazamiento
  47+ 9D78
  48+ 9D78              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D78
  50+ 9D78 3A 2C 8C         ld a,(Ctrl_3)
  51+ 9D7B CB 4F            bit 1,a
  52+ 9D7D C0               ret nz
  53+ 9D7E
  54+ 9D7E 21 F2 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D81 35               dec (hl)
  56+ 9D82 C0               ret nz
  57+ 9D83
  58+ 9D83              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D83              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D83              ; Analiza (Cola_de_desplazamiento).
  61+ 9D83
  62+ 9D83 3A F5 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D86 A7               and a
  64+ 9D87 CC 7A 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D8A 28 30            jr z,Reinicia_el_movimiento
  66+ 9D8C
  67+ 9D8C FE FF            cp $ff
  68+ 9D8E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D90
  70+ 9D90 FE FE            cp $fe
  71+ 9D92 CC FF 9D         call z,Fijamos_bucle
  72+ 9D95 28 25            jr z,Reinicia_el_movimiento
  73+ 9D97
  74+ 9D97 FE FD            cp $fd
  75+ 9D99 20 11            jr nz,1F
  76+ 9D9B
  77+ 9D9B              ; ---
  78+ 9D9B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D9B
  80+ 9D9B 3A C5 8B         ld a,(Ctrl_2)
  81+ 9D9E CB 5F            bit 3,a
  82+ 9DA0 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DA2
  84+ 9DA2              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DA2
  86+ 9DA2 21 C5 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DA5 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DA7
  89+ 9DA7 CD 10 9E         call Inicia_Repetimos_movimiento
  90+ 9DAA 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DAC              ; ---
  92+ 9DAC
  93+ 9DAC FE 01        1 cp 1
  94+ 9DAE CA E9 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DB1
  96+ 9DB1 3D               dec a
  97+ 9DB2 32 F5 8B         ld (Cola_de_desplazamiento),a
  98+ 9DB5
  99+ 9DB5 3A F3 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DB8 32 F2 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DBB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DBB C9               ret
 103+ 9DBC
 104+ 9DBC              Reinicia_el_movimiento
 105+ 9DBC
 106+ 9DBC 3A C5 8B         ld a,(Ctrl_2)
 107+ 9DBF CB 5F            bit 3,a
 108+ 9DC1 28 1B            jr z,2F
 109+ 9DC3
 110+ 9DC3              ; (Cola_de_desplazamiento)="254".
 111+ 9DC3
 112+ 9DC3 21 F4 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DC6 35               dec (hl)
 114+ 9DC7 20 15            jr nz,2F
 115+ 9DC9
 116+ 9DC9              ; Fin de las repeticiones del último movimiento.
 117+ 9DC9
 118+ 9DC9 21 C5 8B         ld hl,Ctrl_2
 119+ 9DCC CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DCE
 121+ 9DCE 2A EC 8B         ld hl,(Puntero_mov)
 122+ 9DD1 23               inc hl
 123+ 9DD2 23               inc hl
 124+ 9DD3 23               inc hl
 125+ 9DD4 22 EC 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DD7              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DD7 7E               ld a,(hl)
 128+ 9DD8 32 F5 8B         ld (Cola_de_desplazamiento),a
 129+ 9DDB
 130+ 9DDB C3 83 9D         jp Cola
 131+ 9DDE
 132+ 9DDE CD 1B 9E     2 call Inicia_Puntero_mov
 133+ 9DE1
 134+ 9DE1 21 C5 8B         ld hl,Ctrl_2
 135+ 9DE4 CB 96            res 2,(hl)
 136+ 9DE6
 137+ 9DE6 C3 53 9D         jp Movimiento
 138+ 9DE9
 139+ 9DE9              Siguiente_desplazamiento
 140+ 9DE9
 141+ 9DE9              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DE9              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DE9
 144+ 9DE9 21 C5 8B         ld hl,Ctrl_2
 145+ 9DEC CB 96            res 2,(hl)
 146+ 9DEE
 147+ 9DEE 2A EC 8B         ld hl,(Puntero_mov)
 148+ 9DF1 23               inc hl
 149+ 9DF2 23               inc hl
 150+ 9DF3 22 EC 8B         ld (Puntero_mov),hl
 151+ 9DF6
 152+ 9DF6 7E               ld a,(hl)
 153+ 9DF7 A7               and a
 154+ 9DF8 CC 7A 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DFB CA BC 9D         jp z,Reinicia_el_movimiento
 156+ 9DFE
 157+ 9DFE C9               ret
 158+ 9DFF
 159+ 9DFF              ; Subrutinas -----------------------------------------
 160+ 9DFF              ; ---------- --------- --------- ---------- ----------
 161+ 9DFF              ;
 162+ 9DFF              ;   24/07/23
 163+ 9DFF              ;
 164+ 9DFF              ;   Fijamos_bucle
 165+ 9DFF              ;
 166+ 9DFF              ;
 167+ 9DFF
 168+ 9DFF              Fijamos_bucle
 169+ 9DFF
 170+ 9DFF 3A F0 8B         ld a,(Incrementa_puntero)
 171+ 9E02 3C               inc a
 172+ 9E03 32 F1 8B         ld (Incrementa_puntero_backup),a
 173+ 9E06
 174+ 9E06 CD 7A 9E         call Incrementa_Puntero_indice_mov
 175+ 9E09 2A EA 8B         ld hl,(Puntero_indice_mov)
 176+ 9E0C 22 EE 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E0F C9               ret
 178+ 9E10
 179+ 9E10              ; ---------- --------- --------- ---------- ----------
 180+ 9E10              ;
 181+ 9E10              ;   07/7/23
 182+ 9E10              ;
 183+ 9E10              ;   Inicia_Repetimos_movimiento
 184+ 9E10              ;
 185+ 9E10              ;
 186+ 9E10
 187+ 9E10              Inicia_Repetimos_movimiento
 188+ 9E10
 189+ 9E10              ; Iniciamos (Repetimos_movimiento).
 190+ 9E10
 191+ 9E10 DD 2A EC 8B      ld ix,(Puntero_mov)
 192+ 9E14 DD 7E 02         ld a,(ix+2)
 193+ 9E17 32 F4 8B         ld (Repetimos_movimiento),a
 194+ 9E1A
 195+ 9E1A C9               ret
 196+ 9E1B
 197+ 9E1B              ; ---------- --------- --------- ---------- ----------
 198+ 9E1B              ;
 199+ 9E1B              ;   26/6/23
 200+ 9E1B              ;
 201+ 9E1B              ;   Inicia_Puntero_mov
 202+ 9E1B              ;
 203+ 9E1B              ;
 204+ 9E1B
 205+ 9E1B 2A EA 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E1E CD 73 90         call Extrae_address
 207+ 9E21 22 EC 8B         ld (Puntero_mov),hl
 208+ 9E24 C9               ret
 209+ 9E25
 210+ 9E25              ; ---------- --------- --------- ---------- ----------
 211+ 9E25              ;
 212+ 9E25              ;   27/06/23
 213+ 9E25              ;
 214+ 9E25              ;   Aplica_movimiento.
 215+ 9E25
 216+ 9E25              Aplica_desplazamiento
 217+ 9E25
 218+ 9E25              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E25
 220+ 9E25 2A EC 8B         ld hl, (Puntero_mov)
 221+ 9E28
 222+ 9E28 7E               ld a,(hl)
 223+ 9E29 E6 F0            and $f0
 224+ 9E2B C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E2C
 226+ 9E2C CB 7E            bit 7,(hl)
 227+ 9E2E 28 03            jr z,1F
 228+ 9E30 CD 07 9A         call Mov_up
 229+ 9E33 2A EC 8B     1 ld hl, (Puntero_mov)
 230+ 9E36 CB 76            bit 6,(hl)
 231+ 9E38 28 03            jr z,2F
 232+ 9E3A CD CE 99         call Mov_down
 233+ 9E3D
 234+ 9E3D              ; Se ha aplicado reinicio ???
 235+ 9E3D              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E3D
 237+ 9E3D              ;    ld a,(Ctrl_3)
 238+ 9E3D              ;    bit 1,a
 239+ 9E3D              ;    ret nz
 240+ 9E3D
 241+ 9E3D 2A EC 8B     2 ld hl, (Puntero_mov)
 242+ 9E40 CB 6E            bit 5,(hl)
 243+ 9E42 28 03            jr z,3F
 244+ 9E44 CD 6D 9B         call Mov_left
 245+ 9E47 2A EC 8B     3 ld hl, (Puntero_mov)
 246+ 9E4A CB 66            bit 4,(hl)
 247+ 9E4C C8               ret z
 248+ 9E4D CD 4A 9A         call Mov_right
 249+ 9E50 C9               ret
 250+ 9E51
 251+ 9E51              ; ---------- --------- --------- ---------- ----------
 252+ 9E51              ;
 253+ 9E51              ;   26/06/23
 254+ 9E51              ;
 255+ 9E51              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E51
 257+ 9E51              Ajusta_velocidad_desplazamiento
 258+ 9E51
 259+ 9E51              ; 1er byte de la cadena de movimiento.
 260+ 9E51              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E51
 262+ 9E51 CD 6F 9E         call Extrae_nibble_alto
 263+ 9E54
 264+ 9E54 32 E0 8B         ld (Vel_up),a
 265+ 9E57 79               ld a,c
 266+ 9E58 E6 0F            and $0f
 267+ 9E5A 32 E1 8B         ld (Vel_down),a
 268+ 9E5D
 269+ 9E5D              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E5D              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E5D
 272+ 9E5D 23               inc hl
 273+ 9E5E CD 6F 9E         call Extrae_nibble_alto
 274+ 9E61
 275+ 9E61 32 DE 8B         ld (Vel_left),a
 276+ 9E64 79               ld a,c
 277+ 9E65 E6 0F            and $0f
 278+ 9E67 32 DF 8B         ld (Vel_right),a
 279+ 9E6A
 280+ 9E6A              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E6A
 282+ 9E6A 23               inc hl
 283+ 9E6B 22 EC 8B         ld (Puntero_mov),hl
 284+ 9E6E C9               ret
 285+ 9E6F
 286+ 9E6F 06 04        Extrae_nibble_alto ld b,4
 287+ 9E71 7E               ld a,(hl)
 288+ 9E72 4F               ld c,a
 289+ 9E73 E6 F0            and $f0
 290+ 9E75 CB 3F        1 srl a
 291+ 9E77 10 FC            djnz 1B
 292+ 9E79 C9               ret
 293+ 9E7A
 294+ 9E7A              ; ---------- --------- --------- ---------- ----------
 295+ 9E7A              ;
 296+ 9E7A              ;   5/7/23
 297+ 9E7A              ;
 298+ 9E7A              ;   Incrementa_Puntero_indice_mov
 299+ 9E7A
 300+ 9E7A              Incrementa_Puntero_indice_mov
 301+ 9E7A
 302+ 9E7A 21 F0 8B         ld hl,Incrementa_puntero
 303+ 9E7D 34               inc (hl)
 304+ 9E7E
 305+ 9E7E 2A EA 8B         ld hl,(Puntero_indice_mov)
 306+ 9E81 01 02 00         ld bc,2
 307+ 9E84 A7               and a
 308+ 9E85 09               add hl,bc
 309+ 9E86 22 EA 8B         ld (Puntero_indice_mov),hl
 310+ 9E89
 311+ 9E89 7E               ld a,(hl)
 312+ 9E8A A7               and a
 313+ 9E8B
 314+ 9E8B              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E8B
 316+ 9E8B              ;    jr z,$
 317+ 9E8B
 318+ 9E8B              ;! Reinicia el Patrón de movimiento.
 319+ 9E8B
 320+ 9E8B CC 90 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E8E
 322+ 9E8E AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E8F
 324+ 9E8F C9               ret
 325+ 9E90
 326+ 9E90              ; ---------- --------- --------- ---------- ----------
 327+ 9E90              ;
 328+ 9E90              ;   15/01/24
 329+ 9E90              ;
 330+ 9E90              ;   Inicializa_Puntero_indice_mov
 331+ 9E90
 332+ 9E90              Inicializa_Puntero_indice_mov_2
 333+ 9E90
 334+ 9E90              ; Existe etiqueta de bucle principal???
 335+ 9E90
 336+ 9E90 2A EE 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E93 24               inc h
 338+ 9E94 25               dec h
 339+ 9E95 28 05            jr z,2F
 340+ 9E97
 341+ 9E97 22 EA 8B         ld (Puntero_indice_mov),hl
 342+ 9E9A 18 14            jr 3F
 343+ 9E9C
 344+ 9E9C              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E9C
 346+ 9E9C 3A F0 8B     2 ld a,(Incrementa_puntero)
 347+ 9E9F 47               ld b,a
 348+ 9EA0
 349+ 9EA0 2A EA 8B         ld hl,(Puntero_indice_mov)
 350+ 9EA3 2B           1 dec hl
 351+ 9EA4 2B               dec hl
 352+ 9EA5 10 FC            djnz 1B
 353+ 9EA7 22 EA 8B         ld (Puntero_indice_mov),hl
 354+ 9EAA
 355+ 9EAA AF               xor a
 356+ 9EAB 32 F0 8B         ld (Incrementa_puntero),a
 357+ 9EAE 18 06            jr 4F
 358+ 9EB0
 359+ 9EB0 3A F1 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EB3 32 F0 8B         ld (Incrementa_puntero),a
 361+ 9EB6 C9           4 ret
 362+ 9EB7
 363+ 9EB7              ; ----------------------------------------------------------------------
 364+ 9EB7              ;
 365+ 9EB7              ;   30/01/24
 366+ 9EB7              ;
 367+ 9EB7              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EB7
 369+ 9EB7 3A B9 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EBA CD 0F 94         call Calcula_salto_en_BC
 371+ 9EBD 21 E2 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EC0 A7               and a
 373+ 9EC1 ED 4A            adc hl,bc
 374+ 9EC3 C9               ret
 375+ 9EC4
 376+ 9EC4              ; ----------------------------------------------------------------------
 377+ 9EC4              ;
 378+ 9EC4              ;   30/01/24
 379+ 9EC4              ;
 380+ 9EC4              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EC4              ;
 382+ 9EC4              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EC4
 384+ 9EC4 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EC5 23               inc hl
 386+ 9EC6 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EC7 69               ld l,c
 388+ 9EC8 60               ld h,b
 389+ 9EC9 22 C2 8B         ld (Contador_de_mov_masticados),hl
 390+ 9ECC C9               ret
 391+ 9ECD
# file closed: Movimiento.asm
2120  9ECD              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9ECD              ; --------------------------------------------------------------------------------------
   2+ 9ECD              ;
   3+ 9ECD              ;   31/08/24
   4+ 9ECD              ;
   5+ 9ECD
   6+ 9ECD              Compara_con_coordenadas_de_disparo
   7+ 9ECD
   8+ 9ECD 3A BB 8B         ld a,(Coordenada_y)
   9+ 9ED0 47               ld b,a
  10+ 9ED1 3A 36 8C         ld a,(Coordenadas_disparo_certero)
  11+ 9ED4 90               sub b
  12+ 9ED5
  13+ 9ED5              ; A = "0" ok
  14+ 9ED5              ; A = "1" ok
  15+ 9ED5
  16+ 9ED5 28 08            jr z,Comprueba_coordenada_X
  17+ 9ED7 3D               dec a
  18+ 9ED8 28 05            jr z,Comprueba_coordenada_X
  19+ 9EDA
  20+ 9EDA              ; A = "$ff" ok
  21+ 9EDA
  22+ 9EDA FE FE            cp $fe
  23+ 9EDC 28 01            jr z,Comprueba_coordenada_X
  24+ 9EDE
  25+ 9EDE C9               ret
  26+ 9EDF
  27+ 9EDF              Comprueba_coordenada_X
  28+ 9EDF
  29+ 9EDF 3A BA 8B         ld a,(Coordenada_X)
  30+ 9EE2 47               ld b,a
  31+ 9EE3 21 37 8C         ld hl,Coordenadas_disparo_certero+1
  32+ 9EE6 7E               ld a,(hl)
  33+ 9EE7 90               sub b
  34+ 9EE8
  35+ 9EE8              ; A = "0" ok
  36+ 9EE8              ; A = "1" ok
  37+ 9EE8
  38+ 9EE8 28 09            jr z,Activa_Impacto_en_entidad
  39+ 9EEA 3D               dec a
  40+ 9EEB 28 06            jr z,Activa_Impacto_en_entidad
  41+ 9EED
  42+ 9EED              ; A = "2" ok
  43+ 9EED
  44+ 9EED 3D               dec a
  45+ 9EEE 28 03            jr z,Activa_Impacto_en_entidad
  46+ 9EF0
  47+ 9EF0              ; A = "$ff"
  48+ 9EF0
  49+ 9EF0 FE FD            cp $fd
  50+ 9EF2 C0               ret nz
  51+ 9EF3
  52+ 9EF3              Activa_Impacto_en_entidad
  53+ 9EF3
  54+ 9EF3              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
  55+ 9EF3
  56+ 9EF3 3E 02            ld a,2
  57+ 9EF5 32 BD 8B         ld (Impacto),a
  58+ 9EF8
  59+ 9EF8              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
  60+ 9EF8
  61+ 9EF8 11 C0 87         ld de,Indice_Explosion_entidades
  62+ 9EFB 21 C0 8B         ld hl,Puntero_de_almacen_de_mov_masticados
  63+ 9EFE
  64+ 9EFE 73               ld (hl),e
  65+ 9EFF 23               inc hl
  66+ 9F00 72               ld (hl),d
  67+ 9F01
  68+ 9F01              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
  69+ 9F01
  70+ 9F01 21 33 8C         ld hl,Impacto2
  71+ 9F04 CB 9E            res 3,(hl)
  72+ 9F06
  73+ 9F06 C9               ret
  74+ 9F07
  75+ 9F07              ; --------------------------------------------------------------------------------------
  76+ 9F07              ;
  77+ 9F07              ;   11/09/24
  78+ 9F07              ;
  79+ 9F07
  80+ 9F07              Limpia_album_de_borrado_disparos
  81+ 9F07
  82+ 9F07 21 2E 8C         ld hl,Ctrl_5
  83+ 9F0A CB 46            bit 0,(hl)
  84+ 9F0C C8               ret z
  85+ 9F0D CB 86            res 0,(hl)
  86+ 9F0F
  87+ 9F0F              Limpiando
  88+ 9F0F
  89+ 9F0F AF               xor a
  90+ 9F10 2A 14 8C         ld hl,(Album_de_borrado_disparos)
  91+ 9F13 77               ld (hl),a
  92+ 9F14 5D               ld e,l
  93+ 9F15 54               ld d,h
  94+ 9F16 1C               inc e                                           ; DE = HL+1
  95+ 9F17 01 3A 00         ld bc,$003a
  96+ 9F1A ED B0            ldir
  97+ 9F1C
  98+ 9F1C C9               ret
  99+ 9F1D
 100+ 9F1D
 101+ 9F1D              ; --------------------------------------------------------------------------------------
 102+ 9F1D              ;
 103+ 9F1D              ;   26/08/24
 104+ 9F1D              ;
 105+ 9F1D
 106+ 9F1D              Calcula_bytes_pintado_disparos
 107+ 9F1D
 108+ 9F1D 2A 12 8C         ld hl,(Album_de_pintado_disparos)
 109+ 9F20 45               ld b,l
 110+ 9F21 2A 16 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 111+ 9F24 7D               ld a,l
 112+ 9F25
 113+ 9F25 90               sub b
 114+ 9F26 32 18 8C         ld (Num_de_bytes_album_de_disparos),a
 115+ 9F29
 116+ 9F29 C9               ret
 117+ 9F2A
 118+ 9F2A              ; --------------------------------------------------------------------------------------
 119+ 9F2A              ;
 120+ 9F2A              ;   11/09/24
 121+ 9F2A              ;
 122+ 9F2A              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 123+ 9F2A              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 124+ 9F2A              ;   _disparos que el álbum del FRAME actual).
 125+ 9F2A
 126+ 9F2A              Limpia_album_de_pintado_disparos
 127+ 9F2A
 128+ 9F2A              ;*   Exclusiones.
 129+ 9F2A
 130+ 9F2A 3A 19 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 131+ 9F2D A7               and a
 132+ 9F2E C8               ret z
 133+ 9F2F
 134+ 9F2F              ; -----
 135+ 9F2F
 136+ 9F2F 3A 18 8C         ld a,(Num_de_bytes_album_de_disparos)
 137+ 9F32 47               ld b,a
 138+ 9F33 3A 19 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 139+ 9F36
 140+ 9F36 90               sub b
 141+ 9F37
 142+ 9F37 C8               ret z
 143+ 9F38 D8               ret c
 144+ 9F39
 145+ 9F39 2A 16 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 146+ 9F3C 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 147+ 9F3D AF               xor a                                                               ; "0".
 148+ 9F3E
 149+ 9F3E 77           1 ld (hl),a
 150+ 9F3F 2C               inc l
 151+ 9F40 10 FC            djnz 1B
 152+ 9F42
 153+ 9F42 C9               ret
 154+ 9F43
 155+ 9F43              ; --------------------------------------------------------------------------------------
 156+ 9F43              ;
 157+ 9F43              ;   27/08/24
 158+ 9F43              ;
 159+ 9F43
 160+ 9F43              Motor_Disparos
 161+ 9F43
 162+ 9F43              ;    Exclusiones:
 163+ 9F43
 164+ 9F43 3A 1A 8C         ld a,(Numero_de_disparos_de_Amadeus)
 165+ 9F46 3D               dec a
 166+ 9F47 3D               dec a
 167+ 9F48 28 1A            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
 168+ 9F4A
 169+ 9F4A              ; .........................
 170+ 9F4A
 171+ 9F4A              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 172+ 9F4A
 173+ 9F4A 21 24 89         ld hl,Disparo_1A+1
 174+ 9F4D
 175+ 9F4D 34               inc (hl)
 176+ 9F4E 35               dec (hl)
 177+ 9F4F
 178+ 9F4F 28 06            jr z,1F
 179+ 9F51
 180+ 9F51              ;   Esta caja contiene un disparo.
 181+ 9F51
 182+ 9F51 CD 80 9F         call Consulta_Impacto
 183+ 9F54 CC 99 9F         call z,Mueve_disparo_Amadeus
 184+ 9F57
 185+ 9F57 21 28 89     1 ld hl,Disparo_2A+1
 186+ 9F5A
 187+ 9F5A 34               inc (hl)
 188+ 9F5B 35               dec (hl)
 189+ 9F5C 28 06            jr z,2F
 190+ 9F5E
 191+ 9F5E              ; Esta caja contiene un disparo.
 192+ 9F5E
 193+ 9F5E CD 80 9F         call Consulta_Impacto
 194+ 9F61 CC 99 9F         call z,Mueve_disparo_Amadeus
 195+ 9F64
 196+ 9F64              ; Disparos de entidades.
 197+ 9F64
 198+ 9F64 3A 1B 8C     2 ld a,(Numero_de_disparos_de_entidades)
 199+ 9F67 A7               and a
 200+ 9F68 C8               ret z
 201+ 9F69
 202+ 9F69 06 07            ld b,7                                                               ; Contador de disparos.
 203+ 9F6B 21 2B 89         ld hl,Indice_de_disparos_entidades
 204+ 9F6E
 205+ 9F6E CD 73 90     4 call Extrae_address
 206+ 9F71 13               inc de
 207+ 9F72 13               inc de
 208+ 9F73 ED 53 1D 8C      ld (Puntero_rancio_disparos_album),de
 209+ 9F77
 210+ 9F77 23               inc hl
 211+ 9F78
 212+ 9F78 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
 213+ 9F79 35               dec (hl)
 214+ 9F7A 28 00            jr z,3F
 215+ 9F7C
 216+ 9F7C EB           3 ex de,hl
 217+ 9F7D 10 EF            djnz 4B
 218+ 9F7F
 219+ 9F7F C9               ret
 220+ 9F80
 221+ 9F80              ; ----------------------
 222+ 9F80              ;
 223+ 9F80              ;
 224+ 9F80              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 225+ 9F80              ;
 226+ 9F80              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 227+ 9F80
 228+ 9F80
 229+ 9F80              Consulta_Impacto
 230+ 9F80
 231+ 9F80              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 232+ 9F80              ;   _sea lo más coherente posible.
 233+ 9F80
 234+ 9F80 E5               push hl
 235+ 9F81 2B               dec hl
 236+ 9F82 CD AF A0         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 237+ 9F85 E1               pop hl
 238+ 9F86 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 239+ 9F87
 240+ 9F87 C8               ret z
 241+ 9F88
 242+ 9F88 3A 33 8C         ld a,(Impacto2)
 243+ 9F8B CB DF            set 3,a
 244+ 9F8D 32 33 8C         ld (Impacto2),a
 245+ 9F90
 246+ 9F90 E5               push hl
 247+ 9F91 CD 9C A0         call Genera_coordenadas_de_disparo_Amadeus
 248+ 9F94 E1               pop hl
 249+ 9F95 CD B2 9F         call Elimina_disparo
 250+ 9F98
 251+ 9F98 C9               ret
 252+ 9F99
 253+ 9F99              ; ----------------------
 254+ 9F99              ;
 255+ 9F99              ;
 256+ 9F99              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 257+ 9F99
 258+ 9F99              Mueve_disparo_Amadeus
 259+ 9F99
 260+ 9F99 CD 73 90         call Extrae_address
 261+ 9F9C
 262+ 9F9C CD 97 99         call PreviousScan
 263+ 9F9F CD 97 99         call PreviousScan
 264+ 9FA2 CD 97 99         call PreviousScan
 265+ 9FA5 CD 97 99         call PreviousScan
 266+ 9FA8
 267+ 9FA8              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 268+ 9FA8
 269+ 9FA8 7C               ld a,h
 270+ 9FA9 D6 40            sub $40
 271+ 9FAB EB               ex de,hl
 272+ 9FAC 38 04            jr c,Elimina_disparo
 273+ 9FAE
 274+ 9FAE               ; Introduce nuevo puntero_de_impresión en la caja.
 275+ 9FAE
 276+ 9FAE 73               ld (hl),e
 277+ 9FAF 23               inc hl
 278+ 9FB0 72               ld (hl),d
 279+ 9FB1
 280+ 9FB1 C9               ret
 281+ 9FB2
 282+ 9FB2              ; ----------------------
 283+ 9FB2              ;
 284+ 9FB2              ;   11/9/24
 285+ 9FB2
 286+ 9FB2              Elimina_disparo
 287+ 9FB2
 288+ 9FB2              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 289+ 9FB2              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 290+ 9FB2
 291+ 9FB2              ;   Disparo_1A defw 0									; Puntero objeto.
 292+ 9FB2              ;   	defw 0											; Puntero de impresión.
 293+ 9FB2
 294+ 9FB2 2B               dec hl
 295+ 9FB3 2B               dec hl
 296+ 9FB4
 297+ 9FB4 AF               xor a
 298+ 9FB5 77               ld (hl),a
 299+ 9FB6 23               inc hl
 300+ 9FB7 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 301+ 9FB8
 302+ 9FB8 23               inc hl
 303+ 9FB9 77               ld (hl),a
 304+ 9FBA 23               inc hl
 305+ 9FBB 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 306+ 9FBC
 307+ 9FBC 21 1A 8C         ld hl,Numero_de_disparos_de_Amadeus
 308+ 9FBF 34               inc (hl)
 309+ 9FC0
 310+ 9FC0 3E 01            ld a,1
 311+ 9FC2 32 1C 8C         ld (Permiso_de_disparo_Amadeus),a
 312+ 9FC5
 313+ 9FC5 21 2E 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 314+ 9FC8 CB C6            set 0,(hl)
 315+ 9FCA
 316+ 9FCA AF               xor a
 317+ 9FCB 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 318+ 9FCC
 319+ 9FCC C9               ret
 320+ 9FCD
 321+ 9FCD              ; --------------------------------------------------------------------------------------
 322+ 9FCD              ;
 323+ 9FCD              ;   21/8/24
 324+ 9FCD              ;
 325+ 9FCD
 326+ 9FCD              Pinta_disparos
 327+ 9FCD
 328+ 9FCD ED 73 06 8C      ld (Stack),sp
 329+ 9FD1 06 02            ld b,2
 330+ 9FD3
 331+ 9FD3 ED 7B 14 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 332+ 9FD7
 333+ 9FD7 D1           2 pop de
 334+ 9FD8
 335+ 9FD8 14               inc d
 336+ 9FD9 15               dec d
 337+ 9FDA
 338+ 9FDA 28 1B            jr z,1F
 339+ 9FDC
 340+ 9FDC              Imprime_scanlines_de_disparo
 341+ 9FDC
 342+ 9FDC E1               pop hl
 343+ 9FDD
 344+ 9FDD              ; Puntero objeto en DE.
 345+ 9FDD              ; Puntero_de_impresión en HL.
 346+ 9FDD
 347+ 9FDD              ; 1er scanline.
 348+ 9FDD
 349+ 9FDD 1A               ld a,(de)
 350+ 9FDE AE               xor (hl)
 351+ 9FDF 77               ld (hl),a
 352+ 9FE0
 353+ 9FE0 13               inc de
 354+ 9FE1 2C               inc l
 355+ 9FE2
 356+ 9FE2 1A               ld a,(de)
 357+ 9FE3 AE               xor (hl)
 358+ 9FE4 77               ld (hl),a
 359+ 9FE5
 360+ 9FE5              ; 2º scanline.
 361+ 9FE5
 362+ 9FE5 E1               pop hl
 363+ 9FE6 1B               dec de
 364+ 9FE7
 365+ 9FE7 1A               ld a,(de)
 366+ 9FE8 AE               xor (hl)
 367+ 9FE9 77               ld (hl),a
 368+ 9FEA
 369+ 9FEA 13               inc de
 370+ 9FEB 2C               inc l
 371+ 9FEC
 372+ 9FEC 1A               ld a,(de)
 373+ 9FED AE               xor (hl)
 374+ 9FEE 77               ld (hl),a
 375+ 9FEF
 376+ 9FEF              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 377+ 9FEF
 378+ 9FEF 18 E6            jr 2B
 379+ 9FF1
 380+ 9FF1 ED 7B 12 8C  3 ld sp,(Album_de_pintado_disparos)
 381+ 9FF5 18 E0            jr 2B
 382+ 9FF7
 383+ 9FF7 10 F8        1 djnz 3B
 384+ 9FF9 ED 7B 06 8C      ld sp,(Stack)
 385+ 9FFD C9               ret
 386+ 9FFE
 387+ 9FFE              ; --------------------------------------------------------------------------------------
 388+ 9FFE              ;
 389+ 9FFE              ;   28/8/24
 390+ 9FFE              ;
 391+ 9FFE              ;   Modifica: HL y DE.
 392+ 9FFE
 393+ 9FFE
 394+ 9FFE              Genera_datos_de_impresion_disparos_Amadeus
 395+ 9FFE
 396+ 9FFE              ;*   Exclusiones:
 397+ 9FFE
 398+ 9FFE 3A 1A 8C         ld a,(Numero_de_disparos_de_Amadeus)
 399+ A001 FE 02            cp 2
 400+ A003 C8               ret z                                                     ;? Salimos si no hay ningún disparo generado.
 401+ A004
 402+ A004              ; -----
 403+ A004
 404+ A004 ED 73 06 8C      ld (Stack),sp
 405+ A008 31 23 89         ld sp,Disparo_1A                                          ;? SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 406+ A00B
 407+ A00B 21 2B 89     1 ld hl,Indice_de_disparos_entidades                          ;? Compararemos SP con HL para saber cual es la última caja que examinar.
 408+ A00E ED 72            sbc hl,sp                                                 ;? Última caja ???
 409+ A010 28 24            jr z,Salida
 410+ A012
 411+ A012 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 412+ A013
 413+ A013 14               inc d
 414+ A014 15               dec d
 415+ A015
 416+ A015 20 03            jr nz,Genera_scanlines_de_disparo_Amadeus
 417+ A017
 418+ A017              Siguiente_disparo_Amadeus
 419+ A017
 420+ A017 D1               pop de
 421+ A018 18 F1            jr 1B
 422+ A01A
 423+ A01A              Genera_scanlines_de_disparo_Amadeus
 424+ A01A
 425+ A01A E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 426+ A01B              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 427+ A01B
 428+ A01B ED 73 1D 8C      ld (Puntero_rancio_disparos_album),sp                     ;? Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 429+ A01F
 430+ A01F ED 7B 16 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 431+ A023
 432+ A023 C1               pop bc
 433+ A024 C1               pop bc
 434+ A025 C1               pop bc
 435+ A026
 436+ A026 ED 73 16 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 437+ A02A
 438+ A02A E5               push hl                                                   ;? Sube 2º scanline al álbum.
 439+ A02B CD 97 99         call PreviousScan
 440+ A02E E5               push hl                                                   ;? Sube 1er scanline al álbum.
 441+ A02F D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 442+ A030
 443+ A030 ED 7B 1D 8C      ld sp,(Puntero_rancio_disparos_album)
 444+ A034 18 D5            jr 1B
 445+ A036
 446+ A036
 447+ A036              Salida
 448+ A036
 449+ A036 ED 7B 06 8C      ld sp,(Stack)
 450+ A03A C9               ret
 451+ A03B
 452+ A03B              ; --------------------------------------------------------------------------------------
 453+ A03B              ;
 454+ A03B              ;   11/09/24
 455+ A03B              ;
 456+ A03B
 457+ A03B              Genera_disparo_Amadeus
 458+ A03B
 459+ A03B              ;*  Exclusiones.
 460+ A03B
 461+ A03B 3A 1A 8C         ld a,(Numero_de_disparos_de_Amadeus)
 462+ A03E A7               and a
 463+ A03F C8               ret z                                                    ;? Hay 2 disparos en pantalla, no hay cajas libres.
 464+ A040
 465+ A040 3A 1C 8C         ld a,(Permiso_de_disparo_Amadeus)
 466+ A043 A7               and a
 467+ A044 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 468+ A045
 469+ A045 3D               dec a
 470+ A046 32 1C 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? Cada vez que se genera un disparo de Amadeus hay que esperar (CLOCK_repone_disparo_Amadeus) para volver_
 471+ A049              ;                                                            ;? _ a tener (Permiso_de_disparo_Amadeus).
 472+ A049              ; ---------------------------------------------------------------------------------------------------------------
 473+ A049              ;
 474+ A049              ;*  Vamos a generar un disparo.
 475+ A049              ;*  Tenemos 1 o 2 cajas de disparos libres y permiso de disparo.
 476+ A049
 477+ A049              ;   Dec. el nº de disparos de Amadeus.
 478+ A049
 479+ A049 21 1A 8C         ld hl,Numero_de_disparos_de_Amadeus
 480+ A04C 35               dec (hl)
 481+ A04D
 482+ A04D              ;   Nos situamos en la 1ª caja que encontramos vacía.
 483+ A04D
 484+ A04D 21 24 89         ld hl,Disparo_1A+1
 485+ A050
 486+ A050 34               inc (hl)
 487+ A051 35               dec (hl)
 488+ A052 2B               dec hl
 489+ A053
 490+ A053 28 03            jr z,7F
 491+ A055
 492+ A055 21 27 89         ld hl,Disparo_2A
 493+ A058
 494+ A058 22 31 8C     7 ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 495+ A05B
 496+ A05B              ; ---------------------------------------------------------------------------------------------------------------
 497+ A05B
 498+ A05B              Define_puntero_objeto_disparo
 499+ A05B
 500+ A05B              ;   Inicializamos contador.
 501+ A05B
 502+ A05B 06 00            ld b,0
 503+ A05D
 504+ A05D 2A 73 89         ld hl,(p.imp.amadeus)
 505+ A060 2C               inc l
 506+ A061
 507+ A061 3E 80            ld a,$80
 508+ A063 BE               cp (hl)
 509+ A064 28 0D            jr z,1F
 510+ A066
 511+ A066 04               inc b
 512+ A067
 513+ A067 3E 60            ld a,$60
 514+ A069 BE               cp (hl)
 515+ A06A 28 07            jr z,1F
 516+ A06C
 517+ A06C
 518+ A06C 04               inc b
 519+ A06D
 520+ A06D 3E 18            ld a,$18
 521+ A06F BE               cp (hl)
 522+ A070 28 01            jr z,1F
 523+ A072
 524+ A072 04               inc b
 525+ A073
 526+ A073              ;   Calcula el Puntero_de_impresión del disparo.
 527+ A073
 528+ A073              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 529+ A073
 530+ A073 CD 97 99     1 call PreviousScan
 531+ A076
 532+ A076 78               ld a,b
 533+ A077 CB 3F            srl a
 534+ A079 28 03            jr z,4F
 535+ A07B
 536+ A07B              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 537+ A07B E5               push hl
 538+ A07C 18 02            jr 5F
 539+ A07E 2D           4 dec l
 540+ A07F E5               push hl
 541+ A080              ; ---
 542+ A080
 543+ A080              ;   Calcula el Puntero_objeto del disparo.
 544+ A080
 545+ A080 21 70 83     5 ld hl,Indice_disparo
 546+ A083 04               inc b
 547+ A084 05               dec b
 548+ A085 28 04            jr z,2F
 549+ A087
 550+ A087              ;   Nos desplazamos por el índice de disparos.
 551+ A087
 552+ A087 2C           3 inc l
 553+ A088 2C               inc l
 554+ A089 10 FC            djnz 3B
 555+ A08B
 556+ A08B              ; --- Guarda el Puntero_objeto del disparo en la pila.
 557+ A08B CD 73 90     2 call Extrae_address
 558+ A08E E5               push hl
 559+ A08F              ; ---
 560+ A08F
 561+ A08F              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 562+ A08F              ; HL en el 1er .db de la caja.
 563+ A08F
 564+ A08F 2A 31 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 565+ A092
 566+ A092 06 02            ld b,2
 567+ A094
 568+ A094 D1           6 pop de
 569+ A095 73               ld (hl),e
 570+ A096 23               inc hl
 571+ A097 72               ld (hl),d
 572+ A098 23               inc hl
 573+ A099
 574+ A099 10 F9            djnz 6B
 575+ A09B
 576+ A09B C9               ret
 577+ A09C
 578+ A09C              Genera_coordenadas_de_disparo_Amadeus
 579+ A09C
 580+ A09C              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 581+ A09C              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 582+ A09C              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 583+ A09C
 584+ A09C CD 73 90         call Extrae_address
 585+ A09F CD 92 94         call Genera_coordenadas
 586+ A0A2
 587+ A0A2 3D               dec a
 588+ A0A3
 589+ A0A3 21 36 8C         ld hl,Coordenadas_disparo_certero
 590+ A0A6 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 591+ A0A7 23               inc hl
 592+ A0A8 3A BA 8B         ld a,(Coordenada_X)
 593+ A0AB 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 594+ A0AC
 595+ A0AC AF               xor a
 596+ A0AD 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 597+ A0AE
 598+ A0AE C9               ret
 599+ A0AF
 600+ A0AF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 601+ A0AF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 602+ A0AF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 603+ A0AF
 604+ A0AF              ; ----------------------------------------------
 605+ A0AF              ;
 606+ A0AF              ;   27/08/24
 607+ A0AF              ;
 608+ A0AF              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 609+ A0AF              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 610+ A0AF
 611+ A0AF              Detecta_impacto_en_disparo_de_Amadeus
 612+ A0AF
 613+ A0AF              Extraccion_de_datos
 614+ A0AF
 615+ A0AF 13               inc de
 616+ A0B0 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 617+ A0B1
 618+ A0B1 5E               ld e,(hl)
 619+ A0B2 23               inc hl
 620+ A0B3 56               ld d,(hl)
 621+ A0B4
 622+ A0B4 23               inc hl
 623+ A0B5
 624+ A0B5 4E               ld c,(hl)
 625+ A0B6 23               inc hl
 626+ A0B7 46               ld b,(hl)
 627+ A0B8
 628+ A0B8 C5               push bc
 629+ A0B9 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 630+ A0BA
 631+ A0BA              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 632+ A0BA
 633+ A0BA CD 97 99         call PreviousScan
 634+ A0BD CD 97 99         call PreviousScan
 635+ A0C0
 636+ A0C0              Detecta_impacto_
 637+ A0C0
 638+ A0C0 1A               ld a,(de)
 639+ A0C1 A6               and (hl)
 640+ A0C2 C0               ret nz
 641+ A0C3
 642+ A0C3 13               inc de
 643+ A0C4 23               inc hl
 644+ A0C5
 645+ A0C5 1A               ld a,(de)
 646+ A0C6 A6               and (hl)
 647+ A0C7 C9               ret
 648+ A0C8
 649+ A0C8              ; -------------------------------------------------------------------------------------------------------------
 650+ A0C8              ;
 651+ A0C8              ;   8/8/24
 652+ A0C8              ;
 653+ A0C8              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 654+ A0C8              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 655+ A0C8              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 656+ A0C8              ;
 657+ A0C8              ;   MODIFICA: HL,DE,BC y A.
 658+ A0C8              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 659+ A0C8              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 660+ A0C8
 661+ A0C8              Colision_Entidad_Amadeus
 662+ A0C8
 663+ A0C8              ; Posible contacto de entidad con Amadeus. ?????
 664+ A0C8
 665+ A0C8              ; Exclusiones:
 666+ A0C8
 667+ A0C8 3A 52 8C         ld a,(Shield)
 668+ A0CB A7               and a
 669+ A0CC C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 670+ A0CD
 671+ A0CD 21 2C 8C         ld hl,Ctrl_3
 672+ A0D0 CB 76            bit 6,(hl)
 673+ A0D2 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 674+ A0D3
 675+ A0D3 21 33 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 676+ A0D6 CB 56            bit 2,(hl)
 677+ A0D8 C0               ret nz
 678+ A0D9
 679+ A0D9 3A BB 8B     	ld a,(Coordenada_y)
 680+ A0DC FE 14        	cp $14
 681+ A0DE D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 682+ A0DF
 683+ A0DF 3A 72 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 684+ A0E2 A7               and a
 685+ A0E3 C0               ret nz
 686+ A0E4
 687+ A0E4              Genera_coordenadas_X
 688+ A0E4
 689+ A0E4              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 690+ A0E4              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 691+ A0E4
 692+ A0E4              ;   Limpiamos almacenes.
 693+ A0E4
 694+ A0E4              ;    call Limpia_Coordenadas_X
 695+ A0E4
 696+ A0E4              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 697+ A0E4
 698+ A0E4 21 38 8C         ld hl,Coordenadas_X_Entidad
 699+ A0E7 3A BA 8B         ld a,(Coordenada_X)
 700+ A0EA CD 0C A1         call Guarda_coordenadas_X
 701+ A0ED
 702+ A0ED              ;   Almacenamos las coordenadas X de Amadeus.
 703+ A0ED
 704+ A0ED 3A 6F 89         ld a,(CX_Amadeus)
 705+ A0F0 CD 0C A1         call Guarda_coordenadas_X
 706+ A0F3 CD 20 A1         call Compara_coordenadas_X
 707+ A0F6 C0               ret nz
 708+ A0F7
 709+ A0F7 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 710+ A0F9 32 BD 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 711+ A0FC
 712+ A0FC 2A F9 8B         ld hl,(Puntero_store_caja)
 713+ A0FF 2C               inc l
 714+ A100 2C               inc l
 715+ A101 2C               inc l
 716+ A102 2C               inc l
 717+ A103 22 34 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 718+ A106
 719+ A106 21 33 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 720+ A109 CB D6            set 2,(hl)
 721+ A10B
 722+ A10B C9               ret
 723+ A10C
 724+ A10C               ; ----- ----- ----- ----- -----
 725+ A10C
 726+ A10C 77           Guarda_coordenadas_X ld (hl),a
 727+ A10D 3C               inc a
 728+ A10E 2C               inc l
 729+ A10F 77               ld (hl),a
 730+ A110 3C               inc a
 731+ A111 2C               inc l
 732+ A112 77               ld (hl),a
 733+ A113 2C               inc l
 734+ A114 C9               ret
 735+ A115
 736+ A115 AF           Limpia_Coordenadas_X xor a
 737+ A116 06 06            ld b,6
 738+ A118 21 3B 8C         ld hl,Coordenadas_X_Amadeus
 739+ A11B 77           1 ld (hl),a
 740+ A11C 23               inc hl
 741+ A11D 10 FC            djnz 1B
 742+ A11F C9               ret
 743+ A120
 744+ A120              ; ----- ----- ----- ----- -----
 745+ A120
 746+ A120              Compara_coordenadas_X
 747+ A120
 748+ A120 DD 21 38 8C      ld ix,Coordenadas_X_Entidad
 749+ A124 DD 7E 00         ld a,(ix+0)
 750+ A127 CD 35 A1         call Comparando
 751+ A12A C8               ret z
 752+ A12B
 753+ A12B 3C               inc a
 754+ A12C CD 44 A1         call Comparando_1
 755+ A12F C8               ret z
 756+ A130
 757+ A130 3C               inc a
 758+ A131 CD 44 A1         call Comparando_1
 759+ A134 C9               ret
 760+ A135
 761+ A135              ; ----- ----- ----- ----- -----
 762+ A135              ;
 763+ A135              ;   4/12/23
 764+ A135              ;
 765+ A135              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 766+ A135
 767+ A135              Comparando
 768+ A135
 769+ A135 DD 2C            inc ixl
 770+ A137 DD 2C            inc ixl
 771+ A139 DD 2C            inc ixl
 772+ A13B
 773+ A13B DD 46 00         ld b,(ix+0)
 774+ A13E DD 4E 01         ld c,(ix+1)
 775+ A141 DD 56 02         ld d,(ix+2)
 776+ A144
 777+ A144 B8           Comparando_1 cp b
 778+ A145 C8               ret z
 779+ A146 B9               cp c
 780+ A147 C8               ret z
 781+ A148 BA               cp d
 782+ A149 C9               ret
 783+ A14A
 784+ A14A              ; -----------------------------------------------------------------------
 785+ A14A              ;
 786+ A14A              ;   04/7/24
 787+ A14A              ;
 788+ A14A
 789+ A14A              Detecta_colision_nave_entidad
 790+ A14A
 791+ A14A              ; Exclusiones:
 792+ A14A
 793+ A14A              ; Salimos de la rutina si no hay advertencia de posible colisión.
 794+ A14A
 795+ A14A 21 33 8C     	ld hl,Impacto2
 796+ A14D CB 56        	bit 2,(hl)
 797+ A14F C8           	ret z
 798+ A150
 799+ A150              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 800+ A150
 801+ A150 2A 75 89         ld hl,(Pamm_Amadeus)
 802+ A153 CD 73 90         call Extrae_address
 803+ A156 54               ld d,h
 804+ A157 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 805+ A158
 806+ A158 2A 73 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 807+ A15B 06 10            ld b,16                                        ; Contador de scanlines en B.
 808+ A15D FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 809+ A160
 810+ A160 C5           1 push bc
 811+ A161 06 03            ld b,3
 812+ A163 E5               push hl
 813+ A164
 814+ A164              ; .db
 815+ A164
 816+ A164 1A           3 ld a,(de)
 817+ A165 A7               and a
 818+ A166 20 03            jr nz,4F
 819+ A168
 820+ A168 2C               inc l
 821+ A169 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 822+ A16B
 823+ A16B ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 824+ A16D 28 04            jr z,2F
 825+ A16F
 826+ A16F              ; Impacto.
 827+ A16F FD 2D            dec iyl
 828+ A171 28 22            jr z,5F
 829+ A173
 830+ A173 1C           2 inc e
 831+ A174 10 EE            djnz 3B
 832+ A176
 833+ A176 E1               pop hl
 834+ A177
 835+ A177              ; Hay salto de línea en el puntero de impresión ???
 836+ A177
 837+ A177 7C               ld a,h
 838+ A178 D6 57            sub $57
 839+ A17A 20 0A            jr nz,6F
 840+ A17C
 841+ A17C              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 842+ A17C
 843+ A17C 2A 73 89         ld hl,(p.imp.amadeus)
 844+ A17F 3E 20            ld a,$20
 845+ A181 A7               and a
 846+ A182 85               add l
 847+ A183 6F               ld l,a
 848+ A184 18 01            jr 7F
 849+ A186
 850+ A186 24           6 inc h
 851+ A187
 852+ A187 C1           7 pop bc
 853+ A188 10 D6            djnz 1B
 854+ A18A
 855+ A18A              ;   Fin de la comparativa.
 856+ A18A
 857+ A18A              ;   NO HAY COLISIÓN !!!!!.
 858+ A18A              ;
 859+ A18A              ;   .db (Impacto) de Amadeus a "0".
 860+ A18A              ;   RES el bit2 de (Impacto2).
 861+ A18A              ;
 862+ A18A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 863+ A18A              ;   Lo colocamos a "0".
 864+ A18A
 865+ A18A 21 33 8C         ld hl,Impacto2
 866+ A18D CB 96            res 2,(hl)
 867+ A18F 2A 34 8C         ld hl,(Entidad_sospechosa_de_colision)
 868+ A192 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 869+ A194 C9               ret
 870+ A195
 871+ A195              ;   COLISIÓN !!!!!.
 872+ A195              ;
 873+ A195              ;   .db (Impacto) de Amadeus a "1".
 874+ A195              ;   SET el bit3 de (Impacto2).
 875+ A195              ;
 876+ A195              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 877+ A195
 878+ A195 E1           5 pop hl
 879+ A196 C1               pop bc
 880+ A197
 881+ A197 21 72 89         ld hl,Impacto_Amadeus
 882+ A19A 36 01            ld (hl),1
 883+ A19C 21 33 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 884+ A19F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 885+ A1A1
 886+ A1A1 11 C0 87         ld de,Indice_Explosion_entidades
 887+ A1A4 2A 34 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 888+ A1A7
 889+ A1A7 23               inc hl
 890+ A1A8 23               inc hl
 891+ A1A9 23               inc hl
 892+ A1AA
 893+ A1AA 73               ld (hl),e
 894+ A1AB 23               inc hl
 895+ A1AC 72               ld (hl),d
 896+ A1AD
 897+ A1AD              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 898+ A1AD
 899+ A1AD 11 60 88         ld de,Indice_Explosion_Amadeus
 900+ A1B0 21 75 89         ld hl,Pamm_Amadeus
 901+ A1B3
 902+ A1B3 73               ld (hl),e
 903+ A1B4 23               inc hl
 904+ A1B5 72               ld (hl),d
 905+ A1B6
 906+ A1B6 C9               ret
 907+ A1B7
 908+ A1B7
 909+ A1B7
# file closed: Disparo.asm
2121  A1B7
2122  A1B7              	SAVESNA "Pruebas.sna", START
2123  A1B7
2124  A1B7
2125  A1B7
2126  A1B7
# file closed: Banco_de_pruebas.asm
