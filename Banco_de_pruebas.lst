# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $827c	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $82c1	;	($82c1 - $82f2)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82c1	;	($82f4 - $8325)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $8328
  60  8328
  61  8328 F5           	push af
  62  8329 E5           	push hl
  63  832A
  64  832A              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  832A 21 2F 8C     	ld hl,Ctrl_3
  66  832D CB 46        	bit 0,(hl)
  67  832F 28 FE        	jr z,$
  68  8331              ;! -------------------
  69  8331
  70  8331              ; Disparos.
  71  8331
  72  8331              ;	call Pinta_disparos
  73  8331
  74  8331              ; Shield -----------------------
  75  8331
  76  8331              Temporizacion_shield
  77  8331
  78  8331 21 59 8C     	ld hl,Shield
  79  8334 7E           	ld a,(hl)
  80  8335 A7           	and a
  81  8336 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  82  8338
  83  8338 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  84  8339
  85  8339 23           	inc hl
  86  833A 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  87  833B
  88  833B 20 17        	jr nz,Incrementa_FRAMES
  89  833D
  90  833D              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  91  833D
  92  833D              Cambio_de_estado
  93  833D
  94  833D              ;	Indica cambio de estado.
  95  833D
  96  833D 23           	inc hl						;	Sitúa en (Shield_3).
  97  833E
  98  833E CB 5E        	bit 3,(hl)
  99  8340 28 05        	jr z,2F
 100  8342
 101  8342 CD EE 90     	call Inicia_Shield
 102  8345
 103  8345 18 0D        	jr Incrementa_FRAMES
 104  8347
 105  8347 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 106  8349
 107  8349              ;	Carga en (Shield_2) la siguiente temporización.
 108  8349
 109  8349 2A 57 8C     	ld hl,(Puntero_datos_shield)
 110  834C 23           	inc hl
 111  834D 22 57 8C     	ld (Puntero_datos_shield),hl
 112  8350 7E           	ld a,(hl)
 113  8351 32 5A 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 114  8354
 115  8354              Incrementa_FRAMES
 116  8354
 117  8354 2A 78 5C     	ld hl,(FRAMES)
 118  8357 23           	inc hl
 119  8358 22 78 5C     	ld (FRAMES),hl
 120  835B
 121  835B 7C           	ld a,h
 122  835C B5           	or l
 123  835D 20 04        	jr nz,1F
 124  835F
 125  835F 21 7A 5C     	ld hl,FRAMES_3
 126  8362 34           	inc (hl)
 127  8363
 128  8363 D5           1 push de
 129  8364 C5           	push bc
 130  8365
 131  8365 CD FE 90     	call Actualiza_pantalla
 132  8368
 133  8368 C1           	pop bc
 134  8369 D1           	pop de
 135  836A E1           	pop hl
 136  836B F1           	pop af
 137  836C
 138  836C FB           	ei
 139  836D
 140  836D C9           	ret
 141  836E
 142  836E              ; --------------------------------------------------------------------------------
 143  836E
 144  836E              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 836E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 836E              ;
   3+ 836E              ;	17/02/23
   4+ 836E              ;
   5+ 836E              ;	Sprites e índices.
   6+ 836E
   7+ 836E              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 145  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 146  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 147  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D AE 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BAC 01 01
  18+ 8BAE
  19+ 8BAE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAF 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB7 01 02
  22+ 8BB9 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBD 01 02
  23+ 8BBF
# file closed: Niveles.asm
 148  8BBF
 149  8BBF              ; --------------------------------------------------------------------------------
 150  8BBF              ;
 151  8BBF              ; 12/05/24
 152  8BBF              ;
 153  8BBF              ; Parámetros DRAW.
 154  8BBF              ;
 155  8BBF
 156  8BBF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 157  8BBF
 158  8BBF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 159  8BC0              ;															- Patrón de movimiento.
 160  8BC0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 161  8BC1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 162  8BC2
 163  8BC2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 164  8BC3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 165  8BC3
 166  8BC3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 167  8BC3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 168  8BC3              ; Ejemplos.
 169  8BC3
 170  8BC3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 171  8BC3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 172  8BC3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 173  8BC3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 174  8BC3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 175  8BC3
 176  8BC3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 177  8BC4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 178  8BC4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 179  8BC4
 180  8BC4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 181  8BC6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 182  8BC6
 183  8BC6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 184  8BC8
 185  8BC8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 186  8BC8
 187  8BC8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 188  8BCA              ;														; _palabras que componen el "movimiento_masticado".
 189  8BCA
 190  8BCA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 191  8BCA
 192  8BCA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 193  8BCB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 194  8BCB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 195  8BCB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 196  8BCB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 197  8BCB
 198  8BCB 00           Ctrl_2 db 0
 199  8BCC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 200  8BCC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 201  8BCC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 202  8BCC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 203  8BCC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 204  8BCC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 205  8BCC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 206  8BCC              ;
 207  8BCC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 208  8BCC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 209  8BCC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 210  8BCC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 211  8BCC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 212  8BCC              ;														BIT 4, ???
 213  8BCC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 214  8BCC
 215  8BCC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 216  8BCD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 217  8BCD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 218  8BCD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 219  8BCD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 220  8BCD              ;
 221  8BCD              ; 														DESCRIPCIÖN:
 222  8BCD              ;
 223  8BCD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 224  8BCD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 225  8BCD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 226  8BCD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 227  8BCD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 228  8BCD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 229  8BCD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 230  8BCD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 231  8BCD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 232  8BCD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 233  8BCD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 234  8BCD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 235  8BCD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 236  8BCD              ;
 237  8BCD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 238  8BCD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 239  8BCD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 240  8BCD
 241  8BCD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 242  8BCD
 243  8BCD 00           Filas db 0												; Filas. [DRAW]
 244  8BCE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 245  8BCF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 246  8BD1 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 247  8BD3
 248  8BD3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 249  8BD3
 250  8BD3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 251  8BD4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 252  8BD4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 253  8BD4
 254  8BD4              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 255  8BD4
 256  8BD4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 257  8BD4              ;
 258  8BD4              ;	COLORES: 0 ..... NEGRO
 259  8BD4              ;    		 1 ..... AZUL
 260  8BD4              ; 			 2 ..... ROJO
 261  8BD4              ;			 3 ..... MAGENTA
 262  8BD4              ; 			 4 ..... VERDE
 263  8BD4              ; 			 5 ..... CIAN
 264  8BD4              ;			 6 ..... AMARILLO
 265  8BD4              ; 			 7 ..... BLANCO
 266  8BD4
 267  8BD4 00 00        Indice_Sprite_der defw 0
 268  8BD6 00 00        Indice_Sprite_izq defw 0
 269  8BD8 00 00        Puntero_DESPLZ_der defw 0
 270  8BDA 00 00        Puntero_DESPLZ_izq defw 0
 271  8BDC
 272  8BDC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 273  8BDE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 274  8BDF 00           Columnas db 0
 275  8BE0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 276  8BE2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 277  8BE2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BE3
 279  8BE3              ; variables de control general.
 280  8BE3
 281  8BE3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 282  8BE4
 283  8BE4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 284  8BE4
 285  8BE4              Perfiles_de_velocidad
 286  8BE4
 287  8BE4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 288  8BE5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 289  8BE6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 290  8BE7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 291  8BE8
 292  8BE8              ; Contadores de 16 bits.
 293  8BE8
 294  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 295  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 296  8BEC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 297  8BEE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 298  8BF0
 299  8BF0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 300  8BF0
 301  8BF0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 302  8BF2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 303  8BF4 00 00        Puntero_indice_mov_bucle defw 0							;
 304  8BF6              ;
 305  8BF6              ;
 306  8BF6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 307  8BF7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 308  8BF7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 309  8BF7 00           Incrementa_puntero_backup db 0
 310  8BF8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 311  8BF9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 312  8BF9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 313  8BFA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 314  8BFB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 315  8BFC              ;
 316  8BFC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 317  8BFC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 318  8BFC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 319  8BFC              ;
 320  8BFC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 321  8BFC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 322  8BFC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 323  8BFC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 324  8BFC              ;
 325  8BFC              ;														;	"$ff" ..... Bucle infinito de repetición.
 326  8BFC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 327  8BFC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 328  8BFC
 329  8BFC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 330  8BFD
 331  8BFD              ;														DESCRIPCIÓN:
 332  8BFD              ;
 333  8BFD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 334  8BFD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 335  8BFD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 336  8BFD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 337  8BFD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 338  8BFD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 339  8BFD
 340  8BFD              ;														BIT 3, Recarga de nueva oleada.
 341  8BFD              ;														BIT 4, Recarga de nueva oleada.
 342  8BFD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 343  8BFD              ;														BIT 6, **** Frame completo.
 344  8BFD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 345  8BFD
 346  8BFD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 347  8BFF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 348  8BFF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 349  8BFF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 350  8BFF
 351  8BFF              ; Gestión de ENTIDADES y CAJAS.
 352  8BFF
 353  8BFF 00 00        Puntero_store_caja defw 0
 354  8C01 00 00        Puntero_restore_caja defw 0
 355  8C03 00 00        Indice_restore_caja defw 0
 356  8C05 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 357  8C06 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 358  8C07 00           Entidades_en_curso db 0									; ..... ..... .....
 359  8C08
 360  8C08 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 361  8C0A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 362  8C0C              ;														; _ puntero (Indice_entidades).
 363  8C0C
 364  8C0C              ;---------------------------------------------------------------------------------------------------------------
 365  8C0C              ;
 366  8C0C              ;	11/09/24
 367  8C0C              ;
 368  8C0C              ;	Álbumes.
 369  8C0C
 370  8C0C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 371  8C0E              ;														; _variable para almacenar lo posición del puntero_
 372  8C0E              ; 														; _de pila, SP.
 373  8C0E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 374  8C10              ;														; La utiliza la rutina [Extrae_foto_registros].
 375  8C10
 376  8C10              ; Impresión. ----------------------------------------------------------------------------------------------------
 377  8C10
 378  8C10 00 00        Album_de_pintado defw 0
 379  8C12 00 00        Album_de_borrado defw 0
 380  8C14 00 00        Album_de_pintado_Amadeus defw 0
 381  8C16 00 00        Album_de_borrado_Amadeus defw 0
 382  8C18 00 00        Album_de_pintado_disparos defw 0
 383  8C1A 00 00        Album_de_borrado_disparos defw 0
 384  8C1C
 385  8C1C 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 386  8C1E 00           Num_de_bytes_album_de_disparos db 0
 387  8C1F
 388  8C1F 07           Numero_de_disparos_de_entidades db 7
 389  8C20
 390  8C20 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 391  8C21 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 392  8C22
 393  8C22 00 00        Techo_Scanlines_album defw 0
 394  8C24 00 00        Techo_Scanlines_album_2 defw 0
 395  8C26 00           Switch db 0
 396  8C27 00 00        Techo defw 0
 397  8C29 00 00        Scanlines_album_SP defw 0
 398  8C2B 00 89        India_SP defw Tabla_de_pintado
 399  8C2D 03 89        India_2_SP defw Tabla_de_pintado+3
 400  8C2F
 401  8C2F 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 402  8C30              ;
 403  8C30              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 404  8C30              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 405  8C30              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 406  8C30              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 407  8C30              ;																Habilita el borrado/pintado de sprites.
 408  8C30              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 409  8C30              ;																_ a la baja.
 410  8C30              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 411  8C30              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 412  8C30              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 413  8C30              ; 																_ el último frame de la explosión de nuestra nave.
 414  8C30              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 415  8C30              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 416  8C30
 417  8C30 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 418  8C31              ;
 419  8C31              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 420  8C31              ;
 421  8C31              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 422  8C31              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 423  8C31              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 424  8C31              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 425  8C31              ;
 426  8C31              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 427  8C31              ;															_ masticados ya generados.
 428  8C31              ;
 429  8C31              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 430  8C31              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 431  8C31              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 432  8C31              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 433  8C31
 434  8C31 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 435  8C32              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 436  8C32              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 437  8C32
 438  8C32
 439  8C32
 440  8C32
 441  8C32
 442  8C32              ; Gestión de Disparos.
 443  8C32
 444  8C32 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 445  8C34 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 446  8C36 00           Impacto2 db 0											; Byte de control de impactos.
 447  8C37
 448  8C37              ;
 449  8C37              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 450  8C37              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 451  8C37              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 452  8C37              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 453  8C37
 454  8C37
 455  8C37
 456  8C37
 457  8C37
 458  8C37
 459  8C37
 460  8C37 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 461  8C39              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 462  8C39              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 463  8C39
 464  8C39 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 465  8C3B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 466  8C3B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 467  8C3E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 468  8C3E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 469  8C41              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 470  8C41
 471  8C41              ;---------------------------------------------------------------------------------------------------------------
 472  8C41
 473  8C41              ; Relojes y temporizaciones.
 474  8C41
 475  8C41 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 476  8C42 05           Clock_explosion_Amadeus db 5
 477  8C43 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 478  8C44
 479  8C44 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 480  8C46 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 481  8C48 00           Numero_rnd_disparos db 0
 482  8C49
 483  8C49 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 484  8C4B 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 485  8C4C              ;														; Repite la oleada de entidades.
 486  8C4C A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 487  8C4D A0           CLOCK_disparos_de_entidades db $a0
 488  8C4E
 489  8C4E              ;---------------------------------------------------------------------------------------------------------------
 490  8C4E
 491  8C4E              ; Gestión de NIVELES.
 492  8C4E
 493  8C4E 00           Nivel db 0												; Nivel actual del juego.
 494  8C4F 00 00        Puntero_indice_NIVELES defw 0
 495  8C51 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 496  8C53              ; 														; _ que definen el NIVEL.
 497  8C53
 498  8C53              ; ---------------------------------------------------------------------------------------------------------------
 499  8C53
 500  8C53              ; Temporizaciones Shield.
 501  8C53
 502  8C53 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 503  8C57 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 504  8C59 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 505  8C5A 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 506  8C5B 00           Shield_3 db 0
 507  8C5C
 508  8C5C 06           Lives db 6
 509  8C5D
 510  8C5D              ; 	INICIO  *************************************************************************************************************************************************************************
 511  8C5D              ;
 512  8C5D              ;	5/1/24
 513  8C5D
 514  8C5D              START
 515  8C5D
 516  8C5D 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 517  8C60 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 518  8C62 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 519  8C64 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 520  8C66 F3           	DI
 521  8C67
 522  8C67              ; Limpiamos pantalla.
 523  8C67
 524  8C67              ;	ld a,%00000111
 525  8C67              ;	call Cls
 526  8C67              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 527  8C67
 528  8C67              ; INICIALIZACIÓN.
 529  8C67
 530  8C67 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 531  8C69 CD 27 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 532  8C6C
 533  8C6C 3E 07        	ld a,%00000111
 534  8C6E              ;	call Cls
 535  8C6E CD E3 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 536  8C71
 537  8C71 CD 81 8E     	call Extrae_numero_aleatorio_y_avanza
 538  8C74
 539  8C74 6F           	ld l,a
 540  8C75 26 00        	ld h,0
 541  8C77 22 49 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C7A
 543  8C7A              ;	Inicializa 1er Nivel.
 544  8C7A
 545  8C7A 21 9B 8B     	ld hl,Indice_de_niveles
 546  8C7D 22 4F 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 547  8C80 CD 57 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 548  8C83              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 549  8C83              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 550  8C83              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 551  8C83
 552  8C83              ;	Inicia los álbumes de líneas.
 553  8C83
 554  8C83 CD 3A 90     	call Inicia_albumes_de_lineas
 555  8C86              ;
 556  8C86 CD 4A 90     	call Inicia_albumes_de_lineas_Amadeus
 557  8C89 CD 57 90     	call Inicia_albumes_de_disparos
 558  8C8C
 559  8C8C CD 9C 92     4 call Inicia_Entidades
 560  8C8F CD FF 92     	call Inicia_Amadeus
 561  8C92
 562  8C92              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 563  8C92              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 564  8C92              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 565  8C92
 566  8C92 11 74 89     	ld de,Amadeus_BOX
 567  8C95 CD 52 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 568  8C98 CD 42 93     	call Limpiamos_bandeja_DRAW
 569  8C9B
 570  8C9B              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 571  8C9B
 572  8C9B 06 3C        	ld b,60
 573  8C9D CD 28 9D     2 call Amadeus_a_izquierda
 574  8CA0 10 FB        	djnz 2B
 575  8CA2
 576  8CA2 CD 18 90     	call Genera_datos_de_impresion_Amadeus
 577  8CA5
 578  8CA5              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 579  8CA5
 580  8CA5 CD 6A 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 581  8CA8              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 582  8CA8
 583  8CA8              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 584  8CA8              ; (Esto se dá cuando se inicia una nueva oleada).
 585  8CA8
 586  8CA8              ;	ld a,(Ctrl_1)
 587  8CA8              ;	bit 3,a
 588  8CA8              ;	jr nz,5F											 ; Loop
 589  8CA8
 590  8CA8              ;	ld de,Amadeus_db
 591  8CA8              ;	call Store_Amadeus
 592  8CA8
 593  8CA8              ; 	INICIA DISPAROS !!!!!
 594  8CA8
 595  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 596  8CA8
 597  8CA8              ;5 call Inicia_punteros_de_cajas
 598  8CA8              ;	call Restore_entidad
 599  8CA8
 600  8CA8              ;	ld a,(Ctrl_1)
 601  8CA8              ;	bit 3,a
 602  8CA8              ;	jr z,6F
 603  8CA8
 604  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 605  8CA8
 606  8CA8              ;	ld hl,Ctrl_1
 607  8CA8              ;	res 3,(hl)
 608  8CA8              ;	jr Main
 609  8CA8
 610  8CA8              ; Damos por concluida la construcción del FRAME.
 611  8CA8              ;
 612  8CA8
 613  8CA8 CD EE 90     	call Inicia_Shield
 614  8CAB
 615  8CAB
 616  8CAB 2A 29 8C     6 ld hl,(Scanlines_album_SP)
 617  8CAE 22 22 8C     	ld (Techo_Scanlines_album),hl
 618  8CB1
 619  8CB1 2A 12 8C     	ld hl,(Album_de_borrado)
 620  8CB4 22 29 8C     	ld (Scanlines_album_SP),hl
 621  8CB7
 622  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 623  8CBA 22 2B 8C     	ld (India_SP),hl
 624  8CBD
 625  8CBD 21 2F 8C     	ld hl,Ctrl_3
 626  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 627  8CC2 CB D6        	set 2,(hl)
 628  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 629  8CC6
 630  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 631  8CC7
 632  8CC7 76           	halt
 633  8CC8
 634  8CC8              ; ------------------------------------
 635  8CC8
 636  8CC8              Main
 637  8CC8              ;
 638  8CC8              ; 20/09/24
 639  8CC8
 640  8CC8              ; Gestión de disparos.
 641  8CC8
 642  8CC8              ;	call Motor_de_disparos_entidades
 643  8CC8              ;	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 644  8CC8              ;	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 645  8CC8
 646  8CC8              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 647  8CC8              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 648  8CC8              ; Este hecho lo indica el bit2 de (Impacto2).
 649  8CC8
 650  8CC8 CD 84 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 651  8CCB
 652  8CCB              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 653  8CCB
 654  8CCB 21 4D 8C     	ld hl,CLOCK_disparos_de_entidades
 655  8CCE 35           	dec (hl)
 656  8CCF CC B7 8D     	call z,Autoriza_disparo_de_entidades
 657  8CD2
 658  8CD2 2A 49 8C     	ld hl,(Clock_next_entity)
 659  8CD5 ED 4B 78 5C  	ld bc,(FRAMES)
 660  8CD9 A7           	and a
 661  8CDA ED 42        	sbc hl,bc
 662  8CDC 20 16        	jr nz,1F
 663  8CDE
 664  8CDE              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 665  8CDE              ; _ (Clock_next_entity) para la siguiente entidad.
 666  8CDE
 667  8CDE 3A 06 8C     	ld a,(Numero_parcial_de_entidades)
 668  8CE1 47           	ld b,a
 669  8CE2 3A 07 8C     	ld a,(Entidades_en_curso)
 670  8CE5 B8           	cp b
 671  8CE6 28 0C        	jr z,1F
 672  8CE8 30 0A        	jr nc,1F
 673  8CEA
 674  8CEA 3C           	inc a
 675  8CEB 32 07 8C     	ld (Entidades_en_curso),a
 676  8CEE
 677  8CEE              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 678  8CEE
 679  8CEE CD 81 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 680  8CF1 CD 9D 8E     	call Define_Clock_next_entity
 681  8CF4
 682  8CF4 3A 07 8C     1 ld a,(Entidades_en_curso)
 683  8CF7 A7           	and a
 684  8CF8 CA 6B 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 685  8CFB 47           	ld b,a												; No hay entidades que gestionar.
 686  8CFC
 687  8CFC              ; ( Código que ejecutamos con cada entidad: ).
 688  8CFC
 689  8CFC              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 690  8CFC              ;
 691  8CFC              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 692  8CFC
 693  8CFC 21 00 89     	ld hl,Tabla_de_pintado
 694  8CFF 22 2B 8C     	ld (India_SP),hl
 695  8D02
 696  8D02 21 2F 8C     	ld hl,Ctrl_3
 697  8D05 CB D6        	set 2,(hl)
 698  8D07 CD 43 8E     	call Change
 699  8D0A
 700  8D0A C5           2 push bc 												; Nº de entidades en curso.
 701  8D0B
 702  8D0B CD BB 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 703  8D0E ED 5B 29 8C  	ld de,(Scanlines_album_SP)
 704  8D12
 705  8D12              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 706  8D12
 707  8D12              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 708  8D12              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 709  8D12
 710  8D12 3A 36 8C     	ld a,(Impacto2)
 711  8D15 CB 5F        	bit 3,a
 712  8D17 C4 44 A0     	call nz,Compara_con_coordenadas_de_disparo
 713  8D1A
 714  8D1A 3A C3 8B     	ld a,(Impacto)
 715  8D1D CB 4F        	bit 1,a
 716  8D1F C4 C2 91     	call nz,Genera_explosion
 717  8D22 20 2A        	jr nz,Gestiona_siguiente_entidad
 718  8D24
 719  8D24 3A C3 8B     	ld a,(Impacto)
 720  8D27 A7           	and a
 721  8D28 28 0C        	jr z,3F
 722  8D2A
 723  8D2A              ; IMPACTO en entidad por colisión con Amadeus.
 724  8D2A
 725  8D2A              ; 5/7/24
 726  8D2A              ; Nota importante:
 727  8D2A              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 728  8D2A              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 729  8D2A              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 730  8D2A
 731  8D2A 3A 78 89     	ld a,(Impacto_Amadeus)
 732  8D2D A7           	and a
 733  8D2E C4 C2 91     	call nz,Genera_explosion
 734  8D31 20 1B        	jr nz,Gestiona_siguiente_entidad
 735  8D33
 736  8D33              ; Falsa colisión !!!
 737  8D33
 738  8D33 32 C3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 739  8D36
 740  8D36              ; -------------------------------------------
 741  8D36
 742  8D36 CD E1 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 743  8D39 CD 23 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 744  8D3C CD D1 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 745  8D3F CD C2 94     	call Genera_datos_de_impresion
 746  8D42 CD 65 93     	call Decrementa_Contador_de_mov_masticados
 747  8D45
 748  8D45              ; -------------------------------------------
 749  8D45
 750  8D45              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 751  8D45
 752  8D45 2A C4 8B     	ld hl,(Puntero_de_impresion)
 753  8D48 CD 96 94     	call Genera_coordenadas
 754  8D4B
 755  8D4B              ; TODO: Generamos disparo ???
 756  8D4B
 757  8D4B              ;	ld a,(Permiso_de_disparo_Entidades)
 758  8D4B              ;	and a
 759  8D4B              ;	call nz,Entidad_genera_disparo_si_procede
 760  8D4B
 761  8D4B CD 02 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 762  8D4E
 763  8D4E              Gestiona_siguiente_entidad
 764  8D4E
 765  8D4E CD 37 93      	call Store_Restore_cajas
 766  8D51 C1           	pop bc
 767  8D52 10 B6        	djnz 2B
 768  8D54
 769  8D54              ; Hemos gestionado todas las entidades.
 770  8D54              ; ----- ----- -----
 771  8D54
 772  8D54 CD F5 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 773  8D57 CD 0C 8F     	call Ordena_tabla_de_impresion
 774  8D5A CD 6A 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 775  8D5D
 776  8D5D CD B2 8E     	call Borra_diferencia
 777  8D60
 778  8D60 3A 2F 8C     	ld a,(Ctrl_3)
 779  8D63 CB 5F        	bit 3,a
 780  8D65 20 04        	jr nz,Gestion_de_Amadeus
 781  8D67
 782  8D67 EB           	ex de,hl
 783  8D68 71           	ld (hl),c
 784  8D69 2C           	inc l
 785  8D6A 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 786  8D6B
 787  8D6B              ;! GESTIONA AMADEUS !!!!!!!!!!
 788  8D6B
 789  8D6B              Gestion_de_Amadeus
 790  8D6B
 791  8D6B 21 2F 8C     	ld hl,Ctrl_3
 792  8D6E CB 76        	bit 6,(hl)
 793  8D70 28 13        	jr z,Amadeus_vivo
 794  8D72
 795  8D72              ; Amadeus ha sido destruido.
 796  8D72              ; Decrementa (Temp_new_live).
 797  8D72
 798  8D72 21 43 8C     	ld hl,Temp_new_live
 799  8D75 35           	dec (hl)
 800  8D76 20 26        	jr nz,End_frame
 801  8D78
 802  8D78              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 803  8D78
 804  8D78 21 5C 8C     	ld hl,Lives
 805  8D7B 35           	dec (hl)
 806  8D7C
 807  8D7C              ;! Fin del juego
 808  8D7C
 809  8D7C F3           	di
 810  8D7D 28 FE        	jr z,$
 811  8D7F FB           	ei
 812  8D80
 813  8D80              ; Nueva nave.
 814  8D80
 815  8D80 CD E9 8D     	call Reinicia_Amadeus
 816  8D83 18 19        	jr End_frame
 817  8D85
 818  8D85              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 819  8D85
 820  8D85              Amadeus_vivo
 821  8D85
 822  8D85 3A 78 89     	ld a,(Impacto_Amadeus)
 823  8D88 A7           	and a
 824  8D89 C4 F2 91     	call nz, Genera_explosion_Amadeus
 825  8D8C 20 10        	jr nz, End_frame
 826  8D8E
 827  8D8E CD A8 91     	call Teclado
 828  8D91
 829  8D91 21 2F 8C     	ld hl,Ctrl_3
 830  8D94 CB 6E        	bit 5,(hl)
 831  8D96 28 06        	jr z,End_frame
 832  8D98
 833  8D98              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 834  8D98
 835  8D98 CD 5E 8E     	call Change_Amadeus
 836  8D9B CD 18 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 837  8D9E
 838  8D9E              End_frame
 839  8D9E
 840  8D9E              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 841  8D9E              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 842  8D9E
 843  8D9E              ;	call Genera_datos_de_impresion_disparos_Entidades
 844  8D9E              ;	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 845  8D9E              ;	call Calcula_bytes_pintado_disparos
 846  8D9E              ;	call Limpia_album_de_pintado_disparos
 847  8D9E
 848  8D9E              ; ------------ ------------- --------------
 849  8D9E
 850  8D9E              ;	xor a
 851  8D9E              ;	ld (Permiso_de_disparo_Entidades),a
 852  8D9E
 853  8D9E CD D5 8D     	call Actuaiza_sp_de_disparos_de_entidades
 854  8DA1
 855  8DA1 2A 12 8C     	ld hl,(Album_de_borrado)
 856  8DA4 22 29 8C     	ld (Scanlines_album_SP),hl
 857  8DA7
 858  8DA7 21 2F 8C     	ld hl,Ctrl_3
 859  8DAA CB C6        	set 0,(hl) 											; Indica Frame completo.
 860  8DAC CB 9E        	res 3,(hl)
 861  8DAE CB A6        	res 4,(hl)
 862  8DB0
 863  8DB0 AF           	xor a
 864  8DB1 D3 FE        	out ($fe),a
 865  8DB3
 866  8DB3 76           	halt
 867  8DB4
 868  8DB4              ; ----------------------------------------
 869  8DB4
 870  8DB4              ;	ld a,(Ctrl_1) 										; Existe Loop?
 871  8DB4              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 872  8DB4 CA C8 8C     	jp z,Main
 873  8DB7
 874  8DB7              ;------------------------------------------
 875  8DB7              ;
 876  8DB7              ;	2/10/24
 877  8DB7
 878  8DB7              Autoriza_disparo_de_entidades
 879  8DB7
 880  8DB7 3E 01        	ld a,1
 881  8DB9 32 21 8C     	ld (Permiso_de_disparo_Entidades),a
 882  8DBC
 883  8DBC 3A 4C 8C     	ld a,(Repone_CLOCK_disparos)
 884  8DBF FE 19        	cp 25
 885  8DC1 38 02        	jr c,1F
 886  8DC3
 887  8DC3 D6 05        	sub 5
 888  8DC5
 889  8DC5 32 4C 8C     1 ld (Repone_CLOCK_disparos),a
 890  8DC8 32 4D 8C     	ld (CLOCK_disparos_de_entidades),a
 891  8DCB
 892  8DCB C9           	ret
 893  8DCC
 894  8DCC              ;------------------------------------------
 895  8DCC              ;
 896  8DCC              ;	14/09/24
 897  8DCC              ;
 898  8DCC              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 899  8DCC
 900  8DCC              Entidad_genera_disparo_si_procede
 901  8DCC
 902  8DCC 2A 46 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 903  8DCF CB 06        	rlc (hl)
 904  8DD1
 905  8DD1 DC BF 9F     	call c,Genera_disparo_de_entidad_maldosa
 906  8DD4
 907  8DD4 C9           	ret
 908  8DD5
 909  8DD5              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 910  8DD5              ;
 911  8DD5              ;	30/09/24
 912  8DD5
 913  8DD5              Actuaiza_sp_de_disparos_de_entidades
 914  8DD5
 915  8DD5 2A 46 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 916  8DD8 23           	inc hl
 917  8DD9 22 46 8C     	ld (Puntero_num_aleatorios_disparos),hl
 918  8DDC
 919  8DDC 11 FD 88     	ld de,Numeros_aleatorios+7
 920  8DDF 7B           	ld a,e
 921  8DE0 95           	sub l
 922  8DE1 C0           	ret nz
 923  8DE2
 924  8DE2 21 F6 88     1 ld hl,Numeros_aleatorios
 925  8DE5 22 46 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 926  8DE8 C9           	ret
 927  8DE9
 928  8DE9              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 929  8DE9              ;
 930  8DE9              ;	24/07/24
 931  8DE9
 932  8DE9              Reinicia_Amadeus
 933  8DE9
 934  8DE9              ;	Reinicia posición y estado.
 935  8DE9
 936  8DE9 21 CF 50     	ld hl,$50cf
 937  8DEC 22 79 89     	ld (p.imp.amadeus),hl
 938  8DEF 21 F0 E0     	ld hl,$e0f0
 939  8DF2 22 7B 89     	ld (Pamm_Amadeus),hl
 940  8DF5 21 3D 00     	ld hl,$003d
 941  8DF8 22 7D 89     	ld (Comm_Amadeus),hl
 942  8DFB
 943  8DFB              ;	limpiamos el álbum de borrado.
 944  8DFB
 945  8DFB 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
 946  8DFE
 947  8DFE AF           	xor a
 948  8DFF 77           	ld (hl),a
 949  8E00
 950  8E00 E5           	push hl
 951  8E01 D1           	pop de
 952  8E02 13           	inc de
 953  8E03
 954  8E03 01 23 00     	ld bc,35
 955  8E06 ED B0        	ldir
 956  8E08
 957  8E08 CD 18 90     	call Genera_datos_de_impresion_Amadeus
 958  8E0B
 959  8E0B              ;	Reinicia temporizaciones.
 960  8E0B
 961  8E0B CD EE 90     	call Inicia_Shield
 962  8E0E
 963  8E0E 3E 5A        	ld a,90
 964  8E10 32 59 8C     	ld (Shield),a
 965  8E13
 966  8E13 3E 64        	ld a,100
 967  8E15 32 43 8C     	ld (Temp_new_live),a
 968  8E18
 969  8E18              ; 	Restauramos el FLAG: Amadeus vivo.
 970  8E18
 971  8E18 21 2F 8C     	ld hl,Ctrl_3
 972  8E1B CB B6        	res 6,(hl)
 973  8E1D
 974  8E1D              ;	Fuerza la impresión de la nave en el siguiente frame.
 975  8E1D
 976  8E1D 21 2F 8C      	ld hl,Ctrl_3
 977  8E20 CB EE        	set 5,(hl)
 978  8E22
 979  8E22 C9           	ret
 980  8E23
 981  8E23              ; --------------------------------------------------------------------------------------------------------------
 982  8E23              ;
 983  8E23              ;	12/05/24
 984  8E23
 985  8E23 3A CA 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 986  8E26 CB 27        	sla a
 987  8E28 32 CA 8B     	ld (Velocidad),a
 988  8E2B E6 10        	and $10
 989  8E2D C8           	ret z
 990  8E2E
 991  8E2E              ; Restaura (Velocidad) a razón del nº de vueltas.
 992  8E2E
 993  8E2E 3A C2 8B     	ld a,(Contador_de_vueltas)
 994  8E31 CB 2F        	sra a
 995  8E33 CB 2F        	sra a
 996  8E35 32 CA 8B     	ld (Velocidad),a
 997  8E38
 998  8E38 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 999  8E3B 23           	inc hl
1000  8E3C 23           	inc hl
1001  8E3D 23           	inc hl
1002  8E3E 23           	inc hl
1003  8E3F 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1004  8E42
1005  8E42 C9           	ret
1006  8E43
1007  8E43              ; --------------------------------------------------------------------------------------------------------------
1008  8E43              ;
1009  8E43              ;	25/08/24
1010  8E43
1011  8E43              Change
1012  8E43
1013  8E43 3A 26 8C     	ld a,(Switch)
1014  8E46 EE 01        	xor 1
1015  8E48 32 26 8C     	ld (Switch),a
1016  8E4B 2A 10 8C     	ld hl,(Album_de_pintado)
1017  8E4E ED 5B 12 8C  	ld de,(Album_de_borrado)
1018  8E52 EB           	ex de,hl
1019  8E53 22 10 8C     	ld (Album_de_pintado),hl
1020  8E56 22 29 8C     	ld (Scanlines_album_SP),hl
1021  8E59 ED 53 12 8C  	ld (Album_de_borrado),de
1022  8E5D C9           	ret
1023  8E5E
1024  8E5E              Change_Amadeus
1025  8E5E
1026  8E5E 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1027  8E61 ED 5B 16 8C  	ld de,(Album_de_borrado_Amadeus)
1028  8E65 EB           	ex de,hl
1029  8E66 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1030  8E69 ED 53 16 8C  	ld (Album_de_borrado_Amadeus),de
1031  8E6D C9           	ret
1032  8E6E
1033  8E6E              Change_Disparos
1034  8E6E
1035  8E6E 2A 18 8C     	ld hl,(Album_de_pintado_disparos)
1036  8E71 ED 5B 1A 8C  	ld de,(Album_de_borrado_disparos)
1037  8E75 EB           	ex de,hl
1038  8E76 22 18 8C     	ld (Album_de_pintado_disparos),hl
1039  8E79 ED 53 1A 8C  	ld (Album_de_borrado_disparos),de
1040  8E7D 22 1C 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1041  8E80
1042  8E80 C9           	ret
1043  8E81
1044  8E81              ; ------------------------------------
1045  8E81              ;
1046  8E81              ; 1/05/24
1047  8E81
1048  8E81              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1049  8E81              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1050  8E81
1051  8E81              ;	DESTRUYE: HL,DE,A
1052  8E81              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1053  8E81
1054  8E81              ;	Variables implicadas: (RND_SP).
1055  8E81
1056  8E81              Extrae_numero_aleatorio_y_avanza
1057  8E81
1058  8E81 21 00 89     	ld hl,Tabla_de_pintado
1059  8E84 EB           	ex de,hl
1060  8E85 2A 44 8C     	ld hl,(RND_SP)
1061  8E88 EB           	ex de,hl
1062  8E89 A7           	and a
1063  8E8A ED 52        	sbc hl,de
1064  8E8C
1065  8E8C 2A 44 8C     	ld hl,(RND_SP)
1066  8E8F 20 06        	jr nz,1F
1067  8E91
1068  8E91              ; Sitúa HL al principio de la tabla de nº aleatorios.
1069  8E91
1070  8E91 21 F6 88     	ld hl,Numeros_aleatorios
1071  8E94 22 44 8C     	ld (RND_SP),HL
1072  8E97
1073  8E97              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1074  8E97
1075  8E97 7E           1 ld a,(hl)
1076  8E98 23           	inc hl
1077  8E99 22 44 8C     	ld (RND_SP),hl
1078  8E9C C9           	ret
1079  8E9D
1080  8E9D              ; ------------------------------------
1081  8E9D              ;
1082  8E9D              ; 1/05/24
1083  8E9D
1084  8E9D              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1085  8E9D              ; (1 a 4 segundos).
1086  8E9D              ; Actualizamos (Clock_next_entity) con A.
1087  8E9D
1088  8E9D              ;	DESTRUYE: A y B.
1089  8E9D              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1090  8E9D              ;			 Actualiza (Clock_next_entity) con A.
1091  8E9D
1092  8E9D              ;	Variables implicadas: (Clock_next_entity).
1093  8E9D
1094  8E9D              ; Notas:
1095  8E9D
1096  8E9D              ; 	$32 1 seg.
1097  8E9D              ; 	$64 2 seg.
1098  8E9D              ; 	$96 3 seg.
1099  8E9D              ; 	$c8 4 seg.
1100  8E9D              ; 	$fa 5 seg.
1101  8E9D
1102  8E9D              ; $ffff 1310,7 seg, 22 minutos.
1103  8E9D
1104  8E9D              ;	$0100  5 seg. aproximadamente.
1105  8E9D              ;	$0200 10 seg. aproximadamente.
1106  8E9D              ;	$0300 15 seg. aproximadamente.
1107  8E9D              ;	$0400 20 seg. aproximadamente.
1108  8E9D              ;	$0500 25 seg. aproximadamente.
1109  8E9D              ;	$0600 30 seg. aproximadamente.
1110  8E9D
1111  8E9D              Define_Clock_next_entity
1112  8E9D
1113  8E9D FE 34        	cp $34
1114  8E9F 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1115  8EA1
1116  8EA1              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1117  8EA1
1118  8EA1 4F           3 ld c,a
1119  8EA2 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1120  8EA4 2A 78 5C     	ld hl,(FRAMES)
1121  8EA7 A7           	and a
1122  8EA8 ED 4A        	adc hl,bc
1123  8EAA 22 49 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1124  8EAD C9           	ret
1125  8EAE
1126  8EAE 3E 34        1 ld a,$34
1127  8EB0 18 EF        	jr 3B
1128  8EB2
1129  8EB2              ; ------------------------------------
1130  8EB2              ;
1131  8EB2              ; 18/03/24
1132  8EB2
1133  8EB2              Borra_diferencia
1134  8EB2
1135  8EB2 ED 4B 29 8C  	ld bc,(Scanlines_album_SP)
1136  8EB6
1137  8EB6 3A 26 8C     	ld a,(Switch)
1138  8EB9 A7           	and a
1139  8EBA 28 08        	jr z,2F
1140  8EBC
1141  8EBC 2A 24 8C     	ld hl,(Techo_Scanlines_album_2)
1142  8EBF 11 24 8C     	ld de,Techo_Scanlines_album_2
1143  8EC2 18 06        	jr 3F
1144  8EC4
1145  8EC4 2A 22 8C     2 ld hl,(Techo_Scanlines_album)
1146  8EC7 11 22 8C     	ld de,Techo_Scanlines_album
1147  8ECA
1148  8ECA              ; Diferencia.
1149  8ECA
1150  8ECA ED 42        3 sbc hl,bc
1151  8ECC
1152  8ECC C8           	ret z
1153  8ECD D8           	ret c
1154  8ECE
1155  8ECE              ; Nuevo techo, (más bajo que el anterior).
1156  8ECE              ; Fijamos nuevo techo y borramos bytes sobrantes.
1157  8ECE
1158  8ECE EB           	ex de,hl
1159  8ECF
1160  8ECF 71           	ld (hl),c
1161  8ED0 2C           	inc l
1162  8ED1 70           	ld (hl),b
1163  8ED2
1164  8ED2 AF           	xor a
1165  8ED3 43           	ld b,e
1166  8ED4
1167  8ED4 2A 29 8C     	ld hl,(Scanlines_album_SP)
1168  8ED7
1169  8ED7 77           1 ld (hl),a
1170  8ED8 23           	inc hl
1171  8ED9 10 FC        	djnz 1B
1172  8EDB
1173  8EDB              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1174  8EDB
1175  8EDB 21 2F 8C     	ld hl,Ctrl_3
1176  8EDE CB DE        	set 3,(hl)
1177  8EE0
1178  8EE0 C9           	ret
1179  8EE1
1180  8EE1              ; --------------------------------------------------------------------------------------------------------------
1181  8EE1              ;
1182  8EE1              ;	26/3/24
1183  8EE1
1184  8EE1              Recauda_informacion_de_entidad_en_curso
1185  8EE1
1186  8EE1              ; Almacena la Coordenada Y de la entidad en curso.
1187  8EE1
1188  8EE1              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1189  8EE1
1190  8EE1 3A C1 8B     	ld a,(Coordenada_y)
1191  8EE4 2A 2B 8C     	ld hl,(India_SP)
1192  8EE7 77           	ld (hl),a
1193  8EE8 2C           	inc l
1194  8EE9
1195  8EE9              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1196  8EE9
1197  8EE9 ED 5B 29 8C  	ld de,(Scanlines_album_SP)
1198  8EED
1199  8EED 73           	ld (hl),e
1200  8EEE 2C           	inc l
1201  8EEF 72           	ld (hl),d
1202  8EF0 2C           	inc l
1203  8EF1
1204  8EF1 22 2B 8C     	ld (India_SP),hl
1205  8EF4
1206  8EF4 C9           	ret
1207  8EF5
1208  8EF5              ; --------------------------------------------------------------------------------------------------------------
1209  8EF5              ;
1210  8EF5              ;	27/03/24
1211  8EF5              ;
1212  8EF5
1213  8EF5              Inicializa_India_y_limpia_Tabla_de_impresion
1214  8EF5
1215  8EF5 2A 2B 8C     	ld hl,(India_SP)
1216  8EF8 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1217  8EFB
1218  8EFB 79           	ld a,c
1219  8EFC 95           	sub l
1220  8EFD 28 06        	jr z,2F
1221  8EFF 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1222  8F00              ;														; _ y pasamos a inicializar (India_SP).
1223  8F00 AF           	xor a
1224  8F01
1225  8F01 77           1 ld (hl),a
1226  8F02 2C           	inc l
1227  8F03 10 FC        	djnz 1B												; Limpia Tabla.
1228  8F05
1229  8F05 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1230  8F08 22 2B 8C     	ld (India_SP),hl
1231  8F0B
1232  8F0B C9           	ret
1233  8F0C
1234  8F0C              ; --------------------------------------------------------------------------------------------------------------
1235  8F0C              ;
1236  8F0C              ;	31/3/24
1237  8F0C
1238  8F0C              Ordena_tabla_de_impresion
1239  8F0C
1240  8F0C              ; 5794 T/states.
1241  8F0C              ; 6278 T/states.
1242  8F0C              ; 5310 T/states.
1243  8F0C
1244  8F0C              ; Inicializamos punteros (India_SP) e (India_2_SP).
1245  8F0C              ; Inicializamos contador de comparaciones, [C].
1246  8F0C              ; Cargamos los registros A y B para efectuar comparación.
1247  8F0C
1248  8F0C FD 2E 00     	ld iyl,0
1249  8F0F
1250  8F0F 3A 07 8C     	ld a,(Entidades_en_curso)
1251  8F12 FE 04        	cp 4 	;	4
1252  8F14 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1253  8F15
1254  8F15 3D           	dec a
1255  8F16 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1256  8F17 51           	ld d,c 										; Copia de respaldo.
1257  8F18
1258  8F18 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1259  8F19
1260  8F19 21 03 89     	ld hl,Tabla_de_pintado+3
1261  8F1C 46           	ld b,(hl)
1262  8F1D 22 2D 8C     	ld (India_2_SP),hl
1263  8F20
1264  8F20 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1265  8F21 DC 49 8F     	call c, Avanza_India_2_SP
1266  8F24 CC 49 8F     	call z, Avanza_India_2_SP
1267  8F27
1268  8F27 FD 2D        	dec iyl
1269  8F29 28 18        	jr z,2F
1270  8F2B
1271  8F2B
1272  8F2B              ; --------------------------------------------------------------------------------------------------------------
1273  8F2B              ;
1274  8F2B              ;	7/4/24
1275  8F2B
1276  8F2B              Trueque
1277  8F2B
1278  8F2B              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1279  8F2B              ;  			A contiene en nº de fila de (India_SP).
1280  8F2B              ;			HL contiene (India_2_SP).
1281  8F2B
1282  8F2B D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1283  8F2C E5           	push hl										; Preservo (India_2_SP).
1284  8F2D
1285  8F2D ED 5B 2B 8C  	ld de,(India_SP)
1286  8F31 EB           	ex de,hl
1287  8F32 70           	ld (hl),b
1288  8F33 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1289  8F34
1290  8F34 CD 75 8F     	call Intercambia_1_byte
1291  8F37 CD 75 8F     	call Intercambia_1_byte
1292  8F3A
1293  8F3A
1294  8F3A              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1295  8F3A              ; Recuperamos (India_2_SP) en HL.
1296  8F3A
1297  8F3A 2A 2B 8C     	ld hl,(India_SP)
1298  8F3D 7E           	ld a,(hl)
1299  8F3E
1300  8F3E E1           	pop hl
1301  8F3F D1           	pop de
1302  8F40
1303  8F40              ; --------------------------------------------------------------------------------------------------------------
1304  8F40
1305  8F40 CD 49 8F     	call Avanza_India_2_SP
1306  8F43
1307  8F43 14           2 inc d
1308  8F44 15           	dec d
1309  8F45 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1310  8F46 18 D8        	jr 1B
1311  8F48
1312  8F48 C9           	ret
1313  8F49
1314  8F49              ; ----- ----- ----- ----- -----
1315  8F49
1316  8F49              Avanza_India_2_SP
1317  8F49
1318  8F49 0D           	dec c
1319  8F4A 28 0A        	jr z,Avanza_punteros_indios
1320  8F4C
1321  8F4C FD 2C        	inc iyl
1322  8F4E
1323  8F4E 2C           	inc l
1324  8F4F 2C           	inc l
1325  8F50 2C           	inc l
1326  8F51
1327  8F51 46           	ld b,(hl)
1328  8F52 22 2D 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1329  8F55
1330  8F55 C9           	ret
1331  8F56
1332  8F56              ; ----- ----- ----- ----- -----
1333  8F56
1334  8F56              Avanza_punteros_indios
1335  8F56
1336  8F56 15           	dec d
1337  8F57 28 15        	jr z,Prepara_salida
1338  8F59
1339  8F59 4A           	ld c,d
1340  8F5A
1341  8F5A 2A 2B 8C     	ld hl,(India_SP)
1342  8F5D 2C           	inc l
1343  8F5E 2C           	inc l
1344  8F5F 2C           	inc l
1345  8F60 7E           	ld a,(hl)
1346  8F61 22 2B 8C     	ld (India_SP),hl
1347  8F64
1348  8F64 2C           	inc l
1349  8F65 2C           	inc l
1350  8F66 2C           	inc l
1351  8F67 46           	ld b,(hl)
1352  8F68 22 2D 8C     	ld (India_2_SP),hl
1353  8F6B
1354  8F6B FD 2C        	inc iyl
1355  8F6D
1356  8F6D C9           	ret
1357  8F6E
1358  8F6E              Prepara_salida
1359  8F6E
1360  8F6E 21 00 89     	ld hl,Tabla_de_pintado
1361  8F71 22 2B 8C     	ld (India_SP),hl
1362  8F74 C9           	ret
1363  8F75
1364  8F75
1365  8F75 2C           Intercambia_1_byte inc l
1366  8F76 1C           	inc e
1367  8F77 46           	ld b,(hl)
1368  8F78 1A           	ld a,(de)
1369  8F79 EB           	ex de,hl
1370  8F7A 70           	ld (hl),b
1371  8F7B 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1372  8F7C C9           	ret
1373  8F7D
1374  8F7D              ; -----------------------------------------------------------------------------------
1375  8F7D              ;
1376  8F7D              ;	20/01/24
1377  8F7D              ;
1378  8F7D              ;
1379  8F7D
1380  8F7D              Construye_movimientos_masticados_entidad
1381  8F7D
1382  8F7D 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1383  8F80 E5           	push hl
1384  8F81 CD C4 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1385  8F84              ;															; _ el (Contador_de_mov_masticados).
1386  8F84 CD 86 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1387  8F87              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1388  8F87 CD AE 99     	call Recompone_posicion_inicio
1389  8F8A
1390  8F8A CD DE 96     1 call Draw
1391  8F8D CD A9 8F     	call Guarda_movimiento_masticado
1392  8F90
1393  8F90 CD 5B 9D     	call Movimiento
1394  8F93
1395  8F93 3A 2F 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1396  8F96 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1397  8F98 28 F0        	jr z,1B
1398  8F9A
1399  8F9A              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1400  8F9A              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1401  8F9A
1402  8F9A E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1403  8F9B 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1404  8F9E
1405  8F9E              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1406  8F9E
1407  8F9E CD BF 9E     	call Situa_en_contador_general_de_mov_masticados
1408  8FA1
1409  8FA1              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1410  8FA1              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1411  8FA1
1412  8FA1 ED 4B C8 8B  	ld bc,(Contador_de_mov_masticados)
1413  8FA5
1414  8FA5 71           	ld (hl),c
1415  8FA6 23           	inc hl
1416  8FA7 70           	ld (hl),b
1417  8FA8
1418  8FA8 C9           	ret
1419  8FA9
1420  8FA9              ; -----------------------------------------------------------------------------------
1421  8FA9              ;
1422  8FA9              ;	28/12/23
1423  8FA9              ;
1424  8FA9              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1425  8FA9              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1426  8FA9
1427  8FA9              Guarda_movimiento_masticado
1428  8FA9
1429  8FA9 ED 73 0C 8C  	ld (Stack),sp
1430  8FAD ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1431  8FB1
1432  8FB1 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1433  8FB3 FD E5            push iy 												; Pushea Puntero_objeto.
1434  8FB5
1435  8FB5 ED 7B 0C 8C      ld sp,(Stack)
1436  8FB9
1437  8FB9 2A C8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1438  8FBC 23           	inc hl
1439  8FBD 22 C8 8B     	ld (Contador_de_mov_masticados),hl
1440  8FC0
1441  8FC0 CD C4 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1442  8FC3              ;															; _ el (Contador_de_mov_masticados).
1443  8FC3 C9               ret
1444  8FC4
1445  8FC4              ; --------------------------------------------------------------------------------------------------------------
1446  8FC4              ;
1447  8FC4              ;	12/1/24
1448  8FC4              ;
1449  8FC4              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1450  8FC4
1451  8FC4              Actualiza_Puntero_de_almacen_de_mov_masticados
1452  8FC4
1453  8FC4 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1454  8FC7 01 04 00     	ld bc,4
1455  8FCA A7           	and a
1456  8FCB ED 4A        	adc hl,bc
1457  8FCD 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1458  8FD0 C9           	ret
1459  8FD1
1460  8FD1              ; --------------------------------------------------------------------------------------------------------------
1461  8FD1              ;
1462  8FD1              ;	24/03/24
1463  8FD1              ;
1464  8FD1              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1465  8FD1              ;
1466  8FD1              ;	IX contiene el puntero de impresión.
1467  8FD1              ;	DE contiene (Puntero_objeto).
1468  8FD1
1469  8FD1
1470  8FD1              Cargamos_registros_con_mov_masticado
1471  8FD1
1472  8FD1 ED 73 0C 8C  	ld (Stack),sp
1473  8FD5 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1474  8FD9
1475  8FD9 D1           	pop de 															; DE contiene Puntero_objeto
1476  8FDA DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1477  8FDC
1478  8FDC ED 73 C6 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1479  8FE0 ED 7B 0C 8C  	ld sp,(Stack)
1480  8FE4
1481  8FE4 7B           	ld a,e
1482  8FE5 82           	add d															; Comprueba si ya no hay datos en el almacén.
1483  8FE6
1484  8FE6 CC 6D 93     	call z,Reinicia_entidad_maliciosa
1485  8FE9
1486  8FE9 C9           	ret
1487  8FEA
1488  8FEA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1489  8FEA              ;
1490  8FEA              ;	22/7/24
1491  8FEA
1492  8FEA              Cargamos_registros_con_explosion
1493  8FEA
1494  8FEA
1495  8FEA 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1496  8FED CD 80 90     	call Extrae_address
1497  8FF0
1498  8FF0 5D           	ld e,l
1499  8FF1 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1500  8FF2
1501  8FF2 DD 2A C4 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1502  8FF6
1503  8FF6 C9           	ret
1504  8FF7
1505  8FF7
1506  8FF7              Cargamos_registros_con_explosion_Amadeus
1507  8FF7
1508  8FF7 2A 7B 89     	ld hl,(Pamm_Amadeus)
1509  8FFA CD 80 90     	call Extrae_address
1510  8FFD
1511  8FFD 5D           	ld e,l
1512  8FFE 54           	ld d,h
1513  8FFF
1514  8FFF DD 2A 79 89  	ld ix,(p.imp.amadeus)
1515  9003
1516  9003 C9           	ret
1517  9004
1518  9004              ; --------------------------------------------------------------------------------------------------------------
1519  9004              ;
1520  9004              ;	17/06/24
1521  9004              ;
1522  9004              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1523  9004              ;
1524  9004              ;	IX contiene el puntero de impresión.
1525  9004              ;	DE contiene (Puntero_objeto).
1526  9004
1527  9004
1528  9004              Cargamos_registros_con_mov_masticado_Amadeus
1529  9004
1530  9004 ED 73 0C 8C  	ld (Stack),sp
1531  9008 ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1532  900C D1           	pop de 															; DE contiene Puntero_objeto
1533  900D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1534  900F DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1535  9013 ED 7B 0C 8C  	ld sp,(Stack)
1536  9017 C9           	ret
1537  9018
1538  9018              ; ---------------------------------------------------------------------------------------------------------------------
1539  9018              ;
1540  9018              ;	18/6/24
1541  9018              ;
1542  9018              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1543  9018
1544  9018              Genera_datos_de_impresion_Amadeus
1545  9018
1546  9018 3A 78 89     	ld a,(Impacto_Amadeus)
1547  901B A7           	and a
1548  901C 20 03        	jr nz,1F
1549  901E
1550  901E              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1551  901E              ; _apuntando a la correspondiente explosión.
1552  901E
1553  901E CD 04 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1554  9021
1555  9021 DD 7D        1 ld a,ixl
1556  9023 E6 1F        	and $1f
1557  9025 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1558  9028
1559  9028 2A 29 8C     	ld hl,(Scanlines_album_SP)
1560  902B E5           	push hl
1561  902C
1562  902C 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1563  902F 22 29 8C     	ld (Scanlines_album_SP),hl
1564  9032
1565  9032 CD C2 94     	call Genera_datos_de_impresion
1566  9035
1567  9035 E1           	pop hl
1568  9036 22 29 8C     	ld (Scanlines_album_SP),hl
1569  9039
1570  9039 C9           	ret
1571  903A
1572  903A              ; ---------------------------------------------------------------------------------------------------------------------
1573  903A              ;
1574  903A              ;	13/03/24
1575  903A              ;
1576  903A              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1577  903A
1578  903A              Inicia_albumes_de_lineas
1579  903A
1580  903A 21 00 80     	ld hl,Scanlines_album
1581  903D 22 10 8C     	ld (Album_de_pintado),hl
1582  9040 22 29 8C     	ld (Scanlines_album_SP),hl
1583  9043
1584  9043 21 1A 81     	ld hl,Scanlines_album_2
1585  9046 22 12 8C     	ld (Album_de_borrado),hl
1586  9049
1587  9049 C9           	ret
1588  904A
1589  904A              Inicia_albumes_de_lineas_Amadeus
1590  904A
1591  904A 21 34 82     	ld hl,Amadeus_scanlines_album
1592  904D 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1593  9050 21 58 82     	ld hl,Amadeus_scanlines_album_2
1594  9053 22 16 8C     	ld (Album_de_borrado_Amadeus),hl
1595  9056
1596  9056 C9           	ret
1597  9057
1598  9057              Inicia_albumes_de_disparos
1599  9057
1600  9057              ; Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
1601  9057              ; Amadeus_disparos_scanlines_album_2 equ $827c	;	($8284 - $8289)
1602  9057
1603  9057              ; Entidades_disparos_scanlines_album equ $82c1	;	($82c1 - $82f2)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
1604  9057              ; Entidades_disparos_scanlines_album_2 equ $82c1	;	($82f4 - $8325)
1605  9057
1606  9057 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1607  905A 22 18 8C     	ld (Album_de_pintado_disparos),hl
1608  905D 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album_2
1609  9060 22 1A 8C     	ld (Album_de_borrado_disparos),hl
1610  9063
1611  9063 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1612  9066 22 1C 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1613  9069
1614  9069 C9           	ret
1615  906A
1616  906A              ; ---------------------------------------------------------------------------------------------------------------------
1617  906A              ;
1618  906A              ; 8/1/23
1619  906A              ;
1620  906A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1621  906A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1622  906A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1623  906A
1624  906A              ; Destruye HL y DE !!!!!
1625  906A
1626  906A              Inicia_punteros_de_cajas
1627  906A
1628  906A 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1629  906D CD 80 90         call Extrae_address
1630  9070 22 FF 8B         ld (Puntero_store_caja),hl
1631  9073 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1632  9076 22 03 8C     	ld (Indice_restore_caja),hl
1633  9079 CD 80 90     	call Extrae_address
1634  907C 22 01 8C     	ld (Puntero_restore_caja),hl
1635  907F C9               ret
1636  9080
1637  9080              ; *************************************************************************************************************************************************************
1638  9080
1639  9080              ;
1640  9080              ; 20/10/22
1641  9080              ;
1642  9080              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1643  9080              ;
1644  9080              ; Destruye el puntero y DE !!!!!
1645  9080
1646  9080 5E           Extrae_address ld e,(hl)
1647  9081 23           	inc hl
1648  9082 56           	ld d,(hl)
1649  9083 2B           	dec hl
1650  9084 EB           	ex de,hl
1651  9085 C9           	ret
1652  9086
1653  9086              ; *************************************************************************************************************************************************************
1654  9086              ;
1655  9086              ;	20/1/24
1656  9086              ;
1657  9086              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1658  9086              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1659  9086              ;
1660  9086              ;   Destruye HL y BC !!!!!,
1661  9086              ;
1662  9086              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1663  9086              ;					"0" ..... Izquierda.
1664  9086
1665  9086              Inicia_Puntero_objeto
1666  9086
1667  9086 3A DE 8B     	ld a,(Cuad_objeto)
1668  9089 E6 01        	and 1
1669  908B F5           	push af
1670  908C CC A8 90     	call z,Inicia_puntero_objeto_izq
1671  908F F1           	pop af
1672  9090 C8           	ret z
1673  9091 CD 95 90     	call Inicia_puntero_objeto_der
1674  9094 C9           	ret
1675  9095
1676  9095              ; Arrancamos desde la parte izquierda de la pantalla.
1677  9095              ; Iniciamos (Indice_Sprite_der).
1678  9095
1679  9095 2A D4 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1680  9098 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
1681  909B CD 80 90     	call Extrae_address
1682  909E 22 D1 8B     	ld (Puntero_objeto),hl
1683  90A1
1684  90A1 2A D6 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1685  90A4 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1686  90A7 C9           	ret
1687  90A8
1688  90A8              ; Arrancamos desde la parte derecha de la pantalla.
1689  90A8              ; Iniciamos (Indice_Sprite_izq).
1690  90A8
1691  90A8 2A D6 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1692  90AB 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1693  90AE CD 80 90     	call Extrae_address
1694  90B1 22 D1 8B     	ld (Puntero_objeto),hl
1695  90B4
1696  90B4 2A D4 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1697  90B7 22 D8 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1698  90BA C9           	ret
1699  90BB
1700  90BB              ; **************************************************************************************************
1701  90BB              ;
1702  90BB              ;	06/07/24
1703  90BB              ;
1704  90BB              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1705  90BB
1706  90BB              Restore_entidad
1707  90BB
1708  90BB 2A FF 8B     	ld hl,(Puntero_store_caja)
1709  90BE 7E           	ld a,(hl)
1710  90BF A7           	and a
1711  90C0 CC CE 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1712  90C3 28 F6        	jr z,Restore_entidad
1713  90C5
1714  90C5 11 BF 8B     	ld de,Bandeja_DRAW
1715  90C8 01 0C 00     	ld bc,12
1716  90CB ED B0        	ldir
1717  90CD C9           	ret
1718  90CE
1719  90CE              ; **************************************************************************************************
1720  90CE              ;
1721  90CE              ;	08/05/23
1722  90CE              ;
1723  90CE              ;	Incrementamos los dos punteros de entidades. (+1).
1724  90CE
1725  90CE              Incrementa_punteros_de_cajas
1726  90CE
1727  90CE 2A 01 8C     	ld hl,(Puntero_restore_caja)
1728  90D1 22 FF 8B     	ld (Puntero_store_caja),hl
1729  90D4 2A 03 8C     	ld hl,(Indice_restore_caja)
1730  90D7 23           	inc hl
1731  90D8 23           	inc hl
1732  90D9 22 03 8C     	ld (Indice_restore_caja),hl
1733  90DC CD 80 90         call Extrae_address
1734  90DF 22 01 8C         ld (Puntero_restore_caja),hl
1735  90E2 C9               ret
1736  90E3
1737  90E3              ; -----------------------------------------------------------
1738  90E3
1739  90E3              ; Teclado.
1740  90E3
1741  90E3 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1742  90E5 DB FE        	in a,($fe)
1743  90E7 E6 01        	and $01
1744  90E9 28 02        	jr z,1f
1745  90EB 18 F6        	jr Pulsa_ENTER
1746  90ED C9           1 ret
1747  90EE
1748  90EE              ; **************************************************************************************************
1749  90EE              ;
1750  90EE              ; Temporización.
1751  90EE
1752  90EE              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1753  90EE              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1754  90EE              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1755  90EE              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1756  90EE
1757  90EE              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1758  90EE              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1759  90EE              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1760  90EE
1761  90EE              ; A partir de $4f61 no hace falta DELAY.
1762  90EE
1763  90EE              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1764  90EE
1765  90EE              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1766  90EE              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1767  90EE              ;	LD A,B
1768  90EE              ;	AND A
1769  90EE              ;	JR NZ,wait
1770  90EE              ;	RET
1771  90EE
1772  90EE              ; ---------------------------------------------------------------------------------------------------------------
1773  90EE              ;
1774  90EE              ;	13/07/24
1775  90EE              ;
1776  90EE
1777  90EE              Inicia_Shield
1778  90EE
1779  90EE 21 53 8C     	ld hl,Datos_Shield
1780  90F1 22 57 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1781  90F4
1782  90F4 7E           	ld a,(hl)
1783  90F5 32 5A 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1784  90F8
1785  90F8 3E 01        	ld a,1
1786  90FA 32 5B 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1787  90FD
1788  90FD C9           	ret
1789  90FE
1790  90FE              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1791  90FE              ;
1792  90FE              ;	4/6/24
1793  90FE              ;
1794  90FE              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1795  90FE              ;
1796  90FE              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1797  90FE              ;
1798  90FE
1799  90FE              Actualiza_pantalla
1800  90FE
1801  90FE 3E 02        	ld a,2
1802  9100 D3 FE        	out ($fe),a
1803  9102
1804  9102 3A 2F 8C     	ld a,(Ctrl_3)
1805  9105 CB 57        	bit 2,a
1806  9107 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1807  9109
1808  9109              Borrando_entidades
1809  9109
1810  9109 2A 29 8C     	ld hl,(Scanlines_album_SP)
1811  910C CD 80 90     	call Extrae_address
1812  910F 24           	inc h
1813  9110 25           	dec h
1814  9111 28 05        	jr z,Pintando_entidades
1815  9113 CD BB 95     	call Pinta_Sprites
1816  9116 18 F1        	jr Borrando_entidades
1817  9118
1818  9118              Pintando_entidades
1819  9118
1820  9118 2A 2B 8C     	ld hl,(India_SP)
1821  911B 2C           	inc l
1822  911C CD 80 90     	call Extrae_address
1823  911F 24           	inc h
1824  9120 25           	dec h
1825  9121 28 0E        	jr z,Ejecuta_escudo
1826  9123 1C           	inc e
1827  9124 1C           	inc e
1828  9125 ED 53 2B 8C  	ld (India_SP),de
1829  9129 CD 80 90     	call Extrae_address
1830  912C CD BB 95     	call Pinta_Sprites
1831  912F 18 E7        	jr Pintando_entidades
1832  9131
1833  9131              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1834  9131
1835  9131              Ejecuta_escudo
1836  9131
1837  9131 3A 59 8C     	ld a,(Shield)
1838  9134 A7           	and a
1839  9135 20 2F        	jr nz,Aplica_Shield
1840  9137
1841  9137              Borrando_Amadeus
1842  9137
1843  9137 21 2F 8C     	ld hl,Ctrl_3
1844  913A CB 6E        	bit 5,(hl)
1845  913C 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1846  913E
1847  913E 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1848  9141 CD 80 90     	call Extrae_address
1849  9144 24           	inc h
1850  9145 25           	dec h
1851  9146 28 03        	jr z,Pintando_Amadeus
1852  9148 CD BB 95     	call Pinta_Sprites
1853  914B
1854  914B              Pintando_Amadeus
1855  914B
1856  914B 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1857  914E CD 80 90     	call Extrae_address
1858  9151 24           	inc h
1859  9152 25           	dec h
1860  9153 28 03        	jr z,1F
1861  9155 CD BB 95     	call Pinta_Sprites
1862  9158
1863  9158              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1864  9158
1865  9158 21 2F 8C     1 ld hl,Ctrl_3
1866  915B CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1867  915D CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1868  915F CB AE        	res 5,(hl)
1869  9161
1870  9161 3E 01        	ld a,1												; Borde azul.
1871  9163 D3 FE        	out ($fe),a
1872  9165
1873  9165 C9           	ret
1874  9166
1875  9166              Aplica_Shield
1876  9166
1877  9166              ;	Bit 1 "1" (Shield_3) Sólo borra.
1878  9166              ;		  "0"     ""     Borra/Pinta.
1879  9166              ;	Bit 2    ""  RET.	 No borra, no pinta.
1880  9166
1881  9166 21 5B 8C     	ld hl,Shield_3
1882  9169
1883  9169 CB 5E        	bit 3,(hl)
1884  916B 20 DE        	jr nz,Pintando_Amadeus
1885  916D
1886  916D CB 56        	bit 2,(hl)
1887  916F 20 E7        	jr nz,1B
1888  9171
1889  9171 CB 4E        	bit 1,(hl)
1890  9173 C4 7A 91     	call nz,Borra_Amadeus_shield
1891  9176
1892  9176 28 BF        	jr z,Borrando_Amadeus
1893  9178 18 DE        	jr 1B
1894  917A
1895  917A              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1896  917A
1897  917A              Borra_Amadeus_shield
1898  917A
1899  917A 3A 2F 8C     	ld a,(Ctrl_3)
1900  917D CB 6F        	bit 5,a
1901  917F 28 08        	jr z,1F
1902  9181
1903  9181 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1904  9184 CD 80 90     	call Extrae_address
1905  9187 18 06        	jr 2F
1906  9189
1907  9189 2A 14 8C     1 ld hl,(Album_de_pintado_Amadeus)
1908  918C CD 80 90     	call Extrae_address
1909  918F
1910  918F CD BB 95     2 call Pinta_Sprites
1911  9192
1912  9192 AF           	xor a
1913  9193 3C           	inc a											; Asegura NZ en la salida de la rutina.
1914  9194
1915  9194 C9           	ret
1916  9195
1917  9195              Pinta_Amadeus_shield
1918  9195
1919  9195 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1920  9198 CD 80 90     	call Extrae_address
1921  919B CD BB 95     	call Pinta_Sprites
1922  919E
1923  919E AF           	xor a
1924  919F 3C           	inc a											; Asegura NZ en la salida de la rutina.
1925  91A0
1926  91A0 C9           	ret
1927  91A1
1928  91A1              Borra_Pinta_Amadeus_shield
1929  91A1
1930  91A1 CD 7A 91     	call Borra_Amadeus_shield
1931  91A4 CD 95 91     	call Pinta_Amadeus_shield
1932  91A7 C9           	ret
1933  91A8
1934  91A8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1935  91A8              ;
1936  91A8              ;	19/6/24
1937  91A8              ;
1938  91A8
1939  91A8              Teclado
1940  91A8
1941  91A8              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1942  91A8
1943  91A8              ;	ld a,$f7												; "5" para disparar.
1944  91A8              ;	in a,($fe)
1945  91A8              ;	and $10
1946  91A8
1947  91A8              ;	call z,Genera_disparo_Amadeus
1948  91A8
1949  91A8 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1950  91AA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1951  91AC E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1952  91AE CC 28 9D         call z,Amadeus_a_izquierda
1953  91B1
1954  91B1 3E F7        	ld a,$f7
1955  91B3 DB FE        	in a,($fe)
1956  91B5 E6 01        	and $01
1957  91B7 C8           	ret z
1958  91B8
1959  91B8 3E F7        	ld a,$f7
1960  91BA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1961  91BC E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1962  91BE CC 40 9D     	call z,Amadeus_a_derecha
1963  91C1
1964  91C1 C9           	ret
1965  91C2
1966  91C2              ; ------------------------------------------------------------------------------------------------------------------------
1967  91C2              ;
1968  91C2              ;	06/07/24
1969  91C2              ;
1970  91C2
1971  91C2              Genera_explosion
1972  91C2
1973  91C2 21 41 8C     	ld hl,Clock_explosion
1974  91C5 35           	dec (hl)
1975  91C6 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1976  91C8
1977  91C8              Borra_entidad_colisionada
1978  91C8
1979  91C8 CD E1 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1980  91CB CD EA 8F     	call Cargamos_registros_con_explosion
1981  91CE CD C2 94     	call Genera_datos_de_impresion
1982  91D1
1983  91D1 AF           	xor a
1984  91D2 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1985  91D3
1986  91D3 C9           	ret
1987  91D4
1988  91D4              Siguiente_frame_explosion
1989  91D4
1990  91D4 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1991  91D6
1992  91D6              ; Avanza Frame de explosión.
1993  91D6
1994  91D6 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1995  91D9 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1996  91DC
1997  91DC 79           	ld a,c
1998  91DD 95           	sub l
1999  91DE 20 0B        	jr nz,1F
2000  91E0
2001  91E0              ; Fín de la entidad !!!!!!!!!!!!!
2002  91E0
2003  91E0 21 06 8C     	ld hl,Numero_parcial_de_entidades
2004  91E3 35           	dec (hl)
2005  91E4 23           	inc hl
2006  91E5 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2007  91E6
2008  91E6 CD 42 93     	call Limpiamos_bandeja_DRAW
2009  91E9 18 DD        	jr Borra_entidad_colisionada
2010  91EB
2011  91EB 23           1 inc hl
2012  91EC 23           	inc hl
2013  91ED 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2014  91F0 18 D6        	jr Borra_entidad_colisionada
2015  91F2
2016  91F2              ; ----- ----- ----- ----- -----
2017  91F2
2018  91F2              Genera_explosion_Amadeus
2019  91F2
2020  91F2 21 42 8C     	ld hl,Clock_explosion_Amadeus
2021  91F5 35           	dec (hl)
2022  91F6 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2023  91F8
2024  91F8              Borra_Amadeus_impactado
2025  91F8
2026  91F8 CD 5E 8E     	call Change_Amadeus
2027  91FB CD F7 8F     	call Cargamos_registros_con_explosion_Amadeus
2028  91FE CD 18 90     	call Genera_datos_de_impresion_Amadeus
2029  9201
2030  9201 21 2F 8C     	ld hl,Ctrl_3
2031  9204 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2032  9206
2033  9206 AF           	xor a
2034  9207 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2035  9208
2036  9208 C9           	ret
2037  9209
2038  9209              Siguiente_frame_explosion_Amadeus
2039  9209
2040  9209 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2041  920B
2042  920B              ; Avanza Frame de explosión.
2043  920B
2044  920B 2A 7B 89     	ld hl,(Pamm_Amadeus)
2045  920E 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2046  9211
2047  9211 79           	ld a,c
2048  9212 95           	sub l
2049  9213 20 0B        	jr nz,1F
2050  9215
2051  9215              ; Fín de Amadeus !!!!!!!!!!!!!
2052  9215              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2053  9215
2054  9215 AF           	xor a
2055  9216 32 78 89     	ld (Impacto_Amadeus),a
2056  9219 21 2F 8C     	ld hl,Ctrl_3
2057  921C CB F6        	set 6,(hl)
2058  921E
2059  921E 18 D8        	jr Borra_Amadeus_impactado
2060  9220
2061  9220 23           1 inc hl
2062  9221 23           	inc hl
2063  9222 22 7B 89     	ld (Pamm_Amadeus),hl
2064  9225 18 D1        	jr Borra_Amadeus_impactado
2065  9227
2066  9227              ; ---------------------------------------------------------------
2067  9227
2068  9227              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9227              ; ******************************************************************************************************************************************************************************************
   2+ 9227              ;
   3+ 9227              ;   21/04/24
   4+ 9227              ;
   5+ 9227              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9227              ;   (XOR) bit a bit.
   7+ 9227              ;
   8+ 9227              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9227
  10+ 9227              Derivando_RND
  11+ 9227
  12+ 9227 21 F6 88         ld hl,Numeros_aleatorios
  13+ 922A
  14+ 922A ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 922C C5               push bc
  16+ 922D              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 922D 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9230              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9230
  20+ 9230 A7           6 and a                                 ; Carry a "0".
  21+ 9231 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9233 30 02            jr nc,1F
  23+ 9235
  24+ 9235 CB C1            set 0,c
  25+ 9237
  26+ 9237 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9238 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 923A 5F               ld e,a
  29+ 923B
  30+ 923B 7A               ld a,d
  31+ 923C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 923E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9240
  34+ 9240 CB 3F            srl a
  35+ 9242
  36+ 9242 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9243
  38+ 9243 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9244 28 04            jr z,4F
  40+ 9246
  41+ 9246 CB FF            set 7,a
  42+ 9248 18 02            jr 5F
  43+ 924A
  44+ 924A CB BF        4 res 7,a
  45+ 924C
  46+ 924C CB 21        5 sla c
  47+ 924E 10 E0            djnz 6B
  48+ 9250
  49+ 9250 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9251
  51+ 9251 77               ld (hl),a
  52+ 9252 23               inc hl
  53+ 9253 C1               pop bc
  54+ 9254 10 D4            djnz 3B
  55+ 9256
  56+ 9256 C9               ret
  57+ 9257
  58+ 9257
  59+ 9257
# file closed: RND_Derivando.asm
2069  9257              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9257              ;---------------------------------------------------------------------------------------------------------------
   2+ 9257              ;
   3+ 9257              ;   8/3/24
   4+ 9257              ;
   5+ 9257              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9257              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9257              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9257              ;	_ de la 1ª entidad del Nivel.
   9+ 9257              ;
  10+ 9257              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9257
  12+ 9257              ;	MODIFICA: HL,DE y A.
  13+ 9257              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9257
  15+ 9257              Inicializa_Nivel
  16+ 9257
  17+ 9257 2A 4F 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 925A CD 80 90     	call Extrae_address
  19+ 925D 7E           	ld a,(hl)
  20+ 925E 32 05 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9261 23           	inc hl
  22+ 9262 CD 6F 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9265 22 51 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9268 CD 78 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 926B
  26+ 926B CD 89 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 926E C9           	ret
  28+ 926F
  29+ 926F              ; ----------------------
  30+ 926F
  31+ 926F 11 E4 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9272 01 04 00     	ld bc,4
  33+ 9275 ED B0        	ldir
  34+ 9277 C9           	ret
  35+ 9278
  36+ 9278 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9279 CD 13 94         call Calcula_salto_en_BC
  38+ 927C 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 927F A7               and a
  40+ 9280 ED 4A            adc hl,bc
  41+ 9282 CD 80 90         call Extrae_address
  42+ 9285 22 F0 8B         ld (Puntero_indice_mov),hl
  43+ 9288 C9               ret
  44+ 9289
  45+ 9289 3A BF 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 928C CD 13 94     	call Calcula_salto_en_BC
  47+ 928F 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9292 A7               and a
  49+ 9293 ED 4A            adc hl,bc
  50+ 9295 CD 80 90         call Extrae_address
  51+ 9298 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 929B C9           	ret
  53+ 929C
  54+ 929C              ;---------------------------------------------------------------------------------------------------------------
  55+ 929C              ;
  56+ 929C              ;   5/1/24
  57+ 929C              ;
  58+ 929C              ;	Destruye A,BC,HL,DE
  59+ 929C
  60+ 929C              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 929C              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 929C
  63+ 929C              Inicia_Entidades
  64+ 929C
  65+ 929C              ; Preparamos los punteros de las cajas de entidades:
  66+ 929C
  67+ 929C CD 6A 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 929F              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 929F CD 5B 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92A2
  71+ 92A2 2A 51 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92A5
  73+ 92A5 22 51 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92A8
  75+ 92A8 CD C1 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92AB
  77+ 92AB 2A 51 8C     	ld hl,(Datos_de_nivel)
  78+ 92AE
  79+ 92AE              ; En este punto:
  80+ 92AE              ;
  81+ 92AE              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92AE              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92AE
  84+ 92AE C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92AF
  86+ 92AF 7E           	ld a,(hl)
  87+ 92B0 CD 2D 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92B3
  89+ 92B3 CD 25 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92B6
  91+ 92B6              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92B6
  93+ 92B6 CD E3 93     	call Busca_mov_masticados_segun_tipo
  94+ 92B9
  95+ 92B9 A7           	and a
  96+ 92BA 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92BC
  98+ 92BC              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92BC
 100+ 92BC              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92BC              ;	_ de este tipo de entidad.
 102+ 92BC
 103+ 92BC CD BF 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92BF CD CC 9E     	call Transfiere_datos_de_contadores
 105+ 92C2
 106+ 92C2 18 06        	jr 4F
 107+ 92C4
 108+ 92C4 CD 7D 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92C7
 110+ 92C7              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92C7              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92C7              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92C7              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92C7              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92C7
 116+ 92C7 CD A1 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92CA              ;																; _ Mov_masticados ya generados.
 118+ 92CA
 119+ 92CA CD D1 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92CD
 121+ 92CD DD E5        	push ix
 122+ 92CF E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92D0
 124+ 92D0 D5           	push de
 125+ 92D1 CD 96 94     	call Genera_coordenadas
 126+ 92D4
 127+ 92D4 ED 5B 29 8C  	ld de,(Scanlines_album_SP)
 128+ 92D8 CD E1 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92DB D1           	pop de
 130+ 92DC
 131+ 92DC CD C2 94     	call Genera_datos_de_impresion
 132+ 92DF              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92DF              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92DF              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92DF              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92DF
 137+ 92DF CD 65 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92E2
 139+ 92E2              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92E2
 141+ 92E2 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 142+ 92E6 CD 52 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92E9
 144+ 92E9 CD 42 93     	call Limpiamos_bandeja_DRAW
 145+ 92EC CD CE 90     	call Incrementa_punteros_de_cajas
 146+ 92EF
 147+ 92EF              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92EF              ; _ entidad del Nivel.
 149+ 92EF
 150+ 92EF 3A 30 8C     	ld a,(Ctrl_4)
 151+ 92F2 E6 F0        	and $f0
 152+ 92F4 32 30 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92F7
 154+ 92F7              ; Siguiente entidad del Nivel.
 155+ 92F7
 156+ 92F7 2A 51 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92FA 23           	inc hl 														; _ entidad del Nivel.
 158+ 92FB
 159+ 92FB C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92FC
 161+ 92FC 10 A7        	djnz 2B
 162+ 92FE
 163+ 92FE C9           	ret
 164+ 92FF
 165+ 92FF              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92FF              ;
 167+ 92FF              ;	27/5/24
 168+ 92FF              ;
 169+ 92FF              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92FF              ;
 171+ 92FF
 172+ 92FF              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92FF              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92FF
 175+ 92FF 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9302 CD 25 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9305
 178+ 9305
 179+ 9305              Construye_movimientos_masticados_Amadeus
 180+ 9305
 181+ 9305 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9308 CD C4 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 930B              ;															; _ el (Contador_de_mov_masticados).
 184+ 930B CD 86 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 930E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 930E
 187+ 930E              ; Generamos movimientos masticados de Amadeus.
 188+ 930E
 189+ 930E 06 79        	ld b,121												; $0079, 121d.
 190+ 9310
 191+ 9310 C5           1 push bc
 192+ 9311 CD DE 96     	call Draw
 193+ 9314 CD A9 8F     	call Guarda_movimiento_masticado
 194+ 9317
 195+ 9317 CD 52 9A     	call Mov_right
 196+ 931A CD 52 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 931D
 198+ 931D C1           	pop bc
 199+ 931E 10 F0        	djnz 1B
 200+ 9320
 201+ 9320              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9320
 203+ 9320              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9320              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9320
 206+ 9320 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9323 01 08 00     	ld bc,8
 208+ 9326 A7           	and a
 209+ 9327 ED 42        	sbc hl,bc
 210+ 9329 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 932C
 212+ 932C C9           	ret
 213+ 932D
 214+ 932D              ; ---------------------------------------------------------------------
 215+ 932D              ;
 216+ 932D              ;	10/02/24
 217+ 932D              ;
 218+ 932D              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 932D              ;
 220+ 932D              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 932D
 222+ 932D              Definicion_segun_tipo
 223+ 932D
 224+ 932D CD 13 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9330 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9333 CD 1B 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9336 C9           	ret
 228+ 9337
 229+ 9337              ; ---------------------------------------------------------------------
 230+ 9337              ;
 231+ 9337              ;	6/7/24
 232+ 9337
 233+ 9337
 234+ 9337              Store_Restore_cajas
 235+ 9337
 236+ 9337 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 237+ 933B CD 52 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 933E CD CE 90     	call Incrementa_punteros_de_cajas
 239+ 9341 C9           	ret
 240+ 9342
 241+ 9342              ; ---------------------------------------------------------------------
 242+ 9342              ;
 243+ 9342              ;	23/6/24
 244+ 9342              ;
 245+ 9342              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9342              ;
 247+ 9342              ;	MODIFY: HL
 248+ 9342
 249+ 9342              Limpiamos_bandeja_DRAW
 250+ 9342
 251+ 9342 ED 73 0C 8C  	ld (Stack),sp
 252+ 9346 31 E4 8B     	ld sp,Vel_left
 253+ 9349
 254+ 9349 AF           	xor a
 255+ 934A 67           	ld h,a
 256+ 934B 6F           	ld l,a
 257+ 934C
 258+ 934C E5           	push hl
 259+ 934D E5           	push hl
 260+ 934E E5           	push hl
 261+ 934F E5           	push hl
 262+ 9350 E5           	push hl
 263+ 9351 E5           	push hl
 264+ 9352 E5           	push hl
 265+ 9353 E5           	push hl
 266+ 9354 E5           	push hl
 267+ 9355 E5           	push hl
 268+ 9356 E5           	push hl
 269+ 9357 E5           	push hl
 270+ 9358 E5           	push hl
 271+ 9359 E5           	push hl
 272+ 935A E5           	push hl
 273+ 935B E5           	push hl
 274+ 935C E5           	push hl
 275+ 935D E5           	push hl
 276+ 935E
 277+ 935E 33           	inc sp
 278+ 935F
 279+ 935F E5           	push hl
 280+ 9360 ED 7B 0C 8C  	ld sp,(Stack)
 281+ 9364
 282+ 9364 C9           	ret
 283+ 9365
 284+ 9365              ; ---------------------------------------------------------------------
 285+ 9365              ;
 286+ 9365              ;	24/03/24
 287+ 9365
 288+ 9365 2A C8 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9368 2B           	dec hl
 290+ 9369 22 C8 8B     	ld (Contador_de_mov_masticados),hl
 291+ 936C C9           	ret
 292+ 936D
 293+ 936D              ; ---------------------------------------------------------------------
 294+ 936D              ;
 295+ 936D              ;	8/5/24
 296+ 936D
 297+ 936D              Reinicia_entidad_maliciosa
 298+ 936D
 299+ 936D              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 936D
 301+ 936D CD BF 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9370 CD CC 9E     	call Transfiere_datos_de_contadores
 303+ 9373
 304+ 9373              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9373
 306+ 9373 3A BF 8B     	ld a,(Tipo)
 307+ 9376 CD 2D 93     	call Definicion_segun_tipo
 308+ 9379
 309+ 9379 E5           	push hl
 310+ 937A DD E1        	pop ix
 311+ 937C
 312+ 937C DD 6E 0B     	ld l,(ix+11)
 313+ 937F DD 66 0C     	ld h,(ix+12)
 314+ 9382
 315+ 9382 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9385
 317+ 9385 CD D1 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9388
 319+ 9388              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9388              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9388              ; Ejemplos.
 322+ 9388
 323+ 9388              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9388              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9388              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9388              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9388              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9388
 329+ 9388 21 C2 8B     	ld hl,Contador_de_vueltas
 330+ 938B CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 938D
 332+ 938D 7E           	ld a,(hl)
 333+ 938E CB 2F        	sra a
 334+ 9390 CB 2F        	sra a
 335+ 9392
 336+ 9392 32 CA 8B     	ld (Velocidad),a
 337+ 9395
 338+ 9395 3E 40        	ld a,$40
 339+ 9397 BE           	cp (hl)
 340+ 9398 C0           	ret nz
 341+ 9399
 342+ 9399              ; Límitador.
 343+ 9399
 344+ 9399              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 9399
 346+ 9399 CB 2E        	sra (hl)
 347+ 939B 21 CA 8B     	ld hl,Velocidad
 348+ 939E CB 2E        	sra (hl)
 349+ 93A0
 350+ 93A0 C9           	ret
 351+ 93A1
 352+ 93A1              ; ---------------------------------------------------------------------
 353+ 93A1              ;
 354+ 93A1              ;	22/01/24
 355+ 93A1
 356+ 93A1 21 30 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93A4 CB 46        	bit 0,(hl)
 358+ 93A6 20 0D        	jr nz,1F
 359+ 93A8 CB 4E        	bit 1,(hl)
 360+ 93AA 20 0C        	jr nz,2F
 361+ 93AC CB 56        	bit 2,(hl)
 362+ 93AE 20 0B        	jr nz,3F
 363+ 93B0 CB 5E        	bit 3,(hl)
 364+ 93B2 20 0A        	jr nz,4F
 365+ 93B4 C9           	ret
 366+ 93B5
 367+ 93B5 CB E6        1 set 4,(hl)
 368+ 93B7 C9           	ret
 369+ 93B8 CB EE        2 set 5,(hl)
 370+ 93BA C9           	ret
 371+ 93BB CB F6        3 set 6,(hl)
 372+ 93BD C9           	ret
 373+ 93BE CB FE        4 set 7,(hl)
 374+ 93C0 C9           	ret
 375+ 93C1
 376+ 93C1              ; ---------------------------------------------------------------------
 377+ 93C1              ;
 378+ 93C1              ;	23/01/24
 379+ 93C1              ;
 380+ 93C1              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93C1              ;
 382+ 93C1              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93C1              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93C1              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93C1              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93C1
 387+ 93C1              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93C1
 389+ 93C1 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93C2 3D           	dec a
 391+ 93C3 20 06        	jr nz,1F
 392+ 93C5
 393+ 93C5              ; --- Tipo_1
 394+ 93C5
 395+ 93C5 21 30 8C     	ld hl,Ctrl_4
 396+ 93C8 CB C6        	set 0,(hl)
 397+ 93CA C9           	ret
 398+ 93CB
 399+ 93CB 3D           1 dec a
 400+ 93CC 20 06        	jr nz,2F
 401+ 93CE
 402+ 93CE              ; --- Tipo_2
 403+ 93CE
 404+ 93CE 21 30 8C     	ld hl,Ctrl_4
 405+ 93D1 CB CE        	set 1,(hl)
 406+ 93D3 C9           	ret
 407+ 93D4
 408+ 93D4 3D           2 dec a
 409+ 93D5 20 06        	jr nz,3F
 410+ 93D7
 411+ 93D7              ; --- Tipo_3
 412+ 93D7
 413+ 93D7 21 30 8C     	ld hl,Ctrl_4
 414+ 93DA CB D6        	set 2,(hl)
 415+ 93DC C9           	ret
 416+ 93DD
 417+ 93DD              ; --- Tipo_3
 418+ 93DD
 419+ 93DD 21 30 8C     3 ld hl,Ctrl_4
 420+ 93E0 CB D6        	set 2,(hl)
 421+ 93E2 C9           	ret
 422+ 93E3
 423+ 93E3              ; ---------------------------------------------------------------------
 424+ 93E3              ;
 425+ 93E3              ;	22/01/24
 426+ 93E3
 427+ 93E3 21 30 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93E6 CB 46        	bit 0,(hl)
 429+ 93E8 20 0E        	jr nz,1F
 430+ 93EA
 431+ 93EA CB 4E        	bit 1,(hl)
 432+ 93EC 20 10        	jr nz,2F
 433+ 93EE
 434+ 93EE CB 56        	bit 2,(hl)
 435+ 93F0 20 12        	jr nz,3F
 436+ 93F2
 437+ 93F2 CB 5E        	bit 3,(hl)
 438+ 93F4 20 14        	jr nz,4F
 439+ 93F6 18 19        	jr 6F
 440+ 93F8
 441+ 93F8              ; Entidad_de_Tipo_1.
 442+ 93F8
 443+ 93F8 CB 66        1 bit 4,(hl)
 444+ 93FA 28 15        	jr z,6F
 445+ 93FC 18 10        	jr 5F
 446+ 93FE
 447+ 93FE              ; Entidad_de_Tipo_2.
 448+ 93FE
 449+ 93FE CB 6E        2 bit 5,(hl)
 450+ 9400 28 0F        	jr z,6F
 451+ 9402 18 0A        	jr 5F
 452+ 9404
 453+ 9404              ; Entidad_de_Tipo_3.
 454+ 9404
 455+ 9404 CB 76        3 bit 6,(hl)
 456+ 9406 28 09        	jr z,6F
 457+ 9408 18 04        	jr 5F
 458+ 940A
 459+ 940A              ; Entidad_de_Tipo_4.
 460+ 940A
 461+ 940A CB 7E        4 bit 7,(hl)
 462+ 940C 28 03        	jr z,6F
 463+ 940E
 464+ 940E              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 940E
 466+ 940E AF           5 xor a
 467+ 940F 3C           	inc a
 468+ 9410 C9           	ret
 469+ 9411
 470+ 9411              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9411
 472+ 9411 AF           6 xor a
 473+ 9412 C9           	ret
 474+ 9413
 475+ 9413              ;	------------------------------------------------------------------------------------
 476+ 9413              ;
 477+ 9413              ;	12/01/24
 478+ 9413              ;
 479+ 9413              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9413              ;
 481+ 9413              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9413              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9413
 484+ 9413 CB 27        Calcula_salto_en_BC sla a
 485+ 9415 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9417 4F           	ld c,a
 487+ 9418 06 00        	ld b,0
 488+ 941A C9           	ret
 489+ 941B
 490+ 941B              ; ------------------------------------------------------------------
 491+ 941B              ;
 492+ 941B              ;	19/1/24
 493+ 941B              ;
 494+ 941B              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 941B              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 941B
 497+ 941B A7           Situa_en_datos_de_definicion and a
 498+ 941C ED 4A        	adc hl,bc
 499+ 941E CD 80 90     	call Extrae_address
 500+ 9421 22 0A 8C         ld (Datos_de_entidad),hl
 501+ 9424 C9           	ret
 502+ 9425
 503+ 9425              ; ------------------------------------------------------------------
 504+ 9425
 505+ 9425              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9425              ; 	inc de
 507+ 9425              ; 	inc de
 508+ 9425              ; 	ex de,hl
 509+ 9425              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9425              ; 	ret
 511+ 9425
 512+ 9425              ; ----------------------------------------------------------------------------------------------------------
 513+ 9425              ;
 514+ 9425              ;	24/6/24
 515+ 9425              ;
 516+ 9425              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9425              ;	_ de entidad.
 518+ 9425              ;
 519+ 9425              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9425              ;
 521+ 9425              ;
 522+ 9425              ;	MODIFICA: HL,DE y BC
 523+ 9425
 524+ 9425
 525+ 9425              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9425
 527+ 9425 11 BF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9428 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9429 12           	ld (de),a
 530+ 942A 23           	inc hl
 531+ 942B              ;
 532+ 942B 11 CD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 942E 01 02 00     	ld bc,2
 534+ 9431 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9433              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9433 11 C2 8B     	ld de,Contador_de_vueltas
 537+ 9436 7E           	ld a,(hl)
 538+ 9437 12           	ld (de),a
 539+ 9438 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9439
 541+ 9439 11 D4 8B     	ld de,Indice_Sprite_der
 542+ 943C 01 04 00     	ld bc,4
 543+ 943F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9441
 545+ 9441 11 DC 8B     	ld de,Posicion_inicio
 546+ 9444 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9447 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9449
 549+ 9449 11 C6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 944C 01 02 00     	ld bc,2
 551+ 944F ED B0        	ldir
 552+ 9451
 553+ 9451 C9           	ret
 554+ 9452
 555+ 9452              ; ----------------------------------------------------------------------------------------------------------
 556+ 9452              ;
 557+ 9452              ;	1/8/24
 558+ 9452              ;
 559+ 9452
 560+ 9452              Parametros_de_bandeja_DRAW_a_caja
 561+ 9452
 562+ 9452 21 BF 8B     	ld hl,Bandeja_DRAW
 563+ 9455 01 0C 00     	ld bc,12
 564+ 9458 ED B0        	ldir
 565+ 945A C9           	ret
 566+ 945B
 567+ 945B              ;---------------------------------------------------------------------------------------------------------------
 568+ 945B              ;
 569+ 945B              ;	5/1/24
 570+ 945B              ;
 571+ 945B              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 945B              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 945B              ;
 574+ 945B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 945B              ;
 576+ 945B              ;	(Numero_parcial_de_entidades)="7".
 577+ 945B              ;
 578+ 945B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 945B              ;
 580+ 945B              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 945B              ;
 582+ 945B              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 945B              ;	MODIFICA: A y B.
 584+ 945B              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 945B
 586+ 945B              Inicializa_Numero_parcial_de_entidades
 587+ 945B
 588+ 945B              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 945B
 590+ 945B 3A 05 8C     	ld a,(Numero_de_entidades)
 591+ 945E A7           	and a
 592+ 945F
 593+ 945F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 945F              ;	jr z,$
 595+ 945F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 945F
 597+ 945F 20 03        	jr nz,3F
 598+ 9461
 599+ 9461              ; ---------- ---------- ----------
 600+ 9461
 601+ 9461              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9461              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9461
 604+ 9461 CD 57 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9464
 606+ 9464              ; ---------- ---------- ----------
 607+ 9464
 608+ 9464 3A 05 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9467 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9469 38 08        	jr c,1F
 611+ 946B
 612+ 946B              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 946B              ; Actualizamos variables.
 614+ 946B
 615+ 946B 3E 07        	ld a,7
 616+ 946D 32 06 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9470 47           	ld b,a
 618+ 9471 18 04        	jr 2F
 619+ 9473
 620+ 9473              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9473              ; (Numero_de_entidades)="0".
 622+ 9473
 623+ 9473 32 06 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9476 47           	ld b,a
 625+ 9477 C9           2 ret
 626+ 9478
# file closed: Rutinas_de_inicio_y_niveles.asm
2070  9478              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9478              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9478              ;
   3+ 9478              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9478              ;
   5+ 9478              ; *****************************************************************************************************************************************************************************************
   6+ 9478              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9478
   8+ 9478 7C           calcula_tercio ld a,h
   9+ 9479 E6 18        	and $18
  10+ 947B CB 2F        	sra a
  11+ 947D CB 2F        	sra a
  12+ 947F CB 2F        	sra a
  13+ 9481 C9           	ret
  14+ 9482
# file closed: calcula_tercio.asm
2071  9482              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9482              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9482              ;
   3+ 9482              ;
   4+ 9482              ;	CLS.
   5+ 9482              ;
   6+ 9482              ;	Limpia la pantalla y define sus atributos.
   7+ 9482              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9482              ;
   9+ 9482              ;	COLORES: 0 ..... NEGRO
  10+ 9482              ;    		 1 ..... AZUL
  11+ 9482              ; 			 2 ..... ROJO
  12+ 9482              ;			 3 ..... MAGENTA
  13+ 9482              ; 			 4 ..... VERDE
  14+ 9482              ; 			 5 ..... CIAN
  15+ 9482              ;			 6 ..... AMARILLO
  16+ 9482              ; 			 7 ..... BLANCO
  17+ 9482              ;
  18+ 9482              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9482              ;
  20+ 9482              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9482
  22+ 9482
  23+ 9482 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9485 11 01 40     	LD DE,$4001
  25+ 9488 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 948B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 948D ED B0        	LDIR
  28+ 948F 01 FF 02     	LD BC,767
  29+ 9492 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9493 ED B0        	LDIR
  31+ 9495 C9           	ret
  32+ 9496
# file closed: Cls.asm
2072  9496              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9496              ; ------------------------------------------------------------------------
   2+ 9496              ;
   3+ 9496              ;	30/1/24
   4+ 9496              ;
   5+ 9496              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9496              ;	Fila superior "0", Columna izquierda "0".
   7+ 9496              ;
   8+ 9496              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9496              ;
  10+ 9496              ;	Modifica: A,BC y DE.
  11+ 9496
  12+ 9496 7D           Genera_coordenadas ld a,l
  13+ 9497 E6 1F        	and $1f
  14+ 9499 32 C0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 949C
  16+ 949C 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 949D FE 40        	cp $40
  18+ 949F 38 1C        	jr c,4F
  19+ 94A1
  20+ 94A1 CD 78 94     	call calcula_tercio
  21+ 94A4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94A5
  23+ 94A5 1E 00        	ld e,0
  24+ 94A7 7D           	ld a,l
  25+ 94A8 E6 E0        	and $e0
  26+ 94AA 28 01        	jr z,1F
  27+ 94AC 04           	inc b
  28+ 94AD
  29+ 94AD 04           1 inc b
  30+ 94AE 05           	dec b
  31+ 94AF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94B1              ;														; _ , salimos.
  33+ 94B1 1C           3 inc e
  34+ 94B2 D6 20        	sub 32
  35+ 94B4 20 FB        	jr nz,3B
  36+ 94B6 10 F5        	djnz 1B
  37+ 94B8
  38+ 94B8 7B           2 ld a,e
  39+ 94B9 32 C1 8B     	ld (Coordenada_y),a
  40+ 94BC C9           	ret
  41+ 94BD
  42+ 94BD AF           4 xor a
  43+ 94BE 32 C1 8B     	ld (Coordenada_y),a
  44+ 94C1 C9           	ret
  45+ 94C2
# file closed: Genera_coordenadas.asm
2073  94C2              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94C2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94C2              ;
   3+ 94C2              ;	20/09/24
   4+ 94C2              ;
   5+ 94C2              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94C2              ;   DE contiene Puntero_objeto.
   7+ 94C2              ;   IX contiene el Puntero de impresión.
   8+ 94C2
   9+ 94C2              Genera_datos_de_impresion
  10+ 94C2
  11+ 94C2 ED 73 0C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94C6
  13+ 94C6 31 C6 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94C9 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94CB
  16+ 94CB 2A 29 8C         ld hl,(Scanlines_album_SP)
  17+ 94CE
  18+ 94CE 3E 05            ld a,5
  19+ 94D0 85               add l
  20+ 94D1 6F               ld l,a
  21+ 94D2
  22+ 94D2 F9               ld sp,hl
  23+ 94D3 22 29 8C         ld (Scanlines_album_SP),hl
  24+ 94D6
  25+ 94D6 21 00 00         ld hl,0
  26+ 94D9
  27+ 94D9 DD E5            push ix
  28+ 94DB 3B               dec sp
  29+ 94DC ED 7A            adc hl,sp
  30+ 94DE D5               push de
  31+ 94DF
  32+ 94DF              ; Recuperamos SP.
  33+ 94DF
  34+ 94DF ED 7B 0C 8C      ld sp,(Stack)
  35+ 94E3
  36+ 94E3 E5               push hl
  37+ 94E4 F1               pop af
  38+ 94E5 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94E6
  40+ 94E6              ; Tenemos el encabezado listo.
  41+ 94E6              ; Preparamos registros para generar los scanlines.
  42+ 94E6
  43+ 94E6 DD E5            push ix
  44+ 94E8 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94E9
  46+ 94E9 ED 5B 29 8C      ld de,(Scanlines_album_SP)
  47+ 94ED
  48+ 94ED              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94ED              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94ED
  51+ 94ED 7C               ld a,h
  52+ 94EE FE 50            cp $50
  53+ 94F0 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94F2
  55+ 94F2 20 05            jr nz,2F
  56+ 94F4
  57+ 94F4 7D               ld a,l
  58+ 94F5 FE E0            cp $e0
  59+ 94F7 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94F9
  61+ 94F9 7D           2 ld a,l
  62+ 94FA FE C0            cp $c0
  63+ 94FC D2 92 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94FF
  65+ 94FF              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94FF
  67+ 94FF CD 90 99         call NextScan
  68+ 9502 EB               ex de,hl
  69+ 9503
  70+ 9503 73               ld (hl),e
  71+ 9504 23               inc hl
  72+ 9505 72               ld (hl),d
  73+ 9506 23               inc hl
  74+ 9507
  75+ 9507 EB               ex de,hl
  76+ 9508
  77+ 9508 CD 90 99         call NextScan
  78+ 950B EB               ex de,hl
  79+ 950C
  80+ 950C 73               ld (hl),e
  81+ 950D 23               inc hl
  82+ 950E 72               ld (hl),d
  83+ 950F 23               inc hl
  84+ 9510
  85+ 9510 EB               ex de,hl
  86+ 9511
  87+ 9511 CD 90 99         call NextScan
  88+ 9514 EB               ex de,hl
  89+ 9515
  90+ 9515 73               ld (hl),e
  91+ 9516 23               inc hl
  92+ 9517 72               ld (hl),d
  93+ 9518 23               inc hl
  94+ 9519
  95+ 9519 EB               ex de,hl
  96+ 951A
  97+ 951A CD 90 99         call NextScan
  98+ 951D EB               ex de,hl
  99+ 951E
 100+ 951E 73               ld (hl),e
 101+ 951F 23               inc hl
 102+ 9520 72               ld (hl),d
 103+ 9521 23               inc hl
 104+ 9522
 105+ 9522 EB               ex de,hl
 106+ 9523
 107+ 9523 CD 90 99         call NextScan
 108+ 9526 EB               ex de,hl
 109+ 9527
 110+ 9527 73               ld (hl),e
 111+ 9528 23               inc hl
 112+ 9529 72               ld (hl),d
 113+ 952A 23               inc hl
 114+ 952B
 115+ 952B EB               ex de,hl
 116+ 952C
 117+ 952C CD 90 99         call NextScan
 118+ 952F EB               ex de,hl
 119+ 9530
 120+ 9530 73               ld (hl),e
 121+ 9531 23               inc hl
 122+ 9532 72               ld (hl),d
 123+ 9533 23               inc hl
 124+ 9534
 125+ 9534 EB               ex de,hl
 126+ 9535
 127+ 9535 CD 90 99         call NextScan
 128+ 9538 EB               ex de,hl
 129+ 9539
 130+ 9539 73               ld (hl),e
 131+ 953A 23               inc hl
 132+ 953B 72               ld (hl),d
 133+ 953C 23               inc hl
 134+ 953D
 135+ 953D EB               ex de,hl
 136+ 953E
 137+ 953E CD 90 99         call NextScan
 138+ 9541 EB               ex de,hl
 139+ 9542
 140+ 9542 73               ld (hl),e
 141+ 9543 23               inc hl
 142+ 9544 72               ld (hl),d
 143+ 9545 23               inc hl
 144+ 9546
 145+ 9546 EB               ex de,hl
 146+ 9547
 147+ 9547 CD 90 99         call NextScan
 148+ 954A EB               ex de,hl
 149+ 954B
 150+ 954B 73               ld (hl),e
 151+ 954C 23               inc hl
 152+ 954D 72               ld (hl),d
 153+ 954E 23               inc hl
 154+ 954F
 155+ 954F EB               ex de,hl
 156+ 9550
 157+ 9550 CD 90 99         call NextScan
 158+ 9553 EB               ex de,hl
 159+ 9554
 160+ 9554 73               ld (hl),e
 161+ 9555 23               inc hl
 162+ 9556 72               ld (hl),d
 163+ 9557 23               inc hl
 164+ 9558
 165+ 9558 EB               ex de,hl
 166+ 9559
 167+ 9559 CD 90 99         call NextScan
 168+ 955C EB               ex de,hl
 169+ 955D
 170+ 955D 73               ld (hl),e
 171+ 955E 23               inc hl
 172+ 955F 72               ld (hl),d
 173+ 9560 23               inc hl
 174+ 9561
 175+ 9561 EB               ex de,hl
 176+ 9562
 177+ 9562 CD 90 99         call NextScan
 178+ 9565 EB               ex de,hl
 179+ 9566
 180+ 9566 73               ld (hl),e
 181+ 9567 23               inc hl
 182+ 9568 72               ld (hl),d
 183+ 9569 23               inc hl
 184+ 956A
 185+ 956A EB               ex de,hl
 186+ 956B
 187+ 956B CD 90 99         call NextScan
 188+ 956E EB               ex de,hl
 189+ 956F
 190+ 956F 73               ld (hl),e
 191+ 9570 23               inc hl
 192+ 9571 72               ld (hl),d
 193+ 9572 23               inc hl
 194+ 9573
 195+ 9573 EB               ex de,hl
 196+ 9574
 197+ 9574 CD 90 99         call NextScan
 198+ 9577 EB               ex de,hl
 199+ 9578
 200+ 9578 73               ld (hl),e
 201+ 9579 23               inc hl
 202+ 957A 72               ld (hl),d
 203+ 957B 23               inc hl
 204+ 957C
 205+ 957C EB               ex de,hl
 206+ 957D
 207+ 957D CD 90 99         call NextScan
 208+ 9580 EB               ex de,hl
 209+ 9581
 210+ 9581              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 9581              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 9581              ;   _ generar sus scanlines.
 213+ 9581
 214+ 9581              ;    ld (Puntero_de_impresion_disparo),de
 215+ 9581
 216+ 9581 73               ld (hl),e
 217+ 9582 23               inc hl
 218+ 9583 72               ld (hl),d
 219+ 9584 23               inc hl
 220+ 9585
 221+ 9585              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 9585
 223+ 9585 22 29 8C         ld (Scanlines_album_SP),hl
 224+ 9588
 225+ 9588 EB               ex de,hl
 226+ 9589
 227+ 9589              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 9589
 229+ 9589              ;    call NextScan
 230+ 9589              ;    call NextScan
 231+ 9589
 232+ 9589 22 34 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 958C
 234+ 958C              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 958C
 236+ 958C 08               ex af,af
 237+ 958D
 238+ 958D F5               push af
 239+ 958E E1               pop hl
 240+ 958F
 241+ 958F 36 10            ld (hl),16
 242+ 9591
 243+ 9591 C9               ret
 244+ 9592
 245+ 9592              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 9592
 247+ 9592              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 9592
 249+ 9592 3E 57            ld a,$57
 250+ 9594 94               sub h
 251+ 9595 47               ld b,a
 252+ 9596
 253+ 9596 3E DF            ld a,$df
 254+ 9598 BD               cp l
 255+ 9599 38 04            jr c,1F
 256+ 959B
 257+ 959B 3E 08            ld a,8
 258+ 959D 80               add b
 259+ 959E 47               ld b,a
 260+ 959F
 261+ 959F              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 959F              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 959F
 264+ 959F 48           1 ld c,b
 265+ 95A0 0C               inc c
 266+ 95A1
 267+ 95A1 04               inc b
 268+ 95A2 05               dec b
 269+ 95A3 20 02            jr nz,3F
 270+ 95A5
 271+ 95A5 18 0B            jr 6F
 272+ 95A7
 273+ 95A7 CD 90 99     3 call NextScan
 274+ 95AA EB               ex de,hl
 275+ 95AB
 276+ 95AB 73               ld (hl),e
 277+ 95AC 23               inc hl
 278+ 95AD 72               ld (hl),d
 279+ 95AE 23               inc hl
 280+ 95AF
 281+ 95AF EB               ex de,hl
 282+ 95B0 10 F5            djnz 3B
 283+ 95B2
 284+ 95B2 ED 53 29 8C  6 ld (Scanlines_album_SP),de
 285+ 95B6
 286+ 95B6 08           5 ex af,af
 287+ 95B7 F5               push af
 288+ 95B8 E1               pop hl
 289+ 95B9
 290+ 95B9 71               ld (hl),c
 291+ 95BA
 292+ 95BA C9               ret
 293+ 95BB
# file closed: Genera_datos_de_impresion.asm
2074  95BB              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95BB              ; -----------------------------------------------------------------------------
   2+ 95BB              ;
   3+ 95BB              ;   11/03/24
   4+ 95BB              ;
   5+ 95BB
   6+ 95BB              Pinta_Sprites
   7+ 95BB
   8+ 95BB              ;    ld hl,(Scanlines_album_SP)
   9+ 95BB              ;    call Extrae_address
  10+ 95BB
  11+ 95BB              ;    inc h
  12+ 95BB              ;    dec h
  13+ 95BB              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95BB
  15+ 95BB ED 73 0C 8C      ld (Stack),sp
  16+ 95BF
  17+ 95BF EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95C0              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95C0 2C               inc l
  20+ 95C1 2C               inc l
  21+ 95C2
  22+ 95C2 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95C3
  24+ 95C3 2C               inc l
  25+ 95C4 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95C5
  27+ 95C5              ;   Seleccionamos rutina de impresión:
  28+ 95C5
  29+ 95C5 3E 10            ld a,16
  30+ 95C7 B8               cp b
  31+ 95C8 C2 C4 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95CB
  33+ 95CB              ;   Rutinas:
  34+ 95CB
  35+ 95CB              Pinta_rapido    ;   1520 t/states.
  36+ 95CB
  37+ 95CB E1               pop hl
  38+ 95CC
  39+ 95CC 1A               ld a,(de)
  40+ 95CD AE               xor (hl)
  41+ 95CE 77               ld (hl),a
  42+ 95CF 2C               inc l
  43+ 95D0 1C               inc e
  44+ 95D1 1A               ld a,(de)
  45+ 95D2 AE               xor (hl)
  46+ 95D3 77               ld (hl),a
  47+ 95D4 2C               inc l
  48+ 95D5 1C               inc e
  49+ 95D6 1A               ld a,(de)
  50+ 95D7 AE               xor (hl)
  51+ 95D8 77               ld (hl),a
  52+ 95D9 13               inc de
  53+ 95DA
  54+ 95DA E1               pop hl
  55+ 95DB
  56+ 95DB 1A               ld a,(de)
  57+ 95DC AE               xor (hl)
  58+ 95DD 77               ld (hl),a
  59+ 95DE 2C               inc l
  60+ 95DF 1C               inc e
  61+ 95E0 1A               ld a,(de)
  62+ 95E1 AE               xor (hl)
  63+ 95E2 77               ld (hl),a
  64+ 95E3 2C               inc l
  65+ 95E4 1C               inc e
  66+ 95E5 1A               ld a,(de)
  67+ 95E6 AE               xor (hl)
  68+ 95E7 77               ld (hl),a
  69+ 95E8 13               inc de
  70+ 95E9
  71+ 95E9 E1               pop hl
  72+ 95EA
  73+ 95EA 1A               ld a,(de)
  74+ 95EB AE               xor (hl)
  75+ 95EC 77               ld (hl),a
  76+ 95ED 2C               inc l
  77+ 95EE 1C               inc e
  78+ 95EF 1A               ld a,(de)
  79+ 95F0 AE               xor (hl)
  80+ 95F1 77               ld (hl),a
  81+ 95F2 2C               inc l
  82+ 95F3 1C               inc e
  83+ 95F4 1A               ld a,(de)
  84+ 95F5 AE               xor (hl)
  85+ 95F6 77               ld (hl),a
  86+ 95F7 13               inc de
  87+ 95F8
  88+ 95F8 E1               pop hl
  89+ 95F9
  90+ 95F9 1A               ld a,(de)
  91+ 95FA AE               xor (hl)
  92+ 95FB 77               ld (hl),a
  93+ 95FC 2C               inc l
  94+ 95FD 1C               inc e
  95+ 95FE 1A               ld a,(de)
  96+ 95FF AE               xor (hl)
  97+ 9600 77               ld (hl),a
  98+ 9601 2C               inc l
  99+ 9602 1C               inc e
 100+ 9603 1A               ld a,(de)
 101+ 9604 AE               xor (hl)
 102+ 9605 77               ld (hl),a
 103+ 9606 13               inc de
 104+ 9607
 105+ 9607 E1               pop hl
 106+ 9608
 107+ 9608 1A               ld a,(de)
 108+ 9609 AE               xor (hl)
 109+ 960A 77               ld (hl),a
 110+ 960B 2C               inc l
 111+ 960C 1C               inc e
 112+ 960D 1A               ld a,(de)
 113+ 960E AE               xor (hl)
 114+ 960F 77               ld (hl),a
 115+ 9610 2C               inc l
 116+ 9611 1C               inc e
 117+ 9612 1A               ld a,(de)
 118+ 9613 AE               xor (hl)
 119+ 9614 77               ld (hl),a
 120+ 9615 13               inc de
 121+ 9616
 122+ 9616 E1               pop hl
 123+ 9617
 124+ 9617 1A               ld a,(de)
 125+ 9618 AE               xor (hl)
 126+ 9619 77               ld (hl),a
 127+ 961A 2C               inc l
 128+ 961B 1C               inc e
 129+ 961C 1A               ld a,(de)
 130+ 961D AE               xor (hl)
 131+ 961E 77               ld (hl),a
 132+ 961F 2C               inc l
 133+ 9620 1C               inc e
 134+ 9621 1A               ld a,(de)
 135+ 9622 AE               xor (hl)
 136+ 9623 77               ld (hl),a
 137+ 9624 13               inc de
 138+ 9625
 139+ 9625 E1               pop hl
 140+ 9626
 141+ 9626 1A               ld a,(de)
 142+ 9627 AE               xor (hl)
 143+ 9628 77               ld (hl),a
 144+ 9629 2C               inc l
 145+ 962A 1C               inc e
 146+ 962B 1A               ld a,(de)
 147+ 962C AE               xor (hl)
 148+ 962D 77               ld (hl),a
 149+ 962E 2C               inc l
 150+ 962F 1C               inc e
 151+ 9630 1A               ld a,(de)
 152+ 9631 AE               xor (hl)
 153+ 9632 77               ld (hl),a
 154+ 9633 13               inc de
 155+ 9634
 156+ 9634 E1               pop hl
 157+ 9635
 158+ 9635 1A               ld a,(de)
 159+ 9636 AE               xor (hl)
 160+ 9637 77               ld (hl),a
 161+ 9638 2C               inc l
 162+ 9639 1C               inc e
 163+ 963A 1A               ld a,(de)
 164+ 963B AE               xor (hl)
 165+ 963C 77               ld (hl),a
 166+ 963D 2C               inc l
 167+ 963E 1C               inc e
 168+ 963F 1A               ld a,(de)
 169+ 9640 AE               xor (hl)
 170+ 9641 77               ld (hl),a
 171+ 9642 13               inc de
 172+ 9643
 173+ 9643 E1               pop hl
 174+ 9644
 175+ 9644 1A               ld a,(de)
 176+ 9645 AE               xor (hl)
 177+ 9646 77               ld (hl),a
 178+ 9647 2C               inc l
 179+ 9648 1C               inc e
 180+ 9649 1A               ld a,(de)
 181+ 964A AE               xor (hl)
 182+ 964B 77               ld (hl),a
 183+ 964C 2C               inc l
 184+ 964D 1C               inc e
 185+ 964E 1A               ld a,(de)
 186+ 964F AE               xor (hl)
 187+ 9650 77               ld (hl),a
 188+ 9651 13               inc de
 189+ 9652
 190+ 9652 E1               pop hl
 191+ 9653
 192+ 9653 1A               ld a,(de)
 193+ 9654 AE               xor (hl)
 194+ 9655 77               ld (hl),a
 195+ 9656 2C               inc l
 196+ 9657 1C               inc e
 197+ 9658 1A               ld a,(de)
 198+ 9659 AE               xor (hl)
 199+ 965A 77               ld (hl),a
 200+ 965B 2C               inc l
 201+ 965C 1C               inc e
 202+ 965D 1A               ld a,(de)
 203+ 965E AE               xor (hl)
 204+ 965F 77               ld (hl),a
 205+ 9660 13               inc de
 206+ 9661
 207+ 9661 E1               pop hl
 208+ 9662
 209+ 9662 1A               ld a,(de)
 210+ 9663 AE               xor (hl)
 211+ 9664 77               ld (hl),a
 212+ 9665 2C               inc l
 213+ 9666 1C               inc e
 214+ 9667 1A               ld a,(de)
 215+ 9668 AE               xor (hl)
 216+ 9669 77               ld (hl),a
 217+ 966A 2C               inc l
 218+ 966B 1C               inc e
 219+ 966C 1A               ld a,(de)
 220+ 966D AE               xor (hl)
 221+ 966E 77               ld (hl),a
 222+ 966F 13               inc de
 223+ 9670
 224+ 9670 E1               pop hl
 225+ 9671
 226+ 9671 1A               ld a,(de)
 227+ 9672 AE               xor (hl)
 228+ 9673 77               ld (hl),a
 229+ 9674 2C               inc l
 230+ 9675 1C               inc e
 231+ 9676 1A               ld a,(de)
 232+ 9677 AE               xor (hl)
 233+ 9678 77               ld (hl),a
 234+ 9679 2C               inc l
 235+ 967A 1C               inc e
 236+ 967B 1A               ld a,(de)
 237+ 967C AE               xor (hl)
 238+ 967D 77               ld (hl),a
 239+ 967E 13               inc de
 240+ 967F
 241+ 967F E1               pop hl
 242+ 9680
 243+ 9680 1A               ld a,(de)
 244+ 9681 AE               xor (hl)
 245+ 9682 77               ld (hl),a
 246+ 9683 2C               inc l
 247+ 9684 1C               inc e
 248+ 9685 1A               ld a,(de)
 249+ 9686 AE               xor (hl)
 250+ 9687 77               ld (hl),a
 251+ 9688 2C               inc l
 252+ 9689 1C               inc e
 253+ 968A 1A               ld a,(de)
 254+ 968B AE               xor (hl)
 255+ 968C 77               ld (hl),a
 256+ 968D 13               inc de
 257+ 968E
 258+ 968E E1               pop hl
 259+ 968F
 260+ 968F 1A               ld a,(de)
 261+ 9690 AE               xor (hl)
 262+ 9691 77               ld (hl),a
 263+ 9692 2C               inc l
 264+ 9693 1C               inc e
 265+ 9694 1A               ld a,(de)
 266+ 9695 AE               xor (hl)
 267+ 9696 77               ld (hl),a
 268+ 9697 2C               inc l
 269+ 9698 1C               inc e
 270+ 9699 1A               ld a,(de)
 271+ 969A AE               xor (hl)
 272+ 969B 77               ld (hl),a
 273+ 969C 13               inc de
 274+ 969D
 275+ 969D E1               pop hl
 276+ 969E
 277+ 969E 1A               ld a,(de)
 278+ 969F AE               xor (hl)
 279+ 96A0 77               ld (hl),a
 280+ 96A1 2C               inc l
 281+ 96A2 1C               inc e
 282+ 96A3 1A               ld a,(de)
 283+ 96A4 AE               xor (hl)
 284+ 96A5 77               ld (hl),a
 285+ 96A6 2C               inc l
 286+ 96A7 1C               inc e
 287+ 96A8 1A               ld a,(de)
 288+ 96A9 AE               xor (hl)
 289+ 96AA 77               ld (hl),a
 290+ 96AB 13               inc de
 291+ 96AC
 292+ 96AC E1               pop hl
 293+ 96AD
 294+ 96AD 1A               ld a,(de)
 295+ 96AE AE               xor (hl)
 296+ 96AF 77               ld (hl),a
 297+ 96B0 2C               inc l
 298+ 96B1 1C               inc e
 299+ 96B2 1A               ld a,(de)
 300+ 96B3 AE               xor (hl)
 301+ 96B4 77               ld (hl),a
 302+ 96B5 2C               inc l
 303+ 96B6 1C               inc e
 304+ 96B7 1A               ld a,(de)
 305+ 96B8 AE               xor (hl)
 306+ 96B9 77               ld (hl),a
 307+ 96BA 13               inc de
 308+ 96BB
 309+ 96BB ED 73 29 8C      ld (Scanlines_album_SP),sp
 310+ 96BF ED 7B 0C 8C      ld sp,(Stack)
 311+ 96C3 C9               ret
 312+ 96C4
 313+ 96C4              Pinta_lento
 314+ 96C4
 315+ 96C4 E1           1 pop hl
 316+ 96C5
 317+ 96C5 1A               ld a,(de)
 318+ 96C6 AE               xor (hl)
 319+ 96C7 77               ld (hl),a
 320+ 96C8 2C               inc l
 321+ 96C9 1C               inc e
 322+ 96CA 1A               ld a,(de)
 323+ 96CB AE               xor (hl)
 324+ 96CC 77               ld (hl),a
 325+ 96CD 2C               inc l
 326+ 96CE 1C               inc e
 327+ 96CF 1A               ld a,(de)
 328+ 96D0 AE               xor (hl)
 329+ 96D1 77               ld (hl),a
 330+ 96D2 13               inc de
 331+ 96D3
 332+ 96D3 10 EF            djnz 1B
 333+ 96D5
 334+ 96D5 ED 73 29 8C      ld (Scanlines_album_SP),sp
 335+ 96D9 ED 7B 0C 8C      ld sp,(Stack)
 336+ 96DD C9               ret
# file closed: Pinta_Sprites.asm
2075  96DE              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96DE              ; ******************************************************************************************************************************************************************************************
   2+ 96DE              ;
   3+ 96DE              ; 26/06/23
   4+ 96DE              ;
   5+ 96DE              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96DE
   7+ 96DE              Draw
   8+ 96DE
   9+ 96DE CD 84 99     	call Prepara_draw
  10+ 96E1 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96E2 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96E3 28 05        	jr z,2F
  13+ 96E5
  14+ 96E5 3A DE 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96E8 18 0C        	jr 1F
  16+ 96EA
  17+ 96EA 2A DC 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96ED 22 CF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96F0 CD 7C 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96F3              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96F3
  22+ 96F3 CD 23 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96F6
  24+ 96F6 3A CC 8B     1 ld a,(Ctrl_0)
  25+ 96F9 CB 6F        	bit 5,a
  26+ 96FB 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96FD
  28+ 96FD CD 12 97     	call Comprueba_limite_horizontal
  29+ 9700 CD A2 97     	call Comprueba_limite_vertical
  30+ 9703
  31+ 9703              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9703              ; -----------------------
  33+ 9703              ; -----------------------
  34+ 9703              ; -----------------------
  35+ 9703
  36+ 9703 CD F8 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9706 CD 2F 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9709
  39+ 9709 3A CC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 970C CB AF        	res 5,a											; _a ser de utilidad.
  41+ 970E 32 CC 8B     	ld (Ctrl_0),a
  42+ 9711
  43+ 9711 C9           	ret
  44+ 9712
  45+ 9712              ; *******************************************************************************************************************************************************************************************
  46+ 9712              ;	21/01/23
  47+ 9712              ;
  48+ 9712              ; 	Comprueba_limite_horizontal.
  49+ 9712              ;
  50+ 9712              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9712              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9712              ;
  53+ 9712              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9712              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9712              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9712              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9712
  58+ 9712
  59+ 9712
  60+ 9712 3A CC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9715 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9717 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9719 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 971B 32 CC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 971E 18 09            jr 6F
  66+ 9720 CB 5F        1 bit 3,a
  67+ 9722 28 0A            jr z,2F
  68+ 9724 E6 F7            and $f7
  69+ 9726 32 CC 8B         ld (Ctrl_0),a
  70+ 9729 CD 7C 98     6 call Inicializacion
  71+ 972C 18 5B            jr 5F
  72+ 972E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 972F
  74+ 972F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 972F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 972F
  77+ 972F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9730 2A E0 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9733 CD 78 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9736 67           	ld h,a
  81+ 9737 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9738 CD 78 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 973B 67           	ld h,a
  84+ 973C A7           	and a
  85+ 973D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 973F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9740 3A DE 8B     	ld a,(Cuad_objeto)
  88+ 9743 FE 02        	cp 2
  89+ 9745 38 1E        	jr c,3F
  90+ 9747 28 1C        	jr z,3F
  91+ 9749 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 974A 28 23            jr z,7F
  93+ 974C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 974E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9750 E1           	pop hl
  96+ 9751
  97+ 9751              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9751              ; _para indicar con E="2" en caso necesario.
  99+ 9751
 100+ 9751 E5               push hl
 101+ 9752 C5               push bc
 102+ 9753 CD 78 94     	call calcula_tercio
 103+ 9756 FE 01        	cp 1
 104+ 9758 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 975A CD 8A 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 975D 28 26            jr z,9F
 107+ 975F 38 24            jr c,9F
 108+ 9761 1E 00        11 ld e,0
 109+ 9763 18 22            jr 8F
 110+ 9765 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9766 28 07        	jr z, 7F
 112+ 9768 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 976A 1E 00         	ld e,0
 114+ 976C E1           	pop hl
 115+ 976D 18 04        	jr 4F
 116+ 976F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9771 18 15            jr 10F
 118+ 9773
 119+ 9773              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9773              ; _para indicar con E="2" en caso necesario.
 121+ 9773
 122+ 9773 E5           4 push hl
 123+ 9774 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9775 CD 78 94     	call calcula_tercio
 125+ 9778 FE 01        	cp 1
 126+ 977A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 977C CD 8A 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 977F 28 04            jr z,9F
 129+ 9781 30 02            jr nc,9F
 130+ 9783 18 02        	jr 8F
 131+ 9785 1E 02        9 ld e,2
 132+ 9787 C1           8 pop bc
 133+ 9788 E1           10 pop hl
 134+ 9789 C9           5 ret
 135+ 978A
 136+ 978A              ; --------------------
 137+ 978A              ;
 138+ 978A              ; 25/08/22
 139+ 978A
 140+ 978A CD 78 94     Comprueba_centro call calcula_tercio
 141+ 978D 67               ld h,a
 142+ 978E 08           	ex af,af
 143+ 978F FE 02        	cp 2
 144+ 9791 38 07        	jr c,1F
 145+ 9793 28 05        	jr z,1F
 146+ 9795 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9798 18 03        	jr 2F
 148+ 979A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 979D 08           2 ex af,af
 150+ 979E A7               and a
 151+ 979F ED 42            sbc hl,bc
 152+ 97A1 C9               ret
 153+ 97A2
 154+ 97A2              ; *********************************************************************************************************************************************************************************************
 155+ 97A2              ;
 156+ 97A2              ;   16/8/22
 157+ 97A2              ;
 158+ 97A2              ;	Comprueba_limite_vertical
 159+ 97A2              ;
 160+ 97A2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97A2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97A2              ;
 163+ 97A2
 164+ 97A2 2A CF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97A5 7D           	ld a,l
 166+ 97A6 E6 1F        	and $1F
 167+ 97A8 57           	ld d,a
 168+ 97A9 3A E2 8B     	ld a,(Limite_vertical)
 169+ 97AC BA           	cp d 											; Límite - Posición.
 170+ 97AD 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97AE 3A DE 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97B1 CB 47        	bit 0,a
 173+ 97B3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97B5
 175+ 97B5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97B5
 177+ 97B5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97B6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97B8
 180+ 97B8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97B8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97B8
 183+ 97B8 3A C0 8B         ld a,(Coordenada_X)
 184+ 97BB 16 0F            ld d,Centro_izquierda
 185+ 97BD A7               and a
 186+ 97BE 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97BF 28 1E            jr z,3F
 188+ 97C1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97C3              ;                                                    ; _salimos sin modificar nada.
 190+ 97C3 18 0E            jr 2F
 191+ 97C5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97C6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97C8
 194+ 97C8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97C8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97C8
 197+ 97C8 3A C0 8B         ld a,(Coordenada_X)
 198+ 97CB 16 10            ld d,Centro_derecha
 199+ 97CD A7               and a
 200+ 97CE 92               sub d
 201+ 97CF 28 0E            jr z,3F
 202+ 97D1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97D3              ;                                                    ; _salimos sin modificar nada.
 204+ 97D3 CB 43        2 bit 0,e
 205+ 97D5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97D7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97D8 CD 6C 98         call Modificaccionne
 208+ 97DB C1           	pop bc
 209+ 97DC CD 7C 98         call Inicializacion
 210+ 97DF C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97E0
 212+ 97E0              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97E0
 214+ 97E0 C5           4 push bc
 215+ 97E1 01 CE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97E4 0A           	ld a,(bc)
 217+ 97E5 3D           	dec a
 218+ 97E6 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97E7 7D           	ld a,l
 220+ 97E8 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97E9 CB 47        	bit 0,a
 222+ 97EB 28 03        	jr z,5F
 223+ 97ED 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97EE 18 2E        	jr 7F
 225+ 97F0
 226+ 97F0              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97F0
 228+ 97F0 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97F1 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97F2 3A CC 8B     	ld a,(Ctrl_0)
 231+ 97F5 CB 4F        	bit 1,a
 232+ 97F7 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97F9 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97FA
 235+ 97FA              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97FA
 237+ 97FA 1C               inc e
 238+ 97FB 1D               dec e
 239+ 97FC 20 07            jr nz,12F
 240+ 97FE 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97FF 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9800 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9803 18 44        13 jr 9F
 244+ 9805 CB 43        12 bit 0,e
 245+ 9807 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9809              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9809 C1           	pop bc
 248+ 980A 18 D3        	jr 3B
 249+ 980C 80           14 add b
 250+ 980D 6F               ld l,a
 251+ 980E 22 CF 8B     	ld (Posicion_actual),hl
 252+ 9811 CD 6C 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9814 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9816 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9818 32 CC 8B         ld (Ctrl_0),a
 256+ 981B F1           	pop af
 257+ 981C 18 2B        	jr 9F
 258+ 981E
 259+ 981E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 981E
 261+ 981E F5           7 push af
 262+ 981F 3A CC 8B     	ld a,(Ctrl_0)
 263+ 9822 CB 47        	bit 0,a
 264+ 9824 20 1D        	jr nz,8F
 265+ 9826 F1           	pop af
 266+ 9827
 267+ 9827              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9827
 269+ 9827 1C           	inc e
 270+ 9828 1D               dec e
 271+ 9829 20 07            jr nz,10F
 272+ 982B 90           	sub b
 273+ 982C 6F               ld l,a
 274+ 982D 22 CF 8B     	ld (Posicion_actual),hl
 275+ 9830 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9832              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9832 CB 43        10 bit 0,e
 278+ 9834 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9836              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9836 C1           	pop bc
 281+ 9837 18 A6        	jr 3B
 282+ 9839 90           16 sub b
 283+ 983A 6F               ld l,a
 284+ 983B 22 CF 8B     	ld (Posicion_actual),hl
 285+ 983E CD 6C 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9841 18 06            jr 9F
 287+ 9843 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9845 32 CC 8B         ld (Ctrl_0),a
 289+ 9848 F1           	pop af
 290+ 9849 C1           9 pop bc
 291+ 984A 1E 00        	ld e,0
 292+ 984C CD 7C 98         call Inicializacion
 293+ 984F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9850 08           	ex af,af
 295+ 9851 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9852 18 8B            jr 3B
 297+ 9854
 298+ 9854              ; --------------------
 299+ 9854
 300+ 9854 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9856 CD 9F 99     1 call PreviousScan
 302+ 9859 10 FB            djnz 1B
 303+ 985B 22 CF 8B     	ld (Posicion_actual),hl
 304+ 985E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 985F C9           	ret
 306+ 9860
 307+ 9860              ; --------------------
 308+ 9860
 309+ 9860 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9862 CD 90 99     1 call NextScan
 311+ 9865 10 FB            djnz 1B
 312+ 9867 22 CF 8B     	ld (Posicion_actual),hl
 313+ 986A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 986B C9           	ret
 315+ 986C
 316+ 986C              ; --------------------
 317+ 986C              ;
 318+ 986C              ;	22/01/23
 319+ 986C              ;
 320+ 986C              ;	E="1". Hemos cambiado de cuadrante.
 321+ 986C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 986C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 986C
 324+ 986C
 325+ 986C              Modificaccionne
 326+ 986C
 327+ 986C 3A DE 8B     	ld a,(Cuad_objeto)
 328+ 986F FE 02        	cp 2
 329+ 9871 CC 54 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9874 DC 54 98         call c,Modifica_Pos_actual
 331+ 9877 C8           	ret z
 332+ 9878 CD 60 98         call Modifica_Pos_actual2
 333+ 987B C9               ret
 334+ 987C
 335+ 987C              ; *************************************************************************************************************************************************************************************************
 336+ 987C              ;
 337+ 987C              ;	13/8/22
 338+ 987C              ;
 339+ 987C              ;	Inicializacion
 340+ 987C              ;
 341+ 987C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 987C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 987C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 987C              ;
 345+ 987C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 987C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 987C              ;	_ desaparece/aparece.
 348+ 987C
 349+ 987C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 987C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 987C              ;
 352+ 987C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 987C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 987C              ; 		   [E] ="0"
 355+ 987C
 356+ 987C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 987C
 358+ 987C CD 78 94     Inicializacion call calcula_tercio
 359+ 987F 28 36        	jr z,primit
 360+ 9881 E6 02        	and 2
 361+ 9883 20 07        	jr nz,segmit
 362+ 9885 7D           	ld a,l
 363+ 9886 FE 7F        	cp $7f
 364+ 9888 38 2D        	jr c,primit
 365+ 988A 28 2B        	jr z,primit
 366+ 988C CD F2 98     segmit call column
 367+ 988F 38 13        	jr c,tercuad
 368+ 9891 3E 04        cuarcuad ld a,4
 369+ 9893 32 DE 8B     	ld (Cuad_objeto),a
 370+ 9896 21 20 48     	ld hl,$4820
 371+ 9899 22 E0 8B     	ld (Limite_horizontal),hl
 372+ 989C 21 E2 8B     	ld hl,Limite_vertical
 373+ 989F 36 0D        	ld (hl),$0d
 374+ 98A1 08           	ex af,af
 375+ 98A2 18 3C        	jr 1F
 376+ 98A4              tercuad
 377+ 98A4 3E 03        	ld a,3
 378+ 98A6 32 DE 8B     	ld (Cuad_objeto),a
 379+ 98A9 21 20 48     	ld hl,$4820
 380+ 98AC 22 E0 8B     	ld (Limite_horizontal),hl
 381+ 98AF 21 E2 8B     	ld hl,Limite_vertical
 382+ 98B2 36 12        	ld (hl),$12
 383+ 98B4 08           	ex af,af
 384+ 98B5 18 29        	jr 1F
 385+ 98B7 CD F2 98     primit call column
 386+ 98BA 38 13        	jr c, primcuad
 387+ 98BC              segcuad
 388+ 98BC 3E 02        	ld a,2
 389+ 98BE 32 DE 8B     	ld (Cuad_objeto),a
 390+ 98C1 21 C0 4F     	ld hl,$4fc0
 391+ 98C4 22 E0 8B     	ld (Limite_horizontal),hl
 392+ 98C7 21 E2 8B     	ld hl,Limite_vertical
 393+ 98CA 36 0D        	ld (hl),$0d
 394+ 98CC 08           	ex af,af
 395+ 98CD 18 11        	jr 1F
 396+ 98CF              primcuad
 397+ 98CF 3E 01        	ld a,1
 398+ 98D1 32 DE 8B     	ld (Cuad_objeto),a
 399+ 98D4 21 C0 4F     	ld hl,$4fc0
 400+ 98D7 22 E0 8B     	ld (Limite_horizontal),hl
 401+ 98DA 21 E2 8B     	ld hl,Limite_vertical
 402+ 98DD 36 12        	ld (hl),$12
 403+ 98DF 08           	ex af,af
 404+ 98E0
 405+ 98E0 C5           1 push bc
 406+ 98E1 E5           	push hl
 407+ 98E2 D5           	push de
 408+ 98E3
 409+ 98E3 2A CF 8B     	ld hl,(Posicion_actual)
 410+ 98E6 CD 96 94     	call Genera_coordenadas
 411+ 98E9
 412+ 98E9 D1           	pop de
 413+ 98EA E1           	pop hl
 414+ 98EB C1           	pop bc
 415+ 98EC
 416+ 98EC 21 CC 8B     	ld hl,Ctrl_0
 417+ 98EF CB EE        	set 5,(hl)
 418+ 98F1 C9           	ret
 419+ 98F2
 420+ 98F2              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98F2
 422+ 98F2              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98F2              ;
 424+ 98F2              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98F2
 426+ 98F2 7D           column ld a,l
 427+ 98F3 E6 1F        	and $1f
 428+ 98F5 FE 10         	cp $10
 429+ 98F7 C9            	ret
 430+ 98F8
 431+ 98F8              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98F8              ;
 433+ 98F8              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98F8              ;
 435+ 98F8              ; 14/12/22
 436+ 98F8              ;
 437+ 98F8              ;	Modifica: A y BC.
 438+ 98F8
 439+ 98F8 3A DE 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98FB E6 01        	and 1
 441+ 98FD 28 17        	jr z,1F
 442+ 98FF
 443+ 98FF              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98FF
 445+ 98FF 3A C0 8B     	ld a,(Coordenada_X)
 446+ 9902 47           	ld b,a
 447+ 9903 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9904 79           	ld a,c
 449+ 9905 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9906 38 08        	jr c,2F
 451+ 9908 47           	ld b,a
 452+ 9909 79           	ld a,c
 453+ 990A 90           	sub b
 454+ 990B 32 DF 8B     	ld (Columnas),a
 455+ 990E 18 1B        	jr 4F
 456+ 9910 79           2 ld a,c
 457+ 9911 32 DF 8B     	ld (Columnas),a
 458+ 9914 18 15        	jr 4F
 459+ 9916
 460+ 9916              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9916
 462+ 9916 3A C0 8B     1 ld a,(Coordenada_X)
 463+ 9919 81           	add c
 464+ 991A 3D           	dec a
 465+ 991B D6 1F        	sub $1f
 466+ 991D 38 08        	jr c,3F
 467+ 991F 47           	ld b,a
 468+ 9920 79           	ld a,c
 469+ 9921 90           	sub b
 470+ 9922 32 DF 8B     	ld (Columnas),a
 471+ 9925 18 04        	jr 4F
 472+ 9927 79           3 ld a,c
 473+ 9928 32 DF 8B     	ld (Columnas),a
 474+ 992B D9           4 exx
 475+ 992C 4F           	ld c,a
 476+ 992D D9           	exx
 477+ 992E C9            ret
 478+ 992F
 479+ 992F              ; --------------------------------------------------------------------------------------------------------------------
 480+ 992F              ;
 481+ 992F              ;   19/7/23
 482+ 992F              ;
 483+ 992F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 992F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 992F              ;
 486+ 992F              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 992F              ;			HL e IY Contienen (Puntero_objeto).
 488+ 992F              ;
 489+ 992F              ;	DESTRUYE: HL,B Y A.
 490+ 992F
 491+ 992F 3A DE 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9932 FE 02        	cp 2
 493+ 9934 38 18        	jr c,1F
 494+ 9936 28 16        	jr z,1F
 495+ 9938 E6 01        	and 1
 496+ 993A 28 0D        	jr z,3F
 497+ 993C
 498+ 993C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 993C
 500+ 993C CD 78 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 993F
 502+ 993F 7D           9 ld a,l
 503+ 9940 E6 1F        	and $1f
 504+ 9942 28 2A        	jr z,7F
 505+ 9944 2B           	dec hl
 506+ 9945 10 F8        	djnz 9B
 507+ 9947 18 25        	jr 7F
 508+ 9949
 509+ 9949              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9949
 511+ 9949 2A CF 8B     3 ld hl,(Posicion_actual)
 512+ 994C 18 20        	jr 7F
 513+ 994E
 514+ 994E 28 14        1 jr z,2F
 515+ 9950
 516+ 9950              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9950
 518+ 9950 CD 78 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9953
 520+ 9953 7D           4 ld a,l
 521+ 9954 E6 1F        	and $1f
 522+ 9956 28 03        	jr z,6F
 523+ 9958 2B           	dec hl
 524+ 9959 10 F8        	djnz 4B
 525+ 995B 06 0F        6 ld b,15
 526+ 995D CD 9F 99     5 call PreviousScan
 527+ 9960 10 FB        	djnz 5B
 528+ 9962 18 0A        	jr 7F
 529+ 9964
 530+ 9964              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9964
 532+ 9964 CD 78 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9967 06 0F        	ld b,15
 534+ 9969 CD 9F 99     8 call PreviousScan
 535+ 996C 10 FB        	djnz 8B
 536+ 996E
 537+ 996E E5           7 push hl
 538+ 996F DD E1        	pop ix
 539+ 9971
 540+ 9971 2A D1 8B     	ld hl,(Puntero_objeto)
 541+ 9974 E5           	push hl
 542+ 9975 FD E1        	pop iy
 543+ 9977
 544+ 9977 C9           	ret
 545+ 9978
 546+ 9978              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9978              ;
 548+ 9978              ;	2/1/23
 549+ 9978              ;
 550+ 9978              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9978              ;
 552+ 9978              ;	Tras esta rutina tenemos:
 553+ 9978              ;
 554+ 9978              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9978              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9978              ;
 557+ 9978              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9978
 559+ 9978 2A CF 8B     Operandos ld hl,(Posicion_actual)
 560+ 997B 3A DF 8B     	ld a,(Columnas)
 561+ 997E 3D           	dec a
 562+ 997F 20 01        	jr nz,1F
 563+ 9981 3C           	inc a
 564+ 9982 47           1 ld b,a
 565+ 9983 C9           	ret
 566+ 9984
 567+ 9984              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9984              ;
 569+ 9984              ;	Prepara_draw
 570+ 9984              ;
 571+ 9984              ;	Es una rutina de carga.
 572+ 9984              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9984              ;
 574+ 9984              ;	FUNCIONAMIENTO:
 575+ 9984              ;
 576+ 9984              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9984              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9984              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9984              ;
 580+ 9984              ;	DESTRUYE:
 581+ 9984              ;
 582+ 9984              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9984
 584+ 9984 21 CD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9987 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9988 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9989 4E           	ld c,(hl)
 588+ 998A 2A CF 8B     	ld hl,(Posicion_actual)
 589+ 998D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 998F C9           	ret
 591+ 9990
 592+ 9990              ;----------------------------------------------------------------------------------------------------------------
 593+ 9990              ;
 594+ 9990              ;	5/08/22
 595+ 9990              ;
 596+ 9990              ;   NextScan.
 597+ 9990              ;
 598+ 9990              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9990              ;
 600+ 9990              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9990              ;
 602+ 9990              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9990              ;
 604+ 9990              ;       DESTRUIDOS: AF y HL !!!
 605+ 9990              ;
 606+ 9990              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9990              ;
 608+ 9990
 609+ 9990 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9991 7C               ld a,h
 611+ 9992 E6 07            and 7
 612+ 9994 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9995
 614+ 9995 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9996 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9998 6F               ld l,a
 617+ 9999 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 999A
 619+ 999A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 999B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 999D 67               ld h,a
 622+ 999E C9               ret
 623+ 999F
 624+ 999F              ;----------------------------------------------------------------------------------------------------------------
 625+ 999F              ;
 626+ 999F              ;	5/08/22
 627+ 999F              ;
 628+ 999F              ;   PreviousScan.
 629+ 999F              ;
 630+ 999F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 999F              ;
 632+ 999F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 999F              ;
 634+ 999F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 999F              ;
 636+ 999F              ;       DESTRUIDOS: AF y HL !!!
 637+ 999F              ;
 638+ 999F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 999F              ;
 640+ 999F
 641+ 999F 7C           PreviousScan ld a,h
 642+ 99A0 25               dec h               ; Dec H.
 643+ 99A1 E6 07            and 7
 644+ 99A3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99A4
 646+ 99A4 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99A5 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99A7 6F               ld l,a
 649+ 99A8 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99A9
 651+ 99A9 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99AA C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99AC 67               ld h,a
 654+ 99AD C9               ret
 655+ 99AE
 656+ 99AE
 657+ 99AE
 658+ 99AE
 659+ 99AE
 660+ 99AE
 661+ 99AE
 662+ 99AE
 663+ 99AE
 664+ 99AE
 665+ 99AE
 666+ 99AE
# file closed: Draw_XOR.asm
2076  99AE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99AE
   2+ 99AE              ; ******************************************************************************************************************************************************************************************
   3+ 99AE              ;
   4+ 99AE              ;   20/05/23
   5+ 99AE              ;
   6+ 99AE              ;	Recompone_posicion_inicio
   7+ 99AE              ;
   8+ 99AE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99AE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99AE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99AE              ;	_ a una u otra rutina.
  12+ 99AE
  13+ 99AE              Recompone_posicion_inicio
  14+ 99AE
  15+ 99AE 2A DC 8B     	ld hl,(Posicion_inicio)
  16+ 99B1 7D           	ld a,l
  17+ 99B2 E6 1F        	and $1f
  18+ 99B4 28 16        	jr z,1F
  19+ 99B6
  20+ 99B6 FE 1F        	cp $1f
  21+ 99B8 28 0D        	jr z,3F
  22+ 99BA
  23+ 99BA 21 CB 8B     	ld hl,Ctrl_2
  24+ 99BD CB C6        	set 0,(hl)
  25+ 99BF 2A D1 8B     	ld hl,(Puntero_objeto)
  26+ 99C2 22 FD 8B     	ld (Repone_puntero_objeto),hl
  27+ 99C5 18 08        	jr 2F
  28+ 99C7
  29+ 99C7 CD 75 9B     3 call Mov_left
  30+ 99CA 18 03        	jr 2F
  31+ 99CC
  32+ 99CC CD 52 9A     1 call Mov_right
  33+ 99CF 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99D2 22 D1 8B     	ld (Puntero_objeto),hl
  35+ 99D5 C9           	ret
  36+ 99D6
  37+ 99D6              ; ******************************************************************************************************************************************************************************************
  38+ 99D6              ;
  39+ 99D6              ;   27/05/23
  40+ 99D6              ;
  41+ 99D6              ;	Mov_down
  42+ 99D6              ;
  43+ 99D6              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99D6              ;
  45+ 99D6              ;
  46+ 99D6              Mov_down
  47+ 99D6
  48+ 99D6 CD 40 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99D9              ;																	; _ repone (Puntero_objeto).
  50+ 99D9 21 CC 8B     	ld hl,Ctrl_0
  51+ 99DC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99DE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99DE              ; 																	; _ en el caso de que no lo haya.
  54+ 99DE 3A E7 8B     	ld a,(Vel_down)
  55+ 99E1 47           	ld b,a
  56+ 99E2 2A CF 8B         ld hl,(Posicion_actual)
  57+ 99E5 CD 78 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99E8 E6 02        	and 2
  59+ 99EA 28 17        	jr z,1F
  60+ 99EC
  61+ 99EC              ; Nos encontramos en el último tercio de pantalla.
  62+ 99EC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99EC
  64+ 99EC 7C           	ld a,h
  65+ 99ED FE 57        	cp $57
  66+ 99EF 20 12        	jr nz,1F
  67+ 99F1
  68+ 99F1 7D           	ld a,l
  69+ 99F2 C6 20        	add $20
  70+ 99F4 30 0D        	jr nc,1F
  71+ 99F6
  72+ 99F6              ; ------------------------------
  73+ 99F6              ;
  74+ 99F6              ;	12/01/24
  75+ 99F6
  76+ 99F6              ;	call Reaparece_arriba
  77+ 99F6 CD 02 9D     	call Reinicio
  78+ 99F9
  79+ 99F9              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99F9
  81+ 99F9 3A 2F 8C     	ld a,(Ctrl_3)
  82+ 99FC CB CF        	set 1,a
  83+ 99FE 32 2F 8C     	ld (Ctrl_3),a
  84+ 9A01
  85+ 9A01 18 08        	jr 3F
  86+ 9A03              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A03              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A03              ; ------------------------------
  89+ 9A03
  90+ 9A03 CD 90 99     1 call NextScan
  91+ 9A06 22 CF 8B     	ld (Posicion_actual),hl
  92+ 9A09 10 DA            djnz 2B
  93+ 9A0B CD 96 94     3 call Genera_coordenadas
  94+ 9A0E C9           	ret
  95+ 9A0F
  96+ 9A0F              ; ******************************************************************************************************************************************************************************************
  97+ 9A0F              ;
  98+ 9A0F              ;   27/05/23
  99+ 9A0F              ;
 100+ 9A0F              ;	Mov_up
 101+ 9A0F              ;
 102+ 9A0F              ; 	Mueve el Sprite hacia arriba.
 103+ 9A0F              ;
 104+ 9A0F              ;
 105+ 9A0F              Mov_up
 106+ 9A0F
 107+ 9A0F CD 40 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A12              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A12 21 CC 8B     	ld hl,Ctrl_0
 110+ 9A15 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A17              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A17              ; 																		; _ en el caso de que no lo haya.
 113+ 9A17 3A E6 8B     	ld a,(Vel_up)
 114+ 9A1A 47           	ld b,a
 115+ 9A1B 2A CF 8B     	ld hl,(Posicion_actual)
 116+ 9A1E CD 78 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A21 A7           	and a
 118+ 9A22 20 10        	jr nz,1F
 119+ 9A24
 120+ 9A24              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A24              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A24
 123+ 9A24 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A25 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A27 20 0B            jr nz,1F
 126+ 9A29 7D               ld a,l
 127+ 9A2A D6 20            sub $20
 128+ 9A2C 30 06            jr nc,1F
 129+ 9A2E 25               dec h
 130+ 9A2F
 131+ 9A2F              ; -----------------------------
 132+ 9A2F CD E3 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A32              ;	call Reinicio
 134+ 9A32              ; -----------------------------
 135+ 9A32
 136+ 9A32 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A34 CD 9F 99     1 call PreviousScan
 138+ 9A37 22 CF 8B     	ld (Posicion_actual),hl
 139+ 9A3A 10 E2            djnz 3B
 140+ 9A3C CD 96 94     2 call Genera_coordenadas
 141+ 9A3F C9           	ret
 142+ 9A40
 143+ 9A40              ; -----------------------------
 144+ 9A40              ;
 145+ 9A40              ;	27/5/23
 146+ 9A40              ;
 147+ 9A40              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A40              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A40              ;
 150+ 9A40              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A40              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A40              ;
 153+ 9A40              ;	Modifica: A y (Puntero_objeto).
 154+ 9A40
 155+ 9A40 3A CB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A43 CB 47        	bit 0,a
 157+ 9A45 C8           	ret z
 158+ 9A46 CB 87        	res 0,a
 159+ 9A48 32 CB 8B     	ld (Ctrl_2),a
 160+ 9A4B 2A FD 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A4E 22 D1 8B     	ld (Puntero_objeto),hl
 162+ 9A51 C9           	ret
 163+ 9A52
 164+ 9A52              ; ******************************************************************************************************************************************************************************************
 165+ 9A52              ;
 166+ 9A52              ;	19/10/22
 167+ 9A52              ;
 168+ 9A52              ;	Mov_right.
 169+ 9A52              ;
 170+ 9A52              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A52              ;
 172+ 9A52
 173+ 9A52 3A CC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A55 CB 77        	bit 6,a
 175+ 9A57 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A59
 177+ 9A59 CD 91 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A5C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A5D
 180+ 9A5D 21 CC 8B     	ld hl,Ctrl_0
 181+ 9A60 CB E6        	set 4,(hl)
 182+ 9A62 18 52        	jr 8F
 183+ 9A64
 184+ 9A64 21 CC 8B     10 ld hl,Ctrl_0
 185+ 9A67 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A69              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A69              ; 																	; _ en el caso de que no lo haya.
 188+ 9A69 3A C0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A6C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A6E 20 46        	jr nz,8F
 191+ 9A70
 192+ 9A70 3A D3 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A73 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A74 28 40        	jr z,8F
 195+ 9A76
 196+ 9A76              ; ---------- ---------- ----------
 197+ 9A76              ;
 198+ 9A76              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A76
 200+ 9A76 3A E5 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A79 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A7B 28 11        	jr z,1F
 203+ 9A7D 38 06        	jr c,6F
 204+ 9A7F FE 04        	cp 4
 205+ 9A81 28 14        	jr z,7F
 206+ 9A83 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A85
 208+ 9A85              ; ---------- ---------- ----------
 209+ 9A85              ;
 210+ 9A85              ; Perfiles de velocidad
 211+ 9A85              ;
 212+ 9A85
 213+ 9A85 3A D3 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A88 FE FE        	cp $fe
 215+ 9A8A 20 2A        	jr nz,8F
 216+ 9A8C 18 10        	jr 3F
 217+ 9A8E 3A D3 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A91 FE FD        	cp $fd
 219+ 9A93 20 21        	jr nz,8F
 220+ 9A95 18 07        	jr 3F
 221+ 9A97 3A D3 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A9A FE FB        	cp $fb
 223+ 9A9C 20 18        	jr nz,8F
 224+ 9A9E
 225+ 9A9E              ; ---------- ---------- ----------
 226+ 9A9E
 227+ 9A9E              3
 228+ 9A9E CD D1 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AA1              ;	call Reinicio
 230+ 9AA1
 231+ 9AA1              ; ---------- ---------- ----------
 232+ 9AA1              ;
 233+ 9AA1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AA1
 235+ 9AA1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AA3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AA4 CD BD 9A     	call DESPLZ_DER
 238+ 9AA7 C1           	pop bc
 239+ 9AA8 10 F9        	djnz 5B
 240+ 9AAA 2A CF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AAD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AAE 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9AB1 CD 96 94     	call Genera_coordenadas
 244+ 9AB4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AB6
 246+ 9AB6              ; ---------- ---------- ----------
 247+ 9AB6
 248+ 9AB6 2A CF 8B     8 ld hl,(Posicion_actual)
 249+ 9AB9 CD BD 9A     	call DESPLZ_DER
 250+ 9ABC C9           2 ret
 251+ 9ABD
 252+ 9ABD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9ABD              ;
 254+ 9ABD              ;	22/9/22
 255+ 9ABD              ;
 256+ 9ABD
 257+ 9ABD CD CC 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AC0 CD 18 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AC3 CD 41 9B         call Ciclo_completo
 260+ 9AC6 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AC9 CB FE        	set 7,(hl)
 262+ 9ACB C9           	ret
 263+ 9ACC
 264+ 9ACC              ; ******************************************************************************************************************************************************************************************
 265+ 9ACC              ;	15/02/23
 266+ 9ACC              ;
 267+ 9ACC
 268+ 9ACC 3A E5 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9ACF 47           	ld b,a
 270+ 9AD0 2A D8 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AD3 23           1 inc hl
 272+ 9AD4 23           	inc hl
 273+ 9AD5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AD7 22 D8 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9ADA CD 80 90     	call Extrae_address
 276+ 9ADD 22 D1 8B     	ld (Puntero_objeto),hl
 277+ 9AE0
 278+ 9AE0              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AE0
 280+ 9AE0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AE0              ; Cuántos movimientos hemos hecho ??
 282+ 9AE0              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AE0
 284+ 9AE0 2A D4 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AE3 EB           	ex de,hl
 286+ 9AE4 A7           	and a
 287+ 9AE5 ED 52        	sbc hl,de
 288+ 9AE7 CB 3D        	srl l
 289+ 9AE9 3E 08        6 ld a,8
 290+ 9AEB 95           	sub l
 291+ 9AEC 30 1E        	jr nc,3F
 292+ 9AEE
 293+ 9AEE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AEE              ; B="0".
 295+ 9AEE
 296+ 9AEE 04           4 inc b
 297+ 9AEF 3C           	inc a
 298+ 9AF0 20 FC        	jr nz,4B
 299+ 9AF2 78           	ld a,b
 300+ 9AF3 08           	ex af,af
 301+ 9AF4 2A D4 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AF7 23           5 inc hl
 303+ 9AF8 23           	inc hl
 304+ 9AF9 10 FC        	djnz 5B
 305+ 9AFB 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AFE CD 80 90     	call Extrae_address
 307+ 9B01 22 D1 8B     	ld (Puntero_objeto),hl
 308+ 9B04
 309+ 9B04              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B04              ; _(Posicion_actual).
 311+ 9B04
 312+ 9B04 21 CF 8B     	ld hl,Posicion_actual
 313+ 9B07 34           	inc (hl)
 314+ 9B08 08               ex af,af
 315+ 9B09 6F           	ld l,a
 316+ 9B0A 18 DD        	jr 6B
 317+ 9B0C
 318+ 9B0C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B0C
 320+ 9B0C 47           3 ld b,a
 321+ 9B0D 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B10 23           2 inc hl
 323+ 9B11 23           	inc hl
 324+ 9B12 10 FC        	djnz 2B
 325+ 9B14 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B17 C9           8 ret
 327+ 9B18
 328+ 9B18              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B18              ;
 330+ 9B18              ;	24/7/22
 331+ 9B18              ;
 332+ 9B18              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B18              ;
 334+ 9B18              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B18              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B18              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B18
 338+ 9B18 3A D3 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B1B A7           	and a
 340+ 9B1C 20 1F        	jr nz,1F
 341+ 9B1E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B20 32 D3 8B         ld (CTRL_DESPLZ),a
 343+ 9B23
 344+ 9B23 21 CE 8B     	ld hl,Columns
 345+ 9B26 34           	inc (hl)
 346+ 9B27 3A DE 8B     	ld a,(Cuad_objeto)
 347+ 9B2A E6 01        	and 1
 348+ 9B2C 28 0F        	jr z,1F
 349+ 9B2E 2A CF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B31 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B32 22 CF 8B     	ld (Posicion_actual),hl
 352+ 9B35 CD 96 94     	call Genera_coordenadas
 353+ 9B38 CD 9D 9C     	call Inc_CTRL_DESPLZ
 354+ 9B3B 18 03        	jr 2F
 355+ 9B3D CD 9D 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B40 C9           2 ret
 357+ 9B41
 358+ 9B41              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B41              ;
 360+ 9B41              ;	24/7/22
 361+ 9B41              ;
 362+ 9B41              ;	Ciclo_completo.
 363+ 9B41              ;
 364+ 9B41              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B41              ;
 366+ 9B41              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B41              ; 	Decrementamos (Columns).
 368+ 9B41              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B41              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B41
 371+ 9B41
 372+ 9B41 3A D3 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B44 FE FF        	cp $ff
 374+ 9B46 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B48 E6 F0        	and $f0
 376+ 9B4A 20 28        	jr nz,3F
 377+ 9B4C
 378+ 9B4C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B4C
 380+ 9B4C 3A D3 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B4F 47           	ld b,a
 382+ 9B50 3E F8        	ld a,$f8
 383+ 9B52 80           	add b
 384+ 9B53 32 D3 8B     	ld (CTRL_DESPLZ),a
 385+ 9B56 18 1C        	jr 3F
 386+ 9B58 21 CE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B5B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B5C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B5D 32 D3 8B     	ld (CTRL_DESPLZ),a
 390+ 9B60 3A DE 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B63 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B65 20 0A        	jr nz,2F
 393+ 9B67 2A CF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B6A 23           	inc hl
 395+ 9B6B 22 CF 8B     	ld (Posicion_actual),hl
 396+ 9B6E CD 96 94     	call Genera_coordenadas
 397+ 9B71
 398+ 9B71              ; Inicia el puntero de Sprite.
 399+ 9B71
 400+ 9B71 CD 95 90     2 call Inicia_puntero_objeto_der
 401+ 9B74 C9           3 ret
 402+ 9B75
 403+ 9B75              ; ******************************************************************************************************************************************************************************************
 404+ 9B75              ;
 405+ 9B75              ;	15/02/23
 406+ 9B75              ;
 407+ 9B75              ;	Mov_left.
 408+ 9B75              ;
 409+ 9B75              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B75              ;
 411+ 9B75              Mov_left
 412+ 9B75
 413+ 9B75 21 CC 8B     	ld hl,Ctrl_0
 414+ 9B78 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B7A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B7A              ; 																	; _ en el caso de que no lo haya.
 417+ 9B7A 3A CC 8B     	ld a,(Ctrl_0)
 418+ 9B7D CB 77        	bit 6,a
 419+ 9B7F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B81
 421+ 9B81 CD 97 9C     	call Stop_Amadeus_left
 422+ 9B84 C8           	ret z
 423+ 9B85 20 4A        	jr nz,8F
 424+ 9B87
 425+ 9B87 3A C0 8B     11 ld a,(Coordenada_X)
 426+ 9B8A A7           	and a
 427+ 9B8B 20 44        	jr nz,8F
 428+ 9B8D
 429+ 9B8D 3A D3 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B90 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B91 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B93
 433+ 9B93              ; ---------- ---------- ----------
 434+ 9B93
 435+ 9B93 3A E4 8B     	ld a,(Vel_left)
 436+ 9B96 FE 02        	cp 2
 437+ 9B98 28 0F        	jr z,1F
 438+ 9B9A 38 04        	jr c,6F
 439+ 9B9C FE 04        	cp 4
 440+ 9B9E 28 12        	jr z,7F
 441+ 9BA0
 442+ 9BA0              ; ---------- ---------- ----------
 443+ 9BA0
 444+ 9BA0 3A D3 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BA3 FE F8        	cp $f8
 446+ 9BA5 20 2A        	jr nz,8F
 447+ 9BA7 18 10        	jr 4F
 448+ 9BA9 3A D3 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BAC FE F9        	cp $f9
 450+ 9BAE 20 21        	jr nz,8F
 451+ 9BB0 18 07        	jr 4F
 452+ 9BB2 3A D3 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BB5 FE FB        	cp $fb
 454+ 9BB7 20 18        	jr nz,8F
 455+ 9BB9
 456+ 9BB9              ; ---------- ---------- ----------
 457+ 9BB9
 458+ 9BB9              4
 459+ 9BB9 CD BF 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BBC              ;	call Reinicio
 461+ 9BBC
 462+ 9BBC              ; ---------- ---------- ----------
 463+ 9BBC
 464+ 9BBC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BBE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BBF
 467+ 9BBF              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BBF              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BBF
 470+ 9BBF CD D8 9B     	call DESPLZ_IZQ
 471+ 9BC2 C1           	pop bc
 472+ 9BC3 10 F9        	djnz 5B
 473+ 9BC5 2A CF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BC8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BC9 22 CF 8B     	ld (Posicion_actual),hl
 476+ 9BCC CD 96 94     	call Genera_coordenadas
 477+ 9BCF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BD1
 479+ 9BD1              ; ---------- ---------- ----------
 480+ 9BD1
 481+ 9BD1              ; Movemos, no hay recolocación.
 482+ 9BD1
 483+ 9BD1 2A CF 8B     8 ld hl,(Posicion_actual)
 484+ 9BD4 CD D8 9B     	call DESPLZ_IZQ
 485+ 9BD7 C9           2 ret
 486+ 9BD8
 487+ 9BD8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BD8              ;
 489+ 9BD8              ;	22/9/22
 490+ 9BD8
 491+ 9BD8              DESPLZ_IZQ
 492+ 9BD8
 493+ 9BD8 CD E7 9B     	call Desplaza_izquierda
 494+ 9BDB CD 33 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BDE CD 5B 9C     	call Ciclo_completo_2
 496+ 9BE1 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BE4 CB BE        	res 7,(hl)
 498+ 9BE6 C9           	ret
 499+ 9BE7
 500+ 9BE7              Desplaza_izquierda
 501+ 9BE7
 502+ 9BE7 3A E4 8B     	ld a,(Vel_left)
 503+ 9BEA 47           	ld b,a
 504+ 9BEB 2A DA 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BEE 23           1 inc hl
 506+ 9BEF 23           	inc hl
 507+ 9BF0 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BF2 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BF5 CD 80 90     	call Extrae_address
 510+ 9BF8 22 D1 8B     	ld (Puntero_objeto),hl
 511+ 9BFB
 512+ 9BFB              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BFB
 514+ 9BFB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BFB              ; Cuántos movimientos hemos hecho ??
 516+ 9BFB              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BFB
 518+ 9BFB 2A D6 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BFE EB           	ex de,hl
 520+ 9BFF A7           	and a
 521+ 9C00 ED 52        	sbc hl,de
 522+ 9C02 CB 3D        	srl l
 523+ 9C04 3E 08        6 ld a,8
 524+ 9C06 95           	sub l
 525+ 9C07 30 1E        	jr nc,3F
 526+ 9C09
 527+ 9C09              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C09              ; B="0".
 529+ 9C09
 530+ 9C09 04           4 inc b
 531+ 9C0A 3C           	inc a
 532+ 9C0B 20 FC        	jr nz,4B
 533+ 9C0D 78           	ld a,b
 534+ 9C0E 08           	ex af,af
 535+ 9C0F 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C12 23           5 inc hl
 537+ 9C13 23           	inc hl
 538+ 9C14 10 FC        	djnz 5B
 539+ 9C16 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C19 CD 80 90     	call Extrae_address
 541+ 9C1C 22 D1 8B     	ld (Puntero_objeto),hl
 542+ 9C1F
 543+ 9C1F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C1F              ; _(Posicion_actual).
 545+ 9C1F
 546+ 9C1F 21 CF 8B     	ld hl,Posicion_actual
 547+ 9C22 35           	dec (hl)
 548+ 9C23 08           	ex af,af
 549+ 9C24 6F           	ld l,a
 550+ 9C25 18 DD        	jr 6B
 551+ 9C27
 552+ 9C27              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C27
 554+ 9C27 47           3 ld b,a
 555+ 9C28 2A D4 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C2B 23           2 inc hl
 557+ 9C2C 23           	inc hl
 558+ 9C2D 10 FC        	djnz 2B
 559+ 9C2F 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C32 C9           8 ret
 561+ 9C33
 562+ 9C33              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C33              ;
 564+ 9C33              ;	modifica_parametros_1er_DESPLZ
 565+ 9C33              ;
 566+ 9C33              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C33              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C33              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C33
 570+ 9C33 3A D3 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C36 A7           	and a
 572+ 9C37 20 1E        	jr nz,1F
 573+ 9C39 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C3A 32 D3 8B         ld (CTRL_DESPLZ),a
 575+ 9C3D 21 CE 8B     	ld hl,Columns
 576+ 9C40 34           	inc (hl)
 577+ 9C41 3A DE 8B     	ld a,(Cuad_objeto)
 578+ 9C44 E6 01        	and 1
 579+ 9C46 20 0F        	jr nz,1F
 580+ 9C48 2A CF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C4B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C4C 22 CF 8B     	ld (Posicion_actual),hl
 583+ 9C4F CD 96 94     	call Genera_coordenadas
 584+ 9C52 CD AE 9C     	call Dec_CTRL_DESPLZ
 585+ 9C55 18 03        	jr 2F
 586+ 9C57 CD AE 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C5A C9           2 ret
 588+ 9C5B
 589+ 9C5B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C5B
 591+ 9C5B 3A D3 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C5E FE F7        	cp $f7
 593+ 9C60 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C62 30 2C        	jr nc,3F
 595+ 9C64
 596+ 9C64              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C64
 598+ 9C64 06 00        	ld b,0
 599+ 9C66 04           4 inc b
 600+ 9C67 3C           	inc a
 601+ 9C68 FE F7        	cp $f7
 602+ 9C6A 20 FA        	jr nz,4B
 603+ 9C6C 3E FF        	ld a,$ff
 604+ 9C6E 90           	sub b
 605+ 9C6F 32 D3 8B     	ld (CTRL_DESPLZ),a
 606+ 9C72 18 1C        	jr 3F
 607+ 9C74
 608+ 9C74              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C74
 610+ 9C74 21 CE 8B     1 ld hl,Columns
 611+ 9C77 35           	dec (hl)
 612+ 9C78 AF           	xor a
 613+ 9C79 32 D3 8B     	ld (CTRL_DESPLZ),a
 614+ 9C7C 3A DE 8B     	ld a,(Cuad_objeto)
 615+ 9C7F E6 01        	and 1
 616+ 9C81 28 0A        	jr z,2F
 617+ 9C83 2A CF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C86 2B           	dec hl
 619+ 9C87 22 CF 8B     	ld (Posicion_actual),hl
 620+ 9C8A CD 96 94     	call Genera_coordenadas
 621+ 9C8D
 622+ 9C8D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C8D
 624+ 9C8D CD A8 90     2 call Inicia_puntero_objeto_izq
 625+ 9C90 C9           3 ret
 626+ 9C91
 627+ 9C91              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C91              ;
 629+ 9C91              ;	19/10/22
 630+ 9C91              ;
 631+ 9C91              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C91              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C91
 634+ 9C91 3A C0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C94 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C96 C9           	ret
 637+ 9C97
 638+ 9C97              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C97              ;
 640+ 9C97              ;	19/10/22
 641+ 9C97              ;
 642+ 9C97              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C97              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C97
 645+ 9C97 3A C0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C9A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C9C C9           	ret
 648+ 9C9D
 649+ 9C9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C9D              ;
 651+ 9C9D              ;	24/7/22
 652+ 9C9D              ;
 653+ 9C9D              ;	Inc_CTRL_DESPLZ
 654+ 9C9D              ;
 655+ 9C9D              ;
 656+ 9C9D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C9D
 658+ 9C9D 21 D3 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CA0 3A E5 8B     	ld a,(Vel_right)
 660+ 9CA3 A7           	and a
 661+ 9CA4 28 06        	jr z,1F
 662+ 9CA6 47           	ld b,a
 663+ 9CA7 34           3 inc (hl)
 664+ 9CA8 10 FD        	djnz 3B
 665+ 9CAA 18 01        	jr 2F
 666+ 9CAC 34           1 inc (hl)
 667+ 9CAD C9           2 ret
 668+ 9CAE
 669+ 9CAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CAE              ;
 671+ 9CAE              ;	5/2/23
 672+ 9CAE              ;
 673+ 9CAE              ;	Dec_CTRL_DESPLZ
 674+ 9CAE              ;
 675+ 9CAE              ;
 676+ 9CAE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CAE
 678+ 9CAE 21 D3 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CB1 3A E4 8B     	ld a,(Vel_left)
 680+ 9CB4 A7           	and a
 681+ 9CB5 28 06        	jr z,1F
 682+ 9CB7 47           	ld b,a
 683+ 9CB8 35           3 dec (hl)
 684+ 9CB9 10 FD        	djnz 3B
 685+ 9CBB 18 01        	jr 2F
 686+ 9CBD 35           1 dec (hl)
 687+ 9CBE C9           2 ret
 688+ 9CBF
 689+ 9CBF              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CBF
 691+ 9CBF 2A CF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CC2 01 1F 00     	ld bc,31
 693+ 9CC5 A7           	and a
 694+ 9CC6 ED 4A        	adc hl,bc
 695+ 9CC8 22 CF 8B     	ld (Posicion_actual),hl
 696+ 9CCB 21 CC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CCE CB C6        	set 0,(hl)
 698+ 9CD0 C9           	ret
 699+ 9CD1
 700+ 9CD1              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CD1
 702+ 9CD1 2A CF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CD4 01 1F 00     	ld bc,31
 704+ 9CD7 A7           	and a
 705+ 9CD8 ED 42        	sbc hl,bc
 706+ 9CDA 22 CF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CDD 21 CC 8B     	ld hl,Ctrl_0
 708+ 9CE0 CB CE        	set 1,(hl)
 709+ 9CE2 C9           	ret
 710+ 9CE3
 711+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CE3
 713+ 9CE3 24           Reaparece_abajo inc h
 714+ 9CE4 01 E0 17     	ld bc,$17e0
 715+ 9CE7 A7           	and a
 716+ 9CE8 ED 4A        	adc hl,bc
 717+ 9CEA 22 CF 8B     	ld (Posicion_actual),hl
 718+ 9CED 21 CC 8B     	ld hl,Ctrl_0
 719+ 9CF0 CB D6        	set 2,(hl)
 720+ 9CF2 C9           	ret
 721+ 9CF3
 722+ 9CF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CF3
 724+ 9CF3 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CF6 A7           	and a
 726+ 9CF7 ED 42        	sbc hl,bc
 727+ 9CF9 22 CF 8B     	ld (Posicion_actual),hl
 728+ 9CFC 21 CC 8B     	ld hl,Ctrl_0
 729+ 9CFF CB DE        	set 3,(hl)
 730+ 9D01 C9           	ret
 731+ 9D02
 732+ 9D02              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D02              ;
 734+ 9D02              ;	15/07/23
 735+ 9D02
 736+ 9D02              Reinicio
 737+ 9D02
 738+ 9D02              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D02
 740+ 9D02 AF           	xor a
 741+ 9D03 21 F4 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D06 CD 24 9D     	call Limpia_contenido_hl
 743+ 9D09
 744+ 9D09 21 CF 8B     	ld hl,Posicion_actual
 745+ 9D0C CD 24 9D     	call Limpia_contenido_hl
 746+ 9D0F
 747+ 9D0F CD 78 92     	call Inicializa_Puntero_indice_mov
 748+ 9D12 CD 23 9E     	call Inicia_Puntero_mov
 749+ 9D15
 750+ 9D15 21 F6 8B     	ld hl,Incrementa_puntero
 751+ 9D18 06 05        	ld b,5
 752+ 9D1A 77           1 ld (hl),a
 753+ 9D1B 23           	inc hl
 754+ 9D1C 10 FC        	djnz 1B
 755+ 9D1E
 756+ 9D1E 21 CB 8B     	ld hl,Ctrl_2
 757+ 9D21 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D23
 759+ 9D23 C9           	ret
 760+ 9D24
 761+ 9D24 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D25 23           	inc hl
 763+ 9D26 77           	ld (hl),a
 764+ 9D27 C9           	ret
 765+ 9D28
 766+ 9D28              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D28              ;
 768+ 9D28              ;	18/6/24
 769+ 9D28              ;
 770+ 9D28
 771+ 9D28              Amadeus_a_izquierda
 772+ 9D28
 773+ 9D28              ;	Actualiza contador de movimientos.
 774+ 9D28
 775+ 9D28 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D2B 35           	dec (hl)
 777+ 9D2C 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D2E
 779+ 9D2E 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D31 2B           	dec hl
 781+ 9D32 2B           	dec hl
 782+ 9D33 2B           	dec hl
 783+ 9D34 2B           	dec hl
 784+ 9D35 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D38
 786+ 9D38 21 2F 8C     	ld hl,Ctrl_3
 787+ 9D3B CB EE        	set 5,(hl)
 788+ 9D3D
 789+ 9D3D C9           	ret
 790+ 9D3E
 791+ 9D3E 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D3F C9           	ret
 793+ 9D40
 794+ 9D40
 795+ 9D40              Amadeus_a_derecha
 796+ 9D40
 797+ 9D40              ;	Actualiza contador de movimientos.
 798+ 9D40
 799+ 9D40 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D43 34           	inc (hl)
 801+ 9D44 3E 7A        	ld a,$7a
 802+ 9D46 BE           	cp (hl)
 803+ 9D47 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D49
 805+ 9D49 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D4C 23           	inc hl
 807+ 9D4D 23           	inc hl
 808+ 9D4E 23           	inc hl
 809+ 9D4F 23           	inc hl
 810+ 9D50 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D53
 812+ 9D53 21 2F 8C     	ld hl,Ctrl_3
 813+ 9D56 CB EE        	set 5,(hl)
 814+ 9D58 C9           	ret
 815+ 9D59
 816+ 9D59 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D5A C9           	ret
# file closed: Direcciones.asm
2077  9D5B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D5B              ; ----- ----- ----- ----- -----
   2+ 9D5B              ;
   3+ 9D5B              ;   28/12/23
   4+ 9D5B
   5+ 9D5B              Movimiento
   6+ 9D5B
   7+ 9D5B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D5B
   9+ 9D5B 3A CB 8B         ld a,(Ctrl_2)
  10+ 9D5E CB 57            bit 2,a
  11+ 9D60 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D62
  13+ 9D62 2A F2 8B         ld hl,(Puntero_mov)
  14+ 9D65 7E               ld a,(hl)
  15+ 9D66
  16+ 9D66              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D66
  18+ 9D66              Inicia_desplazamiento.
  19+ 9D66
  20+ 9D66              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D66
  22+ 9D66 CD 59 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D69
  24+ 9D69              ; Iniciamos (Repetimos_mov).
  25+ 9D69
  26+ 9D69 7E               ld a,(hl)
  27+ 9D6A E6 0F            and $0f
  28+ 9D6C 32 F8 8B         ld (Repetimos_desplazamiento),a
  29+ 9D6F 32 F9 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D72
  31+ 9D72              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D72
  33+ 9D72 23               inc hl
  34+ 9D73 7E               ld a,(hl)
  35+ 9D74 32 FB 8B         ld (Cola_de_desplazamiento),a
  36+ 9D77 2B               dec hl
  37+ 9D78
  38+ 9D78 21 CB 8B         ld hl,Ctrl_2
  39+ 9D7B CB D6            set 2,(hl)
  40+ 9D7D
  41+ 9D7D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D7D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D7D
  44+ 9D7D              Desplazamiento_iniciado
  45+ 9D7D
  46+ 9D7D CD 2D 9E         call Aplica_desplazamiento
  47+ 9D80
  48+ 9D80              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D80
  50+ 9D80 3A 2F 8C         ld a,(Ctrl_3)
  51+ 9D83 CB 4F            bit 1,a
  52+ 9D85 C0               ret nz
  53+ 9D86
  54+ 9D86 21 F8 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D89 35               dec (hl)
  56+ 9D8A C0               ret nz
  57+ 9D8B
  58+ 9D8B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D8B              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D8B              ; Analiza (Cola_de_desplazamiento).
  61+ 9D8B
  62+ 9D8B 3A FB 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D8E A7               and a
  64+ 9D8F CC 82 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D92 28 30            jr z,Reinicia_el_movimiento
  66+ 9D94
  67+ 9D94 FE FF            cp $ff
  68+ 9D96 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D98
  70+ 9D98 FE FE            cp $fe
  71+ 9D9A CC 07 9E         call z,Fijamos_bucle
  72+ 9D9D 28 25            jr z,Reinicia_el_movimiento
  73+ 9D9F
  74+ 9D9F FE FD            cp $fd
  75+ 9DA1 20 11            jr nz,1F
  76+ 9DA3
  77+ 9DA3              ; ---
  78+ 9DA3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DA3
  80+ 9DA3 3A CB 8B         ld a,(Ctrl_2)
  81+ 9DA6 CB 5F            bit 3,a
  82+ 9DA8 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DAA
  84+ 9DAA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DAA
  86+ 9DAA 21 CB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DAD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DAF
  89+ 9DAF CD 18 9E         call Inicia_Repetimos_movimiento
  90+ 9DB2 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DB4              ; ---
  92+ 9DB4
  93+ 9DB4 FE 01        1 cp 1
  94+ 9DB6 CA F1 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DB9
  96+ 9DB9 3D               dec a
  97+ 9DBA 32 FB 8B         ld (Cola_de_desplazamiento),a
  98+ 9DBD
  99+ 9DBD 3A F9 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DC0 32 F8 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DC3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DC3 C9               ret
 103+ 9DC4
 104+ 9DC4              Reinicia_el_movimiento
 105+ 9DC4
 106+ 9DC4 3A CB 8B         ld a,(Ctrl_2)
 107+ 9DC7 CB 5F            bit 3,a
 108+ 9DC9 28 1B            jr z,2F
 109+ 9DCB
 110+ 9DCB              ; (Cola_de_desplazamiento)="254".
 111+ 9DCB
 112+ 9DCB 21 FA 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DCE 35               dec (hl)
 114+ 9DCF 20 15            jr nz,2F
 115+ 9DD1
 116+ 9DD1              ; Fin de las repeticiones del último movimiento.
 117+ 9DD1
 118+ 9DD1 21 CB 8B         ld hl,Ctrl_2
 119+ 9DD4 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DD6
 121+ 9DD6 2A F2 8B         ld hl,(Puntero_mov)
 122+ 9DD9 23               inc hl
 123+ 9DDA 23               inc hl
 124+ 9DDB 23               inc hl
 125+ 9DDC 22 F2 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DDF              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DDF 7E               ld a,(hl)
 128+ 9DE0 32 FB 8B         ld (Cola_de_desplazamiento),a
 129+ 9DE3
 130+ 9DE3 C3 8B 9D         jp Cola
 131+ 9DE6
 132+ 9DE6 CD 23 9E     2 call Inicia_Puntero_mov
 133+ 9DE9
 134+ 9DE9 21 CB 8B         ld hl,Ctrl_2
 135+ 9DEC CB 96            res 2,(hl)
 136+ 9DEE
 137+ 9DEE C3 5B 9D         jp Movimiento
 138+ 9DF1
 139+ 9DF1              Siguiente_desplazamiento
 140+ 9DF1
 141+ 9DF1              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DF1              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DF1
 144+ 9DF1 21 CB 8B         ld hl,Ctrl_2
 145+ 9DF4 CB 96            res 2,(hl)
 146+ 9DF6
 147+ 9DF6 2A F2 8B         ld hl,(Puntero_mov)
 148+ 9DF9 23               inc hl
 149+ 9DFA 23               inc hl
 150+ 9DFB 22 F2 8B         ld (Puntero_mov),hl
 151+ 9DFE
 152+ 9DFE 7E               ld a,(hl)
 153+ 9DFF A7               and a
 154+ 9E00 CC 82 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E03 CA C4 9D         jp z,Reinicia_el_movimiento
 156+ 9E06
 157+ 9E06 C9               ret
 158+ 9E07
 159+ 9E07              ; Subrutinas -----------------------------------------
 160+ 9E07              ; ---------- --------- --------- ---------- ----------
 161+ 9E07              ;
 162+ 9E07              ;   24/07/23
 163+ 9E07              ;
 164+ 9E07              ;   Fijamos_bucle
 165+ 9E07              ;
 166+ 9E07              ;
 167+ 9E07
 168+ 9E07              Fijamos_bucle
 169+ 9E07
 170+ 9E07 3A F6 8B         ld a,(Incrementa_puntero)
 171+ 9E0A 3C               inc a
 172+ 9E0B 32 F7 8B         ld (Incrementa_puntero_backup),a
 173+ 9E0E
 174+ 9E0E CD 82 9E         call Incrementa_Puntero_indice_mov
 175+ 9E11 2A F0 8B         ld hl,(Puntero_indice_mov)
 176+ 9E14 22 F4 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E17 C9               ret
 178+ 9E18
 179+ 9E18              ; ---------- --------- --------- ---------- ----------
 180+ 9E18              ;
 181+ 9E18              ;   07/7/23
 182+ 9E18              ;
 183+ 9E18              ;   Inicia_Repetimos_movimiento
 184+ 9E18              ;
 185+ 9E18              ;
 186+ 9E18
 187+ 9E18              Inicia_Repetimos_movimiento
 188+ 9E18
 189+ 9E18              ; Iniciamos (Repetimos_movimiento).
 190+ 9E18
 191+ 9E18 DD 2A F2 8B      ld ix,(Puntero_mov)
 192+ 9E1C DD 7E 02         ld a,(ix+2)
 193+ 9E1F 32 FA 8B         ld (Repetimos_movimiento),a
 194+ 9E22
 195+ 9E22 C9               ret
 196+ 9E23
 197+ 9E23              ; ---------- --------- --------- ---------- ----------
 198+ 9E23              ;
 199+ 9E23              ;   26/6/23
 200+ 9E23              ;
 201+ 9E23              ;   Inicia_Puntero_mov
 202+ 9E23              ;
 203+ 9E23              ;
 204+ 9E23
 205+ 9E23 2A F0 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E26 CD 80 90         call Extrae_address
 207+ 9E29 22 F2 8B         ld (Puntero_mov),hl
 208+ 9E2C C9               ret
 209+ 9E2D
 210+ 9E2D              ; ---------- --------- --------- ---------- ----------
 211+ 9E2D              ;
 212+ 9E2D              ;   27/06/23
 213+ 9E2D              ;
 214+ 9E2D              ;   Aplica_movimiento.
 215+ 9E2D
 216+ 9E2D              Aplica_desplazamiento
 217+ 9E2D
 218+ 9E2D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E2D
 220+ 9E2D 2A F2 8B         ld hl, (Puntero_mov)
 221+ 9E30
 222+ 9E30 7E               ld a,(hl)
 223+ 9E31 E6 F0            and $f0
 224+ 9E33 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E34
 226+ 9E34 CB 7E            bit 7,(hl)
 227+ 9E36 28 03            jr z,1F
 228+ 9E38 CD 0F 9A         call Mov_up
 229+ 9E3B 2A F2 8B     1 ld hl, (Puntero_mov)
 230+ 9E3E CB 76            bit 6,(hl)
 231+ 9E40 28 03            jr z,2F
 232+ 9E42 CD D6 99         call Mov_down
 233+ 9E45
 234+ 9E45              ; Se ha aplicado reinicio ???
 235+ 9E45              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E45
 237+ 9E45              ;    ld a,(Ctrl_3)
 238+ 9E45              ;    bit 1,a
 239+ 9E45              ;    ret nz
 240+ 9E45
 241+ 9E45 2A F2 8B     2 ld hl, (Puntero_mov)
 242+ 9E48 CB 6E            bit 5,(hl)
 243+ 9E4A 28 03            jr z,3F
 244+ 9E4C CD 75 9B         call Mov_left
 245+ 9E4F 2A F2 8B     3 ld hl, (Puntero_mov)
 246+ 9E52 CB 66            bit 4,(hl)
 247+ 9E54 C8               ret z
 248+ 9E55 CD 52 9A         call Mov_right
 249+ 9E58 C9               ret
 250+ 9E59
 251+ 9E59              ; ---------- --------- --------- ---------- ----------
 252+ 9E59              ;
 253+ 9E59              ;   26/06/23
 254+ 9E59              ;
 255+ 9E59              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E59
 257+ 9E59              Ajusta_velocidad_desplazamiento
 258+ 9E59
 259+ 9E59              ; 1er byte de la cadena de movimiento.
 260+ 9E59              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E59
 262+ 9E59 CD 77 9E         call Extrae_nibble_alto
 263+ 9E5C
 264+ 9E5C 32 E6 8B         ld (Vel_up),a
 265+ 9E5F 79               ld a,c
 266+ 9E60 E6 0F            and $0f
 267+ 9E62 32 E7 8B         ld (Vel_down),a
 268+ 9E65
 269+ 9E65              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E65              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E65
 272+ 9E65 23               inc hl
 273+ 9E66 CD 77 9E         call Extrae_nibble_alto
 274+ 9E69
 275+ 9E69 32 E4 8B         ld (Vel_left),a
 276+ 9E6C 79               ld a,c
 277+ 9E6D E6 0F            and $0f
 278+ 9E6F 32 E5 8B         ld (Vel_right),a
 279+ 9E72
 280+ 9E72              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E72
 282+ 9E72 23               inc hl
 283+ 9E73 22 F2 8B         ld (Puntero_mov),hl
 284+ 9E76 C9               ret
 285+ 9E77
 286+ 9E77 06 04        Extrae_nibble_alto ld b,4
 287+ 9E79 7E               ld a,(hl)
 288+ 9E7A 4F               ld c,a
 289+ 9E7B E6 F0            and $f0
 290+ 9E7D CB 3F        1 srl a
 291+ 9E7F 10 FC            djnz 1B
 292+ 9E81 C9               ret
 293+ 9E82
 294+ 9E82              ; ---------- --------- --------- ---------- ----------
 295+ 9E82              ;
 296+ 9E82              ;   5/7/23
 297+ 9E82              ;
 298+ 9E82              ;   Incrementa_Puntero_indice_mov
 299+ 9E82
 300+ 9E82              Incrementa_Puntero_indice_mov
 301+ 9E82
 302+ 9E82 21 F6 8B         ld hl,Incrementa_puntero
 303+ 9E85 34               inc (hl)
 304+ 9E86
 305+ 9E86 2A F0 8B         ld hl,(Puntero_indice_mov)
 306+ 9E89 01 02 00         ld bc,2
 307+ 9E8C A7               and a
 308+ 9E8D 09               add hl,bc
 309+ 9E8E 22 F0 8B         ld (Puntero_indice_mov),hl
 310+ 9E91
 311+ 9E91 7E               ld a,(hl)
 312+ 9E92 A7               and a
 313+ 9E93
 314+ 9E93              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E93
 316+ 9E93              ;    jr z,$
 317+ 9E93
 318+ 9E93              ;! Reinicia el Patrón de movimiento.
 319+ 9E93
 320+ 9E93 CC 98 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E96
 322+ 9E96 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E97
 324+ 9E97 C9               ret
 325+ 9E98
 326+ 9E98              ; ---------- --------- --------- ---------- ----------
 327+ 9E98              ;
 328+ 9E98              ;   15/01/24
 329+ 9E98              ;
 330+ 9E98              ;   Inicializa_Puntero_indice_mov
 331+ 9E98
 332+ 9E98              Inicializa_Puntero_indice_mov_2
 333+ 9E98
 334+ 9E98              ; Existe etiqueta de bucle principal???
 335+ 9E98
 336+ 9E98 2A F4 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E9B 24               inc h
 338+ 9E9C 25               dec h
 339+ 9E9D 28 05            jr z,2F
 340+ 9E9F
 341+ 9E9F 22 F0 8B         ld (Puntero_indice_mov),hl
 342+ 9EA2 18 14            jr 3F
 343+ 9EA4
 344+ 9EA4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EA4
 346+ 9EA4 3A F6 8B     2 ld a,(Incrementa_puntero)
 347+ 9EA7 47               ld b,a
 348+ 9EA8
 349+ 9EA8 2A F0 8B         ld hl,(Puntero_indice_mov)
 350+ 9EAB 2B           1 dec hl
 351+ 9EAC 2B               dec hl
 352+ 9EAD 10 FC            djnz 1B
 353+ 9EAF 22 F0 8B         ld (Puntero_indice_mov),hl
 354+ 9EB2
 355+ 9EB2 AF               xor a
 356+ 9EB3 32 F6 8B         ld (Incrementa_puntero),a
 357+ 9EB6 18 06            jr 4F
 358+ 9EB8
 359+ 9EB8 3A F7 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EBB 32 F6 8B         ld (Incrementa_puntero),a
 361+ 9EBE C9           4 ret
 362+ 9EBF
 363+ 9EBF              ; ----------------------------------------------------------------------
 364+ 9EBF              ;
 365+ 9EBF              ;   30/01/24
 366+ 9EBF              ;
 367+ 9EBF              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EBF
 369+ 9EBF 3A BF 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EC2 CD 13 94         call Calcula_salto_en_BC
 371+ 9EC5 21 E8 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EC8 A7               and a
 373+ 9EC9 ED 4A            adc hl,bc
 374+ 9ECB C9               ret
 375+ 9ECC
 376+ 9ECC              ; ----------------------------------------------------------------------
 377+ 9ECC              ;
 378+ 9ECC              ;   30/01/24
 379+ 9ECC              ;
 380+ 9ECC              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9ECC              ;
 382+ 9ECC              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9ECC
 384+ 9ECC 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9ECD 23               inc hl
 386+ 9ECE 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9ECF 69               ld l,c
 388+ 9ED0 60               ld h,b
 389+ 9ED1 22 C8 8B         ld (Contador_de_mov_masticados),hl
 390+ 9ED4 C9               ret
 391+ 9ED5
# file closed: Movimiento.asm
2078  9ED5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9ED5              Motor_de_disparos_entidades
   2+ 9ED5
   3+ 9ED5 3A 1F 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9ED8 FE 07            cp 7
   5+ 9EDA C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9EDB
   7+ 9EDB 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9EDD 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9EE0
  10+ 9EE0 CD 80 90     1 call Extrae_address
  11+ 9EE3 1C               inc e
  12+ 9EE4 1C               inc e
  13+ 9EE5 ED 53 32 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9EE9
  15+ 9EE9               ; Caja vacía ???
  16+ 9EE9
  17+ 9EE9 2C               inc l
  18+ 9EEA
  19+ 9EEA 7E               ld a,(hl)
  20+ 9EEB A7               and a
  21+ 9EEC 28 19            jr z,3F                                                              ; Caja vacía.
  22+ 9EEE
  23+ 9EEE              ; --- Trabajamos con caja:
  24+ 9EEE
  25+ 9EEE              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
  26+ 9EEE
  27+ 9EEE CD 1D 9F         call Rota_disparo_si_procede
  28+ 9EF1
  29+ 9EF1              ; ------------------------------------------------------------
  30+ 9EF1
  31+ 9EF1 2D               dec l
  32+ 9EF2 2D               dec l
  33+ 9EF3 2D               dec l
  34+ 9EF4
  35+ 9EF4 CD 80 90         call Extrae_address
  36+ 9EF7              ;   (Puntero_de_impresion) del disparo en HL.
  37+ 9EF7
  38+ 9EF7              ;! Velocidad del disparo de entidades.
  39+ 9EF7
  40+ 9EF7 CD 90 99         call NextScan
  41+ 9EFA
  42+ 9EFA              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  43+ 9EFA
  44+ 9EFA CD 0B 9F         call Fin_de_disparo_de_entidad
  45+ 9EFD
  46+ 9EFD EB               ex de,hl
  47+ 9EFE
  48+ 9EFE 73               ld (hl),e
  49+ 9EFF 23               inc hl
  50+ 9F00 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  51+ 9F01
  52+ 9F01 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  53+ 9F04 18 02            jr 2F
  54+ 9F06
  55+ 9F06 C9               ret
  56+ 9F07
  57+ 9F07 EB           3 ex de,hl
  58+ 9F08 10 D6        2 djnz 1B
  59+ 9F0A
  60+ 9F0A C9               ret
  61+ 9F0B
  62+ 9F0B              ; ------------- ------------- ------------
  63+ 9F0B              ;
  64+ 9F0B              ;   25/9/24
  65+ 9F0B
  66+ 9F0B              Fin_de_disparo_de_entidad
  67+ 9F0B
  68+ 9F0B 7C               ld a,h
  69+ 9F0C FE 54            cp $54
  70+ 9F0E D8               ret c
  71+ 9F0F
  72+ 9F0F D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  73+ 9F10
  74+ 9F10 5D               ld e,l
  75+ 9F11 54               ld d,h
  76+ 9F12
  77+ 9F12 21 E0 57         ld hl,$57e0
  78+ 9F15 ED 52            sbc hl,de
  79+ 9F17
  80+ 9F17 38 39            jr c,Elimina_disparo_entidad
  81+ 9F19
  82+ 9F19 6B               ld l,e
  83+ 9F1A 62               ld h,d
  84+ 9F1B
  85+ 9F1B D1               pop de
  86+ 9F1C
  87+ 9F1C C9               ret
  88+ 9F1D
  89+ 9F1D              ; ----------------------------------------------------------
  90+ 9F1D              ;
  91+ 9F1D              ;   08/10/24
  92+ 9F1D
  93+ 9F1D              Rota_disparo_si_procede
  94+ 9F1D
  95+ 9F1D              ;   Nos situamos en el byte alto de (Control).
  96+ 9F1D
  97+ 9F1D CB 76            bit 6,(hl)
  98+ 9F1F 20 03            jr nz,Decrementa_contador_de_control_de_disparo
  99+ 9F21 CB 7E            bit 7,(hl)
 100+ 9F23 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 101+ 9F24
 102+ 9F24              Decrementa_contador_de_control_de_disparo
 103+ 9F24
 104+ 9F24 35               dec (hl)
 105+ 9F25 7E               ld a,(hl)
 106+ 9F26 E6 07            and 7
 107+ 9F28 C0               ret nz
 108+ 9F29
 109+ 9F29              Rotamos_disparo_segun_proceda
 110+ 9F29
 111+ 9F29              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 112+ 9F29
 113+ 9F29 3E 07            ld a,7
 114+ 9F2B 86               add (hl)
 115+ 9F2C 77               ld (hl),a                                                           ; Contador reinicializado.
 116+ 9F2D
 117+ 9F2D CD 46 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 118+ 9F30
 119+ 9F30 CB 76            bit 6,(hl)
 120+ 9F32 20 05            jr nz,Rota_a_derecha
 121+ 9F34
 122+ 9F34
 123+ 9F34              Rota_a_izq
 124+ 9F34
 125+ 9F34 F3               di
 126+ 9F35 18 FE            jr $
 127+ 9F37 FB               ei
 128+ 9F38
 129+ 9F38 C9               ret
 130+ 9F39
 131+ 9F39              Rota_a_derecha
 132+ 9F39
 133+ 9F39 FD CB 00 3E      srl (iy+0)
 134+ 9F3D FD CB 01 3E      srl (iy+1)
 135+ 9F41 FD CB 02 3E      srl (iy+2)
 136+ 9F45
 137+ 9F45              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 138+ 9F45
 139+ 9F45 C9               ret
 140+ 9F46
 141+ 9F46              ; ------------ ----------- ------------
 142+ 9F46              ;
 143+ 9F46              ;   11/10/24
 144+ 9F46
 145+ 9F46              Puntero_objeto_en_IY
 146+ 9F46
 147+ 9F46 E5               push hl
 148+ 9F47
 149+ 9F47 2D               dec l
 150+ 9F48 2D               dec l
 151+ 9F49 2D               dec l
 152+ 9F4A 2D               dec l
 153+ 9F4B 2D               dec l
 154+ 9F4C 2D               dec l
 155+ 9F4D
 156+ 9F4D E5               push hl
 157+ 9F4E FD E1            pop iy
 158+ 9F50
 159+ 9F50 E1               pop hl
 160+ 9F51
 161+ 9F51 C9               ret
 162+ 9F52
 163+ 9F52              ; ------------ ----------- ------------
 164+ 9F52              ;
 165+ 9F52              ;   25/9/24
 166+ 9F52
 167+ 9F52              Elimina_disparo_entidad
 168+ 9F52
 169+ 9F52 21 1F 8C         ld hl,Numero_de_disparos_de_entidades
 170+ 9F55 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 171+ 9F56
 172+ 9F56 E1               pop hl
 173+ 9F57 E5               push hl
 174+ 9F58
 175+ 9F58 2B               dec hl
 176+ 9F59 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
 177+ 9F5A
 178+ 9F5A 16 06            ld d,6                                                              ; Contador
 179+ 9F5C AF               xor a                                                               ; Borrador
 180+ 9F5D
 181+ 9F5D 77           1 ld (hl),a
 182+ 9F5E 15               dec d
 183+ 9F5F 23               inc hl
 184+ 9F60 20 FB            jr nz,1B
 185+ 9F62
 186+ 9F62 D1               pop de
 187+ 9F63
 188+ 9F63 21 00 00         ld hl,0
 189+ 9F66
 190+ 9F66 C9               ret
 191+ 9F67              ; --------------------------------------------------------------------------------------
 192+ 9F67              ;
 193+ 9F67              ;   12/10/24
 194+ 9F67              ;
 195+ 9F67
 196+ 9F67              Genera_datos_de_impresion_disparos_Entidades
 197+ 9F67
 198+ 9F67 3A 1F 8C         ld a,(Numero_de_disparos_de_entidades)
 199+ 9F6A 47               ld b,a
 200+ 9F6B 3E 07            ld a,7
 201+ 9F6D 90               sub b
 202+ 9F6E C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 203+ 9F6F
 204+ 9F6F 08               ex af,af
 205+ 9F70
 206+ 9F70              ; ---------------
 207+ 9F70
 208+ 9F70              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 209+ 9F70
 210+ 9F70 21 23 89         ld hl,Indice_de_disparos_entidades
 211+ 9F73
 212+ 9F73 CD 80 90     1 call Extrae_address
 213+ 9F76
 214+ 9F76 13               inc de
 215+ 9F77 13               inc de
 216+ 9F78
 217+ 9F78 ED 53 32 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 218+ 9F7C
 219+ 9F7C 2C               inc l
 220+ 9F7D
 221+ 9F7D 7E               ld a,(hl)
 222+ 9F7E A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 223+ 9F7F 28 39            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 224+ 9F81
 225+ 9F81              ; ----- ----- ----- -----
 226+ 9F81
 227+ 9F81 2D               dec l
 228+ 9F82 2D               dec l
 229+ 9F83 2D               dec l
 230+ 9F84
 231+ 9F84 CD 80 90         call Extrae_address
 232+ 9F87 E5               push hl
 233+ 9F88
 234+ 9F88 1D               dec e
 235+ 9F89
 236+ 9F89 EB               ex de,hl
 237+ 9F8A
 238+ 9F8A 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 239+ 9F8B 2D               dec l
 240+ 9F8C 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 241+ 9F8D 2D               dec l
 242+ 9F8E 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 243+ 9F8F
 244+ 9F8F E1               pop hl                                                    ;? Puntero de impresión en HL.
 245+ 9F90
 246+ 9F90              Genera_scanlines_de_los_disparos_de_entidades.
 247+ 9F90
 248+ 9F90 FD 2A 1C 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 249+ 9F94 FD 73 00         ld (iy+0),e
 250+ 9F97 FD 70 01         ld (iy+1),b
 251+ 9F9A FD 71 02         ld (iy+2),c
 252+ 9F9D
 253+ 9F9D FD 75 03         ld (iy+3),l
 254+ 9FA0 FD 74 04         ld (iy+4),h
 255+ 9FA3
 256+ 9FA3 CD 90 99         call NextScan
 257+ 9FA6
 258+ 9FA6 FD 75 05         ld (iy+5),l
 259+ 9FA9 FD 74 06         ld (iy+6),h
 260+ 9FAC
 261+ 9FAC FD E5            push iy
 262+ 9FAE E1               pop hl
 263+ 9FAF
 264+ 9FAF 3E 07            ld a,7
 265+ 9FB1 85               add l
 266+ 9FB2 6F               ld l,a
 267+ 9FB3
 268+ 9FB3 22 1C 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 269+ 9FB6
 270+ 9FB6              ; ----- ----- ----- -----
 271+ 9FB6
 272+ 9FB6 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 273+ 9FB7 3D               dec a
 274+ 9FB8 C8               ret z
 275+ 9FB9 08               ex af,af
 276+ 9FBA
 277+ 9FBA              Situa_en_siguiente_caja
 278+ 9FBA
 279+ 9FBA 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 280+ 9FBD 18 B4            jr 1B
 281+ 9FBF
 282+ 9FBF              ; --------------------------------------------------------------------------------------
 283+ 9FBF              ;
 284+ 9FBF              ;   12/10/24
 285+ 9FBF              ;
 286+ 9FBF
 287+ 9FBF              Genera_disparo_de_entidad_maldosa
 288+ 9FBF
 289+ 9FBF              ;   Estructura de un disparo de entidades.
 290+ 9FBF
 291+ 9FBF              ;   Disparo_1 defw 0								; Puntero objeto.
 292+ 9FBF              ; 	defw 0											; Puntero de impresión.
 293+ 9FBF              ;	defw 0											; Control.
 294+ 9FBF
 295+ 9FBF              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 296+ 9FBF              ;   _de la entidad en el momento de disparar.
 297+ 9FBF
 298+ 9FBF              ;   El byte alto muestra la siguiente información:
 299+ 9FBF              ;
 300+ 9FBF              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 301+ 9FBF              ;                        _antes de desplazarse a derecha/izquierda.
 302+ 9FBF              ;
 303+ 9FBF              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 304+ 9FBF              ;
 305+ 9FBF              ;                        10xx ..... Izquierda.
 306+ 9FBF              ;                        01xx ..... Derecha.
 307+ 9FBF              ;                        00xx ..... Recto.
 308+ 9FBF
 309+ 9FBF              ;*  Exclusiones.
 310+ 9FBF
 311+ 9FBF              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 312+ 9FBF              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 313+ 9FBF
 314+ 9FBF              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 315+ 9FBF
 316+ 9FBF 3A 1F 8C         ld a,(Numero_de_disparos_de_entidades)
 317+ 9FC2 A7               and a
 318+ 9FC3 C8               ret z
 319+ 9FC4
 320+ 9FC4 3A C1 8B         ld a,(Coordenada_y)
 321+ 9FC7 A7               and a
 322+ 9FC8 C8               ret z
 323+ 9FC9
 324+ 9FC9 3D               dec a
 325+ 9FCA C8               ret z
 326+ 9FCB
 327+ 9FCB FE 10            cp 16
 328+ 9FCD D0               ret nc
 329+ 9FCE
 330+ 9FCE              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 331+ 9FCE              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 332+ 9FCE              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 333+ 9FCE
 334+ 9FCE 21 21 8C         ld hl,Permiso_de_disparo_Entidades
 335+ 9FD1 35               dec (hl)                                            ; No más disparos en este FRAME.
 336+ 9FD2
 337+ 9FD2              ;   Decrementa el numero de disparos de entidades.
 338+ 9FD2
 339+ 9FD2 21 1F 8C         ld hl,Numero_de_disparos_de_entidades
 340+ 9FD5 35               dec (hl)
 341+ 9FD6
 342+ 9FD6 21 23 89         ld hl,Indice_de_disparos_entidades
 343+ 9FD9
 344+ 9FD9 CD 80 90     1 call Extrae_address
 345+ 9FDC
 346+ 9FDC 13               inc de
 347+ 9FDD 13               inc de
 348+ 9FDE
 349+ 9FDE ED 53 32 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 350+ 9FE2
 351+ 9FE2              ;   Comprobamos si la caja está vacía.
 352+ 9FE2
 353+ 9FE2 2C               inc l
 354+ 9FE3
 355+ 9FE3 7E               ld a,(hl)
 356+ 9FE4 A7               and a
 357+ 9FE5 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 358+ 9FE7
 359+ 9FE7              ;   Caja vacía, vamos a generar un disparo.
 360+ 9FE7              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 361+ 9FE7
 362+ 9FE7 CD 0D A0         call Genera_byte_inclinacion
 363+ 9FEA
 364+ 9FEA 7E               ld a,(hl)
 365+ 9FEB 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 366+ 9FEC
 367+ 9FEC 2D               dec l
 368+ 9FED
 369+ 9FED              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 370+ 9FED
 371+ 9FED 3A CA 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 372+ 9FF0 77               ld (hl),a
 373+ 9FF1
 374+ 9FF1 2D               dec l
 375+ 9FF2
 376+ 9FF2 CD 2B A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 377+ 9FF5
 378+ 9FF5 70               ld (hl),b
 379+ 9FF6 2D               dec l
 380+ 9FF7 71               ld (hl),c
 381+ 9FF8
 382+ 9FF8 2D               dec l
 383+ 9FF9
 384+ 9FF9              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 385+ 9FF9
 386+ 9FF9 FD 7E 02         ld a,(iy+02)
 387+ 9FFC 77               ld (hl),a
 388+ 9FFD 2D               dec l
 389+ 9FFE
 390+ 9FFE FD 7E 01         ld a,(iy+01)
 391+ A001 77               ld (hl),a
 392+ A002 2D               dec l
 393+ A003
 394+ A003 FD 7E 00         ld a,(iy+00)
 395+ A006 77               ld (hl),a
 396+ A007
 397+ A007 C9               ret
 398+ A008
 399+ A008              ;   --- --- ---
 400+ A008
 401+ A008              Situa_en_siguiente_disparo
 402+ A008
 403+ A008 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 404+ A00B 18 CC            jr 1B
 405+ A00D
 406+ A00D              ; --------------------------------------------------------------------------------------
 407+ A00D              ;
 408+ A00D              ;   09/10/24
 409+ A00D              ;
 410+ A00D
 411+ A00D              Genera_byte_inclinacion
 412+ A00D
 413+ A00D 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 414+ A00F
 415+ A00F              ; Determina tendencia del disparo.
 416+ A00F
 417+ A00F 3A 75 89         ld a,(CX_Amadeus)
 418+ A012 47               ld b,a
 419+ A013 3A C0 8B         ld a,(Coordenada_X)
 420+ A016 90               sub b
 421+ A017 38 07            jr c,Disparo_a_derecha
 422+ A019
 423+ A019 FE 04        Disparo_a_izquierda cp 4
 424+ A01B
 425+ A01B D8               ret c
 426+ A01C C8               ret z
 427+ A01D
 428+ A01D CB FE            set 7,(hl)
 429+ A01F C9               ret
 430+ A020
 431+ A020 47           Disparo_a_derecha ld b,a
 432+ A021 3E FF            ld a,$ff
 433+ A023 90               sub b
 434+ A024
 435+ A024 FE 04            cp 4
 436+ A026
 437+ A026 D8               ret c
 438+ A027 C8               ret z
 439+ A028
 440+ A028 CB F6            set 6,(hl)
 441+ A02A C9               ret
 442+ A02B
 443+ A02B              ; --------------------------------------------------------------------------------------
 444+ A02B              ;
 445+ A02B              ;   09/10/24
 446+ A02B              ;
 447+ A02B
 448+ A02B              Modifica_puntero_de_impresion
 449+ A02B
 450+ A02B              ;   Puntero de impresión del disparo en BC.
 451+ A02B
 452+ A02B ED 4B 34 8C      ld bc,(Puntero_de_impresion_disparo_de_entidad)
 453+ A02F
 454+ A02F 08               ex af,af
 455+ A030 CB 77            bit 6,a
 456+ A032 28 06            jr z,1F
 457+ A034
 458+ A034 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 459+ A038 0C               inc c
 460+ A039 C9               ret
 461+ A03A
 462+ A03A CB 7F        1 bit 7,a
 463+ A03C 28 F6            jr z,2B
 464+ A03E
 465+ A03E FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 466+ A042 0D               dec c
 467+ A043
 468+ A043 C9               ret
 469+ A044
 470+ A044              ; --------------------------------------------------------------------------------------
 471+ A044              ;
 472+ A044              ;   31/08/24
 473+ A044              ;
 474+ A044
 475+ A044              Compara_con_coordenadas_de_disparo
 476+ A044
 477+ A044 3A C1 8B         ld a,(Coordenada_y)
 478+ A047 47               ld b,a
 479+ A048 3A 39 8C         ld a,(Coordenadas_disparo_certero)
 480+ A04B 90               sub b
 481+ A04C
 482+ A04C              ; A = "0" ok
 483+ A04C              ; A = "1" ok
 484+ A04C
 485+ A04C 28 08            jr z,Comprueba_coordenada_X
 486+ A04E 3D               dec a
 487+ A04F 28 05            jr z,Comprueba_coordenada_X
 488+ A051
 489+ A051              ; A = "$ff" ok
 490+ A051
 491+ A051 FE FE            cp $fe
 492+ A053 28 01            jr z,Comprueba_coordenada_X
 493+ A055
 494+ A055 C9               ret
 495+ A056
 496+ A056              Comprueba_coordenada_X
 497+ A056
 498+ A056 3A C0 8B         ld a,(Coordenada_X)
 499+ A059 47               ld b,a
 500+ A05A 21 3A 8C         ld hl,Coordenadas_disparo_certero+1
 501+ A05D 7E               ld a,(hl)
 502+ A05E 90               sub b
 503+ A05F
 504+ A05F              ; A = "0" ok
 505+ A05F              ; A = "1" ok
 506+ A05F
 507+ A05F 28 09            jr z,Activa_Impacto_en_entidad
 508+ A061 3D               dec a
 509+ A062 28 06            jr z,Activa_Impacto_en_entidad
 510+ A064
 511+ A064              ; A = "2" ok
 512+ A064
 513+ A064 3D               dec a
 514+ A065 28 03            jr z,Activa_Impacto_en_entidad
 515+ A067
 516+ A067              ; A = "$ff"
 517+ A067
 518+ A067 FE FD            cp $fd
 519+ A069 C0               ret nz
 520+ A06A
 521+ A06A              Activa_Impacto_en_entidad
 522+ A06A
 523+ A06A              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 524+ A06A
 525+ A06A 3E 02            ld a,2
 526+ A06C 32 C3 8B         ld (Impacto),a
 527+ A06F
 528+ A06F              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 529+ A06F
 530+ A06F 11 C0 87         ld de,Indice_Explosion_entidades
 531+ A072 21 C6 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 532+ A075
 533+ A075 73               ld (hl),e
 534+ A076 23               inc hl
 535+ A077 72               ld (hl),d
 536+ A078
 537+ A078              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 538+ A078
 539+ A078 21 36 8C         ld hl,Impacto2
 540+ A07B CB 9E            res 3,(hl)
 541+ A07D
 542+ A07D C9               ret
 543+ A07E
 544+ A07E              ; --------------------------------------------------------------------------------------
 545+ A07E              ;
 546+ A07E              ;   11/09/24
 547+ A07E              ;
 548+ A07E
 549+ A07E              Limpia_album_de_borrado_disparos
 550+ A07E
 551+ A07E 21 31 8C         ld hl,Ctrl_5
 552+ A081 CB 56            bit 2,(hl)
 553+ A083 C8               ret z
 554+ A084
 555+ A084              ;    jr z,1F
 556+ A084
 557+ A084              ;    res 2,(hl)
 558+ A084
 559+ A084              ;    jr Limpiando
 560+ A084
 561+ A084              ;1 bit 0,(hl)
 562+ A084              ;    ret z
 563+ A084              ;    res 0,(hl)
 564+ A084
 565+ A084              Limpiando
 566+ A084
 567+ A084 AF               xor a
 568+ A085 2A 18 8C         ld hl,(Album_de_pintado_disparos)
 569+ A088 77               ld (hl),a
 570+ A089 5D               ld e,l
 571+ A08A 54               ld d,h
 572+ A08B 1C               inc e                                           ; DE = HL+1
 573+ A08C 01 3A 00         ld bc,$003a
 574+ A08F ED B0            ldir
 575+ A091
 576+ A091 C9               ret
 577+ A092
 578+ A092
 579+ A092              ; --------------------------------------------------------------------------------------
 580+ A092              ;
 581+ A092              ;   29/09/24
 582+ A092              ;
 583+ A092
 584+ A092              Calcula_bytes_pintado_disparos
 585+ A092
 586+ A092 2A 18 8C         ld hl,(Album_de_pintado_disparos)
 587+ A095 45               ld b,l
 588+ A096 2A 1C 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 589+ A099 7D               ld a,l
 590+ A09A
 591+ A09A 90               sub b
 592+ A09B 32 1E 8C         ld (Num_de_bytes_album_de_disparos),a
 593+ A09E
 594+ A09E C9               ret
 595+ A09F
 596+ A09F              ; --------------------------------------------------------------------------------------
 597+ A09F              ;
 598+ A09F              ;   29/09/24
 599+ A09F              ;
 600+ A09F              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 601+ A09F              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 602+ A09F              ;   _disparos que el álbum del FRAME actual).
 603+ A09F
 604+ A09F              Limpia_album_de_pintado_disparos
 605+ A09F
 606+ A09F 3A 1E 8C         ld a,(Num_de_bytes_album_de_disparos)
 607+ A0A2 A7               and a
 608+ A0A3 28 0E            jr z,Clean_only_one
 609+ A0A5
 610+ A0A5 47               ld b,a
 611+ A0A6 3E 3B            ld a,$3b
 612+ A0A8 90               sub b
 613+ A0A9 47               ld b,a
 614+ A0AA AF           2 xor a
 615+ A0AB
 616+ A0AB 2A 1C 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 617+ A0AE 77           1 ld (hl),a
 618+ A0AF 23               inc hl
 619+ A0B0 10 FC            djnz 1B
 620+ A0B2 C9               ret
 621+ A0B3
 622+ A0B3              Clean_only_one
 623+ A0B3
 624+ A0B3 06 06            ld b,6
 625+ A0B5 18 F3            jr 2B
 626+ A0B7
 627+ A0B7              ; --------------------------------------------------------------------------------------
 628+ A0B7              ;
 629+ A0B7              ;   29/09/24
 630+ A0B7              ;
 631+ A0B7
 632+ A0B7              Motor_Disparos_Amadeus
 633+ A0B7
 634+ A0B7              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 635+ A0B7
 636+ A0B7 21 20 89         ld hl,Disparo_Amad+1
 637+ A0BA
 638+ A0BA 34               inc (hl)
 639+ A0BB 35               dec (hl)
 640+ A0BC
 641+ A0BC C8               ret z
 642+ A0BD
 643+ A0BD              ;   Esta caja contiene un disparo.
 644+ A0BD
 645+ A0BD CD C4 A0         call Consulta_Impacto
 646+ A0C0 CC DD A0         call z,Mueve_disparo_Amadeus
 647+ A0C3
 648+ A0C3 C9               ret
 649+ A0C4
 650+ A0C4              ; ----------------------
 651+ A0C4              ;
 652+ A0C4              ;
 653+ A0C4              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 654+ A0C4              ;
 655+ A0C4              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 656+ A0C4
 657+ A0C4
 658+ A0C4              Consulta_Impacto
 659+ A0C4
 660+ A0C4              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 661+ A0C4              ;   _sea lo más coherente posible.
 662+ A0C4
 663+ A0C4 E5               push hl
 664+ A0C5 2B               dec hl
 665+ A0C6 CD E9 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 666+ A0C9 E1               pop hl
 667+ A0CA 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 668+ A0CB
 669+ A0CB C8               ret z
 670+ A0CC
 671+ A0CC 3A 36 8C         ld a,(Impacto2)
 672+ A0CF CB DF            set 3,a
 673+ A0D1 32 36 8C         ld (Impacto2),a
 674+ A0D4
 675+ A0D4 E5               push hl
 676+ A0D5 CD D6 A1         call Genera_coordenadas_de_disparo_Amadeus
 677+ A0D8 E1               pop hl
 678+ A0D9 CD F6 A0         call Elimina_disparo_Amadeus
 679+ A0DC
 680+ A0DC C9               ret
 681+ A0DD
 682+ A0DD              ; ----------------------
 683+ A0DD              ;
 684+ A0DD              ;
 685+ A0DD              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 686+ A0DD
 687+ A0DD              Mueve_disparo_Amadeus
 688+ A0DD
 689+ A0DD CD 80 90         call Extrae_address
 690+ A0E0
 691+ A0E0 CD 9F 99         call PreviousScan
 692+ A0E3 CD 9F 99         call PreviousScan
 693+ A0E6 CD 9F 99         call PreviousScan
 694+ A0E9 CD 9F 99         call PreviousScan
 695+ A0EC
 696+ A0EC              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 697+ A0EC
 698+ A0EC 7C               ld a,h
 699+ A0ED D6 40            sub $40
 700+ A0EF EB               ex de,hl
 701+ A0F0 38 04            jr c,Elimina_disparo_Amadeus
 702+ A0F2
 703+ A0F2               ; Introduce nuevo puntero_de_impresión en la caja.
 704+ A0F2
 705+ A0F2 73               ld (hl),e
 706+ A0F3 23               inc hl
 707+ A0F4 72               ld (hl),d
 708+ A0F5
 709+ A0F5 C9               ret
 710+ A0F6
 711+ A0F6              ; ----------------------
 712+ A0F6              ;
 713+ A0F6              ;   29/9/24
 714+ A0F6
 715+ A0F6              Elimina_disparo_Amadeus
 716+ A0F6
 717+ A0F6              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 718+ A0F6              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 719+ A0F6
 720+ A0F6              ;   Disparo_1A defw 0									; Puntero objeto.
 721+ A0F6              ;   	defw 0											; Puntero de impresión.
 722+ A0F6
 723+ A0F6 2B               dec hl
 724+ A0F7 2B               dec hl
 725+ A0F8
 726+ A0F8 AF               xor a
 727+ A0F9 77               ld (hl),a
 728+ A0FA 23               inc hl
 729+ A0FB 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 730+ A0FC
 731+ A0FC 23               inc hl
 732+ A0FD 77               ld (hl),a
 733+ A0FE 23               inc hl
 734+ A0FF 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 735+ A100
 736+ A100 3E 01            ld a,1
 737+ A102 32 20 8C         ld (Permiso_de_disparo_Amadeus),a
 738+ A105
 739+ A105 21 31 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 740+ A108 CB C6            set 0,(hl)
 741+ A10A
 742+ A10A AF               xor a
 743+ A10B 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 744+ A10C
 745+ A10C C9               ret
 746+ A10D
 747+ A10D              ; --------------------------------------------------------------------------------------
 748+ A10D              ;
 749+ A10D              ;   12/10/24
 750+ A10D              ;
 751+ A10D
 752+ A10D              Pinta_disparos
 753+ A10D
 754+ A10D ED 73 0C 8C      ld (Stack),sp
 755+ A111 06 02            ld b,2
 756+ A113
 757+ A113 FD 21 76 83      ld iy,Indice_disparo_Amadeus
 758+ A117 FD 7C            ld a,iyh
 759+ A119
 760+ A119 21 31 8C         ld hl,Ctrl_5
 761+ A11C CB 56            bit 2,(hl)
 762+ A11E 20 FE            jr nz,$
 763+ A120
 764+ A120 C9               ret
 765+ A121
 766+ A121              ;   Existen disparos en el album de borrado ???
 767+ A121
 768+ A121 ED 7B 1A 8C      ld sp,(Album_de_borrado_disparos)
 769+ A125 D1               pop de
 770+ A126 BA               cp d
 771+ A127
 772+ A127
 773+ A127              Imprime_scanlines_de_disparo_Amadeus
 774+ A127
 775+ A127 2D               dec l
 776+ A128
 777+ A128 ED 73 0C 8C      ld (Stack),sp
 778+ A12C F9               ld sp,hl
 779+ A12D
 780+ A12D D1               pop de
 781+ A12E E1               pop hl
 782+ A12F
 783+ A12F              ; Puntero objeto en DE.
 784+ A12F              ; Puntero_de_impresión en HL.
 785+ A12F
 786+ A12F              ; 1er scanline.
 787+ A12F
 788+ A12F 1A               ld a,(de)
 789+ A130 AE               xor (hl)
 790+ A131 77               ld (hl),a
 791+ A132
 792+ A132 1C               inc e
 793+ A133 2C               inc l
 794+ A134
 795+ A134 1A               ld a,(de)
 796+ A135 AE               xor (hl)
 797+ A136 77               ld (hl),a
 798+ A137
 799+ A137              ; 2º scanline.
 800+ A137
 801+ A137 E1               pop hl
 802+ A138 1D               dec e
 803+ A139
 804+ A139 1A               ld a,(de)
 805+ A13A AE               xor (hl)
 806+ A13B 77               ld (hl),a
 807+ A13C
 808+ A13C 1C               inc e
 809+ A13D 2C               inc l
 810+ A13E
 811+ A13E 1A               ld a,(de)
 812+ A13F AE               xor (hl)
 813+ A140 77               ld (hl),a
 814+ A141
 815+ A141
 816+ A141              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 817+ A141
 818+ A141              ;    jr 2B
 819+ A141
 820+ A141 2A 18 8C     3 ld hl,(Album_de_pintado_disparos)
 821+ A144              ;    jr 2B
 822+ A144
 823+ A144 10 FB        1 djnz 3B
 824+ A146              ;    ld sp,(Stack)
 825+ A146 C9               ret
 826+ A147
 827+ A147              ; Disparos de entidades
 828+ A147
 829+ A147              ; 1er scanline.
 830+ A147
 831+ A147 1A           4 ld a,(de)
 832+ A148 AE               xor (hl)
 833+ A149 77               ld (hl),a
 834+ A14A
 835+ A14A 2C               inc l
 836+ A14B 1C               inc e
 837+ A14C
 838+ A14C 1A               ld a,(de)
 839+ A14D AE               xor (hl)
 840+ A14E 77               ld (hl),a
 841+ A14F
 842+ A14F 2C               inc l
 843+ A150 1C               inc e
 844+ A151
 845+ A151 1A               ld a,(de)
 846+ A152 AE               xor (hl)
 847+ A153 77               ld (hl),a
 848+ A154
 849+ A154 1D               dec e
 850+ A155 1D               dec e
 851+ A156
 852+ A156              ; 2º scanline.
 853+ A156
 854+ A156 E1               pop hl
 855+ A157
 856+ A157 1A               ld a,(de)
 857+ A158 AE               xor (hl)
 858+ A159 77               ld (hl),a
 859+ A15A
 860+ A15A 2C               inc l
 861+ A15B 1C               inc e
 862+ A15C
 863+ A15C 1A               ld a,(de)
 864+ A15D AE               xor (hl)
 865+ A15E 77               ld (hl),a
 866+ A15F
 867+ A15F 2C               inc l
 868+ A160 1C               inc e
 869+ A161
 870+ A161 1A               ld a,(de)
 871+ A162 AE               xor (hl)
 872+ A163 77               ld (hl),a
 873+ A164
 874+ A164              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 875+ A164
 876+ A164              ;    jr 2B
 877+ A164
 878+ A164              ; --------------------------------------------------------------------------------------
 879+ A164              ;
 880+ A164              ;   14/09/24
 881+ A164              ;
 882+ A164              ;   Modifica: HL y DE.
 883+ A164
 884+ A164
 885+ A164              Genera_datos_de_impresion_disparos_Amadeus
 886+ A164
 887+ A164 ED 73 0C 8C      ld (Stack),sp
 888+ A168 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 889+ A16B D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 890+ A16C
 891+ A16C 14               inc d                                                     ;? Salimos si no hay disparo.
 892+ A16D 15               dec d
 893+ A16E
 894+ A16E 28 12            jr z,Salida
 895+ A170
 896+ A170              Genera_scanlines_de_disparo_Amadeus
 897+ A170
 898+ A170 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 899+ A171              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 900+ A171 ED 7B 1C 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 901+ A175
 902+ A175 C1               pop bc
 903+ A176 C1               pop bc
 904+ A177 C1               pop bc
 905+ A178
 906+ A178 ED 73 1C 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 907+ A17C
 908+ A17C E5               push hl                                                   ;? Sube 2º scanline al álbum.
 909+ A17D CD 9F 99         call PreviousScan
 910+ A180 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 911+ A181 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 912+ A182
 913+ A182              Salida
 914+ A182
 915+ A182 ED 7B 0C 8C      ld sp,(Stack)
 916+ A186
 917+ A186 C9               ret
 918+ A187
 919+ A187              ; --------------------------------------------------------------------------------------
 920+ A187              ;
 921+ A187              ;   12/09/24
 922+ A187              ;
 923+ A187
 924+ A187              Genera_disparo_Amadeus
 925+ A187
 926+ A187              ;*  Exclusiones.
 927+ A187
 928+ A187 3A 20 8C         ld a,(Permiso_de_disparo_Amadeus)
 929+ A18A A7               and a
 930+ A18B C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 931+ A18C
 932+ A18C 3D               dec a
 933+ A18D 32 20 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 934+ A190
 935+ A190              Define_puntero_objeto_disparo
 936+ A190
 937+ A190
 938+ A190 21 31 8C         ld hl,Ctrl_5
 939+ A193 CB D6            set 2,(hl)
 940+ A195
 941+ A195              ;   Inicializamos contador.
 942+ A195
 943+ A195 06 00            ld b,0
 944+ A197
 945+ A197 2A 79 89         ld hl,(p.imp.amadeus)
 946+ A19A 2C               inc l
 947+ A19B
 948+ A19B 3E 80            ld a,$80
 949+ A19D BE               cp (hl)
 950+ A19E 28 0D            jr z,1F
 951+ A1A0
 952+ A1A0 04               inc b
 953+ A1A1
 954+ A1A1 3E 60            ld a,$60
 955+ A1A3 BE               cp (hl)
 956+ A1A4 28 07            jr z,1F
 957+ A1A6
 958+ A1A6
 959+ A1A6 04               inc b
 960+ A1A7
 961+ A1A7 3E 18            ld a,$18
 962+ A1A9 BE               cp (hl)
 963+ A1AA 28 01            jr z,1F
 964+ A1AC
 965+ A1AC 04               inc b
 966+ A1AD
 967+ A1AD              ;   Calcula el Puntero_de_impresión del disparo.
 968+ A1AD
 969+ A1AD              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 970+ A1AD
 971+ A1AD CD 9F 99     1 call PreviousScan
 972+ A1B0
 973+ A1B0 78               ld a,b
 974+ A1B1 CB 3F            srl a
 975+ A1B3 28 03            jr z,4F
 976+ A1B5
 977+ A1B5              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 978+ A1B5 E5               push hl
 979+ A1B6 18 02            jr 5F
 980+ A1B8 2D           4 dec l
 981+ A1B9 E5               push hl
 982+ A1BA              ; ---
 983+ A1BA
 984+ A1BA              ;   Calcula el Puntero_objeto del disparo.
 985+ A1BA
 986+ A1BA 21 76 83     5 ld hl,Indice_disparo_Amadeus
 987+ A1BD 04               inc b
 988+ A1BE 05               dec b
 989+ A1BF 28 04            jr z,2F
 990+ A1C1
 991+ A1C1              ;   Nos desplazamos por el índice de disparos.
 992+ A1C1
 993+ A1C1 2C           3 inc l
 994+ A1C2 2C               inc l
 995+ A1C3 10 FC            djnz 3B
 996+ A1C5
 997+ A1C5              ; --- Guarda el Puntero_objeto del disparo en la pila.
 998+ A1C5 CD 80 90     2 call Extrae_address
 999+ A1C8 E5               push hl
1000+ A1C9              ; ---
1001+ A1C9
1002+ A1C9              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1003+ A1C9              ; HL en el 1er .db de la caja.
1004+ A1C9
1005+ A1C9 21 1F 89         ld hl,Disparo_Amad
1006+ A1CC
1007+ A1CC 06 02            ld b,2
1008+ A1CE
1009+ A1CE D1           6 pop de
1010+ A1CF 73               ld (hl),e
1011+ A1D0 23               inc hl
1012+ A1D1 72               ld (hl),d
1013+ A1D2 23               inc hl
1014+ A1D3
1015+ A1D3 10 F9            djnz 6B
1016+ A1D5
1017+ A1D5 C9               ret
1018+ A1D6
1019+ A1D6              Genera_coordenadas_de_disparo_Amadeus
1020+ A1D6
1021+ A1D6              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1022+ A1D6              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1023+ A1D6              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1024+ A1D6
1025+ A1D6 CD 80 90         call Extrae_address
1026+ A1D9 CD 96 94         call Genera_coordenadas
1027+ A1DC
1028+ A1DC 3D               dec a
1029+ A1DD
1030+ A1DD 21 39 8C         ld hl,Coordenadas_disparo_certero
1031+ A1E0 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1032+ A1E1 23               inc hl
1033+ A1E2 3A C0 8B         ld a,(Coordenada_X)
1034+ A1E5 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1035+ A1E6
1036+ A1E6 AF               xor a
1037+ A1E7 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1038+ A1E8
1039+ A1E8 C9               ret
1040+ A1E9
1041+ A1E9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1042+ A1E9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1043+ A1E9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1044+ A1E9
1045+ A1E9              ; ----------------------------------------------
1046+ A1E9              ;
1047+ A1E9              ;   27/08/24
1048+ A1E9              ;
1049+ A1E9              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1050+ A1E9              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1051+ A1E9
1052+ A1E9              Detecta_impacto_en_disparo_de_Amadeus
1053+ A1E9
1054+ A1E9              Extraccion_de_datos
1055+ A1E9
1056+ A1E9 13               inc de
1057+ A1EA 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
1058+ A1EB
1059+ A1EB 5E               ld e,(hl)
1060+ A1EC 23               inc hl
1061+ A1ED 56               ld d,(hl)
1062+ A1EE
1063+ A1EE 23               inc hl
1064+ A1EF
1065+ A1EF 4E               ld c,(hl)
1066+ A1F0 23               inc hl
1067+ A1F1 46               ld b,(hl)
1068+ A1F2
1069+ A1F2 C5               push bc
1070+ A1F3 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1071+ A1F4
1072+ A1F4              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1073+ A1F4
1074+ A1F4 CD 9F 99         call PreviousScan
1075+ A1F7 CD 9F 99         call PreviousScan
1076+ A1FA
1077+ A1FA              Detecta_impacto_
1078+ A1FA
1079+ A1FA 1A               ld a,(de)
1080+ A1FB A6               and (hl)
1081+ A1FC C0               ret nz
1082+ A1FD
1083+ A1FD 13               inc de
1084+ A1FE 23               inc hl
1085+ A1FF
1086+ A1FF 1A               ld a,(de)
1087+ A200 A6               and (hl)
1088+ A201 C9               ret
1089+ A202
1090+ A202              ; -------------------------------------------------------------------------------------------------------------
1091+ A202              ;
1092+ A202              ;   8/8/24
1093+ A202              ;
1094+ A202              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1095+ A202              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1096+ A202              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1097+ A202              ;
1098+ A202              ;   MODIFICA: HL,DE,BC y A.
1099+ A202              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1100+ A202              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1101+ A202
1102+ A202              Colision_Entidad_Amadeus
1103+ A202
1104+ A202              ; Posible contacto de entidad con Amadeus. ?????
1105+ A202
1106+ A202              ; Exclusiones:
1107+ A202
1108+ A202 3A 59 8C         ld a,(Shield)
1109+ A205 A7               and a
1110+ A206 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1111+ A207
1112+ A207 21 2F 8C         ld hl,Ctrl_3
1113+ A20A CB 76            bit 6,(hl)
1114+ A20C C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1115+ A20D
1116+ A20D 21 36 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1117+ A210 CB 56            bit 2,(hl)
1118+ A212 C0               ret nz
1119+ A213
1120+ A213 3A C1 8B     	ld a,(Coordenada_y)
1121+ A216 FE 14        	cp $14
1122+ A218 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1123+ A219
1124+ A219 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1125+ A21C A7               and a
1126+ A21D C0               ret nz
1127+ A21E
1128+ A21E              Genera_coordenadas_X
1129+ A21E
1130+ A21E              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1131+ A21E              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1132+ A21E
1133+ A21E              ;   Limpiamos almacenes.
1134+ A21E
1135+ A21E              ;    call Limpia_Coordenadas_X
1136+ A21E
1137+ A21E              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1138+ A21E
1139+ A21E 21 3B 8C         ld hl,Coordenadas_X_Entidad
1140+ A221 3A C0 8B         ld a,(Coordenada_X)
1141+ A224 CD 46 A2         call Guarda_coordenadas_X
1142+ A227
1143+ A227              ;   Almacenamos las coordenadas X de Amadeus.
1144+ A227
1145+ A227 3A 75 89         ld a,(CX_Amadeus)
1146+ A22A CD 46 A2         call Guarda_coordenadas_X
1147+ A22D CD 5A A2         call Compara_coordenadas_X
1148+ A230 C0               ret nz
1149+ A231
1150+ A231 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1151+ A233 32 C3 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1152+ A236
1153+ A236 2A FF 8B         ld hl,(Puntero_store_caja)
1154+ A239 2C               inc l
1155+ A23A 2C               inc l
1156+ A23B 2C               inc l
1157+ A23C 2C               inc l
1158+ A23D 22 37 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1159+ A240
1160+ A240 21 36 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1161+ A243 CB D6            set 2,(hl)
1162+ A245
1163+ A245 C9               ret
1164+ A246
1165+ A246               ; ----- ----- ----- ----- -----
1166+ A246
1167+ A246 77           Guarda_coordenadas_X ld (hl),a
1168+ A247 3C               inc a
1169+ A248 2C               inc l
1170+ A249 77               ld (hl),a
1171+ A24A 3C               inc a
1172+ A24B 2C               inc l
1173+ A24C 77               ld (hl),a
1174+ A24D 2C               inc l
1175+ A24E C9               ret
1176+ A24F
1177+ A24F AF           Limpia_Coordenadas_X xor a
1178+ A250 06 06            ld b,6
1179+ A252 21 3E 8C         ld hl,Coordenadas_X_Amadeus
1180+ A255 77           1 ld (hl),a
1181+ A256 23               inc hl
1182+ A257 10 FC            djnz 1B
1183+ A259 C9               ret
1184+ A25A
1185+ A25A              ; ----- ----- ----- ----- -----
1186+ A25A
1187+ A25A              Compara_coordenadas_X
1188+ A25A
1189+ A25A DD 21 3B 8C      ld ix,Coordenadas_X_Entidad
1190+ A25E DD 7E 00         ld a,(ix+0)
1191+ A261 CD 6F A2         call Comparando
1192+ A264 C8               ret z
1193+ A265
1194+ A265 3C               inc a
1195+ A266 CD 7E A2         call Comparando_1
1196+ A269 C8               ret z
1197+ A26A
1198+ A26A 3C               inc a
1199+ A26B CD 7E A2         call Comparando_1
1200+ A26E C9               ret
1201+ A26F
1202+ A26F              ; ----- ----- ----- ----- -----
1203+ A26F              ;
1204+ A26F              ;   4/12/23
1205+ A26F              ;
1206+ A26F              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1207+ A26F
1208+ A26F              Comparando
1209+ A26F
1210+ A26F DD 2C            inc ixl
1211+ A271 DD 2C            inc ixl
1212+ A273 DD 2C            inc ixl
1213+ A275
1214+ A275 DD 46 00         ld b,(ix+0)
1215+ A278 DD 4E 01         ld c,(ix+1)
1216+ A27B DD 56 02         ld d,(ix+2)
1217+ A27E
1218+ A27E B8           Comparando_1 cp b
1219+ A27F C8               ret z
1220+ A280 B9               cp c
1221+ A281 C8               ret z
1222+ A282 BA               cp d
1223+ A283 C9               ret
1224+ A284
1225+ A284              ; -----------------------------------------------------------------------
1226+ A284              ;
1227+ A284              ;   04/7/24
1228+ A284              ;
1229+ A284
1230+ A284              Detecta_colision_nave_entidad
1231+ A284
1232+ A284              ; Exclusiones:
1233+ A284
1234+ A284              ; Salimos de la rutina si no hay advertencia de posible colisión.
1235+ A284
1236+ A284 21 36 8C     	ld hl,Impacto2
1237+ A287 CB 56        	bit 2,(hl)
1238+ A289 C8           	ret z
1239+ A28A
1240+ A28A              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1241+ A28A
1242+ A28A 2A 7B 89         ld hl,(Pamm_Amadeus)
1243+ A28D CD 80 90         call Extrae_address
1244+ A290 54               ld d,h
1245+ A291 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1246+ A292
1247+ A292 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1248+ A295 06 10            ld b,16                                        ; Contador de scanlines en B.
1249+ A297 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1250+ A29A
1251+ A29A C5           1 push bc
1252+ A29B 06 03            ld b,3
1253+ A29D E5               push hl
1254+ A29E
1255+ A29E              ; .db
1256+ A29E
1257+ A29E 1A           3 ld a,(de)
1258+ A29F A7               and a
1259+ A2A0 20 03            jr nz,4F
1260+ A2A2
1261+ A2A2 2C               inc l
1262+ A2A3 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1263+ A2A5
1264+ A2A5 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1265+ A2A7 28 04            jr z,2F
1266+ A2A9
1267+ A2A9              ; Impacto.
1268+ A2A9 FD 2D            dec iyl
1269+ A2AB 28 22            jr z,5F
1270+ A2AD
1271+ A2AD 1C           2 inc e
1272+ A2AE 10 EE            djnz 3B
1273+ A2B0
1274+ A2B0 E1               pop hl
1275+ A2B1
1276+ A2B1              ; Hay salto de línea en el puntero de impresión ???
1277+ A2B1
1278+ A2B1 7C               ld a,h
1279+ A2B2 D6 57            sub $57
1280+ A2B4 20 0A            jr nz,6F
1281+ A2B6
1282+ A2B6              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1283+ A2B6
1284+ A2B6 2A 79 89         ld hl,(p.imp.amadeus)
1285+ A2B9 3E 20            ld a,$20
1286+ A2BB A7               and a
1287+ A2BC 85               add l
1288+ A2BD 6F               ld l,a
1289+ A2BE 18 01            jr 7F
1290+ A2C0
1291+ A2C0 24           6 inc h
1292+ A2C1
1293+ A2C1 C1           7 pop bc
1294+ A2C2 10 D6            djnz 1B
1295+ A2C4
1296+ A2C4              ;   Fin de la comparativa.
1297+ A2C4
1298+ A2C4              ;   NO HAY COLISIÓN !!!!!.
1299+ A2C4              ;
1300+ A2C4              ;   .db (Impacto) de Amadeus a "0".
1301+ A2C4              ;   RES el bit2 de (Impacto2).
1302+ A2C4              ;
1303+ A2C4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1304+ A2C4              ;   Lo colocamos a "0".
1305+ A2C4
1306+ A2C4 21 36 8C         ld hl,Impacto2
1307+ A2C7 CB 96            res 2,(hl)
1308+ A2C9 2A 37 8C         ld hl,(Entidad_sospechosa_de_colision)
1309+ A2CC 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1310+ A2CE C9               ret
1311+ A2CF
1312+ A2CF              ;   COLISIÓN !!!!!.
1313+ A2CF              ;
1314+ A2CF              ;   .db (Impacto) de Amadeus a "1".
1315+ A2CF              ;   SET el bit3 de (Impacto2).
1316+ A2CF              ;
1317+ A2CF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1318+ A2CF
1319+ A2CF E1           5 pop hl
1320+ A2D0 C1               pop bc
1321+ A2D1
1322+ A2D1 21 78 89         ld hl,Impacto_Amadeus
1323+ A2D4 36 01            ld (hl),1
1324+ A2D6 21 36 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1325+ A2D9 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1326+ A2DB
1327+ A2DB 11 C0 87         ld de,Indice_Explosion_entidades
1328+ A2DE 2A 37 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1329+ A2E1
1330+ A2E1 23               inc hl
1331+ A2E2 23               inc hl
1332+ A2E3 23               inc hl
1333+ A2E4
1334+ A2E4 73               ld (hl),e
1335+ A2E5 23               inc hl
1336+ A2E6 72               ld (hl),d
1337+ A2E7
1338+ A2E7              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1339+ A2E7
1340+ A2E7 11 60 88         ld de,Indice_Explosion_Amadeus
1341+ A2EA 21 7B 89         ld hl,Pamm_Amadeus
1342+ A2ED
1343+ A2ED 73               ld (hl),e
1344+ A2EE 23               inc hl
1345+ A2EF 72               ld (hl),d
1346+ A2F0
1347+ A2F0 C9               ret
1348+ A2F1
1349+ A2F1
1350+ A2F1
# file closed: Disparo.asm
2079  A2F1
2080  A2F1              	SAVESNA "Pruebas.sna", START
2081  A2F1
2082  A2F1
2083  A2F1
2084  A2F1
# file closed: Banco_de_pruebas.asm
