# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E2 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A E8 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 03        	jr z,1F
  42  AA20
  43  AA20              ;	call Borra_sprites
  44  AA20
  45  AA20              ;	exx
  46  AA20              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
  47  AA20              ;	exx
  48  AA20
  49  AA20 CD 7A 91     	call Pinta_Sprites
  50  AA23              ;	call Extrae_Scanlines_album
  51  AA23
  52  AA23              ;	ld a,6
  53  AA23              ;	out ($fe),a
  54  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  55  AA23
  56  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  57  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  58  AA23
  59  AA23              ;	ld a,7
  60  AA23              ;	out ($fe),a												; Borde blanco.
  61  AA23              ;	call Guarda_parametros_DRAW
  62  AA23              ;	call Restore_Amadeus
  63  AA23
  64  AA23              ; Posible colisión Entidad-Amadeus ???
  65  AA23
  66  AA23              ;	ld a,(Impacto2)
  67  AA23              ;	bit 2,a
  68  AA23              ;	jr z,1F
  69  AA23
  70  AA23              ;	call Detecta_colision_nave_entidad
  71  AA23
  72  AA23              ;1 ld a,4
  73  AA23              ;	out ($fe),a
  74  AA23              ;	call Gestiona_Amadeus
  75  AA23
  76  AA23              ;	ld a,7
  77  AA23              ;	out ($fe),a											; Borde blanco.
  78  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  79  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  80  AA23
  81  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  82  AA23
  83  AA23              ;	call Recupera_parametros_DRAW
  84  AA23
  85  AA23 CD 1B 8C     1 call Actualiza_relojes
  86  AA26
  87  AA26 21 E8 89     	ld hl,Ctrl_3
  88  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  89  AA2B
  90  AA2B FD E1        	pop iy
  91  AA2D DD E1        	pop ix
  92  AA2F F1           	pop af
  93  AA30 C1           	pop bc
  94  AA31 D1           	pop de
  95  AA32 E1           	pop hl
  96  AA33 D9           	exx
  97  AA34 C1           	pop bc
  98  AA35 D1           	pop de
  99  AA36 E1           	pop hl
 100  AA37 08           	ex af,af'
 101  AA38 F1           	pop af
 102  AA39 08           	ex af,af'
 103  AA3A D9           	exx
 104  AA3B
 105  AA3B ED 7B E2 89  	ld sp,(Stack_3)
 106  AA3F
 107  AA3F FB           	ei
 108  AA40
 109  AA40 3E 01        	ld a,1												; Borde azul.
 110  AA42 D3 FE        	out ($fe),a
 111  AA44
 112  AA44 C9           	ret
 113  AA45
 114  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 115  AA45
 116  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 117  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8715 00 00        	defw 0
 141+ 8717
 142+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8719 40           	db $40												; (Ctrl_0).
 144+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 871E 00 00
 145+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8726 00           	db 0 												; (Columnas).
 149+ 8727 00 00        	defw 0												; (Limite_horizontal).
 150+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 872C
 152+ 872C              ; ---------- ---------- ---------- ---------- ----------
 153+ 872C              ;
 154+ 872C              ;	22/01/24
 155+ 872C              ;
 156+ 872C              ; 	Cada caja tiene 19 bytes !!!
 157+ 872C
 158+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 872F 00           	db %00000000										; (Attr).
 160+ 8730              ;	db 0												; (Cuad_objeto).
 161+ 8730 00           	db 0												; (Impacto).
 162+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 873D 00           	db 0												; (Ctrl_0).
 167+ 873E 00           	db 0												; (Ctrl_2).
 168+ 873F
 169+ 873F              ; ---------- ---------- ---------- ---------- ----------
 170+ 873F
 171+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 8742 00           	db %00000000										; (Attr).
 173+ 8743              ;	db 0												; (Cuad_objeto).
 174+ 8743 00           	db 0												; (Impacto).
 175+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 8750 00           	db 0												; (Ctrl_0).
 180+ 8751 00           	db 0												; (Ctrl_2).
 181+ 8752
 182+ 8752              ; ---------- ---------- ---------- ---------- ----------
 183+ 8752
 184+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8755 00           	db %00000000										; (Attr).
 186+ 8756              ;	db 0												; (Cuad_objeto).
 187+ 8756 00           	db 0												; (Impacto).
 188+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8763 00           	db 0												; (Ctrl_0).
 193+ 8764 00           	db 0												; (Ctrl_2).
 194+ 8765
 195+ 8765              ; ---------- ---------- ---------- ---------- ----------
 196+ 8765
 197+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8768 00           	db %00000000										; (Attr).
 199+ 8769              ;	db 0												; (Cuad_objeto).
 200+ 8769 00           	db 0												; (Impacto).
 201+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 8776 00           	db 0												; (Ctrl_0).
 206+ 8777 00           	db 0												; (Ctrl_2).
 207+ 8778
 208+ 8778              ; ---------- ---------- ---------- ---------- ----------
 209+ 8778
 210+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 877B 00           	db %00000000										; (Attr).
 212+ 877C              ;	db 0												; (Cuad_objeto).
 213+ 877C 00           	db 0												; (Impacto).
 214+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 8789 00           	db 0												; (Ctrl_0).
 219+ 878A 00           	db 0												; (Ctrl_2).
 220+ 878B
 221+ 878B              ; ---------- ---------- ---------- ---------- ----------
 222+ 878B
 223+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 878E 00           	db %00000000										; (Attr).
 225+ 878F              ;	db 0												; (Cuad_objeto).
 226+ 878F 00           	db 0												; (Impacto).
 227+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 879C 00           	db 0												; (Ctrl_0).
 232+ 879D 00           	db 0												; (Ctrl_2).
 233+ 879E
 234+ 879E              ; ---------- ---------- ---------- ---------- ----------
 235+ 879E
 236+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 87A1 00           	db %00000000										; (Attr).
 238+ 87A2              ;	db 0												; (Cuad_objeto).
 239+ 87A2 00           	db 0												; (Impacto).
 240+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 87AF 00           	db 0												; (Ctrl_0).
 245+ 87B0 00           	db 0												; (Ctrl_2).
 246+ 87B1
 247+ 87B1              ; -------------------------------------------------------------------------------------
 248+ 87B1              ;
 249+ 87B1              ;	11/1/24
 250+ 87B1              ;
 251+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 87B1              ;
 253+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 87B1
 258+ 87B1              Indice_de_definiciones_de_entidades
 259+ 87B1
 260+ 87B1 B5 87        	defw Entidad_1
 261+ 87B3 C2 87        	defw Entidad_2
 262+ 87B5
 263+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 87B5
 265+ 87B5              ;	BADSAT, (Satélite malvado).
 266+ 87B5
 267+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87B8 04           	db %00000100										; (Attr).
 269+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87BD 03 40        	defw $4003	                                     	; (Posicion_inicio).
 272+ 87BF 01           	db 1												; (Cuad_objeto).
 273+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87C2
 275+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87C5 02           	db %00000010										; (Attr).
 277+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87CC 01           	db 1												; (Cuad_objeto).
 281+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87CF
# file closed: Cajas_y_disparos.asm
 118  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 119  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 7A 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 02           Nivel_1 db 2									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 897A
  19+ 897A 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897B 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8983 01 02
  22+ 8985 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8989 01 02
  23+ 898B
# file closed: Niveles.asm
 120  898B
 121  898B              ; ******************************************************************************************************************************************************************************************
 122  898B              ; Constantes.
 123  898B              ; ******************************************************************************************************************************************************************************************
 124  898B              ;
 125  898B              ; 09/03/24
 126  898B
 127  898B              ;
 128  898B              ; Constantes.
 129  898B              ;
 130  898B
 131  898B              Sprite_vacio equ $eae0
 132  898B
 133  898B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 134  898B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 135  898B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 136  898B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 137  898B
 138  898B              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 139  898B              ;Almacen_de_scanlines_masticados equ $e900
 140  898B              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 141  898B              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 142  898B              ;
 143  898B              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 144  898B
 145  898B              ;                                                       ;	35 bytes por entidad.
 146  898B              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 147  898B              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 148  898B              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 149  898B              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 150  898B
 151  898B
 152  898B              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 153  898B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 154  898B              ;														; 55 Bytes.
 155  898B
 156  898B              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 157  898B
 158  898B              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 159  898B
 160  898B
 161  898B              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 162  898B
 163  898B              ; ******************************************************************************************************************************************************************************************
 164  898B              ; Variables.
 165  898B              ; ******************************************************************************************************************************************************************************************
 166  898B              ;
 167  898B              ; 18/01/24
 168  898B              ;
 169  898B              ; Variables de DRAW. (Motor principal).	42 Bytes.
 170  898B              ;
 171  898B
 172  898B              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 173  898B
 174  898B 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 175  898C              ;															- Patrón de movimiento.
 176  898C              ;															- Aspecto
 177  898C 00           Filas db 0												; Filas. [DRAW]
 178  898D 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 179  898E 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 180  8990 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 181  8992 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 182  8993 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 183  8994
 184  8994              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 185  8994
 186  8994 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 187  8995              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 188  8995              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 189  8995 00           Attr db 0												; Atributos de la entidad:
 190  8996
 191  8996              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 192  8996              ;
 193  8996              ;	COLORES: 0 ..... NEGRO
 194  8996              ;    		 1 ..... AZUL
 195  8996              ; 			 2 ..... ROJO
 196  8996              ;			 3 ..... MAGENTA
 197  8996              ; 			 4 ..... VERDE
 198  8996              ; 			 5 ..... CIAN
 199  8996              ;			 6 ..... AMARILLO
 200  8996              ; 			 7 ..... BLANCO
 201  8996
 202  8996 00 00        Indice_Sprite_der defw 0
 203  8998 00 00        Indice_Sprite_izq defw 0
 204  899A 00 00        Puntero_DESPLZ_der defw 0
 205  899C 00 00        Puntero_DESPLZ_izq defw 0
 206  899E
 207  899E 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 208  89A0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 209  89A1
 210  89A1              ; Variables de objeto. (Características).
 211  89A1
 212  89A1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 213  89A2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 214  89A2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 215  89A2 00 00 00...  Variables_de_borrado ds 6
 216  89A8
 217  89A8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 218  89AA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 219  89AA
 220  89AA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 221  89AC
 222  89AC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 223  89AC              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 224  89AC
 225  89AC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 226  89AE              ;														; _palabras que componen el "movimiento_masticado".
 227  89AE
 228  89AE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 229  89AE
 230  89AE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 231  89AF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 232  89AF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 233  89AF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 234  89AF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 235  89AF              ;
 236  89AF              ; 														DESCRIPCIÖN:
 237  89AF              ;
 238  89AF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 239  89AF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 240  89AF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 241  89AF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 242  89AF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 243  89AF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 244  89AF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 245  89AF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 246  89AF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 247  89AF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 248  89AF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 249  89AF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 250  89AF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 251  89AF              ;
 252  89AF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 253  89AF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 254  89AF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 255  89AF
 256  89AF              ; Variables de funcionamiento. [DRAW].
 257  89AF
 258  89AF 00           Columnas db 0
 259  89B0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 260  89B2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 261  89B2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 262  89B3
 263  89B3              ; variables de control general.
 264  89B3
 265  89B3 00           Ctrl_2 db 0
 266  89B4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 267  89B4              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 268  89B4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 269  89B4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 270  89B4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 271  89B4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 272  89B4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 273  89B4              ;
 274  89B4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 275  89B4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 276  89B4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 277  89B4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 278  89B4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 279  89B4              ;														BIT 4, ???
 280  89B4              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 281  89B4
 282  89B4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  89B5
 284  89B5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 285  89B5
 286  89B5              ;					         		---------;      ;---------
 287  89B5
 288  89B5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 289  89B5
 290  89B5              Perfiles_de_velocidad
 291  89B5
 292  89B5 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 293  89B6 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 294  89B7 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 295  89B8 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 296  89B9
 297  89B9              ; Contadores de 16 bits.
 298  89B9
 299  89B9 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 300  89BB 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 301  89BD 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 302  89BF 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 303  89C1
 304  89C1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 305  89C1
 306  89C1              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 307  89C1              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 308  89C1              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 309  89C1
 310  89C1              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 311  89C1
 312  89C1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 313  89C3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 314  89C5 00 00        Puntero_indice_mov_bucle defw 0							;
 315  89C7              ;
 316  89C7              ;
 317  89C7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 318  89C8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 319  89C8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 320  89C8 00           Incrementa_puntero_backup db 0
 321  89C9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 322  89CA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 323  89CA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 324  89CB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 325  89CC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 326  89CD              ;
 327  89CD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 328  89CD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 329  89CD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 330  89CD              ;
 331  89CD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 332  89CD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 333  89CD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 334  89CD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 335  89CD              ;
 336  89CD              ;														;	"$ff" ..... Bucle infinito de repetición.
 337  89CD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 338  89CD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 339  89CD              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 340  89CD
 341  89CD 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 342  89CE
 343  89CE              ;														DESCRIPCIÓN:
 344  89CE              ;
 345  89CE              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 346  89CE              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 347  89CE              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 348  89CE              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 349  89CE              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 350  89CE              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 351  89CE
 352  89CE              ;														BIT 3, Recarga de nueva oleada.
 353  89CE              ;														BIT 4, Recarga de nueva oleada.
 354  89CE              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 355  89CE              ;														BIT 6, **** Frame completo.
 356  89CE              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 357  89CE
 358  89CE 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 359  89D0              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 360  89D0              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 361  89D0              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 362  89D0
 363  89D0              ; Gestión de ENTIDADES y CAJAS.
 364  89D0
 365  89D0 00 00        Puntero_store_caja defw 0
 366  89D2 00 00        Puntero_restore_caja defw 0
 367  89D4 00 00        Indice_restore_caja defw 0
 368  89D6 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 369  89D7 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 370  89D8 00           Entidades_en_curso db 0									; ..... ..... .....
 371  89D9 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 372  89DA              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 373  89DA              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 374  89DA              ;														; _ (Numero_de_malotes)="0".
 375  89DA 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 376  89DC 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 377  89DE              ;														; _ puntero (Indice_entidades).
 378  89DE
 379  89DE              ;---------------------------------------------------------------------------------------------------------------
 380  89DE              ;
 381  89DE              ;	11/01/24
 382  89DE              ;
 383  89DE              ;	Álbumes.
 384  89DE
 385  89DE 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 386  89E0              ;														; _variable para almacenar lo posición del puntero_
 387  89E0              ; 														; _de pila, SP.
 388  89E0 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 389  89E2              ;														; La utiliza la rutina [Extrae_foto_registros].
 390  89E2 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 391  89E4
 392  89E4 00 80        Scanlines_album_SP defw Scanlines_album
 393  89E6
 394  89E6              ;Scanlines_album_disparos_SP defw Scanlines_album_disparos
 395  89E6
 396  89E6 00 80        End_Snapshot defw Scanlines_album
 397  89E8              ;														; Inicialmente está situado el la posición $7000, Scanlines_album.
 398  89E8              ;End_Snapshot_disparos defw Scanlines_album_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 399  89E8              ;														; _el snapshot de los registros del siguiente disparo.
 400  89E8              ;														; Inicialmente está situado en la posición $7060, Scanlines_album_disparos.
 401  89E8              ;End_Snapshot_Amadeus defw Scanlines_album_Amadeus
 402  89E8
 403  89E8 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 404  89E9              ;
 405  89E9              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 406  89E9              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 407  89E9              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 408  89E9
 409  89E9 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 410  89EA              ;
 411  89EA              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 412  89EA              ;
 413  89EA              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 414  89EA              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 415  89EA              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 416  89EA              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 417  89EA              ;
 418  89EA              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 419  89EA              ;															_ masticados ya generados.
 420  89EA              ;
 421  89EA              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 422  89EA              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 423  89EA              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 424  89EA              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 425  89EA
 426  89EA
 427  89EA              ; Gestión de Disparos.
 428  89EA
 429  89EA              ;;Numero_de_disparotes db 0
 430  89EA              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 431  89EA              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 432  89EA              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 433  89EA              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 434  89EA              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 435  89EA              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 436  89EA              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 437  89EA              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 438  89EA              ;														; _produzca colisión.
 439  89EA              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 440  89EA              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 441  89EA              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 442  89EA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 443  89EA 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 444  89ED              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 445  89ED              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 446  89ED
 447  89ED              ;---------------------------------------------------------------------------------------------------------------
 448  89ED
 449  89ED              ; Relojes y temporizaciones.
 450  89ED
 451  89ED 00           Contador_de_frames db 0
 452  89EE 00           Contador_de_frames_2 db 0
 453  89EF
 454  89EF              ;Clock_explosion db 4
 455  89EF 14           Clock_Entidades_en_curso db 20
 456  89F0 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 457  89F1              ;														; Repite la oleada de entidades.
 458  89F1              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 459  89F1              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 460  89F1              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 461  89F1
 462  89F1              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 463  89F1              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 464  89F1              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 465  89F1
 466  89F1              ;---------------------------------------------------------------------------------------------------------------
 467  89F1
 468  89F1              ; Gestión de NIVELES.
 469  89F1
 470  89F1 00           Nivel db 0												; Nivel actual del juego.
 471  89F2 00 00        Puntero_indice_NIVELES defw 0
 472  89F4 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 473  89F6              ; 														; _ que definen el NIVEL.
 474  89F6              ; Y todo comienza aquí .....
 475  89F6              ;
 476  89F6              ; 	INICIO  *************************************************************************************************************************************************************************
 477  89F6              ;
 478  89F6              ;	5/1/24
 479  89F6
 480  89F6              START
 481  89F6
 482  89F6 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 483  89F9 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 484  89FB ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 485  89FD ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 486  89FF F3           	DI
 487  8A00
 488  8A00              ;	ld a,%00000111
 489  8A00              ;	call Cls
 490  8A00 CD 07 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 491  8A03
 492  8A03              ; INICIALIZACIÓN.
 493  8A03
 494  8A03              ;	Inicializa 1er Nivel.
 495  8A03
 496  8A03 21 6B 89     	ld hl,Indice_de_niveles
 497  8A06 22 F2 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 498  8A09 CD 2D 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 499  8A0C              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 500  8A0C              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 501  8A0C              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 502  8A0C
 503  8A0C              ;	Provisional, (para desarrollo).
 504  8A0C              	;-
 505  8A0C              ;	ld hl,Numero_parcial_de_entidades
 506  8A0C              ;	ld b,(hl)
 507  8A0C              ;	inc b
 508  8A0C              ;	dec b
 509  8A0C              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 510  8A0C
 511  8A0C CD 72 8C     4 call Inicia_Entidades
 512  8A0F
 513  8A0F CD 5D 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 514  8A12
 515  8A12              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 516  8A12              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 517  8A12              ; (Esto se dá cuando se inicia una nueva oleada).
 518  8A12
 519  8A12              ;	ld a,(Ctrl_1)
 520  8A12              ;	bit 3,a
 521  8A12              ;	jr nz,5F											; Loop
 522  8A12
 523  8A12              ; 	INICIA AMADEUS !!!!!
 524  8A12
 525  8A12              ;3 call Restore_Amadeus
 526  8A12              ;	call Inicia_Puntero_objeto
 527  8A12              ;	call Draw
 528  8A12
 529  8A12              ;	call Guarda_movimiento_masticado	;! Provisional
 530  8A12
 531  8A12              ;	call Guarda_foto_registros
 532  8A12              ;	call Guarda_datos_de_borrado_Amadeus
 533  8A12
 534  8A12              ;	ld de,Amadeus_db
 535  8A12              ;	call Store_Amadeus
 536  8A12
 537  8A12              ; 	INICIA DISPAROS !!!!!
 538  8A12
 539  8A12              ;	call Inicia_Puntero_Disparo_Entidades
 540  8A12              ;	call Inicia_Puntero_Disparo_Amadeus
 541  8A12
 542  8A12              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 543  8A12
 544  8A12              ;5 call Inicia_punteros_de_cajas
 545  8A12              ;	call Restore_entidad
 546  8A12
 547  8A12              ;	ld a,(Ctrl_1)
 548  8A12              ;	bit 3,a
 549  8A12              ;	jr z,6F
 550  8A12
 551  8A12              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 552  8A12
 553  8A12              ;	ld hl,Ctrl_1
 554  8A12              ;	res 3,(hl)
 555  8A12              ;	jr Main
 556  8A12
 557  8A12              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 558  8A12
 559  8A12 CD 73 8B     6 call Calcula_numero_de_malotes
 560  8A15 CD B3 8A     	call Genera_scanlines_masticados
 561  8A18
 562  8A18 18 FE        	jr $
 563  8A1A
 564  8A1A 21 E8 89     	ld hl,Ctrl_3
 565  8A1D CB C6        	set 0,(hl)											; Frame completo.
 566  8A1F FB           	ei
 567  8A20 76           	halt
 568  8A21
 569  8A21              ; ------------------------------------
 570  8A21
 571  8A21              Main
 572  8A21              ;
 573  8A21              ;	11/12/23
 574  8A21
 575  8A21              ; Aparece nueva entidad ???
 576  8A21
 577  8A21              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 578  8A21              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 579  8A21              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 580  8A21              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 581  8A21              ;														; _un 2º bloque.
 582  8A21
 583  8A21              ;	call Genera_scanlines_masticados_a_borrar
 584  8A21              ;	call Limpia_Almacen_de_scanlines_masticados
 585  8A21
 586  8A21              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 587  8A21              ; 													 	; _(Scanlines_album_SP).
 588  8A21
 589  8A21 3A EF 89     	ld a,(Clock_Entidades_en_curso)
 590  8A24 47           	ld b,a
 591  8A25 3A ED 89     	ld a,(Contador_de_frames)
 592  8A28 B8           	cp b
 593  8A29 20 1E        	jr nz,13F
 594  8A2B
 595  8A2B              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 596  8A2B              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 597  8A2B
 598  8A2B 3A D7 89     21 ld a,(Numero_parcial_de_entidades)
 599  8A2E 47           	ld b,a
 600  8A2F 3A D8 89     	ld a,(Entidades_en_curso)
 601  8A32 B8           	cp b
 602  8A33 28 14        	jr z,13F
 603  8A35 30 12        	jr nc,13F
 604  8A37
 605  8A37 3C           	inc a
 606  8A38 32 D8 89     	ld (Entidades_en_curso),a
 607  8A3B
 608  8A3B FE 02        	cp 2
 609  8A3D F3           	di
 610  8A3E 28 FE        	jr z,$
 611  8A40 FB           	ei
 612  8A41
 613  8A41              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 614  8A41
 615  8A41 3A EF 89     	ld a,(Clock_Entidades_en_curso)
 616  8A44              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 617  8A44              ;! _ IMPREDECIBLE !!!!
 618  8A44 C6 64        	add 100
 619  8A46 32 EF 89     	ld (Clock_Entidades_en_curso),a
 620  8A49
 621  8A49              ; -------------------------------------------------------------------------------------------------------------
 622  8A49
 623  8A49              ; Habilita disparos.
 624  8A49
 625  8A49              13
 626  8A49
 627  8A49              ;	ld hl,Disparo_Amadeus
 628  8A49              ;	ld de,CLOCK_repone_disparo_Amadeus
 629  8A49              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 630  8A49
 631  8A49              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 632  8A49              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 633  8A49              ;	call Habilita_disparos
 634  8A49
 635  8A49              ; COLISIONES.
 636  8A49
 637  8A49              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 638  8A49
 639  8A49              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 640  8A49              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 641  8A49              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 642  8A49
 643  8A49              ;	xor a
 644  8A49              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 645  8A49
 646  8A49              ;	call Inicia_punteros_de_cajas
 647  8A49              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 648  8A49              ; 														; _ en DRAW.
 649  8A49
 650  8A49              ;	ld a,(Filas)
 651  8A49              ;	and a
 652  8A49              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 653  8A49              ;	call Incrementa_punteros_de_cajas
 654  8A49              ;	jr 12B
 655  8A49
 656  8A49              ; ---------------------------------------------------------------------------------------
 657  8A49
 658  8A49 3A D7 89     10 ld a,(Numero_parcial_de_entidades)
 659  8A4C 47               ld b,a
 660  8A4D A7           	and a
 661  8A4E 20 00        	jr nz,11F
 662  8A50
 663  8A50              ;	ld hl,Ctrl_1;
 664  8A50              ;	bit 4,(hl)
 665  8A50              ;	jp nz,16F
 666  8A50
 667  8A50              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 668  8A50
 669  8A50              ;	ld hl,Ctrl_1
 670  8A50              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 671  8A50
 672  8A50              ;	ld a,(Contador_de_frames)
 673  8A50              ;	inc a
 674  8A50              ;	ld (Activa_recarga_cajas),a
 675  8A50
 676  8A50              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 677  8A50
 678  8A50 3A D8 89     11 ld a,(Entidades_en_curso)
 679  8A53 A7           	and a
 680  8A54 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 681  8A56 47           	ld b,a												; No hay entidades que gestionar.
 682  8A57
 683  8A57              ; ( Código que ejecutamos con cada entidad: ).
 684  8A57
 685  8A57              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 686  8A57
 687  8A57 C5           15 push bc 												; Nº de entidades en curso.
 688  8A58
 689  8A58 CD C6 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 690  8A5B
 691  8A5B 3A E8 89     	ld a,(Ctrl_3)
 692  8A5E CB 57        	bit 2,a
 693  8A60 F3           	di
 694  8A61 20 FE        	jr nz,$
 695  8A63 FB           	ei
 696  8A64
 697  8A64              ; Existe "Entidad_guía" ???.
 698  8A64              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 699  8A64
 700  8A64              ;	ld a,(Ctrl_3)
 701  8A64              ;	bit 1,a
 702  8A64              ;	jr nz,22F
 703  8A64
 704  8A64              ; Almacén de "Movimientos_masticados" lleno ???
 705  8A64              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 706  8A64              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 707  8A64
 708  8A64              ;;	ld a,(Ctrl_3)
 709  8A64              ;;	bit 3,a
 710  8A64              ;;	jr nz,22F
 711  8A64
 712  8A64              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 713  8A64
 714  8A64              ;	ld hl,Ctrl_2
 715  8A64              ;	set 5,(hl)
 716  8A64              ;	ld hl,Ctrl_3
 717  8A64              ;	set 1,(hl)
 718  8A64
 719  8A64              ; Impacto ???
 720  8A64
 721  8A64              ;22 ld a,(Impacto)
 722  8A64              ;	and a
 723  8A64              ;	jr z,8F
 724  8A64
 725  8A64              ; Hay Impacto en esta entidad.
 726  8A64
 727  8A64              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 728  8A64              ;	dec (hl)
 729  8A64              ;	jp nz,17F
 730  8A64
 731  8A64              ;! Velocidad de la animación de la explosión.
 732  8A64
 733  8A64              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 734  8A64              ;														; _,(velocidad de la explosión).
 735  8A64              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 736  8A64
 737  8A64              ;	call Repone_datos_de_borrado
 738  8A64              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 739  8A64
 740  8A64              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 741  8A64
 742  8A64              ;	ld a,(Ctrl_2)
 743  8A64              ;	bit 1,a
 744  8A64              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 745  8A64
 746  8A64              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 747  8A64
 748  8A64              ;	ld a,(CTRL_DESPLZ)
 749  8A64              ;	and a
 750  8A64              ;	jr nz,18F
 751  8A64
 752  8A64              ;	ld hl,Indice_Explosion_2x2-2
 753  8A64              ;	ld (Puntero_DESPLZ_der),hl
 754  8A64              ;	jr 19F
 755  8A64
 756  8A64              ;18 ld hl,Indice_Explosion_2x3-2
 757  8A64              ;	ld (Puntero_DESPLZ_der),hl
 758  8A64
 759  8A64              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 760  8A64              ;	set 1,(hl)
 761  8A64              ;	jr 7F
 762  8A64
 763  8A64              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 764  8A64              ; _con las coordenadas de la entidad almacenada en DRAW.
 765  8A64
 766  8A64              ;8 ld a,(Ctrl_1)
 767  8A64              ;	bit 2,a
 768  8A64              ;	jr z,7F
 769  8A64
 770  8A64              ;	ld hl,(Coordenadas_disparo_certero)
 771  8A64              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 772  8A64              ;														; E contiene la coordenada_X del disparo.
 773  8A64              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 774  8A64              ;														; H FILA, (Coordenada_y de la entidad).
 775  8A64              ;	and a
 776  8A64              ;	sbc hl,de
 777  8A64
 778  8A64              ;	call Determina_resultado_comparativa
 779  8A64
 780  8A64              ;	ld a,b
 781  8A64              ;	and a
 782  8A64              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 783  8A64
 784  8A64              ; ----- ----- -----
 785  8A64
 786  8A64              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 787  8A64              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 788  8A64
 789  8A64              ;	ld hl,Ctrl_1
 790  8A64              ;	res 2,(hl)
 791  8A64
 792  8A64 CD 86 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 793  8A67
 794  8A67              ;	ld a,(Ctrl_0)
 795  8A67              ;	bit 4,a
 796  8A67              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 797  8A67
 798  8A67              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 799  8A67              ; [[[
 800  8A67              ;	call Detecta_disparo_entidad
 801  8A67              ; ]]]
 802  8A67
 803  8A67 CD DC 8C     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 804  8A6A
 805  8A6A              ;	ld hl,Ctrl_0
 806  8A6A              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 807  8A6A
 808  8A6A CD CC 8C     17 call Store_Restore_cajas
 809  8A6D
 810  8A6D C1           	pop bc
 811  8A6E
 812  8A6E 10 E7        	djnz 15B
 813  8A70
 814  8A70 CD 5D 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 815  8A73
 816  8A73              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 817  8A73              ; Hemos gestionado todas las unidades.
 818  8A73              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 819  8A73
 820  8A73              ;	ld hl,Ctrl_1
 821  8A73              ;	res 2,(hl)
 822  8A73
 823  8A73
 824  8A73              16
 825  8A73 CD 73 8B     	call Calcula_numero_de_malotes 						; Si el nº de malotes es "0" no generamos scanlines masticados. No ha habido movimiento.
 826  8A76 CD B3 8A     	call Genera_scanlines_masticados
 827  8A79              ;	call Prepara_Borra_sprites
 828  8A79
 829  8A79 21 E8 89     	ld hl,Ctrl_3
 830  8A7C CB C6        	set 0,(hl)											; Frame completo.
 831  8A7E
 832  8A7E AF           	xor a
 833  8A7F D3 FE        	out ($fe),a
 834  8A81 76           	halt
 835  8A82
 836  8A82              ; ----------------------------------------
 837  8A82
 838  8A82              ;	ld a,(Ctrl_1) 										; Existe Loop?
 839  8A82              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 840  8A82 CA 21 8A     	jp z,Main
 841  8A85
 842  8A85              ; RECARGA DE NUEVA OLEADA.
 843  8A85
 844  8A85              ;	ld a,(Contador_de_frames)
 845  8A85              ;	ld b,a
 846  8A85              ;	ld a,(Activa_recarga_cajas)
 847  8A85              ;	cp b
 848  8A85              ;	jr z,20F
 849  8A85
 850  8A85              ;	ld hl,Ctrl_1
 851  8A85              ;	set 4,(hl)
 852  8A85              ;	jp Main
 853  8A85
 854  8A85              ;20 ld hl,Ctrl_1
 855  8A85              ;	res 4,(hl)
 856  8A85
 857  8A85              ;	ld a,(Contador_de_frames)
 858  8A85
 859  8A85              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 860  8A85              ;! _ IMPREDECIBLE !!!!
 861  8A85
 862  8A85              ;	add 10
 863  8A85              ;	ld (Clock_Entidades_en_curso),a
 864  8A85
 865  8A85              ;	jp 4B
 866  8A85
 867  8A85 C9           	ret
 868  8A86
 869  8A86              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 870  8A86              ;
 871  8A86              ;	16/11/23
 872  8A86
 873  8A86              ;;Gestiona_Amadeus
 874  8A86
 875  8A86              ;! Activa/desactiva impacto con Amadeus.
 876  8A86
 877  8A86              ;	ld a,(Impacto)
 878  8A86              ;	and a
 879  8A86              ;	jr nz,2F
 880  8A86
 881  8A86              ;;	call Mov_Amadeus
 882  8A86
 883  8A86              ;;2 ld a,(Ctrl_0)
 884  8A86              ;;	bit 4,a
 885  8A86              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 886  8A86
 887  8A86              ;;	call Guarda_foto_entidad_a_pintar
 888  8A86              ;;	call Guarda_datos_de_borrado_Amadeus
 889  8A86
 890  8A86              ;;1 ld hl,Ctrl_0
 891  8A86              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 892  8A86
 893  8A86              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 894  8A86
 895  8A86              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 896  8A86
 897  8A86              ;	call Calcula_numero_de_disparotes
 898  8A86
 899  8A86              ;;	ret
 900  8A86
 901  8A86              ; -----------------------------
 902  8A86              ;
 903  8A86              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 904  8A86              ;
 905  8A86              ;	INPUTS: B a de estar a "0".
 906  8A86
 907  8A86              ;Prepara_Borra_sprites
 908  8A86
 909  8A86              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 910  8A86              ;	ld a,l
 911  8A86              ;	ret z
 912  8A86
 913  8A86              ;	srl a
 914  8A86
 915  8A86              ;2 sub 16
 916  8A86              ;	jr z,1F
 917  8A86              ;	inc b
 918  8A86              ;	jr 2B
 919  8A86
 920  8A86              ;1 inc b
 921  8A86
 922  8A86              ;	exx
 923  8A86              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 924  8A86              ;	exx
 925  8A86
 926  8A86              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 927  8A86              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 928  8A86
 929  8A86              ;	ret
 930  8A86
 931  8A86              ; --------------------------------------------------------------------------------------------------------------
 932  8A86              ;
 933  8A86              ;	15/12/23
 934  8A86
 935  8A86              Mov_obj
 936  8A86
 937  8A86              ;	ld a,(Ctrl_2)
 938  8A86              ;	bit 1,a
 939  8A86              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 940  8A86
 941  8A86              ; Explosión:
 942  8A86
 943  8A86              ;	ld a,(Frames_explosion)
 944  8A86              ;	and a
 945  8A86              ;	jr nz,4F
 946  8A86
 947  8A86              ;!  Una alimaña menos!!!!!!!!!1
 948  8A86
 949  8A86              ; Se trataba de una Entidad_guía ???
 950  8A86
 951  8A86              ;	ld a,(Ctrl_2)
 952  8A86              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 953  8A86              ;	jr z,5F
 954  8A86
 955  8A86              ;	ld hl,Ctrl_3
 956  8A86              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 957  8A86
 958  8A86              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 959  8A86              ;!! _generado puede ser distinto, (aletoriedad).
 960  8A86
 961  8A86              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 962  8A86              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 963  8A86              ;	dec (hl)
 964  8A86              ;	ld hl,Entidades_en_curso
 965  8A86              ;	dec (hl)
 966  8A86              ;	ld hl,Numero_de_entidades
 967  8A86              ;	dec (hl)
 968  8A86              ;	jr 3F
 969  8A86
 970  8A86              ; -----
 971  8A86
 972  8A86              ;	`Movemos´ la explosión.
 973  8A86
 974  8A86              ;4 ld hl,(Puntero_DESPLZ_der)
 975  8A86              ;	inc hl
 976  8A86              ;	inc hl
 977  8A86              ;	call Extrae_address
 978  8A86              ;;	ld (Puntero_objeto),hl
 979  8A86
 980  8A86              ;;	ld hl,Frames_explosion
 981  8A86              ;;	dec (hl)
 982  8A86
 983  8A86              ;;	ld hl,Ctrl_0
 984  8A86              ;;	set 4,(hl);;
 985  8A86
 986  8A86              ;;	jr 3F
 987  8A86
 988  8A86              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 989  8A86
 990  8A86              ;2 xor a
 991  8A86              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 992  8A86
 993  8A86              ; Movemos Entidades malignas.
 994  8A86              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 995  8A86
 996  8A86              ;	ld a,(Ctrl_2)
 997  8A86              ;	bit 5,a
 998  8A86              ;	jr nz,8F
 999  8A86
1000  8A86              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1001  8A86              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1002  8A86              ;	jr 7F
1003  8A86
1004  8A86              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1005  8A86
1006  8A86              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1007  8A86              ;	bit 4,a
1008  8A86              ;	ret z
1009  8A86
1010  8A86              ; Ha habido desplazamiento de la entidad maligna.
1011  8A86              ; Ha llegado a zona de AMADEUS ???
1012  8A86
1013  8A86              ;7 ld a,(Coordenada_y)
1014  8A86              ;	cp $14
1015  8A86              ;	jr c,1F
1016  8A86
1017  8A86              ; ---------
1018  8A86
1019  8A86              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1020  8A86              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1021  8A86
1022  8A86              ;	di
1023  8A86              ;	call Genera_coordenadas_X
1024  8A86              ;	call Compara_coordenadas_X
1025  8A86              ;	ei
1026  8A86
1027  8A86              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1028  8A86
1029  8A86              ; ---------
1030  8A86
1031  8A86              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1032  8A86              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1033  8A86              ;	call Limpia_Variables_de_borrado
1034  8A86
1035  8A86 C9           3 ret
1036  8A87
1037  8A87              ; --------------------------------------------------------------------------------------------------------------
1038  8A87              ;
1039  8A87              ;	29/1/23
1040  8A87
1041  8A87              ;Mov_Amadeus
1042  8A87
1043  8A87              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1044  8A87
1045  8A87              ;	call Mov_right
1046  8A87
1047  8A87              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1048  8A87              ;	bit 4,a
1049  8A87              ;	ret z
1050  8A87
1051  8A87              ; ---------
1052  8A87
1053  8A87              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1054  8A87              ;	call Repone_datos_de_borrado_Amadeus
1055  8A87              ;	call Limpia_Variables_de_borrado
1056  8A87
1057  8A87              ;	ret
1058  8A87
1059  8A87              ; -----------------------------------------------------------------------------------
1060  8A87              ;
1061  8A87              ;	20/01/24
1062  8A87              ;
1063  8A87              ;
1064  8A87
1065  8A87              Construye_movimientos_masticados_entidad
1066  8A87
1067  8A87 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1068  8A8A E5           	push hl
1069  8A8B CD 01 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1070  8A8E              ;															; _ el (Contador_de_mov_masticados).
1071  8A8E CD 91 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1072  8A91              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1073  8A91 CD 91 94     	call Recompone_posicion_inicio
1074  8A94
1075  8A94 CD 23 8E     1 call Draw
1076  8A97 CD E6 8A     	call Guarda_movimiento_masticado
1077  8A9A
1078  8A9A CD 0B 98     	call Movimiento
1079  8A9D
1080  8A9D 3A E8 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1081  8AA0 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1082  8AA2 28 F0        	jr z,1B
1083  8AA4
1084  8AA4              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1085  8AA4              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1086  8AA4
1087  8AA4 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1088  8AA5 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1089  8AA8
1090  8AA8              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1091  8AA8
1092  8AA8 CD 6F 99     	call Situa_en_contador_general_de_mov_masticados
1093  8AAB
1094  8AAB              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1095  8AAB              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1096  8AAB
1097  8AAB ED 4B AC 89  	ld bc,(Contador_de_mov_masticados)
1098  8AAF 71           	ld (hl),c
1099  8AB0 23           	inc hl
1100  8AB1 70           	ld (hl),b
1101  8AB2
1102  8AB2 C9           	ret
1103  8AB3
1104  8AB3              ; -----------------------------------------------------------------------------------
1105  8AB3              ;
1106  8AB3              ;	28/02/24
1107  8AB3              ;
1108  8AB3
1109  8AB3              ;Limpia_Almacen_de_scanlines_masticados
1110  8AB3
1111  8AB3              ;	ld hl,(Puntero_de_scanlines_masticados)
1112  8AB3              ;	ld bc,Almacen_de_scanlines_masticados
1113  8AB3              ;	and a
1114  8AB3              ;	sbc hl,bc
1115  8AB3              ;	ret z 												; Salimos. No hay scanlines masticados que copiar.
1116  8AB3
1117  8AB3              ;	push hl
1118  8AB3              ;	pop bc
1119  8AB3
1120  8AB3              ;	ld hl,Almacen_de_scanlines_masticados
1121  8AB3              ;	ld de,Almacen_de_scanlines_masticados+1
1122  8AB3
1123  8AB3              ;	xor a
1124  8AB3              ;	ld (hl),a
1125  8AB3
1126  8AB3              ;	ldir
1127  8AB3
1128  8AB3              ;	ld hl,Almacen_de_scanlines_masticados
1129  8AB3              ;	ld (Puntero_de_scanlines_masticados),hl
1130  8AB3
1131  8AB3              ;	ld hl,Scanlines_album+2
1132  8AB3              ;	ld (Puntero_de_scanlines_en_album),hl
1133  8AB3
1134  8AB3              ;	ret
1135  8AB3
1136  8AB3
1137  8AB3              ;Limpia_Almacen_de_scanlines_masticados_a_borrar
1138  8AB3
1139  8AB3              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1140  8AB3              ;	ld bc,Almacen_de_scanlines_masticados_a_borrar
1141  8AB3              ;	and a
1142  8AB3              ;	sbc hl,bc
1143  8AB3              ;	ret z 												; Salimos. No hay scanlines masticados que copiar.
1144  8AB3
1145  8AB3              ;	push hl
1146  8AB3              ;	pop bc
1147  8AB3
1148  8AB3              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1149  8AB3              ;	ld de,Almacen_de_scanlines_masticados_a_borrar+1
1150  8AB3
1151  8AB3              ;	xor a
1152  8AB3              ;	ld (hl),a
1153  8AB3
1154  8AB3              ;	ldir
1155  8AB3
1156  8AB3              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1157  8AB3              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1158  8AB3
1159  8AB3              ;	ret
1160  8AB3
1161  8AB3              ; -----------------------------------------------------------------------------------
1162  8AB3              ;
1163  8AB3              ;	28/02/24
1164  8AB3              ;
1165  8AB3
1166  8AB3              ;Genera_scanlines_masticados_a_borrar
1167  8AB3
1168  8AB3              ;	ld hl,(Puntero_de_scanlines_masticados)
1169  8AB3              ;	ld bc,Almacen_de_scanlines_masticados
1170  8AB3              ;	and a
1171  8AB3              ;	sbc hl,bc
1172  8AB3              ;	ret z 												; Salimos. No hay scanlines masticados que copiar.
1173  8AB3
1174  8AB3              ;	push hl
1175  8AB3              ;	pop bc
1176  8AB3
1177  8AB3              ;	ld hl,Almacen_de_scanlines_masticados
1178  8AB3              ;	ld de,Almacen_de_scanlines_masticados_a_borrar
1179  8AB3              ;	ldir
1180  8AB3
1181  8AB3              ;	ld (Puntero_de_scanlines_masticados_a_borrar),de	; Situamos el puntero al principio del almacén.
1182  8AB3
1183  8AB3              ;	ret
1184  8AB3
1185  8AB3              ; -----------------------------------------------------------------------------------
1186  8AB3              ;
1187  8AB3              ;	6/03/24
1188  8AB3              ;
1189  8AB3              ;	INPUTS: A Y B contienen (Numero_de_malotes).
1190  8AB3
1191  8AB3              Genera_scanlines_masticados
1192  8AB3
1193  8AB3              ;	and a
1194  8AB3              ;	ret z 												; Salimos si no hay malotes que pintar.
1195  8AB3
1196  8AB3              ;	ld hl,(Puntero_de_scanlines_en_album) 				; Dirección donde se encuentra el 1er puntero de impresión en el álbum de fotos.
1197  8AB3              ;	ld de,(Puntero_de_scanlines_masticados) 			; Inicialmente se encuentra al comienzo del Almacén de scanlines masticados.
1198  8AB3
1199  8AB3 C5           1 push bc 												; Guardamos el nº de malotes.
1200  8AB4
1201  8AB4 7E           	ld a,(hl)
1202  8AB5 12           	ld (de),a
1203  8AB6
1204  8AB6 2C           	inc l
1205  8AB7 1C           	inc e 												; Inc. punteros.
1206  8AB8
1207  8AB8 7E           	ld a,(hl)
1208  8AB9 12           	ld (de),a 											; 1er scanline, (Puntero_de_impresion) en el Almacén de scanlines masticados.
1209  8ABA
1210  8ABA CD C1 8A     	call Construimos_scanlines
1211  8ABD
1212  8ABD              ; Actualizamos (Puntero_de_scanlines_en_album). Nos situamos en el Puntero_de_impresion de la siguiente entidad.
1213  8ABD
1214  8ABD              ;	ld bc,5
1215  8ABD              ;	and a
1216  8ABD              ;	adc hl,bc
1217  8ABD              ;	ld (Puntero_de_scanlines_en_album),hl
1218  8ABD
1219  8ABD C1           	pop bc
1220  8ABE
1221  8ABE 10 F3        	djnz 1B
1222  8AC0
1223  8AC0 C9           	ret
1224  8AC1
1225  8AC1              ; --------------------------------------------------------
1226  8AC1              ;
1227  8AC1              ;	A partir del 1er scanline, (Puntero_de_impresion), generamos los 15 scanlines restantes.
1228  8AC1              ;	La producción de scanlines se detiene cuando entramos en memoria de attr. de pantalla. Esto viene representado con $0000 en el Almacén de scanlines masticados.
1229  8AC1
1230  8AC1 E5           Construimos_scanlines push hl
1231  8AC2 C5           	push bc
1232  8AC3
1233  8AC3 06 0F        	ld b,15
1234  8AC5 1B           	dec de
1235  8AC6
1236  8AC6 1A           	ld a,(de)
1237  8AC7 6F           	ld l,a
1238  8AC8 13           	inc de
1239  8AC9 1A           	ld a,(de)
1240  8ACA 67           	ld h,a 												; Puntero_de_impresión en HL.
1241  8ACB
1242  8ACB 13           	inc de
1243  8ACC
1244  8ACC CD 19 91     1 call NextScan
1245  8ACF
1246  8ACF              ; Entramos en memoria de attr.???
1247  8ACF
1248  8ACF              ; Si es así, decrementamos H. (Repetimos el último scancline).
1249  8ACF
1250  8ACF 7C           	ld a,h
1251  8AD0 FE 58        	cp $58
1252  8AD2 20 03        	jr nz,2F
1253  8AD4
1254  8AD4 21 00 00     	ld hl,0 											; Scanline NO IMPRIMIBLE, "0".
1255  8AD7
1256  8AD7 7D           2 ld a,l
1257  8AD8 12           	ld (de),a
1258  8AD9 1C           	inc e
1259  8ADA 7C           	ld a,h
1260  8ADB 12           	ld (de),a
1261  8ADC
1262  8ADC 1C           	inc e
1263  8ADD
1264  8ADD 24           	inc h
1265  8ADE 25           	dec h
1266  8ADF 28 02        	jr z,3F  											; No generamos más escanlines si hemos entrado en memoria de attr.
1267  8AE1
1268  8AE1 10 E9        	djnz 1B 											; 15 scanlines generados.
1269  8AE3
1270  8AE3              3
1271  8AE3
1272  8AE3              ;	ld (Puntero_de_scanlines_masticados),de 				; Actualizamos puntero.
1273  8AE3
1274  8AE3 C1           	pop bc
1275  8AE4 E1           	pop hl
1276  8AE5
1277  8AE5 C9           	ret
1278  8AE6
1279  8AE6              ; -----------------------------------------------------------------------------------
1280  8AE6              ;
1281  8AE6              ;	28/12/23
1282  8AE6              ;
1283  8AE6              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1284  8AE6              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1285  8AE6
1286  8AE6              Guarda_movimiento_masticado
1287  8AE6
1288  8AE6 ED 73 DE 89  	ld (Stack),sp
1289  8AEA ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1290  8AEE
1291  8AEE              ;	push hl
1292  8AEE DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1293  8AF0 FD E5            push iy 												; Pushea Puntero_objeto.
1294  8AF2
1295  8AF2 ED 7B DE 89      ld sp,(Stack)
1296  8AF6
1297  8AF6 2A AC 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1298  8AF9 23           	inc hl
1299  8AFA 22 AC 89     	ld (Contador_de_mov_masticados),hl
1300  8AFD
1301  8AFD CD 01 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1302  8B00              ;															; _ el (Contador_de_mov_masticados).
1303  8B00 C9               ret
1304  8B01
1305  8B01              ; --------------------------------------------------------------------------------------------------------------
1306  8B01              ;
1307  8B01              ;	12/1/24
1308  8B01              ;
1309  8B01              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1310  8B01
1311  8B01              Actualiza_Puntero_de_almacen_de_mov_masticados
1312  8B01
1313  8B01 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1314  8B04 01 04 00     	ld bc,4
1315  8B07 A7           	and a
1316  8B08 ED 4A        	adc hl,bc
1317  8B0A 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1318  8B0D C9           	ret
1319  8B0E
1320  8B0E              ; --------------------------------------------------------------------------------------------------------------
1321  8B0E              ;
1322  8B0E              ;	15/01/24
1323  8B0E              ;
1324  8B0E              ;	Cargamos los registros_
1325  8B0E              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1326  8B0E              ;
1327  8B0E              ;	HL contiene la dirección de la rutina de impresión.
1328  8B0E              ;	IX contiene el puntero de impresión.
1329  8B0E              ;	IY contiene (Puntero_objeto).
1330  8B0E
1331  8B0E
1332  8B0E ED 73 DE 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1333  8B12 ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1334  8B16
1335  8B16 D1           	pop de 															; IY contiene Puntero_objeto
1336  8B17 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1337  8B19              ;	pop hl
1338  8B19
1339  8B19 ED 73 AA 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1340  8B1D
1341  8B1D ED 7B DE 89  	ld sp,(Stack)
1342  8B21
1343  8B21 C9           	ret
1344  8B22
1345  8B22              ; --------------------------------------------------------------------------------------------------------------
1346  8B22              ;
1347  8B22              ;	28/12/23
1348  8B22              ;
1349  8B22              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1350  8B22              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1351  8B22
1352  8B22              Guarda_foto_entidad_a_pintar
1353  8B22
1354  8B22 3A AE 89     	ld a,(Ctrl_0)
1355  8B25 CB 77        	bit 6,a
1356  8B27 28 04        	jr z,5F
1357  8B29
1358  8B29              ;	Guarda la foto de Amadeus.
1359  8B29
1360  8B29              ;	call Draw
1361  8B29              ;	call Guarda_movimiento_masticado	;! Provisional
1362  8B29 CD BF 80     	call Guarda_foto_registros
1363  8B2C C9           	ret
1364  8B2D
1365  8B2D              ; ENTIDADES!
1366  8B2D              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1367  8B2D
1368  8B2D 3A E8 89     5 ld a,(Ctrl_3)
1369  8B30 CB 5F        	bit 3,a
1370  8B32 28 01        	jr z,1F
1371  8B34
1372  8B34              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1373  8B34
1374  8B34              4
1375  8B34              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1376  8B34 C9           	ret
1377  8B35
1378  8B35              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1379  8B35
1380  8B35 3A E8 89     1 ld a,(Ctrl_3)
1381  8B38 CB 57        	bit 2,a
1382  8B3A 20 10        	jr nz,6F
1383  8B3C
1384  8B3C              ; Entidad guía o fantasma ???
1385  8B3C
1386  8B3C 3A B3 89     	ld a,(Ctrl_2)
1387  8B3F CB 6F        	bit 5,a
1388  8B41 20 10        	jr nz,3F
1389  8B43
1390  8B43              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1391  8B43
1392  8B43 18 EF        	jr 4B
1393  8B45
1394  8B45              ; ENTIDAD_GUÍA:
1395  8B45              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1396  8B45              ; _guardando "movimientos_masticados".
1397  8B45
1398  8B45 3A E8 89     2 ld a,(Ctrl_3)
1399  8B48 CB 57        	bit 2,a
1400  8B4A 28 07        	jr z,3F
1401  8B4C
1402  8B4C              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1403  8B4C              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1404  8B4C
1405  8B4C CB 97        6 res 2,a
1406  8B4E CB DF        	set 3,a
1407  8B50 32 E8 89     	ld (Ctrl_3),a
1408  8B53
1409  8B53
1410  8B53              ;	Esto sólo lo ejecuta una entidad guía.
1411  8B53
1412  8B53 CD 23 8E     3 	call Draw
1413  8B56 CD E6 8A     	call Guarda_movimiento_masticado
1414  8B59 CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Scanlines_album_SP), +6.
1415  8B5C
1416  8B5C              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1417  8B5C              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1418  8B5C
1419  8B5C              ;	call Convierte_guia_en_fantasma
1420  8B5C C9           	ret
1421  8B5D
1422  8B5D              ; *************************************************************************************************************************************************************
1423  8B5D              ;
1424  8B5D              ; 8/1/23
1425  8B5D              ;
1426  8B5D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1427  8B5D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1428  8B5D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1429  8B5D
1430  8B5D              ; Destruye HL y DE !!!!!
1431  8B5D
1432  8B5D              Inicia_punteros_de_cajas
1433  8B5D
1434  8B5D 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1435  8B60 CD 8B 8B         call Extrae_address
1436  8B63 22 D0 89         ld (Puntero_store_caja),hl
1437  8B66 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1438  8B69 22 D4 89     	ld (Indice_restore_caja),hl
1439  8B6C CD 8B 8B     	call Extrae_address
1440  8B6F 22 D2 89     	ld (Puntero_restore_caja),hl
1441  8B72 C9               ret
1442  8B73
1443  8B73              ; *************************************************************************************************************************************************************
1444  8B73              ;
1445  8B73              ; 8/1/23
1446  8B73              ;
1447  8B73              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1448  8B73
1449  8B73              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1450  8B73              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1451  8B73              ;	ret
1452  8B73              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1453  8B73              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1454  8B73              ;	ret
1455  8B73
1456  8B73              ; -------------------------------------------------------------------------------------------------------------
1457  8B73              ;
1458  8B73              ; 21/9/23
1459  8B73              ;
1460  8B73
1461  8B73              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1462  8B73
1463  8B73              ;;Limpia_album_Amadeus
1464  8B73              ;
1465  8B73              ;;	ld hl,Scanlines_album_Amadeus
1466  8B73              ;;	ld a,(hl)
1467  8B73              ;;	and a
1468  8B73              ;;	ret z
1469  8B73
1470  8B73              ;;	ld hl,Scanlines_album_Amadeus;
1471  8B73              ;;	ld de,Scanlines_album_Amadeus+1
1472  8B73              ;;	ld bc,11
1473  8B73              ;;	xor a
1474  8B73              ;;	ld (hl),a
1475  8B73              ;;	ldir
1476  8B73
1477  8B73              ;;	ld hl,Scanlines_album_Amadeus
1478  8B73              ;;	ld (End_Snapshot_Amadeus),hl
1479  8B73
1480  8B73              ;;	ret
1481  8B73
1482  8B73              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1483  8B73              ;	ld de,Variables_de_borrado+1
1484  8B73              ;	ld bc,5
1485  8B73              ;	xor a
1486  8B73              ;	ld (hl),a
1487  8B73              ;	ldir
1488  8B73              ;	ret
1489  8B73
1490  8B73              ; -------------------------------------------------------------------------------------------------------------
1491  8B73              ;
1492  8B73              ; 	21/02/24
1493  8B73              ;
1494  8B73              ;	MODIFICA: AF,HL,BC,DE
1495  8B73              ;
1496  8B73              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1497  8B73              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1498  8B73
1499  8B73              Calcula_numero_de_malotes
1500  8B73
1501  8B73 21 00 80     	ld hl,Scanlines_album
1502  8B76 EB           	ex de,hl
1503  8B77 2A E4 89     	ld hl,(Scanlines_album_SP)
1504  8B7A
1505  8B7A 06 00        	ld b,0
1506  8B7C 7D           	ld a,l
1507  8B7D 93           	sub e
1508  8B7E 28 07        	jr z,1F
1509  8B80
1510  8B80              ; Nº de malotes no es "0".
1511  8B80
1512  8B80 D6 06        2 sub 6
1513  8B82 04           	inc b
1514  8B83 A7           	and a
1515  8B84 20 FA        	jr nz,2B
1516  8B86 78           	ld a,b
1517  8B87
1518  8B87 32 D9 89     1 ld (Numero_de_malotes),a
1519  8B8A C9           	ret
1520  8B8B
1521  8B8B              ; -------------------------------------------------------------------------------------------------------------
1522  8B8B              ;
1523  8B8B              ; 8/9/23
1524  8B8B              ;
1525  8B8B
1526  8B8B              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1527  8B8B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1528  8B8B
1529  8B8B              ;Calcula_malotes_Amadeus
1530  8B8B
1531  8B8B              ;	ld hl,Scanlines_album_Amadeus
1532  8B8B              ;	ex de,hl
1533  8B8B              ;	ld hl,(End_Snapshot_Amadeus)
1534  8B8B
1535  8B8B              ;	ld a,h
1536  8B8B              ;	and a
1537  8B8B              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1538  8B8B
1539  8B8B              ;	ld b,0
1540  8B8B              ;	ld a,l
1541  8B8B              ;	sub e
1542  8B8B              ;	jr z,1F
1543  8B8B
1544  8B8B              ; Nº de malotes no es "0".
1545  8B8B
1546  8B8B              ;2 sub 6
1547  8B8B              ;	inc b
1548  8B8B              ;	and a
1549  8B8B              ;	jr nz,2B
1550  8B8B              ;	ld a,b
1551  8B8B
1552  8B8B              ;1 ld (Numero_de_malotes),a
1553  8B8B              ;	ret
1554  8B8B
1555  8B8B              ; -------------------------------------------------------------------------------------------------------------
1556  8B8B              ;
1557  8B8B              ; 28/2/23
1558  8B8B              ;
1559  8B8B
1560  8B8B              ;;Calcula_numero_de_disparotes
1561  8B8B
1562  8B8B              ;	ld hl,Scanlines_album_disparos
1563  8B8B              ;	ex de,hl
1564  8B8B              ;	ld hl,(End_Snapshot_disparos)
1565  8B8B
1566  8B8B              ;	ld b,0
1567  8B8B              ;	ld a,l
1568  8B8B              ;	sub e
1569  8B8B              ;	jr z,1F
1570  8B8B
1571  8B8B              ; Nº de malotes no es "0".
1572  8B8B
1573  8B8B              ;2 sub 6
1574  8B8B              ;	inc b
1575  8B8B              ;	and a
1576  8B8B              ;	jr nz,2B
1577  8B8B              ;	ld a,b
1578  8B8B
1579  8B8B              ;1 ld (Numero_de_disparotes),a
1580  8B8B              ;	ret
1581  8B8B
1582  8B8B              ; *************************************************************************************************************************************************************
1583  8B8B              ;
1584  8B8B              ; 20/10/22
1585  8B8B              ;
1586  8B8B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1587  8B8B              ;
1588  8B8B              ; Destruye el puntero y DE !!!!!
1589  8B8B
1590  8B8B 5E           Extrae_address ld e,(hl)
1591  8B8C 23           	inc hl
1592  8B8D 56           	ld d,(hl)
1593  8B8E 2B           	dec hl
1594  8B8F EB           	ex de,hl
1595  8B90 C9           	ret
1596  8B91
1597  8B91              ; *************************************************************************************************************************************************************
1598  8B91              ;
1599  8B91              ;	20/1/24
1600  8B91              ;
1601  8B91              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1602  8B91              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1603  8B91              ;
1604  8B91              ;   Destruye HL y BC !!!!!,
1605  8B91              ;
1606  8B91              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1607  8B91              ;					"0" ..... Izquierda.
1608  8B91
1609  8B91              Inicia_Puntero_objeto
1610  8B91
1611  8B91 3A A0 89     	ld a,(Cuad_objeto)
1612  8B94 E6 01        	and 1
1613  8B96 F5           	push af
1614  8B97 CC B3 8B     	call z,Inicia_puntero_objeto_izq
1615  8B9A F1           	pop af
1616  8B9B C8           	ret z
1617  8B9C CD A0 8B     	call Inicia_puntero_objeto_der
1618  8B9F C9           	ret
1619  8BA0
1620  8BA0              ; Arrancamos desde la parte izquierda de la pantalla.
1621  8BA0              ; Iniciamos (Indice_Sprite_der).
1622  8BA0
1623  8BA0 2A 96 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1624  8BA3 22 9A 89     	ld (Puntero_DESPLZ_der),hl
1625  8BA6 CD 8B 8B     	call Extrae_address
1626  8BA9 22 90 89     	ld (Puntero_objeto),hl
1627  8BAC
1628  8BAC 2A 98 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1629  8BAF 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1630  8BB2 C9           	ret
1631  8BB3
1632  8BB3              ; Arrancamos desde la parte derecha de la pantalla.
1633  8BB3              ; Iniciamos (Indice_Sprite_izq).
1634  8BB3
1635  8BB3 2A 98 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1636  8BB6 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1637  8BB9 CD 8B 8B     	call Extrae_address
1638  8BBC 22 90 89     	ld (Puntero_objeto),hl
1639  8BBF
1640  8BBF 2A 96 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1641  8BC2 22 9A 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1642  8BC5 C9           	ret
1643  8BC6
1644  8BC6              ; **************************************************************************************************
1645  8BC6              ;
1646  8BC6              ;	31/01/24
1647  8BC6              ;
1648  8BC6              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1649  8BC6
1650  8BC6              Restore_entidad
1651  8BC6
1652  8BC6 2A D0 89     	ld hl,(Puntero_store_caja)
1653  8BC9 11 8B 89     	ld de,Bandeja_DRAW
1654  8BCC 7E           	ld a,(hl)
1655  8BCD 12           	ld (de),a
1656  8BCE 23           	inc hl 											; (Tipo).
1657  8BCF
1658  8BCF 11 92 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1659  8BD2 01 02 00     	ld bc,2
1660  8BD5 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1661  8BD7
1662  8BD7 13           	inc de
1663  8BD8 7E           	ld a,(hl)
1664  8BD9 12           	ld (de),a 										; Transferimos (Attr).
1665  8BDA 23           	inc hl
1666  8BDB
1667  8BDB 11 A1 89     	ld de,Impacto
1668  8BDE
1669  8BDE 7E           	ld a,(hl)
1670  8BDF 12           	ld (de),a 										; Transferimos (Impacto).
1671  8BE0 23           	inc hl
1672  8BE1
1673  8BE1 13           	inc de
1674  8BE2
1675  8BE2 01 06 00     	ld bc,6
1676  8BE5 ED B0        	ldir
1677  8BE7
1678  8BE7 01 07 00     	ld bc,7
1679  8BEA ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1680  8BEC              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1681  8BEC 11 B3 89     	ld de,Ctrl_2
1682  8BEF
1683  8BEF 7E           	ld a,(hl)
1684  8BF0 12           	ld (de),a 										; Transferimos (Ctrl_2).
1685  8BF1
1686  8BF1 C9           	ret
1687  8BF2
1688  8BF2              ; **************************************************************************************************
1689  8BF2              ;
1690  8BF2              ;	08/05/23
1691  8BF2              ;
1692  8BF2              ;	Incrementamos los dos punteros de entidades. (+1).
1693  8BF2
1694  8BF2              Incrementa_punteros_de_cajas
1695  8BF2
1696  8BF2 2A D2 89     	ld hl,(Puntero_restore_caja)
1697  8BF5 22 D0 89     	ld (Puntero_store_caja),hl
1698  8BF8 2A D4 89     	ld hl,(Indice_restore_caja)
1699  8BFB 23           	inc hl
1700  8BFC 23           	inc hl
1701  8BFD 22 D4 89     	ld (Indice_restore_caja),hl
1702  8C00 CD 8B 8B         call Extrae_address
1703  8C03 22 D2 89         ld (Puntero_restore_caja),hl
1704  8C06 C9               ret
1705  8C07
1706  8C07              ; **************************************************************************************************
1707  8C07              ;
1708  8C07              ;	21/12/23
1709  8C07              ;
1710  8C07              ;	Restore_Amadeus
1711  8C07              ;
1712  8C07              ;	Cargamos en DRAW los parámetros de Amadeus.
1713  8C07              ;
1714  8C07
1715  8C07              ;Restore_Amadeus	push hl
1716  8C07              ;	push de
1717  8C07              ; 	push bc
1718  8C07              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1719  8C07              ;	ld de,Bandeja_DRAW
1720  8C07              ;	ld bc,42
1721  8C07              ;	ldir
1722  8C07              ;	pop bc
1723  8C07              ;	pop de
1724  8C07              ;	pop hl
1725  8C07              ;	ret
1726  8C07
1727  8C07              ; *************************************************************************************************************************************************************
1728  8C07              ;
1729  8C07              ;	21/12/23
1730  8C07              ;
1731  8C07              ;	Store_Amadeus
1732  8C07              ;
1733  8C07              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1734  8C07              ;
1735  8C07              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1736  8C07              ;
1737  8C07              ;	DESTRUYE: HL y BC y DE.
1738  8C07
1739  8C07              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1740  8C07              ;	ld bc,42
1741  8C07              ;	ldir
1742  8C07              ;	ret
1743  8C07
1744  8C07              ; -----------------------------------------------------------
1745  8C07              ;
1746  8C07              ;	21/12/23
1747  8C07              ;
1748  8C07              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1749  8C07              ;
1750  8C07              ;	Destruye: HL,BC,DE,A
1751  8C07
1752  8C07              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1753  8C07              ;	ld bc,41
1754  8C07              ;	xor a
1755  8C07              ;	ld (hl),a;
1756  8C07              ;	ld de,Bandeja_DRAW+1
1757  8C07              ;	ldir
1758  8C07              ;	ret
1759  8C07
1760  8C07              ; -----------------------------------------------------------
1761  8C07
1762  8C07              ; Teclado.
1763  8C07
1764  8C07 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1765  8C09 DB FE        	in a,($fe)
1766  8C0B E6 01        	and $01
1767  8C0D 28 02        	jr z,1f
1768  8C0F 18 F6        	jr Pulsa_ENTER
1769  8C11 C9           1 ret
1770  8C12
1771  8C12              ; **************************************************************************************************
1772  8C12              ;
1773  8C12              ; Temporización.
1774  8C12
1775  8C12              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1776  8C12              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1777  8C12              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1778  8C12              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1779  8C12
1780  8C12              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1781  8C12              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1782  8C12              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1783  8C12
1784  8C12              ; A partir de $4f61 no hace falta DELAY.
1785  8C12
1786  8C12              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1787  8C12
1788  8C12 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1789  8C15 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1790  8C16 78           	LD A,B
1791  8C17 A7           	AND A
1792  8C18 20 FB        	JR NZ,wait
1793  8C1A C9           	RET
1794  8C1B
1795  8C1B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1796  8C1B              ;
1797  8C1B              ;	5/3/23
1798  8C1B              ;
1799  8C1B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1800  8C1B
1801  8C1B              ;Movimiento_Amadeus
1802  8C1B
1803  8C1B              ; Disparo.
1804  8C1B
1805  8C1B              ;	ld a,(Disparo_Amadeus)
1806  8C1B              ;	and a
1807  8C1B              ;	jr nz,1F
1808  8C1B              ;	jr 2F
1809  8C1B
1810  8C1B              ;1 ld a,$f7													; "5" para disparar.
1811  8C1B              ;	in a,($fe)
1812  8C1B              ;	and $10
1813  8C1B
1814  8C1B              ;	push af
1815  8C1B              ;	call z,Genera_disparo
1816  8C1B              ;	pop af
1817  8C1B              ;	jr nz,2F
1818  8C1B
1819  8C1B              ;	ld a,(Disparo_Amadeus)
1820  8C1B              ;	xor 1
1821  8C1B              ;	ld (Disparo_Amadeus),a
1822  8C1B              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1823  8C1B              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1824  8C1B              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1825  8C1B              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1826  8C1B
1827  8C1B              ;	ld a,$f7
1828  8C1B              ;	in a,($fe)
1829  8C1B              ;	and $01
1830  8C1B              ;	ret z
1831  8C1B
1832  8C1B              ;	ld a,$f7
1833  8C1B              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1834  8C1B              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1835  8C1B              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1836  8C1B              ;	ret
1837  8C1B
1838  8C1B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1839  8C1B              ;
1840  8C1B              ;	Rutina provisional para que los malotes cagen balas.
1841  8C1B
1842  8C1B              ;Detecta_disparo_entidad
1843  8C1B
1844  8C1B              ;	ld a,(Disparo_entidad)
1845  8C1B              ;	and a
1846  8C1B              ;	ret z
1847  8C1B
1848  8C1B              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1849  8C1B
1850  8C1B              ;	ld a,$7f				; Detecta SPACE.
1851  8C1B              ;	in a,($fe)
1852  8C1B              ;	and 1
1853  8C1B              ;	ret nz
1854  8C1B
1855  8C1B              ;	call Genera_disparo
1856  8C1B              ;	ret
1857  8C1B
1858  8C1B              ; ----------------------------------------------------------------------
1859  8C1B              ;
1860  8C1B              ;	8/9/23
1861  8C1B
1862  8C1B              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1863  8C1B              ; 	dec hl
1864  8C1B              ;	ld a,(hl)
1865  8C1B              ;	and a
1866  8C1B              ;	ret z										; Salimos si es álbum está vacío.
1867  8C1B
1868  8C1B              ;	ld de,Variables_de_borrado+5
1869  8C1B              ;	ld bc,6
1870  8C1B              ;	lddr
1871  8C1B              ;	ret
1872  8C1B
1873  8C1B              ; ----------------------------------------------------------------------
1874  8C1B              ;
1875  8C1B              ;	9/9/23
1876  8C1B
1877  8C1B              ;Repone_datos_de_borrado_Amadeus
1878  8C1B
1879  8C1B              ;	ld hl,Variables_de_borrado
1880  8C1B              ;	ld de,Scanlines_album_Amadeus
1881  8C1B              ;	ld bc,6
1882  8C1B              ;	ldir
1883  8C1B
1884  8C1B              ;	ex de,hl
1885  8C1B              ;	ld (End_Snapshot_Amadeus),hl
1886  8C1B
1887  8C1B              ;	ret
1888  8C1B
1889  8C1B              ; ----------------------------------------------------------------------
1890  8C1B              ;
1891  8C1B              ;	27/10/23
1892  8C1B              ;
1893  8C1B
1894  8C1B              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1895  8C1B              ;	_ Scanlines_album correspondiente.
1896  8C1B
1897  8C1B              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1898  8C1B              ;	_ durante el proceso de escritura.
1899  8C1B
1900  8C1B              ;Repone_datos_de_borrado
1901  8C1B
1902  8C1B              ;	ld de,(Scanlines_album_SP)
1903  8C1B              ;	ld hl,Variables_de_borrado
1904  8C1B              ;	ld bc,6
1905  8C1B              ;	ldir
1906  8C1B
1907  8C1B              ;	ex de,hl
1908  8C1B              ;	ld (Scanlines_album_SP),hl
1909  8C1B
1910  8C1B              ;	ret
1911  8C1B
1912  8C1B              ; --------------------------------------------------------------------------------------
1913  8C1B
1914  8C1B              ;Pinta_Amadeus
1915  8C1B
1916  8C1B              ;   	call Calcula_malotes_Amadeus
1917  8C1B              ;	call Extrae_foto_Amadeus
1918  8C1B              ;	call Limpia_album_Amadeus
1919  8C1B
1920  8C1B              ;	ret
1921  8C1B
1922  8C1B              ; -----------------------------------------------------------------------------------
1923  8C1B              ;
1924  8C1B              ;	10/12/23
1925  8C1B              ;
1926  8C1B              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1927  8C1B
1928  8C1B              Actualiza_relojes
1929  8C1B
1930  8C1B 3A E8 89     	ld a,(Ctrl_3)
1931  8C1E CB 47        	bit 0,a
1932  8C20 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1933  8C21
1934  8C21 21 ED 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1935  8C24 34           	inc (hl)
1936  8C25
1937  8C25 34           	inc (hl)
1938  8C26 35           	dec (hl)
1939  8C27 C0           	ret nz
1940  8C28
1941  8C28 21 EE 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1942  8C2B 34           	inc (hl)
1943  8C2C C9           	ret
1944  8C2D
1945  8C2D              ; ---------------------------------------------------------------
1946  8C2D
1947  8C2D              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8C2D              ;---------------------------------------------------------------------------------------------------------------
   2+ 8C2D              ;
   3+ 8C2D              ;   8/3/24
   4+ 8C2D              ;
   5+ 8C2D              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8C2D              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8C2D              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8C2D              ;	_ de la 1ª entidad del Nivel.
   9+ 8C2D              ;
  10+ 8C2D              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8C2D
  12+ 8C2D              ;	MODIFICA: HL,DE y A.
  13+ 8C2D              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8C2D
  15+ 8C2D              Inicializa_Nivel
  16+ 8C2D
  17+ 8C2D 2A F2 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8C30 CD 8B 8B     	call Extrae_address
  19+ 8C33 7E           	ld a,(hl)
  20+ 8C34 32 D6 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8C37 23           	inc hl
  22+ 8C38 CD 45 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8C3B 22 F4 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C3E CD 4E 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C41
  26+ 8C41 CD 5F 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C44 C9           	ret
  28+ 8C45
  29+ 8C45              ; ----------------------
  30+ 8C45
  31+ 8C45 11 B5 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C48 01 04 00     	ld bc,4
  33+ 8C4B ED B0        	ldir
  34+ 8C4D C9           	ret
  35+ 8C4E
  36+ 8C4E 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C4F CD 9F 8D         call Calcula_salto_en_BC
  38+ 8C52 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C55 A7               and a
  40+ 8C56 ED 4A            adc hl,bc
  41+ 8C58 CD 8B 8B         call Extrae_address
  42+ 8C5B 22 C1 89         ld (Puntero_indice_mov),hl
  43+ 8C5E C9               ret
  44+ 8C5F
  45+ 8C5F 3A 8B 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8C62 CD 9F 8D     	call Calcula_salto_en_BC
  47+ 8C65 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8C68 A7               and a
  49+ 8C69 ED 4A            adc hl,bc
  50+ 8C6B CD 8B 8B         call Extrae_address
  51+ 8C6E 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8C71 C9           	ret
  53+ 8C72
  54+ 8C72              ;---------------------------------------------------------------------------------------------------------------
  55+ 8C72              ;
  56+ 8C72              ;   5/1/24
  57+ 8C72              ;
  58+ 8C72              ;	Destruye A,BC,HL,DE
  59+ 8C72
  60+ 8C72              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8C72              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8C72
  63+ 8C72              Inicia_Entidades
  64+ 8C72
  65+ 8C72              ; Preparamos los punteros de las cajas de entidades:
  66+ 8C72
  67+ 8C72 CD 5D 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8C75              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8C75 CD 06 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8C78
  71+ 8C78 2A F4 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8C7B
  73+ 8C7B 22 F4 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8C7E
  75+ 8C7E CD 4D 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8C81
  77+ 8C81 2A F4 89     	ld hl,(Datos_de_nivel)
  78+ 8C84
  79+ 8C84              ; En este punto:
  80+ 8C84              ;
  81+ 8C84              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8C84              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8C84
  84+ 8C84 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8C85
  86+ 8C85 7E           	ld a,(hl)
  87+ 8C86 CD C2 8C     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8C89
  89+ 8C89 CD B1 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8C8C
  91+ 8C8C              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8C8C
  93+ 8C8C CD 6F 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8C8F
  95+ 8C8F A7           	and a
  96+ 8C90 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8C92
  98+ 8C92              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8C92
 100+ 8C92              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8C92              ;	_ de este tipo de entidad.
 102+ 8C92
 103+ 8C92 CD 6F 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8C95 CD 7C 99     	call Transfiere_datos_de_contadores
 105+ 8C98
 106+ 8C98 18 06        	jr 4F
 107+ 8C9A
 108+ 8C9A CD 87 8A     3 call Construye_movimientos_masticados_entidad
 109+ 8C9D
 110+ 8C9D              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8C9D              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8C9D              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8C9D              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8C9D              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8C9D
 116+ 8C9D CD 2D 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8CA0              ;																; _ Mov_masticados ya generados.
 118+ 8CA0 CD DC 8C     4 call Guarda_foto_de_mov_masticado
 119+ 8CA3
 120+ 8CA3              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8CA3
 122+ 8CA3 2A A8 89     	ld hl,(Puntero_de_impresion)
 123+ 8CA6 CD B2 99     	call Genera_coordenadas
 124+ 8CA9 CD D8 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8CAC CD E6 8C     	call Limpiamos_bandeja_DRAW
 126+ 8CAF CD F2 8B     	call Incrementa_punteros_de_cajas
 127+ 8CB2
 128+ 8CB2              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8CB2              ; _ entidad del Nivel.
 130+ 8CB2
 131+ 8CB2 3A E9 89     	ld a,(Ctrl_4)
 132+ 8CB5 E6 F0        	and $f0
 133+ 8CB7 32 E9 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8CBA
 135+ 8CBA              ; Siguiente entidad del Nivel.
 136+ 8CBA
 137+ 8CBA 2A F4 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8CBD 23           	inc hl 														; _ entidad del Nivel.
 139+ 8CBE
 140+ 8CBE C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8CBF
 142+ 8CBF 10 BA        	djnz 2B
 143+ 8CC1
 144+ 8CC1 C9           	ret
 145+ 8CC2
 146+ 8CC2              ; ---------------------------------------------------------------------
 147+ 8CC2              ;
 148+ 8CC2              ;	10/02/24
 149+ 8CC2              ;
 150+ 8CC2              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8CC2              ;
 152+ 8CC2              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8CC2
 154+ 8CC2              Definicion_segun_tipo
 155+ 8CC2
 156+ 8CC2 CD 9F 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8CC5 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8CC8 CD A7 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8CCB C9           	ret
 160+ 8CCC
 161+ 8CCC              ; ---------------------------------------------------------------------
 162+ 8CCC              ;
 163+ 8CCC              ;	30/01/24
 164+ 8CCC
 165+ 8CCC
 166+ 8CCC              Store_Restore_cajas
 167+ 8CCC
 168+ 8CCC              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8CCC
 170+ 8CCC 2A A8 89     	ld hl,(Puntero_de_impresion)
 171+ 8CCF CD B2 99     	call Genera_coordenadas
 172+ 8CD2
 173+ 8CD2 CD D8 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8CD5 CD E6 8C     	call Limpiamos_bandeja_DRAW
 175+ 8CD8
 176+ 8CD8              ; 	Entidad_sospechosa. 20/4/23
 177+ 8CD8
 178+ 8CD8              ;	ld a,(Impacto)
 179+ 8CD8              ;	and a
 180+ 8CD8              ;	jr z,1F
 181+ 8CD8
 182+ 8CD8              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8CD8              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8CD8              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8CD8              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8CD8              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8CD8
 188+ 8CD8
 189+ 8CD8              ;1 ld hl,(Puntero_restore_caja)
 190+ 8CD8              ;	ld a,(hl)
 191+ 8CD8              ;	and a
 192+ 8CD8              ;	push af
 193+ 8CD8              ;	jr z,2F
 194+ 8CD8
 195+ 8CD8              ;	di
 196+ 8CD8              ;	ld de,Bandeja_DRAW
 197+ 8CD8              ;	ld bc,42
 198+ 8CD8              ;	ldir
 199+ 8CD8              ;	ei
 200+ 8CD8
 201+ 8CD8 CD F2 8B     2 call Incrementa_punteros_de_cajas
 202+ 8CDB C9           	ret
 203+ 8CDC
 204+ 8CDC
 205+ 8CDC              ; ---------------------------------------------------------------------
 206+ 8CDC              ;
 207+ 8CDC              ;	29/01/24
 208+ 8CDC
 209+ 8CDC              Guarda_foto_de_mov_masticado
 210+ 8CDC
 211+ 8CDC CD 0E 8B     	call Cargamos_registros_con_mov_masticado
 212+ 8CDF CD BF 80     	call Guarda_foto_registros
 213+ 8CE2              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 214+ 8CE2              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8CE2              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 216+ 8CE2              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8CE2
 218+ 8CE2 CD F1 8C     	call Decrementa_Contador_de_mov_masticados
 219+ 8CE5 C9           	ret
 220+ 8CE6
 221+ 8CE6              ; ---------------------------------------------------------------------
 222+ 8CE6              ;
 223+ 8CE6              ;	25/01/24
 224+ 8CE6
 225+ 8CE6 21 8B 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8CE9 06 2A        	ld b,42
 227+ 8CEB AF           	xor a
 228+ 8CEC
 229+ 8CEC 77           1 ld (hl),a
 230+ 8CED 23           	inc hl
 231+ 8CEE 10 FC        	djnz 1B
 232+ 8CF0
 233+ 8CF0 C9           	ret
 234+ 8CF1
 235+ 8CF1              ; ---------------------------------------------------------------------
 236+ 8CF1              ;
 237+ 8CF1              ;	22/01/24
 238+ 8CF1
 239+ 8CF1 2A AC 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8CF4 2B           	dec hl
 241+ 8CF5
 242+ 8CF5 24           	inc h
 243+ 8CF6 25           	dec h
 244+ 8CF7
 245+ 8CF7 FC FE 8C     	call m,Reinicia_entidad_maliciosa
 246+ 8CFA
 247+ 8CFA              ;	jr nz,1F
 248+ 8CFA
 249+ 8CFA              ;	inc l
 250+ 8CFA              ;	dec l
 251+ 8CFA
 252+ 8CFA              ;	di
 253+ 8CFA              ;	jr z,$
 254+ 8CFA              ;	ei
 255+ 8CFA
 256+ 8CFA 22 AC 89     1 ld (Contador_de_mov_masticados),hl
 257+ 8CFD C9           	ret
 258+ 8CFE
 259+ 8CFE              ; ---------------------------------------------------------------------
 260+ 8CFE              ;
 261+ 8CFE              ;	10/2/24
 262+ 8CFE
 263+ 8CFE              Reinicia_entidad_maliciosa
 264+ 8CFE
 265+ 8CFE              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8CFE
 267+ 8CFE CD 6F 99     	call Situa_en_contador_general_de_mov_masticados
 268+ 8D01 CD 7C 99     	call Transfiere_datos_de_contadores
 269+ 8D04
 270+ 8D04              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8D04
 272+ 8D04 3A 8B 89     	ld a,(Tipo)
 273+ 8D07 CD C2 8C     	call Definicion_segun_tipo
 274+ 8D0A
 275+ 8D0A E5           	push hl
 276+ 8D0B DD E1        	pop ix
 277+ 8D0D
 278+ 8D0D DD 6E 0B     	ld l,(ix+11)
 279+ 8D10 DD 66 0C     	ld h,(ix+12)
 280+ 8D13
 281+ 8D13 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8D16
 283+ 8D16              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8D16              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8D16
 286+ 8D16 2A E4 89     	ld hl,(Scanlines_album_SP)
 287+ 8D19 01 06 00     	ld bc,6
 288+ 8D1C A7           	and a
 289+ 8D1D ED 42        	sbc hl,bc
 290+ 8D1F 22 E4 89     	ld (Scanlines_album_SP),hl
 291+ 8D22
 292+ 8D22 CD 0E 8B     	call Cargamos_registros_con_mov_masticado
 293+ 8D25 CD BF 80     	call Guarda_foto_registros
 294+ 8D28
 295+ 8D28 2A AC 89     	ld hl,(Contador_de_mov_masticados)
 296+ 8D2B 2B           	dec hl
 297+ 8D2C
 298+ 8D2C C9           	ret
 299+ 8D2D
 300+ 8D2D
 301+ 8D2D
 302+ 8D2D
 303+ 8D2D              ; ---------------------------------------------------------------------
 304+ 8D2D              ;
 305+ 8D2D              ;	22/01/24
 306+ 8D2D
 307+ 8D2D 21 E9 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8D30 CB 46        	bit 0,(hl)
 309+ 8D32 20 0D        	jr nz,1F
 310+ 8D34 CB 4E        	bit 1,(hl)
 311+ 8D36 20 0C        	jr nz,2F
 312+ 8D38 CB 56        	bit 2,(hl)
 313+ 8D3A 20 0B        	jr nz,3F
 314+ 8D3C CB 5E        	bit 3,(hl)
 315+ 8D3E 20 0A        	jr nz,4F
 316+ 8D40 C9           	ret
 317+ 8D41
 318+ 8D41 CB E6        1 set 4,(hl)
 319+ 8D43 C9           	ret
 320+ 8D44 CB EE        2 set 5,(hl)
 321+ 8D46 C9           	ret
 322+ 8D47 CB F6        3 set 6,(hl)
 323+ 8D49 C9           	ret
 324+ 8D4A CB FE        4 set 7,(hl)
 325+ 8D4C C9           	ret
 326+ 8D4D
 327+ 8D4D              ; ---------------------------------------------------------------------
 328+ 8D4D              ;
 329+ 8D4D              ;	23/01/24
 330+ 8D4D              ;
 331+ 8D4D              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8D4D              ;
 333+ 8D4D              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8D4D              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8D4D              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8D4D              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8D4D
 338+ 8D4D              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8D4D
 340+ 8D4D 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8D4E 3D           	dec a
 342+ 8D4F 20 06        	jr nz,1F
 343+ 8D51
 344+ 8D51              ; --- Tipo_1
 345+ 8D51
 346+ 8D51 21 E9 89     	ld hl,Ctrl_4
 347+ 8D54 CB C6        	set 0,(hl)
 348+ 8D56 C9           	ret
 349+ 8D57
 350+ 8D57 3D           1 dec a
 351+ 8D58 20 06        	jr nz,2F
 352+ 8D5A
 353+ 8D5A              ; --- Tipo_2
 354+ 8D5A
 355+ 8D5A 21 E9 89     	ld hl,Ctrl_4
 356+ 8D5D CB CE        	set 1,(hl)
 357+ 8D5F C9           	ret
 358+ 8D60
 359+ 8D60 3D           2 dec a
 360+ 8D61 20 06        	jr nz,3F
 361+ 8D63
 362+ 8D63              ; --- Tipo_3
 363+ 8D63
 364+ 8D63 21 E9 89     	ld hl,Ctrl_4
 365+ 8D66 CB D6        	set 2,(hl)
 366+ 8D68 C9           	ret
 367+ 8D69
 368+ 8D69              ; --- Tipo_3
 369+ 8D69
 370+ 8D69 21 E9 89     3 ld hl,Ctrl_4
 371+ 8D6C CB D6        	set 2,(hl)
 372+ 8D6E C9           	ret
 373+ 8D6F
 374+ 8D6F              ; ---------------------------------------------------------------------
 375+ 8D6F              ;
 376+ 8D6F              ;	22/01/24
 377+ 8D6F
 378+ 8D6F 21 E9 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8D72 CB 46        	bit 0,(hl)
 380+ 8D74 20 0E        	jr nz,1F
 381+ 8D76
 382+ 8D76 CB 4E        	bit 1,(hl)
 383+ 8D78 20 10        	jr nz,2F
 384+ 8D7A
 385+ 8D7A CB 56        	bit 2,(hl)
 386+ 8D7C 20 12        	jr nz,3F
 387+ 8D7E
 388+ 8D7E CB 5E        	bit 3,(hl)
 389+ 8D80 20 14        	jr nz,4F
 390+ 8D82 18 19        	jr 6F
 391+ 8D84
 392+ 8D84              ; Entidad_de_Tipo_1.
 393+ 8D84
 394+ 8D84 CB 66        1 bit 4,(hl)
 395+ 8D86 28 15        	jr z,6F
 396+ 8D88 18 10        	jr 5F
 397+ 8D8A
 398+ 8D8A              ; Entidad_de_Tipo_2.
 399+ 8D8A
 400+ 8D8A CB 6E        2 bit 5,(hl)
 401+ 8D8C 28 0F        	jr z,6F
 402+ 8D8E 18 0A        	jr 5F
 403+ 8D90
 404+ 8D90              ; Entidad_de_Tipo_3.
 405+ 8D90
 406+ 8D90 CB 76        3 bit 6,(hl)
 407+ 8D92 28 09        	jr z,6F
 408+ 8D94 18 04        	jr 5F
 409+ 8D96
 410+ 8D96              ; Entidad_de_Tipo_4.
 411+ 8D96
 412+ 8D96 CB 7E        4 bit 7,(hl)
 413+ 8D98 28 03        	jr z,6F
 414+ 8D9A
 415+ 8D9A              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8D9A
 417+ 8D9A AF           5 xor a
 418+ 8D9B 3C           	inc a
 419+ 8D9C C9           	ret
 420+ 8D9D
 421+ 8D9D              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8D9D
 423+ 8D9D AF           6 xor a
 424+ 8D9E C9           	ret
 425+ 8D9F
 426+ 8D9F              ;	------------------------------------------------------------------------------------
 427+ 8D9F              ;
 428+ 8D9F              ;	12/01/24
 429+ 8D9F              ;
 430+ 8D9F              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8D9F              ;
 432+ 8D9F              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8D9F              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8D9F
 435+ 8D9F CB 27        Calcula_salto_en_BC sla a
 436+ 8DA1 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8DA3 4F           	ld c,a
 438+ 8DA4 06 00        	ld b,0
 439+ 8DA6 C9           	ret
 440+ 8DA7
 441+ 8DA7              ; ------------------------------------------------------------------
 442+ 8DA7              ;
 443+ 8DA7              ;	19/1/24
 444+ 8DA7              ;
 445+ 8DA7              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8DA7              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8DA7
 448+ 8DA7 A7           Situa_en_datos_de_definicion and a
 449+ 8DA8 ED 4A        	adc hl,bc
 450+ 8DAA CD 8B 8B     	call Extrae_address
 451+ 8DAD 22 DC 89         ld (Datos_de_entidad),hl
 452+ 8DB0 C9           	ret
 453+ 8DB1
 454+ 8DB1              ; ------------------------------------------------------------------
 455+ 8DB1
 456+ 8DB1              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8DB1              ; 	inc de
 458+ 8DB1              ; 	inc de
 459+ 8DB1              ; 	ex de,hl
 460+ 8DB1              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8DB1              ; 	ret
 462+ 8DB1
 463+ 8DB1              ; ----------------------------------------------------------------------------------------------------------
 464+ 8DB1              ;
 465+ 8DB1              ;	31/1/24
 466+ 8DB1              ;
 467+ 8DB1              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8DB1              ;	_ de entidad.
 469+ 8DB1              ;
 470+ 8DB1              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8DB1              ;
 472+ 8DB1              ;
 473+ 8DB1              ;	MODIFICA: HL,DE y BC
 474+ 8DB1
 475+ 8DB1
 476+ 8DB1              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8DB1
 478+ 8DB1 11 8B 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8DB4 01 03 00     	ld bc,3
 480+ 8DB7 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8DB9              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8DB9 11 95 89     	ld de,Attr									; DE en (Attr).
 483+ 8DBC 01 05 00     	ld bc,5
 484+ 8DBF ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8DC1              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8DC1 11 9E 89     	ld de,Posicion_inicio
 487+ 8DC4 01 03 00     	ld bc,3
 488+ 8DC7 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8DC9              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8DC9 11 AA 89     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8DCC 01 02 00     	ld bc,2
 492+ 8DCF ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8DD1
 494+ 8DD1 11 B4 89     	ld de,Frames_explosion
 495+ 8DD4 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8DD6 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8DD7
 498+ 8DD7 C9           	ret
 499+ 8DD8
 500+ 8DD8              ; ----------------------------------------------------------------------------------------------------------
 501+ 8DD8              ;
 502+ 8DD8              ;	22/01/24
 503+ 8DD8              ;
 504+ 8DD8              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8DD8              ;
 506+ 8DD8              ;	Las cajas contienen entidades iniciadas:
 507+ 8DD8              ;
 508+ 8DD8              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8DD8              ;
 510+ 8DD8              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8DD8              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8DD8              ;
 513+ 8DD8              ;	MODIFICA: HL,DE y BC
 514+ 8DD8
 515+ 8DD8 21 8B 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8DDB ED 5B D0 89  	ld de,(Puntero_store_caja)
 517+ 8DDF 7E           	ld a,(hl)
 518+ 8DE0 12           	ld (de),a
 519+ 8DE1 13           	inc de 													; (Tipo).
 520+ 8DE2
 521+ 8DE2 21 92 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8DE5 01 02 00     	ld bc,2
 523+ 8DE8 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8DEA              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8DEA 23           	inc hl
 526+ 8DEB 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8DEC 12           	ld (de),a
 528+ 8DED 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8DEE
 530+ 8DEE 21 A1 89     	ld hl,Impacto
 531+ 8DF1 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8DF2 12           	ld (de),a
 533+ 8DF3 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8DF4              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8DF4 23           	inc hl
 536+ 8DF5 01 06 00     	ld bc,6
 537+ 8DF8 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8DFA              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8DFA 01 07 00     	ld bc,7
 540+ 8DFD ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8DFF              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8DFF              ;															; HL apunta ahora a (Columnas).
 543+ 8DFF 21 B3 89     	ld hl,Ctrl_2
 544+ 8E02 7E           	ld a,(hl)
 545+ 8E03 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8E04 13           	inc de
 547+ 8E05
 548+ 8E05 C9           	ret
 549+ 8E06
 550+ 8E06              ;---------------------------------------------------------------------------------------------------------------
 551+ 8E06              ;
 552+ 8E06              ;	5/1/24
 553+ 8E06              ;
 554+ 8E06              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8E06              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8E06              ;
 557+ 8E06              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8E06              ;
 559+ 8E06              ;	(Numero_parcial_de_entidades)="7".
 560+ 8E06              ;
 561+ 8E06              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8E06              ;
 563+ 8E06              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8E06              ;
 565+ 8E06              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8E06              ;	MODIFICA: A y B.
 567+ 8E06              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8E06
 569+ 8E06              Inicializa_Numero_parcial_de_entidades
 570+ 8E06
 571+ 8E06              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8E06
 573+ 8E06 3A D6 89     	ld a,(Numero_de_entidades)
 574+ 8E09 A7           	and a
 575+ 8E0A
 576+ 8E0A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8E0A              ;	jr z,$
 578+ 8E0A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8E0A
 580+ 8E0A 20 03        	jr nz,3F
 581+ 8E0C
 582+ 8E0C              ; ---------- ---------- ----------
 583+ 8E0C
 584+ 8E0C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8E0C              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8E0C
 587+ 8E0C CD 2D 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8E0F
 589+ 8E0F              ; ---------- ---------- ----------
 590+ 8E0F
 591+ 8E0F 3A D6 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8E12 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8E14 38 08        	jr c,1F
 594+ 8E16
 595+ 8E16              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8E16              ; Actualizamos variables.
 597+ 8E16
 598+ 8E16 3E 07        	ld a,7
 599+ 8E18 32 D7 89     	ld (Numero_parcial_de_entidades),a
 600+ 8E1B 47           	ld b,a
 601+ 8E1C 18 04        	jr 2F
 602+ 8E1E
 603+ 8E1E              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8E1E              ; (Numero_de_entidades)="0".
 605+ 8E1E
 606+ 8E1E 32 D7 89     1 ld (Numero_parcial_de_entidades),a
 607+ 8E21 47           	ld b,a
 608+ 8E22 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1948  8E23              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8E23              ; ******************************************************************************************************************************************************************************************
   2+ 8E23              ;
   3+ 8E23              ; 26/06/23
   4+ 8E23              ;
   5+ 8E23              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8E23
   7+ 8E23              Draw
   8+ 8E23
   9+ 8E23 CD 0D 91     	call Prepara_draw
  10+ 8E26 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8E27 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8E28 28 05        	jr z,2F
  13+ 8E2A
  14+ 8E2A 3A A0 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8E2D 18 0C        	jr 1F
  16+ 8E2F
  17+ 8E2F 2A 9E 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8E32 22 8E 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8E35 CD C1 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8E38              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8E38
  22+ 8E38 CD D3 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8E3B
  24+ 8E3B 3A AE 89     1 ld a,(Ctrl_0)
  25+ 8E3E CB 6F        	bit 5,a
  26+ 8E40 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8E42
  28+ 8E42 CD 57 8E     	call Comprueba_limite_horizontal
  29+ 8E45 CD E7 8E     	call Comprueba_limite_vertical
  30+ 8E48
  31+ 8E48              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8E48              ; -----------------------
  33+ 8E48              ; -----------------------
  34+ 8E48              ; -----------------------
  35+ 8E48
  36+ 8E48 CD 3D 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8E4B CD 74 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8E4E              ;	call Define_rutina_de_impresion
  39+ 8E4E
  40+ 8E4E 3A AE 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8E51 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8E53 32 AE 89     	ld (Ctrl_0),a
  43+ 8E56
  44+ 8E56 C9           	ret
  45+ 8E57
  46+ 8E57              ; *******************************************************************************************************************************************************************************************
  47+ 8E57              ;	21/01/23
  48+ 8E57              ;
  49+ 8E57              ; 	Comprueba_limite_horizontal.
  50+ 8E57              ;
  51+ 8E57              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8E57              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8E57              ;
  54+ 8E57              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8E57              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8E57              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8E57              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8E57
  59+ 8E57
  60+ 8E57
  61+ 8E57 3A AE 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8E5A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8E5C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8E5E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8E60 32 AE 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8E63 18 09            jr 6F
  67+ 8E65 CB 5F        1 bit 3,a
  68+ 8E67 28 0A            jr z,2F
  69+ 8E69 E6 F7            and $f7
  70+ 8E6B 32 AE 89         ld (Ctrl_0),a
  71+ 8E6E CD C1 8F     6 call Inicializacion
  72+ 8E71 18 5B            jr 5F
  73+ 8E73 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8E74
  75+ 8E74              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8E74              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8E74
  78+ 8E74 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8E75 2A B0 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8E78 CD 94 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8E7B 67           	ld h,a
  82+ 8E7C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8E7D CD 94 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8E80 67           	ld h,a
  85+ 8E81 A7           	and a
  86+ 8E82 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8E84 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8E85 3A A0 89     	ld a,(Cuad_objeto)
  89+ 8E88 FE 02        	cp 2
  90+ 8E8A 38 1E        	jr c,3F
  91+ 8E8C 28 1C        	jr z,3F
  92+ 8E8E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8E8F 28 23            jr z,7F
  94+ 8E91 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8E93 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8E95 E1           	pop hl
  97+ 8E96
  98+ 8E96              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8E96              ; _para indicar con E="2" en caso necesario.
 100+ 8E96
 101+ 8E96 E5               push hl
 102+ 8E97 C5               push bc
 103+ 8E98 CD 94 99     	call calcula_tercio
 104+ 8E9B FE 01        	cp 1
 105+ 8E9D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8E9F CD CF 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8EA2 28 26            jr z,9F
 108+ 8EA4 38 24            jr c,9F
 109+ 8EA6 1E 00        11 ld e,0
 110+ 8EA8 18 22            jr 8F
 111+ 8EAA 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8EAB 28 07        	jr z, 7F
 113+ 8EAD 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8EAF 1E 00         	ld e,0
 115+ 8EB1 E1           	pop hl
 116+ 8EB2 18 04        	jr 4F
 117+ 8EB4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8EB6 18 15            jr 10F
 119+ 8EB8
 120+ 8EB8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8EB8              ; _para indicar con E="2" en caso necesario.
 122+ 8EB8
 123+ 8EB8 E5           4 push hl
 124+ 8EB9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8EBA CD 94 99     	call calcula_tercio
 126+ 8EBD FE 01        	cp 1
 127+ 8EBF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8EC1 CD CF 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8EC4 28 04            jr z,9F
 130+ 8EC6 30 02            jr nc,9F
 131+ 8EC8 18 02        	jr 8F
 132+ 8ECA 1E 02        9 ld e,2
 133+ 8ECC C1           8 pop bc
 134+ 8ECD E1           10 pop hl
 135+ 8ECE C9           5 ret
 136+ 8ECF
 137+ 8ECF              ; --------------------
 138+ 8ECF              ;
 139+ 8ECF              ; 25/08/22
 140+ 8ECF
 141+ 8ECF CD 94 99     Comprueba_centro call calcula_tercio
 142+ 8ED2 67               ld h,a
 143+ 8ED3 08           	ex af,af
 144+ 8ED4 FE 02        	cp 2
 145+ 8ED6 38 07        	jr c,1F
 146+ 8ED8 28 05        	jr z,1F
 147+ 8EDA 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8EDD 18 03        	jr 2F
 149+ 8EDF 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8EE2 08           2 ex af,af
 151+ 8EE3 A7               and a
 152+ 8EE4 ED 42            sbc hl,bc
 153+ 8EE6 C9               ret
 154+ 8EE7
 155+ 8EE7              ; *********************************************************************************************************************************************************************************************
 156+ 8EE7              ;
 157+ 8EE7              ;   16/8/22
 158+ 8EE7              ;
 159+ 8EE7              ;	Comprueba_limite_vertical
 160+ 8EE7              ;
 161+ 8EE7              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8EE7              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8EE7              ;
 164+ 8EE7
 165+ 8EE7 2A 8E 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8EEA 7D           	ld a,l
 167+ 8EEB E6 1F        	and $1F
 168+ 8EED 57           	ld d,a
 169+ 8EEE 3A B2 89     	ld a,(Limite_vertical)
 170+ 8EF1 BA           	cp d 											; Límite - Posición.
 171+ 8EF2 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8EF3 3A A0 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8EF6 CB 47        	bit 0,a
 174+ 8EF8 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8EFA
 176+ 8EFA              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8EFA
 178+ 8EFA 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8EFB 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8EFD
 181+ 8EFD              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8EFD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8EFD
 184+ 8EFD 3A 92 89         ld a,(Coordenada_X)
 185+ 8F00 16 0F            ld d,Centro_izquierda
 186+ 8F02 A7               and a
 187+ 8F03 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8F04 28 1E            jr z,3F
 189+ 8F06 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8F08              ;                                                    ; _salimos sin modificar nada.
 191+ 8F08 18 0E            jr 2F
 192+ 8F0A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8F0B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8F0D
 195+ 8F0D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8F0D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8F0D
 198+ 8F0D 3A 92 89         ld a,(Coordenada_X)
 199+ 8F10 16 10            ld d,Centro_derecha
 200+ 8F12 A7               and a
 201+ 8F13 92               sub d
 202+ 8F14 28 0E            jr z,3F
 203+ 8F16 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8F18              ;                                                    ; _salimos sin modificar nada.
 205+ 8F18 CB 43        2 bit 0,e
 206+ 8F1A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8F1C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8F1D CD B1 8F         call Modificaccionne
 209+ 8F20 C1           	pop bc
 210+ 8F21 CD C1 8F         call Inicializacion
 211+ 8F24 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8F25
 213+ 8F25              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8F25
 215+ 8F25 C5           4 push bc
 216+ 8F26 01 8D 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8F29 0A           	ld a,(bc)
 218+ 8F2A 3D           	dec a
 219+ 8F2B 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8F2C 7D           	ld a,l
 221+ 8F2D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8F2E CB 47        	bit 0,a
 223+ 8F30 28 03        	jr z,5F
 224+ 8F32 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8F33 18 2E        	jr 7F
 226+ 8F35
 227+ 8F35              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8F35
 229+ 8F35 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8F36 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8F37 3A AE 89     	ld a,(Ctrl_0)
 232+ 8F3A CB 4F        	bit 1,a
 233+ 8F3C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8F3E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8F3F
 236+ 8F3F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8F3F
 238+ 8F3F 1C               inc e
 239+ 8F40 1D               dec e
 240+ 8F41 20 07            jr nz,12F
 241+ 8F43 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8F44 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8F45 22 8E 89     	ld (Posicion_actual),hl
 244+ 8F48 18 44        13 jr 9F
 245+ 8F4A CB 43        12 bit 0,e
 246+ 8F4C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8F4E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8F4E C1           	pop bc
 249+ 8F4F 18 D3        	jr 3B
 250+ 8F51 80           14 add b
 251+ 8F52 6F               ld l,a
 252+ 8F53 22 8E 89     	ld (Posicion_actual),hl
 253+ 8F56 CD B1 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8F59 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8F5B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8F5D 32 AE 89         ld (Ctrl_0),a
 257+ 8F60 F1           	pop af
 258+ 8F61 18 2B        	jr 9F
 259+ 8F63
 260+ 8F63              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8F63
 262+ 8F63 F5           7 push af
 263+ 8F64 3A AE 89     	ld a,(Ctrl_0)
 264+ 8F67 CB 47        	bit 0,a
 265+ 8F69 20 1D        	jr nz,8F
 266+ 8F6B F1           	pop af
 267+ 8F6C
 268+ 8F6C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8F6C
 270+ 8F6C 1C           	inc e
 271+ 8F6D 1D               dec e
 272+ 8F6E 20 07            jr nz,10F
 273+ 8F70 90           	sub b
 274+ 8F71 6F               ld l,a
 275+ 8F72 22 8E 89     	ld (Posicion_actual),hl
 276+ 8F75 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8F77              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8F77 CB 43        10 bit 0,e
 279+ 8F79 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8F7B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8F7B C1           	pop bc
 282+ 8F7C 18 A6        	jr 3B
 283+ 8F7E 90           16 sub b
 284+ 8F7F 6F               ld l,a
 285+ 8F80 22 8E 89     	ld (Posicion_actual),hl
 286+ 8F83 CD B1 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 8F86 18 06            jr 9F
 288+ 8F88 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 8F8A 32 AE 89         ld (Ctrl_0),a
 290+ 8F8D F1           	pop af
 291+ 8F8E C1           9 pop bc
 292+ 8F8F 1E 00        	ld e,0
 293+ 8F91 CD C1 8F         call Inicializacion
 294+ 8F94 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 8F95 08           	ex af,af
 296+ 8F96 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 8F97 18 8B            jr 3B
 298+ 8F99
 299+ 8F99              ; --------------------
 300+ 8F99
 301+ 8F99 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 8F9B CD 28 91     1 call PreviousScan
 303+ 8F9E 10 FB            djnz 1B
 304+ 8FA0 22 8E 89     	ld (Posicion_actual),hl
 305+ 8FA3 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 8FA4 C9           	ret
 307+ 8FA5
 308+ 8FA5              ; --------------------
 309+ 8FA5
 310+ 8FA5 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 8FA7 CD 19 91     1 call NextScan
 312+ 8FAA 10 FB            djnz 1B
 313+ 8FAC 22 8E 89     	ld (Posicion_actual),hl
 314+ 8FAF AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 8FB0 C9           	ret
 316+ 8FB1
 317+ 8FB1              ; --------------------
 318+ 8FB1              ;
 319+ 8FB1              ;	22/01/23
 320+ 8FB1              ;
 321+ 8FB1              ;	E="1". Hemos cambiado de cuadrante.
 322+ 8FB1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 8FB1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 8FB1
 325+ 8FB1
 326+ 8FB1              Modificaccionne
 327+ 8FB1
 328+ 8FB1 3A A0 89     	ld a,(Cuad_objeto)
 329+ 8FB4 FE 02        	cp 2
 330+ 8FB6 CC 99 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 8FB9 DC 99 8F         call c,Modifica_Pos_actual
 332+ 8FBC C8           	ret z
 333+ 8FBD CD A5 8F         call Modifica_Pos_actual2
 334+ 8FC0 C9               ret
 335+ 8FC1
 336+ 8FC1              ; *************************************************************************************************************************************************************************************************
 337+ 8FC1              ;
 338+ 8FC1              ;	13/8/22
 339+ 8FC1              ;
 340+ 8FC1              ;	Inicializacion
 341+ 8FC1              ;
 342+ 8FC1              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 8FC1              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 8FC1              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 8FC1              ;
 346+ 8FC1              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 8FC1              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 8FC1              ;	_ desaparece/aparece.
 349+ 8FC1
 350+ 8FC1              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 8FC1              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 8FC1              ;
 353+ 8FC1              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 8FC1              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 8FC1              ; 		   [E] ="0"
 356+ 8FC1
 357+ 8FC1              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 8FC1
 359+ 8FC1 CD 94 99     Inicializacion call calcula_tercio
 360+ 8FC4 28 36        	jr z,primit
 361+ 8FC6 E6 02        	and 2
 362+ 8FC8 20 07        	jr nz,segmit
 363+ 8FCA 7D           	ld a,l
 364+ 8FCB FE 7F        	cp $7f
 365+ 8FCD 38 2D        	jr c,primit
 366+ 8FCF 28 2B        	jr z,primit
 367+ 8FD1 CD 37 90     segmit call column
 368+ 8FD4 38 13        	jr c,tercuad
 369+ 8FD6 3E 04        cuarcuad ld a,4
 370+ 8FD8 32 A0 89     	ld (Cuad_objeto),a
 371+ 8FDB 21 20 48     	ld hl,$4820
 372+ 8FDE 22 B0 89     	ld (Limite_horizontal),hl
 373+ 8FE1 21 B2 89     	ld hl,Limite_vertical
 374+ 8FE4 36 0D        	ld (hl),$0d
 375+ 8FE6 08           	ex af,af
 376+ 8FE7 18 3C        	jr 1F
 377+ 8FE9              tercuad
 378+ 8FE9 3E 03        	ld a,3
 379+ 8FEB 32 A0 89     	ld (Cuad_objeto),a
 380+ 8FEE 21 20 48     	ld hl,$4820
 381+ 8FF1 22 B0 89     	ld (Limite_horizontal),hl
 382+ 8FF4 21 B2 89     	ld hl,Limite_vertical
 383+ 8FF7 36 12        	ld (hl),$12
 384+ 8FF9 08           	ex af,af
 385+ 8FFA 18 29        	jr 1F
 386+ 8FFC CD 37 90     primit call column
 387+ 8FFF 38 13        	jr c, primcuad
 388+ 9001              segcuad
 389+ 9001 3E 02        	ld a,2
 390+ 9003 32 A0 89     	ld (Cuad_objeto),a
 391+ 9006 21 C0 4F     	ld hl,$4fc0
 392+ 9009 22 B0 89     	ld (Limite_horizontal),hl
 393+ 900C 21 B2 89     	ld hl,Limite_vertical
 394+ 900F 36 0D        	ld (hl),$0d
 395+ 9011 08           	ex af,af
 396+ 9012 18 11        	jr 1F
 397+ 9014              primcuad
 398+ 9014 3E 01        	ld a,1
 399+ 9016 32 A0 89     	ld (Cuad_objeto),a
 400+ 9019 21 C0 4F     	ld hl,$4fc0
 401+ 901C 22 B0 89     	ld (Limite_horizontal),hl
 402+ 901F 21 B2 89     	ld hl,Limite_vertical
 403+ 9022 36 12        	ld (hl),$12
 404+ 9024 08           	ex af,af
 405+ 9025
 406+ 9025 C5           1 push bc
 407+ 9026 E5           	push hl
 408+ 9027 D5           	push de
 409+ 9028
 410+ 9028 2A 8E 89     	ld hl,(Posicion_actual)
 411+ 902B CD B2 99     	call Genera_coordenadas
 412+ 902E
 413+ 902E D1           	pop de
 414+ 902F E1           	pop hl
 415+ 9030 C1           	pop bc
 416+ 9031
 417+ 9031 21 AE 89     	ld hl,Ctrl_0
 418+ 9034 CB EE        	set 5,(hl)
 419+ 9036 C9           	ret
 420+ 9037
 421+ 9037              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9037
 423+ 9037              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9037              ;
 425+ 9037              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9037
 427+ 9037 7D           column ld a,l
 428+ 9038 E6 1F        	and $1f
 429+ 903A FE 10         	cp $10
 430+ 903C C9            	ret
 431+ 903D
 432+ 903D              ; --------------------------------------------------------------------------------------------------------------------
 433+ 903D              ;
 434+ 903D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 903D              ;
 436+ 903D              ; 14/12/22
 437+ 903D              ;
 438+ 903D              ;	Modifica: A y BC.
 439+ 903D
 440+ 903D 3A A0 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9040 E6 01        	and 1
 442+ 9042 28 17        	jr z,1F
 443+ 9044
 444+ 9044              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9044
 446+ 9044 3A 92 89     	ld a,(Coordenada_X)
 447+ 9047 47           	ld b,a
 448+ 9048 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9049 79           	ld a,c
 450+ 904A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 904B 38 08        	jr c,2F
 452+ 904D 47           	ld b,a
 453+ 904E 79           	ld a,c
 454+ 904F 90           	sub b
 455+ 9050 32 AF 89     	ld (Columnas),a
 456+ 9053 18 1B        	jr 4F
 457+ 9055 79           2 ld a,c
 458+ 9056 32 AF 89     	ld (Columnas),a
 459+ 9059 18 15        	jr 4F
 460+ 905B
 461+ 905B              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 905B
 463+ 905B 3A 92 89     1 ld a,(Coordenada_X)
 464+ 905E 81           	add c
 465+ 905F 3D           	dec a
 466+ 9060 D6 1F        	sub $1f
 467+ 9062 38 08        	jr c,3F
 468+ 9064 47           	ld b,a
 469+ 9065 79           	ld a,c
 470+ 9066 90           	sub b
 471+ 9067 32 AF 89     	ld (Columnas),a
 472+ 906A 18 04        	jr 4F
 473+ 906C 79           3 ld a,c
 474+ 906D 32 AF 89     	ld (Columnas),a
 475+ 9070 D9           4 exx
 476+ 9071 4F           	ld c,a
 477+ 9072 D9           	exx
 478+ 9073 C9            ret
 479+ 9074
 480+ 9074              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9074              ;
 482+ 9074              ;   19/7/23
 483+ 9074              ;
 484+ 9074              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9074              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9074              ;
 487+ 9074              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9074              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9074              ;
 490+ 9074              ;	DESTRUYE: HL,B Y A.
 491+ 9074
 492+ 9074 3A A0 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9077 FE 02        	cp 2
 494+ 9079 38 18        	jr c,1F
 495+ 907B 28 16        	jr z,1F
 496+ 907D E6 01        	and 1
 497+ 907F 28 0D        	jr z,3F
 498+ 9081
 499+ 9081              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9081
 501+ 9081 CD C7 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9084
 503+ 9084 7D           9 ld a,l
 504+ 9085 E6 1F        	and $1f
 505+ 9087 28 2A        	jr z,7F
 506+ 9089 2B           	dec hl
 507+ 908A 10 F8        	djnz 9B
 508+ 908C 18 25        	jr 7F
 509+ 908E
 510+ 908E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 908E
 512+ 908E 2A 8E 89     3 ld hl,(Posicion_actual)
 513+ 9091 18 20        	jr 7F
 514+ 9093
 515+ 9093 28 14        1 jr z,2F
 516+ 9095
 517+ 9095              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9095
 519+ 9095 CD C7 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9098
 521+ 9098 7D           4 ld a,l
 522+ 9099 E6 1F        	and $1f
 523+ 909B 28 03        	jr z,6F
 524+ 909D 2B           	dec hl
 525+ 909E 10 F8        	djnz 4B
 526+ 90A0 06 0F        6 ld b,15
 527+ 90A2 CD 28 91     5 call PreviousScan
 528+ 90A5 10 FB        	djnz 5B
 529+ 90A7 18 0A        	jr 7F
 530+ 90A9
 531+ 90A9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 90A9
 533+ 90A9 CD C7 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 90AC 06 0F        	ld b,15
 535+ 90AE CD 28 91     8 call PreviousScan
 536+ 90B1 10 FB        	djnz 8B
 537+ 90B3
 538+ 90B3 E5           7 push hl
 539+ 90B4 DD E1        	pop ix
 540+ 90B6
 541+ 90B6 2A 90 89     	ld hl,(Puntero_objeto)
 542+ 90B9 E5           	push hl
 543+ 90BA FD E1        	pop iy
 544+ 90BC
 545+ 90BC              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 90BC
 547+ 90BC 3A AE 89     	ld a,(Ctrl_0)
 548+ 90BF CB 77        	bit 6,a
 549+ 90C1 C8           	ret z
 550+ 90C2
 551+ 90C2              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 90C2              ; _ entidad / Amadeus´.
 553+ 90C2
 554+ 90C2 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 90C6
 556+ 90C6 C9           	ret
 557+ 90C7
 558+ 90C7              ; --------------------------------------------------------------------------------------------------------------------
 559+ 90C7              ;
 560+ 90C7              ;	2/1/23
 561+ 90C7              ;
 562+ 90C7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 90C7              ;
 564+ 90C7              ;	Tras esta rutina tenemos:
 565+ 90C7              ;
 566+ 90C7              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 90C7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 90C7              ;
 569+ 90C7              ;	DESTRUYE!!!!! HL,B y A.
 570+ 90C7
 571+ 90C7 2A 8E 89     Operandos ld hl,(Posicion_actual)
 572+ 90CA 3A AF 89     	ld a,(Columnas)
 573+ 90CD 3D           	dec a
 574+ 90CE 20 01        	jr nz,1F
 575+ 90D0 3C           	inc a
 576+ 90D1 47           1 ld b,a
 577+ 90D2 C9           	ret
 578+ 90D3
 579+ 90D3              ; --------------------------------------------------------------------------------------------------------------------
 580+ 90D3              ;
 581+ 90D3              ;	3/1/23
 582+ 90D3              ;
 583+ 90D3              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 90D3              ;
 585+ 90D3              ;	Destruye: A,B,HL y DE.
 586+ 90D3
 587+ 90D3              Define_rutina_de_impresion
 588+ 90D3
 589+ 90D3 3A 8D 89     	ld a,(Columns)
 590+ 90D6 47           	ld b,a
 591+ 90D7 3A AF 89     	ld a,(Columnas)
 592+ 90DA B8           	cp b
 593+ 90DB 20 0D        	jr nz,2f
 594+ 90DD
 595+ 90DD              ;	La entidad se imprime entera.
 596+ 90DD
 597+ 90DD 21 7C 91     	ld hl, Indice_entidades_completas
 598+ 90E0 E6 01        	and 1
 599+ 90E2 28 02        	jr z,1F
 600+ 90E4
 601+ 90E4 23           	inc hl
 602+ 90E5 23           	inc hl
 603+ 90E6
 604+ 90E6 CD 8B 8B     1 call Extrae_address
 605+ 90E9 C9           	ret		;	ret
 606+ 90EA
 607+ 90EA              ;	La entidad no se imprime entera en pantalla.
 608+ 90EA
 609+ 90EA 3A A0 89     2 ld a,(Cuad_objeto)
 610+ 90ED E6 01        	and 1
 611+ 90EF 28 17        	jr z,3F
 612+ 90F1
 613+ 90F1              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 90F1
 615+ 90F1 21 80 91     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 90F4 3A 8D 89     4 ld a,(Columns)
 617+ 90F7 E6 01        	and 1
 618+ 90F9 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 90FB
 620+ 90FB 23           	inc hl
 621+ 90FC 23           	inc hl
 622+ 90FD
 623+ 90FD 3A AF 89     	ld a,(Columnas)
 624+ 9100 E6 01        	and 1
 625+ 9102 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9104
 627+ 9104 23           	inc hl
 628+ 9105 23           	inc hl
 629+ 9106
 630+ 9106 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 9108
 632+ 9108 21 86 91     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 910B 18 E7        	jr 4B
 634+ 910D
 635+ 910D              ; --------------------------------------------------------------------------------------------------------------------
 636+ 910D              ;
 637+ 910D              ;	Prepara_draw
 638+ 910D              ;
 639+ 910D              ;	Es una rutina de carga.
 640+ 910D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 910D              ;
 642+ 910D              ;	FUNCIONAMIENTO:
 643+ 910D              ;
 644+ 910D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 910D              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 910D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 910D              ;
 648+ 910D              ;	DESTRUYE:
 649+ 910D              ;
 650+ 910D              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 910D
 652+ 910D 21 8C 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9110 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9111 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9112 4E           	ld c,(hl)
 656+ 9113 2A 8E 89     	ld hl,(Posicion_actual)
 657+ 9116 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9118 C9           	ret
 659+ 9119
 660+ 9119              ;----------------------------------------------------------------------------------------------------------------
 661+ 9119              ;
 662+ 9119              ;	5/08/22
 663+ 9119              ;
 664+ 9119              ;   NextScan.
 665+ 9119              ;
 666+ 9119              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 9119              ;
 668+ 9119              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 9119              ;
 670+ 9119              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9119              ;
 672+ 9119              ;       DESTRUIDOS: AF y HL !!!
 673+ 9119              ;
 674+ 9119              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9119              ;
 676+ 9119
 677+ 9119 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 911A 7C               ld a,h
 679+ 911B E6 07            and 7
 680+ 911D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 911E
 682+ 911E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 911F C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9121 6F               ld l,a
 685+ 9122 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9123
 687+ 9123 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9124 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9126 67               ld h,a
 690+ 9127 C9               ret
 691+ 9128
 692+ 9128              ;----------------------------------------------------------------------------------------------------------------
 693+ 9128              ;
 694+ 9128              ;	5/08/22
 695+ 9128              ;
 696+ 9128              ;   PreviousScan.
 697+ 9128              ;
 698+ 9128              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9128              ;
 700+ 9128              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9128              ;
 702+ 9128              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9128              ;
 704+ 9128              ;       DESTRUIDOS: AF y HL !!!
 705+ 9128              ;
 706+ 9128              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9128              ;
 708+ 9128
 709+ 9128 7C           PreviousScan ld a,h
 710+ 9129 25               dec h               ; Dec H.
 711+ 912A E6 07            and 7
 712+ 912C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 912D
 714+ 912D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 912E D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9130 6F               ld l,a
 717+ 9131 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9132
 719+ 9132 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9133 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9135 67               ld h,a
 722+ 9136 C9               ret
 723+ 9137
 724+ 9137              ; -----------------------------------------------------------------------------------
 725+ 9137              ;
 726+ 9137              ;	31/7/23
 727+ 9137              ;
 728+ 9137              ;	Rutina principal de pintado de entidades.
 729+ 9137              ;	Extrae la foto del frame, (entidades).
 730+ 9137
 731+ 9137              Extrae_Scanlines_album
 732+ 9137
 733+ 9137 21 01 80     	ld hl,Scanlines_album+1
 734+ 913A 7E           	ld a,(hl)
 735+ 913B A7           	and a
 736+ 913C C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 913D
 738+ 913D              ;	No hay datos, (entidades para pintar en este frame).
 739+ 913D
 740+ 913D 3A D9 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9140 A7           	and a
 742+ 9141 C8           	ret z
 743+ 9142
 744+ 9142              ; -----------------------------------
 745+ 9142
 746+ 9142 ED 73 DE 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 9146 31 00 80     	ld sp,Scanlines_album
 748+ 9149
 749+ 9149 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 914B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 914C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 914D
 753+ 914D ED 73 E0 89  	ld (Stack_2),sp
 754+ 9151 ED 7B DE 89  	ld sp,(Stack)
 755+ 9155
 756+ 9155              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9155
 758+ 9155 3E CD        	ld a,$cd
 759+ 9157 32 5F 91     	ld (Imprime),a
 760+ 915A EB           	ex de,hl
 761+ 915B 22 60 91     	ld (Imprime+1),hl
 762+ 915E EB           	ex de,hl
 763+ 915F
 764+ 915F              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 915F
 766+ 915F 00 00 00     Imprime db 0,0,0
 767+ 9162
 768+ 9162 ED 73 DE 89  	ld (Stack),sp
 769+ 9166
 770+ 9166 3A D9 89     	ld a,(Numero_de_malotes)
 771+ 9169 3D           	dec a
 772+ 916A 28 09        	jr z,1F
 773+ 916C 32 D9 89      	ld (Numero_de_malotes),a
 774+ 916F
 775+ 916F ED 7B E0 89  	ld sp,(Stack_2)
 776+ 9173 18 D4        	jr 2B
 777+ 9175
 778+ 9175 AF           1 xor a
 779+ 9176 32 E0 89     	ld (Stack_2),a
 780+ 9179
 781+ 9179 C9           	ret
 782+ 917A
 783+ 917A              ; -----------------------------------------------------------------------------------
 784+ 917A              ;
 785+ 917A              ;	28/2/23
 786+ 917A              ;
 787+ 917A              ;	Pinta los disparos generados.
 788+ 917A
 789+ 917A              ;Extrae_foto_disparos
 790+ 917A
 791+ 917A              ;	ld hl,Scanlines_album_disparos+1
 792+ 917A              ;    ld a,(hl)
 793+ 917A              ;    and a
 794+ 917A              ;    ret z
 795+ 917A
 796+ 917A              ;	ld a,(Numero_de_disparotes)
 797+ 917A              ;	and a
 798+ 917A              ;	ret z
 799+ 917A              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 917A              ;	ld sp,Scanlines_album_disparos
 801+ 917A
 802+ 917A              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 917A              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 917A              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 917A
 806+ 917A              ;	ld (Stack_2),sp
 807+ 917A              ;	ld sp,(Stack)
 808+ 917A
 809+ 917A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 917A
 811+ 917A              ;	ld a,$cd
 812+ 917A              ;	ld (Imprime2),a
 813+ 917A              ;	ex de,hl
 814+ 917A              ;	ld (Imprime2+1),hl
 815+ 917A              ;	ex de,hl
 816+ 917A
 817+ 917A              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 917A
 819+ 917A              ;Imprime2 db 0,0,0
 820+ 917A
 821+ 917A              ;	ld a,(Numero_de_disparotes)
 822+ 917A              ;	dec a
 823+ 917A              ;	jr z,1F
 824+ 917A              ; 	ld (Numero_de_disparotes),a
 825+ 917A
 826+ 917A              ;	ld sp,(Stack_2)
 827+ 917A              ;	jr 2B
 828+ 917A
 829+ 917A              ;1 xor a
 830+ 917A              ;	ld (Stack_2),a
 831+ 917A              ;	ret
 832+ 917A
 833+ 917A              ; -----------------------------------------------------------------------------------
 834+ 917A              ;
 835+ 917A              ;	4/9/23
 836+ 917A              ;
 837+ 917A              ;	Rutina principal de pintado de Amadeus.
 838+ 917A              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 917A
 840+ 917A              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 917A              ;	ld a,(hl)
 842+ 917A              ;	and a
 843+ 917A              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 917A
 845+ 917A              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 917A              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 917A              ;	ret z
 848+ 917A
 849+ 917A              ; -----------------------------------
 850+ 917A
 851+ 917A              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 917A              ;	ld sp,Scanlines_album_Amadeus
 853+ 917A
 854+ 917A              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 917A              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 917A              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 917A
 858+ 917A              ;	ld (Stack_2),sp
 859+ 917A              ;	ld sp,(Stack)
 860+ 917A
 861+ 917A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 917A
 863+ 917A              ;	ld a,$cd
 864+ 917A              ;	ld (Imprime_Amadeus),a
 865+ 917A              ;	ex de,hl
 866+ 917A              ;	ld (Imprime_Amadeus+1),hl
 867+ 917A              ;	ex de,hl
 868+ 917A
 869+ 917A              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 917A
 871+ 917A              ;Imprime_Amadeus db 0,0,0
 872+ 917A
 873+ 917A              ;	ld (Stack),sp
 874+ 917A
 875+ 917A              ;	ld a,(Numero_de_malotes)
 876+ 917A              ;	dec a
 877+ 917A              ;	jr z,1F
 878+ 917A              ; 	ld (Numero_de_malotes),a
 879+ 917A
 880+ 917A              ;	ld sp,(Stack_2)
 881+ 917A              ;	jr 2B
 882+ 917A
 883+ 917A              ;1 xor a
 884+ 917A              ;	ld (Stack_2),a
 885+ 917A
 886+ 917A              ;	ret
 887+ 917A
 888+ 917A              ; -----------------------------------------------------------------------------------
 889+ 917A              ;
 890+ 917A              ;	04/03/24
 891+ 917A              ;
 892+ 917A              ;	Borra los sprites impresos en pantalla.
 893+ 917A              ;
 894+ 917A
 895+ 917A              ;Limpia_semaforo
 896+ 917A
 897+ 917A              ;	xor a
 898+ 917A              ;	ld b,8
 899+ 917A              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 900+ 917A              ;1 ld (hl),a
 901+ 917A              ;	inc l
 902+ 917A              ;	djnz 1B
 903+ 917A              ;	ret
 904+ 917A
 905+ 917A              ; -----------------------------------------------------------------------------------
 906+ 917A              ;
 907+ 917A              ;	06/03/24
 908+ 917A              ;
 909+ 917A              ;
 910+ 917A              ;
 911+ 917A
 912+ 917A 18 FE        Pinta_Sprites jr $
 913+ 917C
 914+ 917C
 915+ 917C
 916+ 917C
 917+ 917C
 918+ 917C              ; -----------------------------------------------------------------------------------
 919+ 917C              ;
 920+ 917C              ;	01/03/24
 921+ 917C              ;
 922+ 917C              ;	Borra los sprites impresos en pantalla.
 923+ 917C              ;
 924+ 917C
 925+ 917C              ;Borra_sprites
 926+ 917C
 927+ 917C              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 928+ 917C              ;	ld a,(hl)
 929+ 917C              ;	and a
 930+ 917C              ;	ret z 																	; Salimos si no hay scanlines en el álbum.
 931+ 917C
 932+ 917C              ;	No hay datos, (entidades para pintar en este frame).
 933+ 917C
 934+ 917C              ;	ld a,(Numero_de_malotes)												; No se ha producido movimiento.
 935+ 917C              ;	and a																	; NO BORRAMOS !!!
 936+ 917C              ;	ret z
 937+ 917C
 938+ 917C              ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 939+ 917C
 940+ 917C              ;Retorno	exx
 941+ 917C              ;	ld a,(hl)
 942+ 917C              ;	inc l
 943+ 917C              ;	exx
 944+ 917C              ;	dec a
 945+ 917C
 946+ 917C              ;	jr z,Borra_2x2
 947+ 917C              ;	jp Borra_3x2
 948+ 917C
 949+ 917C
# file closed: Draw_XOR.asm
1949  917C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 917C              ;   índices de Rutinas de impresión.
   2+ 917C
   3+ 917C 8C 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 917E 20 92            defw Pinta_Amadeus_3x2
   5+ 9180
   6+ 9180 F4 92        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9182 94 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9184 48 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9186
  10+ 9186 1E 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9188 22 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 918A D6 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 918C
  14+ 918C
  15+ 918C              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 918C              ;
  17+ 918C              ;   28/2/24
  18+ 918C              ;
  19+ 918C              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 918C              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 918C              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 918C              ;
  23+ 918C              ;   Modifica: AF,HL,BC y DE.
  24+ 918C
  25+ 918C              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 918C
  27+ 918C D9               exx
  28+ 918D 36 01            ld (hl),1
  29+ 918F 2C               inc l
  30+ 9190 D9               exx
  31+ 9191
  32+ 9191 FD E5            push iy
  33+ 9193 D1               pop de
  34+ 9194
  35+ 9194 ED 73 DE 89      ld (Stack),sp
  36+ 9198 F9           	ld sp,hl
  37+ 9199 06 10            ld b,16
  38+ 919B
  39+ 919B E1               pop hl
  40+ 919C 1A               ld a,(de)
  41+ 919D 77               ld (hl),a
  42+ 919E 1C           	inc e
  43+ 919F 2C               inc l
  44+ 91A0 1A               ld a,(de)
  45+ 91A1 77               ld (hl),a
  46+ 91A2 1C               inc e
  47+ 91A3
  48+ 91A3 E1               pop hl
  49+ 91A4 1A               ld a,(de)
  50+ 91A5 77               ld (hl),a
  51+ 91A6 1C           	inc e
  52+ 91A7 2C               inc l
  53+ 91A8 1A               ld a,(de)
  54+ 91A9 77               ld (hl),a
  55+ 91AA 1C               inc e
  56+ 91AB
  57+ 91AB E1               pop hl
  58+ 91AC 1A               ld a,(de)
  59+ 91AD 77               ld (hl),a
  60+ 91AE 1C           	inc e
  61+ 91AF 2C               inc l
  62+ 91B0 1A               ld a,(de)
  63+ 91B1 77               ld (hl),a
  64+ 91B2 1C               inc e
  65+ 91B3
  66+ 91B3 E1               pop hl
  67+ 91B4 1A               ld a,(de)
  68+ 91B5 77               ld (hl),a
  69+ 91B6 1C           	inc e
  70+ 91B7 2C               inc l
  71+ 91B8 1A               ld a,(de)
  72+ 91B9 77               ld (hl),a
  73+ 91BA 1C               inc e
  74+ 91BB
  75+ 91BB E1               pop hl
  76+ 91BC 1A               ld a,(de)
  77+ 91BD 77               ld (hl),a
  78+ 91BE 1C           	inc e
  79+ 91BF 2C               inc l
  80+ 91C0 1A               ld a,(de)
  81+ 91C1 77               ld (hl),a
  82+ 91C2 1C               inc e
  83+ 91C3
  84+ 91C3 E1               pop hl
  85+ 91C4 1A               ld a,(de)
  86+ 91C5 77               ld (hl),a
  87+ 91C6 1C           	inc e
  88+ 91C7 2C               inc l
  89+ 91C8 1A               ld a,(de)
  90+ 91C9 77               ld (hl),a
  91+ 91CA 1C               inc e
  92+ 91CB
  93+ 91CB E1               pop hl
  94+ 91CC 1A               ld a,(de)
  95+ 91CD 77               ld (hl),a
  96+ 91CE 1C           	inc e
  97+ 91CF 2C               inc l
  98+ 91D0 1A               ld a,(de)
  99+ 91D1 77               ld (hl),a
 100+ 91D2 1C               inc e
 101+ 91D3
 102+ 91D3 E1               pop hl
 103+ 91D4 1A               ld a,(de)
 104+ 91D5 77               ld (hl),a
 105+ 91D6 1C           	inc e
 106+ 91D7 2C               inc l
 107+ 91D8 1A               ld a,(de)
 108+ 91D9 77               ld (hl),a
 109+ 91DA 1C               inc e
 110+ 91DB
 111+ 91DB E1               pop hl
 112+ 91DC 1A               ld a,(de)
 113+ 91DD 77               ld (hl),a
 114+ 91DE 1C           	inc e
 115+ 91DF 2C               inc l
 116+ 91E0 1A               ld a,(de)
 117+ 91E1 77               ld (hl),a
 118+ 91E2 1C               inc e
 119+ 91E3
 120+ 91E3 E1               pop hl
 121+ 91E4 1A               ld a,(de)
 122+ 91E5 77               ld (hl),a
 123+ 91E6 1C           	inc e
 124+ 91E7 2C               inc l
 125+ 91E8 1A               ld a,(de)
 126+ 91E9 77               ld (hl),a
 127+ 91EA 1C               inc e
 128+ 91EB
 129+ 91EB E1               pop hl
 130+ 91EC 1A               ld a,(de)
 131+ 91ED 77               ld (hl),a
 132+ 91EE 1C           	inc e
 133+ 91EF 2C               inc l
 134+ 91F0 1A               ld a,(de)
 135+ 91F1 77               ld (hl),a
 136+ 91F2 1C               inc e
 137+ 91F3
 138+ 91F3 E1               pop hl
 139+ 91F4 1A               ld a,(de)
 140+ 91F5 77               ld (hl),a
 141+ 91F6 1C           	inc e
 142+ 91F7 2C               inc l
 143+ 91F8 1A               ld a,(de)
 144+ 91F9 77               ld (hl),a
 145+ 91FA 1C               inc e
 146+ 91FB
 147+ 91FB E1               pop hl
 148+ 91FC 1A               ld a,(de)
 149+ 91FD 77               ld (hl),a
 150+ 91FE 1C           	inc e
 151+ 91FF 2C               inc l
 152+ 9200 1A               ld a,(de)
 153+ 9201 77               ld (hl),a
 154+ 9202 1C               inc e
 155+ 9203
 156+ 9203 E1               pop hl
 157+ 9204 1A               ld a,(de)
 158+ 9205 77               ld (hl),a
 159+ 9206 1C           	inc e
 160+ 9207 2C               inc l
 161+ 9208 1A               ld a,(de)
 162+ 9209 77               ld (hl),a
 163+ 920A 1C               inc e
 164+ 920B
 165+ 920B E1               pop hl
 166+ 920C 1A               ld a,(de)
 167+ 920D 77               ld (hl),a
 168+ 920E 1C           	inc e
 169+ 920F 2C               inc l
 170+ 9210 1A               ld a,(de)
 171+ 9211 77               ld (hl),a
 172+ 9212 1C               inc e
 173+ 9213
 174+ 9213 E1               pop hl
 175+ 9214 1A               ld a,(de)
 176+ 9215 77               ld (hl),a
 177+ 9216 1C           	inc e
 178+ 9217 2C               inc l
 179+ 9218 1A               ld a,(de)
 180+ 9219 77               ld (hl),a
 181+ 921A 1C               inc e
 182+ 921B
 183+ 921B ED 7B DE 89      ld sp,(Stack)
 184+ 921F
 185+ 921F C9           	ret
 186+ 9220
 187+ 9220              Pinta_Amadeus_3x2
 188+ 9220
 189+ 9220 D9               exx
 190+ 9221 36 02            ld (hl),2
 191+ 9223 2C               inc l
 192+ 9224 D9               exx
 193+ 9225
 194+ 9225 FD E5            push iy
 195+ 9227 D1               pop de
 196+ 9228
 197+ 9228 ED 73 DE 89      ld (Stack),sp
 198+ 922C F9               ld sp,hl
 199+ 922D 06 10            ld b,16
 200+ 922F
 201+ 922F E1               pop hl
 202+ 9230 1A               ld a,(de)
 203+ 9231 77               ld (hl),a
 204+ 9232 1C               inc e
 205+ 9233 2C               inc l
 206+ 9234 1A               ld a,(de)
 207+ 9235 77               ld (hl),a
 208+ 9236 1C               inc e
 209+ 9237 2C               inc l
 210+ 9238 1A               ld a,(de)
 211+ 9239 77               ld (hl),a
 212+ 923A 1C               inc e
 213+ 923B
 214+ 923B E1               pop hl
 215+ 923C 1A               ld a,(de)
 216+ 923D 77               ld (hl),a
 217+ 923E 1C               inc e
 218+ 923F 2C               inc l
 219+ 9240 1A               ld a,(de)
 220+ 9241 77               ld (hl),a
 221+ 9242 1C               inc e
 222+ 9243 2C               inc l
 223+ 9244 1A               ld a,(de)
 224+ 9245 77               ld (hl),a
 225+ 9246 1C               inc e
 226+ 9247
 227+ 9247 E1               pop hl
 228+ 9248 1A               ld a,(de)
 229+ 9249 77               ld (hl),a
 230+ 924A 1C               inc e
 231+ 924B 2C               inc l
 232+ 924C 1A               ld a,(de)
 233+ 924D 77               ld (hl),a
 234+ 924E 1C               inc e
 235+ 924F 2C               inc l
 236+ 9250 1A               ld a,(de)
 237+ 9251 77               ld (hl),a
 238+ 9252 1C               inc e
 239+ 9253
 240+ 9253 E1               pop hl
 241+ 9254 1A               ld a,(de)
 242+ 9255 77               ld (hl),a
 243+ 9256 1C               inc e
 244+ 9257 2C               inc l
 245+ 9258 1A               ld a,(de)
 246+ 9259 77               ld (hl),a
 247+ 925A 1C               inc e
 248+ 925B 2C               inc l
 249+ 925C 1A               ld a,(de)
 250+ 925D 77               ld (hl),a
 251+ 925E 1C               inc e
 252+ 925F
 253+ 925F E1               pop hl
 254+ 9260 1A               ld a,(de)
 255+ 9261 77               ld (hl),a
 256+ 9262 1C               inc e
 257+ 9263 2C               inc l
 258+ 9264 1A               ld a,(de)
 259+ 9265 77               ld (hl),a
 260+ 9266 1C               inc e
 261+ 9267 2C               inc l
 262+ 9268 1A               ld a,(de)
 263+ 9269 77               ld (hl),a
 264+ 926A 1C               inc e
 265+ 926B
 266+ 926B E1               pop hl
 267+ 926C 1A               ld a,(de)
 268+ 926D 77               ld (hl),a
 269+ 926E 1C               inc e
 270+ 926F 2C               inc l
 271+ 9270 1A               ld a,(de)
 272+ 9271 77               ld (hl),a
 273+ 9272 1C               inc e
 274+ 9273 2C               inc l
 275+ 9274 1A               ld a,(de)
 276+ 9275 77               ld (hl),a
 277+ 9276 1C               inc e
 278+ 9277
 279+ 9277 E1               pop hl
 280+ 9278 1A               ld a,(de)
 281+ 9279 77               ld (hl),a
 282+ 927A 1C               inc e
 283+ 927B 2C               inc l
 284+ 927C 1A               ld a,(de)
 285+ 927D 77               ld (hl),a
 286+ 927E 1C               inc e
 287+ 927F 2C               inc l
 288+ 9280 1A               ld a,(de)
 289+ 9281 77               ld (hl),a
 290+ 9282 1C               inc e
 291+ 9283
 292+ 9283 E1               pop hl
 293+ 9284 1A               ld a,(de)
 294+ 9285 77               ld (hl),a
 295+ 9286 1C               inc e
 296+ 9287 2C               inc l
 297+ 9288 1A               ld a,(de)
 298+ 9289 77               ld (hl),a
 299+ 928A 1C               inc e
 300+ 928B 2C               inc l
 301+ 928C 1A               ld a,(de)
 302+ 928D 77               ld (hl),a
 303+ 928E 1C               inc e
 304+ 928F
 305+ 928F E1               pop hl
 306+ 9290 1A               ld a,(de)
 307+ 9291 77               ld (hl),a
 308+ 9292 1C               inc e
 309+ 9293 2C               inc l
 310+ 9294 1A               ld a,(de)
 311+ 9295 77               ld (hl),a
 312+ 9296 1C               inc e
 313+ 9297 2C               inc l
 314+ 9298 1A               ld a,(de)
 315+ 9299 77               ld (hl),a
 316+ 929A 1C               inc e
 317+ 929B
 318+ 929B E1               pop hl
 319+ 929C 1A               ld a,(de)
 320+ 929D 77               ld (hl),a
 321+ 929E 1C               inc e
 322+ 929F 2C               inc l
 323+ 92A0 1A               ld a,(de)
 324+ 92A1 77               ld (hl),a
 325+ 92A2 1C               inc e
 326+ 92A3 2C               inc l
 327+ 92A4 1A               ld a,(de)
 328+ 92A5 77               ld (hl),a
 329+ 92A6 1C               inc e
 330+ 92A7
 331+ 92A7 E1               pop hl
 332+ 92A8 1A               ld a,(de)
 333+ 92A9 77               ld (hl),a
 334+ 92AA 1C               inc e
 335+ 92AB 2C               inc l
 336+ 92AC 1A               ld a,(de)
 337+ 92AD 77               ld (hl),a
 338+ 92AE 1C               inc e
 339+ 92AF 2C               inc l
 340+ 92B0 1A               ld a,(de)
 341+ 92B1 77               ld (hl),a
 342+ 92B2 1C               inc e
 343+ 92B3
 344+ 92B3 E1               pop hl
 345+ 92B4 1A               ld a,(de)
 346+ 92B5 77               ld (hl),a
 347+ 92B6 1C               inc e
 348+ 92B7 2C               inc l
 349+ 92B8 1A               ld a,(de)
 350+ 92B9 77               ld (hl),a
 351+ 92BA 1C               inc e
 352+ 92BB 2C               inc l
 353+ 92BC 1A               ld a,(de)
 354+ 92BD 77               ld (hl),a
 355+ 92BE 1C               inc e
 356+ 92BF
 357+ 92BF E1               pop hl
 358+ 92C0 1A               ld a,(de)
 359+ 92C1 77               ld (hl),a
 360+ 92C2 1C               inc e
 361+ 92C3 2C               inc l
 362+ 92C4 1A               ld a,(de)
 363+ 92C5 77               ld (hl),a
 364+ 92C6 1C               inc e
 365+ 92C7 2C               inc l
 366+ 92C8 1A               ld a,(de)
 367+ 92C9 77               ld (hl),a
 368+ 92CA 1C               inc e
 369+ 92CB
 370+ 92CB E1               pop hl
 371+ 92CC 1A               ld a,(de)
 372+ 92CD 77               ld (hl),a
 373+ 92CE 1C               inc e
 374+ 92CF 2C               inc l
 375+ 92D0 1A               ld a,(de)
 376+ 92D1 77               ld (hl),a
 377+ 92D2 1C               inc e
 378+ 92D3 2C               inc l
 379+ 92D4 1A               ld a,(de)
 380+ 92D5 77               ld (hl),a
 381+ 92D6 1C               inc e
 382+ 92D7
 383+ 92D7 E1               pop hl
 384+ 92D8 1A               ld a,(de)
 385+ 92D9 77               ld (hl),a
 386+ 92DA 1C               inc e
 387+ 92DB 2C               inc l
 388+ 92DC 1A               ld a,(de)
 389+ 92DD 77               ld (hl),a
 390+ 92DE 1C               inc e
 391+ 92DF 2C               inc l
 392+ 92E0 1A               ld a,(de)
 393+ 92E1 77               ld (hl),a
 394+ 92E2 1C               inc e
 395+ 92E3
 396+ 92E3 E1               pop hl
 397+ 92E4 1A               ld a,(de)
 398+ 92E5 77               ld (hl),a
 399+ 92E6 1C               inc e
 400+ 92E7 2C               inc l
 401+ 92E8 1A               ld a,(de)
 402+ 92E9 77               ld (hl),a
 403+ 92EA 1C               inc e
 404+ 92EB 2C               inc l
 405+ 92EC 1A               ld a,(de)
 406+ 92ED 77               ld (hl),a
 407+ 92EE 1C               inc e
 408+ 92EF
 409+ 92EF ED 7B DE 89      ld sp,(Stack)
 410+ 92F3
 411+ 92F3 C9               ret
 412+ 92F4
 413+ 92F4              ; ---------------------------------------------------
 414+ 92F4
 415+ 92F4 ED 73 DE 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 92F8 FD F9        	ld sp,iy
 417+ 92FA
 418+ 92FA              ; >>>
 419+ 92FA
 420+ 92FA 06 10            ld b,16
 421+ 92FC D1           1 pop de
 422+ 92FD 7A           	ld a,d
 423+ 92FE AE           	xor (hl)
 424+ 92FF 77           	ld (hl),a
 425+ 9300 24           	inc h
 426+ 9301 7C               ld a,h
 427+ 9302 E6 07            and 7
 428+ 9304 20 0C            jr nz,2F
 429+ 9306 7D               ld a,l
 430+ 9307 C6 20            add a,$20
 431+ 9309 6F               ld l,a
 432+ 930A 38 06            jr c,2F
 433+ 930C 7C               ld a,h
 434+ 930D D6 08            sub 8
 435+ 930F 67               ld h,a
 436+ 9310 18 00            jr 2F
 437+ 9312 7C           2 ld a,h
 438+ 9313 FE 58            cp $58
 439+ 9315 28 02            jr z,3F
 440+ 9317 10 E3            djnz 1B
 441+ 9319 ED 7B DE 89  3 ld sp,(Stack)
 442+ 931D C9           	ret
 443+ 931E
 444+ 931E ED 73 DE 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 9322 FD F9        	ld sp,iy
 446+ 9324
 447+ 9324              ; >>>
 448+ 9324
 449+ 9324 06 10            ld b,16
 450+ 9326 D1           1 pop de
 451+ 9327 7B           	ld a,e
 452+ 9328 AE           	xor (hl)
 453+ 9329 77           	ld (hl),a
 454+ 932A 24           	inc h
 455+ 932B 7C               ld a,h
 456+ 932C E6 07            and 7
 457+ 932E 20 0C            jr nz,2F
 458+ 9330 7D               ld a,l
 459+ 9331 C6 20            add a,$20
 460+ 9333 6F               ld l,a
 461+ 9334 38 06            jr c,2F
 462+ 9336 7C               ld a,h
 463+ 9337 D6 08            sub 8
 464+ 9339 67               ld h,a
 465+ 933A 18 00            jr 2F
 466+ 933C 7C           2 ld a,h
 467+ 933D FE 58            cp $58
 468+ 933F 28 02            jr z,3F
 469+ 9341 10 E3            djnz 1B
 470+ 9343 ED 7B DE 89  3 ld sp,(Stack)
 471+ 9347 C9           	ret
 472+ 9348
 473+ 9348              ; ---------------------------------------------------
 474+ 9348
 475+ 9348 ED 73 DE 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 934C FD F9        	ld sp,iy
 477+ 934E 06 08            ld b,8
 478+ 9350 D1           1 pop de
 479+ 9351 7A           	ld a,d
 480+ 9352 AE           	xor (hl)
 481+ 9353 77           	ld (hl),a
 482+ 9354 23           	inc hl
 483+ 9355 D1           	pop de
 484+ 9356 7B           	ld a,e
 485+ 9357 AE           	xor (hl)
 486+ 9358 77           	ld (hl),a
 487+ 9359 2B           	dec hl
 488+ 935A 24            	inc h
 489+ 935B 7C               ld a,h
 490+ 935C E6 07            and 7
 491+ 935E 20 0A            jr nz,2F
 492+ 9360 7D               ld a,l
 493+ 9361 C6 20            add a,$20
 494+ 9363 6F               ld l,a
 495+ 9364 38 04            jr c,2F
 496+ 9366 7C               ld a,h
 497+ 9367 D6 08            sub 8
 498+ 9369 67               ld h,a
 499+ 936A 7C           2 ld a,h
 500+ 936B FE 58            cp $58
 501+ 936D 28 20            jr z,4F
 502+ 936F D1               pop de
 503+ 9370 7B           	ld a,e
 504+ 9371 AE           	xor (hl)
 505+ 9372 77           	ld (hl),a
 506+ 9373 23           	inc hl
 507+ 9374 7A           	ld a,d
 508+ 9375 AE           	xor (hl)
 509+ 9376 77           	ld (hl),a
 510+ 9377 2B           	dec hl
 511+ 9378 24           	inc h
 512+ 9379 7C               ld a,h
 513+ 937A E6 07            and 7
 514+ 937C 20 0A            jr nz,3F
 515+ 937E 7D               ld a,l
 516+ 937F C6 20            add a,$20
 517+ 9381 6F               ld l,a
 518+ 9382 38 04            jr c,3F
 519+ 9384 7C               ld a,h
 520+ 9385 D6 08            sub 8
 521+ 9387 67               ld h,a
 522+ 9388 7C           3 ld a,h
 523+ 9389 FE 58            cp $58
 524+ 938B 28 02            jr z,4F
 525+ 938D 10 C1            djnz 1B
 526+ 938F ED 7B DE 89  4 ld sp,(Stack)
 527+ 9393 C9           	ret
 528+ 9394
 529+ 9394 ED 73 DE 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 9398 FD F9        	ld sp,iy
 531+ 939A 06 08            ld b,8
 532+ 939C D1           1 pop de
 533+ 939D D1           	pop de
 534+ 939E 7B           	ld a,e
 535+ 939F AE           	xor (hl)
 536+ 93A0 77           	ld (hl),a
 537+ 93A1 24            	inc h
 538+ 93A2 7C               ld a,h
 539+ 93A3 E6 07            and 7
 540+ 93A5 20 0A            jr nz,2F
 541+ 93A7 7D               ld a,l
 542+ 93A8 C6 20            add a,$20
 543+ 93AA 6F               ld l,a
 544+ 93AB 38 04            jr c,2F
 545+ 93AD 7C               ld a,h
 546+ 93AE D6 08            sub 8
 547+ 93B0 67               ld h,a
 548+ 93B1 7C           2 ld a,h
 549+ 93B2 FE 58            cp $58
 550+ 93B4 28 1B            jr z,4F
 551+ 93B6 D1               pop de
 552+ 93B7 7A           	ld a,d
 553+ 93B8 AE           	xor (hl)
 554+ 93B9 77           	ld (hl),a
 555+ 93BA 24           	inc h
 556+ 93BB 7C               ld a,h
 557+ 93BC E6 07            and 7
 558+ 93BE 20 0A            jr nz,3F
 559+ 93C0 7D               ld a,l
 560+ 93C1 C6 20            add a,$20
 561+ 93C3 6F               ld l,a
 562+ 93C4 38 04            jr c,3F
 563+ 93C6 7C               ld a,h
 564+ 93C7 D6 08            sub 8
 565+ 93C9 67               ld h,a
 566+ 93CA 7C           3 ld a,h
 567+ 93CB FE 58            cp $58
 568+ 93CD 28 02            jr z,4F
 569+ 93CF 10 CB            djnz 1B
 570+ 93D1 ED 7B DE 89  4 ld sp,(Stack)
 571+ 93D5 C9           	ret
 572+ 93D6
 573+ 93D6 ED 73 DE 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 93DA FD F9        	ld sp,iy
 575+ 93DC 06 08            ld b,8
 576+ 93DE D1           1 pop de
 577+ 93DF 7B           	ld a,e
 578+ 93E0 AE           	xor (hl)
 579+ 93E1 77           	ld (hl),a
 580+ 93E2 23           	inc hl
 581+ 93E3 7A           	ld a,d
 582+ 93E4 AE           	xor (hl)
 583+ 93E5 77           	ld (hl),a
 584+ 93E6 2B           	dec hl
 585+ 93E7 24             	inc h
 586+ 93E8 7C               ld a,h
 587+ 93E9 E6 07            and 7
 588+ 93EB 20 0A            jr nz,2F
 589+ 93ED 7D               ld a,l
 590+ 93EE C6 20            add a,$20
 591+ 93F0 6F               ld l,a
 592+ 93F1 38 04            jr c,2F
 593+ 93F3 7C               ld a,h
 594+ 93F4 D6 08            sub 8
 595+ 93F6 67               ld h,a
 596+ 93F7 7C           2 ld a,h
 597+ 93F8 FE 58            cp $58
 598+ 93FA 28 21            jr z,4F
 599+ 93FC D1               pop de
 600+ 93FD 7A           	ld a,d
 601+ 93FE AE           	xor (hl)
 602+ 93FF 77           	ld (hl),a
 603+ 9400 23           	inc hl
 604+ 9401 D1               pop de
 605+ 9402 7B           	ld a,e
 606+ 9403 AE           	xor (hl)
 607+ 9404 77           	ld (hl),a
 608+ 9405 2B           	dec hl
 609+ 9406 24           	inc h
 610+ 9407 7C               ld a,h
 611+ 9408 E6 07            and 7
 612+ 940A 20 0A            jr nz,3F
 613+ 940C 7D               ld a,l
 614+ 940D C6 20            add a,$20
 615+ 940F 6F               ld l,a
 616+ 9410 38 04            jr c,3F
 617+ 9412 7C               ld a,h
 618+ 9413 D6 08            sub 8
 619+ 9415 67               ld h,a
 620+ 9416 7C           3 ld a,h
 621+ 9417 FE 58            cp $58
 622+ 9419 28 02            jr z,4F
 623+ 941B 10 C1            djnz 1B
 624+ 941D ED 7B DE 89  4 ld sp,(Stack)
 625+ 9421 C9           	ret
 626+ 9422
 627+ 9422 ED 73 DE 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 9426 FD F9        	ld sp,iy
 629+ 9428 06 08            ld b,8
 630+ 942A D1           1 pop de
 631+ 942B 7B           	ld a,e
 632+ 942C AE           	xor (hl)
 633+ 942D 77           	ld (hl),a
 634+ 942E 24            	inc h
 635+ 942F 7C               ld a,h
 636+ 9430 E6 07            and 7
 637+ 9432 20 0A            jr nz,2F
 638+ 9434 7D               ld a,l
 639+ 9435 C6 20            add a,$20
 640+ 9437 6F               ld l,a
 641+ 9438 38 04            jr c,2F
 642+ 943A 7C               ld a,h
 643+ 943B D6 08            sub 8
 644+ 943D 67               ld h,a
 645+ 943E 7C           2 ld a,h
 646+ 943F FE 58            cp $58
 647+ 9441 28 1C            jr z,4F
 648+ 9443 D1               pop de
 649+ 9444 7A           	ld a,d
 650+ 9445 AE           	xor (hl)
 651+ 9446 77           	ld (hl),a
 652+ 9447 24           	inc h
 653+ 9448 7C               ld a,h
 654+ 9449 E6 07            and 7
 655+ 944B 20 0A            jr nz,3F
 656+ 944D 7D               ld a,l
 657+ 944E C6 20            add a,$20
 658+ 9450 6F               ld l,a
 659+ 9451 38 04            jr c,3F
 660+ 9453 7C               ld a,h
 661+ 9454 D6 08            sub 8
 662+ 9456 67               ld h,a
 663+ 9457 7C           3 ld a,h
 664+ 9458 FE 58            cp $58
 665+ 945A 28 03            jr z,4F
 666+ 945C D1               pop de
 667+ 945D 10 CB            djnz 1B
 668+ 945F ED 7B DE 89  4 ld sp,(Stack)
 669+ 9463 C9           	ret
 670+ 9464
 671+ 9464              ; ---------------------------------------------------
 672+ 9464              ;
 673+ 9464              ;   27/02/23
 674+ 9464              ;
 675+ 9464              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 9464              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 9464              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 9464
 679+ 9464 ED 73 DE 89  Pinta_Disparo ld (Stack),sp
 680+ 9468 FD F9            ld sp,iy
 681+ 946A 06 03            ld b,3
 682+ 946C D1           1 pop de
 683+ 946D 7B               ld a,e
 684+ 946E AE               xor (hl)
 685+ 946F 77               ld (hl),a
 686+ 9470 23               inc hl
 687+ 9471 7A               ld a,d
 688+ 9472 AE               xor (hl)
 689+ 9473 77               ld (hl),a
 690+ 9474 2B               dec hl
 691+ 9475
 692+ 9475 24               inc h
 693+ 9476 7C               ld a,h
 694+ 9477 E6 07            and 7
 695+ 9479 20 0A            jr nz,2F
 696+ 947B 7D               ld a,l
 697+ 947C C6 20            add a,$20
 698+ 947E 6F               ld l,a
 699+ 947F 38 04            jr c,2F
 700+ 9481 7C               ld a,h
 701+ 9482 D6 08            sub 8
 702+ 9484 67               ld h,a
 703+ 9485 7C           2 ld a,h
 704+ 9486 FE 58            cp $58
 705+ 9488 28 02            jr z,3F
 706+ 948A
 707+ 948A 10 E0            djnz 1B
 708+ 948C ED 7B DE 89  3 ld sp,(Stack)
 709+ 9490 C9               ret
 710+ 9491
# file closed: Rutinas_de_impresion_sprites.asm
1950  9491              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9491
   2+ 9491              ; ******************************************************************************************************************************************************************************************
   3+ 9491              ;
   4+ 9491              ;   20/05/23
   5+ 9491              ;
   6+ 9491              ;	Recompone_posicion_inicio
   7+ 9491              ;
   8+ 9491              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9491              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9491              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9491              ;	_ a una u otra rutina.
  12+ 9491
  13+ 9491              Recompone_posicion_inicio
  14+ 9491
  15+ 9491 2A 9E 89     	ld hl,(Posicion_inicio)
  16+ 9494 7D           	ld a,l
  17+ 9495 E6 1F        	and $1f
  18+ 9497 28 16        	jr z,1F
  19+ 9499
  20+ 9499 FE 1F        	cp $1f
  21+ 949B 28 0D        	jr z,3F
  22+ 949D
  23+ 949D 21 B3 89     	ld hl,Ctrl_2
  24+ 94A0 CB C6        	set 0,(hl)
  25+ 94A2 2A 90 89     	ld hl,(Puntero_objeto)
  26+ 94A5 22 CE 89     	ld (Repone_puntero_objeto),hl
  27+ 94A8 18 08        	jr 2F
  28+ 94AA
  29+ 94AA CD 58 96     3 call Mov_left
  30+ 94AD 18 03        	jr 2F
  31+ 94AF
  32+ 94AF CD 35 95     1 call Mov_right
  33+ 94B2 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 94B5 22 90 89     	ld (Puntero_objeto),hl
  35+ 94B8 C9           	ret
  36+ 94B9
  37+ 94B9              ; ******************************************************************************************************************************************************************************************
  38+ 94B9              ;
  39+ 94B9              ;   27/05/23
  40+ 94B9              ;
  41+ 94B9              ;	Mov_down
  42+ 94B9              ;
  43+ 94B9              ; 	Mueve el Sprite X px hacia abajo.
  44+ 94B9              ;
  45+ 94B9              ;
  46+ 94B9              Mov_down
  47+ 94B9
  48+ 94B9 CD 23 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 94BC              ;																	; _ repone (Puntero_objeto).
  50+ 94BC 21 AE 89     	ld hl,Ctrl_0
  51+ 94BF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 94C1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 94C1              ; 																	; _ en el caso de que no lo haya.
  54+ 94C1 3A B8 89     	ld a,(Vel_down)
  55+ 94C4 47           	ld b,a
  56+ 94C5 2A 8E 89         ld hl,(Posicion_actual)
  57+ 94C8 CD 94 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 94CB E6 02        	and 2
  59+ 94CD 28 17        	jr z,1F
  60+ 94CF
  61+ 94CF              ; Nos encontramos en el último tercio de pantalla.
  62+ 94CF              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 94CF
  64+ 94CF 7C           	ld a,h
  65+ 94D0 FE 57        	cp $57
  66+ 94D2 20 12        	jr nz,1F
  67+ 94D4
  68+ 94D4 7D           	ld a,l
  69+ 94D5 C6 20        	add $20
  70+ 94D7 30 0D        	jr nc,1F
  71+ 94D9
  72+ 94D9              ; ------------------------------
  73+ 94D9              ;
  74+ 94D9              ;	12/01/24
  75+ 94D9
  76+ 94D9              ;	call Reaparece_arriba
  77+ 94D9 CD E5 97     	call Reinicio
  78+ 94DC
  79+ 94DC              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 94DC
  81+ 94DC 3A E8 89     	ld a,(Ctrl_3)
  82+ 94DF CB CF        	set 1,a
  83+ 94E1 32 E8 89     	ld (Ctrl_3),a
  84+ 94E4
  85+ 94E4 18 08        	jr 3F
  86+ 94E6              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 94E6              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 94E6              ; ------------------------------
  89+ 94E6
  90+ 94E6 CD 19 91     1 call NextScan
  91+ 94E9 22 8E 89     	ld (Posicion_actual),hl
  92+ 94EC 10 DA            djnz 2B
  93+ 94EE CD B2 99     3 call Genera_coordenadas
  94+ 94F1 C9           	ret
  95+ 94F2
  96+ 94F2              ; ******************************************************************************************************************************************************************************************
  97+ 94F2              ;
  98+ 94F2              ;   27/05/23
  99+ 94F2              ;
 100+ 94F2              ;	Mov_up
 101+ 94F2              ;
 102+ 94F2              ; 	Mueve el Sprite hacia arriba.
 103+ 94F2              ;
 104+ 94F2              ;
 105+ 94F2              Mov_up
 106+ 94F2
 107+ 94F2 CD 23 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 94F5              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 94F5 21 AE 89     	ld hl,Ctrl_0
 110+ 94F8 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 94FA              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 94FA              ; 																		; _ en el caso de que no lo haya.
 113+ 94FA 3A B7 89     	ld a,(Vel_up)
 114+ 94FD 47           	ld b,a
 115+ 94FE 2A 8E 89     	ld hl,(Posicion_actual)
 116+ 9501 CD 94 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9504 A7           	and a
 118+ 9505 20 10        	jr nz,1F
 119+ 9507
 120+ 9507              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9507              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9507
 123+ 9507 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9508 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 950A 20 0B            jr nz,1F
 126+ 950C 7D               ld a,l
 127+ 950D D6 20            sub $20
 128+ 950F 30 06            jr nc,1F
 129+ 9511 25               dec h
 130+ 9512
 131+ 9512              ; -----------------------------
 132+ 9512 CD C6 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9515              ;	call Reinicio
 134+ 9515              ; -----------------------------
 135+ 9515
 136+ 9515 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9517 CD 28 91     1 call PreviousScan
 138+ 951A 22 8E 89     	ld (Posicion_actual),hl
 139+ 951D 10 E2            djnz 3B
 140+ 951F CD B2 99     2 call Genera_coordenadas
 141+ 9522 C9           	ret
 142+ 9523
 143+ 9523              ; -----------------------------
 144+ 9523              ;
 145+ 9523              ;	27/5/23
 146+ 9523              ;
 147+ 9523              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9523              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9523              ;
 150+ 9523              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9523              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9523              ;
 153+ 9523              ;	Modifica: A y (Puntero_objeto).
 154+ 9523
 155+ 9523 3A B3 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9526 CB 47        	bit 0,a
 157+ 9528 C8           	ret z
 158+ 9529 CB 87        	res 0,a
 159+ 952B 32 B3 89     	ld (Ctrl_2),a
 160+ 952E 2A CE 89     	ld hl,(Repone_puntero_objeto)
 161+ 9531 22 90 89     	ld (Puntero_objeto),hl
 162+ 9534 C9           	ret
 163+ 9535
 164+ 9535              ; ******************************************************************************************************************************************************************************************
 165+ 9535              ;
 166+ 9535              ;	19/10/22
 167+ 9535              ;
 168+ 9535              ;	Mov_right.
 169+ 9535              ;
 170+ 9535              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9535              ;
 172+ 9535
 173+ 9535 3A AE 89     Mov_right ld a,(Ctrl_0)
 174+ 9538 CB 77        	bit 6,a
 175+ 953A 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 953C
 177+ 953C CD 74 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 953F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9540
 180+ 9540 21 AE 89     	ld hl,Ctrl_0
 181+ 9543 CB E6        	set 4,(hl)
 182+ 9545 18 52        	jr 8F
 183+ 9547
 184+ 9547 21 AE 89     10 ld hl,Ctrl_0
 185+ 954A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 954C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 954C              ; 																	; _ en el caso de que no lo haya.
 188+ 954C 3A 92 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 954F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9551 20 46        	jr nz,8F
 191+ 9553
 192+ 9553 3A 94 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9556 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9557 28 40        	jr z,8F
 195+ 9559
 196+ 9559              ; ---------- ---------- ----------
 197+ 9559              ;
 198+ 9559              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9559
 200+ 9559 3A B6 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 955C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 955E 28 11        	jr z,1F
 203+ 9560 38 06        	jr c,6F
 204+ 9562 FE 04        	cp 4
 205+ 9564 28 14        	jr z,7F
 206+ 9566 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9568
 208+ 9568              ; ---------- ---------- ----------
 209+ 9568              ;
 210+ 9568              ; Perfiles de velocidad
 211+ 9568              ;
 212+ 9568
 213+ 9568 3A 94 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 956B FE FE        	cp $fe
 215+ 956D 20 2A        	jr nz,8F
 216+ 956F 18 10        	jr 3F
 217+ 9571 3A 94 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9574 FE FD        	cp $fd
 219+ 9576 20 21        	jr nz,8F
 220+ 9578 18 07        	jr 3F
 221+ 957A 3A 94 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 957D FE FB        	cp $fb
 223+ 957F 20 18        	jr nz,8F
 224+ 9581
 225+ 9581              ; ---------- ---------- ----------
 226+ 9581
 227+ 9581              3
 228+ 9581 CD B4 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9584              ;	call Reinicio
 230+ 9584
 231+ 9584              ; ---------- ---------- ----------
 232+ 9584              ;
 233+ 9584              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9584
 235+ 9584 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9586 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9587 CD A0 95     	call DESPLZ_DER
 238+ 958A C1           	pop bc
 239+ 958B 10 F9        	djnz 5B
 240+ 958D 2A 8E 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9590 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9591 22 8E 89     	ld (Posicion_actual),hl
 243+ 9594 CD B2 99     	call Genera_coordenadas
 244+ 9597 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9599
 246+ 9599              ; ---------- ---------- ----------
 247+ 9599
 248+ 9599 2A 8E 89     8 ld hl,(Posicion_actual)
 249+ 959C CD A0 95     	call DESPLZ_DER
 250+ 959F C9           2 ret
 251+ 95A0
 252+ 95A0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 95A0              ;
 254+ 95A0              ;	22/9/22
 255+ 95A0              ;
 256+ 95A0
 257+ 95A0 CD AF 95     DESPLZ_DER call Desplaza_derecha
 258+ 95A3 CD FB 95         call modifica_parametros_1er_DESPLZ_2
 259+ 95A6 CD 24 96         call Ciclo_completo
 260+ 95A9 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 95AC CB FE        	set 7,(hl)
 262+ 95AE C9           	ret
 263+ 95AF
 264+ 95AF              ; ******************************************************************************************************************************************************************************************
 265+ 95AF              ;	15/02/23
 266+ 95AF              ;
 267+ 95AF
 268+ 95AF 3A B6 89     Desplaza_derecha ld a,(Vel_right)
 269+ 95B2 47           	ld b,a
 270+ 95B3 2A 9A 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 95B6 23           1 inc hl
 272+ 95B7 23           	inc hl
 273+ 95B8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 95BA 22 9A 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 95BD CD 8B 8B     	call Extrae_address
 276+ 95C0 22 90 89     	ld (Puntero_objeto),hl
 277+ 95C3
 278+ 95C3              ; Modifica (Puntero_DESPLZ_izq).
 279+ 95C3
 280+ 95C3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 95C3              ; Cuántos movimientos hemos hecho ??
 282+ 95C3              ; DE contiene (Puntero_DESPLZ_der).
 283+ 95C3
 284+ 95C3 2A 96 89     7 ld hl,(Indice_Sprite_der)
 285+ 95C6 EB           	ex de,hl
 286+ 95C7 A7           	and a
 287+ 95C8 ED 52        	sbc hl,de
 288+ 95CA CB 3D        	srl l
 289+ 95CC 3E 08        6 ld a,8
 290+ 95CE 95           	sub l
 291+ 95CF 30 1E        	jr nc,3F
 292+ 95D1
 293+ 95D1              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 95D1              ; B="0".
 295+ 95D1
 296+ 95D1 04           4 inc b
 297+ 95D2 3C           	inc a
 298+ 95D3 20 FC        	jr nz,4B
 299+ 95D5 78           	ld a,b
 300+ 95D6 08           	ex af,af
 301+ 95D7 2A 96 89     	ld hl,(Indice_Sprite_der)
 302+ 95DA 23           5 inc hl
 303+ 95DB 23           	inc hl
 304+ 95DC 10 FC        	djnz 5B
 305+ 95DE 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 306+ 95E1 CD 8B 8B     	call Extrae_address
 307+ 95E4 22 90 89     	ld (Puntero_objeto),hl
 308+ 95E7
 309+ 95E7              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 95E7              ; _(Posicion_actual).
 311+ 95E7
 312+ 95E7 21 8E 89     	ld hl,Posicion_actual
 313+ 95EA 34           	inc (hl)
 314+ 95EB 08               ex af,af
 315+ 95EC 6F           	ld l,a
 316+ 95ED 18 DD        	jr 6B
 317+ 95EF
 318+ 95EF              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 95EF
 320+ 95EF 47           3 ld b,a
 321+ 95F0 2A 98 89     	ld hl,(Indice_Sprite_izq)
 322+ 95F3 23           2 inc hl
 323+ 95F4 23           	inc hl
 324+ 95F5 10 FC        	djnz 2B
 325+ 95F7 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 95FA C9           8 ret
 327+ 95FB
 328+ 95FB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 95FB              ;
 330+ 95FB              ;	24/7/22
 331+ 95FB              ;
 332+ 95FB              ;	modifica_parametros_1er_DESPLZ_2
 333+ 95FB              ;
 334+ 95FB              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 95FB              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 95FB              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 95FB
 338+ 95FB 3A 94 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 95FE A7           	and a
 340+ 95FF 20 1F        	jr nz,1F
 341+ 9601 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9603 32 94 89         ld (CTRL_DESPLZ),a
 343+ 9606
 344+ 9606 21 8D 89     	ld hl,Columns
 345+ 9609 34           	inc (hl)
 346+ 960A 3A A0 89     	ld a,(Cuad_objeto)
 347+ 960D E6 01        	and 1
 348+ 960F 28 0F        	jr z,1F
 349+ 9611 2A 8E 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9614 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9615 22 8E 89     	ld (Posicion_actual),hl
 352+ 9618 CD B2 99     	call Genera_coordenadas
 353+ 961B CD 80 97     	call Inc_CTRL_DESPLZ
 354+ 961E 18 03        	jr 2F
 355+ 9620 CD 80 97     1 call Inc_CTRL_DESPLZ
 356+ 9623 C9           2 ret
 357+ 9624
 358+ 9624              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9624              ;
 360+ 9624              ;	24/7/22
 361+ 9624              ;
 362+ 9624              ;	Ciclo_completo.
 363+ 9624              ;
 364+ 9624              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9624              ;
 366+ 9624              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9624              ; 	Decrementamos (Columns).
 368+ 9624              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9624              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9624
 371+ 9624
 372+ 9624 3A 94 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9627 FE FF        	cp $ff
 374+ 9629 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 962B E6 F0        	and $f0
 376+ 962D 20 28        	jr nz,3F
 377+ 962F
 378+ 962F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 962F
 380+ 962F 3A 94 89     	ld a,(CTRL_DESPLZ)
 381+ 9632 47           	ld b,a
 382+ 9633 3E F8        	ld a,$f8
 383+ 9635 80           	add b
 384+ 9636 32 94 89     	ld (CTRL_DESPLZ),a
 385+ 9639 18 1C        	jr 3F
 386+ 963B 21 8D 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 963E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 963F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9640 32 94 89     	ld (CTRL_DESPLZ),a
 390+ 9643 3A A0 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9646 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9648 20 0A        	jr nz,2F
 393+ 964A 2A 8E 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 964D 23           	inc hl
 395+ 964E 22 8E 89     	ld (Posicion_actual),hl
 396+ 9651 CD B2 99     	call Genera_coordenadas
 397+ 9654
 398+ 9654              ; Inicia el puntero de Sprite.
 399+ 9654
 400+ 9654 CD A0 8B     2 call Inicia_puntero_objeto_der
 401+ 9657 C9           3 ret
 402+ 9658
 403+ 9658              ; ******************************************************************************************************************************************************************************************
 404+ 9658              ;
 405+ 9658              ;	15/02/23
 406+ 9658              ;
 407+ 9658              ;	Mov_left.
 408+ 9658              ;
 409+ 9658              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9658              ;
 411+ 9658              Mov_left
 412+ 9658
 413+ 9658 21 AE 89     	ld hl,Ctrl_0
 414+ 965B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 965D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 965D              ; 																	; _ en el caso de que no lo haya.
 417+ 965D 3A AE 89     	ld a,(Ctrl_0)
 418+ 9660 CB 77        	bit 6,a
 419+ 9662 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9664
 421+ 9664 CD 7A 97     	call Stop_Amadeus_left
 422+ 9667 C8           	ret z
 423+ 9668 20 4A        	jr nz,8F
 424+ 966A
 425+ 966A 3A 92 89     11 ld a,(Coordenada_X)
 426+ 966D A7           	and a
 427+ 966E 20 44        	jr nz,8F
 428+ 9670
 429+ 9670 3A 94 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9673 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9674 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9676
 433+ 9676              ; ---------- ---------- ----------
 434+ 9676
 435+ 9676 3A B5 89     	ld a,(Vel_left)
 436+ 9679 FE 02        	cp 2
 437+ 967B 28 0F        	jr z,1F
 438+ 967D 38 04        	jr c,6F
 439+ 967F FE 04        	cp 4
 440+ 9681 28 12        	jr z,7F
 441+ 9683
 442+ 9683              ; ---------- ---------- ----------
 443+ 9683
 444+ 9683 3A 94 89     6 ld a,(CTRL_DESPLZ)
 445+ 9686 FE F8        	cp $f8
 446+ 9688 20 2A        	jr nz,8F
 447+ 968A 18 10        	jr 4F
 448+ 968C 3A 94 89     1 ld a,(CTRL_DESPLZ)
 449+ 968F FE F9        	cp $f9
 450+ 9691 20 21        	jr nz,8F
 451+ 9693 18 07        	jr 4F
 452+ 9695 3A 94 89     7 ld a,(CTRL_DESPLZ)
 453+ 9698 FE FB        	cp $fb
 454+ 969A 20 18        	jr nz,8F
 455+ 969C
 456+ 969C              ; ---------- ---------- ----------
 457+ 969C
 458+ 969C              4
 459+ 969C CD A2 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 969F              ;	call Reinicio
 461+ 969F
 462+ 969F              ; ---------- ---------- ----------
 463+ 969F
 464+ 969F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 96A1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 96A2
 467+ 96A2              ;	ld hl,(Indice_Sprite_izq)
 468+ 96A2              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 96A2
 470+ 96A2 CD BB 96     	call DESPLZ_IZQ
 471+ 96A5 C1           	pop bc
 472+ 96A6 10 F9        	djnz 5B
 473+ 96A8 2A 8E 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 96AB 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 96AC 22 8E 89     	ld (Posicion_actual),hl
 476+ 96AF CD B2 99     	call Genera_coordenadas
 477+ 96B2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 96B4
 479+ 96B4              ; ---------- ---------- ----------
 480+ 96B4
 481+ 96B4              ; Movemos, no hay recolocación.
 482+ 96B4
 483+ 96B4 2A 8E 89     8 ld hl,(Posicion_actual)
 484+ 96B7 CD BB 96     	call DESPLZ_IZQ
 485+ 96BA C9           2 ret
 486+ 96BB
 487+ 96BB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 96BB              ;
 489+ 96BB              ;	22/9/22
 490+ 96BB
 491+ 96BB              DESPLZ_IZQ
 492+ 96BB
 493+ 96BB CD CA 96     	call Desplaza_izquierda
 494+ 96BE CD 16 97         call modifica_parametros_1er_DESPLZ
 495+ 96C1 CD 3E 97     	call Ciclo_completo_2
 496+ 96C4 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 96C7 CB BE        	res 7,(hl)
 498+ 96C9 C9           	ret
 499+ 96CA
 500+ 96CA              Desplaza_izquierda
 501+ 96CA
 502+ 96CA 3A B5 89     	ld a,(Vel_left)
 503+ 96CD 47           	ld b,a
 504+ 96CE 2A 9C 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 96D1 23           1 inc hl
 506+ 96D2 23           	inc hl
 507+ 96D3 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 96D5 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 96D8 CD 8B 8B     	call Extrae_address
 510+ 96DB 22 90 89     	ld (Puntero_objeto),hl
 511+ 96DE
 512+ 96DE              ; Modifica (Puntero_DESPLZ_der).
 513+ 96DE
 514+ 96DE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96DE              ; Cuántos movimientos hemos hecho ??
 516+ 96DE              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96DE
 518+ 96DE 2A 98 89     7 ld hl,(Indice_Sprite_izq)
 519+ 96E1 EB           	ex de,hl
 520+ 96E2 A7           	and a
 521+ 96E3 ED 52        	sbc hl,de
 522+ 96E5 CB 3D        	srl l
 523+ 96E7 3E 08        6 ld a,8
 524+ 96E9 95           	sub l
 525+ 96EA 30 1E        	jr nc,3F
 526+ 96EC
 527+ 96EC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 96EC              ; B="0".
 529+ 96EC
 530+ 96EC 04           4 inc b
 531+ 96ED 3C           	inc a
 532+ 96EE 20 FC        	jr nz,4B
 533+ 96F0 78           	ld a,b
 534+ 96F1 08           	ex af,af
 535+ 96F2 2A 98 89     	ld hl,(Indice_Sprite_izq)
 536+ 96F5 23           5 inc hl
 537+ 96F6 23           	inc hl
 538+ 96F7 10 FC        	djnz 5B
 539+ 96F9 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 96FC CD 8B 8B     	call Extrae_address
 541+ 96FF 22 90 89     	ld (Puntero_objeto),hl
 542+ 9702
 543+ 9702              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9702              ; _(Posicion_actual).
 545+ 9702
 546+ 9702 21 8E 89     	ld hl,Posicion_actual
 547+ 9705 35           	dec (hl)
 548+ 9706 08           	ex af,af
 549+ 9707 6F           	ld l,a
 550+ 9708 18 DD        	jr 6B
 551+ 970A
 552+ 970A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 970A
 554+ 970A 47           3 ld b,a
 555+ 970B 2A 96 89     	ld hl,(Indice_Sprite_der)
 556+ 970E 23           2 inc hl
 557+ 970F 23           	inc hl
 558+ 9710 10 FC        	djnz 2B
 559+ 9712 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9715 C9           8 ret
 561+ 9716
 562+ 9716              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9716              ;
 564+ 9716              ;	modifica_parametros_1er_DESPLZ
 565+ 9716              ;
 566+ 9716              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9716              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9716              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9716
 570+ 9716 3A 94 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9719 A7           	and a
 572+ 971A 20 1E        	jr nz,1F
 573+ 971C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 971D 32 94 89         ld (CTRL_DESPLZ),a
 575+ 9720 21 8D 89     	ld hl,Columns
 576+ 9723 34           	inc (hl)
 577+ 9724 3A A0 89     	ld a,(Cuad_objeto)
 578+ 9727 E6 01        	and 1
 579+ 9729 20 0F        	jr nz,1F
 580+ 972B 2A 8E 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 972E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 972F 22 8E 89     	ld (Posicion_actual),hl
 583+ 9732 CD B2 99     	call Genera_coordenadas
 584+ 9735 CD 91 97     	call Dec_CTRL_DESPLZ
 585+ 9738 18 03        	jr 2F
 586+ 973A CD 91 97     1 call Dec_CTRL_DESPLZ
 587+ 973D C9           2 ret
 588+ 973E
 589+ 973E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 973E
 591+ 973E 3A 94 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9741 FE F7        	cp $f7
 593+ 9743 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9745 30 2C        	jr nc,3F
 595+ 9747
 596+ 9747              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9747
 598+ 9747 06 00        	ld b,0
 599+ 9749 04           4 inc b
 600+ 974A 3C           	inc a
 601+ 974B FE F7        	cp $f7
 602+ 974D 20 FA        	jr nz,4B
 603+ 974F 3E FF        	ld a,$ff
 604+ 9751 90           	sub b
 605+ 9752 32 94 89     	ld (CTRL_DESPLZ),a
 606+ 9755 18 1C        	jr 3F
 607+ 9757
 608+ 9757              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9757
 610+ 9757 21 8D 89     1 ld hl,Columns
 611+ 975A 35           	dec (hl)
 612+ 975B AF           	xor a
 613+ 975C 32 94 89     	ld (CTRL_DESPLZ),a
 614+ 975F 3A A0 89     	ld a,(Cuad_objeto)
 615+ 9762 E6 01        	and 1
 616+ 9764 28 0A        	jr z,2F
 617+ 9766 2A 8E 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9769 2B           	dec hl
 619+ 976A 22 8E 89     	ld (Posicion_actual),hl
 620+ 976D CD B2 99     	call Genera_coordenadas
 621+ 9770
 622+ 9770              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9770
 624+ 9770 CD B3 8B     2 call Inicia_puntero_objeto_izq
 625+ 9773 C9           3 ret
 626+ 9774
 627+ 9774              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9774              ;
 629+ 9774              ;	19/10/22
 630+ 9774              ;
 631+ 9774              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9774              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9774
 634+ 9774 3A 92 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9777 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9779 C9           	ret
 637+ 977A
 638+ 977A              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 977A              ;
 640+ 977A              ;	19/10/22
 641+ 977A              ;
 642+ 977A              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 977A              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 977A
 645+ 977A 3A 92 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 977D FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 977F C9           	ret
 648+ 9780
 649+ 9780              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9780              ;
 651+ 9780              ;	24/7/22
 652+ 9780              ;
 653+ 9780              ;	Inc_CTRL_DESPLZ
 654+ 9780              ;
 655+ 9780              ;
 656+ 9780              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9780
 658+ 9780 21 94 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9783 3A B6 89     	ld a,(Vel_right)
 660+ 9786 A7           	and a
 661+ 9787 28 06        	jr z,1F
 662+ 9789 47           	ld b,a
 663+ 978A 34           3 inc (hl)
 664+ 978B 10 FD        	djnz 3B
 665+ 978D 18 01        	jr 2F
 666+ 978F 34           1 inc (hl)
 667+ 9790 C9           2 ret
 668+ 9791
 669+ 9791              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9791              ;
 671+ 9791              ;	5/2/23
 672+ 9791              ;
 673+ 9791              ;	Dec_CTRL_DESPLZ
 674+ 9791              ;
 675+ 9791              ;
 676+ 9791              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9791
 678+ 9791 21 94 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9794 3A B5 89     	ld a,(Vel_left)
 680+ 9797 A7           	and a
 681+ 9798 28 06        	jr z,1F
 682+ 979A 47           	ld b,a
 683+ 979B 35           3 dec (hl)
 684+ 979C 10 FD        	djnz 3B
 685+ 979E 18 01        	jr 2F
 686+ 97A0 35           1 dec (hl)
 687+ 97A1 C9           2 ret
 688+ 97A2
 689+ 97A2              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 97A2
 691+ 97A2 2A 8E 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 97A5 01 1F 00     	ld bc,31
 693+ 97A8 A7           	and a
 694+ 97A9 ED 4A        	adc hl,bc
 695+ 97AB 22 8E 89     	ld (Posicion_actual),hl
 696+ 97AE 21 AE 89     	ld hl,Ctrl_0														; $xxx1
 697+ 97B1 CB C6        	set 0,(hl)
 698+ 97B3 C9           	ret
 699+ 97B4
 700+ 97B4              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 97B4
 702+ 97B4 2A 8E 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 97B7 01 1F 00     	ld bc,31
 704+ 97BA A7           	and a
 705+ 97BB ED 42        	sbc hl,bc
 706+ 97BD 22 8E 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 97C0 21 AE 89     	ld hl,Ctrl_0
 708+ 97C3 CB CE        	set 1,(hl)
 709+ 97C5 C9           	ret
 710+ 97C6
 711+ 97C6              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 97C6
 713+ 97C6 24           Reaparece_abajo inc h
 714+ 97C7 01 E0 17     	ld bc,$17e0
 715+ 97CA A7           	and a
 716+ 97CB ED 4A        	adc hl,bc
 717+ 97CD 22 8E 89     	ld (Posicion_actual),hl
 718+ 97D0 21 AE 89     	ld hl,Ctrl_0
 719+ 97D3 CB D6        	set 2,(hl)
 720+ 97D5 C9           	ret
 721+ 97D6
 722+ 97D6              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 97D6
 724+ 97D6 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 97D9 A7           	and a
 726+ 97DA ED 42        	sbc hl,bc
 727+ 97DC 22 8E 89     	ld (Posicion_actual),hl
 728+ 97DF 21 AE 89     	ld hl,Ctrl_0
 729+ 97E2 CB DE        	set 3,(hl)
 730+ 97E4 C9           	ret
 731+ 97E5
 732+ 97E5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 97E5              ;
 734+ 97E5              ;	15/07/23
 735+ 97E5
 736+ 97E5              Reinicio
 737+ 97E5
 738+ 97E5              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 97E5
 740+ 97E5 AF           	xor a
 741+ 97E6 21 C5 89     	ld hl,Puntero_indice_mov_bucle
 742+ 97E9 CD 07 98     	call Limpia_contenido_hl
 743+ 97EC
 744+ 97EC 21 8E 89     	ld hl,Posicion_actual
 745+ 97EF CD 07 98     	call Limpia_contenido_hl
 746+ 97F2
 747+ 97F2 CD 4E 8C     	call Inicializa_Puntero_indice_mov
 748+ 97F5 CD D3 98     	call Inicia_Puntero_mov
 749+ 97F8
 750+ 97F8 21 C7 89     	ld hl,Incrementa_puntero
 751+ 97FB 06 05        	ld b,5
 752+ 97FD 77           1 ld (hl),a
 753+ 97FE 23           	inc hl
 754+ 97FF 10 FC        	djnz 1B
 755+ 9801
 756+ 9801 21 B3 89     	ld hl,Ctrl_2
 757+ 9804 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9806
 759+ 9806 C9           	ret
 760+ 9807
 761+ 9807 77           Limpia_contenido_hl	ld (hl),a
 762+ 9808 23           	inc hl
 763+ 9809 77           	ld (hl),a
 764+ 980A C9           	ret
 765+ 980B
 766+ 980B
# file closed: Direcciones.asm
1951  980B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 980B              ; ----- ----- ----- ----- -----
   2+ 980B              ;
   3+ 980B              ;   28/12/23
   4+ 980B
   5+ 980B              Movimiento
   6+ 980B
   7+ 980B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 980B
   9+ 980B 3A B3 89         ld a,(Ctrl_2)
  10+ 980E CB 57            bit 2,a
  11+ 9810 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9812
  13+ 9812 2A C3 89         ld hl,(Puntero_mov)
  14+ 9815 7E               ld a,(hl)
  15+ 9816
  16+ 9816              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9816
  18+ 9816              Inicia_desplazamiento.
  19+ 9816
  20+ 9816              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9816
  22+ 9816 CD 09 99         call Ajusta_velocidad_desplazamiento
  23+ 9819
  24+ 9819              ; Iniciamos (Repetimos_mov).
  25+ 9819
  26+ 9819 7E               ld a,(hl)
  27+ 981A E6 0F            and $0f
  28+ 981C 32 C9 89         ld (Repetimos_desplazamiento),a
  29+ 981F 32 CA 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9822
  31+ 9822              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9822
  33+ 9822 23               inc hl
  34+ 9823 7E               ld a,(hl)
  35+ 9824 32 CC 89         ld (Cola_de_desplazamiento),a
  36+ 9827 2B               dec hl
  37+ 9828
  38+ 9828 21 B3 89         ld hl,Ctrl_2
  39+ 982B CB D6            set 2,(hl)
  40+ 982D
  41+ 982D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 982D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 982D
  44+ 982D              Desplazamiento_iniciado
  45+ 982D
  46+ 982D CD DD 98         call Aplica_desplazamiento
  47+ 9830
  48+ 9830              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9830
  50+ 9830 3A E8 89         ld a,(Ctrl_3)
  51+ 9833 CB 4F            bit 1,a
  52+ 9835 C0               ret nz
  53+ 9836
  54+ 9836 21 C9 89     3 ld hl,Repetimos_desplazamiento
  55+ 9839 35               dec (hl)
  56+ 983A C0               ret nz
  57+ 983B
  58+ 983B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 983B              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 983B              ; Analiza (Cola_de_desplazamiento).
  61+ 983B
  62+ 983B 3A CC 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 983E A7               and a
  64+ 983F CC 32 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9842 28 30            jr z,Reinicia_el_movimiento
  66+ 9844
  67+ 9844 FE FF            cp $ff
  68+ 9846 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9848
  70+ 9848 FE FE            cp $fe
  71+ 984A CC B7 98         call z,Fijamos_bucle
  72+ 984D 28 25            jr z,Reinicia_el_movimiento
  73+ 984F
  74+ 984F FE FD            cp $fd
  75+ 9851 20 11            jr nz,1F
  76+ 9853
  77+ 9853              ; ---
  78+ 9853              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9853
  80+ 9853 3A B3 89         ld a,(Ctrl_2)
  81+ 9856 CB 5F            bit 3,a
  82+ 9858 20 1A            jr nz,Reinicia_el_movimiento
  83+ 985A
  84+ 985A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 985A
  86+ 985A 21 B3 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 985D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 985F
  89+ 985F CD C8 98         call Inicia_Repetimos_movimiento
  90+ 9862 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9864              ; ---
  92+ 9864
  93+ 9864 FE 01        1 cp 1
  94+ 9866 CA A1 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9869
  96+ 9869 3D               dec a
  97+ 986A 32 CC 89         ld (Cola_de_desplazamiento),a
  98+ 986D
  99+ 986D 3A CA 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9870 32 C9 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9873              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9873 C9               ret
 103+ 9874
 104+ 9874              Reinicia_el_movimiento
 105+ 9874
 106+ 9874 3A B3 89         ld a,(Ctrl_2)
 107+ 9877 CB 5F            bit 3,a
 108+ 9879 28 1B            jr z,2F
 109+ 987B
 110+ 987B              ; (Cola_de_desplazamiento)="254".
 111+ 987B
 112+ 987B 21 CB 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 987E 35               dec (hl)
 114+ 987F 20 15            jr nz,2F
 115+ 9881
 116+ 9881              ; Fin de las repeticiones del último movimiento.
 117+ 9881
 118+ 9881 21 B3 89         ld hl,Ctrl_2
 119+ 9884 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9886
 121+ 9886 2A C3 89         ld hl,(Puntero_mov)
 122+ 9889 23               inc hl
 123+ 988A 23               inc hl
 124+ 988B 23               inc hl
 125+ 988C 22 C3 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 988F              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 988F 7E               ld a,(hl)
 128+ 9890 32 CC 89         ld (Cola_de_desplazamiento),a
 129+ 9893
 130+ 9893 C3 3B 98         jp Cola
 131+ 9896
 132+ 9896 CD D3 98     2 call Inicia_Puntero_mov
 133+ 9899
 134+ 9899 21 B3 89         ld hl,Ctrl_2
 135+ 989C CB 96            res 2,(hl)
 136+ 989E
 137+ 989E C3 0B 98         jp Movimiento
 138+ 98A1
 139+ 98A1              Siguiente_desplazamiento
 140+ 98A1
 141+ 98A1              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 98A1              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 98A1
 144+ 98A1 21 B3 89         ld hl,Ctrl_2
 145+ 98A4 CB 96            res 2,(hl)
 146+ 98A6
 147+ 98A6 2A C3 89         ld hl,(Puntero_mov)
 148+ 98A9 23               inc hl
 149+ 98AA 23               inc hl
 150+ 98AB 22 C3 89         ld (Puntero_mov),hl
 151+ 98AE
 152+ 98AE 7E               ld a,(hl)
 153+ 98AF A7               and a
 154+ 98B0 CC 32 99         call z,Incrementa_Puntero_indice_mov
 155+ 98B3 CA 74 98         jp z,Reinicia_el_movimiento
 156+ 98B6
 157+ 98B6 C9               ret
 158+ 98B7
 159+ 98B7              ; Subrutinas -----------------------------------------
 160+ 98B7              ; ---------- --------- --------- ---------- ----------
 161+ 98B7              ;
 162+ 98B7              ;   24/07/23
 163+ 98B7              ;
 164+ 98B7              ;   Fijamos_bucle
 165+ 98B7              ;
 166+ 98B7              ;
 167+ 98B7
 168+ 98B7              Fijamos_bucle
 169+ 98B7
 170+ 98B7 3A C7 89         ld a,(Incrementa_puntero)
 171+ 98BA 3C               inc a
 172+ 98BB 32 C8 89         ld (Incrementa_puntero_backup),a
 173+ 98BE
 174+ 98BE CD 32 99         call Incrementa_Puntero_indice_mov
 175+ 98C1 2A C1 89         ld hl,(Puntero_indice_mov)
 176+ 98C4 22 C5 89         ld (Puntero_indice_mov_bucle),hl
 177+ 98C7 C9               ret
 178+ 98C8
 179+ 98C8              ; ---------- --------- --------- ---------- ----------
 180+ 98C8              ;
 181+ 98C8              ;   07/7/23
 182+ 98C8              ;
 183+ 98C8              ;   Inicia_Repetimos_movimiento
 184+ 98C8              ;
 185+ 98C8              ;
 186+ 98C8
 187+ 98C8              Inicia_Repetimos_movimiento
 188+ 98C8
 189+ 98C8              ; Iniciamos (Repetimos_movimiento).
 190+ 98C8
 191+ 98C8 DD 2A C3 89      ld ix,(Puntero_mov)
 192+ 98CC DD 7E 02         ld a,(ix+2)
 193+ 98CF 32 CB 89         ld (Repetimos_movimiento),a
 194+ 98D2
 195+ 98D2 C9               ret
 196+ 98D3
 197+ 98D3              ; ---------- --------- --------- ---------- ----------
 198+ 98D3              ;
 199+ 98D3              ;   26/6/23
 200+ 98D3              ;
 201+ 98D3              ;   Inicia_Puntero_mov
 202+ 98D3              ;
 203+ 98D3              ;
 204+ 98D3
 205+ 98D3 2A C1 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 98D6 CD 8B 8B         call Extrae_address
 207+ 98D9 22 C3 89         ld (Puntero_mov),hl
 208+ 98DC C9               ret
 209+ 98DD
 210+ 98DD              ; ---------- --------- --------- ---------- ----------
 211+ 98DD              ;
 212+ 98DD              ;   27/06/23
 213+ 98DD              ;
 214+ 98DD              ;   Aplica_movimiento.
 215+ 98DD
 216+ 98DD              Aplica_desplazamiento
 217+ 98DD
 218+ 98DD              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98DD
 220+ 98DD 2A C3 89         ld hl, (Puntero_mov)
 221+ 98E0
 222+ 98E0 7E               ld a,(hl)
 223+ 98E1 E6 F0            and $f0
 224+ 98E3 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 98E4
 226+ 98E4 CB 7E            bit 7,(hl)
 227+ 98E6 28 03            jr z,1F
 228+ 98E8 CD F2 94         call Mov_up
 229+ 98EB 2A C3 89     1 ld hl, (Puntero_mov)
 230+ 98EE CB 76            bit 6,(hl)
 231+ 98F0 28 03            jr z,2F
 232+ 98F2 CD B9 94         call Mov_down
 233+ 98F5
 234+ 98F5              ; Se ha aplicado reinicio ???
 235+ 98F5              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 98F5
 237+ 98F5              ;    ld a,(Ctrl_3)
 238+ 98F5              ;    bit 1,a
 239+ 98F5              ;    ret nz
 240+ 98F5
 241+ 98F5 2A C3 89     2 ld hl, (Puntero_mov)
 242+ 98F8 CB 6E            bit 5,(hl)
 243+ 98FA 28 03            jr z,3F
 244+ 98FC CD 58 96         call Mov_left
 245+ 98FF 2A C3 89     3 ld hl, (Puntero_mov)
 246+ 9902 CB 66            bit 4,(hl)
 247+ 9904 C8               ret z
 248+ 9905 CD 35 95         call Mov_right
 249+ 9908 C9               ret
 250+ 9909
 251+ 9909              ; ---------- --------- --------- ---------- ----------
 252+ 9909              ;
 253+ 9909              ;   26/06/23
 254+ 9909              ;
 255+ 9909              ;   Ajusta_velocidad_desplazamiento.
 256+ 9909
 257+ 9909              Ajusta_velocidad_desplazamiento
 258+ 9909
 259+ 9909              ; 1er byte de la cadena de movimiento.
 260+ 9909              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9909
 262+ 9909 CD 27 99         call Extrae_nibble_alto
 263+ 990C
 264+ 990C 32 B7 89         ld (Vel_up),a
 265+ 990F 79               ld a,c
 266+ 9910 E6 0F            and $0f
 267+ 9912 32 B8 89         ld (Vel_down),a
 268+ 9915
 269+ 9915              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9915              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9915
 272+ 9915 23               inc hl
 273+ 9916 CD 27 99         call Extrae_nibble_alto
 274+ 9919
 275+ 9919 32 B5 89         ld (Vel_left),a
 276+ 991C 79               ld a,c
 277+ 991D E6 0F            and $0f
 278+ 991F 32 B6 89         ld (Vel_right),a
 279+ 9922
 280+ 9922              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9922
 282+ 9922 23               inc hl
 283+ 9923 22 C3 89         ld (Puntero_mov),hl
 284+ 9926 C9               ret
 285+ 9927
 286+ 9927 06 04        Extrae_nibble_alto ld b,4
 287+ 9929 7E               ld a,(hl)
 288+ 992A 4F               ld c,a
 289+ 992B E6 F0            and $f0
 290+ 992D CB 3F        1 srl a
 291+ 992F 10 FC            djnz 1B
 292+ 9931 C9               ret
 293+ 9932
 294+ 9932              ; ---------- --------- --------- ---------- ----------
 295+ 9932              ;
 296+ 9932              ;   5/7/23
 297+ 9932              ;
 298+ 9932              ;   Incrementa_Puntero_indice_mov
 299+ 9932
 300+ 9932              Incrementa_Puntero_indice_mov
 301+ 9932
 302+ 9932 21 C7 89         ld hl,Incrementa_puntero
 303+ 9935 34               inc (hl)
 304+ 9936
 305+ 9936 2A C1 89         ld hl,(Puntero_indice_mov)
 306+ 9939 01 02 00         ld bc,2
 307+ 993C A7               and a
 308+ 993D 09               add hl,bc
 309+ 993E 22 C1 89         ld (Puntero_indice_mov),hl
 310+ 9941
 311+ 9941 7E               ld a,(hl)
 312+ 9942 A7               and a
 313+ 9943
 314+ 9943              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9943
 316+ 9943              ;    jr z,$
 317+ 9943
 318+ 9943              ;! Reinicia el Patrón de movimiento.
 319+ 9943
 320+ 9943 CC 48 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 9946
 322+ 9946 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9947
 324+ 9947 C9               ret
 325+ 9948
 326+ 9948              ; ---------- --------- --------- ---------- ----------
 327+ 9948              ;
 328+ 9948              ;   15/01/24
 329+ 9948              ;
 330+ 9948              ;   Inicializa_Puntero_indice_mov
 331+ 9948
 332+ 9948              Inicializa_Puntero_indice_mov_2
 333+ 9948
 334+ 9948              ; Existe etiqueta de bucle principal???
 335+ 9948
 336+ 9948 2A C5 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 994B 24               inc h
 338+ 994C 25               dec h
 339+ 994D 28 05            jr z,2F
 340+ 994F
 341+ 994F 22 C1 89         ld (Puntero_indice_mov),hl
 342+ 9952 18 14            jr 3F
 343+ 9954
 344+ 9954              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9954
 346+ 9954 3A C7 89     2 ld a,(Incrementa_puntero)
 347+ 9957 47               ld b,a
 348+ 9958
 349+ 9958 2A C1 89         ld hl,(Puntero_indice_mov)
 350+ 995B 2B           1 dec hl
 351+ 995C 2B               dec hl
 352+ 995D 10 FC            djnz 1B
 353+ 995F 22 C1 89         ld (Puntero_indice_mov),hl
 354+ 9962
 355+ 9962 AF               xor a
 356+ 9963 32 C7 89         ld (Incrementa_puntero),a
 357+ 9966 18 06            jr 4F
 358+ 9968
 359+ 9968 3A C8 89     3 ld a,(Incrementa_puntero_backup)
 360+ 996B 32 C7 89         ld (Incrementa_puntero),a
 361+ 996E C9           4 ret
 362+ 996F
 363+ 996F              ; ----------------------------------------------------------------------
 364+ 996F              ;
 365+ 996F              ;   30/01/24
 366+ 996F              ;
 367+ 996F              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 996F
 369+ 996F 3A 8B 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9972 CD 9F 8D         call Calcula_salto_en_BC
 371+ 9975 21 B9 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9978 A7               and a
 373+ 9979 ED 4A            adc hl,bc
 374+ 997B C9               ret
 375+ 997C
 376+ 997C              ; ----------------------------------------------------------------------
 377+ 997C              ;
 378+ 997C              ;   30/01/24
 379+ 997C              ;
 380+ 997C              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 997C              ;
 382+ 997C              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 997C
 384+ 997C 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 997D 23               inc hl
 386+ 997E 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 997F 69               ld l,c
 388+ 9980 60               ld h,b
 389+ 9981 22 AC 89         ld (Contador_de_mov_masticados),hl
 390+ 9984 C9               ret
 391+ 9985
# file closed: Movimiento.asm
1952  9985              ;	include "Disparo.asm"
1953  9985              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9985              ; Relojes y temporizaciones.
   2+ 9985
   3+ 9985              ; ------------------------------------------------------
   4+ 9985              ;
   5+ 9985              ;	16/7/23
   6+ 9985              ;
   7+ 9985              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9985              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9985              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9985              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9985              ;
  12+ 9985              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9985              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9985
  15+ 9985              ; Disparo_entidad db 1
  16+ 9985              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9985              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9985
  19+ 9985              Habilita_disparos
  20+ 9985
  21+ 9985 7E           	ld a,(hl)
  22+ 9986 A7           	and a
  23+ 9987 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9988
  25+ 9988 EB           	ex de,hl
  26+ 9989
  27+ 9989 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 998A C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 998B
  30+ 998B              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 998B
  32+ 998B 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 998C 7E           	ld a,(hl)
  34+ 998D 23           	inc hl
  35+ 998E 77           	ld (hl),a
  36+ 998F
  37+ 998F EB           	ex de,hl						; Habilitamos disparo.
  38+ 9990 3E 01        	ld a,1
  39+ 9992 77           	ld (hl),a
  40+ 9993 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1954  9994              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9994              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9994              ;
   3+ 9994              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9994              ;
   5+ 9994              ; *****************************************************************************************************************************************************************************************
   6+ 9994              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9994
   8+ 9994 7C           calcula_tercio ld a,h
   9+ 9995 E6 18        	and $18
  10+ 9997 CB 2F        	sra a
  11+ 9999 CB 2F        	sra a
  12+ 999B CB 2F        	sra a
  13+ 999D C9           	ret
  14+ 999E
# file closed: calcula_tercio.asm
1955  999E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 999E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 999E              ;
   3+ 999E              ;
   4+ 999E              ;	CLS.
   5+ 999E              ;
   6+ 999E              ;	Limpia la pantalla y define sus atributos.
   7+ 999E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 999E              ;
   9+ 999E              ;	COLORES: 0 ..... NEGRO
  10+ 999E              ;    		 1 ..... AZUL
  11+ 999E              ; 			 2 ..... ROJO
  12+ 999E              ;			 3 ..... MAGENTA
  13+ 999E              ; 			 4 ..... VERDE
  14+ 999E              ; 			 5 ..... CIAN
  15+ 999E              ;			 6 ..... AMARILLO
  16+ 999E              ; 			 7 ..... BLANCO
  17+ 999E              ;
  18+ 999E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 999E              ;
  20+ 999E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 999E
  22+ 999E
  23+ 999E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99A1 11 01 40     	LD DE,$4001
  25+ 99A4 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99A7 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99A9 ED B0        	LDIR
  28+ 99AB 01 FF 02     	LD BC,767
  29+ 99AE 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99AF ED B0        	LDIR
  31+ 99B1 C9           	ret
  32+ 99B2
# file closed: Cls.asm
1956  99B2              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 99B2              ; ------------------------------------------------------------------------
   2+ 99B2              ;
   3+ 99B2              ;	30/1/24
   4+ 99B2              ;
   5+ 99B2              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 99B2              ;	Fila superior "0", Columna izquierda "0".
   7+ 99B2              ;
   8+ 99B2              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 99B2              ;
  10+ 99B2              ;	Modifica: A,BC y DE.
  11+ 99B2
  12+ 99B2 7D           Genera_coordenadas ld a,l
  13+ 99B3 E6 1F        	and $1f
  14+ 99B5 32 92 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 99B8
  16+ 99B8 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 99B9 FE 40        	cp $40
  18+ 99BB 38 1C        	jr c,4F
  19+ 99BD
  20+ 99BD CD 94 99     	call calcula_tercio
  21+ 99C0 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 99C1
  23+ 99C1 1E 00        	ld e,0
  24+ 99C3 7D           	ld a,l
  25+ 99C4 E6 E0        	and $e0
  26+ 99C6 28 01        	jr z,1F
  27+ 99C8 04           	inc b
  28+ 99C9
  29+ 99C9 04           1 inc b
  30+ 99CA 05           	dec b
  31+ 99CB 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 99CD              ;														; _ , salimos.
  33+ 99CD 1C           3 inc e
  34+ 99CE D6 20        	sub 32
  35+ 99D0 20 FB        	jr nz,3B
  36+ 99D2 10 F5        	djnz 1B
  37+ 99D4
  38+ 99D4 7B           2 ld a,e
  39+ 99D5 32 93 89     	ld (Coordenada_y),a
  40+ 99D8 C9           	ret
  41+ 99D9
  42+ 99D9 AF           4 xor a
  43+ 99DA 32 93 89     	ld (Coordenada_y),a
  44+ 99DD C9           	ret
  45+ 99DE
  46+ 99DE              ; ------------------------------------------------------------------------
  47+ 99DE              ;	28/05/23
  48+ 99DE              ;
  49+ 99DE              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 99DE              ;	Fila superior "0", Columna izquierda "0".
  51+ 99DE              ;
  52+ 99DE              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 99DE              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 99DE              ;
  55+ 99DE              ;		DE="$120d"
  56+ 99DE              ;
  57+ 99DE              ;		D, (Coordenada_X), Columnas, $12
  58+ 99DE              ;		E, (Coordenada_y), Filas, $0d
  59+ 99DE              ;
  60+ 99DE              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 99DE
  62+ 99DE              ;	Modifica: A,BC y DE.
  63+ 99DE
  64+ 99DE
  65+ 99DE              Genera_coordenadas_disparo
  66+ 99DE
  67+ 99DE              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 99DE
  69+ 99DE 7D           	ld a,l
  70+ 99DF E6 1F        	and $1f
  71+ 99E1 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 99E2 CD 94 99     	call calcula_tercio
  73+ 99E5 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 99E6 1E 00        	ld e,0
  75+ 99E8 7D           	ld a,l
  76+ 99E9 E6 E0        	and $e0
  77+ 99EB 28 01        	jr z,1F
  78+ 99ED 04           	inc b
  79+ 99EE 1C           1 inc e
  80+ 99EF D6 20        	sub 32
  81+ 99F1 20 FB        	jr nz,1B
  82+ 99F3 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 99F5 C9           	ret
  84+ 99F6
# file closed: Genera_coordenadas.asm
1957  99F6              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 99F6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 99F6              ;
   3+ 99F6              ;	12/12/23
   4+ 99F6              ;
   5+ 99F6              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 99F6
   7+ 99F6              ;	ADC HL,SP	LD (addr),SP
   8+ 99F6              ;	ADD HL,SP	LD SP,(addr)
   9+ 99F6              ;	ADD IX,SP	LD SP,nn
  10+ 99F6              ; 	ADD IY,SP	LD SP,HL
  11+ 99F6              ;				LD SP,IX
  12+ 99F6              ;	DEC SP		LD SP,IY
  13+ 99F6
  14+ 99F6              ;	EX (SP),HL
  15+ 99F6              ;	EX (SP),IX
  16+ 99F6              ;	EX (SP),IY
  17+ 99F6
  18+ 99F6              ;	INC SP
  19+ 99F6
  20+ 99F6                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo del Scanlines_album.
  23+ 80BF              ;   DE contiene Puntero_objeto.
  24+ 80BF              ;   IX contiene el Puntero de impresión.
  25+ 80BF
  26+ 80BF              Guarda_foto_registros
  27+ 80BF
  28+ 80BF ED 73 DE 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  29+ 80C3 31 AA 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  30+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  31+ 80C8
  32+ 80C8 2A E4 89         ld hl,(Scanlines_album_SP)
  33+ 80CB
  34+ 80CB 3E 05            ld a,5
  35+ 80CD 85               add l
  36+ 80CE 6F               ld l,a
  37+ 80CF
  38+ 80CF F9               ld sp,hl
  39+ 80D0 22 E4 89         ld (Scanlines_album_SP),hl
  40+ 80D3
  41+ 80D3 21 00 00         ld hl,0
  42+ 80D6              ;                                                 ; _ con las coordenadas_X de Amadeus.
  43+ 80D6              ;    ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  44+ 80D6
  45+ 80D6              ;    push hl                                       ; HL contiene la dirección de la rutina de impresión.
  46+ 80D6
  47+ 80D6              ;    push ix                                       ; IX contiene el puntero de impresión.
  48+ 80D6              ;    push iy                                       ; IY contiene (Puntero_objeto).
  49+ 80D6
  50+ 80D6              ; Disparo o entidad?
  51+ 80D6
  52+ 80D6 3A CD 89         ld a,(Ctrl_1)
  53+ 80D9 CB 47            bit 0,a
  54+ 80DB 28 00            jr z,2F
  55+ 80DD
  56+ 80DD              ;    ld hl,(Scanlines_album_disparos_SP)
  57+ 80DD              ;    jr 4F
  58+ 80DD
  59+ 80DD              ; No es disparo. Entidad/Amadeus ????
  60+ 80DD
  61+ 80DD 3A AE 89     2 ld a,(Ctrl_0)
  62+ 80E0 CB 77            bit 6,a
  63+ 80E2 28 02            jr z,7F
  64+ 80E4
  65+ 80E4              ; Guardamos foto de Amadeus.
  66+ 80E4
  67+ 80E4              ;    ld hl,(End_Snapshot_Amadeus)
  68+ 80E4              ;    jr 4F
  69+ 80E4
  70+ 80E4              ;Vamos a generar los scanlines de una entidad.
  71+ 80E4
  72+ 80E4 18 FE        4 jr $
  73+ 80E6
  74+ 80E6              7
  75+ 80E6 18 FE            jr $
  76+ 80E8
  77+ 80E8 DD E5            push ix
  78+ 80EA 3B               dec sp
  79+ 80EB ED 7A            adc hl,sp
  80+ 80ED D5               push de
  81+ 80EE ED 7B DE 89      ld sp,(Stack)
  82+ 80F2
  83+ 80F2 E5               push hl
  84+ 80F3
  85+ 80F3              ;   Llegados a este punto: seguimos teniendo el Puntero_de_impresión en IX y Puntero_objeto en DE.
  86+ 80F3
  87+ 80F3
  88+ 80F3
  89+ 80F3
  90+ 80F3
  91+ 80F3
  92+ 80F3
  93+ 80F3
  94+ 80F3
  95+ 80F3
  96+ 80F3
  97+ 80F3              ; Disparo o entidad ?
  98+ 80F3
  99+ 80F3 3A CD 89         ld a,(Ctrl_1)
 100+ 80F6 CB 47            bit 0,a
 101+ 80F8 28 02            jr z,5F
 102+ 80FA
 103+ 80FA              ;    ld (Scanlines_album_disparos_SP),hl
 104+ 80FA 18 0B            jr 6F
 105+ 80FC
 106+ 80FC              ; Entidad o Amadeus ?
 107+ 80FC
 108+ 80FC 3A AE 89     5 ld a,(Ctrl_0)
 109+ 80FF CB 77            bit 6,a
 110+ 8101 28 01            jr z,8F
 111+ 8103
 112+ 8103              ;    ld (End_Snapshot_Amadeus),hl
 113+ 8103              ;    ld sp,(Stack)
 114+ 8103 C9               ret
 115+ 8104
 116+ 8104 22 E4 89     8 ld (Scanlines_album_SP),hl
 117+ 8107 ED 7B DE 89  6 ld sp,(Stack)
 118+ 810B
 119+ 810B C9               ret
 120+ 810C
 121+ 810C              ; -----------------------------------------------------------------------------
 122+ 810C              ;
 123+ 810C              ;   21/11/23
 124+ 810C
 125+ 810C              Limpia_y_reinicia_Scanlines_album
 126+ 810C
 127+ 810C              ;   Limpia Scanlines_album.
 128+ 810C
 129+ 810C 2A E4 89         ld hl,(Scanlines_album_SP)
 130+ 810F 7D               ld a,l
 131+ 8110 A7               and a
 132+ 8111 C8               ret z   ;   Salimos si el álbum está vacío.
 133+ 8112
 134+ 8112 47               ld b,a
 135+ 8113 04               inc b
 136+ 8114
 137+ 8114 36 00        1 ld (hl),0
 138+ 8116 2D               dec l
 139+ 8117 10 FB            djnz 1B
 140+ 8119
 141+ 8119              ;   Reinicializa (Scanlines_album_SP).
 142+ 8119
 143+ 8119 21 00 80         ld hl,Scanlines_album
 144+ 811C 22 E4 89         ld (Scanlines_album_SP),hl
 145+ 811F
 146+ 811F C9               ret
# file closed: Guarda_foto_registros.asm
1958  8120
1959  8120              	SAVESNA "Pruebas.sna", START
1960  8120
1961  8120
1962  8120
1963  8120
# file closed: Banco_de_pruebas.asm
