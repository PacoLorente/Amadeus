# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD CB 8A     	call Frame
  15  A104
  16  A104 3A F5 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  23  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8574
  97+ 8574 CA 85        	defw Caja_1
  98+ 8576 08 86        	defw Caja_2
  99+ 8578 46 86        	defw Caja_3
 100+ 857A 84 86        	defw Caja_4
 101+ 857C C2 86        	defw Caja_5
 102+ 857E 00 87        	defw Caja_6
 103+ 8580 3E 87        	defw Caja_7
 104+ 8582 7C 87        	defw Caja_8
 105+ 8584 BA 87        	defw Caja_9
 106+ 8586 F8 87        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85BD
 145+ 85BD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85C1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85C4
 148+ 85C4 00           	db 0 											; (Columnas).
 149+ 85C5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85C7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85CA
 152+ 85CA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85CA
 154+ 85CA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85CC 00 00        	defw 0											; (Posicion_actual).
 156+ 85CE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85D0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85D3
 159+ 85D3 00           	db %00000000 									; (Attr).
 160+ 85D4
 161+ 85D4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85D6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85D8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85DA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85DC
 166+ 85DC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85DE 00           	db 0											; (Cuad_objeto).
 168+ 85DF
 169+ 85DF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85E3
 171+ 85E3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85E4
 173+ 85E4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85E6 00 00        	defw 0											;	" " " " " " "
 175+ 85E8 00 00        	defw 0											;	" " " " " " "
 176+ 85EA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85EE
 178+ 85EE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85F0 00 00        	defw 0											;	" " " " " " "
 180+ 85F2 00 00        	defw 0											;	" " " " " " "
 181+ 85F4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85F8
 183+ 85F8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 184+ 85FA 00           Autoriza_1 db 0										; (Autoriza_movimiento).
 185+ 85FB
 186+ 85FB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 187+ 85FF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 188+ 8602
 189+ 8602 00           	db 0 											; (Columnas).
 190+ 8603 00 00        	defw 0											; (Limite_horizontal).
 191+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 192+ 8608
 193+ 8608              ; ---------- ---------- ---------- ---------- ----------
 194+ 8608
 195+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 196+ 860A 00 00        	defw 0											; (Posicion_actual).
 197+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 198+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 199+ 8611
 200+ 8611 00           	db %00000000 									; (Attr).
 201+ 8612
 202+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 203+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 204+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 205+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 206+ 861A
 207+ 861A 00 00        	defw 0											; (Posicion_inicio).
 208+ 861C 00           	db 0											; (Cuad_objeto).
 209+ 861D
 210+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 211+ 8621
 212+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 213+ 8622
 214+ 8622 00 00        	db 0,0										    ; Variables_de_borrado
 215+ 8624 00 00        	defw 0											;	" " " " " " "
 216+ 8626 00 00        	defw 0											;	" " " " " " "
 217+ 8628 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 862C
 219+ 862C 00 00        	db 0,0											; Variables_de_pintado
 220+ 862E 00 00        	defw 0											;	" " " " " " "
 221+ 8630 00 00        	defw 0											;	" " " " " " "
 222+ 8632 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8636
 224+ 8636 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 225+ 8638 00           Autoriza_2 db 0										; (Autoriza_movimiento).
 226+ 8639
 227+ 8639 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 228+ 863D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 229+ 8640
 230+ 8640 00           	db 0 											; (Columnas).
 231+ 8641 00 00        	defw 0											; (Limite_horizontal).
 232+ 8643 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 233+ 8646
 234+ 8646              ; ---------- ---------- ---------- ---------- ----------
 235+ 8646
 236+ 8646 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 237+ 8648 00 00        	defw 0											; (Posicion_actual).
 238+ 864A 00 00        	defw 0 											; (Puntero_objeto).
 239+ 864C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 240+ 864F
 241+ 864F 00           	db %00000000 									; (Attr).
 242+ 8650
 243+ 8650 00 00        	defw 0											; (Indice_Sprite_der).
 244+ 8652 00 00        	defw 0											; (Indice_Sprite_izq).
 245+ 8654 00 00        	defw 0											; (Puntero_DESPLZ_der).
 246+ 8656 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 247+ 8658
 248+ 8658 00 00        	defw 0											; (Posicion_inicio).
 249+ 865A 00           	db 0											; (Cuad_objeto).
 250+ 865B
 251+ 865B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 252+ 865F
 253+ 865F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 254+ 8660
 255+ 8660 00 00        	db 0,0										    ; Variables_de_borrado
 256+ 8662 00 00        	defw 0											;	" " " " " " "
 257+ 8664 00 00        	defw 0											;	" " " " " " "
 258+ 8666 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 866A
 260+ 866A 00 00        	db 0,0											; Variables_de_pintado
 261+ 866C 00 00        	defw 0											;	" " " " " " "
 262+ 866E 00 00        	defw 0											;	" " " " " " "
 263+ 8670 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 8674
 265+ 8674 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 266+ 8676 00           Autoriza_3 db 0										; (Autoriza_movimiento).
 267+ 8677
 268+ 8677 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 269+ 867B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 270+ 867E
 271+ 867E 00           	db 0 											; (Columnas).
 272+ 867F 00 00        	defw 0											; (Limite_horizontal).
 273+ 8681 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 274+ 8684
 275+ 8684              ; ---------- ---------- ---------- ---------- ----------
 276+ 8684
 277+ 8684 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 278+ 8686 00 00        	defw 0											; (Posicion_actual).
 279+ 8688 00 00        	defw 0 											; (Puntero_objeto).
 280+ 868A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 281+ 868D
 282+ 868D 00           	db %00000000 									; (Attr).
 283+ 868E
 284+ 868E 00 00        	defw 0											; (Indice_Sprite_der).
 285+ 8690 00 00        	defw 0											; (Indice_Sprite_izq).
 286+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_der).
 287+ 8694 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 288+ 8696
 289+ 8696 00 00        	defw 0											; (Posicion_inicio).
 290+ 8698 00           	db 0											; (Cuad_objeto).
 291+ 8699
 292+ 8699 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 293+ 869D
 294+ 869D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 295+ 869E
 296+ 869E 00 00        	db 0,0										    ; Variables_de_borrado
 297+ 86A0 00 00        	defw 0											;	" " " " " " "
 298+ 86A2 00 00        	defw 0											;	" " " " " " "
 299+ 86A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A8
 301+ 86A8 00 00        	db 0,0											; Variables_de_pintado
 302+ 86AA 00 00        	defw 0											;	" " " " " " "
 303+ 86AC 00 00        	defw 0											;	" " " " " " "
 304+ 86AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 305+ 86B2
 306+ 86B2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 307+ 86B4 00           Autoriza_4 db 0										; (Autoriza_movimiento).
 308+ 86B5
 309+ 86B5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 310+ 86B9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 311+ 86BC
 312+ 86BC 00           	db 0 											; (Columnas).
 313+ 86BD 00 00        	defw 0											; (Limite_horizontal).
 314+ 86BF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 315+ 86C2
 316+ 86C2              ; ---------- ---------- ---------- ---------- ----------
 317+ 86C2
 318+ 86C2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 319+ 86C4 00 00        	defw 0											; (Posicion_actual).
 320+ 86C6 00 00        	defw 0 											; (Puntero_objeto).
 321+ 86C8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 322+ 86CB
 323+ 86CB 00           	db %00000000 									; (Attr).
 324+ 86CC
 325+ 86CC 00 00        	defw 0											; (Indice_Sprite_der).
 326+ 86CE 00 00        	defw 0											; (Indice_Sprite_izq).
 327+ 86D0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 328+ 86D2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 329+ 86D4
 330+ 86D4 00 00        	defw 0											; (Posicion_inicio).
 331+ 86D6 00           	db 0											; (Cuad_objeto).
 332+ 86D7
 333+ 86D7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 334+ 86DB
 335+ 86DB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 336+ 86DC
 337+ 86DC 00 00        	db 0,0										    ; Variables_de_borrado
 338+ 86DE 00 00        	defw 0											;	" " " " " " "
 339+ 86E0 00 00        	defw 0											;	" " " " " " "
 340+ 86E2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E6
 342+ 86E6 00 00        	db 0,0											; Variables_de_pintado
 343+ 86E8 00 00        	defw 0											;	" " " " " " "
 344+ 86EA 00 00        	defw 0											;	" " " " " " "
 345+ 86EC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 346+ 86F0
 347+ 86F0 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 348+ 86F2 00           Autoriza_5 db 0										; (Autoriza_movimiento).
 349+ 86F3
 350+ 86F3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 351+ 86F7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 352+ 86FA
 353+ 86FA 00           	db 0 											; (Columnas).
 354+ 86FB 00 00        	defw 0											; (Limite_horizontal).
 355+ 86FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 356+ 8700
 357+ 8700              ; ---------- ---------- ---------- ---------- ----------
 358+ 8700
 359+ 8700 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 360+ 8702 00 00        	defw 0											; (Posicion_actual).
 361+ 8704 00 00        	defw 0 											; (Puntero_objeto).
 362+ 8706 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 363+ 8709
 364+ 8709 00           	db %00000000 									; (Attr).
 365+ 870A
 366+ 870A 00 00        	defw 0											; (Indice_Sprite_der).
 367+ 870C 00 00        	defw 0											; (Indice_Sprite_izq).
 368+ 870E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 369+ 8710 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 370+ 8712
 371+ 8712 00 00        	defw 0											; (Posicion_inicio).
 372+ 8714 00           	db 0											; (Cuad_objeto).
 373+ 8715
 374+ 8715 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 375+ 8719
 376+ 8719 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 377+ 871A
 378+ 871A 00 00        	db 0,0										    ; Variables_de_borrado
 379+ 871C 00 00        	defw 0											;	" " " " " " "
 380+ 871E 00 00        	defw 0											;	" " " " " " "
 381+ 8720 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8724
 383+ 8724 00 00        	db 0,0											; Variables_de_pintado
 384+ 8726 00 00        	defw 0											;	" " " " " " "
 385+ 8728 00 00        	defw 0											;	" " " " " " "
 386+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 387+ 872E
 388+ 872E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 389+ 8730 00           Autoriza_6 db 0										; (Autoriza_movimiento).
 390+ 8731
 391+ 8731 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 392+ 8735 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 393+ 8738
 394+ 8738 00           	db 0 											; (Columnas).
 395+ 8739 00 00        	defw 0											; (Limite_horizontal).
 396+ 873B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 397+ 873E
 398+ 873E              ; ---------- ---------- ---------- ---------- ----------
 399+ 873E
 400+ 873E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 401+ 8740 00 00        	defw 0											; (Posicion_actual).
 402+ 8742 00 00        	defw 0 											; (Puntero_objeto).
 403+ 8744 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 404+ 8747
 405+ 8747 00           	db %00000000 									; (Attr).
 406+ 8748
 407+ 8748 00 00        	defw 0											; (Indice_Sprite_der).
 408+ 874A 00 00        	defw 0											; (Indice_Sprite_izq).
 409+ 874C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 410+ 874E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 411+ 8750
 412+ 8750 00 00        	defw 0											; (Posicion_inicio).
 413+ 8752 00           	db 0											; (Cuad_objeto).
 414+ 8753
 415+ 8753 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 416+ 8757
 417+ 8757 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 418+ 8758
 419+ 8758 00 00        	db 0,0										    ; Variables_de_borrado
 420+ 875A 00 00        	defw 0											;	" " " " " " "
 421+ 875C 00 00        	defw 0											;	" " " " " " "
 422+ 875E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8762
 424+ 8762 00 00        	db 0,0											; Variables_de_pintado
 425+ 8764 00 00        	defw 0											;	" " " " " " "
 426+ 8766 00 00        	defw 0											;	" " " " " " "
 427+ 8768 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 428+ 876C
 429+ 876C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 430+ 876E 00           Autoriza_7 db 0										; (Autoriza_movimiento).
 431+ 876F
 432+ 876F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 433+ 8773 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 434+ 8776
 435+ 8776 00           	db 0 											; (Columnas).
 436+ 8777 00 00        	defw 0											; (Limite_horizontal).
 437+ 8779 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 438+ 877C
 439+ 877C              ; ---------- ---------- ---------- ---------- ----------
 440+ 877C
 441+ 877C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 442+ 877E 00 00        	defw 0											; (Posicion_actual).
 443+ 8780 00 00        	defw 0 											; (Puntero_objeto).
 444+ 8782 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 445+ 8785
 446+ 8785 00           	db %00000000 									; (Attr).
 447+ 8786
 448+ 8786 00 00        	defw 0											; (Indice_Sprite_der).
 449+ 8788 00 00        	defw 0											; (Indice_Sprite_izq).
 450+ 878A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 451+ 878C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 452+ 878E
 453+ 878E 00 00        	defw 0											; (Posicion_inicio).
 454+ 8790 00           	db 0											; (Cuad_objeto).
 455+ 8791
 456+ 8791 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 457+ 8795
 458+ 8795 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 459+ 8796
 460+ 8796 00 00        	db 0,0										    ; Variables_de_borrado
 461+ 8798 00 00        	defw 0											;	" " " " " " "
 462+ 879A 00 00        	defw 0											;	" " " " " " "
 463+ 879C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 464+ 87A0
 465+ 87A0 00 00        	db 0,0											; Variables_de_pintado
 466+ 87A2 00 00        	defw 0											;	" " " " " " "
 467+ 87A4 00 00        	defw 0											;	" " " " " " "
 468+ 87A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 469+ 87AA
 470+ 87AA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 471+ 87AC 00           Autoriza_8 db 0										; (Autoriza_movimiento).
 472+ 87AD
 473+ 87AD 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 474+ 87B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 475+ 87B4
 476+ 87B4 00           	db 0 											; (Columnas).
 477+ 87B5 00 00        	defw 0											; (Limite_horizontal).
 478+ 87B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 479+ 87BA
 480+ 87BA              ; ---------- ---------- ---------- ---------- ----------
 481+ 87BA
 482+ 87BA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 483+ 87BC 00 00        	defw 0											; (Posicion_actual).
 484+ 87BE 00 00        	defw 0 											; (Puntero_objeto).
 485+ 87C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 486+ 87C3
 487+ 87C3 00           	db %00000000 									; (Attr).
 488+ 87C4
 489+ 87C4 00 00        	defw 0											; (Indice_Sprite_der).
 490+ 87C6 00 00        	defw 0											; (Indice_Sprite_izq).
 491+ 87C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 492+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 493+ 87CC
 494+ 87CC 00 00        	defw 0											; (Posicion_inicio).
 495+ 87CE 00           	db 0											; (Cuad_objeto).
 496+ 87CF
 497+ 87CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 498+ 87D3
 499+ 87D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 500+ 87D4
 501+ 87D4 00 00        	db 0,0										    ; Variables_de_borrado
 502+ 87D6 00 00        	defw 0											;	" " " " " " "
 503+ 87D8 00 00        	defw 0											;	" " " " " " "
 504+ 87DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 505+ 87DE
 506+ 87DE 00 00        	db 0,0											; Variables_de_pintado
 507+ 87E0 00 00        	defw 0											;	" " " " " " "
 508+ 87E2 00 00        	defw 0											;	" " " " " " "
 509+ 87E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 510+ 87E8
 511+ 87E8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 512+ 87EA 00           Autoriza_9 db 0										; (Autoriza_movimiento).
 513+ 87EB
 514+ 87EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 515+ 87EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 516+ 87F2
 517+ 87F2 00           	db 0 											; (Columnas).
 518+ 87F3 00 00        	defw 0											; (Limite_horizontal).
 519+ 87F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 520+ 87F8
 521+ 87F8              ; ---------- ---------- ---------- ---------- ----------
 522+ 87F8
 523+ 87F8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 524+ 87FA 00 00        	defw 0											; (Posicion_actual).
 525+ 87FC 00 00        	defw 0 											; (Puntero_objeto).
 526+ 87FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 527+ 8801
 528+ 8801 00           	db %00000000 									; (Attr).
 529+ 8802
 530+ 8802 00 00        	defw 0											; (Indice_Sprite_der).
 531+ 8804 00 00        	defw 0											; (Indice_Sprite_izq).
 532+ 8806 00 00        	defw 0											; (Puntero_DESPLZ_der).
 533+ 8808 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 534+ 880A
 535+ 880A 00 00        	defw 0											; (Posicion_inicio).
 536+ 880C 00           	db 0											; (Cuad_objeto).
 537+ 880D
 538+ 880D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 539+ 8811
 540+ 8811 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 541+ 8812
 542+ 8812 00 00        	db 0,0										    ; Variables_de_borrado
 543+ 8814 00 00        	defw 0											;	" " " " " " "
 544+ 8816 00 00        	defw 0											;	" " " " " " "
 545+ 8818 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 546+ 881C
 547+ 881C 00 00        	db 0,0											; Variables_de_pintado
 548+ 881E 00 00        	defw 0											;	" " " " " " "
 549+ 8820 00 00        	defw 0											;	" " " " " " "
 550+ 8822 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 551+ 8826
 552+ 8826 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 553+ 8828 00           Autoriza_10 db 0									; (Autoriza_movimiento).
 554+ 8829
 555+ 8829 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 556+ 882D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 557+ 8830
 558+ 8830 00           	db 0 											; (Columnas).
 559+ 8831 00 00        	defw 0											; (Limite_horizontal).
 560+ 8833 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 561+ 8836
 562+ 8836              ; -------------------------------------------------------------------------------------
 563+ 8836              ;
 564+ 8836              ;	20/05/23
 565+ 8836              ;
 566+ 8836              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 567+ 8836              ;
 568+ 8836              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 569+ 8836              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 570+ 8836              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 571+ 8836              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 572+ 8836
 573+ 8836              Indice_de_entidades
 574+ 8836
 575+ 8836 40 88        	defw Entidad_1
 576+ 8838 50 88        	defw Entidad_2
 577+ 883A 60 88        	defw Entidad_3
 578+ 883C 70 88        	defw Entidad_4
 579+ 883E 80 88        	defw Entidad_5
 580+ 8840
 581+ 8840              ;	BADSAT, (Satélite malvado).
 582+ 8840
 583+ 8840 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 584+ 8842 04           	db %00000100									; (Attr).
 585+ 8843 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 586+ 8845 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 587+ 8847 3F 50        	defw $503f	                             	    ; (Posicion_inicio).
 588+ 8849 01           	db 1											; (Cuad_objeto).
 589+ 884A 02 02 01 02  	db 2,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 590+ 884E 0B 9D        	defw Indice_mov_Escaloncitos_izquierda_arriba   ; (Puntero_indice_mov)
 591+ 8850
 592+ 8850 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 593+ 8852 02           	db %00000010									; (Attr).
 594+ 8853 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 595+ 8855 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 596+ 8857 40 50        	defw $5040                                      ; (Posicion_inicio).
 597+ 8859 01           	db 1											; (Cuad_objeto).
 598+ 885A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 599+ 885E 0F 9D        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 600+ 8860
 601+ 8860 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 602+ 8862 04           	db %00000100									; (Attr).
 603+ 8863 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 604+ 8865 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 605+ 8867 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 606+ 8869 01           	db 1											; (Cuad_objeto).
 607+ 886A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 608+ 886E 0F 9D        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 609+ 8870
 610+ 8870 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 611+ 8872 01           	db %00000001									; (Attr).
 612+ 8873 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 613+ 8875 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 614+ 8877 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 615+ 8879 01           	db 1											; (Cuad_objeto).
 616+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 617+ 887E 0D 9D        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 618+ 8880
 619+ 8880 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 620+ 8882 01           	db %00000001									; (Attr).
 621+ 8883 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 622+ 8885 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 623+ 8887 07 40        	defw $4007                                      ; (Posicion_inicio).
 624+ 8889 01           	db 1											; (Cuad_objeto).
 625+ 888A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 626+ 888E 09 9D        	defw Indice_mov_Escaloncitos_derecha_abajo							; (Puntero_indice_mov)
 627+ 8890
 628+ 8890              Indice_de_autorizaciones
 629+ 8890
 630+ 8890 FA 85        	defw Autoriza_1
 631+ 8892 38 86        	defw Autoriza_2
 632+ 8894 76 86        	defw Autoriza_3
 633+ 8896 B4 86        	defw Autoriza_4
 634+ 8898 F2 86        	defw Autoriza_5
 635+ 889A 30 87        	defw Autoriza_6
 636+ 889C 6E 87        	defw Autoriza_7
 637+ 889E AC 87        	defw Autoriza_8
 638+ 88A0 EA 87        	defw Autoriza_9
 639+ 88A2 28 88        	defw Autoriza_10
# file closed: Cajas_y_disparos.asm
  24  88A4              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A4              ; 13/05/23
   2+ 88A4
   3+ 88A4              Indice_de_niveles
   4+ 88A4
   5+ 88A4 B2 88        	defw Nivel_1
   6+ 88A6 BD 88        	defw Nivel_2
   7+ 88A8 CA 88        	defw Nivel_3
   8+ 88AA DA 88        	defw Nivel_4
   9+ 88AC EC 88        	defw Nivel_5
  10+ 88AE
  11+ 88AE              ;	...
  12+ 88AE              ;	...
  13+ 88AE              ;	+ Niveles ...
  14+ 88AE
  15+ 88AE 00 00        	defw 0
  16+ 88B0 00 00        	defw 0
  17+ 88B2
  18+ 88B2 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 88B3 05 04 03 02  	db 5,4,3,2,1
  19+ 88B7 01
  20+ 88B8 01 02 03 04  	db 1,2,3,4,5
  20+ 88BC 05
  21+ 88BD 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 88BE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 88C2 01 02
  23+ 88C4 02 01 01 01  	db 2,1,1,1,1,2
  23+ 88C8 01 02
  24+ 88CA 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 88CB 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 88CF 01
  26+ 88D0 03 01 01 01  	db 3,1,1,1,1
  26+ 88D4 01
  27+ 88D5 03 01 01 01  	db 3,1,1,1,1
  27+ 88D9 01
  28+ 88DA 11           Nivel_4 db 17									; Nº de entidades.
  29+ 88DB 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 88DF 01
  30+ 88E0 04 01 01 01  	db 4,1,1,1,1
  30+ 88E4 01
  31+ 88E5 04 01 01 01  	db 4,1,1,1,1
  31+ 88E9 01
  32+ 88EA 02 03        	db 2,3
  33+ 88EC 14           Nivel_5 db 20									; Nº de entidades.
  34+ 88ED 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88F1 01
  35+ 88F2 05 01 01 01  	db 5,1,1,1,1
  35+ 88F6 01
  36+ 88F7 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88FB 01
  37+ 88FC 05 01 01 01  	db 5,1,1,1,1
  37+ 8900 01
  38+ 8901
  39+ 8901              ;---------------------------------------------------------------------------------------------------------------
  40+ 8901              ;
  41+ 8901              ;   21/5/23
  42+ 8901              ;
  43+ 8901              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 8901              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 8901              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 8901              ;	_en la caja DRAW correspondiente.
  47+ 8901              ;
  48+ 8901              ;	MODIFICA: HL,DE y A.
  49+ 8901              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 8901
  51+ 8901              Inicializa_Punteros_de_nivel
  52+ 8901
  53+ 8901 21 A4 88     	ld hl,Indice_de_niveles
  54+ 8904 22 2A 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 8907 CD 27 8D     	call Extrae_address
  56+ 890A 7E           	ld a,(hl)
  57+ 890B 32 FF 89     	ld (Numero_de_entidades),a
  58+ 890E 23           	inc hl
  59+ 890F 22 2C 8A     	ld (Datos_de_nivel),hl
  60+ 8912 C9           	ret
  61+ 8913
  62+ 8913              ;---------------------------------------------------------------------------------------------------------------
  63+ 8913              ;
  64+ 8913              ;   13/5/23
  65+ 8913              ;
  66+ 8913              ;	Destruye A,BC,HL,DE
  67+ 8913
  68+ 8913              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 8913              ;	_del juego.
  70+ 8913
  71+ 8913              Prepara_cajas
  72+ 8913
  73+ 8913              ; Preparamos los punteros de las cajas.
  74+ 8913
  75+ 8913 21 74 85     	ld hl,Indice_de_cajas
  76+ 8916 CD 27 8D     	call Extrae_address
  77+ 8919 CD 56 89     	call Avanza_caja
  78+ 891C
  79+ 891C CD 9A 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 891F
  81+ 891F 2A 2C 8A     	ld hl,(Datos_de_nivel)
  82+ 8922
  83+ 8922              ; HL está en los datos del nivel correspondiente.
  84+ 8922              ; B actuará como contador de cajas.
  85+ 8922
  86+ 8922 C5           1 push bc
  87+ 8923
  88+ 8923 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 8924 CD 47 89     	call PreparaBC
  90+ 8927
  91+ 8927 21 36 88     	ld hl,Indice_de_entidades
  92+ 892A CD 4F 89     	call SBC_HL_con_BC_y_Extrae
  93+ 892D 22 05 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 8930
  95+ 8930 CD 60 89     	call Datos_de_entidad_a_caja
  96+ 8933
  97+ 8933 2A FD 89     	ld hl,(Indice_restore_caja)
  98+ 8936 CD 27 8D     	call Extrae_address
  99+ 8939 CD 56 89     	call Avanza_caja
 100+ 893C
 101+ 893C 2A 2C 8A     	ld hl,(Datos_de_nivel)
 102+ 893F 23           	inc hl
 103+ 8940 22 2C 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 8943
 105+ 8943 C1           	pop bc
 106+ 8944 10 DC        	djnz 1B
 107+ 8946 C9           	ret
 108+ 8947
 109+ 8947 CB 27        PreparaBC sla a
 110+ 8949 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 894B 4F           	ld c,a
 112+ 894C 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 894E C9           	ret
 114+ 894F
 115+ 894F A7           SBC_HL_con_BC_y_Extrae and a
 116+ 8950 ED 4A        	adc hl,bc
 117+ 8952 CD 27 8D     	call Extrae_address
 118+ 8955 C9           	ret
 119+ 8956
 120+ 8956 22 F9 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 8959 13           	inc de
 122+ 895A 13           	inc de
 123+ 895B EB           	ex de,hl
 124+ 895C 22 FD 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 895F C9           	ret
 126+ 8960
 127+ 8960              Datos_de_entidad_a_caja
 128+ 8960
 129+ 8960              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 8960
 131+ 8960
 132+ 8960 ED 5B F9 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8964
 134+ 8964 01 02 00     	ld bc,2
 135+ 8967 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 8969
 137+ 8969 01 07 00     	ld bc,7
 138+ 896C CD 94 89     	call Situa_DE
 139+ 896F
 140+ 896F 01 05 00     	ld bc,5
 141+ 8972 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8974
 143+ 8974 01 04 00     	ld bc,4
 144+ 8977 CD 94 89     	call Situa_DE
 145+ 897A
 146+ 897A 01 07 00     	ld bc,7
 147+ 897D ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 897F
 149+ 897F 01 18 00     	ld bc,24
 150+ 8982 CD 94 89     	call Situa_DE
 151+ 8985
 152+ 8985 01 02 00     	ld bc,2
 153+ 8988 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 898A
 155+ 898A 01 0A 00     	ld bc,10
 156+ 898D CD 94 89     	call Situa_DE
 157+ 8990
 158+ 8990 3E 03        	ld a,3
 159+ 8992 12           	ld (de),a 									; Vuelco (Frames_explosion).
 160+ 8993
 161+ 8993 C9           	ret
 162+ 8994
 163+ 8994 EB           Situa_DE ex de,hl
 164+ 8995 A7           	and a
 165+ 8996 ED 4A        	adc hl,bc
 166+ 8998 EB           	ex de,hl
 167+ 8999 C9           	ret
 168+ 899A
 169+ 899A              ;---------------------------------------------------------------------------------------------------------------
 170+ 899A              ;
 171+ 899A              ;	21/5/23
 172+ 899A              ;
 173+ 899A              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 174+ 899A              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 175+ 899A              ;
 176+ 899A              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 177+ 899A              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 178+ 899A              ;	_ total de entidades que contiene (Numero_de_entidades).
 179+ 899A              ;
 180+ 899A              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 181+ 899A              ;	MODIFICA: A y B.
 182+ 899A              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 183+ 899A
 184+ 899A              Admin_num_entidades
 185+ 899A
 186+ 899A              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 187+ 899A
 188+ 899A 3A FF 89     	ld a,(Numero_de_entidades)
 189+ 899D A7           	and a
 190+ 899E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 191+ 899E              ;	jr z,$
 192+ 899E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899E
 194+ 899E 20 03        	jr nz,3F
 195+ 89A0
 196+ 89A0              ;! RESET para pruebas. Omitir esta línea en modo normal.
 197+ 89A0
 198+ 89A0 CD 01 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 199+ 89A3
 200+ 89A3
 201+ 89A3 3A FF 89     3 ld a,(Numero_de_entidades)
 202+ 89A6 FE 0A        	cp 10
 203+ 89A8 38 08        	jr c,1F
 204+ 89AA
 205+ 89AA              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 89AA              ; Actualizamos variables.
 207+ 89AA
 208+ 89AA 3E 0A        	ld a,10
 209+ 89AC 32 00 8A     	ld (Numero_parcial_de_entidades),a
 210+ 89AF 47           	ld b,a
 211+ 89B0 18 04        	jr 2F
 212+ 89B2
 213+ 89B2              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 89B2              ; (Numero_de_entidades)="0".
 215+ 89B2
 216+ 89B2 32 00 8A     1 ld (Numero_parcial_de_entidades),a
 217+ 89B5 47           	ld b,a
 218+ 89B6 C9           2 ret
# file closed: Niveles.asm
  25  89B7
  26  89B7              ; ******************************************************************************************************************************************************************************************
  27  89B7              ; Constantes.
  28  89B7              ; ******************************************************************************************************************************************************************************************
  29  89B7              ;
  30  89B7              ; 25/05/23
  31  89B7              ;
  32  89B7              ; Constantes generales.
  33  89B7              ;
  34  89B7
  35  89B7              Sprite_vacio equ $f000
  36  89B7              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  89B7              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  89B7              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  89B7              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  89B7
  41  89B7              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  89B7              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  89B7              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  89B7              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  89B7              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  89B7              ;                               				        ; De momento situamos este almacén en $7060.
  47  89B7
  48  89B7              ; ******************************************************************************************************************************************************************************************
  49  89B7              ; Variables.
  50  89B7              ; ******************************************************************************************************************************************************************************************
  51  89B7              ;
  52  89B7              ; 30/05/23
  53  89B7              ;
  54  89B7              ; Variables de DRAW. (Motor principal).
  55  89B7              ;
  56  89B7              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  89B7
  58  89B7 00           Filas db 0												; Filas. [DRAW]
  59  89B8 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  89B9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  89BB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  89BD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  89BE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  89BF
  65  89BF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  89BF
  67  89BF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  89C0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  89C0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  89C0 00           Attr db 0												; Atributos de la entidad:
  71  89C1
  72  89C1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  89C1              ;
  74  89C1              ;	COLORES: 0 ..... NEGRO
  75  89C1              ;    		 1 ..... AZUL
  76  89C1              ; 			 2 ..... ROJO
  77  89C1              ;			 3 ..... MAGENTA
  78  89C1              ; 			 4 ..... VERDE
  79  89C1              ; 			 5 ..... CIAN
  80  89C1              ;			 6 ..... AMARILLO
  81  89C1              ; 			 7 ..... BLANCO
  82  89C1
  83  89C1 00 00        Indice_Sprite_der defw 0
  84  89C3 00 00        Indice_Sprite_izq defw 0
  85  89C5 00 00        Puntero_DESPLZ_der defw 0
  86  89C7 00 00        Puntero_DESPLZ_izq defw 0
  87  89C9
  88  89C9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89CB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89CC
  91  89CC              ; Variables de objeto. (Características).
  92  89CC
  93  89CC 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89CD 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89CE 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89CF 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89D0
  98  89D0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89D1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89D1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89D1
 102  89D1 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89D3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89D5 00 00        	defw 0
 105  89D7 00 00 00 00  	db 0,0,0,0
 106  89DB
 107  89DB 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89DD 00 00        	defw 0
 109  89DF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89E1 00 00 00 00  	db 0,0,0,0
 111  89E5
 112  89E5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89E5
 114  89E5 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89E6              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89E6              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89E6              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89E6              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89E6              ;
 120  89E6              ; 														DESCRIPCIÖN:
 121  89E6              ;
 122  89E6              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89E6              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89E6              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89E6              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89E6              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89E6              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89E6              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89E6              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89E6              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89E6              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89E6              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89E6              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89E6              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89E6              ;
 136  89E6              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89E6              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89E6              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89E6
 140  89E6 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89E7
 142  89E7              ; Movimiento.
 143  89E7
 144  89E7 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89E8 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89EA 00 00        Puntero_mov defw 0
 147  89EC 00           Contador_db_mov db 0
 148  89ED 00           Incrementa_puntero db 0
 149  89EE 00           Repetimos_db db 0
 150  89EF
 151  89EF              ; Variables de funcionamiento. [DRAW].
 152  89EF
 153  89EF 00           Columnas db 0
 154  89F0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89F2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89F2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89F3
 158  89F3              ; variables de control general.
 159  89F3
 160  89F3 00           Ctrl_2 db 0
 161  89F4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89F4              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89F4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89F4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89F4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89F4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89F4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89F4              ;
 169  89F4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89F4
 171  89F4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89F5
 173  89F5              ; 62 Bytes por entidad.
 174  89F5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89F5              ;					         		---------;      ;---------
 176  89F5
 177  89F5
 178  89F5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89F5
 180  89F5 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89F6
 182  89F6              ;														DESCRIPCIÓN:
 183  89F6              ;
 184  89F6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89F6              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89F6              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89F6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89F6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89F6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89F6              ;														BIT 3, Recarga de nueva oleada.
 191  89F6              ;														BIT 4, Recarga de nueva oleada.
 192  89F6
 193  89F6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89F8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89F8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89F8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89F8
 198  89F8
 199  89F8
 200  89F8              ; Gestión de ENTIDADES y CAJAS.
 201  89F8
 202  89F8 02           Limitador_de_entidades_x_frame db 2						; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89F9 00 00        Puntero_store_caja defw 0
 204  89FB 00 00        Puntero_restore_caja defw 0
 205  89FD 00 00        Indice_restore_caja defw 0
 206  89FF 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  8A00 00           Numero_parcial_de_entidades db 0
 208  8A01 00           Entidades_en_curso db 0									; ..... ..... .....
 209  8A02 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  8A03              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  8A03              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  8A03              ;														; _ (Numero_de_malotes)="0".
 213  8A03 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  8A05 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  8A07              ;														; _ puntero (Indice_entidades).
 216  8A07
 217  8A07
 218  8A07              ;---------------------------------------------------------------------------------------------------------------
 219  8A07              ;
 220  8A07              ; Sirven para PINTAR.
 221  8A07
 222  8A07 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  8A09              ;														; _variable para almacenar lo posición del puntero_
 224  8A09              ; 														; _de pila, SP.
 225  8A09 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  8A0B              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  8A0B 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  8A0D              ;														; _el snapshot de los registros de la siguiente entidad.
 229  8A0D              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  8A0D 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  8A0F              ;														; _el snapshot de los registros del siguiente disparo.
 232  8A0F              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  8A0F
 234  8A0F              ;---------------------------------------------------------------------------------------------------------------
 235  8A0F
 236  8A0F              ; Gestión de Disparos.
 237  8A0F
 238  8A0F 00           Numero_de_disparotes db 0
 239  8A10 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  8A12 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  8A14 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  8A15              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  8A15              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  8A15 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  8A17              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  8A17              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  8A17              ;														; _produzca colisión.
 248  8A17 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  8A19              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  8A19 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  8A1C              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  8A1C 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  8A1F              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  8A1F              ;---------------------------------------------------------------------------------------------------------------
 255  8A1F
 256  8A1F              ; Relojes y temporizaciones.
 257  8A1F
 258  8A1F 00           Contador_de_frames db 0
 259  8A20 03           Clock_explosion db 3
 260  8A21 1E           Clock_Entidades_en_curso db 30
 261  8A22 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 262  8A23              ;														; Repite la oleada de entidades.
 263  8A23 01           Habilita_disparo_Amadeus db 1
 264  8A24 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 265  8A25 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 266  8A26
 267  8A26 01           Habilita_disparo_entidad db 1
 268  8A27 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 269  8A28 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 270  8A29
 271  8A29              ;---------------------------------------------------------------------------------------------------------------
 272  8A29
 273  8A29              ; Gestión de NIVELES.
 274  8A29
 275  8A29 00           Nivel db 0												 ; Nivel actual del juego.
 276  8A2A 00 00        Puntero_indice_NIVELES defw 0
 277  8A2C 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 278  8A2E              ; 														 ; _ que definen el NIVEL.
 279  8A2E
 280  8A2E
 281  8A2E              ; Y todo comienza aquí .....
 282  8A2E              ;
 283  8A2E              ; Rutina principal *************************************************************************************************************************************************************************
 284  8A2E              ;
 285  8A2E              ;	14/11/22
 286  8A2E
 287  8A2E              START
 288  8A2E
 289  8A2E 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 290  8A31 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 291  8A33 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 292  8A35 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 293  8A37 F3           	DI
 294  8A38
 295  8A38 3E 07        	ld a,%00000111
 296  8A3A CD E3 98     	call Cls
 297  8A3D
 298  8A3D              ;	call Pinta_marco
 299  8A3D
 300  8A3D CD 01 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 301  8A40
 302  8A40              ;!! Aqui llamaremos a la rutina que hace copia de seguridad de las variables generales.
 303  8A40
 304  8A40 CD 00 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 305  8A43
 306  8A43 CD 13 89     4 call Prepara_cajas
 307  8A46
 308  8A46 CD D3 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 309  8A49              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 310  8A49 CD B0 8D     	call Restore_entidad
 311  8A4C
 312  8A4C 21 00 8A     	ld hl,Numero_parcial_de_entidades
 313  8A4F 46           	ld b,(hl)
 314  8A50 04           	inc b
 315  8A51 05           	dec b
 316  8A52 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 317  8A54
 318  8A54              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 319  8A54              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 320  8A54              ;	Pintamos el resto de entidades:
 321  8A54
 322  8A54              ;	INICIA ENTIDADES !!!!!
 323  8A54
 324  8A54 C5           1 push bc  												; Guardo el contador de entidades.
 325  8A55 CD 2D 8D     	call Inicia_Puntero_objeto
 326  8A58 CD F7 98     	call Recompone_posicion_inicio
 327  8A5B CD 33 93     	call Draw
 328  8A5E CD A0 7F     	call Guarda_foto_registros
 329  8A61 CD 75 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 330  8A64 C1           	pop bc
 331  8A65 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 332  8A67
 333  8A67              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 334  8A67              ; (Esto se dá cuando se inicia una nueva oleada).
 335  8A67
 336  8A67 3A F5 89     	ld a,(Ctrl_1)
 337  8A6A CB 5F        	bit 3,a
 338  8A6C 20 18        	jr nz,5F											; Loop
 339  8A6E
 340  8A6E              ; 	INICIA AMADEUS !!!!!
 341  8A6E
 342  8A6E CD D7 8D     3 call Restore_Amadeus
 343  8A71 CD 2D 8D     	call Inicia_Puntero_objeto
 344  8A74 CD 33 93     	call Draw
 345  8A77 CD A0 7F     	call Guarda_foto_registros
 346  8A7A 11 8C 85     	ld de,Amadeus_db
 347  8A7D CD E9 8D     	call Store_Amadeus
 348  8A80
 349  8A80              ; 	INICIA DISPAROS !!!!!
 350  8A80
 351  8A80 CD E9 8C     	call Inicia_Puntero_Disparo_Entidades
 352  8A83 CD F0 8C     	call Inicia_Puntero_Disparo_Amadeus
 353  8A86
 354  8A86              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 355  8A86
 356  8A86 CD D3 8C     5 call Inicia_punteros_de_cajas
 357  8A89 CD B0 8D     	call Restore_entidad
 358  8A8C
 359  8A8C 3A F5 89     	ld a,(Ctrl_1)
 360  8A8F CB 5F        	bit 3,a
 361  8A91 28 0A        	jr z,6F
 362  8A93
 363  8A93              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 364  8A93
 365  8A93 21 F5 89     	ld hl,Ctrl_1
 366  8A96 CB 9E        	res 3,(hl)
 367  8A98 CD F7 8C     	call Calcula_numero_de_malotes
 368  8A9B 18 07        	jr 7F
 369  8A9D
 370  8A9D              ; ----------
 371  8A9D
 372  8A9D 3A 00 8A     6 ld a,(Numero_parcial_de_entidades)
 373  8AA0 3C           	inc a
 374  8AA1 32 02 8A     	ld (Numero_de_malotes),a
 375  8AA4
 376  8AA4 AF           7 xor a
 377  8AA5 FB           2 ei
 378  8AA6 28 FD        	jr z,2B
 379  8AA8
 380  8AA8 3A 1F 8A     	ld a,(Contador_de_frames)
 381  8AAB 47           	ld b,a
 382  8AAC 3A 22 8A     	ld a,(Activa_recarga_cajas)
 383  8AAF B8           	cp b
 384  8AB0 28 08        	jr z,8F
 385  8AB2
 386  8AB2 21 F5 89     	ld hl,Ctrl_1
 387  8AB5 CB E6        	set 4,(hl)
 388  8AB7 AF           	xor a
 389  8AB8 18 EB        	jr 2B
 390  8ABA
 391  8ABA 21 F5 89     8 ld hl,Ctrl_1
 392  8ABD CB A6        	res 4,(hl)
 393  8ABF F3           	di
 394  8AC0
 395  8AC0 3A 1F 8A     	ld a,(Contador_de_frames)
 396  8AC3
 397  8AC3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 398  8AC3              ;! _ IMPREDECIBLE !!!!
 399  8AC3
 400  8AC3 C6 0A        	add 10
 401  8AC5 32 21 8A     	ld (Clock_Entidades_en_curso),a
 402  8AC8
 403  8AC8 C3 43 8A     	jp 4B
 404  8ACB
 405  8ACB              ; -----------------------------------------------------------------------------------
 406  8ACB
 407  8ACB              Frame
 408  8ACB
 409  8ACB              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 410  8ACB              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 411  8ACB
 412  8ACB              ; PINTAMOS.
 413  8ACB
 414  8ACB 3E 02            ld a,2
 415  8ACD D3 FE            out ($fe),a
 416  8ACF CD 37 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 417  8AD2 CD 70 96     	call Extrae_foto_disparos
 418  8AD5 3E 01            ld a,1
 419  8AD7 D3 FE            out ($fe),a
 420  8AD9
 421  8AD9              ; ----------------------------------------------------------------------
 422  8AD9
 423  8AD9              ; RELOJES.
 424  8AD9
 425  8AD9 21 1F 8A     	ld hl,Contador_de_frames
 426  8ADC 34           	inc (hl)											; 0 - 255
 427  8ADD
 428  8ADD 3A 21 8A     	ld a,(Clock_Entidades_en_curso)
 429  8AE0 47           	ld b,a
 430  8AE1 3A 1F 8A     	ld a,(Contador_de_frames)
 431  8AE4 B8           	cp b
 432  8AE5 20 18        	jr nz,13F
 433  8AE7
 434  8AE7 3A 00 8A     	ld a,(Numero_parcial_de_entidades)
 435  8AEA 47           	ld b,a
 436  8AEB 3A 01 8A     	ld a,(Entidades_en_curso)
 437  8AEE B8           	cp b
 438  8AEF 28 0E        	jr z,13F
 439  8AF1 30 0C        	jr nc,13F
 440  8AF3
 441  8AF3 3C           	inc a
 442  8AF4 32 01 8A     	ld (Entidades_en_curso),a
 443  8AF7
 444  8AF7 3A 21 8A     	ld a,(Clock_Entidades_en_curso)
 445  8AFA
 446  8AFA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 447  8AFA              ;! _ IMPREDECIBLE !!!!
 448  8AFA
 449  8AFA C6 64        	add 100
 450  8AFC 32 21 8A     	ld (Clock_Entidades_en_curso),a
 451  8AFF
 452  8AFF 21 23 8A     13 ld hl,Habilita_disparo_Amadeus
 453  8B02 11 25 8A     	ld de,Temporiza_disparo_Amadeus
 454  8B05 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 455  8B08
 456  8B08 21 26 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 457  8B0B 11 28 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 458  8B0E CD D5 7F     	call Habilita_disparos
 459  8B11
 460  8B11              ; COLISIONES.
 461  8B11
 462  8B11 CD 15 92     	call Selector_de_impactos
 463  8B14
 464  8B14              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 465  8B14              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 466  8B14              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 467  8B14
 468  8B14 AF           	xor a
 469  8B15 32 14 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 470  8B18
 471  8B18 CD D3 8C     	call Inicia_punteros_de_cajas
 472  8B1B CD B0 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 473  8B1E              ; 														; _ en DRAW.
 474  8B1E 3A B7 89     	ld a,(Filas)
 475  8B21 A7           	and a
 476  8B22 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 477  8B24 CD C2 8D     	call Incrementa_punteros_de_cajas
 478  8B27 18 F2        	jr 12B
 479  8B29
 480  8B29              ; ---------------------------------------------------------------------------------------
 481  8B29
 482  8B29 CD 90 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 483  8B2C 21 00 70     	ld hl,Album_de_fotos
 484  8B2F 22 0B 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 485  8B32              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 486  8B32 3A 00 8A     	ld a,(Numero_parcial_de_entidades)
 487  8B35 47               ld b,a
 488  8B36 A7           	and a
 489  8B37 20 14        	jr nz,2F
 490  8B39
 491  8B39 21 F5 89     	ld hl,Ctrl_1
 492  8B3C CB 66        	bit 4,(hl)
 493  8B3E C2 CE 8B     	jp nz,4F
 494  8B41
 495  8B41 21 F5 89     	ld hl,Ctrl_1
 496  8B44 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 497  8B46
 498  8B46 3A 1F 8A     	ld a,(Contador_de_frames)
 499  8B49 3C           	inc a
 500  8B4A 32 22 8A     	ld (Activa_recarga_cajas),a
 501  8B4D
 502  8B4D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 503  8B4D
 504  8B4D 3A 01 8A     2 ld a,(Entidades_en_curso)
 505  8B50 A7           	and a
 506  8B51 28 7B        	jr z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 507  8B53 47           	ld b,a												; Entidades en curso en B.
 508  8B54
 509  8B54              ; Código que ejecutamos con cada entidad:
 510  8B54              ; Impacto ???
 511  8B54
 512  8B54 C5           15 push bc 												; Nº de entidades en curso.
 513  8B55
 514  8B55 3A D0 89     	ld a,(Impacto)
 515  8B58 A7           	and a
 516  8B59 28 2D        	jr z,8F
 517  8B5B
 518  8B5B              ; Hay Impacto en esta entidad.
 519  8B5B
 520  8B5B 21 20 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 521  8B5E 35           	dec (hl)
 522  8B5F 20 62        	jr nz,6F
 523  8B61
 524  8B61              ;! Velocidad de la animación de la explosión.
 525  8B61
 526  8B61 36 03        	ld (hl),3 											; Reiniciamos el temporizador de la explosión,_
 527  8B63              ;														; _,(velocidad de la explosión).
 528  8B63 CD 8A 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 529  8B66
 530  8B66              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 531  8B66
 532  8B66 3A F3 89     	ld a,(Ctrl_2)
 533  8B69 CB 4F        	bit 1,a
 534  8B6B 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 535  8B6D
 536  8B6D              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 537  8B6D
 538  8B6D 3A BF 89     	ld a,(CTRL_DESPLZ)
 539  8B70 A7           	and a
 540  8B71 20 08        	jr nz,21F
 541  8B73
 542  8B73 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 543  8B76 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 544  8B79 18 06        	jr 22F
 545  8B7B
 546  8B7B 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 547  8B7E 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 548  8B81
 549  8B81 21 F3 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 550  8B84 CB CE        	set 1,(hl)
 551  8B86 18 22        	jr 7F
 552  8B88
 553  8B88              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 554  8B88              ; _con las coordenadas de la entidad almacenada en DRAW.
 555  8B88
 556  8B88 3A F5 89     8 ld a,(Ctrl_1)
 557  8B8B CB 57        	bit 2,a
 558  8B8D 28 1B        	jr z,7F
 559  8B8F
 560  8B8F 2A 17 8A     	ld hl,(Coordenadas_disparo_certero)
 561  8B92 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 562  8B93              ;														; E contiene la coordenada_X del disparo.
 563  8B93 2A BD 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 564  8B96              ;														; H FILA, (Coordenada_y de la entidad).
 565  8B96 A7           	and a
 566  8B97 ED 52        	sbc hl,de
 567  8B99
 568  8B99 CD 4C 92     	call Determina_resultado_comparativa
 569  8B9C
 570  8B9C              ;! Debug colisiones
 571  8B9C 78           	ld a,b
 572  8B9D A7           	and a
 573  8B9E              ;	ld a,(Cuad_objeto)
 574  8B9E              ;	inc b
 575  8B9E              ;	dec b
 576  8B9E 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 577  8BA0              ;	jr z,$
 578  8BA0
 579  8BA0              ;! Debug colisiones
 580  8BA0
 581  8BA0              ; ----- ----- -----
 582  8BA0
 583  8BA0 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 584  8BA2 32 D0 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 585  8BA5
 586  8BA5 21 F5 89     	ld hl,Ctrl_1
 587  8BA8 CB 96        	res 2,(hl)
 588  8BAA
 589  8BAA CD 01 8C     7 call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 590  8BAD
 591  8BAD 3A E5 89     	ld a,(Ctrl_0)
 592  8BB0 CB 67        	bit 4,a
 593  8BB2 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 594  8BB4
 595  8BB4              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 596  8BB4              ; [[[
 597  8BB4 CD 4B 8E     	call Detecta_disparo_entidad
 598  8BB7              ; ]]]
 599  8BB7 CD 9A 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 600  8BBA
 601  8BBA 21 E5 89     	ld hl,Ctrl_0
 602  8BBD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 603  8BBF AF           	xor a
 604  8BC0 32 E6 89     	ld (Obj_dibujado),a
 605  8BC3
 606  8BC3 CD 75 8D     6 call Store_Restore_cajas
 607  8BC6
 608  8BC6 C1           	pop bc
 609  8BC7 10 8B        	djnz 15B
 610  8BC9
 611  8BC9              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 612  8BC9
 613  8BC9 3E 02        	ld a,2
 614  8BCB 32 F8 89     	ld (Limitador_de_entidades_x_frame),a
 615  8BCE
 616  8BCE              ; ------------------------------------
 617  8BCE              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 618  8BCE              ; Hemos gestionado todas las unidades.
 619  8BCE              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 620  8BCE
 621  8BCE              ;	ld hl,Ctrl_1
 622  8BCE              ;	res 2,(hl)
 623  8BCE
 624  8BCE              ; ------------------------------------
 625  8BCE
 626  8BCE              ; Tras la gestión de las entidades, ... AMADEUS.
 627  8BCE
 628  8BCE CD D7 8D     4 call Restore_Amadeus
 629  8BD1
 630  8BD1 3A D0 89     	ld a,(Impacto)
 631  8BD4 A7           	and a
 632  8BD5 20 FE        	jr nz,$
 633  8BD7
 634  8BD7 CD 6B 8C     	call Mov_Amadeus
 635  8BDA
 636  8BDA 3A E5 89     	ld a,(Ctrl_0)
 637  8BDD CB 67        	bit 4,a
 638  8BDF 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 639  8BE1
 640  8BE1 CD 9A 8C     	call Guarda_foto_entidad_a_pintar
 641  8BE4
 642  8BE4 21 E5 89     3 ld hl,Ctrl_0
 643  8BE7 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 644  8BE9 AF           	xor a
 645  8BEA 32 E6 89     	ld (Obj_dibujado),a
 646  8BED
 647  8BED 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 648  8BF0 CD E9 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 649  8BF3
 650  8BF3 CD AE 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 651  8BF6
 652  8BF6              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 653  8BF6
 654  8BF6 CD 0F 8D     	call Calcula_numero_de_disparotes
 655  8BF9 CD F7 8C     9 call Calcula_numero_de_malotes
 656  8BFC
 657  8BFC 3E 04        	ld a,4
 658  8BFE D3 FE        	out ($fe),a
 659  8C00
 660  8C00 C9           	ret
 661  8C01
 662  8C01              ; --------------------------------------------------------------------------------------------------------------
 663  8C01              ;
 664  8C01              ;	27/05/23
 665  8C01
 666  8C01              Mov_obj
 667  8C01
 668  8C01              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 669  8C01
 670  8C01 3A F3 89     	ld a,(Ctrl_2)
 671  8C04 CB 4F        	bit 1,a
 672  8C06 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 673  8C08
 674  8C08              ; Explosión:
 675  8C08
 676  8C08 3A F4 89     	ld a,(Frames_explosion)
 677  8C0B A7           	and a
 678  8C0C 20 11        	jr nz,4F
 679  8C0E
 680  8C0E              ; Una alimaña menos!!!!!!!!!1
 681  8C0E
 682  8C0E CD F2 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 683  8C11 21 00 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 684  8C14 35           	dec (hl)
 685  8C15 21 01 8A     	ld hl,Entidades_en_curso
 686  8C18 35           	dec (hl)
 687  8C19 21 FF 89     	ld hl,Numero_de_entidades
 688  8C1C 35           	dec (hl)
 689  8C1D 18 4B        	jr 3F
 690  8C1F
 691  8C1F              ; -----
 692  8C1F
 693  8C1F              ;	`Movemos´ la explosión.
 694  8C1F
 695  8C1F 2A C5 89     4 ld hl,(Puntero_DESPLZ_der)
 696  8C22 23           	inc hl
 697  8C23 23           	inc hl
 698  8C24 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 699  8C27 CD 27 8D     	call Extrae_address
 700  8C2A 22 BB 89     	ld (Puntero_objeto),hl
 701  8C2D
 702  8C2D 21 F4 89     	ld hl,Frames_explosion
 703  8C30 35           	dec (hl)
 704  8C31
 705  8C31 CD 8A 8C     	call Guarda_foto_entidad_a_borrar
 706  8C34 18 34        	jr 3F
 707  8C36
 708  8C36 AF           2 xor a
 709  8C37 32 E6 89     	ld (Obj_dibujado),a
 710  8C3A 32 E5 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 711  8C3D              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 712  8C3D              ; 														; _de la entidad.
 713  8C3D CD A4 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 714  8C40              ;														; Obj_dibujado="0".
 715  8C40              ; Movemos Entidades malignas.
 716  8C40
 717  8C40 3A E7 89     	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 718  8C43 A7           	and a 												; _a movernos. (Limitador_de_entidades).
 719  8C44 C8           	ret z
 720  8C45
 721  8C45 21 E8 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 722  8C48 34           	inc (hl)
 723  8C49 35           	dec (hl)                                            ; Salimos de la rutina.
 724  8C4A C8           	ret z
 725  8C4B
 726  8C4B CD 11 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 727  8C4E
 728  8C4E 3A E5 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 729  8C51 CB 67        	bit 4,a
 730  8C53 C8           	ret z
 731  8C54
 732  8C54              ; Ha habido desplazamiento de la entidad maligna.
 733  8C54              ; Ha llegado a zona de AMADEUS ???
 734  8C54
 735  8C54 3A BE 89     	ld a,(Coordenada_y)
 736  8C57 FE 14        	cp $14
 737  8C59 D4 DF 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 738  8C5C              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 739  8C5C              ; ---------
 740  8C5C
 741  8C5C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 742  8C5E 32 E6 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 743  8C61 CD A4 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 744  8C64 CD BB 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 745  8C67 CD 8A 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 746  8C6A C9           3 ret													; _de la misma.
 747  8C6B
 748  8C6B              ; --------------------------------------------------------------------------------------------------------------
 749  8C6B              ;
 750  8C6B              ;	29/1/23
 751  8C6B
 752  8C6B              Mov_Amadeus
 753  8C6B
 754  8C6B AF           	xor a
 755  8C6C 32 E6 89     	ld (Obj_dibujado),a
 756  8C6F CD A4 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 757  8C72              ;														; Obj_dibujado="0".
 758  8C72              ; Movemos Amadeus.
 759  8C72
 760  8C72 CD 14 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 761  8C75 3A E5 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 762  8C78 CB 67        	bit 4,a
 763  8C7A C8           	ret z
 764  8C7B
 765  8C7B              ; ---------
 766  8C7B
 767  8C7B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 768  8C7D 32 E6 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 769  8C80 CD A4 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 770  8C83 CD BB 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 771  8C86 CD 8A 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 772  8C89 C9           	ret													; _de la nave.
 773  8C8A
 774  8C8A              ; --------------------------------------------------------------------------------------------------------------
 775  8C8A              ;
 776  8C8A              ;	31/01/23
 777  8C8A              ;
 778  8C8A              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 779  8C8A
 780  8C8A              Guarda_foto_entidad_a_borrar
 781  8C8A
 782  8C8A CD 0D 96     	call Prepara_draw
 783  8C8D CD 47 95     	call calcula_CColumnass
 784  8C90 CD 7E 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 785  8C93 CD D3 95     	call Define_rutina_de_impresion
 786  8C96 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 787  8C99 C9           	ret
 788  8C9A
 789  8C9A              ; --------------------------------------------------------------------------------------------------------------
 790  8C9A              ;
 791  8C9A              ;	31/01/23
 792  8C9A              ;
 793  8C9A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 794  8C9A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 795  8C9A
 796  8C9A              Guarda_foto_entidad_a_pintar
 797  8C9A
 798  8C9A CD C7 8C     	call Repone_pintar
 799  8C9D CD 33 93     	call Draw
 800  8CA0 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 801  8CA3 C9           	ret
 802  8CA4
 803  8CA4              ; --------------------------------------------------------------------------------------------------------------
 804  8CA4              ;
 805  8CA4              ;
 806  8CA4
 807  8CA4 21 B7 89     Prepara_var_pintado_borrado	ld hl,Filas
 808  8CA7 3A E6 89     	ld a,(Obj_dibujado)
 809  8CAA A7           	and a
 810  8CAB 28 05        	jr z,1F
 811  8CAD 11 DB 89     	ld de,Variables_de_pintado
 812  8CB0 18 03        	jr 2F
 813  8CB2 11 D1 89     1 ld de,Variables_de_borrado
 814  8CB5 01 08 00     2 ld bc,8
 815  8CB8 ED B0        	ldir
 816  8CBA C9           	ret
 817  8CBB
 818  8CBB              ; --------------------------------------------------------------------------------------------------------------
 819  8CBB
 820  8CBB 21 D1 89     Repone_borrar ld hl,Variables_de_borrado
 821  8CBE 11 B7 89     	ld de,Filas
 822  8CC1 01 08 00     	ld bc,8
 823  8CC4 ED B0        	ldir
 824  8CC6 C9           	ret
 825  8CC7
 826  8CC7 21 DB 89     Repone_pintar ld hl,Variables_de_pintado
 827  8CCA 11 B7 89     	ld de,Filas
 828  8CCD 01 08 00     	ld bc,8
 829  8CD0 ED B0        	ldir
 830  8CD2 C9           	ret
 831  8CD3
 832  8CD3              ; *************************************************************************************************************************************************************
 833  8CD3              ;
 834  8CD3              ; 8/1/23
 835  8CD3              ;
 836  8CD3              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 837  8CD3              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 838  8CD3              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 839  8CD3
 840  8CD3              ; Destruye HL y DE !!!!!
 841  8CD3
 842  8CD3              Inicia_punteros_de_cajas
 843  8CD3
 844  8CD3 21 74 85     	ld hl,Indice_de_cajas
 845  8CD6 CD 27 8D         call Extrae_address
 846  8CD9 22 F9 89         ld (Puntero_store_caja),hl
 847  8CDC 21 76 85     	ld hl,Indice_de_cajas+2
 848  8CDF 22 FD 89     	ld (Indice_restore_caja),hl
 849  8CE2 CD 27 8D     	call Extrae_address
 850  8CE5 22 FB 89     	ld (Puntero_restore_caja),hl
 851  8CE8 C9               ret
 852  8CE9
 853  8CE9              ; *************************************************************************************************************************************************************
 854  8CE9              ;
 855  8CE9              ; 8/1/23
 856  8CE9              ;
 857  8CE9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 858  8CE9
 859  8CE9 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 860  8CEC 22 10 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 861  8CEF C9           	ret
 862  8CF0 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 863  8CF3 22 12 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 864  8CF6 C9           	ret
 865  8CF7
 866  8CF7              ; -------------------------------------------------------------------------------------------------------------
 867  8CF7              ;
 868  8CF7              ; 28/2/23
 869  8CF7              ;
 870  8CF7
 871  8CF7              Calcula_numero_de_malotes
 872  8CF7
 873  8CF7 21 00 70     	ld hl,Album_de_fotos
 874  8CFA EB           	ex de,hl
 875  8CFB 2A 0B 8A     	ld hl,(Stack_snapshot)
 876  8CFE
 877  8CFE 06 00        	ld b,0
 878  8D00 7D           	ld a,l
 879  8D01 93           	sub e
 880  8D02 28 07        	jr z,1F
 881  8D04
 882  8D04              ; Nº de malotes no es "0".
 883  8D04
 884  8D04 D6 06        2 sub 6
 885  8D06 04           	inc b
 886  8D07 A7           	and a
 887  8D08 20 FA        	jr nz,2B
 888  8D0A 78           	ld a,b
 889  8D0B
 890  8D0B 32 02 8A     1 ld (Numero_de_malotes),a
 891  8D0E C9           	ret
 892  8D0F
 893  8D0F              ; -------------------------------------------------------------------------------------------------------------
 894  8D0F              ;
 895  8D0F              ; 28/2/23
 896  8D0F              ;
 897  8D0F
 898  8D0F              Calcula_numero_de_disparotes
 899  8D0F
 900  8D0F 21 85 70     	ld hl,Album_de_fotos_disparos
 901  8D12 EB           	ex de,hl
 902  8D13 2A 0D 8A     	ld hl,(Stack_snapshot_disparos)
 903  8D16
 904  8D16 06 00        	ld b,0
 905  8D18 7D           	ld a,l
 906  8D19 93           	sub e
 907  8D1A 28 07        	jr z,1F
 908  8D1C
 909  8D1C              ; Nº de malotes no es "0".
 910  8D1C
 911  8D1C D6 06        2 sub 6
 912  8D1E 04           	inc b
 913  8D1F A7           	and a
 914  8D20 20 FA        	jr nz,2B
 915  8D22 78           	ld a,b
 916  8D23
 917  8D23 32 0F 8A     1 ld (Numero_de_disparotes),a
 918  8D26 C9           	ret
 919  8D27              ; *************************************************************************************************************************************************************
 920  8D27              ;
 921  8D27              ; 20/10/22
 922  8D27              ;
 923  8D27              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 924  8D27              ;
 925  8D27              ; Destruye el puntero y DE !!!!!
 926  8D27
 927  8D27 5E           Extrae_address ld e,(hl)
 928  8D28 23           	inc hl
 929  8D29 56           	ld d,(hl)
 930  8D2A 2B           	dec hl
 931  8D2B EB           	ex de,hl
 932  8D2C C9           	ret
 933  8D2D
 934  8D2D              ; *************************************************************************************************************************************************************
 935  8D2D              ;
 936  8D2D              ;	7/2/23
 937  8D2D              ;
 938  8D2D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 939  8D2D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 940  8D2D              ;
 941  8D2D              ;   Destruye HL y BC !!!!!,
 942  8D2D              ;
 943  8D2D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 944  8D2D              ;					"0" ..... Izquierda.
 945  8D2D
 946  8D2D              Inicia_Puntero_objeto
 947  8D2D
 948  8D2D 3A CB 89     	ld a,(Cuad_objeto)
 949  8D30 E6 01        	and 1
 950  8D32 F5           	push af
 951  8D33 CC 51 8D     	call z,Inicia_puntero_objeto_izq
 952  8D36 F1           	pop af
 953  8D37 28 2B        	jr z,1F
 954  8D39 CD 3E 8D     	call Inicia_puntero_objeto_der
 955  8D3C 18 26        	jr 1F
 956  8D3E
 957  8D3E              ; Arrancamos desde la parte izquierda de la pantalla.
 958  8D3E              ; Iniciamos (Indice_Sprite_der).
 959  8D3E
 960  8D3E 2A C1 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 961  8D41 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 962  8D44 CD 27 8D     	call Extrae_address
 963  8D47 22 BB 89     	ld (Puntero_objeto),hl
 964  8D4A
 965  8D4A 2A C3 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 966  8D4D 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 967  8D50 C9           	ret
 968  8D51
 969  8D51              ; Arrancamos desde la parte derecha de la pantalla.
 970  8D51              ; Iniciamos (Indice_Sprite_izq).
 971  8D51
 972  8D51 2A C3 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 973  8D54 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 974  8D57 CD 27 8D     	call Extrae_address
 975  8D5A 22 BB 89     	ld (Puntero_objeto),hl
 976  8D5D
 977  8D5D 2A C1 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 978  8D60 22 C5 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 979  8D63 C9           	ret
 980  8D64
 981  8D64              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 982  8D64
 983  8D64 21 48 83     1 ld hl,Amadeus
 984  8D67 ED 4B BB 89  	ld bc,(Puntero_objeto)
 985  8D6B B7 ED 42     	sub hl,bc
 986  8D6E C0           	ret nz
 987  8D6F 21 E5 89     	ld hl,Ctrl_0
 988  8D72 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 989  8D74 C9           	ret 												; _de nuestra nave en los extremos.
 990  8D75
 991  8D75              ; *************************************************************************************************************************************************************
 992  8D75              ;
 993  8D75              ;	14/5/23
 994  8D75              ;
 995  8D75              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 996  8D75              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 997  8D75
 998  8D75              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 999  8D75              ;	_de la 2ª y 3ª entidad respectivamente.
1000  8D75
1001  8D75              Store_Restore_cajas
1002  8D75
1003  8D75 E5           	push hl
1004  8D76 D5           	push de
1005  8D77 C5            	push bc
1006  8D78
1007  8D78              ;	STORE !!!!!
1008  8D78              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1009  8D78
1010  8D78 21 B7 89     	ld hl,Filas
1011  8D7B ED 5B F9 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1012  8D7F 01 3E 00     	ld bc,62
1013  8D82 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1014  8D84
1015  8D84              ; 	Entidad_sospechosa. 20/4/23
1016  8D84
1017  8D84 3A D0 89     	ld a,(Impacto)
1018  8D87 A7           	and a
1019  8D88 28 0C        	jr z,1F
1020  8D8A
1021  8D8A 2A F9 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1022  8D8D 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1023  8D90 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1024  8D91 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1025  8D93 22 15 8A     	ld (Entidad_sospechosa_de_colision),hl
1026  8D96
1027  8D96              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1028  8D96
1029  8D96 2A FB 89     1 ld hl,(Puntero_restore_caja)
1030  8D99 7E           	ld a,(hl)
1031  8D9A A7           	and a
1032  8D9B F5           	push af
1033  8D9C 28 08        	jr z,2F
1034  8D9E
1035  8D9E 11 B7 89     	ld de,Filas
1036  8DA1 01 3E 00     	ld bc,62
1037  8DA4 ED B0        	ldir
1038  8DA6
1039  8DA6 CD C2 8D     2 call Incrementa_punteros_de_cajas
1040  8DA9 F1           	pop af
1041  8DAA 28 EA        	jr z,1B
1042  8DAC
1043  8DAC C1           	pop bc
1044  8DAD D1           	pop de
1045  8DAE E1           	pop hl
1046  8DAF
1047  8DAF C9           	ret
1048  8DB0
1049  8DB0              ; **************************************************************************************************
1050  8DB0              ;
1051  8DB0              ;	12/05/23
1052  8DB0              ;
1053  8DB0              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1054  8DB0
1055  8DB0 E5           Restore_entidad push hl
1056  8DB1 D5           	push de
1057  8DB2 C5            	push bc
1058  8DB3
1059  8DB3 2A F9 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1060  8DB6 11 B7 89     	ld de,Filas
1061  8DB9 01 3E 00     	ld bc,62
1062  8DBC ED B0        	ldir
1063  8DBE
1064  8DBE C1           	pop bc
1065  8DBF D1           	pop de
1066  8DC0 E1           	pop hl
1067  8DC1 C9           	ret
1068  8DC2
1069  8DC2
1070  8DC2              ; **************************************************************************************************
1071  8DC2              ;
1072  8DC2              ;	08/05/23
1073  8DC2              ;
1074  8DC2              ;	Incrementamos los dos punteros de entidades. (+1).
1075  8DC2
1076  8DC2 2A FB 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1077  8DC5 22 F9 89     	ld (Puntero_store_caja),hl
1078  8DC8 2A FD 89     	ld hl,(Indice_restore_caja)
1079  8DCB 23           	inc hl
1080  8DCC 23           	inc hl
1081  8DCD 22 FD 89     	ld (Indice_restore_caja),hl
1082  8DD0 CD 27 8D         call Extrae_address
1083  8DD3 22 FB 89         ld (Puntero_restore_caja),hl
1084  8DD6 C9               ret
1085  8DD7
1086  8DD7              ; **************************************************************************************************
1087  8DD7              ;
1088  8DD7              ;	25/01/23
1089  8DD7              ;
1090  8DD7              ;	Restore_Amadeus
1091  8DD7              ;
1092  8DD7              ;	Cargamos en DRAW los parámetros de Amadeus.
1093  8DD7              ;
1094  8DD7
1095  8DD7 E5           Restore_Amadeus	push hl
1096  8DD8 D5           	push de
1097  8DD9 C5            	push bc
1098  8DDA 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1099  8DDD 11 B7 89     	ld de,Filas
1100  8DE0 01 3E 00     	ld bc,62
1101  8DE3 ED B0        	ldir
1102  8DE5 C1           	pop bc
1103  8DE6 D1           	pop de
1104  8DE7 E1           	pop hl
1105  8DE8 C9           	ret
1106  8DE9
1107  8DE9              ; *************************************************************************************************************************************************************
1108  8DE9              ;
1109  8DE9              ;	29/04/23
1110  8DE9              ;
1111  8DE9              ;	Store_Amadeus
1112  8DE9              ;
1113  8DE9              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1114  8DE9              ;
1115  8DE9              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1116  8DE9              ;
1117  8DE9              ;	DESTRUYE: HL y BC y DE.
1118  8DE9
1119  8DE9 21 B7 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1120  8DEC 01 3E 00     	ld bc,62
1121  8DEF ED B0        	ldir
1122  8DF1 C9           	ret
1123  8DF2
1124  8DF2              ; -----------------------------------------------------------
1125  8DF2              ;
1126  8DF2              ;	27/04/23
1127  8DF2              ;
1128  8DF2              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1129  8DF2              ;
1130  8DF2              ;	Destruye: HL,BC,DE,A
1131  8DF2
1132  8DF2 21 B7 89     Borra_datos_entidad ld hl,Filas
1133  8DF5 01 3D 00     	ld bc,61
1134  8DF8 AF           	xor a
1135  8DF9 77           	ld (hl),a
1136  8DFA 11 B8 89     	ld de,Filas+1
1137  8DFD ED B0        	ldir
1138  8DFF C9           	ret
1139  8E00
1140  8E00              ; -----------------------------------------------------------
1141  8E00
1142  8E00              ; Teclado.
1143  8E00
1144  8E00 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1145  8E02 DB FE        	in a,($fe)
1146  8E04 E6 01        	and $01
1147  8E06 28 02        	jr z,1f
1148  8E08 18 F6        	jr Pulsa_ENTER
1149  8E0A C9           1 ret
1150  8E0B
1151  8E0B              ; **************************************************************************************************
1152  8E0B              ;
1153  8E0B              ; Temporización.
1154  8E0B
1155  8E0B              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1156  8E0B              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1157  8E0B              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1158  8E0B              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1159  8E0B
1160  8E0B              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1161  8E0B              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1162  8E0B              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1163  8E0B
1164  8E0B              ; A partir de $4f61 no hace falta DELAY.
1165  8E0B
1166  8E0B              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1167  8E0B
1168  8E0B 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1169  8E0E 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1170  8E0F 78           	LD A,B
1171  8E10 A7           	AND A
1172  8E11 20 FB        	JR NZ,wait
1173  8E13 C9           	RET
1174  8E14
1175  8E14              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1176  8E14              ;
1177  8E14              ;	5/3/23
1178  8E14              ;
1179  8E14              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1180  8E14
1181  8E14              Movimiento_Amadeus
1182  8E14
1183  8E14              ; Disparo.
1184  8E14
1185  8E14 3A 23 8A     	ld a,(Habilita_disparo_Amadeus)
1186  8E17 A7           	and a
1187  8E18 20 02        	jr nz,1F
1188  8E1A 18 15        	jr 2F
1189  8E1C
1190  8E1C 3E F7        1 ld a,$f7													; "5" para disparar.
1191  8E1E DB FE        	in a,($fe)
1192  8E20 E6 10        	and $10
1193  8E22
1194  8E22 F5           	push af
1195  8E23 CC 5B 8E     	call z,Genera_disparo
1196  8E26 F1           	pop af
1197  8E27 20 08        	jr nz,2F
1198  8E29
1199  8E29 3A 23 8A     	ld a,(Habilita_disparo_Amadeus)
1200  8E2C EE 01        	xor 1
1201  8E2E 32 23 8A     	ld (Habilita_disparo_Amadeus),a
1202  8E31
1203  8E31 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1204  8E33 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1205  8E35 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1206  8E37 CC B1 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1207  8E3A 3E F7        	ld a,$f7
1208  8E3C DB FE        	in a,($fe)
1209  8E3E E6 01        	and $01
1210  8E40 C8           	ret z
1211  8E41
1212  8E41 3E F7        	ld a,$f7
1213  8E43 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1214  8E45 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1215  8E47 CC 93 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1216  8E4A C9           	ret
1217  8E4B
1218  8E4B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1219  8E4B              ;
1220  8E4B              ;	Rutina provisional para que los malotes cagen balas.
1221  8E4B
1222  8E4B              Detecta_disparo_entidad
1223  8E4B
1224  8E4B 3A 26 8A     	ld a,(Habilita_disparo_entidad)
1225  8E4E A7           	and a
1226  8E4F C8           	ret z
1227  8E50 3E 7F        	ld a,$7f
1228  8E52 DB FE        	in a,($fe)
1229  8E54 E6 01        	and 1
1230  8E56 C0           	ret nz
1231  8E57 CD 5B 8E     	call Genera_disparo
1232  8E5A C9           	ret
1233  8E5B
1234  8E5B              ; ---------------------------------------------------------------
1235  8E5B
1236  8E5B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E5B              ; ******************************************************************************************************************************************************************************************
   2+ 8E5B              ;
   3+ 8E5B              ;   17/04/23
   4+ 8E5B              ;
   5+ 8E5B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E5B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E5B              ;
   8+ 8E5B              ;
   9+ 8E5B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E5B              ;
  11+ 8E5B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E5B              ;               _ hacen las entidades hacia abajo.
  13+ 8E5B              ;
  14+ 8E5B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E5B              ;
  16+ 8E5B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E5B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E5B              ;
  19+ 8E5B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E5B              ;           _ la bala.
  21+ 8E5B              ;
  22+ 8E5B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E5B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E5B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E5B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E5B              ;           _ en el momento de generarse la bala)).
  27+ 8E5B
  28+ 8E5B              Genera_disparo
  29+ 8E5B
  30+ 8E5B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E5B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E5B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E5B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E5B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E5B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E5B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E5B
  38+ 8E5B              ; Exclusiones:
  39+ 8E5B
  40+ 8E5B 3A EF 89         ld a,(Columnas)
  41+ 8E5E 47               ld b,a
  42+ 8E5F 3A B8 89         ld a,(Columns)
  43+ 8E62 B8               cp b
  44+ 8E63 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E64
  46+ 8E64              ; ----- ----- -----
  47+ 8E64
  48+ 8E64 3A E5 89         ld a,(Ctrl_0)
  49+ 8E67 CB 77            bit 6,a
  50+ 8E69 20 06            jr nz,14F
  51+ 8E6B
  52+ 8E6B 3A BE 89         ld a,(Coordenada_y)
  53+ 8E6E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E70 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E71
  56+ 8E71 21 00 80     14 ld hl,Indice_disparo
  57+ 8E74 3A BF 89         ld a,(CTRL_DESPLZ)
  58+ 8E77 4F               ld c,a
  59+ 8E78 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E7A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E7A              ;                                            ""        ""       "f9", B="1"
  62+ 8E7A              ;                                            ""        ""       "fb", B="2"
  63+ 8E7A              ;                                            ""        ""       "fb", B="3"
  64+ 8E7A A7               and a
  65+ 8E7B 28 10            jr z,1F
  66+ 8E7D E6 01            and 1
  67+ 8E7F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E80
  69+ 8E80 79               ld a,c
  70+ 8E81 16 F9            ld d,$f9
  71+ 8E83 23           2 inc hl
  72+ 8E84 23               inc hl
  73+ 8E85 04               inc b
  74+ 8E86 BA               cp d
  75+ 8E87 28 04            jr z,1F
  76+ 8E89 14               inc d
  77+ 8E8A 14               inc d
  78+ 8E8B 18 F6            jr 2B
  79+ 8E8D
  80+ 8E8D CD 27 8D     1 call Extrae_address
  81+ 8E90 E5               push hl
  82+ 8E91 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E93 DD 21 AC 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E97
  85+ 8E97              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E97              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E97
  88+ 8E97 3A E5 89         ld a,(Ctrl_0)
  89+ 8E9A CB 77            bit 6,a
  90+ 8E9C 20 04            jr nz,19F
  91+ 8E9E
  92+ 8E9E AF               xor a
  93+ 8E9F 32 26 8A         ld (Habilita_disparo_entidad),a
  94+ 8EA2
  95+ 8EA2 3A CB 89     19 ld a,(Cuad_objeto)
  96+ 8EA5 FE 02            cp 2
  97+ 8EA7 38 66            jr c,3F
  98+ 8EA9 28 64            jr z,3F
  99+ 8EAB
 100+ 8EAB              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8EAB
 102+ 8EAB E6 01            and 1
 103+ 8EAD 28 30            jr z,4F
 104+ 8EAF
 105+ 8EAF              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8EAF              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8EAF              ;
 108+ 8EAF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8EAF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8EAF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8EAF
 112+ 8EAF 2A B9 89     	ld hl,(Posicion_actual)
 113+ 8EB2
 114+ 8EB2              ;   Amadeus o entidad ???.
 115+ 8EB2
 116+ 8EB2 3A E5 89         ld a,(Ctrl_0)
 117+ 8EB5 CB 77            bit 6,a
 118+ 8EB7 28 0A            jr z,8F
 119+ 8EB9
 120+ 8EB9              ; 	Dispara Amadeus.
 121+ 8EB9
 122+ 8EB9 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8EBB CD 28 96         call PreviousScan
 124+ 8EBE CD 28 96         call PreviousScan
 125+ 8EC1
 126+ 8EC1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EC1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EC1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EC1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EC1
 131+ 8EC1 18 11            jr 10F
 132+ 8EC3
 133+ 8EC3              ; 	Dispara Entidad.
 134+ 8EC3
 135+ 8EC3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EC6              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EC6
 138+ 8EC6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EC6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EC6
 141+ 8EC6 C5               push bc
 142+ 8EC7 06 10            ld b,16
 143+ 8EC9 CD 19 96     9 call NextScan
 144+ 8ECC 10 FB            djnz 9B
 145+ 8ECE C1               pop bc
 146+ 8ECF CD 39 8F         call Ajusta_disparo_parte_izquierda
 147+ 8ED2 18 06            jr 17F
 148+ 8ED4
 149+ 8ED4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8ED4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8ED4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8ED4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8ED4
 154+ 8ED4 CD 39 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8ED7 CD AE 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EDA              ;                                                      ; _al generar el disparo.
 157+ 8EDA
 158+ 8EDA              ; 	LLegados a este punto tendremos:
 159+ 8EDA              ;
 160+ 8EDA              ;       Puntero_objeto_disparo en IY.
 161+ 8EDA              ;       Rutinas_de_impresion en IX.
 162+ 8EDA              ;       Puntero_de_impresion en HL.
 163+ 8EDA              ;       Impacto/Dirección en BC.
 164+ 8EDA
 165+ 8EDA CD 41 8F     17 call Almacena_disparo
 166+ 8EDD 18 52            jr 6F                                             ; RET.
 167+ 8EDF
 168+ 8EDF              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EDF              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EDF              ;
 171+ 8EDF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EDF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EDF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EDF
 175+ 8EDF 2A B9 89     4 ld hl,(Posicion_actual)
 176+ 8EE2
 177+ 8EE2              ;   Amadeus o entidad ???.
 178+ 8EE2
 179+ 8EE2 3A E5 89         ld a,(Ctrl_0)
 180+ 8EE5 CB 77            bit 6,a
 181+ 8EE7 28 0A            jr z,11F
 182+ 8EE9
 183+ 8EE9              ; 	Dispara Amadeus.
 184+ 8EE9
 185+ 8EE9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EEB CD 28 96         call PreviousScan
 187+ 8EEE CD 28 96         call PreviousScan
 188+ 8EF1
 189+ 8EF1              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EF1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EF1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EF1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EF1
 194+ 8EF1 18 11            jr 13F
 195+ 8EF3
 196+ 8EF3              ; 	Dispara Entidad.
 197+ 8EF3
 198+ 8EF3 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EF6              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EF6
 201+ 8EF6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EF6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EF6
 204+ 8EF6 C5               push bc
 205+ 8EF7 06 10            ld b,16
 206+ 8EF9 CD 19 96     12 call NextScan
 207+ 8EFC 10 FB            djnz 12B
 208+ 8EFE C1               pop bc
 209+ 8EFF
 210+ 8EFF CD 32 8F         call Ajusta_disparo_parte_derecha
 211+ 8F02 18 06            jr 18F
 212+ 8F04
 213+ 8F04              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8F04              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8F04              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8F04              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8F04
 218+ 8F04 CD 32 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8F07 CD AE 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8F0A              ;                                                       ; _al generar el disparo.
 221+ 8F0A
 222+ 8F0A              ; LLegados a este punto tendremos:
 223+ 8F0A              ;
 224+ 8F0A              ;       Puntero_objeto_disparo en IY.
 225+ 8F0A              ;       Rutinas_de_impresion en IX.
 226+ 8F0A              ;       Puntero_de_impresion en HL.
 227+ 8F0A              ;       Impacto/Dirección en BC.
 228+ 8F0A
 229+ 8F0A CD 41 8F     18 call Almacena_disparo
 230+ 8F0D 18 22            jr 6F                                               ; RET.
 231+ 8F0F
 232+ 8F0F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8F0F
 234+ 8F0F 28 11        3 jr z,5F
 235+ 8F11
 236+ 8F11              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8F11              ;
 238+ 8F11              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8F11              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8F11              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8F11              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8F11
 243+ 8F11              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8F11              ;	   ""        ""       "f9", B="1"
 245+ 8F11              ;	   ""        ""       "fb", B="2"
 246+ 8F11              ; 	   ""        ""       "fb", B="3"
 247+ 8F11
 248+ 8F11 2A B9 89     	ld hl,(Posicion_actual)
 249+ 8F14 CD 19 96     	call NextScan
 250+ 8F17
 251+ 8F17              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8F17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8F17              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8F17              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8F17
 256+ 8F17 CD 39 8F         call Ajusta_disparo_parte_izquierda
 257+ 8F1A
 258+ 8F1A              ; 	No se produce impacto. B="$80"
 259+ 8F1A              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8F1A
 261+ 8F1A 01 80 80         ld bc,$8080
 262+ 8F1D
 263+ 8F1D              ; 	LLegados a este punto tendremos:
 264+ 8F1D              ;
 265+ 8F1D              ;       Puntero_objeto_disparo en IY.
 266+ 8F1D              ;       Rutinas_de_impresion en IX.
 267+ 8F1D              ;       Puntero_de_impresion en HL.
 268+ 8F1D              ;       Impacto/Dirección en BC.
 269+ 8F1D
 270+ 8F1D CD 41 8F         call Almacena_disparo
 271+ 8F20 18 0F            jr 6F                                           ; RET.
 272+ 8F22
 273+ 8F22              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F22              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F22              ;
 276+ 8F22              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F22              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F22              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F22              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F22
 281+ 8F22 2A B9 89     5 ld hl,(Posicion_actual)
 282+ 8F25 CD 19 96     	call NextScan
 283+ 8F28
 284+ 8F28              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F28              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F28              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F28              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F28
 289+ 8F28 CD 32 8F         call Ajusta_disparo_parte_derecha
 290+ 8F2B
 291+ 8F2B              ; 	No se produce impacto. B="$80"
 292+ 8F2B              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F2B
 294+ 8F2B 01 80 80     15 ld bc,$8080
 295+ 8F2E
 296+ 8F2E              ; 	LLegados a este punto tendremos:
 297+ 8F2E              ;
 298+ 8F2E              ;       Puntero_objeto_disparo en IY.
 299+ 8F2E              ;       Rutinas_de_impresion en IX.
 300+ 8F2E              ;       Puntero_de_impresion en HL.
 301+ 8F2E              ;       Impacto/Dirección en BC.
 302+ 8F2E
 303+ 8F2E CD 41 8F         call Almacena_disparo
 304+ 8F31
 305+ 8F31 C9           6 ret
 306+ 8F32
 307+ 8F32              ; ----------------------------------------------------------------
 308+ 8F32              ;
 309+ 8F32              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F32              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F32              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F32
 313+ 8F32 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F33 FE 02            cp 2
 315+ 8F35 38 01            jr c,1F
 316+ 8F37 23               inc hl
 317+ 8F38 C9           1 ret
 318+ 8F39
 319+ 8F39 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F3A FE 01        	cp 1
 321+ 8F3C 20 01        	jr nz,1F
 322+ 8F3E 2B           	dec hl
 323+ 8F3F 2B           1 dec hl
 324+ 8F40 C9               ret
 325+ 8F41
 326+ 8F41              ; ----------------------------------------------------------------
 327+ 8F41              ;
 328+ 8F41              ;   25/02/23
 329+ 8F41              ;
 330+ 8F41              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F41              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F41              ;
 333+ 8F41              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F41              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F41
 336+ 8F41              Almacena_disparo
 337+ 8F41
 338+ 8F41 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F42 F1               pop af
 340+ 8F43 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F44
 342+ 8F44 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F45 E6 01            and 1
 344+ 8F47 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F49              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F49              ; 	Dispara AMADEUS.
 347+ 8F49
 348+ 8F49              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F49              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F49              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F49              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F49
 353+ 8F49 C5               push bc
 354+ 8F4A 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F4D 2A 12 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F50 A7               and a
 357+ 8F51 ED 42            sbc hl,bc
 358+ 8F53 CC F0 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F56 C1               pop bc
 360+ 8F57 28 54            jr z,4F
 361+ 8F59
 362+ 8F59 2A 12 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F5C 23               inc hl
 364+ 8F5D 23               inc hl
 365+ 8F5E 22 12 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F61              ;                                                   ; _ Disparo_(+1).
 367+ 8F61 18 18            jr 2F
 368+ 8F63
 369+ 8F63              ; Dispara una entidad.
 370+ 8F63
 371+ 8F63 C5           1 push bc
 372+ 8F64 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F67 2A 10 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F6A A7               and a
 375+ 8F6B ED 42            sbc hl,bc
 376+ 8F6D CC E9 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F70 C1               pop bc
 378+ 8F71 28 3A            jr z,4F
 379+ 8F73
 380+ 8F73 2A 10 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F76 23               inc hl
 382+ 8F77 23               inc hl
 383+ 8F78 22 10 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F7B              ;                                                   ; _ Disparo_(+1).
 385+ 8F7B CD 27 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F7E              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F7E              ;
 388+ 8F7E              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F7E              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F7E              ;                                                     Puntero_de_impresion en HL.
 391+ 8F7E              ;                                                     Impacto/Dirección en BC.
 392+ 8F7E
 393+ 8F7E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F7F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F80 23               inc hl                                          ; _ al siguiente.
 396+ 8F81 A7               and a
 397+ 8F82 20 C0            jr nz,3B
 398+ 8F84
 399+ 8F84 08               ex af,af
 400+ 8F85 ED 73 07 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F89 F9               ld sp,hl
 402+ 8F8A
 403+ 8F8A DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F8C F5               push af                                         ; Puntero de impresión.
 405+ 8F8D FD E5            push iy                                         ; Puntero objeto.
 406+ 8F8F C5               push bc                                         ; Control.
 407+ 8F90
 408+ 8F90 ED 7B 07 8A      ld sp,(Stack)
 409+ 8F94
 410+ 8F94              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F94
 412+ 8F94 21 F5 89     	ld hl,Ctrl_1
 413+ 8F97 CB C6        	set 0,(hl)
 414+ 8F99
 415+ 8F99 DD E5        	push ix
 416+ 8F9B E1               pop hl
 417+ 8F9C F5               push af
 418+ 8F9D DD E1            pop ix
 419+ 8F9F
 420+ 8F9F CD A0 7F     	call Guarda_foto_registros
 421+ 8FA2
 422+ 8FA2 21 F5 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8FA5 CB 86        	res 0,(hl)
 424+ 8FA7
 425+ 8FA7              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8FA7              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8FA7
 428+ 8FA7 CD F0 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8FAA CD E9 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8FAD
 431+ 8FAD C9           4 ret
 432+ 8FAE
 433+ 8FAE              ; ----------------------------------------------------------------
 434+ 8FAE              ;
 435+ 8FAE              ;   4/3/23
 436+ 8FAE              ;
 437+ 8FAE              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8FAE              ;   _ al generarse el disparo.
 439+ 8FAE              ;
 440+ 8FAE              ;       "$80" ..... No se produce colisión.
 441+ 8FAE              ;       "$81" ..... Se produce colisión.
 442+ 8FAE
 443+ 8FAE              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8FAE              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8FAE
 446+ 8FAE
 447+ 8FAE FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8FB0 E5               push hl                                        ; Puntero de impresión.
 449+ 8FB1
 450+ 8FB1 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8FB3 CD CF 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8FB6
 453+ 8FB6 7B               ld a,e
 454+ 8FB7 E6 01            and 1
 455+ 8FB9 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8FBB
 457+ 8FBB E1               pop hl
 458+ 8FBC E5               push hl
 459+ 8FBD CD 19 96         call NextScan
 460+ 8FC0
 461+ 8FC0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FC1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FC3 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FC5              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FC5 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FC7 CD CF 8F         call Bucle_2
 467+ 8FCA
 468+ 8FCA 43           2 ld b,e
 469+ 8FCB E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FCC FD E1            pop iy
 471+ 8FCE C9               ret
 472+ 8FCF
 473+ 8FCF               ; ---------- ----------
 474+ 8FCF
 475+ 8FCF 06 02        Bucle_2 ld b,2
 476+ 8FD1 FD 7E 00     2 ld a,(iy)
 477+ 8FD4 A6               and (hl)
 478+ 8FD5 28 02            jr z,1F
 479+ 8FD7 1E 81            ld e,$81
 480+ 8FD9 23           1 inc hl
 481+ 8FDA FD 23            inc iy
 482+ 8FDC 10 F3            djnz 2B
 483+ 8FDE C9               ret
 484+ 8FDF
 485+ 8FDF              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FDF              ;
 487+ 8FDF              ;   11/04/23
 488+ 8FDF              ;
 489+ 8FDF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FDF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FDF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FDF              ;
 493+ 8FDF              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FDF
 495+ 8FDF              Compara_coordenadas_X
 496+ 8FDF
 497+ 8FDF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FDF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FDF
 500+ 8FDF              ; Preparamos registros:
 501+ 8FDF
 502+ 8FDF 21 BD 89         ld hl,Filas+6
 503+ 8FE2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FE3 23               inc hl
 505+ 8FE4 23               inc hl
 506+ 8FE5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FE6 43               ld b,e
 508+ 8FE7 21 CB 89         ld hl,Filas+20
 509+ 8FEA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FEB 21 1C 8A         ld hl,Coordenadas_X_Entidad
 511+ 8FEE CD 02 92         call Guarda_coordenadas_X
 512+ 8FF1
 513+ 8FF1              ; Preparamos registros:
 514+ 8FF1
 515+ 8FF1 21 92 85         ld hl,Amadeus_db+6
 516+ 8FF4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FF5 23               inc hl
 518+ 8FF6 23               inc hl
 519+ 8FF7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FF8 7B               ld a,e
 521+ 8FF9 08               ex af,af'
 522+ 8FFA 21 A0 85         ld hl,Amadeus_db+20
 523+ 8FFD 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FFE 21 19 8A         ld hl,Coordenadas_X_Amadeus
 525+ 9001 CD 02 92         call Guarda_coordenadas_X
 526+ 9004
 527+ 9004              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 9004              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 9004
 530+ 9004 04               inc b
 531+ 9005 05               dec b
 532+ 9006 28 04            jr z,1F
 533+ 9008 06 03            ld b,3
 534+ 900A 18 02            jr 2F
 535+ 900C 06 02        1 ld b,2
 536+ 900E 08           2 ex af,af'
 537+ 900F 3C               inc a
 538+ 9010 3D               dec a
 539+ 9011 28 04            jr z,5F
 540+ 9013 0E 03            ld c,3
 541+ 9015 18 02            jr 6F
 542+ 9017 0E 02        5 ld c,2
 543+ 9019 79           6 ld a,c
 544+ 901A 08               ex af,af'
 545+ 901B 11 1C 8A         ld de,Coordenadas_X_Entidad
 546+ 901E 1A           4 ld a,(de)
 547+ 901F 21 19 8A         ld hl,Coordenadas_X_Amadeus
 548+ 9022 BE           3 cp (hl)
 549+ 9023 28 0E            jr z,7F
 550+ 9025 23               inc hl
 551+ 9026 0D               dec c
 552+ 9027 20 F9            jr nz,3B
 553+ 9029 13               inc de
 554+ 902A 08               ex af,af'
 555+ 902B 4F               ld c,a
 556+ 902C 08               ex af,af'
 557+ 902D 10 EF            djnz 4B
 558+ 902F
 559+ 902F              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 902F
 561+ 902F CD 41 92     8 call Limpia_Coordenadas_X
 562+ 9032 C9               ret
 563+ 9033
 564+ 9033              7
 565+ 9033 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9035 32 D0 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9038 21 14 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 903B CB D6            set 2,(hl)
 569+ 903D 18 F0            jr 8B
 570+ 903F
 571+ 903F              ; -----------------------------------------------------------------------
 572+ 903F              ;
 573+ 903F              ;   17/04/23
 574+ 903F              ;
 575+ 903F
 576+ 903F              Detecta_colision_nave_entidad
 577+ 903F
 578+ 903F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 903F
 580+ 903F 2A B9 89         ld hl,(Posicion_actual)
 581+ 9042 CD 7E 95         call Calcula_puntero_de_impresion
 582+ 9045
 583+ 9045              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9045              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9045
 586+ 9045 DD E5            push ix
 587+ 9047 E1               pop hl
 588+ 9048 E5               push hl
 589+ 9049
 590+ 9049              ; ----- ----- -----
 591+ 9049 1E 00            ld e,0                                         ; Indica impacto.
 592+ 904B 06 0A            ld b,10
 593+ 904D CD 7D 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9050 7B               ld a,e
 595+ 9051 FE 05            cp 5
 596+ 9053 38 0E            jr c,3F
 597+ 9055
 598+ 9055              ; LLegados a este punto:
 599+ 9055              ;
 600+ 9055              ;   HAY COLISIÓN !!!!!.
 601+ 9055              ;
 602+ 9055              ;   .db (Impacto) de Amadeus a "1".
 603+ 9055              ;   SET el bit3 de (Impacto2).
 604+ 9055              ;
 605+ 9055              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9055
 607+ 9055 21 A5 85         ld hl,Amadeus_db+25
 608+ 9058 36 01            ld (hl),1
 609+ 905A 21 14 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 905D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 905F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9061 18 18            jr 1F
 613+ 9063
 614+ 9063              ; -----
 615+ 9063
 616+ 9063 E1           3 pop hl
 617+ 9064 CD 19 96         call NextScan
 618+ 9067 E5               push hl
 619+ 9068 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9069 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 906B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 906D 30 0C            jr nc,1F
 623+ 906F              ;                                                  ; _ 2º scanline si esto es así.
 624+ 906F 10 DC            djnz 2B
 625+ 9071
 626+ 9071              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9071
 628+ 9071              ; LLegados a este punto:
 629+ 9071              ;
 630+ 9071              ;   NO HAY COLISIÓN !!!!!.
 631+ 9071              ;
 632+ 9071              ;   .db (Impacto) de Amadeus a "0".
 633+ 9071              ;   RES el bit2 de (Impacto2).
 634+ 9071              ;
 635+ 9071              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9071              ;   Lo colocamos a "0".
 637+ 9071
 638+ 9071 21 14 8A         ld hl,Impacto2
 639+ 9074 CB 96            res 2,(hl)
 640+ 9076 2A 15 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9079 36 00            ld (hl),0
 642+ 907B
 643+ 907B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 907C C9               ret
 645+ 907D
 646+ 907D               ; ---------- ----------
 647+ 907D
 648+ 907D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 907E 3A B8 89         ld a,(Columns)
 650+ 9081 47               ld b,a
 651+ 9082 FD 7E 00     2 ld a,(iy)
 652+ 9085 BE               cp (hl)
 653+ 9086 28 01            jr z,1F
 654+ 9088
 655+ 9088 1C               inc e
 656+ 9089
 657+ 9089 23           1 inc hl
 658+ 908A FD 23            inc iy
 659+ 908C 10 F4            djnz 2B
 660+ 908E C1               pop bc
 661+ 908F C9               ret
 662+ 9090
 663+ 9090              ; -------------------------------------------------------------------------------------------------------------
 664+ 9090              ;
 665+ 9090              ;   13/03/23
 666+ 9090              ;
 667+ 9090              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9090              ;
 669+ 9090              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9090
 671+ 9090 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9093 7E               ld a,(hl)
 673+ 9094 A7               and a
 674+ 9095 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9096
 676+ 9096 44               ld b,h
 677+ 9097 4D               ld c,l
 678+ 9098 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
 679+ 909B E5               push hl
 680+ 909C A7               and a
 681+ 909D ED 42            sbc hl,bc
 682+ 909F E5               push hl
 683+ 90A0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 90A1
 685+ 90A1 E1               pop hl
 686+ 90A2 54               ld d,h
 687+ 90A3 5D               ld e,l
 688+ 90A4 1B               dec de
 689+ 90A5 ED B8            lddr                                                ; Limpiamos.
 690+ 90A7
 691+ 90A7 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 90AA 22 0D 8A         ld (Stack_snapshot_disparos),hl
 693+ 90AD
 694+ 90AD C9               ret
 695+ 90AE
 696+ 90AE              ; -------------------------------------------------------------------------------------------------------------
 697+ 90AE              ;
 698+ 90AE              ;   28/03/23
 699+ 90AE              ;
 700+ 90AE
 701+ 90AE 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 90B1 2A 12 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 90B4
 704+ 90B4 CD 27 8D     2 call Extrae_address
 705+ 90B7 7E               ld a,(hl)
 706+ 90B8 A7               and a
 707+ 90B9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 90BB
 709+ 90BB              ; ----- ----- ----- ----- ----- -----
 710+ 90BB
 711+ 90BB C5               push bc
 712+ 90BC CD 78 91         call foto_disparo_a_borrar
 713+ 90BF
 714+ 90BF              ; Existe colisión con este disparo???
 715+ 90BF
 716+ 90BF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 90C0 7E               ld a,(hl)
 718+ 90C1 2B               dec hl
 719+ 90C2 E6 01            and 1
 720+ 90C4 28 1D            jr z,9F
 721+ 90C6
 722+ 90C6              ;   En este punto:
 723+ 90C6              ;
 724+ 90C6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90C6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90C6              ;   _con la entidad).
 727+ 90C6              ;
 728+ 90C6              ;   Disparo_2A defw 0                                ; Control.
 729+ 90C6              ;    defw 0                                          ; Puntero objeto.
 730+ 90C6              ;    defw 0                                          ; Puntero de impresión.
 731+ 90C6              ;    defw 0                                          ; Rutina de impresión.
 732+ 90C6
 733+ 90C6 E5               push hl
 734+ 90C7
 735+ 90C7 06 04            ld b,4
 736+ 90C9 23           19 inc hl
 737+ 90CA 10 FD            djnz 19B
 738+ 90CC
 739+ 90CC CD 27 8D         call Extrae_address
 740+ 90CF CD 70 9C         call Genera_coordenadas_disparo
 741+ 90D2
 742+ 90D2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90D2
 744+ 90D2 21 17 8A         ld hl,Coordenadas_disparo_certero
 745+ 90D5 72               ld (hl),d
 746+ 90D6 23               inc hl
 747+ 90D7 73               ld (hl),e
 748+ 90D8
 749+ 90D8              ; Elimino el disparo de la base de datos.
 750+ 90D8
 751+ 90D8 E1               pop hl
 752+ 90D9 CD F7 91         call Elimina_disparo_de_base_de_datos
 753+ 90DC 21 14 8A         ld hl,Impacto2
 754+ 90DF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90E1
 756+ 90E1 18 06            jr 11F
 757+ 90E3
 758+ 90E3 CD A1 91     9 call Mueve_disparo
 759+ 90E6 CD 78 91         call foto_disparo_a_borrar
 760+ 90E9
 761+ 90E9 C1           11 pop bc
 762+ 90EA 18 04            jr 7F
 763+ 90EC
 764+ 90EC              ; ----- ----- ----- ----- ----- -----
 765+ 90EC
 766+ 90EC ED 42        1 sbc hl,bc
 767+ 90EE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90F0 2A 12 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90F3 23               inc hl
 770+ 90F4 23               inc hl
 771+ 90F5 22 12 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90F8 18 BA            jr 2B
 773+ 90FA CD F0 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90FD
 775+ 90FD 01 72 85         ld bc,Disparo_11
 776+ 9100 2A 10 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 9103
 778+ 9103 CD 27 8D     5 call Extrae_address
 779+ 9106 7E               ld a,(hl)
 780+ 9107 A7               and a
 781+ 9108 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 910A
 783+ 910A              ; ----- ----- ----- ----- ----- -----
 784+ 910A
 785+ 910A C5               push bc
 786+ 910B CD 78 91         call foto_disparo_a_borrar
 787+ 910E
 788+ 910E              ; Existe colisión con este disparo???
 789+ 910E
 790+ 910E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 910F 7E               ld a,(hl)
 792+ 9110 2B               dec hl
 793+ 9111 E6 01            and 1
 794+ 9113 28 48            jr z,10F
 795+ 9115
 796+ 9115              ; La colisión se produce con Amadeus???
 797+ 9115              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 9115
 799+ 9115 E5               push hl
 800+ 9116
 801+ 9116 06 04            ld b,4
 802+ 9118 23           16 inc hl
 803+ 9119 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 911B CD 27 8D         call Extrae_address
 805+ 911E CD 70 9C         call Genera_coordenadas_disparo
 806+ 9121
 807+ 9121 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 9122 FE 16            cp $16
 809+ 9124 38 22            jr c,15F
 810+ 9126
 811+ 9126              ; (Colisiones en filas 16 y 17).
 812+ 9126
 813+ 9126 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9127
 815+ 9127              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9127
 817+ 9127 21 92 85         ld hl,Amadeus_db+6
 818+ 912A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 912B 23               inc hl
 820+ 912C 23               inc hl
 821+ 912D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 912E 21 A0 85         ld hl,Amadeus_db+20
 823+ 9131 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9132 21 19 8A         ld hl,Coordenadas_X_Amadeus
 825+ 9135 CD 02 92         call Guarda_coordenadas_X
 826+ 9138
 827+ 9138 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9139
 829+ 9139              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9139
 831+ 9139 06 03            ld b,3
 832+ 913B 21 19 8A         ld hl,Coordenadas_X_Amadeus
 833+ 913E 7E           18 ld a,(hl)
 834+ 913F BA               cp d
 835+ 9140 20 03            jr nz,17F
 836+ 9142
 837+ 9142              ; Colisión Amadeus !!!!!!!!!!
 838+ 9142
 839+ 9142 E1               pop hl
 840+ 9143 18 09            jr 14F
 841+ 9145
 842+ 9145 23           17 inc hl
 843+ 9146 10 F6            djnz 18B
 844+ 9148
 845+ 9148              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9148              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9148
 848+ 9148 E1           15 pop hl
 849+ 9149 23               inc hl
 850+ 914A 35               dec (hl)
 851+ 914B 2B               dec hl
 852+ 914C 18 0F            jr 10F
 853+ 914E
 854+ 914E              ; -----------------------debug
 855+ 914E
 856+ 914E              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 914E              ; _ almacén de coordenadas_X de Amadeus.
 858+ 914E
 859+ 914E E5           14 push hl
 860+ 914F CD F7 91         call Elimina_disparo_de_base_de_datos
 861+ 9152 21 14 8A         ld hl,Impacto2
 862+ 9155 CB CE            set 1,(hl)
 863+ 9157 CD 41 92         call Limpia_Coordenadas_X
 864+ 915A
 865+ 915A E1               pop hl
 866+ 915B 18 06            jr 12F
 867+ 915D
 868+ 915D CD A1 91     10 call Mueve_disparo
 869+ 9160 CD 78 91         call foto_disparo_a_borrar
 870+ 9163 C1           12 pop bc
 871+ 9164
 872+ 9164 18 04            jr 8F
 873+ 9166
 874+ 9166              ; ----- ----- ----- ----- ----- -----
 875+ 9166
 876+ 9166 ED 42        4 sbc hl,bc
 877+ 9168 28 0A            jr z,6F
 878+ 916A
 879+ 916A 2A 10 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 916D 23               inc hl
 881+ 916E 23               inc hl
 882+ 916F 22 10 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9172 18 8F            jr 5B
 884+ 9174
 885+ 9174 CD E9 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9177 C9               ret
 887+ 9178
 888+ 9178              ; ------------------------------------------------------------------
 889+ 9178
 890+ 9178              foto_disparo_a_borrar
 891+ 9178
 892+ 9178 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9179 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 917A C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 917B
 896+ 917B E5               push hl
 897+ 917C 23               inc hl
 898+ 917D 23               inc hl
 899+ 917E ED 73 07 8A      ld (Stack),sp
 900+ 9182 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9183 FD E1            pop iy
 902+ 9185 DD E1            pop ix
 903+ 9187 E1               pop hl
 904+ 9188 ED 7B 07 8A      ld sp,(Stack)
 905+ 918C 3A F5 89         ld a,(Ctrl_1)
 906+ 918F CB C7            set 0,a
 907+ 9191 32 F5 89         ld (Ctrl_1),a
 908+ 9194 CD A0 7F         call Guarda_foto_registros
 909+ 9197 3A F5 89         ld a,(Ctrl_1)
 910+ 919A CB 87            res 0,a
 911+ 919C 32 F5 89         ld (Ctrl_1),a
 912+ 919F E1               pop hl
 913+ 91A0 C9               ret
 914+ 91A1
 915+ 91A1 E5           Mueve_disparo push hl
 916+ 91A2 7E               ld a,(hl)
 917+ 91A3 06 04            ld b,4
 918+ 91A5 23           1 inc hl
 919+ 91A6 10 FD            djnz 1B
 920+ 91A8
 921+ 91A8              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 91A8
 923+ 91A8 CD 27 8D         call Extrae_address
 924+ 91AB
 925+ 91AB E6 01            and 1
 926+ 91AD 28 2E            jr z,2F
 927+ 91AF
 928+ 91AF              ; Disparo hacia arriba, (Amadeus).
 929+ 91AF
 930+ 91AF              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 91AF              ; _ de la dificultad.
 932+ 91AF
 933+ 91AF CD 28 96         call PreviousScan
 934+ 91B2 CD 28 96         call PreviousScan
 935+ 91B5 CD 28 96         call PreviousScan
 936+ 91B8 CD 28 96         call PreviousScan
 937+ 91BB
 938+ 91BB              ; Detecta si el disparo de Amadeus sale de pantalla:
 939+ 91BB
 940+ 91BB 7C               ld a,h
 941+ 91BC FE 40            cp $40
 942+ 91BE 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 943+ 91C0
 944+ 91C0              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 945+ 91C0
 946+ 91C0 EB               ex de,hl
 947+ 91C1 06 04            ld b,4
 948+ 91C3 2B           6 dec hl
 949+ 91C4 10 FD            djnz 6B
 950+ 91C6
 951+ 91C6 CD F7 91         call Elimina_disparo_de_base_de_datos
 952+ 91C9 E1               pop hl
 953+ 91CA 18 10            jr 7F
 954+ 91CC
 955+ 91CC              ; Se ha desplazado la bala, compruebo colisión.
 956+ 91CC
 957+ 91CC D5           3 push de
 958+ 91CD C5               push bc
 959+ 91CE
 960+ 91CE CD AE 8F         call Comprueba_Colision
 961+ 91D1
 962+ 91D1              ; B="$80", no hay colisión. B="$81", existe colisión.
 963+ 91D1
 964+ 91D1 78               ld a,b
 965+ 91D2
 966+ 91D2 C1               pop bc
 967+ 91D3 D1               pop de
 968+ 91D4
 969+ 91D4 EB               ex de,hl
 970+ 91D5
 971+ 91D5 73               ld (hl),e
 972+ 91D6 23               inc hl
 973+ 91D7 72               ld (hl),d
 974+ 91D8
 975+ 91D8 E1           4 pop hl
 976+ 91D9 23               inc hl
 977+ 91DA 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 978+ 91DB 2B               dec hl
 979+ 91DC C9           7 ret
 980+ 91DD
 981+ 91DD              ; Disparo hacia abajo, (Entidad).
 982+ 91DD
 983+ 91DD              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 984+ 91DD              ;! _ de la dificultad.
 985+ 91DD
 986+ 91DD CD 19 96     2 call NextScan
 987+ 91E0 CD 19 96         call NextScan
 988+ 91E3 CD 19 96         call NextScan
 989+ 91E6              ;    call NextScan
 990+ 91E6
 991+ 91E6              ; Detecta si el disparo de la entidad sale de la pantalla.
 992+ 91E6
 993+ 91E6 7C               ld a,h
 994+ 91E7 FE 58            cp $58
 995+ 91E9 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 996+ 91EB
 997+ 91EB EB               ex de,hl
 998+ 91EC 06 04            ld b,4
 999+ 91EE 2B           5 dec hl
1000+ 91EF 10 FD            djnz 5B
1001+ 91F1
1002+ 91F1 CD F7 91         call Elimina_disparo_de_base_de_datos
1003+ 91F4 E1               pop hl
1004+ 91F5 18 E5            jr 7B
1005+ 91F7
1006+ 91F7              ; HL apunta al primer byte de la base de datos del disparo.
1007+ 91F7
1008+ 91F7 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1009+ 91FA AF               xor a
1010+ 91FB 77               ld (hl),a
1011+ 91FC 54               ld d,h
1012+ 91FD 5D               ld e,l
1013+ 91FE 13               inc de
1014+ 91FF ED B0            ldir
1015+ 9201 C9               ret
1016+ 9202
1017+ 9202              ; -----------------------------------------------------------------
1018+ 9202              ;
1019+ 9202              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1020+ 9202              ;
1021+ 9202              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1022+ 9202              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1023+ 9202              ;
1024+ 9202              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1025+ 9202              ;
1026+ 9202              ;   INPUTS:
1027+ 9202              ;
1028+ 9202              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1029+ 9202              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1030+ 9202              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1031+ 9202
1032+ 9202              ;   MODIFICA: A, HL, DE y C
1033+ 9202
1034+ 9202 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1035+ 9203 79               ld a,c
1036+ 9204 E6 01            and 1
1037+ 9206 20 03            jr nz,1F
1038+ 9208 14               inc d
1039+ 9209 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1040+ 920B
1041+ 920B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1042+ 920B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1043+ 920B
1044+ 920B 15           1 dec d
1045+ 920C 23           2 inc hl
1046+ 920D 72               ld (hl),d
1047+ 920E
1048+ 920E 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1049+ 920F A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1050+ 9210 C8               ret z
1051+ 9211
1052+ 9211 AF               xor a
1053+ 9212 5F               ld e,a
1054+ 9213 18 ED            jr Guarda_coordenadas_X
1055+ 9215
1056+ 9215              ; -----------------------------------------------------------------
1057+ 9215              ;
1058+ 9215              ;   12/04/23
1059+ 9215              ;
1060+ 9215
1061+ 9215 3A 14 8A     Selector_de_impactos ld a,(Impacto2)
1062+ 9218 A7               and a
1063+ 9219 C8               ret z
1064+ 921A
1065+ 921A FE 04            cp 4
1066+ 921C 20 09            jr nz,1F
1067+ 921E
1068+ 921E
1069+ 921E              ; La colisión se produce por contacto entre Amadeus y una entidad.
1070+ 921E
1071+ 921E CD 3F 90         call Detecta_colision_nave_entidad
1072+ 9221
1073+ 9221 21 14 8A         ld hl,Impacto2
1074+ 9224 CB 5E            bit 3,(hl)
1075+ 9226 C0               ret nz                                               ; Existe colisión, RET.
1076+ 9227
1077+ 9227              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1078+ 9227              ; Primero analizamos si algún disparo impacta en Amadeus.
1079+ 9227
1080+ 9227 21 14 8A     1 ld hl,Impacto2
1081+ 922A CB 4E            bit 1,(hl)
1082+ 922C 28 07            jr z,2F
1083+ 922E
1084+ 922E 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1085+ 9231 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1086+ 9233 18 0B            jr 3F
1087+ 9235
1088+ 9235 21 14 8A     2 ld hl,Impacto2
1089+ 9238 CB 46            bit 0,(hl)
1090+ 923A C8               ret z
1091+ 923B
1092+ 923B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1093+ 923B
1094+ 923B 21 F5 89         ld hl,Ctrl_1
1095+ 923E CB D6            set 2,(hl)
1096+ 9240
1097+ 9240 C9           3 ret
1098+ 9241
1099+ 9241              ; -----------------------------------------------------------------
1100+ 9241              ;
1101+ 9241              ;   16/04/23
1102+ 9241              ;
1103+ 9241
1104+ 9241 AF           Limpia_Coordenadas_X xor a
1105+ 9242 06 06            ld b,6
1106+ 9244 21 19 8A         ld hl,Coordenadas_X_Amadeus
1107+ 9247 77           1 ld (hl),a
1108+ 9248 23               inc hl
1109+ 9249 10 FC            djnz 1B
1110+ 924B C9               ret
1111+ 924C
1112+ 924C              ; -----------------------------------------------------------------
1113+ 924C              ;
1114+ 924C              ;   25/04/23
1115+ 924C              ;
1116+ 924C
1117+ 924C              Determina_resultado_comparativa
1118+ 924C
1119+ 924C              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1120+ 924C              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1121+ 924C              ;
1122+ 924C              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1123+ 924C              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1124+ 924C              ;
1125+ 924C              ;   SBC HL,DE
1126+ 924C
1127+ 924C              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1128+ 924C              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1129+ 924C
1130+ 924C              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1131+ 924C              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1132+ 924C
1133+ 924C
1134+ 924C 3A CB 89         ld a,(Cuad_objeto)
1135+ 924F FE 02            cp 2
1136+ 9251 28 26            jr z,2F
1137+ 9253 38 24            jr c,2F
1138+ 9255
1139+ 9255              ; Cuadrantes 3º y 4º
1140+ 9255
1141+ 9255 E6 01            and 1
1142+ 9257 28 10            jr z,4F
1143+ 9259
1144+ 9259              ; Cuadrante 3º
1145+ 9259
1146+ 9259 7C               ld a,h
1147+ 925A 06 00            ld b,0
1148+ 925C
1149+ 925C CD E7 92         call Compara_cositas_H3
1150+ 925F
1151+ 925F 04               inc b
1152+ 9260 05               dec b
1153+ 9261 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1154+ 9262
1155+ 9262 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1156+ 9263 06 00            ld b,0
1157+ 9265
1158+ 9265 CD F9 92         call Compara_cositas_L3
1159+ 9268 C9               ret
1160+ 9269
1161+ 9269              ; Cuadrante 4º
1162+ 9269
1163+ 9269 7C           4 ld a,h
1164+ 926A 06 00            ld b,0
1165+ 926C
1166+ 926C CD 0B 93         call Compara_cositas_H4
1167+ 926F
1168+ 926F 04               inc b
1169+ 9270 05               dec b
1170+ 9271 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1171+ 9272
1172+ 9272 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1173+ 9273 06 00            ld b,0
1174+ 9275
1175+ 9275 CD 21 93         call Compara_cositas_L4
1176+ 9278 C9               ret
1177+ 9279
1178+ 9279              ; Cuadrantes 1º y 2º.
1179+ 9279
1180+ 9279 28 10        2 jr z,3F
1181+ 927B
1182+ 927B              ; 1er Cuadrante
1183+ 927B
1184+ 927B 7C               ld a,h
1185+ 927C 06 00            ld b,0
1186+ 927E
1187+ 927E CD BF 92         call Compara_cositas_H1
1188+ 9281
1189+ 9281 04               inc b
1190+ 9282 05               dec b
1191+ 9283 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1192+ 9284
1193+ 9284 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1194+ 9285 06 00            ld b,0
1195+ 9287
1196+ 9287 CD D5 92         call Compara_cositas_L1
1197+ 928A C9               ret
1198+ 928B
1199+ 928B
1200+ 928B              ; 2º Cuadrante
1201+ 928B
1202+ 928B 7C           3 ld a,h
1203+ 928C 06 00            ld b,0
1204+ 928E
1205+ 928E CD 9B 92         call Compara_cositas_H2
1206+ 9291
1207+ 9291 04               inc b
1208+ 9292 05               dec b
1209+ 9293 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1210+ 9294
1211+ 9294 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1212+ 9295 06 00            ld b,0
1213+ 9297
1214+ 9297 CD AD 92         call Compara_cositas_L2
1215+ 929A C9               ret
1216+ 929B
1217+ 929B A7           Compara_cositas_H2 and a
1218+ 929C 28 0D            jr z,1F
1219+ 929E              ;    cp $fd
1220+ 929E              ;    jr z,1F
1221+ 929E              ;    cp $fe
1222+ 929E              ;    jr z,1F
1223+ 929E FE FF            cp $ff
1224+ 92A0 28 09            jr z,1F
1225+ 92A2 FE 01            cp $01
1226+ 92A4 28 05            jr z,1F
1227+ 92A6 FE 02            cp $02
1228+ 92A8 28 01            jr z,1F
1229+ 92AA C0               ret nz
1230+ 92AB 04           1 inc b
1231+ 92AC C9               ret
1232+ 92AD
1233+ 92AD A7           Compara_cositas_L2 and a
1234+ 92AE 28 0D            jr z,1F
1235+ 92B0              ;    cp $fd
1236+ 92B0              ;    jr z,1F
1237+ 92B0 FE FE            cp $fe
1238+ 92B2 28 09            jr z,1F
1239+ 92B4 FE FF            cp $ff
1240+ 92B6 28 05            jr z,1F
1241+ 92B8 FE 01            cp $01
1242+ 92BA 28 01            jr z,1F
1243+ 92BC              ;    cp $02
1244+ 92BC              ;    jr z,1F
1245+ 92BC C0               ret nz
1246+ 92BD 04           1 inc b
1247+ 92BE C9               ret
1248+ 92BF
1249+ 92BF A7           Compara_cositas_H1 and a
1250+ 92C0 28 11            jr z,1F
1251+ 92C2              ;    cp $fd
1252+ 92C2              ;    jr z,1F
1253+ 92C2              ;    cp $fe
1254+ 92C2              ;    jr z,1F
1255+ 92C2 FE FF            cp $ff
1256+ 92C4 28 0D            jr z,1F
1257+ 92C6 FE 01            cp $01
1258+ 92C8 28 09            jr z,1F
1259+ 92CA FE 02            cp $02
1260+ 92CC 28 05            jr z,1F
1261+ 92CE FE 03            cp $03
1262+ 92D0 28 01            jr z,1F
1263+ 92D2 C0               ret nz
1264+ 92D3 04           1 inc b
1265+ 92D4 C9               ret
1266+ 92D5
1267+ 92D5 A7           Compara_cositas_L1 and a
1268+ 92D6 28 0D            jr z,1F
1269+ 92D8              ;    cp $fd
1270+ 92D8              ;    jr z,1F
1271+ 92D8              ;    cp $fe
1272+ 92D8              ;    jr z,1F
1273+ 92D8              ;    cp $ff
1274+ 92D8              ;    jr z,1F
1275+ 92D8 FE 01            cp $01
1276+ 92DA 28 09            jr z,1F
1277+ 92DC FE 02            cp $02
1278+ 92DE 28 05            jr z,1F
1279+ 92E0 FE 03            cp $03
1280+ 92E2 28 01            jr z,1F
1281+ 92E4 C0               ret nz
1282+ 92E5 04           1 inc b
1283+ 92E6 C9               ret
1284+ 92E7
1285+ 92E7 A7           Compara_cositas_H3 and a
1286+ 92E8 28 0D            jr z,1F
1287+ 92EA              ;    cp $fd
1288+ 92EA              ;    jr z,1F
1289+ 92EA FE FE            cp $fe
1290+ 92EC 28 09            jr z,1F
1291+ 92EE FE FF            cp $ff
1292+ 92F0 28 05            jr z,1F
1293+ 92F2 FE 01            cp $01
1294+ 92F4 28 01            jr z,1F
1295+ 92F6              ;    cp $02
1296+ 92F6              ;    jr z,1F
1297+ 92F6              ;    cp $03
1298+ 92F6              ;    jr z,1F
1299+ 92F6 C0               ret nz
1300+ 92F7 04           1 inc b
1301+ 92F8 C9               ret
1302+ 92F9
1303+ 92F9 A7           Compara_cositas_L3 and a
1304+ 92FA 28 0D            jr z,1F
1305+ 92FC              ;    cp $fd
1306+ 92FC              ;    jr z,1F
1307+ 92FC              ;    cp $fe
1308+ 92FC              ;    jr z,1F
1309+ 92FC              ;    cp $ff
1310+ 92FC              ;    jr z,1F
1311+ 92FC FE 01            cp $01
1312+ 92FE 28 09            jr z,1F
1313+ 9300 FE 02            cp $02
1314+ 9302 28 05            jr z,1F
1315+ 9304 FE 03            cp $03
1316+ 9306 28 01            jr z,1F
1317+ 9308 C0               ret nz
1318+ 9309 04           1 inc b
1319+ 930A C9               ret
1320+ 930B
1321+ 930B A7           Compara_cositas_H4 and a
1322+ 930C 28 11            jr z,1F
1323+ 930E FE FD            cp $fd
1324+ 9310 28 0D            jr z,1F
1325+ 9312 FE FE            cp $fe
1326+ 9314 28 09            jr z,1F
1327+ 9316 FE FF            cp $ff
1328+ 9318 28 05            jr z,1F
1329+ 931A FE 01            cp $01
1330+ 931C 28 01            jr z,1F
1331+ 931E              ;    cp $02
1332+ 931E              ;    jr z,1F
1333+ 931E              ;    cp $03
1334+ 931E              ;    jr z,1F
1335+ 931E C0               ret nz
1336+ 931F 04           1 inc b
1337+ 9320 C9               ret
1338+ 9321
1339+ 9321 A7           Compara_cositas_L4 and a
1340+ 9322 28 0D            jr z,1F
1341+ 9324              ;    cp $fd
1342+ 9324              ;    jr z,1F
1343+ 9324 FE FE            cp $fe
1344+ 9326 28 09            jr z,1F
1345+ 9328 FE FF            cp $ff
1346+ 932A 28 05            jr z,1F
1347+ 932C FE 01            cp $01
1348+ 932E 28 01            jr z,1F
1349+ 9330              ;    cp $02
1350+ 9330              ;    jr z,1F
1351+ 9330              ;    cp $03
1352+ 9330              ;    jr z,1F
1353+ 9330 C0               ret nz
1354+ 9331 04           1 inc b
1355+ 9332 C9               ret
# file closed: Disparo.asm
1237  9333              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9333              ; ******************************************************************************************************************************************************************************************
   2+ 9333              ;
   3+ 9333              ; 01/23
   4+ 9333              ;
   5+ 9333              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9333
   7+ 9333 CD 0D 96     Draw call Prepara_draw
   8+ 9336 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9337 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9338 28 05        	jr z,2F
  11+ 933A
  12+ 933A 3A CB 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 933D 18 0C        	jr 1F
  14+ 933F 2A C9 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9342 22 B9 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9345 CD D4 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9348              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9348 CD 93 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 934B 3A E5 89     1 ld a,(Ctrl_0)
  20+ 934E CB 6F        	bit 5,a
  21+ 9350 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9352
  23+ 9352 CD 6A 93     	call Comprueba_limite_horizontal
  24+ 9355 CD FA 93     	call Comprueba_limite_vertical
  25+ 9358
  26+ 9358              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9358
  28+ 9358 CD 47 95     3 call calcula_CColumnass
  29+ 935B CD 7E 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 935E CD D3 95     	call Define_rutina_de_impresion
  31+ 9361
  32+ 9361 3A E5 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9364 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9366 32 E5 89     	ld (Ctrl_0),a
  35+ 9369
  36+ 9369 C9           	ret
  37+ 936A
  38+ 936A              ; *******************************************************************************************************************************************************************************************
  39+ 936A              ;	21/01/23
  40+ 936A              ;
  41+ 936A              ; 	Comprueba_limite_horizontal.
  42+ 936A              ;
  43+ 936A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 936A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 936A              ;
  46+ 936A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 936A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 936A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 936A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 936A
  51+ 936A
  52+ 936A
  53+ 936A 3A E5 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 936D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 936F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9371 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9373 32 E5 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9376 18 09            jr 6F
  59+ 9378 CB 5F        1 bit 3,a
  60+ 937A 28 0A            jr z,2F
  61+ 937C E6 F7            and $f7
  62+ 937E 32 E5 89         ld (Ctrl_0),a
  63+ 9381 CD D4 94     6 call Inicializacion
  64+ 9384 18 5B            jr 5F
  65+ 9386 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9387
  67+ 9387              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9387              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9387
  70+ 9387 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9388 2A F0 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 938B CD D9 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 938E 67           	ld h,a
  74+ 938F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9390 CD D9 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9393 67           	ld h,a
  77+ 9394 A7           	and a
  78+ 9395 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9397 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9398 3A CB 89     	ld a,(Cuad_objeto)
  81+ 939B FE 02        	cp 2
  82+ 939D 38 1E        	jr c,3F
  83+ 939F 28 1C        	jr z,3F
  84+ 93A1 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 93A2 28 23            jr z,7F
  86+ 93A4 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 93A6 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 93A8 E1           	pop hl
  89+ 93A9
  90+ 93A9              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 93A9              ; _para indicar con E="2" en caso necesario.
  92+ 93A9
  93+ 93A9 E5               push hl
  94+ 93AA C5               push bc
  95+ 93AB CD D9 98     	call calcula_tercio
  96+ 93AE FE 01        	cp 1
  97+ 93B0 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93B2 CD E2 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93B5 28 26            jr z,9F
 100+ 93B7 38 24            jr c,9F
 101+ 93B9 1E 00        11 ld e,0
 102+ 93BB 18 22            jr 8F
 103+ 93BD 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93BE 28 07        	jr z, 7F
 105+ 93C0 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93C2 1E 00         	ld e,0
 107+ 93C4 E1           	pop hl
 108+ 93C5 18 04        	jr 4F
 109+ 93C7 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93C9 18 15            jr 10F
 111+ 93CB
 112+ 93CB              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93CB              ; _para indicar con E="2" en caso necesario.
 114+ 93CB
 115+ 93CB E5           4 push hl
 116+ 93CC C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93CD CD D9 98     	call calcula_tercio
 118+ 93D0 FE 01        	cp 1
 119+ 93D2 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93D4 CD E2 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93D7 28 04            jr z,9F
 122+ 93D9 30 02            jr nc,9F
 123+ 93DB 18 02        	jr 8F
 124+ 93DD 1E 02        9 ld e,2
 125+ 93DF C1           8 pop bc
 126+ 93E0 E1           10 pop hl
 127+ 93E1 C9           5 ret
 128+ 93E2
 129+ 93E2              ; --------------------
 130+ 93E2              ;
 131+ 93E2              ; 25/08/22
 132+ 93E2
 133+ 93E2 CD D9 98     Comprueba_centro call calcula_tercio
 134+ 93E5 67               ld h,a
 135+ 93E6 08           	ex af,af
 136+ 93E7 FE 02        	cp 2
 137+ 93E9 38 07        	jr c,1F
 138+ 93EB 28 05        	jr z,1F
 139+ 93ED 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93F0 18 03        	jr 2F
 141+ 93F2 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93F5 08           2 ex af,af
 143+ 93F6 A7               and a
 144+ 93F7 ED 42            sbc hl,bc
 145+ 93F9 C9               ret
 146+ 93FA
 147+ 93FA              ; *********************************************************************************************************************************************************************************************
 148+ 93FA              ;
 149+ 93FA              ;   16/8/22
 150+ 93FA              ;
 151+ 93FA              ;	Comprueba_limite_vertical
 152+ 93FA              ;
 153+ 93FA              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93FA              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93FA              ;
 156+ 93FA
 157+ 93FA 2A B9 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93FD 7D           	ld a,l
 159+ 93FE E6 1F        	and $1F
 160+ 9400 57           	ld d,a
 161+ 9401 3A F2 89     	ld a,(Limite_vertical)
 162+ 9404 BA           	cp d 											; Límite - Posición.
 163+ 9405 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9406 3A CB 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9409 CB 47        	bit 0,a
 166+ 940B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 940D
 168+ 940D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 940D
 170+ 940D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 940E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9410
 173+ 9410              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9410              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9410
 176+ 9410 3A BD 89         ld a,(Coordenada_X)
 177+ 9413 16 0F            ld d,Centro_izquierda
 178+ 9415 A7               and a
 179+ 9416 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9417 28 1E            jr z,3F
 181+ 9419 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 941B              ;                                                    ; _salimos sin modificar nada.
 183+ 941B 18 0E            jr 2F
 184+ 941D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 941E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9420
 187+ 9420              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9420              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9420
 190+ 9420 3A BD 89         ld a,(Coordenada_X)
 191+ 9423 16 10            ld d,Centro_derecha
 192+ 9425 A7               and a
 193+ 9426 92               sub d
 194+ 9427 28 0E            jr z,3F
 195+ 9429 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 942B              ;                                                    ; _salimos sin modificar nada.
 197+ 942B CB 43        2 bit 0,e
 198+ 942D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 942F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9430 CD C4 94         call Modificaccionne
 201+ 9433 C1           	pop bc
 202+ 9434 CD D4 94         call Inicializacion
 203+ 9437 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9438
 205+ 9438              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9438
 207+ 9438 C5           4 push bc
 208+ 9439 01 B8 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 943C 0A           	ld a,(bc)
 210+ 943D 3D           	dec a
 211+ 943E 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 943F 7D           	ld a,l
 213+ 9440 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9441 CB 47        	bit 0,a
 215+ 9443 28 03        	jr z,5F
 216+ 9445 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9446 18 2E        	jr 7F
 218+ 9448
 219+ 9448              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9448
 221+ 9448 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9449 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 944A 3A E5 89     	ld a,(Ctrl_0)
 224+ 944D CB 4F        	bit 1,a
 225+ 944F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9451 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9452
 228+ 9452              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9452
 230+ 9452 1C               inc e
 231+ 9453 1D               dec e
 232+ 9454 20 07            jr nz,12F
 233+ 9456 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9457 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9458 22 B9 89     	ld (Posicion_actual),hl
 236+ 945B 18 44        13 jr 9F
 237+ 945D CB 43        12 bit 0,e
 238+ 945F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9461              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9461 C1           	pop bc
 241+ 9462 18 D3        	jr 3B
 242+ 9464 80           14 add b
 243+ 9465 6F               ld l,a
 244+ 9466 22 B9 89     	ld (Posicion_actual),hl
 245+ 9469 CD C4 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 946C 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 946E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9470 32 E5 89         ld (Ctrl_0),a
 249+ 9473 F1           	pop af
 250+ 9474 18 2B        	jr 9F
 251+ 9476
 252+ 9476              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9476
 254+ 9476 F5           7 push af
 255+ 9477 3A E5 89     	ld a,(Ctrl_0)
 256+ 947A CB 47        	bit 0,a
 257+ 947C 20 1D        	jr nz,8F
 258+ 947E F1           	pop af
 259+ 947F
 260+ 947F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 947F
 262+ 947F 1C           	inc e
 263+ 9480 1D               dec e
 264+ 9481 20 07            jr nz,10F
 265+ 9483 90           	sub b
 266+ 9484 6F               ld l,a
 267+ 9485 22 B9 89     	ld (Posicion_actual),hl
 268+ 9488 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 948A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 948A CB 43        10 bit 0,e
 271+ 948C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 948E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 948E C1           	pop bc
 274+ 948F 18 A6        	jr 3B
 275+ 9491 90           16 sub b
 276+ 9492 6F               ld l,a
 277+ 9493 22 B9 89     	ld (Posicion_actual),hl
 278+ 9496 CD C4 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9499 18 06            jr 9F
 280+ 949B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 949D 32 E5 89         ld (Ctrl_0),a
 282+ 94A0 F1           	pop af
 283+ 94A1 C1           9 pop bc
 284+ 94A2 1E 00        	ld e,0
 285+ 94A4 CD D4 94         call Inicializacion
 286+ 94A7 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 94A8 08           	ex af,af
 288+ 94A9 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 94AA 18 8B            jr 3B
 290+ 94AC
 291+ 94AC              ; --------------------
 292+ 94AC
 293+ 94AC 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 94AE CD 28 96     1 call PreviousScan
 295+ 94B1 10 FB            djnz 1B
 296+ 94B3 22 B9 89     	ld (Posicion_actual),hl
 297+ 94B6 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94B7 C9           	ret
 299+ 94B8
 300+ 94B8              ; --------------------
 301+ 94B8
 302+ 94B8 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94BA CD 19 96     1 call NextScan
 304+ 94BD 10 FB            djnz 1B
 305+ 94BF 22 B9 89     	ld (Posicion_actual),hl
 306+ 94C2 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94C3 C9           	ret
 308+ 94C4
 309+ 94C4              ; --------------------
 310+ 94C4              ;
 311+ 94C4              ;	22/01/23
 312+ 94C4              ;
 313+ 94C4              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94C4              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94C4              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94C4
 317+ 94C4
 318+ 94C4              Modificaccionne
 319+ 94C4
 320+ 94C4 3A CB 89     	ld a,(Cuad_objeto)
 321+ 94C7 FE 02        	cp 2
 322+ 94C9 CC AC 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94CC DC AC 94         call c,Modifica_Pos_actual
 324+ 94CF C8           	ret z
 325+ 94D0 CD B8 94         call Modifica_Pos_actual2
 326+ 94D3 C9               ret
 327+ 94D4
 328+ 94D4              ; *************************************************************************************************************************************************************************************************
 329+ 94D4              ;
 330+ 94D4              ;	13/8/22
 331+ 94D4              ;
 332+ 94D4              ;	Inicializacion
 333+ 94D4              ;
 334+ 94D4              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94D4              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94D4              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94D4              ;
 338+ 94D4              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94D4              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94D4              ;	_ desaparece/aparece.
 341+ 94D4
 342+ 94D4              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94D4              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94D4              ;
 345+ 94D4              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94D4              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94D4              ; 		   [E] ="0"
 348+ 94D4
 349+ 94D4              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94D4
 351+ 94D4 CD D9 98     Inicializacion call calcula_tercio
 352+ 94D7 28 36        	jr z,primit
 353+ 94D9 E6 02        	and 2
 354+ 94DB 20 07        	jr nz,segmit
 355+ 94DD 7D           	ld a,l
 356+ 94DE FE 7F        	cp $7f
 357+ 94E0 38 2D        	jr c,primit
 358+ 94E2 28 2B        	jr z,primit
 359+ 94E4 CD 41 95     segmit call column
 360+ 94E7 38 13        	jr c,tercuad
 361+ 94E9 3E 04        cuarcuad ld a,4
 362+ 94EB 32 CB 89     	ld (Cuad_objeto),a
 363+ 94EE 21 20 48     	ld hl,$4820
 364+ 94F1 22 F0 89     	ld (Limite_horizontal),hl
 365+ 94F4 21 F2 89     	ld hl,Limite_vertical
 366+ 94F7 36 0D        	ld (hl),$0d
 367+ 94F9 08           	ex af,af
 368+ 94FA 18 3C        	jr 1F
 369+ 94FC              tercuad
 370+ 94FC 3E 03        	ld a,3
 371+ 94FE 32 CB 89     	ld (Cuad_objeto),a
 372+ 9501 21 20 48     	ld hl,$4820
 373+ 9504 22 F0 89     	ld (Limite_horizontal),hl
 374+ 9507 21 F2 89     	ld hl,Limite_vertical
 375+ 950A 36 12        	ld (hl),$12
 376+ 950C 08           	ex af,af
 377+ 950D 18 29        	jr 1F
 378+ 950F CD 41 95     primit call column
 379+ 9512 38 13        	jr c, primcuad
 380+ 9514              segcuad
 381+ 9514 3E 02        	ld a,2
 382+ 9516 32 CB 89     	ld (Cuad_objeto),a
 383+ 9519 21 C0 4F     	ld hl,$4fc0
 384+ 951C 22 F0 89     	ld (Limite_horizontal),hl
 385+ 951F 21 F2 89     	ld hl,Limite_vertical
 386+ 9522 36 0D        	ld (hl),$0d
 387+ 9524 08           	ex af,af
 388+ 9525 18 11        	jr 1F
 389+ 9527              primcuad
 390+ 9527 3E 01        	ld a,1
 391+ 9529 32 CB 89     	ld (Cuad_objeto),a
 392+ 952C 21 C0 4F     	ld hl,$4fc0
 393+ 952F 22 F0 89     	ld (Limite_horizontal),hl
 394+ 9532 21 F2 89     	ld hl,Limite_vertical
 395+ 9535 36 12        	ld (hl),$12
 396+ 9537 08           	ex af,af
 397+ 9538 CD 45 9C     1 call Genera_coordenadas
 398+ 953B 21 E5 89     	ld hl,Ctrl_0
 399+ 953E CB EE        	set 5,(hl)
 400+ 9540 C9           	ret
 401+ 9541
 402+ 9541              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9541
 404+ 9541              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9541              ;
 406+ 9541              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9541
 408+ 9541 7D           column ld a,l
 409+ 9542 E6 1F        	and $1f
 410+ 9544 FE 10         	cp $10
 411+ 9546 C9            	ret
 412+ 9547
 413+ 9547              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9547              ;
 415+ 9547              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9547              ;
 417+ 9547              ; 14/12/22
 418+ 9547              ;
 419+ 9547              ;	Modifica: A y BC.
 420+ 9547
 421+ 9547 3A CB 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 954A E6 01        	and 1
 423+ 954C 28 17        	jr z,1F
 424+ 954E
 425+ 954E              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 954E
 427+ 954E 3A BD 89     	ld a,(Coordenada_X)
 428+ 9551 47           	ld b,a
 429+ 9552 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9553 79           	ld a,c
 431+ 9554 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9555 38 08        	jr c,2F
 433+ 9557 47           	ld b,a
 434+ 9558 79           	ld a,c
 435+ 9559 90           	sub b
 436+ 955A 32 EF 89     	ld (Columnas),a
 437+ 955D 18 1B        	jr 4F
 438+ 955F 79           2 ld a,c
 439+ 9560 32 EF 89     	ld (Columnas),a
 440+ 9563 18 15        	jr 4F
 441+ 9565
 442+ 9565              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9565
 444+ 9565 3A BD 89     1 ld a,(Coordenada_X)
 445+ 9568 81           	add c
 446+ 9569 3D           	dec a
 447+ 956A D6 1F        	sub $1f
 448+ 956C 38 08        	jr c,3F
 449+ 956E 47           	ld b,a
 450+ 956F 79           	ld a,c
 451+ 9570 90           	sub b
 452+ 9571 32 EF 89     	ld (Columnas),a
 453+ 9574 18 04        	jr 4F
 454+ 9576 79           3 ld a,c
 455+ 9577 32 EF 89     	ld (Columnas),a
 456+ 957A D9           4 exx
 457+ 957B 4F           	ld c,a
 458+ 957C D9           	exx
 459+ 957D C9            ret
 460+ 957E
 461+ 957E              ; --------------------------------------------------------------------------------------------------------------------
 462+ 957E              ;
 463+ 957E              ; 7/1/23
 464+ 957E              ;
 465+ 957E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 957E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 957E              ;
 468+ 957E              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 957E              ;	DESTRUYE: HL,B Y A.
 470+ 957E
 471+ 957E 3A CB 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9581 FE 02        	cp 2
 473+ 9583 38 18        	jr c,1F
 474+ 9585 28 16        	jr z,1F
 475+ 9587 E6 01        	and 1
 476+ 9589 28 0D        	jr z,3F
 477+ 958B
 478+ 958B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 958B
 480+ 958B CD C7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 958E
 482+ 958E 7D           9 ld a,l
 483+ 958F E6 1F        	and $1f
 484+ 9591 28 2A        	jr z,7F
 485+ 9593 2B           	dec hl
 486+ 9594 10 F8        	djnz 9B
 487+ 9596 18 25        	jr 7F
 488+ 9598
 489+ 9598              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9598
 491+ 9598 2A B9 89     3 ld hl,(Posicion_actual)
 492+ 959B 18 20        	jr 7F
 493+ 959D
 494+ 959D 28 14        1 jr z,2F
 495+ 959F
 496+ 959F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 959F
 498+ 959F CD C7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 95A2
 500+ 95A2 7D           4 ld a,l
 501+ 95A3 E6 1F        	and $1f
 502+ 95A5 28 03        	jr z,6F
 503+ 95A7 2B           	dec hl
 504+ 95A8 10 F8        	djnz 4B
 505+ 95AA 06 0F        6 ld b,15
 506+ 95AC CD 28 96     5 call PreviousScan
 507+ 95AF 10 FB        	djnz 5B
 508+ 95B1 18 0A        	jr 7F
 509+ 95B3
 510+ 95B3              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 95B3
 512+ 95B3 CD C7 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 95B6 06 0F        	ld b,15
 514+ 95B8 CD 28 96     8 call PreviousScan
 515+ 95BB 10 FB        	djnz 8B
 516+ 95BD
 517+ 95BD E5           7 push hl
 518+ 95BE DD E1        	pop ix
 519+ 95C0
 520+ 95C0 2A BB 89     	ld hl,(Puntero_objeto)
 521+ 95C3 E5           	push hl
 522+ 95C4 FD E1        	pop iy
 523+ 95C6
 524+ 95C6 C9           	ret
 525+ 95C7
 526+ 95C7              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95C7              ;
 528+ 95C7              ;	2/1/23
 529+ 95C7              ;
 530+ 95C7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95C7              ;
 532+ 95C7              ;	Tras esta rutina tenemos:
 533+ 95C7              ;
 534+ 95C7              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95C7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95C7              ;
 537+ 95C7              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95C7
 539+ 95C7 2A B9 89     Operandos ld hl,(Posicion_actual)
 540+ 95CA 3A EF 89     	ld a,(Columnas)
 541+ 95CD 3D           	dec a
 542+ 95CE 20 01        	jr nz,1F
 543+ 95D0 3C           	inc a
 544+ 95D1 47           1 ld b,a
 545+ 95D2 C9           	ret
 546+ 95D3
 547+ 95D3              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95D3              ;
 549+ 95D3              ;	3/1/23
 550+ 95D3              ;
 551+ 95D3              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95D3              ;
 553+ 95D3              ;	Destruye: A,B,HL y DE.
 554+ 95D3
 555+ 95D3              Define_rutina_de_impresion
 556+ 95D3
 557+ 95D3 3A B8 89     	ld a,(Columns)
 558+ 95D6 47           	ld b,a
 559+ 95D7 3A EF 89     	ld a,(Columnas)
 560+ 95DA B8           	cp b
 561+ 95DB 20 0D        	jr nz,2f
 562+ 95DD
 563+ 95DD              ;	La entidad se imprime entera.
 564+ 95DD
 565+ 95DD 21 A9 96     	ld hl, Indice_entidades_completas
 566+ 95E0 E6 01        	and 1
 567+ 95E2 28 02        	jr z,1F
 568+ 95E4
 569+ 95E4 23           	inc hl
 570+ 95E5 23           	inc hl
 571+ 95E6
 572+ 95E6 CD 27 8D     1 call Extrae_address
 573+ 95E9 C9           	ret		;	ret
 574+ 95EA
 575+ 95EA              ;	La entidad no se imprime entera en pantalla.
 576+ 95EA
 577+ 95EA 3A CB 89     2 ld a,(Cuad_objeto)
 578+ 95ED E6 01        	and 1
 579+ 95EF 28 17        	jr z,3F
 580+ 95F1
 581+ 95F1              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95F1
 583+ 95F1 21 AD 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95F4 3A B8 89     4 ld a,(Columns)
 585+ 95F7 E6 01        	and 1
 586+ 95F9 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95FB
 588+ 95FB 23           	inc hl
 589+ 95FC 23           	inc hl
 590+ 95FD
 591+ 95FD 3A EF 89     	ld a,(Columnas)
 592+ 9600 E6 01        	and 1
 593+ 9602 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 9604
 595+ 9604 23           	inc hl
 596+ 9605 23           	inc hl
 597+ 9606
 598+ 9606 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 9608
 600+ 9608 21 B3 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 960B 18 E7        	jr 4B
 602+ 960D
 603+ 960D              ; --------------------------------------------------------------------------------------------------------------------
 604+ 960D              ;
 605+ 960D              ;	Prepara_draw
 606+ 960D              ;
 607+ 960D              ;	Es una rutina de carga.
 608+ 960D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 960D              ;
 610+ 960D              ;	FUNCIONAMIENTO:
 611+ 960D              ;
 612+ 960D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 960D              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 960D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 960D              ;
 616+ 960D              ;	DESTRUYE:
 617+ 960D              ;
 618+ 960D              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 960D
 620+ 960D 21 B7 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 9610 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 9611 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 9612 4E           	ld c,(hl)
 624+ 9613 2A B9 89     	ld hl,(Posicion_actual)
 625+ 9616 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 9618 C9           	ret
 627+ 9619
 628+ 9619              ;----------------------------------------------------------------------------------------------------------------
 629+ 9619              ;
 630+ 9619              ;	5/08/22
 631+ 9619              ;
 632+ 9619              ;   NextScan.
 633+ 9619              ;
 634+ 9619              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 9619              ;
 636+ 9619              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 9619              ;
 638+ 9619              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 9619              ;
 640+ 9619              ;       DESTRUIDOS: AF y HL !!!
 641+ 9619              ;
 642+ 9619              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 9619              ;
 644+ 9619
 645+ 9619 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 961A 7C               ld a,h
 647+ 961B E6 07            and 7
 648+ 961D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 961E
 650+ 961E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 961F C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 9621 6F               ld l,a
 653+ 9622 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9623
 655+ 9623 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9624 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9626 67               ld h,a
 658+ 9627 C9               ret
 659+ 9628
 660+ 9628              ;----------------------------------------------------------------------------------------------------------------
 661+ 9628              ;
 662+ 9628              ;	5/08/22
 663+ 9628              ;
 664+ 9628              ;   PreviousScan.
 665+ 9628              ;
 666+ 9628              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 9628              ;
 668+ 9628              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 9628              ;
 670+ 9628              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9628              ;
 672+ 9628              ;       DESTRUIDOS: AF y HL !!!
 673+ 9628              ;
 674+ 9628              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9628              ;
 676+ 9628
 677+ 9628 7C           PreviousScan ld a,h
 678+ 9629 25               dec h               ; Dec H.
 679+ 962A E6 07            and 7
 680+ 962C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 962D
 682+ 962D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 962E D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9630 6F               ld l,a
 685+ 9631 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9632
 687+ 9632 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9633 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9635 67               ld h,a
 690+ 9636 C9               ret
 691+ 9637
 692+ 9637              ; -----------------------------------------------------------------------------------
 693+ 9637              ;
 694+ 9637              ;	28/2/23
 695+ 9637              ;
 696+ 9637              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9637              ;	Extrae fotos de Album_de_fotos.
 698+ 9637
 699+ 9637 3A 02 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 963A A7           	and a
 701+ 963B C8           	ret z
 702+ 963C ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9640 31 00 70     	ld sp,Album_de_fotos
 704+ 9643
 705+ 9643 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9645 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9646 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9647
 709+ 9647 ED 73 09 8A  	ld (Stack_2),sp
 710+ 964B ED 7B 07 8A  	ld sp,(Stack)
 711+ 964F
 712+ 964F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 964F
 714+ 964F 3E CD        	ld a,$cd
 715+ 9651 32 59 96     	ld (Imprime),a
 716+ 9654 EB           	ex de,hl
 717+ 9655 22 5A 96     	ld (Imprime+1),hl
 718+ 9658 EB           	ex de,hl
 719+ 9659
 720+ 9659              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9659
 722+ 9659 00 00 00     Imprime db 0,0,0
 723+ 965C
 724+ 965C 3A 02 8A     	ld a,(Numero_de_malotes)
 725+ 965F 3D           	dec a
 726+ 9660 28 09        	jr z,1F
 727+ 9662 32 02 8A      	ld (Numero_de_malotes),a
 728+ 9665
 729+ 9665 ED 7B 09 8A   	ld sp,(Stack_2)
 730+ 9669 18 D8        	jr 2B
 731+ 966B
 732+ 966B AF           1 xor a
 733+ 966C 32 09 8A     	ld (Stack_2),a
 734+ 966F C9           	ret
 735+ 9670
 736+ 9670              ; -----------------------------------------------------------------------------------
 737+ 9670              ;
 738+ 9670              ;	28/2/23
 739+ 9670              ;
 740+ 9670              ;	Pinta los disparos generados.
 741+ 9670
 742+ 9670              Extrae_foto_disparos
 743+ 9670
 744+ 9670 3A 0F 8A     	ld a,(Numero_de_disparotes)
 745+ 9673 A7           	and a
 746+ 9674 C8           	ret z
 747+ 9675 ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9679 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 967C
 750+ 967C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 967E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 967F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9680
 754+ 9680 ED 73 09 8A  	ld (Stack_2),sp
 755+ 9684 ED 7B 07 8A  	ld sp,(Stack)
 756+ 9688
 757+ 9688              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9688
 759+ 9688 3E CD        	ld a,$cd
 760+ 968A 32 92 96     	ld (Imprime2),a
 761+ 968D EB           	ex de,hl
 762+ 968E 22 93 96     	ld (Imprime2+1),hl
 763+ 9691 EB           	ex de,hl
 764+ 9692
 765+ 9692              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 9692
 767+ 9692 00 00 00     Imprime2 db 0,0,0
 768+ 9695
 769+ 9695 3A 0F 8A     	ld a,(Numero_de_disparotes)
 770+ 9698 3D           	dec a
 771+ 9699 28 09        	jr z,1F
 772+ 969B 32 0F 8A      	ld (Numero_de_disparotes),a
 773+ 969E
 774+ 969E ED 7B 09 8A  	ld sp,(Stack_2)
 775+ 96A2 18 D8        	jr 2B
 776+ 96A4
 777+ 96A4 AF           1 xor a
 778+ 96A5 32 09 8A     	ld (Stack_2),a
 779+ 96A8 C9           	ret
 780+ 96A9
# file closed: Draw_XOR.asm
1238  96A9              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96A9              ;   índices de Rutinas de impresión.
   2+ 96A9
   3+ 96A9 B9 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96AB E6 96            defw Pinta_Amadeus_3x2
   5+ 96AD
   6+ 96AD 3C 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96AF DC 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96B1 90 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96B3
  10+ 96B3 66 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96B5 6A 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96B7 1E 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96B9
  14+ 96B9
  15+ 96B9              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96B9              ;
  17+ 96B9              ;   12/12/22
  18+ 96B9              ;
  19+ 96B9              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96B9              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96B9              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96B9              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96B9              ;
  24+ 96B9              ;   Modifica: DE y HL.
  25+ 96B9
  26+ 96B9 ED 73 07 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96BD FD F9        	ld sp,iy
  28+ 96BF 06 10            ld b,16
  29+ 96C1 D1           1 pop de
  30+ 96C2 7B               ld a,e
  31+ 96C3 AE               xor (hl)
  32+ 96C4 77           	ld (hl),a
  33+ 96C5 23           	inc hl
  34+ 96C6 7A               ld a,d
  35+ 96C7 AE               xor (hl)
  36+ 96C8 77           	ld (hl),a
  37+ 96C9 2B           	dec hl
  38+ 96CA 24           	inc h
  39+ 96CB 7C               ld a,h
  40+ 96CC E6 07            and 7
  41+ 96CE 20 0A            jr nz,2F
  42+ 96D0 7D               ld a,l
  43+ 96D1 C6 20            add a,$20
  44+ 96D3 6F               ld l,a
  45+ 96D4 38 04            jr c,2F
  46+ 96D6 7C               ld a,h
  47+ 96D7 D6 08            sub 8
  48+ 96D9 67               ld h,a
  49+ 96DA 7C           2 ld a,h
  50+ 96DB FE 58            cp $58
  51+ 96DD 28 02            jr z,3F
  52+ 96DF 10 E0            djnz 1B
  53+ 96E1 ED 7B 07 8A  3 ld sp,(Stack)
  54+ 96E5 C9           	ret
  55+ 96E6
  56+ 96E6 ED 73 07 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96EA FD F9        	ld sp,iy
  58+ 96EC 06 08            ld b,8
  59+ 96EE D1           1 pop de
  60+ 96EF 7B               ld a,e
  61+ 96F0 AE               xor (hl)
  62+ 96F1 77           	ld (hl),a
  63+ 96F2 23           	inc hl
  64+ 96F3 7A               ld a,d
  65+ 96F4 AE               xor (hl)
  66+ 96F5 77           	ld (hl),a
  67+ 96F6 23           	inc hl
  68+ 96F7 D1           	pop de
  69+ 96F8 7B               ld a,e
  70+ 96F9 AE               xor (hl)
  71+ 96FA 77           	ld (hl),a
  72+ 96FB 2B           	dec hl
  73+ 96FC 2B           	dec hl
  74+ 96FD 24           	inc h
  75+ 96FE 7C               ld a,h
  76+ 96FF E6 07            and 7
  77+ 9701 20 0A            jr nz,2F
  78+ 9703 7D               ld a,l
  79+ 9704 C6 20            add a,$20
  80+ 9706 6F               ld l,a
  81+ 9707 38 04            jr c,2F
  82+ 9709 7C               ld a,h
  83+ 970A D6 08            sub 8
  84+ 970C 67               ld h,a
  85+ 970D 7C           2 ld a,h
  86+ 970E FE 58            cp $58
  87+ 9710 28 25            jr z,4F
  88+ 9712 7A               ld a,d
  89+ 9713 AE               xor (hl)
  90+ 9714 77               ld (hl),a
  91+ 9715 D1           	pop de
  92+ 9716 23           	inc hl
  93+ 9717 7B               ld a,e
  94+ 9718 AE               xor (hl)
  95+ 9719 77           	ld (hl),a
  96+ 971A 23           	inc hl
  97+ 971B 7A               ld a,d
  98+ 971C AE               xor (hl)
  99+ 971D 77           	ld (hl),a
 100+ 971E 2B           	dec hl
 101+ 971F 2B           	dec hl
 102+ 9720 24           	inc h
 103+ 9721 7C               ld a,h
 104+ 9722 E6 07            and 7
 105+ 9724 20 0A            jr nz,3F
 106+ 9726 7D               ld a,l
 107+ 9727 C6 20            add a,$20
 108+ 9729 6F               ld l,a
 109+ 972A 38 04            jr c,3F
 110+ 972C 7C               ld a,h
 111+ 972D D6 08            sub 8
 112+ 972F 67               ld h,a
 113+ 9730 7C           3 ld a,h
 114+ 9731 FE 58            cp $58
 115+ 9733 28 02            jr z,4F
 116+ 9735 10 B7            djnz 1B
 117+ 9737 ED 7B 07 8A  4 ld sp,(Stack)
 118+ 973B C9           	ret
 119+ 973C
 120+ 973C              ; ---------------------------------------------------
 121+ 973C
 122+ 973C ED 73 07 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9740 FD F9        	ld sp,iy
 124+ 9742
 125+ 9742              ; >>>
 126+ 9742
 127+ 9742 06 10            ld b,16
 128+ 9744 D1           1 pop de
 129+ 9745 7A           	ld a,d
 130+ 9746 AE           	xor (hl)
 131+ 9747 77           	ld (hl),a
 132+ 9748 24           	inc h
 133+ 9749 7C               ld a,h
 134+ 974A E6 07            and 7
 135+ 974C 20 0C            jr nz,2F
 136+ 974E 7D               ld a,l
 137+ 974F C6 20            add a,$20
 138+ 9751 6F               ld l,a
 139+ 9752 38 06            jr c,2F
 140+ 9754 7C               ld a,h
 141+ 9755 D6 08            sub 8
 142+ 9757 67               ld h,a
 143+ 9758 18 00            jr 2F
 144+ 975A 7C           2 ld a,h
 145+ 975B FE 58            cp $58
 146+ 975D 28 02            jr z,3F
 147+ 975F 10 E3            djnz 1B
 148+ 9761 ED 7B 07 8A  3 ld sp,(Stack)
 149+ 9765 C9           	ret
 150+ 9766
 151+ 9766 ED 73 07 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 976A FD F9        	ld sp,iy
 153+ 976C
 154+ 976C              ; >>>
 155+ 976C
 156+ 976C 06 10            ld b,16
 157+ 976E D1           1 pop de
 158+ 976F 7B           	ld a,e
 159+ 9770 AE           	xor (hl)
 160+ 9771 77           	ld (hl),a
 161+ 9772 24           	inc h
 162+ 9773 7C               ld a,h
 163+ 9774 E6 07            and 7
 164+ 9776 20 0C            jr nz,2F
 165+ 9778 7D               ld a,l
 166+ 9779 C6 20            add a,$20
 167+ 977B 6F               ld l,a
 168+ 977C 38 06            jr c,2F
 169+ 977E 7C               ld a,h
 170+ 977F D6 08            sub 8
 171+ 9781 67               ld h,a
 172+ 9782 18 00            jr 2F
 173+ 9784 7C           2 ld a,h
 174+ 9785 FE 58            cp $58
 175+ 9787 28 02            jr z,3F
 176+ 9789 10 E3            djnz 1B
 177+ 978B ED 7B 07 8A  3 ld sp,(Stack)
 178+ 978F C9           	ret
 179+ 9790
 180+ 9790              ; ---------------------------------------------------
 181+ 9790
 182+ 9790 ED 73 07 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9794 FD F9        	ld sp,iy
 184+ 9796 06 08            ld b,8
 185+ 9798 D1           1 pop de
 186+ 9799 7A           	ld a,d
 187+ 979A AE           	xor (hl)
 188+ 979B 77           	ld (hl),a
 189+ 979C 23           	inc hl
 190+ 979D D1           	pop de
 191+ 979E 7B           	ld a,e
 192+ 979F AE           	xor (hl)
 193+ 97A0 77           	ld (hl),a
 194+ 97A1 2B           	dec hl
 195+ 97A2 24            	inc h
 196+ 97A3 7C               ld a,h
 197+ 97A4 E6 07            and 7
 198+ 97A6 20 0A            jr nz,2F
 199+ 97A8 7D               ld a,l
 200+ 97A9 C6 20            add a,$20
 201+ 97AB 6F               ld l,a
 202+ 97AC 38 04            jr c,2F
 203+ 97AE 7C               ld a,h
 204+ 97AF D6 08            sub 8
 205+ 97B1 67               ld h,a
 206+ 97B2 7C           2 ld a,h
 207+ 97B3 FE 58            cp $58
 208+ 97B5 28 20            jr z,4F
 209+ 97B7 D1               pop de
 210+ 97B8 7B           	ld a,e
 211+ 97B9 AE           	xor (hl)
 212+ 97BA 77           	ld (hl),a
 213+ 97BB 23           	inc hl
 214+ 97BC 7A           	ld a,d
 215+ 97BD AE           	xor (hl)
 216+ 97BE 77           	ld (hl),a
 217+ 97BF 2B           	dec hl
 218+ 97C0 24           	inc h
 219+ 97C1 7C               ld a,h
 220+ 97C2 E6 07            and 7
 221+ 97C4 20 0A            jr nz,3F
 222+ 97C6 7D               ld a,l
 223+ 97C7 C6 20            add a,$20
 224+ 97C9 6F               ld l,a
 225+ 97CA 38 04            jr c,3F
 226+ 97CC 7C               ld a,h
 227+ 97CD D6 08            sub 8
 228+ 97CF 67               ld h,a
 229+ 97D0 7C           3 ld a,h
 230+ 97D1 FE 58            cp $58
 231+ 97D3 28 02            jr z,4F
 232+ 97D5 10 C1            djnz 1B
 233+ 97D7 ED 7B 07 8A  4 ld sp,(Stack)
 234+ 97DB C9           	ret
 235+ 97DC
 236+ 97DC ED 73 07 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97E0 FD F9        	ld sp,iy
 238+ 97E2 06 08            ld b,8
 239+ 97E4 D1           1 pop de
 240+ 97E5 D1           	pop de
 241+ 97E6 7B           	ld a,e
 242+ 97E7 AE           	xor (hl)
 243+ 97E8 77           	ld (hl),a
 244+ 97E9 24            	inc h
 245+ 97EA 7C               ld a,h
 246+ 97EB E6 07            and 7
 247+ 97ED 20 0A            jr nz,2F
 248+ 97EF 7D               ld a,l
 249+ 97F0 C6 20            add a,$20
 250+ 97F2 6F               ld l,a
 251+ 97F3 38 04            jr c,2F
 252+ 97F5 7C               ld a,h
 253+ 97F6 D6 08            sub 8
 254+ 97F8 67               ld h,a
 255+ 97F9 7C           2 ld a,h
 256+ 97FA FE 58            cp $58
 257+ 97FC 28 1B            jr z,4F
 258+ 97FE D1               pop de
 259+ 97FF 7A           	ld a,d
 260+ 9800 AE           	xor (hl)
 261+ 9801 77           	ld (hl),a
 262+ 9802 24           	inc h
 263+ 9803 7C               ld a,h
 264+ 9804 E6 07            and 7
 265+ 9806 20 0A            jr nz,3F
 266+ 9808 7D               ld a,l
 267+ 9809 C6 20            add a,$20
 268+ 980B 6F               ld l,a
 269+ 980C 38 04            jr c,3F
 270+ 980E 7C               ld a,h
 271+ 980F D6 08            sub 8
 272+ 9811 67               ld h,a
 273+ 9812 7C           3 ld a,h
 274+ 9813 FE 58            cp $58
 275+ 9815 28 02            jr z,4F
 276+ 9817 10 CB            djnz 1B
 277+ 9819 ED 7B 07 8A  4 ld sp,(Stack)
 278+ 981D C9           	ret
 279+ 981E
 280+ 981E ED 73 07 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9822 FD F9        	ld sp,iy
 282+ 9824 06 08            ld b,8
 283+ 9826 D1           1 pop de
 284+ 9827 7B           	ld a,e
 285+ 9828 AE           	xor (hl)
 286+ 9829 77           	ld (hl),a
 287+ 982A 23           	inc hl
 288+ 982B 7A           	ld a,d
 289+ 982C AE           	xor (hl)
 290+ 982D 77           	ld (hl),a
 291+ 982E 2B           	dec hl
 292+ 982F 24             	inc h
 293+ 9830 7C               ld a,h
 294+ 9831 E6 07            and 7
 295+ 9833 20 0A            jr nz,2F
 296+ 9835 7D               ld a,l
 297+ 9836 C6 20            add a,$20
 298+ 9838 6F               ld l,a
 299+ 9839 38 04            jr c,2F
 300+ 983B 7C               ld a,h
 301+ 983C D6 08            sub 8
 302+ 983E 67               ld h,a
 303+ 983F 7C           2 ld a,h
 304+ 9840 FE 58            cp $58
 305+ 9842 28 21            jr z,4F
 306+ 9844 D1               pop de
 307+ 9845 7A           	ld a,d
 308+ 9846 AE           	xor (hl)
 309+ 9847 77           	ld (hl),a
 310+ 9848 23           	inc hl
 311+ 9849 D1               pop de
 312+ 984A 7B           	ld a,e
 313+ 984B AE           	xor (hl)
 314+ 984C 77           	ld (hl),a
 315+ 984D 2B           	dec hl
 316+ 984E 24           	inc h
 317+ 984F 7C               ld a,h
 318+ 9850 E6 07            and 7
 319+ 9852 20 0A            jr nz,3F
 320+ 9854 7D               ld a,l
 321+ 9855 C6 20            add a,$20
 322+ 9857 6F               ld l,a
 323+ 9858 38 04            jr c,3F
 324+ 985A 7C               ld a,h
 325+ 985B D6 08            sub 8
 326+ 985D 67               ld h,a
 327+ 985E 7C           3 ld a,h
 328+ 985F FE 58            cp $58
 329+ 9861 28 02            jr z,4F
 330+ 9863 10 C1            djnz 1B
 331+ 9865 ED 7B 07 8A  4 ld sp,(Stack)
 332+ 9869 C9           	ret
 333+ 986A
 334+ 986A ED 73 07 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 986E FD F9        	ld sp,iy
 336+ 9870 06 08            ld b,8
 337+ 9872 D1           1 pop de
 338+ 9873 7B           	ld a,e
 339+ 9874 AE           	xor (hl)
 340+ 9875 77           	ld (hl),a
 341+ 9876 24            	inc h
 342+ 9877 7C               ld a,h
 343+ 9878 E6 07            and 7
 344+ 987A 20 0A            jr nz,2F
 345+ 987C 7D               ld a,l
 346+ 987D C6 20            add a,$20
 347+ 987F 6F               ld l,a
 348+ 9880 38 04            jr c,2F
 349+ 9882 7C               ld a,h
 350+ 9883 D6 08            sub 8
 351+ 9885 67               ld h,a
 352+ 9886 7C           2 ld a,h
 353+ 9887 FE 58            cp $58
 354+ 9889 28 1C            jr z,4F
 355+ 988B D1               pop de
 356+ 988C 7A           	ld a,d
 357+ 988D AE           	xor (hl)
 358+ 988E 77           	ld (hl),a
 359+ 988F 24           	inc h
 360+ 9890 7C               ld a,h
 361+ 9891 E6 07            and 7
 362+ 9893 20 0A            jr nz,3F
 363+ 9895 7D               ld a,l
 364+ 9896 C6 20            add a,$20
 365+ 9898 6F               ld l,a
 366+ 9899 38 04            jr c,3F
 367+ 989B 7C               ld a,h
 368+ 989C D6 08            sub 8
 369+ 989E 67               ld h,a
 370+ 989F 7C           3 ld a,h
 371+ 98A0 FE 58            cp $58
 372+ 98A2 28 03            jr z,4F
 373+ 98A4 D1               pop de
 374+ 98A5 10 CB            djnz 1B
 375+ 98A7 ED 7B 07 8A  4 ld sp,(Stack)
 376+ 98AB C9           	ret
 377+ 98AC
 378+ 98AC              ; ---------------------------------------------------
 379+ 98AC              ;
 380+ 98AC              ;   27/02/23
 381+ 98AC              ;
 382+ 98AC              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98AC              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98AC              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98AC
 386+ 98AC ED 73 07 8A  Pinta_Disparo ld (Stack),sp
 387+ 98B0 FD F9            ld sp,iy
 388+ 98B2 06 04            ld b,4
 389+ 98B4 D1           1 pop de
 390+ 98B5 7B               ld a,e
 391+ 98B6 AE               xor (hl)
 392+ 98B7 77               ld (hl),a
 393+ 98B8 23               inc hl
 394+ 98B9 7A               ld a,d
 395+ 98BA AE               xor (hl)
 396+ 98BB 77               ld (hl),a
 397+ 98BC 2B               dec hl
 398+ 98BD
 399+ 98BD 24               inc h
 400+ 98BE 7C               ld a,h
 401+ 98BF E6 07            and 7
 402+ 98C1 20 0A            jr nz,2F
 403+ 98C3 7D               ld a,l
 404+ 98C4 C6 20            add a,$20
 405+ 98C6 6F               ld l,a
 406+ 98C7 38 04            jr c,2F
 407+ 98C9 7C               ld a,h
 408+ 98CA D6 08            sub 8
 409+ 98CC 67               ld h,a
 410+ 98CD 7C           2 ld a,h
 411+ 98CE FE 58            cp $58
 412+ 98D0 28 02            jr z,3F
 413+ 98D2
 414+ 98D2 10 E0            djnz 1B
 415+ 98D4 ED 7B 07 8A  3 ld sp,(Stack)
 416+ 98D8 C9               ret
 417+ 98D9
# file closed: Rutinas_de_impresion_sprites.asm
1239  98D9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98D9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98D9              ;
   3+ 98D9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98D9              ;
   5+ 98D9              ; *****************************************************************************************************************************************************************************************
   6+ 98D9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98D9
   8+ 98D9 7C           calcula_tercio ld a,h
   9+ 98DA E6 18        	and $18
  10+ 98DC CB 2F        	sra a
  11+ 98DE CB 2F        	sra a
  12+ 98E0 CB 2F        	sra a
  13+ 98E2 C9           	ret
  14+ 98E3
# file closed: calcula_tercio.asm
1240  98E3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98E3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98E3              ;
   3+ 98E3              ;
   4+ 98E3              ;	CLS.
   5+ 98E3              ;
   6+ 98E3              ;	Limpia la pantalla y define sus atributos.
   7+ 98E3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98E3              ;
   9+ 98E3              ;	COLORES: 0 ..... NEGRO
  10+ 98E3              ;    		 1 ..... AZUL
  11+ 98E3              ; 			 2 ..... ROJO
  12+ 98E3              ;			 3 ..... MAGENTA
  13+ 98E3              ; 			 4 ..... VERDE
  14+ 98E3              ; 			 5 ..... CIAN
  15+ 98E3              ;			 6 ..... AMARILLO
  16+ 98E3              ; 			 7 ..... BLANCO
  17+ 98E3              ;
  18+ 98E3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98E3              ;
  20+ 98E3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98E3
  22+ 98E3
  23+ 98E3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98E6 11 01 40     	LD DE,$4001
  25+ 98E9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98EC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98EE ED B0        	LDIR
  28+ 98F0 01 FF 02     	LD BC,767
  29+ 98F3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98F4 ED B0        	LDIR
  31+ 98F6 C9           	ret
  32+ 98F7
# file closed: Cls.asm
1241  98F7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98F7              ; ******************************************************************************************************************************************************************************************
   2+ 98F7              ;
   3+ 98F7              ;   20/05/23
   4+ 98F7              ;
   5+ 98F7              ;	Recompone_posicion_inicio
   6+ 98F7              ;
   7+ 98F7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98F7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98F7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98F7              ;	_ a una u otra rutina.
  11+ 98F7
  12+ 98F7              Recompone_posicion_inicio
  13+ 98F7
  14+ 98F7 2A C9 89     	ld hl,(Posicion_inicio)
  15+ 98FA 7D           	ld a,l
  16+ 98FB E6 1F        	and $1f
  17+ 98FD 28 16        	jr z,1F
  18+ 98FF
  19+ 98FF FE 1F        	cp $1f
  20+ 9901 28 0D        	jr z,3F
  21+ 9903
  22+ 9903 21 F3 89     	ld hl,Ctrl_2
  23+ 9906 CB C6        	set 0,(hl)
  24+ 9908 2A BB 89     	ld hl,(Puntero_objeto)
  25+ 990B 22 F6 89     	ld (Repone_puntero_objeto),hl
  26+ 990E 18 08        	jr 2F
  27+ 9910
  28+ 9910 CD B1 9A     3 call Mov_left
  29+ 9913 18 03        	jr 2F
  30+ 9915
  31+ 9915 CD 93 99     1 call Mov_right
  32+ 9918 21 00 F0     2 ld hl,Sprite_vacio
  33+ 991B 22 BB 89     	ld (Puntero_objeto),hl
  34+ 991E C9           	ret
  35+ 991F
  36+ 991F              ; ******************************************************************************************************************************************************************************************
  37+ 991F              ;
  38+ 991F              ;   27/05/23
  39+ 991F              ;
  40+ 991F              ;	Mov_down
  41+ 991F              ;
  42+ 991F              ; 	Mueve el Sprite X px hacia abajo.
  43+ 991F              ;
  44+ 991F              ;
  45+ 991F              Mov_down
  46+ 991F
  47+ 991F CD 81 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9922              ;																	; _ repone (Puntero_objeto).
  49+ 9922 21 E5 89     	ld hl,Ctrl_0
  50+ 9925 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9927              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9927              ; 																	; _ en el caso de que no lo haya.
  53+ 9927 3A CF 89     	ld a,(Vel_down)
  54+ 992A 47           	ld b,a
  55+ 992B 2A B9 89         ld hl,(Posicion_actual)
  56+ 992E CD D9 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9931 E6 02        	and 2
  58+ 9933 28 0F        	jr z,1F
  59+ 9935
  60+ 9935              ; Nos encontramos en el último tercio de pantalla.
  61+ 9935              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9935
  63+ 9935 7C           	ld a,h
  64+ 9936 FE 57        	cp $57
  65+ 9938 20 0A        	jr nz,1F
  66+ 993A 7D           	ld a,l
  67+ 993B C6 20        	add $20
  68+ 993D 30 05        	jr nc,1F
  69+ 993F
  70+ 993F              ; ------------------------------
  71+ 993F CD 2F 9C     	call Reaparece_arriba
  72+ 9942              ;	call Reinicio
  73+ 9942              ; ------------------------------
  74+ 9942
  75+ 9942 18 08        	jr 3F
  76+ 9944 CD 19 96     1 call NextScan
  77+ 9947 22 B9 89     	ld (Posicion_actual),hl
  78+ 994A 10 E2            djnz 2B
  79+ 994C CD 45 9C     3 call Genera_coordenadas
  80+ 994F C9           	ret
  81+ 9950
  82+ 9950              ; ******************************************************************************************************************************************************************************************
  83+ 9950              ;
  84+ 9950              ;   27/05/23
  85+ 9950              ;
  86+ 9950              ;	Mov_up
  87+ 9950              ;
  88+ 9950              ; 	Mueve el Sprite hacia arriba.
  89+ 9950              ;
  90+ 9950              ;
  91+ 9950              Mov_up
  92+ 9950
  93+ 9950 CD 81 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9953              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9953 21 E5 89     	ld hl,Ctrl_0
  96+ 9956 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9958              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9958              ; 																		; _ en el caso de que no lo haya.
  99+ 9958 3A CE 89     	ld a,(Vel_up)
 100+ 995B 47           	ld b,a
 101+ 995C 2A B9 89     	ld hl,(Posicion_actual)
 102+ 995F CD D9 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9962 A7           	and a
 104+ 9963 20 10        	jr nz,1F
 105+ 9965
 106+ 9965              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9965              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9965
 109+ 9965 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9966 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9968 20 0B            jr nz,1F
 112+ 996A 7D               ld a,l
 113+ 996B D6 20            sub $20
 114+ 996D 30 06            jr nc,1F
 115+ 996F 25               dec h
 116+ 9970
 117+ 9970              ; -----------------------------
 118+ 9970 CD 1F 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9973              ;	call Reinicio
 120+ 9973              ; -----------------------------
 121+ 9973
 122+ 9973 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9975 CD 28 96     1 call PreviousScan
 124+ 9978 22 B9 89     	ld (Posicion_actual),hl
 125+ 997B 10 E2            djnz 3B
 126+ 997D CD 45 9C     2 call Genera_coordenadas
 127+ 9980 C9           	ret
 128+ 9981
 129+ 9981              ; -----------------------------
 130+ 9981              ;
 131+ 9981              ;	27/5/23
 132+ 9981              ;
 133+ 9981              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9981              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9981              ;
 136+ 9981              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9981              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9981              ;
 139+ 9981              ;	Modifica: A y (Puntero_objeto).
 140+ 9981
 141+ 9981 3A F3 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9984 CB 47        	bit 0,a
 143+ 9986 C8           	ret z
 144+ 9987 CB 87        	res 0,a
 145+ 9989 32 F3 89     	ld (Ctrl_2),a
 146+ 998C 2A F6 89     	ld hl,(Repone_puntero_objeto)
 147+ 998F 22 BB 89     	ld (Puntero_objeto),hl
 148+ 9992 C9           	ret
 149+ 9993
 150+ 9993              ; ******************************************************************************************************************************************************************************************
 151+ 9993              ;
 152+ 9993              ;	19/10/22
 153+ 9993              ;
 154+ 9993              ;	Mov_right.
 155+ 9993              ;
 156+ 9993              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9993              ;
 158+ 9993
 159+ 9993 21 E5 89     Mov_right ld hl,Ctrl_0
 160+ 9996 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9998              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9998              ; 																	; _ en el caso de que no lo haya.
 163+ 9998 3A E5 89     	ld a,(Ctrl_0)
 164+ 999B CB 77        	bit 6,a
 165+ 999D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 999F
 167+ 999F CD CD 9B     	call Stop_Amadeus_right
 168+ 99A2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 99A3 18 4D        	jr 8F
 170+ 99A5
 171+ 99A5 3A BD 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 99A8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 99AA 20 46        	jr nz,8F
 174+ 99AC
 175+ 99AC 3A BF 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 99AF A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 99B0 28 40        	jr z,8F
 178+ 99B2
 179+ 99B2              ; ---------- ---------- ----------
 180+ 99B2              ;
 181+ 99B2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 99B2
 183+ 99B2 3A CD 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 99B5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 99B7 28 11        	jr z,1F
 186+ 99B9 38 06        	jr c,6F
 187+ 99BB FE 04        	cp 4
 188+ 99BD 28 14        	jr z,7F
 189+ 99BF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99C1
 191+ 99C1              ; ---------- ---------- ----------
 192+ 99C1              ;
 193+ 99C1              ; Perfiles de velocidad
 194+ 99C1              ;
 195+ 99C1
 196+ 99C1 3A BF 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99C4 FE FE        	cp $fe
 198+ 99C6 20 2A        	jr nz,8F
 199+ 99C8 18 10        	jr 3F
 200+ 99CA 3A BF 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99CD FE FD        	cp $fd
 202+ 99CF 20 21        	jr nz,8F
 203+ 99D1 18 07        	jr 3F
 204+ 99D3 3A BF 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99D6 FE FB        	cp $fb
 206+ 99D8 20 18        	jr nz,8F
 207+ 99DA
 208+ 99DA              ; ---------- ---------- ----------
 209+ 99DA
 210+ 99DA              3
 211+ 99DA CD 0D 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99DD              ;	call Reinicio
 213+ 99DD
 214+ 99DD              ; ---------- ---------- ----------
 215+ 99DD              ;
 216+ 99DD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99DD
 218+ 99DD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99DF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99E0 CD F9 99     	call DESPLZ_DER
 221+ 99E3 C1           	pop bc
 222+ 99E4 10 F9        	djnz 5B
 223+ 99E6 2A B9 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99E9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99EA 22 B9 89     	ld (Posicion_actual),hl
 226+ 99ED CD 45 9C     	call Genera_coordenadas
 227+ 99F0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99F2
 229+ 99F2              ; ---------- ---------- ----------
 230+ 99F2
 231+ 99F2 2A B9 89     8 ld hl,(Posicion_actual)
 232+ 99F5 CD F9 99     	call DESPLZ_DER
 233+ 99F8 C9           2 ret
 234+ 99F9
 235+ 99F9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99F9              ;
 237+ 99F9              ;	22/9/22
 238+ 99F9              ;
 239+ 99F9
 240+ 99F9 CD 08 9A     DESPLZ_DER call Desplaza_derecha
 241+ 99FC CD 54 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99FF CD 7D 9A         call Ciclo_completo
 243+ 9A02 21 E5 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9A05 CB FE        	set 7,(hl)
 245+ 9A07 C9           	ret
 246+ 9A08
 247+ 9A08              ; ******************************************************************************************************************************************************************************************
 248+ 9A08              ;	15/02/23
 249+ 9A08              ;
 250+ 9A08
 251+ 9A08 3A CD 89     Desplaza_derecha ld a,(Vel_right)
 252+ 9A0B 47           	ld b,a
 253+ 9A0C 2A C5 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9A0F 23           1 inc hl
 255+ 9A10 23           	inc hl
 256+ 9A11 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9A13 22 C5 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9A16 CD 27 8D     	call Extrae_address
 259+ 9A19 22 BB 89     	ld (Puntero_objeto),hl
 260+ 9A1C
 261+ 9A1C              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9A1C
 263+ 9A1C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9A1C              ; Cuántos movimientos hemos hecho ??
 265+ 9A1C              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9A1C
 267+ 9A1C 2A C1 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A1F EB           	ex de,hl
 269+ 9A20 A7           	and a
 270+ 9A21 ED 52        	sbc hl,de
 271+ 9A23 CB 3D        	srl l
 272+ 9A25 3E 08        6 ld a,8
 273+ 9A27 95           	sub l
 274+ 9A28 30 1E        	jr nc,3F
 275+ 9A2A
 276+ 9A2A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A2A              ; B="0".
 278+ 9A2A
 279+ 9A2A 04           4 inc b
 280+ 9A2B 3C           	inc a
 281+ 9A2C 20 FC        	jr nz,4B
 282+ 9A2E 78           	ld a,b
 283+ 9A2F 08           	ex af,af
 284+ 9A30 2A C1 89     	ld hl,(Indice_Sprite_der)
 285+ 9A33 23           5 inc hl
 286+ 9A34 23           	inc hl
 287+ 9A35 10 FC        	djnz 5B
 288+ 9A37 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A3A CD 27 8D     	call Extrae_address
 290+ 9A3D 22 BB 89     	ld (Puntero_objeto),hl
 291+ 9A40
 292+ 9A40              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A40              ; _(Posicion_actual).
 294+ 9A40
 295+ 9A40 21 B9 89     	ld hl,Posicion_actual
 296+ 9A43 34           	inc (hl)
 297+ 9A44 08               ex af,af
 298+ 9A45 6F           	ld l,a
 299+ 9A46 18 DD        	jr 6B
 300+ 9A48
 301+ 9A48              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A48
 303+ 9A48 47           3 ld b,a
 304+ 9A49 2A C3 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A4C 23           2 inc hl
 306+ 9A4D 23           	inc hl
 307+ 9A4E 10 FC        	djnz 2B
 308+ 9A50 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A53 C9           8 ret
 310+ 9A54
 311+ 9A54              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A54              ;
 313+ 9A54              ;	24/7/22
 314+ 9A54              ;
 315+ 9A54              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A54              ;
 317+ 9A54              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A54              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A54              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A54
 321+ 9A54 3A BF 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A57 A7           	and a
 323+ 9A58 20 1F        	jr nz,1F
 324+ 9A5A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A5C 32 BF 89         ld (CTRL_DESPLZ),a
 326+ 9A5F
 327+ 9A5F 21 B8 89     	ld hl,Columns
 328+ 9A62 34           	inc (hl)
 329+ 9A63 3A CB 89     	ld a,(Cuad_objeto)
 330+ 9A66 E6 01        	and 1
 331+ 9A68 28 0F        	jr z,1F
 332+ 9A6A 2A B9 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A6D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A6E 22 B9 89     	ld (Posicion_actual),hl
 335+ 9A71 CD 45 9C     	call Genera_coordenadas
 336+ 9A74 CD D9 9B     	call Inc_CTRL_DESPLZ
 337+ 9A77 18 03        	jr 2F
 338+ 9A79 CD D9 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A7C C9           2 ret
 340+ 9A7D
 341+ 9A7D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A7D              ;
 343+ 9A7D              ;	24/7/22
 344+ 9A7D              ;
 345+ 9A7D              ;	Ciclo_completo.
 346+ 9A7D              ;
 347+ 9A7D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A7D              ;
 349+ 9A7D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A7D              ; 	Decrementamos (Columns).
 351+ 9A7D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A7D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A7D
 354+ 9A7D
 355+ 9A7D 3A BF 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A80 FE FF        	cp $ff
 357+ 9A82 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A84 E6 F0        	and $f0
 359+ 9A86 20 28        	jr nz,3F
 360+ 9A88
 361+ 9A88              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A88
 363+ 9A88 3A BF 89     	ld a,(CTRL_DESPLZ)
 364+ 9A8B 47           	ld b,a
 365+ 9A8C 3E F8        	ld a,$f8
 366+ 9A8E 80           	add b
 367+ 9A8F 32 BF 89     	ld (CTRL_DESPLZ),a
 368+ 9A92 18 1C        	jr 3F
 369+ 9A94 21 B8 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A97 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A98 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A99 32 BF 89     	ld (CTRL_DESPLZ),a
 373+ 9A9C 3A CB 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A9F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9AA1 20 0A        	jr nz,2F
 376+ 9AA3 2A B9 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9AA6 23           	inc hl
 378+ 9AA7 22 B9 89     	ld (Posicion_actual),hl
 379+ 9AAA CD 45 9C     	call Genera_coordenadas
 380+ 9AAD
 381+ 9AAD              ; Inicia el puntero de Sprite.
 382+ 9AAD
 383+ 9AAD CD 3E 8D     2 call Inicia_puntero_objeto_der
 384+ 9AB0 C9           3 ret
 385+ 9AB1
 386+ 9AB1              ; ******************************************************************************************************************************************************************************************
 387+ 9AB1              ;
 388+ 9AB1              ;	15/02/23
 389+ 9AB1              ;
 390+ 9AB1              ;	Mov_left.
 391+ 9AB1              ;
 392+ 9AB1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9AB1              ;
 394+ 9AB1 21 E5 89     Mov_left ld hl,Ctrl_0
 395+ 9AB4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9AB6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9AB6              ; 																	; _ en el caso de que no lo haya.
 398+ 9AB6 3A E5 89     	ld a,(Ctrl_0)
 399+ 9AB9 CB 77        	bit 6,a
 400+ 9ABB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9ABD
 402+ 9ABD CD D3 9B     	call Stop_Amadeus_left
 403+ 9AC0 C8           	ret z
 404+ 9AC1 20 4A        	jr nz,8F
 405+ 9AC3
 406+ 9AC3 3A BD 89     11 ld a,(Coordenada_X)
 407+ 9AC6 A7           	and a
 408+ 9AC7 20 44        	jr nz,8F
 409+ 9AC9
 410+ 9AC9 3A BF 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9ACC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9ACD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9ACF
 414+ 9ACF              ; ---------- ---------- ----------
 415+ 9ACF
 416+ 9ACF 3A CC 89     	ld a,(Vel_left)
 417+ 9AD2 FE 02        	cp 2
 418+ 9AD4 28 0F        	jr z,1F
 419+ 9AD6 38 04        	jr c,6F
 420+ 9AD8 FE 04        	cp 4
 421+ 9ADA 28 12        	jr z,7F
 422+ 9ADC
 423+ 9ADC              ; ---------- ---------- ----------
 424+ 9ADC
 425+ 9ADC 3A BF 89     6 ld a,(CTRL_DESPLZ)
 426+ 9ADF FE F8        	cp $f8
 427+ 9AE1 20 2A        	jr nz,8F
 428+ 9AE3 18 10        	jr 4F
 429+ 9AE5 3A BF 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AE8 FE F9        	cp $f9
 431+ 9AEA 20 21        	jr nz,8F
 432+ 9AEC 18 07        	jr 4F
 433+ 9AEE 3A BF 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AF1 FE FB        	cp $fb
 435+ 9AF3 20 18        	jr nz,8F
 436+ 9AF5
 437+ 9AF5              ; ---------- ---------- ----------
 438+ 9AF5
 439+ 9AF5              4
 440+ 9AF5 CD FB 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AF8              ;	call Reinicio
 442+ 9AF8
 443+ 9AF8              ; ---------- ---------- ----------
 444+ 9AF8
 445+ 9AF8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AFA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9AFB
 448+ 9AFB              ;	ld hl,(Indice_Sprite_izq)
 449+ 9AFB              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9AFB
 451+ 9AFB CD 14 9B     	call DESPLZ_IZQ
 452+ 9AFE C1           	pop bc
 453+ 9AFF 10 F9        	djnz 5B
 454+ 9B01 2A B9 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9B04 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9B05 22 B9 89     	ld (Posicion_actual),hl
 457+ 9B08 CD 45 9C     	call Genera_coordenadas
 458+ 9B0B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9B0D
 460+ 9B0D              ; ---------- ---------- ----------
 461+ 9B0D
 462+ 9B0D              ; Movemos, no hay recolocación.
 463+ 9B0D
 464+ 9B0D 2A B9 89     8 ld hl,(Posicion_actual)
 465+ 9B10 CD 14 9B     	call DESPLZ_IZQ
 466+ 9B13 C9           2 ret
 467+ 9B14
 468+ 9B14              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9B14              ;
 470+ 9B14              ;	22/9/22
 471+ 9B14
 472+ 9B14              DESPLZ_IZQ
 473+ 9B14
 474+ 9B14 CD 23 9B     	call Desplaza_izquierda
 475+ 9B17 CD 6F 9B         call modifica_parametros_1er_DESPLZ
 476+ 9B1A CD 97 9B     	call Ciclo_completo_2
 477+ 9B1D 21 E5 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B20 CB BE        	res 7,(hl)
 479+ 9B22 C9           	ret
 480+ 9B23
 481+ 9B23              Desplaza_izquierda
 482+ 9B23
 483+ 9B23 3A CC 89     	ld a,(Vel_left)
 484+ 9B26 47           	ld b,a
 485+ 9B27 2A C7 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B2A 23           1 inc hl
 487+ 9B2B 23           	inc hl
 488+ 9B2C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B2E 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B31 CD 27 8D     	call Extrae_address
 491+ 9B34 22 BB 89     	ld (Puntero_objeto),hl
 492+ 9B37
 493+ 9B37              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B37
 495+ 9B37              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B37              ; Cuántos movimientos hemos hecho ??
 497+ 9B37              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B37
 499+ 9B37 2A C3 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B3A EB           	ex de,hl
 501+ 9B3B A7           	and a
 502+ 9B3C ED 52        	sbc hl,de
 503+ 9B3E CB 3D        	srl l
 504+ 9B40 3E 08        6 ld a,8
 505+ 9B42 95           	sub l
 506+ 9B43 30 1E        	jr nc,3F
 507+ 9B45
 508+ 9B45              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B45              ; B="0".
 510+ 9B45
 511+ 9B45 04           4 inc b
 512+ 9B46 3C           	inc a
 513+ 9B47 20 FC        	jr nz,4B
 514+ 9B49 78           	ld a,b
 515+ 9B4A 08           	ex af,af
 516+ 9B4B 2A C3 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B4E 23           5 inc hl
 518+ 9B4F 23           	inc hl
 519+ 9B50 10 FC        	djnz 5B
 520+ 9B52 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B55 CD 27 8D     	call Extrae_address
 522+ 9B58 22 BB 89     	ld (Puntero_objeto),hl
 523+ 9B5B
 524+ 9B5B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B5B              ; _(Posicion_actual).
 526+ 9B5B
 527+ 9B5B 21 B9 89     	ld hl,Posicion_actual
 528+ 9B5E 35           	dec (hl)
 529+ 9B5F 08           	ex af,af
 530+ 9B60 6F           	ld l,a
 531+ 9B61 18 DD        	jr 6B
 532+ 9B63
 533+ 9B63              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B63
 535+ 9B63 47           3 ld b,a
 536+ 9B64 2A C1 89     	ld hl,(Indice_Sprite_der)
 537+ 9B67 23           2 inc hl
 538+ 9B68 23           	inc hl
 539+ 9B69 10 FC        	djnz 2B
 540+ 9B6B 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B6E C9           8 ret
 542+ 9B6F
 543+ 9B6F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B6F              ;
 545+ 9B6F              ;	modifica_parametros_1er_DESPLZ
 546+ 9B6F              ;
 547+ 9B6F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B6F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B6F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B6F
 551+ 9B6F 3A BF 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B72 A7           	and a
 553+ 9B73 20 1E        	jr nz,1F
 554+ 9B75 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B76 32 BF 89         ld (CTRL_DESPLZ),a
 556+ 9B79 21 B8 89     	ld hl,Columns
 557+ 9B7C 34           	inc (hl)
 558+ 9B7D 3A CB 89     	ld a,(Cuad_objeto)
 559+ 9B80 E6 01        	and 1
 560+ 9B82 20 0F        	jr nz,1F
 561+ 9B84 2A B9 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B87 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B88 22 B9 89     	ld (Posicion_actual),hl
 564+ 9B8B CD 45 9C     	call Genera_coordenadas
 565+ 9B8E CD EA 9B     	call Dec_CTRL_DESPLZ
 566+ 9B91 18 03        	jr 2F
 567+ 9B93 CD EA 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B96 C9           2 ret
 569+ 9B97
 570+ 9B97              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B97
 572+ 9B97 3A BF 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B9A FE F7        	cp $f7
 574+ 9B9C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B9E 30 2C        	jr nc,3F
 576+ 9BA0
 577+ 9BA0              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9BA0
 579+ 9BA0 06 00        	ld b,0
 580+ 9BA2 04           4 inc b
 581+ 9BA3 3C           	inc a
 582+ 9BA4 FE F7        	cp $f7
 583+ 9BA6 20 FA        	jr nz,4B
 584+ 9BA8 3E FF        	ld a,$ff
 585+ 9BAA 90           	sub b
 586+ 9BAB 32 BF 89     	ld (CTRL_DESPLZ),a
 587+ 9BAE 18 1C        	jr 3F
 588+ 9BB0
 589+ 9BB0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9BB0
 591+ 9BB0 21 B8 89     1 ld hl,Columns
 592+ 9BB3 35           	dec (hl)
 593+ 9BB4 AF           	xor a
 594+ 9BB5 32 BF 89     	ld (CTRL_DESPLZ),a
 595+ 9BB8 3A CB 89     	ld a,(Cuad_objeto)
 596+ 9BBB E6 01        	and 1
 597+ 9BBD 28 0A        	jr z,2F
 598+ 9BBF 2A B9 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BC2 2B           	dec hl
 600+ 9BC3 22 B9 89     	ld (Posicion_actual),hl
 601+ 9BC6 CD 45 9C     	call Genera_coordenadas
 602+ 9BC9
 603+ 9BC9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BC9
 605+ 9BC9 CD 51 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BCC C9           3 ret
 607+ 9BCD
 608+ 9BCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BCD              ;
 610+ 9BCD              ;	19/10/22
 611+ 9BCD              ;
 612+ 9BCD              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BCD              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BCD
 615+ 9BCD 3A BD 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BD0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BD2 C9           	ret
 618+ 9BD3
 619+ 9BD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BD3              ;
 621+ 9BD3              ;	19/10/22
 622+ 9BD3              ;
 623+ 9BD3              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BD3              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BD3
 626+ 9BD3 3A BD 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BD6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BD8 C9           	ret
 629+ 9BD9
 630+ 9BD9              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BD9              ;
 632+ 9BD9              ;	24/7/22
 633+ 9BD9              ;
 634+ 9BD9              ;	Inc_CTRL_DESPLZ
 635+ 9BD9              ;
 636+ 9BD9              ;
 637+ 9BD9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BD9
 639+ 9BD9 21 BF 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BDC 3A CD 89     	ld a,(Vel_right)
 641+ 9BDF A7           	and a
 642+ 9BE0 28 06        	jr z,1F
 643+ 9BE2 47           	ld b,a
 644+ 9BE3 34           3 inc (hl)
 645+ 9BE4 10 FD        	djnz 3B
 646+ 9BE6 18 01        	jr 2F
 647+ 9BE8 34           1 inc (hl)
 648+ 9BE9 C9           2 ret
 649+ 9BEA
 650+ 9BEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BEA              ;
 652+ 9BEA              ;	5/2/23
 653+ 9BEA              ;
 654+ 9BEA              ;	Dec_CTRL_DESPLZ
 655+ 9BEA              ;
 656+ 9BEA              ;
 657+ 9BEA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BEA
 659+ 9BEA 21 BF 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BED 3A CC 89     	ld a,(Vel_left)
 661+ 9BF0 A7           	and a
 662+ 9BF1 28 06        	jr z,1F
 663+ 9BF3 47           	ld b,a
 664+ 9BF4 35           3 dec (hl)
 665+ 9BF5 10 FD        	djnz 3B
 666+ 9BF7 18 01        	jr 2F
 667+ 9BF9 35           1 dec (hl)
 668+ 9BFA C9           2 ret
 669+ 9BFB
 670+ 9BFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BFB
 672+ 9BFB 2A B9 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BFE 01 1F 00     	ld bc,31
 674+ 9C01 A7           	and a
 675+ 9C02 ED 4A        	adc hl,bc
 676+ 9C04 22 B9 89     	ld (Posicion_actual),hl
 677+ 9C07 21 E5 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9C0A CB C6        	set 0,(hl)
 679+ 9C0C C9           	ret
 680+ 9C0D
 681+ 9C0D              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9C0D
 683+ 9C0D 2A B9 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9C10 01 1F 00     	ld bc,31
 685+ 9C13 A7           	and a
 686+ 9C14 ED 42        	sbc hl,bc
 687+ 9C16 22 B9 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9C19 21 E5 89     	ld hl,Ctrl_0
 689+ 9C1C CB CE        	set 1,(hl)
 690+ 9C1E C9           	ret
 691+ 9C1F
 692+ 9C1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C1F
 694+ 9C1F 24           Reaparece_abajo inc h
 695+ 9C20 01 E0 17     	ld bc,$17e0
 696+ 9C23 A7           	and a
 697+ 9C24 ED 4A        	adc hl,bc
 698+ 9C26 22 B9 89     	ld (Posicion_actual),hl
 699+ 9C29 21 E5 89     	ld hl,Ctrl_0
 700+ 9C2C CB D6        	set 2,(hl)
 701+ 9C2E C9           	ret
 702+ 9C2F
 703+ 9C2F              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C2F
 705+ 9C2F 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C32 A7           	and a
 707+ 9C33 ED 42        	sbc hl,bc
 708+ 9C35 22 B9 89     	ld (Posicion_actual),hl
 709+ 9C38 21 E5 89     	ld hl,Ctrl_0
 710+ 9C3B CB DE        	set 3,(hl)
 711+ 9C3D C9           	ret
 712+ 9C3E
 713+ 9C3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C3E
 715+ 9C3E 2A C9 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C41 22 B9 89     	ld (Posicion_actual),hl
 717+ 9C44 C9           	ret
# file closed: Direcciones.asm
1242  9C45              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C45              ; ------------------------------------------------------------------------
   2+ 9C45              ;
   3+ 9C45              ;	02/04/23
   4+ 9C45              ;
   5+ 9C45              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C45              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C45              ;
   8+ 9C45              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C45              ;
  10+ 9C45              ;	Modifica: A,BC y DE.
  11+ 9C45
  12+ 9C45 C5           Genera_coordenadas push bc
  13+ 9C46 E5           	push hl
  14+ 9C47 D5           	push de
  15+ 9C48
  16+ 9C48 2A B9 89     	ld hl,(Posicion_actual)
  17+ 9C4B
  18+ 9C4B 7D           	ld a,l
  19+ 9C4C E6 1F        	and $1f
  20+ 9C4E 32 BD 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C51
  22+ 9C51 CD D9 98     	call calcula_tercio
  23+ 9C54 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C55
  25+ 9C55 1E 00        	ld e,0
  26+ 9C57 7D           	ld a,l
  27+ 9C58 E6 E0        	and $e0
  28+ 9C5A 28 01        	jr z,1F
  29+ 9C5C 04           	inc b
  30+ 9C5D
  31+ 9C5D 04           1 inc b
  32+ 9C5E 05           	dec b
  33+ 9C5F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C61              ;														; _ , salimos.
  35+ 9C61 1C           3 inc e
  36+ 9C62 D6 20        	sub 32
  37+ 9C64 20 FB        	jr nz,3B
  38+ 9C66 10 F5        	djnz 1B
  39+ 9C68
  40+ 9C68 7B           2 ld a,e
  41+ 9C69 32 BE 89     	ld (Coordenada_y),a
  42+ 9C6C
  43+ 9C6C D1           	pop de
  44+ 9C6D E1           	pop hl
  45+ 9C6E C1           	pop bc
  46+ 9C6F
  47+ 9C6F C9           	ret
  48+ 9C70
  49+ 9C70              ; ------------------------------------------------------------------------
  50+ 9C70              ;	28/05/23
  51+ 9C70              ;
  52+ 9C70              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C70              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C70              ;
  55+ 9C70              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C70              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C70              ;
  58+ 9C70              ;		DE="$120d"
  59+ 9C70              ;
  60+ 9C70              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C70              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C70              ;
  63+ 9C70              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C70
  65+ 9C70              ;	Modifica: A,BC y DE.
  66+ 9C70
  67+ 9C70
  68+ 9C70              Genera_coordenadas_disparo
  69+ 9C70
  70+ 9C70              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C70
  72+ 9C70 7D           	ld a,l
  73+ 9C71 E6 1F        	and $1f
  74+ 9C73 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C74 CD D9 98     	call calcula_tercio
  76+ 9C77 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C78 1E 00        	ld e,0
  78+ 9C7A 7D           	ld a,l
  79+ 9C7B E6 E0        	and $e0
  80+ 9C7D 28 01        	jr z,1F
  81+ 9C7F 04           	inc b
  82+ 9C80 1C           1 inc e
  83+ 9C81 D6 20        	sub 32
  84+ 9C83 20 FB        	jr nz,1B
  85+ 9C85 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C87 C9           	ret
  87+ 9C88
# file closed: Genera_coordenadas.asm
1243  9C88              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C88
   2+ 9C88
   3+ 9C88              ;   11/8/22
   4+ 9C88              ;
   5+ 9C88              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C88              ;
   7+ 9C88              ;   Mov_obj.asm
   8+ 9C88              ;
   9+ 9C88              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C88              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C88              ;
  12+ 9C88              ;   Codificación:
  13+ 9C88              ;
  14+ 9C88              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C88
  16+ 9C88              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C88
  18+ 9C88 02 40 00     Arriba db 2,%01000000,0
  19+ 9C8B 02 80 00     Abajo db 2,%10000000,0
  20+ 9C8E 02 20 00     Derecha db 2,%00100000,0
  21+ 9C91 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C94 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C98 60 42 60 40
  22+ 9C9C 63
  23+ 9C9D 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9CA1 22 A3 80 A0
  24+ 9CA5 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9CA9 84 A0 83 A0
  25+ 9CAD 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9CB1 80 A3 22 A0
  26+ 9CB5 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9CB9 40 60 42 60
  27+ 9CBD 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9CC1
  29+ 9CC1 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9CC5 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9CC9 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9CCD 84 00
  32+ 9CCF 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9CD3 84 00
  33+ 9CD5 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9CD9 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9CDD 1F 1F 1F 1F
  35+ 9CE1 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9CE5 1F 1F 1F 1F
  35+ 9CE9 1F
  36+ 9CEA 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CEE 2F 2F 2F 2F
  36+ 9CF2 2F 2F
  37+ 9CF4 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CF8 2F 2F 00
  38+ 9CFB
  39+ 9CFB              ; ----- ----- ----- ----- -----
  40+ 9CFB
  41+ 9CFB D9 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9CFD D5 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9CFF 91 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9D01 8E 9C        Indice_mov_Derecha defw Derecha
  45+ 9D03 8B 9C        Indice_mov_Abajo defw Abajo
  46+ 9D05 88 9C        Indice_mov_Arriba defw Arriba
  47+ 9D07 C5 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9D09 C9 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9D0B C1 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9D0D CF 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9D0F 94 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9D11              ; ----- ----- ----- ----- -----
  53+ 9D11
  54+ 9D11 3A EC 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9D14 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9D15 28 02            jr z,1F
  57+ 9D17 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9D19 3A ED 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9D1C C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9D1E 32 ED 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9D21              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9D21 2A EA 89         ld hl,(Puntero_mov)
  63+ 9D24 7E               ld a,(hl)
  64+ 9D25 32 EC 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9D28 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9D29 22 EA 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9D2C
  68+ 9D2C 3A EE 89     Decoder ld a,(Repetimos_db)
  69+ 9D2F A7               and a
  70+ 9D30 20 0C            jr nz,12F
  71+ 9D32 2A EA 89         ld hl,(Puntero_mov)
  72+ 9D35 7E               ld a,(hl)
  73+ 9D36 A7               and a
  74+ 9D37 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9D39 E6 0F            and $0f
  76+ 9D3B 32 EE 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9D3E              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9D3E 2A EA 89     12 ld hl,(Puntero_mov)
  79+ 9D41 CB 7E            bit 7,(hl)
  80+ 9D43 28 03            jr z,2F
  81+ 9D45 CD 1F 99         call Mov_down
  82+ 9D48 2A EA 89     2 ld hl, (Puntero_mov)
  83+ 9D4B CB 76            bit 6,(hl)
  84+ 9D4D 28 03            jr z,3F
  85+ 9D4F CD 50 99         call Mov_up
  86+ 9D52 2A EA 89     3 ld hl, (Puntero_mov)
  87+ 9D55 CB 6E            bit 5,(hl)
  88+ 9D57 28 03            jr z,4F
  89+ 9D59 CD 93 99         call Mov_right
  90+ 9D5C 2A EA 89     4 ld hl, (Puntero_mov)
  91+ 9D5F CB 66            bit 4,(hl)
  92+ 9D61 28 03            jr z,5F
  93+ 9D63 CD B1 9A         call Mov_left
  94+ 9D66
  95+ 9D66              ; ---------- --------- --------- ---------- ----------
  96+ 9D66
  97+ 9D66 3A EE 89     5 ld a,(Repetimos_db)
  98+ 9D69 A7               and a
  99+ 9D6A 28 07            jr z,6F
 100+ 9D6C 3D               dec a
 101+ 9D6D 32 EE 89         ld (Repetimos_db),a
 102+ 9D70 28 01            jr z,6f
 103+ 9D72 C9           11 ret
 104+ 9D73 21 EC 89     6 ld hl,Contador_db_mov
 105+ 9D76 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D77 2A EA 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D7A 23               inc hl
 108+ 9D7B 22 EA 89         ld (Puntero_mov),hl
 109+ 9D7E 18 F2            jr 11B
 110+ 9D80 2A E8 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D83 3A ED 89         ld a,(Incrementa_puntero)
 112+ 9D86 47               ld b,a
 113+ 9D87 23           8 inc hl
 114+ 9D88 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D8A 5E               ld e,(hl)
 116+ 9D8B 23               inc hl
 117+ 9D8C 56               ld d,(hl)
 118+ 9D8D EB               ex de,hl
 119+ 9D8E 22 EA 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D91 18 DF            jr 11B
 121+ 9D93
 122+ 9D93              ; ---------- --------- --------- ---------- ----------
 123+ 9D93              ;
 124+ 9D93              ;   11/8/22
 125+ 9D93              ;
 126+ 9D93              ;   Prepara_Puntero_mov
 127+ 9D93
 128+ 9D93 E5           Prepara_Puntero_mov push hl
 129+ 9D94 D5               push de
 130+ 9D95 2A E8 89         ld hl,(Puntero_indice_mov)
 131+ 9D98 5E               ld e,(hl)
 132+ 9D99 23               inc hl
 133+ 9D9A 56               ld d,(hl)
 134+ 9D9B EB               ex de,hl
 135+ 9D9C 22 EA 89         ld (Puntero_mov),hl
 136+ 9D9F D1               pop de
 137+ 9DA0 E1               pop hl
 138+ 9DA1 C9               ret
 139+ 9DA2
 140+ 9DA2              ; ---------- --------- --------- ---------- ----------
 141+ 9DA2              ;
 142+ 9DA2              ;   11/8/22
 143+ 9DA2              ;
 144+ 9DA2              ;   Reinicia_el_movimiento
 145+ 9DA2
 146+ 9DA2 CD 93 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9DA5 AF               xor a
 148+ 9DA6 32 EC 89         ld (Contador_db_mov),a
 149+ 9DA9 32 ED 89         ld (Incrementa_puntero),a
 150+ 9DAC C3 11 9D         jp Movimiento
 151+ 9DAF C9               ret
 152+ 9DB0              ; ---------- --------- --------- ---------- ----------
 153+ 9DB0
 154+ 9DB0
 155+ 9DB0
 156+ 9DB0
 157+ 9DB0
 158+ 9DB0
 159+ 9DB0
 160+ 9DB0
 161+ 9DB0
 162+ 9DB0
 163+ 9DB0
 164+ 9DB0
 165+ 9DB0
 166+ 9DB0
 167+ 9DB0
 168+ 9DB0
 169+ 9DB0
 170+ 9DB0
# file closed: Patrones_de_mov.asm
1244  9DB0              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9DB0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9DB0              ;
   3+ 9DB0              ;	3/1/23
   4+ 9DB0              ;
   5+ 9DB0              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9DB0
   7+ 9DB0              ;	ADC HL,SP	LD (addr),SP
   8+ 9DB0              ;	ADD HL,SP	LD SP,(addr)
   9+ 9DB0              ;	ADD IX,SP	LD SP,nn
  10+ 9DB0              ; 	ADD IY,SP	LD SP,HL
  11+ 9DB0              ;				LD SP,IX
  12+ 9DB0              ;	DEC SP		LD SP,IY
  13+ 9DB0
  14+ 9DB0              ;	EX (SP),HL
  15+ 9DB0              ;	EX (SP),IX
  16+ 9DB0              ;	EX (SP),IY
  17+ 9DB0
  18+ 9DB0              ;	INC SP
  19+ 9DB0
  20+ 9DB0
  21+ 9DB0                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 07 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A F5 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 0B 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 0D 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 0B 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 07 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1245  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1246  7FE6
1247  7FE6              	SAVESNA "Pruebas.sna", START
1248  7FE6
1249  7FE6
1250  7FE6
1251  7FE6
# file closed: Banco_de_pruebas.asm
