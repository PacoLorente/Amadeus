# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 85 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD B3 8B     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD C3 8B     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 8F 88     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B 85 88  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 105  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC B8 9A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 CB 85        	defw Caja_2
 110+ 8574 DE 85        	defw Caja_3
 111+ 8576 F1 85        	defw Caja_4
 112+ 8578 04 86        	defw Caja_5
 113+ 857A 17 86        	defw Caja_6
 114+ 857C 2A 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 19 bytes !!!
 155+ 85B8
 156+ 85B8 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 85BB 00           	db %00000000										; (Attr).
 158+ 85BC              ;	db 0												; (Cuad_objeto).
 159+ 85BC 00           	db 0												; (Impacto).
 160+ 85BD 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 85C3 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 85C5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 85C7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 85C9 00           	db 0												; (Ctrl_0).
 165+ 85CA 00           	db 0												; (Ctrl_2).
 166+ 85CB
 167+ 85CB              ; ---------- ---------- ---------- ---------- ----------
 168+ 85CB
 169+ 85CB 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 85CE 00           	db %00000000										; (Attr).
 171+ 85CF              ;	db 0												; (Cuad_objeto).
 172+ 85CF 00           	db 0												; (Impacto).
 173+ 85D0 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 85D6 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 85D8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 85DA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 85DC 00           	db 0												; (Ctrl_0).
 178+ 85DD 00           	db 0												; (Ctrl_2).
 179+ 85DE
 180+ 85DE              ; ---------- ---------- ---------- ---------- ----------
 181+ 85DE
 182+ 85DE 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 85E1 00           	db %00000000										; (Attr).
 184+ 85E2              ;	db 0												; (Cuad_objeto).
 185+ 85E2 00           	db 0												; (Impacto).
 186+ 85E3 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 85E9 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 85EB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 85ED 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 85EF 00           	db 0												; (Ctrl_0).
 191+ 85F0 00           	db 0												; (Ctrl_2).
 192+ 85F1
 193+ 85F1              ; ---------- ---------- ---------- ---------- ----------
 194+ 85F1
 195+ 85F1 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 85F4 00           	db %00000000										; (Attr).
 197+ 85F5              ;	db 0												; (Cuad_objeto).
 198+ 85F5 00           	db 0												; (Impacto).
 199+ 85F6 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 85FC 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 85FE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8600 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8602 00           	db 0												; (Ctrl_0).
 204+ 8603 00           	db 0												; (Ctrl_2).
 205+ 8604
 206+ 8604              ; ---------- ---------- ---------- ---------- ----------
 207+ 8604
 208+ 8604 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8607 00           	db %00000000										; (Attr).
 210+ 8608              ;	db 0												; (Cuad_objeto).
 211+ 8608 00           	db 0												; (Impacto).
 212+ 8609 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 860F 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8611 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8613 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8615 00           	db 0												; (Ctrl_0).
 217+ 8616 00           	db 0												; (Ctrl_2).
 218+ 8617
 219+ 8617              ; ---------- ---------- ---------- ---------- ----------
 220+ 8617
 221+ 8617 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 861A 00           	db %00000000										; (Attr).
 223+ 861B              ;	db 0												; (Cuad_objeto).
 224+ 861B 00           	db 0												; (Impacto).
 225+ 861C 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8622 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8624 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8626 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8628 00           	db 0												; (Ctrl_0).
 230+ 8629 00           	db 0												; (Ctrl_2).
 231+ 862A
 232+ 862A              ; ---------- ---------- ---------- ---------- ----------
 233+ 862A
 234+ 862A 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 862D 00           	db %00000000										; (Attr).
 236+ 862E              ;	db 0												; (Cuad_objeto).
 237+ 862E 00           	db 0												; (Impacto).
 238+ 862F 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8635 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8637 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 8639 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 863B 00           	db 0												; (Ctrl_0).
 243+ 863C 00           	db 0												; (Ctrl_2).
 244+ 863D
 245+ 863D              ; -------------------------------------------------------------------------------------
 246+ 863D              ;
 247+ 863D              ;	11/1/24
 248+ 863D              ;
 249+ 863D              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 863D              ;
 251+ 863D              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 863D              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 863D              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 863D              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 863D
 256+ 863D              Indice_de_definiciones_de_entidades
 257+ 863D
 258+ 863D 41 86        	defw Entidad_1
 259+ 863F 4E 86        	defw Entidad_2
 260+ 8641
 261+ 8641              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8641
 263+ 8641              ;	BADSAT, (Satélite malvado).
 264+ 8641
 265+ 8641 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8644 04           	db %00000100										; (Attr).
 267+ 8645 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8647 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 8649 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 864B 01           	db 1												; (Cuad_objeto).
 271+ 864C 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 864E
 273+ 864E 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8651 02           	db %00000010										; (Attr).
 275+ 8652 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8654 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8656 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8658 01           	db 1												; (Cuad_objeto).
 279+ 8659 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 865B
# file closed: Cajas_y_disparos.asm
 106  865B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 865B              ; 19/1/24
   2+ 865B
   3+ 865B              Indice_de_niveles
   4+ 865B
   5+ 865B 63 86        	defw Nivel_1
   6+ 865D 6D 86        	defw Nivel_2
   7+ 865F
   8+ 865F              ;	...
   9+ 865F              ;	...
  10+ 865F              ;	+ Niveles ...
  11+ 865F
  12+ 865F 00 00        	defw 0
  13+ 8661 00 00        	defw 0
  14+ 8663
  15+ 8663 05           Nivel_1 db 5									; Nº de entidades.
  16+ 8664 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8668 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 866C 01
  18+ 866D
  19+ 866D 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 866E 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8672 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8676 01 02
  22+ 8678 02 01 01 01  	db 2,1,1,1,1,2
  22+ 867C 01 02
  23+ 867E
  24+ 867E              ;---------------------------------------------------------------------------------------------------------------
  25+ 867E              ;
  26+ 867E              ;   19/1/24
  27+ 867E              ;
  28+ 867E              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 867E              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 867E              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 867E              ;	_ de la 1ª entidad del Nivel.
  32+ 867E              ;
  33+ 867E              ;	MODIFICA: HL,DE y A.
  34+ 867E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 867E
  36+ 867E              Inicializa_Nivel
  37+ 867E
  38+ 867E 2A AE 88     	ld hl,(Puntero_indice_NIVELES)
  39+ 8681 CD 7F 8A     	call Extrae_address
  40+ 8684 7E           	ld a,(hl)
  41+ 8685 32 79 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 8688 23           	inc hl
  43+ 8689 CD 93 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 868C 22 B0 88     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 868F CD 9C 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 8692 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 8693
  48+ 8693              ; ----------------------
  49+ 8693
  50+ 8693 11 58 88     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8696 01 04 00     	ld bc,4
  52+ 8699 ED B0        	ldir
  53+ 869B C9           	ret
  54+ 869C
  55+ 869C 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 869D CD AA 87         call Calcula_salto_en_BC
  57+ 86A0 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 86A3 A7               and a
  59+ 86A4 ED 4A            adc hl,bc
  60+ 86A6 CD 7F 8A         call Extrae_address
  61+ 86A9 22 64 88         ld (Puntero_indice_mov),hl
  62+ 86AC C9               ret
  63+ 86AD
  64+ 86AD              ;---------------------------------------------------------------------------------------------------------------
  65+ 86AD              ;
  66+ 86AD              ;   5/1/24
  67+ 86AD              ;
  68+ 86AD              ;	Destruye A,BC,HL,DE
  69+ 86AD
  70+ 86AD              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 86AD              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 86AD
  73+ 86AD              Inicia_Entidades
  74+ 86AD
  75+ 86AD              ; Preparamos los punteros de las cajas de entidades:
  76+ 86AD
  77+ 86AD CD E7 89     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 86B0              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 86B0 CD 11 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 86B3
  81+ 86B3 2A B0 88     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 86B6
  83+ 86B6 22 B0 88     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 86B9
  85+ 86B9 CD 58 87     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 86BC
  87+ 86BC 2A B0 88     	ld hl,(Datos_de_nivel)
  88+ 86BF
  89+ 86BF              ; En este punto:
  90+ 86BF              ;
  91+ 86BF              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 86BF              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 86BF
  94+ 86BF C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 86C0
  96+ 86C0 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 86C1 CD AA 87     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 86C4
  99+ 86C4 21 3D 86     	ld hl,Indice_de_definiciones_de_entidades
 100+ 86C7 CD B2 87     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 86CA
 102+ 86CA CD BC 87     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 86CD
 104+ 86CD              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 86CD
 106+ 86CD CD 7A 87     	call Busca_mov_masticados_segun_tipo
 107+ 86D0
 108+ 86D0 A7           	and a
 109+ 86D1 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 86D3
 111+ 86D3              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 86D3
 113+ 86D3              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 86D3              ;	_ de este tipo de entidad.
 115+ 86D3
 116+ 86D3 CD C5 9D     	call Situa_en_contador_general_de_mov_masticados
 117+ 86D6 CD D2 9D     	call Transfiere_datos_de_contadores
 118+ 86D9
 119+ 86D9 18 06        	jr 4F
 120+ 86DB
 121+ 86DB CD 41 89     3 call Construye_movimientos_masticados_entidad
 122+ 86DE
 123+ 86DE              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 124+ 86DE              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 125+ 86DE              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 126+ 86DE              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 127+ 86DE              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 128+ 86DE
 129+ 86DE CD 38 87     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 130+ 86E1              ;																; _ Mov_masticados ya generados.
 131+ 86E1 CD 13 87     4 call Guarda_foto_de_mov_masticado
 132+ 86E4
 133+ 86E4              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 134+ 86E4
 135+ 86E4 2A 4B 88     	ld hl,(Puntero_de_impresion)
 136+ 86E7 CD 65 9A     	call Genera_coordenadas
 137+ 86EA CD E3 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 138+ 86ED CD 1D 87     	call Limpiamos_bandeja_DRAW
 139+ 86F0 CD E6 8A     	call Incrementa_punteros_de_cajas
 140+ 86F3
 141+ 86F3              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 142+ 86F3              ; _ entidad del Nivel.
 143+ 86F3
 144+ 86F3 3A 90 88     	ld a,(Ctrl_4)
 145+ 86F6 E6 F0        	and $f0
 146+ 86F8 32 90 88     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 147+ 86FB
 148+ 86FB              ; Siguiente entidad del Nivel.
 149+ 86FB
 150+ 86FB 2A B0 88     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 151+ 86FE 23           	inc hl 														; _ entidad del Nivel.
 152+ 86FF
 153+ 86FF C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 154+ 8700 10 B4        	djnz 2B
 155+ 8702
 156+ 8702 C9           	ret
 157+ 8703
 158+ 8703              ; ---------------------------------------------------------------------
 159+ 8703              ;
 160+ 8703              ;	30/01/24
 161+ 8703
 162+ 8703
 163+ 8703              Store_Restore_cajas
 164+ 8703
 165+ 8703              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 166+ 8703
 167+ 8703 2A 4B 88     	ld hl,(Puntero_de_impresion)
 168+ 8706 CD 65 9A     	call Genera_coordenadas
 169+ 8709 CD E3 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 170+ 870C CD 1D 87     	call Limpiamos_bandeja_DRAW
 171+ 870F
 172+ 870F              ; 	Entidad_sospechosa. 20/4/23
 173+ 870F
 174+ 870F              ;	ld a,(Impacto)
 175+ 870F              ;	and a
 176+ 870F              ;	jr z,1F
 177+ 870F
 178+ 870F              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 179+ 870F              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 180+ 870F              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 181+ 870F              ;	adc hl,bc 											; _ "0" más adelante.
 182+ 870F              ;	ld (Entidad_sospechosa_de_colision),hl
 183+ 870F
 184+ 870F
 185+ 870F              ;1 ld hl,(Puntero_restore_caja)
 186+ 870F              ;	ld a,(hl)
 187+ 870F              ;	and a
 188+ 870F              ;	push af
 189+ 870F              ;	jr z,2F
 190+ 870F
 191+ 870F              ;	di
 192+ 870F              ;	ld de,Bandeja_DRAW
 193+ 870F              ;	ld bc,42
 194+ 870F              ;	ldir
 195+ 870F              ;	ei
 196+ 870F
 197+ 870F CD E6 8A     2 call Incrementa_punteros_de_cajas
 198+ 8712 C9           	ret
 199+ 8713
 200+ 8713
 201+ 8713              ; ---------------------------------------------------------------------
 202+ 8713              ;
 203+ 8713              ;	29/01/24
 204+ 8713
 205+ 8713 CD 96 89     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 206+ 8716 CD 16 71     	call Guarda_foto_registros
 207+ 8719              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 208+ 8719              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 209+ 8719              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 210+ 8719              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 211+ 8719
 212+ 8719 CD 28 87     	call Decrementa_Contador_de_mov_masticados
 213+ 871C C9           	ret
 214+ 871D
 215+ 871D              ; ---------------------------------------------------------------------
 216+ 871D              ;
 217+ 871D              ;	25/01/24
 218+ 871D
 219+ 871D 21 2E 88     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 220+ 8720 06 2A        	ld b,42
 221+ 8722 AF           	xor a
 222+ 8723
 223+ 8723 77           1 ld (hl),a
 224+ 8724 23           	inc hl
 225+ 8725 10 FC        	djnz 1B
 226+ 8727
 227+ 8727 C9           	ret
 228+ 8728
 229+ 8728              ; ---------------------------------------------------------------------
 230+ 8728              ;
 231+ 8728              ;	22/01/24
 232+ 8728
 233+ 8728 2A 4F 88     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 234+ 872B 2B           	dec hl
 235+ 872C
 236+ 872C 24           	inc h
 237+ 872D 25           	dec h
 238+ 872E 20 04        	jr nz,1F
 239+ 8730
 240+ 8730 7D           	ld a,l
 241+ 8731 A7           	and a
 242+ 8732 28 FE        	jr z,$
 243+ 8734
 244+ 8734 22 4F 88     1 ld (Contador_de_mov_masticados),hl
 245+ 8737 C9           	ret
 246+ 8738
 247+ 8738              ; ---------------------------------------------------------------------
 248+ 8738              ;
 249+ 8738              ;	22/01/24
 250+ 8738
 251+ 8738 21 90 88     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 252+ 873B CB 46        	bit 0,(hl)
 253+ 873D 20 0D        	jr nz,1F
 254+ 873F CB 4E        	bit 1,(hl)
 255+ 8741 20 0C        	jr nz,2F
 256+ 8743 CB 56        	bit 2,(hl)
 257+ 8745 20 0B        	jr nz,3F
 258+ 8747 CB 5E        	bit 3,(hl)
 259+ 8749 20 0A        	jr nz,4F
 260+ 874B C9           	ret
 261+ 874C
 262+ 874C CB E6        1 set 4,(hl)
 263+ 874E C9           	ret
 264+ 874F CB EE        2 set 5,(hl)
 265+ 8751 C9           	ret
 266+ 8752 CB F6        3 set 6,(hl)
 267+ 8754 C9           	ret
 268+ 8755 CB FE        4 set 7,(hl)
 269+ 8757 C9           	ret
 270+ 8758
 271+ 8758              ; ---------------------------------------------------------------------
 272+ 8758              ;
 273+ 8758              ;	23/01/24
 274+ 8758              ;
 275+ 8758              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 276+ 8758              ;
 277+ 8758              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 278+ 8758              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 279+ 8758              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 280+ 8758              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 281+ 8758
 282+ 8758              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 283+ 8758
 284+ 8758 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 285+ 8759 3D           	dec a
 286+ 875A 20 06        	jr nz,1F
 287+ 875C
 288+ 875C              ; --- Tipo_1
 289+ 875C
 290+ 875C 21 90 88     	ld hl,Ctrl_4
 291+ 875F CB C6        	set 0,(hl)
 292+ 8761 C9           	ret
 293+ 8762
 294+ 8762 3D           1 dec a
 295+ 8763 20 06        	jr nz,2F
 296+ 8765
 297+ 8765              ; --- Tipo_2
 298+ 8765
 299+ 8765 21 90 88     	ld hl,Ctrl_4
 300+ 8768 CB CE        	set 1,(hl)
 301+ 876A C9           	ret
 302+ 876B
 303+ 876B 3D           2 dec a
 304+ 876C 20 06        	jr nz,3F
 305+ 876E
 306+ 876E              ; --- Tipo_3
 307+ 876E
 308+ 876E 21 90 88     	ld hl,Ctrl_4
 309+ 8771 CB D6        	set 2,(hl)
 310+ 8773 C9           	ret
 311+ 8774
 312+ 8774              ; --- Tipo_3
 313+ 8774
 314+ 8774 21 90 88     3 ld hl,Ctrl_4
 315+ 8777 CB D6        	set 2,(hl)
 316+ 8779 C9           	ret
 317+ 877A
 318+ 877A              ; ---------------------------------------------------------------------
 319+ 877A              ;
 320+ 877A              ;	22/01/24
 321+ 877A
 322+ 877A 21 90 88     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 323+ 877D CB 46        	bit 0,(hl)
 324+ 877F 20 0E        	jr nz,1F
 325+ 8781
 326+ 8781 CB 4E        	bit 1,(hl)
 327+ 8783 20 10        	jr nz,2F
 328+ 8785
 329+ 8785 CB 56        	bit 2,(hl)
 330+ 8787 20 12        	jr nz,3F
 331+ 8789
 332+ 8789 CB 5E        	bit 3,(hl)
 333+ 878B 20 14        	jr nz,4F
 334+ 878D 18 19        	jr 6F
 335+ 878F
 336+ 878F              ; Entidad_de_Tipo_1.
 337+ 878F
 338+ 878F CB 66        1 bit 4,(hl)
 339+ 8791 28 15        	jr z,6F
 340+ 8793 18 10        	jr 5F
 341+ 8795
 342+ 8795              ; Entidad_de_Tipo_2.
 343+ 8795
 344+ 8795 CB 6E        2 bit 5,(hl)
 345+ 8797 28 0F        	jr z,6F
 346+ 8799 18 0A        	jr 5F
 347+ 879B
 348+ 879B              ; Entidad_de_Tipo_3.
 349+ 879B
 350+ 879B CB 76        3 bit 6,(hl)
 351+ 879D 28 09        	jr z,6F
 352+ 879F 18 04        	jr 5F
 353+ 87A1
 354+ 87A1              ; Entidad_de_Tipo_4.
 355+ 87A1
 356+ 87A1 CB 7E        4 bit 7,(hl)
 357+ 87A3 28 03        	jr z,6F
 358+ 87A5
 359+ 87A5              ; Esta entidad TIENE MOV_MASTICADOS.
 360+ 87A5
 361+ 87A5 AF           5 xor a
 362+ 87A6 3C           	inc a
 363+ 87A7 C9           	ret
 364+ 87A8
 365+ 87A8              ; Esta entidad NO TIENE MOV_MASTICADOS.
 366+ 87A8
 367+ 87A8 AF           6 xor a
 368+ 87A9 C9           	ret
 369+ 87AA
 370+ 87AA              ;	------------------------------------------------------------------------------------
 371+ 87AA              ;
 372+ 87AA              ;	12/01/24
 373+ 87AA              ;
 374+ 87AA              ;	INPUTS:	A contiene el (Tipo) de entidad.
 375+ 87AA              ;
 376+ 87AA              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 377+ 87AA              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 378+ 87AA
 379+ 87AA CB 27        Calcula_salto_en_BC sla a
 380+ 87AC D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 381+ 87AE 4F           	ld c,a
 382+ 87AF 06 00        	ld b,0
 383+ 87B1 C9           	ret
 384+ 87B2
 385+ 87B2              ; ------------------------------------------------------------------
 386+ 87B2              ;
 387+ 87B2              ;	19/1/24
 388+ 87B2              ;
 389+ 87B2              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 390+ 87B2              ;	Actualiza (Datos_de_entidad) con esa dirección.
 391+ 87B2
 392+ 87B2 A7           Situa_en_datos_de_definicion and a
 393+ 87B3 ED 4A        	adc hl,bc
 394+ 87B5 CD 7F 8A     	call Extrae_address
 395+ 87B8 22 7F 88         ld (Datos_de_entidad),hl
 396+ 87BB C9           	ret
 397+ 87BC
 398+ 87BC              ; ------------------------------------------------------------------
 399+ 87BC
 400+ 87BC              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 401+ 87BC              ; 	inc de
 402+ 87BC              ; 	inc de
 403+ 87BC              ; 	ex de,hl
 404+ 87BC              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 405+ 87BC              ; 	ret
 406+ 87BC
 407+ 87BC              ; ----------------------------------------------------------------------------------------------------------
 408+ 87BC              ;
 409+ 87BC              ;	31/1/24
 410+ 87BC              ;
 411+ 87BC              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 412+ 87BC              ;	_ de entidad.
 413+ 87BC              ;
 414+ 87BC              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 415+ 87BC              ;
 416+ 87BC              ;
 417+ 87BC              ;	MODIFICA: HL,DE y BC
 418+ 87BC
 419+ 87BC
 420+ 87BC              Definicion_de_entidad_a_bandeja_DRAW
 421+ 87BC
 422+ 87BC 11 2E 88     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 423+ 87BF 01 03 00     	ld bc,3
 424+ 87C2 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 425+ 87C4              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 426+ 87C4 11 38 88     	ld de,Attr									; DE en (Attr).
 427+ 87C7 01 05 00     	ld bc,5
 428+ 87CA ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 429+ 87CC              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 430+ 87CC 11 41 88     	ld de,Posicion_inicio
 431+ 87CF 01 03 00     	ld bc,3
 432+ 87D2 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 433+ 87D4              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 434+ 87D4 11 4D 88     	ld de,Puntero_de_almacen_de_mov_masticados
 435+ 87D7 01 02 00     	ld bc,2
 436+ 87DA ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 437+ 87DC
 438+ 87DC 11 57 88     	ld de,Frames_explosion
 439+ 87DF 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 440+ 87E1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 441+ 87E2
 442+ 87E2 C9           	ret
 443+ 87E3
 444+ 87E3              ; ----------------------------------------------------------------------------------------------------------
 445+ 87E3              ;
 446+ 87E3              ;	22/01/24
 447+ 87E3              ;
 448+ 87E3              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 449+ 87E3              ;
 450+ 87E3              ;	Las cajas contienen entidades iniciadas:
 451+ 87E3              ;
 452+ 87E3              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 453+ 87E3              ;
 454+ 87E3              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 455+ 87E3              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 456+ 87E3              ;
 457+ 87E3              ;	MODIFICA: HL,DE y BC
 458+ 87E3
 459+ 87E3 21 2E 88     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 460+ 87E6 ED 5B 73 88  	ld de,(Puntero_store_caja)
 461+ 87EA 7E           	ld a,(hl)
 462+ 87EB 12           	ld (de),a
 463+ 87EC 13           	inc de 													; (Tipo).
 464+ 87ED
 465+ 87ED 21 35 88     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 466+ 87F0 01 02 00     	ld bc,2
 467+ 87F3 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 468+ 87F5              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 469+ 87F5 23           	inc hl
 470+ 87F6 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 471+ 87F7 12           	ld (de),a
 472+ 87F8 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 473+ 87F9
 474+ 87F9 21 44 88     	ld hl,Impacto
 475+ 87FC 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 476+ 87FD 12           	ld (de),a
 477+ 87FE 13           	inc de 													; (Impacto), volcado a la caja.
 478+ 87FF              ;															; DE situado ahora en (Variables_de_borrado).
 479+ 87FF 23           	inc hl
 480+ 8800 01 06 00     	ld bc,6
 481+ 8803 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 482+ 8805              ; 															; DE situado ahora en (Puntero_de_impresión).
 483+ 8805 01 07 00     	ld bc,7
 484+ 8808 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 485+ 880A              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 486+ 880A              ;															; HL apunta ahora a (Columnas).
 487+ 880A 21 56 88     	ld hl,Ctrl_2
 488+ 880D 7E           	ld a,(hl)
 489+ 880E 12           	ld (de),a 												; Volcamos (Ctrl_2).
 490+ 880F 13           	inc de
 491+ 8810
 492+ 8810 C9           	ret
 493+ 8811
 494+ 8811              ;---------------------------------------------------------------------------------------------------------------
 495+ 8811              ;
 496+ 8811              ;	5/1/24
 497+ 8811              ;
 498+ 8811              ;	INICIALIZA (Numero_parcial_de_entidades).
 499+ 8811              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 500+ 8811              ;
 501+ 8811              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 502+ 8811              ;
 503+ 8811              ;	(Numero_parcial_de_entidades)="7".
 504+ 8811              ;
 505+ 8811              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 506+ 8811              ;
 507+ 8811              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 508+ 8811              ;
 509+ 8811              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 510+ 8811              ;	MODIFICA: A y B.
 511+ 8811              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 512+ 8811
 513+ 8811              Inicializa_Numero_parcial_de_entidades
 514+ 8811
 515+ 8811              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 516+ 8811
 517+ 8811 3A 79 88     	ld a,(Numero_de_entidades)
 518+ 8814 A7           	and a
 519+ 8815
 520+ 8815              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 521+ 8815              ;	jr z,$
 522+ 8815              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 523+ 8815
 524+ 8815 20 03        	jr nz,3F
 525+ 8817
 526+ 8817              ; ---------- ---------- ----------
 527+ 8817
 528+ 8817              ;! RESET para pruebas. Omitir esta línea en modo normal.
 529+ 8817              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 530+ 8817
 531+ 8817 CD 7E 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 532+ 881A
 533+ 881A              ; ---------- ---------- ----------
 534+ 881A
 535+ 881A 3A 79 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 536+ 881D FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 537+ 881F 38 08        	jr c,1F
 538+ 8821
 539+ 8821              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 540+ 8821              ; Actualizamos variables.
 541+ 8821
 542+ 8821 3E 07        	ld a,7
 543+ 8823 32 7A 88     	ld (Numero_parcial_de_entidades),a
 544+ 8826 47           	ld b,a
 545+ 8827 18 04        	jr 2F
 546+ 8829
 547+ 8829              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 548+ 8829              ; (Numero_de_entidades)="0".
 549+ 8829
 550+ 8829 32 7A 88     1 ld (Numero_parcial_de_entidades),a
 551+ 882C 47           	ld b,a
 552+ 882D C9           2 ret
# file closed: Niveles.asm
 107  882E
 108  882E              ; ******************************************************************************************************************************************************************************************
 109  882E              ; Constantes.
 110  882E              ; ******************************************************************************************************************************************************************************************
 111  882E              ;
 112  882E              ; 25/12/23
 113  882E
 114  882E              ;
 115  882E              ; Constantes.
 116  882E              ;
 117  882E
 118  882E              Sprite_vacio equ $eae0
 119  882E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  882E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  882E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  882E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  882E
 124  882E              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  882E              ;														;
 126  882E              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  882E
 128  882E              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  882E              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  882E              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  882E              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  882E              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  882E
 134  882E              ;														; 55 Bytes.
 135  882E              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 136  882E              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 137  882E
 138  882E              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  882E
 140  882E              ; ******************************************************************************************************************************************************************************************
 141  882E              ; Variables.
 142  882E              ; ******************************************************************************************************************************************************************************************
 143  882E              ;
 144  882E              ; 18/01/24
 145  882E              ;
 146  882E              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  882E              ;
 148  882E
 149  882E              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  882E
 151  882E 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  882F              ;															- Patrón de movimiento.
 153  882F              ;															- Aspecto
 154  882F 00           Filas db 0												; Filas. [DRAW]
 155  8830 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  8831 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8833 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8835 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8836 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8837
 161  8837              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8837
 163  8837 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8838              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8838              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8838 00           Attr db 0												; Atributos de la entidad:
 167  8839
 168  8839              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8839              ;
 170  8839              ;	COLORES: 0 ..... NEGRO
 171  8839              ;    		 1 ..... AZUL
 172  8839              ; 			 2 ..... ROJO
 173  8839              ;			 3 ..... MAGENTA
 174  8839              ; 			 4 ..... VERDE
 175  8839              ; 			 5 ..... CIAN
 176  8839              ;			 6 ..... AMARILLO
 177  8839              ; 			 7 ..... BLANCO
 178  8839
 179  8839 00 00        Indice_Sprite_der defw 0
 180  883B 00 00        Indice_Sprite_izq defw 0
 181  883D 00 00        Puntero_DESPLZ_der defw 0
 182  883F 00 00        Puntero_DESPLZ_izq defw 0
 183  8841
 184  8841 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8843 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8844
 187  8844              ; Variables de objeto. (Características).
 188  8844
 189  8844 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8845              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8845              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8845 00 00 00...  Variables_de_borrado ds 6
 193  884B
 194  884B 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  884D              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  884D
 197  884D 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  884F
 199  884F              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  884F              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  884F
 202  884F 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  8851              ;														; _palabras que componen el "movimiento_masticado".
 204  8851
 205  8851              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  8851
 207  8851 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8852              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8852              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8852              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8852              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8852              ;
 213  8852              ; 														DESCRIPCIÖN:
 214  8852              ;
 215  8852              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8852              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8852              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8852              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8852              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8852              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8852              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8852              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8852              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8852              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8852              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8852              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8852              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8852              ;
 229  8852              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8852              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8852              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8852
 233  8852              ; Variables de funcionamiento. [DRAW].
 234  8852
 235  8852 00           Columnas db 0
 236  8853 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8855              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8855 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8856
 240  8856              ; variables de control general.
 241  8856
 242  8856 00           Ctrl_2 db 0
 243  8857              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8857              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8857              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8857              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8857              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8857              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8857              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8857              ;
 251  8857              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8857              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8857              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8857              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8857              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8857              ;														BIT 4, ???
 257  8857              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8857
 259  8857 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  8858
 261  8858              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  8858
 263  8858              ;					         		---------;      ;---------
 264  8858
 265  8858              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  8858
 267  8858              Perfiles_de_velocidad
 268  8858
 269  8858 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  8859 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  885A 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  885B 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  885C
 274  885C              ; Contadores de 16 bits.
 275  885C
 276  885C 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  885E 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  8860 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8862 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8864
 281  8864              ; Movimiento. ------------------------------------------------------------------------------------------------------
 282  8864
 283  8864 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 284  8866 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 285  8868 00 00        Puntero_indice_mov_bucle defw 0							;
 286  886A              ;
 287  886A              ;
 288  886A 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 289  886B              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 290  886B              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 291  886B 00           Incrementa_puntero_backup db 0
 292  886C 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 293  886D              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 294  886D 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 295  886E 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 296  886F 00           Cola_de_desplazamiento db 0								; Este byte indica:
 297  8870              ;
 298  8870              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 299  8870              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 300  8870              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 301  8870              ;
 302  8870              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 303  8870              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 304  8870              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 305  8870              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 306  8870              ;
 307  8870              ;														;	"$ff" ..... Bucle infinito de repetición.
 308  8870              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 309  8870              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 310  8870              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 311  8870
 312  8870 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 313  8871
 314  8871              ;														DESCRIPCIÓN:
 315  8871              ;
 316  8871              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 317  8871              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 318  8871              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 319  8871              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 320  8871              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 321  8871              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 322  8871
 323  8871              ;														BIT 3, Recarga de nueva oleada.
 324  8871              ;														BIT 4, Recarga de nueva oleada.
 325  8871              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 326  8871              ;														BIT 6, **** Frame completo.
 327  8871              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 328  8871
 329  8871 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 330  8873              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 331  8873              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 332  8873              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 333  8873
 334  8873              ; Gestión de ENTIDADES y CAJAS.
 335  8873
 336  8873 00 00        Puntero_store_caja defw 0
 337  8875 00 00        Puntero_restore_caja defw 0
 338  8877 00 00        Indice_restore_caja defw 0
 339  8879 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 340  887A 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 341  887B 00           Entidades_en_curso db 0									; ..... ..... .....
 342  887C 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 343  887D              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 344  887D              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 345  887D              ;														; _ (Numero_de_malotes)="0".
 346  887D 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 347  887F 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 348  8881              ;														; _ puntero (Indice_entidades).
 349  8881
 350  8881              ;---------------------------------------------------------------------------------------------------------------
 351  8881              ;
 352  8881              ;	11/01/24
 353  8881              ;
 354  8881              ;	Álbumes.
 355  8881
 356  8881 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 357  8883              ;														; _variable para almacenar lo posición del puntero_
 358  8883              ; 														; _de pila, SP.
 359  8883 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 360  8885              ;														; La utiliza la rutina [Extrae_foto_registros].
 361  8885 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 362  8887 00 70        Stack_snapshot defw Album_de_fotos
 363  8889 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 364  888B
 365  888B              ;End_Snapshot defw Album_de_fotos
 366  888B              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 367  888B 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 368  888D              ;														; _el snapshot de los registros del siguiente disparo.
 369  888D              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 370  888D AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 371  888F
 372  888F 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 373  8890              ;
 374  8890              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 375  8890              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 376  8890              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 377  8890
 378  8890 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 379  8891              ;
 380  8891              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 381  8891              ;
 382  8891              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383  8891              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384  8891              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385  8891              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386  8891              ;
 387  8891              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 388  8891              ;															_ masticados ya generados.
 389  8891              ;
 390  8891              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 391  8891              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 392  8891              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 393  8891              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 394  8891
 395  8891
 396  8891              ; Gestión de Disparos.
 397  8891
 398  8891 00           Numero_de_disparotes db 0
 399  8892 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 400  8894 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 401  8896 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 402  8897              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 403  8897              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 404  8897 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 405  8899              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 406  8899              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 407  8899              ;														; _produzca colisión.
 408  8899 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 409  889B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 410  889B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  889E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 412  889E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 413  88A1              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 414  88A1 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 415  88A2
 416  88A2              ;---------------------------------------------------------------------------------------------------------------
 417  88A2
 418  88A2              ; Relojes y temporizaciones.
 419  88A2
 420  88A2 00           Contador_de_frames db 0
 421  88A3 00           Contador_de_frames_2 db 0
 422  88A4
 423  88A4 04           Clock_explosion db 4
 424  88A5 14           Clock_Entidades_en_curso db 20
 425  88A6 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 426  88A7              ;														; Repite la oleada de entidades.
 427  88A7 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 428  88A8 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 429  88A9 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 430  88AA
 431  88AA 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 432  88AB 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 433  88AC 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 434  88AD
 435  88AD              ;---------------------------------------------------------------------------------------------------------------
 436  88AD
 437  88AD              ; Gestión de NIVELES.
 438  88AD
 439  88AD 00           Nivel db 0												; Nivel actual del juego.
 440  88AE 00 00        Puntero_indice_NIVELES defw 0
 441  88B0 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 442  88B2              ; 														; _ que definen el NIVEL.
 443  88B2              ; Y todo comienza aquí .....
 444  88B2              ;
 445  88B2              ; 	INICIO  *************************************************************************************************************************************************************************
 446  88B2              ;
 447  88B2              ;	5/1/24
 448  88B2
 449  88B2              START
 450  88B2
 451  88B2 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 452  88B5 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 453  88B7 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 454  88B9 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 455  88BB F3           	DI
 456  88BC
 457  88BC 3E 07        	ld a,%00000111
 458  88BE CD D7 96     	call Cls
 459  88C1 CD 24 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  88C4
 461  88C4              ; INICIALIZACIÓN.
 462  88C4
 463  88C4              ;	Inicializa 1er Nivel.
 464  88C4
 465  88C4 21 5B 86     	ld hl,Indice_de_niveles
 466  88C7 22 AE 88     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 467  88CA CD 7E 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 468  88CD
 469  88CD              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 470  88CD              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 471  88CD              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 472  88CD
 473  88CD              ;	Provisional, (para desarrollo).
 474  88CD
 475  88CD              	;-
 476  88CD              ;	ld hl,Numero_parcial_de_entidades
 477  88CD              ;	ld b,(hl)
 478  88CD              ;	inc b
 479  88CD              ;	dec b
 480  88CD              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 481  88CD
 482  88CD CD AD 86     4 call Inicia_Entidades
 483  88D0
 484  88D0 CD E7 89     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 485  88D3              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 486  88D3              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 487  88D3              ; (Esto se dá cuando se inicia una nueva oleada).
 488  88D3
 489  88D3              ;	ld a,(Ctrl_1)
 490  88D3              ;	bit 3,a
 491  88D3              ;	jr nz,5F											; Loop
 492  88D3
 493  88D3              ; 	INICIA AMADEUS !!!!!
 494  88D3
 495  88D3              ;3 call Restore_Amadeus
 496  88D3              ;	call Inicia_Puntero_objeto
 497  88D3              ;	call Draw
 498  88D3
 499  88D3              ;	call Guarda_movimiento_masticado	;! Provisional
 500  88D3
 501  88D3              ;	call Guarda_foto_registros
 502  88D3              ;	call Guarda_datos_de_borrado_Amadeus
 503  88D3
 504  88D3              ;	ld de,Amadeus_db
 505  88D3              ;	call Store_Amadeus
 506  88D3
 507  88D3              ; 	INICIA DISPAROS !!!!!
 508  88D3
 509  88D3              ;	call Inicia_Puntero_Disparo_Entidades
 510  88D3              ;	call Inicia_Puntero_Disparo_Amadeus
 511  88D3
 512  88D3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 513  88D3
 514  88D3              ;5 call Inicia_punteros_de_cajas
 515  88D3              ;	call Restore_entidad
 516  88D3
 517  88D3              ;	ld a,(Ctrl_1)
 518  88D3              ;	bit 3,a
 519  88D3              ;	jr z,6F
 520  88D3
 521  88D3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 522  88D3
 523  88D3              ;	ld hl,Ctrl_1
 524  88D3              ;	res 3,(hl)
 525  88D3              ;	jr Main
 526  88D3
 527  88D3              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 528  88D3
 529  88D3 21 8F 88     6 ld hl,Ctrl_3
 530  88D6 CB C6        	set 0,(hl)											; Frame completo.
 531  88D8 FB           	ei
 532  88D9 76           	halt
 533  88DA
 534  88DA              ; ------------------------------------
 535  88DA
 536  88DA              Main
 537  88DA              ;
 538  88DA              ;	11/12/23
 539  88DA
 540  88DA              ; Aparece nueva entidad ???
 541  88DA
 542  88DA              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 543  88DA              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 544  88DA              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 545  88DA              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 546  88DA              ;														; _un 2º bloque.
 547  88DA
 548  88DA              ;	ld a,1
 549  88DA              ;	out ($fe),a
 550  88DA
 551  88DA              ;	jr $
 552  88DA
 553  88DA 3A A5 88     	ld a,(Clock_Entidades_en_curso)
 554  88DD 47           	ld b,a
 555  88DE 3A A2 88     	ld a,(Contador_de_frames)
 556  88E1 B8           	cp b
 557  88E2 20 18        	jr nz,13F
 558  88E4
 559  88E4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 560  88E4              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 561  88E4
 562  88E4 3A 7A 88     21 ld a,(Numero_parcial_de_entidades)
 563  88E7 47           	ld b,a
 564  88E8 3A 7B 88     	ld a,(Entidades_en_curso)
 565  88EB B8           	cp b
 566  88EC 28 0E        	jr z,13F
 567  88EE 30 0C        	jr nc,13F
 568  88F0
 569  88F0 3C           	inc a
 570  88F1 32 7B 88     	ld (Entidades_en_curso),a
 571  88F4
 572  88F4              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 573  88F4
 574  88F4 3A A5 88     	ld a,(Clock_Entidades_en_curso)
 575  88F7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 576  88F7              ;! _ IMPREDECIBLE !!!!
 577  88F7 C6 64        	add 100
 578  88F9 32 A5 88     	ld (Clock_Entidades_en_curso),a
 579  88FC
 580  88FC              ; -------------------------------------------------------------------------------------------------------------
 581  88FC
 582  88FC              ; Habilita disparos.
 583  88FC
 584  88FC              13
 585  88FC
 586  88FC              ;	ld hl,Disparo_Amadeus
 587  88FC              ;	ld de,CLOCK_repone_disparo_Amadeus
 588  88FC              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 589  88FC
 590  88FC              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 591  88FC              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 592  88FC              ;	call Habilita_disparos
 593  88FC
 594  88FC              ; COLISIONES.
 595  88FC
 596  88FC              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 597  88FC
 598  88FC              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 599  88FC              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 600  88FC              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 601  88FC
 602  88FC              ;	xor a
 603  88FC              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 604  88FC
 605  88FC              ;	call Inicia_punteros_de_cajas
 606  88FC              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 607  88FC              ; 														; _ en DRAW.
 608  88FC
 609  88FC              ;	ld a,(Filas)
 610  88FC              ;	and a
 611  88FC              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 612  88FC              ;	call Incrementa_punteros_de_cajas
 613  88FC              ;	jr 12B
 614  88FC
 615  88FC              ; ---------------------------------------------------------------------------------------
 616  88FC
 617  88FC 3A 7A 88     10 ld a,(Numero_parcial_de_entidades)
 618  88FF 47               ld b,a
 619  8900 A7           	and a
 620  8901 20 00        	jr nz,11F
 621  8903
 622  8903              ;	ld hl,Ctrl_1;
 623  8903              ;	bit 4,(hl)
 624  8903              ;	jp nz,16F
 625  8903
 626  8903              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 627  8903
 628  8903              ;	ld hl,Ctrl_1
 629  8903              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 630  8903
 631  8903              ;	ld a,(Contador_de_frames)
 632  8903              ;	inc a
 633  8903              ;	ld (Activa_recarga_cajas),a
 634  8903
 635  8903              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 636  8903
 637  8903 3A 7B 88     11 ld a,(Entidades_en_curso)
 638  8906 A7           	and a
 639  8907 28 14        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 640  8909 47           	ld b,a												; No hay entidades que gestionar.
 641  890A
 642  890A              ; ( Código que ejecutamos con cada entidad: ).
 643  890A
 644  890A              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 645  890A
 646  890A C5           15 push bc 												; Nº de entidades en curso.
 647  890B
 648  890B CD BA 8A     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 649  890E
 650  890E              ; Existe "Entidad_guía" ???.
 651  890E              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 652  890E
 653  890E              ;	ld a,(Ctrl_3)
 654  890E              ;	bit 1,a
 655  890E              ;	jr nz,22F
 656  890E
 657  890E              ; Almacén de "Movimientos_masticados" lleno ???
 658  890E              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 659  890E              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 660  890E
 661  890E              ;;	ld a,(Ctrl_3)
 662  890E              ;;	bit 3,a
 663  890E              ;;	jr nz,22F
 664  890E
 665  890E              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 666  890E
 667  890E              ;	ld hl,Ctrl_2
 668  890E              ;	set 5,(hl)
 669  890E              ;	ld hl,Ctrl_3
 670  890E              ;	set 1,(hl)
 671  890E
 672  890E              ; Impacto ???
 673  890E
 674  890E              ;22 ld a,(Impacto)
 675  890E              ;	and a
 676  890E              ;	jr z,8F
 677  890E
 678  890E              ; Hay Impacto en esta entidad.
 679  890E
 680  890E              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 681  890E              ;	dec (hl)
 682  890E              ;	jp nz,17F
 683  890E
 684  890E              ;! Velocidad de la animación de la explosión.
 685  890E
 686  890E              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 687  890E              ;														; _,(velocidad de la explosión).
 688  890E              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 689  890E
 690  890E              ;	call Repone_datos_de_borrado
 691  890E              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 692  890E
 693  890E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 694  890E
 695  890E              ;	ld a,(Ctrl_2)
 696  890E              ;	bit 1,a
 697  890E              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 698  890E
 699  890E              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 700  890E
 701  890E              ;	ld a,(CTRL_DESPLZ)
 702  890E              ;	and a
 703  890E              ;	jr nz,18F
 704  890E
 705  890E              ;	ld hl,Indice_Explosion_2x2-2
 706  890E              ;	ld (Puntero_DESPLZ_der),hl
 707  890E              ;	jr 19F
 708  890E
 709  890E              ;18 ld hl,Indice_Explosion_2x3-2
 710  890E              ;	ld (Puntero_DESPLZ_der),hl
 711  890E
 712  890E              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 713  890E              ;	set 1,(hl)
 714  890E              ;	jr 7F
 715  890E
 716  890E              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 717  890E              ; _con las coordenadas de la entidad almacenada en DRAW.
 718  890E
 719  890E              ;8 ld a,(Ctrl_1)
 720  890E              ;	bit 2,a
 721  890E              ;	jr z,7F
 722  890E
 723  890E              ;	ld hl,(Coordenadas_disparo_certero)
 724  890E              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 725  890E              ;														; E contiene la coordenada_X del disparo.
 726  890E              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 727  890E              ;														; H FILA, (Coordenada_y de la entidad).
 728  890E              ;	and a
 729  890E              ;	sbc hl,de
 730  890E
 731  890E              ;	call Determina_resultado_comparativa
 732  890E
 733  890E              ;	ld a,b
 734  890E              ;	and a
 735  890E              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 736  890E
 737  890E              ; ----- ----- -----
 738  890E
 739  890E              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 740  890E              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 741  890E
 742  890E              ;	ld hl,Ctrl_1
 743  890E              ;	res 2,(hl)
 744  890E
 745  890E CD 2A 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 746  8911
 747  8911              ;	ld a,(Ctrl_0)
 748  8911              ;	bit 4,a
 749  8911              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 750  8911
 751  8911              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 752  8911              ; [[[
 753  8911              ;	call Detecta_disparo_entidad
 754  8911              ; ]]]
 755  8911
 756  8911 CD 13 87     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 757  8914
 758  8914              ;	ld hl,Ctrl_0
 759  8914              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 760  8914
 761  8914 CD 03 87     17 call Store_Restore_cajas
 762  8917
 763  8917 C1           	pop bc
 764  8918
 765  8918 10 F0        	djnz 15B
 766  891A
 767  891A CD E7 89     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 768  891D
 769  891D              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 770  891D              ; Hemos gestionado todas las unidades.
 771  891D              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 772  891D
 773  891D              ;	ld hl,Ctrl_1
 774  891D              ;	res 2,(hl)
 775  891D
 776  891D 21 8F 88     16 ld hl,Ctrl_3
 777  8920 CB C6        	set 0,(hl)											; Frame completo.
 778  8922
 779  8922 AF           	xor a
 780  8923 D3 FE        	out ($fe),a
 781  8925
 782  8925 76           	halt
 783  8926
 784  8926              ; ----------------------------------------
 785  8926
 786  8926              ;	ld a,(Ctrl_1) 										; Existe Loop?
 787  8926              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 788  8926 CA DA 88     	jp z,Main
 789  8929
 790  8929              ; RECARGA DE NUEVA OLEADA.
 791  8929
 792  8929              ;	ld a,(Contador_de_frames)
 793  8929              ;	ld b,a
 794  8929              ;	ld a,(Activa_recarga_cajas)
 795  8929              ;	cp b
 796  8929              ;	jr z,20F
 797  8929
 798  8929              ;	ld hl,Ctrl_1
 799  8929              ;	set 4,(hl)
 800  8929              ;	jp Main
 801  8929
 802  8929              ;20 ld hl,Ctrl_1
 803  8929              ;	res 4,(hl)
 804  8929
 805  8929              ;	ld a,(Contador_de_frames)
 806  8929
 807  8929              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 808  8929              ;! _ IMPREDECIBLE !!!!
 809  8929
 810  8929              ;	add 10
 811  8929              ;	ld (Clock_Entidades_en_curso),a
 812  8929
 813  8929              ;	jp 4B
 814  8929
 815  8929 C9           	ret
 816  892A
 817  892A              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 818  892A              ;
 819  892A              ;	16/11/23
 820  892A
 821  892A              ;;Gestiona_Amadeus
 822  892A
 823  892A              ;! Activa/desactiva impacto con Amadeus.
 824  892A
 825  892A              ;	ld a,(Impacto)
 826  892A              ;	and a
 827  892A              ;	jr nz,2F
 828  892A
 829  892A              ;;	call Mov_Amadeus
 830  892A
 831  892A              ;;2 ld a,(Ctrl_0)
 832  892A              ;;	bit 4,a
 833  892A              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 834  892A
 835  892A              ;;	call Guarda_foto_entidad_a_pintar
 836  892A              ;;	call Guarda_datos_de_borrado_Amadeus
 837  892A
 838  892A              ;;1 ld hl,Ctrl_0
 839  892A              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 840  892A
 841  892A              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 842  892A
 843  892A              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 844  892A
 845  892A              ;	call Calcula_numero_de_disparotes
 846  892A
 847  892A              ;;	ret
 848  892A
 849  892A              ; --------------------------------------------------------------------------------------------------------------
 850  892A              ;
 851  892A              ;	15/12/23
 852  892A
 853  892A              Mov_obj
 854  892A
 855  892A              ;	ld a,(Ctrl_2)
 856  892A              ;	bit 1,a
 857  892A              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 858  892A
 859  892A              ; Explosión:
 860  892A
 861  892A              ;	ld a,(Frames_explosion)
 862  892A              ;	and a
 863  892A              ;	jr nz,4F
 864  892A
 865  892A              ;!  Una alimaña menos!!!!!!!!!1
 866  892A
 867  892A              ; Se trataba de una Entidad_guía ???
 868  892A
 869  892A              ;	ld a,(Ctrl_2)
 870  892A              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 871  892A              ;	jr z,5F
 872  892A
 873  892A              ;	ld hl,Ctrl_3
 874  892A              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 875  892A
 876  892A              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 877  892A              ;!! _generado puede ser distinto, (aletoriedad).
 878  892A
 879  892A              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 880  892A              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 881  892A              ;	dec (hl)
 882  892A              ;	ld hl,Entidades_en_curso
 883  892A              ;	dec (hl)
 884  892A              ;	ld hl,Numero_de_entidades
 885  892A              ;	dec (hl)
 886  892A              ;	jr 3F
 887  892A
 888  892A              ; -----
 889  892A
 890  892A              ;	`Movemos´ la explosión.
 891  892A
 892  892A              ;4 ld hl,(Puntero_DESPLZ_der)
 893  892A              ;	inc hl
 894  892A              ;	inc hl
 895  892A              ;	call Extrae_address
 896  892A              ;;	ld (Puntero_objeto),hl
 897  892A
 898  892A              ;;	ld hl,Frames_explosion
 899  892A              ;;	dec (hl)
 900  892A
 901  892A              ;;	ld hl,Ctrl_0
 902  892A              ;;	set 4,(hl);;
 903  892A
 904  892A              ;;	jr 3F
 905  892A
 906  892A              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 907  892A
 908  892A              ;2 xor a
 909  892A              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 910  892A
 911  892A              ; Movemos Entidades malignas.
 912  892A              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 913  892A
 914  892A              ;	ld a,(Ctrl_2)
 915  892A              ;	bit 5,a
 916  892A              ;	jr nz,8F
 917  892A
 918  892A              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 919  892A              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 920  892A              ;	jr 7F
 921  892A
 922  892A              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 923  892A
 924  892A              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 925  892A              ;	bit 4,a
 926  892A              ;	ret z
 927  892A
 928  892A              ; Ha habido desplazamiento de la entidad maligna.
 929  892A              ; Ha llegado a zona de AMADEUS ???
 930  892A
 931  892A              ;7 ld a,(Coordenada_y)
 932  892A              ;	cp $14
 933  892A              ;	jr c,1F
 934  892A
 935  892A              ; ---------
 936  892A
 937  892A              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 938  892A              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 939  892A
 940  892A              ;	di
 941  892A              ;	call Genera_coordenadas_X
 942  892A              ;	call Compara_coordenadas_X
 943  892A              ;	ei
 944  892A
 945  892A              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 946  892A
 947  892A              ; ---------
 948  892A
 949  892A              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 950  892A CD 98 8B     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 951  892D CD 25 8A     	call Limpia_Variables_de_borrado
 952  8930
 953  8930 C9           3 ret
 954  8931
 955  8931              ; --------------------------------------------------------------------------------------------------------------
 956  8931              ;
 957  8931              ;	29/1/23
 958  8931
 959  8931              Mov_Amadeus
 960  8931
 961  8931              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 962  8931
 963  8931 CD 8F 97     	call Mov_right
 964  8934
 965  8934 3A 51 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 966  8937 CB 67        	bit 4,a
 967  8939 C8           	ret z
 968  893A
 969  893A              ; ---------
 970  893A
 971  893A              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 972  893A CD 88 8B     	call Repone_datos_de_borrado_Amadeus
 973  893D CD 25 8A     	call Limpia_Variables_de_borrado
 974  8940
 975  8940 C9           	ret
 976  8941
 977  8941              ; -----------------------------------------------------------------------------------
 978  8941              ;
 979  8941              ;	20/01/24
 980  8941              ;
 981  8941              ;
 982  8941
 983  8941              Construye_movimientos_masticados_entidad
 984  8941
 985  8941 2A 4D 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 986  8944 E5           	push hl
 987  8945
 988  8945 CD 89 89     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 989  8948              ;															; _ el (Contador_de_mov_masticados).
 990  8948 CD 85 8A     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 991  894B              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 992  894B CD EB 96     	call Recompone_posicion_inicio
 993  894E
 994  894E CD C1 90     1 call Draw
 995  8951 CD 6D 89     	call Guarda_movimiento_masticado
 996  8954 CD 54 9C     	call Movimiento
 997  8957
 998  8957 3A 8F 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 999  895A CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1000  895C 28 F0        	jr z,1B
1001  895E
1002  895E              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1003  895E              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1004  895E
1005  895E E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1006  895F 22 4D 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1007  8962
1008  8962              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1009  8962
1010  8962 CD C5 9D     	call Situa_en_contador_general_de_mov_masticados
1011  8965
1012  8965              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1013  8965              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1014  8965
1015  8965 ED 4B 4F 88  	ld bc,(Contador_de_mov_masticados)
1016  8969 71           	ld (hl),c
1017  896A 23           	inc hl
1018  896B 70           	ld (hl),b
1019  896C
1020  896C C9           	ret
1021  896D
1022  896D              ; -----------------------------------------------------------------------------------
1023  896D              ;
1024  896D              ;	28/12/23
1025  896D              ;
1026  896D              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1027  896D              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1028  896D
1029  896D              Guarda_movimiento_masticado
1030  896D
1031  896D ED 73 81 88  	ld (Stack),sp
1032  8971 ED 7B 4D 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1033  8975
1034  8975 E5           	push hl
1035  8976 DD E5            push ix
1036  8978 FD E5            push iy
1037  897A
1038  897A ED 7B 81 88      ld sp,(Stack)
1039  897E
1040  897E              ;    push hl
1041  897E
1042  897E 2A 4F 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1043  8981 23           	inc hl
1044  8982 22 4F 88     	ld (Contador_de_mov_masticados),hl
1045  8985
1046  8985              ;	pop hl
1047  8985
1048  8985 CD 89 89         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1049  8988              ;															; _ el (Contador_de_mov_masticados).
1050  8988 C9               ret
1051  8989
1052  8989              ; --------------------------------------------------------------------------------------------------------------
1053  8989              ;
1054  8989              ;	12/1/24
1055  8989              ;
1056  8989              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1057  8989
1058  8989              Actualiza_Puntero_de_almacen_de_mov_masticados
1059  8989
1060  8989              ;	push hl
1061  8989              ;	push bc
1062  8989
1063  8989 2A 4D 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1064  898C 01 06 00     	ld bc,6
1065  898F A7           	and a
1066  8990 ED 4A        	adc hl,bc
1067  8992 22 4D 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1068  8995
1069  8995              ;	pop bc
1070  8995              ;	pop hl
1071  8995
1072  8995 C9           	ret
1073  8996
1074  8996              ; --------------------------------------------------------------------------------------------------------------
1075  8996              ;
1076  8996              ;	15/01/24
1077  8996              ;
1078  8996              ;	Cargamos los registros_
1079  8996              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1080  8996              ;
1081  8996              ;	HL contiene la dirección de la rutina de impresión.
1082  8996              ;	IX contiene el puntero de impresión.
1083  8996              ;	IY contiene (Puntero_objeto).
1084  8996
1085  8996
1086  8996 ED 73 81 88  Cargamos_registros_con_mov_masticado ld (Stack),sp
1087  899A ED 7B 4D 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1088  899E
1089  899E FD E1        	pop iy
1090  89A0 DD E1        	pop ix
1091  89A2 E1           	pop hl
1092  89A3
1093  89A3 ED 73 4D 88  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1094  89A7
1095  89A7 ED 7B 81 88  	ld sp,(Stack)
1096  89AB
1097  89AB C9           	ret
1098  89AC
1099  89AC              ; --------------------------------------------------------------------------------------------------------------
1100  89AC              ;
1101  89AC              ;	28/12/23
1102  89AC              ;
1103  89AC              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1104  89AC              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1105  89AC
1106  89AC              Guarda_foto_entidad_a_pintar
1107  89AC
1108  89AC 3A 51 88     	ld a,(Ctrl_0)
1109  89AF CB 77        	bit 6,a
1110  89B1 28 04        	jr z,5F
1111  89B3
1112  89B3              ;	Guarda la foto de Amadeus.
1113  89B3
1114  89B3              ;	call Draw
1115  89B3              ;	call Guarda_movimiento_masticado	;! Provisional
1116  89B3 CD 16 71     	call Guarda_foto_registros
1117  89B6 C9           	ret
1118  89B7
1119  89B7              ; ENTIDADES!
1120  89B7              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1121  89B7
1122  89B7 3A 8F 88     5 ld a,(Ctrl_3)
1123  89BA CB 5F        	bit 3,a
1124  89BC 28 01        	jr z,1F
1125  89BE
1126  89BE              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1127  89BE
1128  89BE              4
1129  89BE              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1130  89BE C9           	ret
1131  89BF
1132  89BF              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1133  89BF
1134  89BF 3A 8F 88     1 ld a,(Ctrl_3)
1135  89C2 CB 57        	bit 2,a
1136  89C4 20 10        	jr nz,6F
1137  89C6
1138  89C6              ; Entidad guía o fantasma ???
1139  89C6
1140  89C6 3A 56 88     	ld a,(Ctrl_2)
1141  89C9 CB 6F        	bit 5,a
1142  89CB 20 10        	jr nz,3F
1143  89CD
1144  89CD              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1145  89CD
1146  89CD 18 EF        	jr 4B
1147  89CF
1148  89CF              ; ENTIDAD_GUÍA:
1149  89CF              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1150  89CF              ; _guardando "movimientos_masticados".
1151  89CF
1152  89CF 3A 8F 88     2 ld a,(Ctrl_3)
1153  89D2 CB 57        	bit 2,a
1154  89D4 28 07        	jr z,3F
1155  89D6
1156  89D6              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1157  89D6              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1158  89D6
1159  89D6 CB 97        6 res 2,a
1160  89D8 CB DF        	set 3,a
1161  89DA 32 8F 88     	ld (Ctrl_3),a
1162  89DD
1163  89DD
1164  89DD              ;	Esto sólo lo ejecuta una entidad guía.
1165  89DD
1166  89DD CD C1 90     3 	call Draw
1167  89E0 CD 6D 89     	call Guarda_movimiento_masticado
1168  89E3 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1169  89E6
1170  89E6              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1171  89E6              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1172  89E6
1173  89E6              ;	call Convierte_guia_en_fantasma
1174  89E6 C9           	ret
1175  89E7
1176  89E7              ; --------------------------------------------------------------------------------------------------------------
1177  89E7              ;
1178  89E7              ;	19/9/23
1179  89E7
1180  89E7              ;Prepara_var_pintado
1181  89E7
1182  89E7              ;	ld hl,Filas
1183  89E7              ;	ld de,Variables_de_pintado
1184  89E7              ;	ld bc,8
1185  89E7              ;	ldir
1186  89E7              ;	ret
1187  89E7
1188  89E7              ; --------------------------------------------------------------------------------------------------------------
1189  89E7
1190  89E7              ;Repone_pintar
1191  89E7
1192  89E7              ;	ld hl,Variables_de_pintado
1193  89E7              ;	ld de,Filas
1194  89E7              ;	ld bc,8
1195  89E7              ;	ldir
1196  89E7              ;	ret
1197  89E7
1198  89E7              ; *************************************************************************************************************************************************************
1199  89E7              ;
1200  89E7              ; 8/1/23
1201  89E7              ;
1202  89E7              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1203  89E7              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1204  89E7              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1205  89E7
1206  89E7              ; Destruye HL y DE !!!!!
1207  89E7
1208  89E7              Inicia_punteros_de_cajas
1209  89E7
1210  89E7 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1211  89EA CD 7F 8A         call Extrae_address
1212  89ED 22 73 88         ld (Puntero_store_caja),hl
1213  89F0 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1214  89F3 22 77 88     	ld (Indice_restore_caja),hl
1215  89F6 CD 7F 8A     	call Extrae_address
1216  89F9 22 75 88     	ld (Puntero_restore_caja),hl
1217  89FC C9               ret
1218  89FD
1219  89FD              ; *************************************************************************************************************************************************************
1220  89FD              ;
1221  89FD              ; 8/1/23
1222  89FD              ;
1223  89FD              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1224  89FD
1225  89FD 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1226  8A00 22 92 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1227  8A03 C9           	ret
1228  8A04 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1229  8A07 22 94 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1230  8A0A C9           	ret
1231  8A0B
1232  8A0B              ; -------------------------------------------------------------------------------------------------------------
1233  8A0B              ;
1234  8A0B              ; 21/9/23
1235  8A0B              ;
1236  8A0B
1237  8A0B              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1238  8A0B
1239  8A0B              Limpia_album_Amadeus
1240  8A0B
1241  8A0B 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1242  8A0E 7E           	ld a,(hl)
1243  8A0F A7           	and a
1244  8A10 C8           	ret z
1245  8A11
1246  8A11 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1247  8A14 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1248  8A17 01 0B 00     	ld bc,11
1249  8A1A AF           	xor a
1250  8A1B 77           	ld (hl),a
1251  8A1C ED B0        	ldir
1252  8A1E
1253  8A1E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1254  8A21 22 8D 88     	ld (End_Snapshot_Amadeus),hl
1255  8A24
1256  8A24 C9           	ret
1257  8A25
1258  8A25 21 45 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1259  8A28 11 46 88     	ld de,Variables_de_borrado+1
1260  8A2B 01 05 00     	ld bc,5
1261  8A2E AF           	xor a
1262  8A2F 77           	ld (hl),a
1263  8A30 ED B0        	ldir
1264  8A32 C9           	ret
1265  8A33
1266  8A33              ; -------------------------------------------------------------------------------------------------------------
1267  8A33              ;
1268  8A33              ; 8/9/23
1269  8A33              ;
1270  8A33
1271  8A33              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1272  8A33              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1273  8A33
1274  8A33              Calcula_numero_de_malotes
1275  8A33
1276  8A33 21 00 70     	ld hl,Album_de_fotos
1277  8A36 EB           	ex de,hl
1278  8A37 2A 87 88     	ld hl,(Stack_snapshot)
1279  8A3A
1280  8A3A 06 00        	ld b,0
1281  8A3C 7D           	ld a,l
1282  8A3D 93           	sub e
1283  8A3E 28 07        	jr z,1F
1284  8A40
1285  8A40              ; Nº de malotes no es "0".
1286  8A40
1287  8A40 D6 06        2 sub 6
1288  8A42 04           	inc b
1289  8A43 A7           	and a
1290  8A44 20 FA        	jr nz,2B
1291  8A46 78           	ld a,b
1292  8A47
1293  8A47 32 7C 88     1 ld (Numero_de_malotes),a
1294  8A4A C9           	ret
1295  8A4B
1296  8A4B              ; -------------------------------------------------------------------------------------------------------------
1297  8A4B              ;
1298  8A4B              ; 8/9/23
1299  8A4B              ;
1300  8A4B
1301  8A4B              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1302  8A4B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1303  8A4B
1304  8A4B              Calcula_malotes_Amadeus
1305  8A4B
1306  8A4B 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1307  8A4E EB           	ex de,hl
1308  8A4F 2A 8D 88     	ld hl,(End_Snapshot_Amadeus)
1309  8A52
1310  8A52 7C           	ld a,h
1311  8A53 A7           	and a
1312  8A54 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1313  8A56
1314  8A56 06 00        	ld b,0
1315  8A58 7D           	ld a,l
1316  8A59 93           	sub e
1317  8A5A 28 07        	jr z,1F
1318  8A5C
1319  8A5C              ; Nº de malotes no es "0".
1320  8A5C
1321  8A5C D6 06        2 sub 6
1322  8A5E 04           	inc b
1323  8A5F A7           	and a
1324  8A60 20 FA        	jr nz,2B
1325  8A62 78           	ld a,b
1326  8A63
1327  8A63 32 7C 88     1 ld (Numero_de_malotes),a
1328  8A66 C9           	ret
1329  8A67
1330  8A67              ; -------------------------------------------------------------------------------------------------------------
1331  8A67              ;
1332  8A67              ; 28/2/23
1333  8A67              ;
1334  8A67
1335  8A67              Calcula_numero_de_disparotes
1336  8A67
1337  8A67 21 56 70     	ld hl,Album_de_fotos_disparos
1338  8A6A EB           	ex de,hl
1339  8A6B 2A 8B 88     	ld hl,(End_Snapshot_disparos)
1340  8A6E
1341  8A6E 06 00        	ld b,0
1342  8A70 7D           	ld a,l
1343  8A71 93           	sub e
1344  8A72 28 07        	jr z,1F
1345  8A74
1346  8A74              ; Nº de malotes no es "0".
1347  8A74
1348  8A74 D6 06        2 sub 6
1349  8A76 04           	inc b
1350  8A77 A7           	and a
1351  8A78 20 FA        	jr nz,2B
1352  8A7A 78           	ld a,b
1353  8A7B
1354  8A7B 32 91 88     1 ld (Numero_de_disparotes),a
1355  8A7E C9           	ret
1356  8A7F
1357  8A7F              ; *************************************************************************************************************************************************************
1358  8A7F              ;
1359  8A7F              ; 20/10/22
1360  8A7F              ;
1361  8A7F              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1362  8A7F              ;
1363  8A7F              ; Destruye el puntero y DE !!!!!
1364  8A7F
1365  8A7F 5E           Extrae_address ld e,(hl)
1366  8A80 23           	inc hl
1367  8A81 56           	ld d,(hl)
1368  8A82 2B           	dec hl
1369  8A83 EB           	ex de,hl
1370  8A84 C9           	ret
1371  8A85
1372  8A85              ; *************************************************************************************************************************************************************
1373  8A85              ;
1374  8A85              ;	20/1/24
1375  8A85              ;
1376  8A85              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1377  8A85              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1378  8A85              ;
1379  8A85              ;   Destruye HL y BC !!!!!,
1380  8A85              ;
1381  8A85              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1382  8A85              ;					"0" ..... Izquierda.
1383  8A85
1384  8A85              Inicia_Puntero_objeto
1385  8A85
1386  8A85 3A 43 88     	ld a,(Cuad_objeto)
1387  8A88 E6 01        	and 1
1388  8A8A F5           	push af
1389  8A8B CC A7 8A     	call z,Inicia_puntero_objeto_izq
1390  8A8E F1           	pop af
1391  8A8F C8           	ret z
1392  8A90 CD 94 8A     	call Inicia_puntero_objeto_der
1393  8A93 C9           	ret
1394  8A94
1395  8A94              ; Arrancamos desde la parte izquierda de la pantalla.
1396  8A94              ; Iniciamos (Indice_Sprite_der).
1397  8A94
1398  8A94 2A 39 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1399  8A97 22 3D 88     	ld (Puntero_DESPLZ_der),hl
1400  8A9A CD 7F 8A     	call Extrae_address
1401  8A9D 22 33 88     	ld (Puntero_objeto),hl
1402  8AA0
1403  8AA0 2A 3B 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1404  8AA3 22 3F 88     	ld (Puntero_DESPLZ_izq),hl
1405  8AA6 C9           	ret
1406  8AA7
1407  8AA7              ; Arrancamos desde la parte derecha de la pantalla.
1408  8AA7              ; Iniciamos (Indice_Sprite_izq).
1409  8AA7
1410  8AA7 2A 3B 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1411  8AAA 22 3F 88     	ld (Puntero_DESPLZ_izq),hl
1412  8AAD CD 7F 8A     	call Extrae_address
1413  8AB0 22 33 88     	ld (Puntero_objeto),hl
1414  8AB3
1415  8AB3 2A 39 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1416  8AB6 22 3D 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1417  8AB9 C9           	ret
1418  8ABA
1419  8ABA              ; **************************************************************************************************
1420  8ABA              ;
1421  8ABA              ;	31/01/24
1422  8ABA              ;
1423  8ABA              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1424  8ABA
1425  8ABA              Restore_entidad
1426  8ABA
1427  8ABA 2A 73 88     	ld hl,(Puntero_store_caja)
1428  8ABD 11 2E 88     	ld de,Bandeja_DRAW
1429  8AC0 7E           	ld a,(hl)
1430  8AC1 12           	ld (de),a
1431  8AC2 23           	inc hl 											; (Tipo).
1432  8AC3
1433  8AC3 11 35 88     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1434  8AC6 01 02 00     	ld bc,2
1435  8AC9 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1436  8ACB
1437  8ACB 13           	inc de
1438  8ACC 7E           	ld a,(hl)
1439  8ACD 12           	ld (de),a 										; Transferimos (Attr).
1440  8ACE 23           	inc hl
1441  8ACF
1442  8ACF 11 44 88     	ld de,Impacto
1443  8AD2
1444  8AD2 7E           	ld a,(hl)
1445  8AD3 12           	ld (de),a 										; Transferimos (Impacto).
1446  8AD4 23           	inc hl
1447  8AD5
1448  8AD5 13           	inc de
1449  8AD6
1450  8AD6 01 06 00     	ld bc,6
1451  8AD9 ED B0        	ldir
1452  8ADB
1453  8ADB 01 07 00     	ld bc,7
1454  8ADE ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1455  8AE0              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1456  8AE0 11 56 88     	ld de,Ctrl_2
1457  8AE3
1458  8AE3 7E           	ld a,(hl)
1459  8AE4 12           	ld (de),a 										; Transferimos (Ctrl_2).
1460  8AE5
1461  8AE5 C9           	ret
1462  8AE6
1463  8AE6              ; **************************************************************************************************
1464  8AE6              ;
1465  8AE6              ;	08/05/23
1466  8AE6              ;
1467  8AE6              ;	Incrementamos los dos punteros de entidades. (+1).
1468  8AE6
1469  8AE6              Incrementa_punteros_de_cajas
1470  8AE6
1471  8AE6 2A 75 88     	ld hl,(Puntero_restore_caja)
1472  8AE9 22 73 88     	ld (Puntero_store_caja),hl
1473  8AEC 2A 77 88     	ld hl,(Indice_restore_caja)
1474  8AEF 23           	inc hl
1475  8AF0 23           	inc hl
1476  8AF1 22 77 88     	ld (Indice_restore_caja),hl
1477  8AF4 CD 7F 8A         call Extrae_address
1478  8AF7 22 75 88         ld (Puntero_restore_caja),hl
1479  8AFA C9               ret
1480  8AFB
1481  8AFB              ; **************************************************************************************************
1482  8AFB              ;
1483  8AFB              ;	21/12/23
1484  8AFB              ;
1485  8AFB              ;	Restore_Amadeus
1486  8AFB              ;
1487  8AFB              ;	Cargamos en DRAW los parámetros de Amadeus.
1488  8AFB              ;
1489  8AFB
1490  8AFB E5           Restore_Amadeus	push hl
1491  8AFC D5           	push de
1492  8AFD C5            	push bc
1493  8AFE 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1494  8B01 11 2E 88     	ld de,Bandeja_DRAW
1495  8B04 01 2A 00     	ld bc,42
1496  8B07 ED B0        	ldir
1497  8B09 C1           	pop bc
1498  8B0A D1           	pop de
1499  8B0B E1           	pop hl
1500  8B0C C9           	ret
1501  8B0D
1502  8B0D              ; *************************************************************************************************************************************************************
1503  8B0D              ;
1504  8B0D              ;	21/12/23
1505  8B0D              ;
1506  8B0D              ;	Store_Amadeus
1507  8B0D              ;
1508  8B0D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1509  8B0D              ;
1510  8B0D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1511  8B0D              ;
1512  8B0D              ;	DESTRUYE: HL y BC y DE.
1513  8B0D
1514  8B0D 21 2E 88     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1515  8B10 01 2A 00     	ld bc,42
1516  8B13 ED B0        	ldir
1517  8B15 C9           	ret
1518  8B16
1519  8B16              ; -----------------------------------------------------------
1520  8B16              ;
1521  8B16              ;	21/12/23
1522  8B16              ;
1523  8B16              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1524  8B16              ;
1525  8B16              ;	Destruye: HL,BC,DE,A
1526  8B16
1527  8B16 21 2E 88     Borra_datos_entidad ld hl,Bandeja_DRAW
1528  8B19 01 29 00     	ld bc,41
1529  8B1C AF           	xor a
1530  8B1D 77           	ld (hl),a
1531  8B1E 11 2F 88     	ld de,Bandeja_DRAW+1
1532  8B21 ED B0        	ldir
1533  8B23 C9           	ret
1534  8B24
1535  8B24              ; -----------------------------------------------------------
1536  8B24
1537  8B24              ; Teclado.
1538  8B24
1539  8B24 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1540  8B26 DB FE        	in a,($fe)
1541  8B28 E6 01        	and $01
1542  8B2A 28 02        	jr z,1f
1543  8B2C 18 F6        	jr Pulsa_ENTER
1544  8B2E C9           1 ret
1545  8B2F
1546  8B2F              ; **************************************************************************************************
1547  8B2F              ;
1548  8B2F              ; Temporización.
1549  8B2F
1550  8B2F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1551  8B2F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1552  8B2F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1553  8B2F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1554  8B2F
1555  8B2F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1556  8B2F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1557  8B2F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1558  8B2F
1559  8B2F              ; A partir de $4f61 no hace falta DELAY.
1560  8B2F
1561  8B2F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1562  8B2F
1563  8B2F 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1564  8B32 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1565  8B33 78           	LD A,B
1566  8B34 A7           	AND A
1567  8B35 20 FB        	JR NZ,wait
1568  8B37 C9           	RET
1569  8B38
1570  8B38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1571  8B38              ;
1572  8B38              ;	5/3/23
1573  8B38              ;
1574  8B38              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1575  8B38
1576  8B38              Movimiento_Amadeus
1577  8B38
1578  8B38              ; Disparo.
1579  8B38
1580  8B38 3A A7 88     	ld a,(Disparo_Amadeus)
1581  8B3B A7           	and a
1582  8B3C 20 02        	jr nz,1F
1583  8B3E 18 15        	jr 2F
1584  8B40
1585  8B40 3E F7        1 ld a,$f7													; "5" para disparar.
1586  8B42 DB FE        	in a,($fe)
1587  8B44 E6 10        	and $10
1588  8B46
1589  8B46 F5           	push af
1590  8B47 CC ED 8B     	call z,Genera_disparo
1591  8B4A F1           	pop af
1592  8B4B 20 08        	jr nz,2F
1593  8B4D
1594  8B4D 3A A7 88     	ld a,(Disparo_Amadeus)
1595  8B50 EE 01        	xor 1
1596  8B52 32 A7 88     	ld (Disparo_Amadeus),a
1597  8B55 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1598  8B57 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1599  8B59 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1600  8B5B CC B2 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1601  8B5E
1602  8B5E 3E F7        	ld a,$f7
1603  8B60 DB FE        	in a,($fe)
1604  8B62 E6 01        	and $01
1605  8B64 C8           	ret z
1606  8B65
1607  8B65 3E F7        	ld a,$f7
1608  8B67 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1609  8B69 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1610  8B6B CC 8F 97     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1611  8B6E C9           	ret
1612  8B6F
1613  8B6F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1614  8B6F              ;
1615  8B6F              ;	Rutina provisional para que los malotes cagen balas.
1616  8B6F
1617  8B6F              Detecta_disparo_entidad
1618  8B6F
1619  8B6F 3A AA 88     	ld a,(Disparo_entidad)
1620  8B72 A7           	and a
1621  8B73 C8           	ret z
1622  8B74
1623  8B74              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1624  8B74
1625  8B74              ;	ld a,$7f				; Detecta SPACE.
1626  8B74              ;	in a,($fe)
1627  8B74              ;	and 1
1628  8B74              ;	ret nz
1629  8B74
1630  8B74 CD ED 8B     	call Genera_disparo
1631  8B77 C9           	ret
1632  8B78
1633  8B78              ; ----------------------------------------------------------------------
1634  8B78              ;
1635  8B78              ;	8/9/23
1636  8B78
1637  8B78 2A 8D 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1638  8B7B 2B            	dec hl
1639  8B7C 7E           	ld a,(hl)
1640  8B7D A7           	and a
1641  8B7E C8           	ret z										; Salimos si es álbum está vacío.
1642  8B7F
1643  8B7F 11 4A 88     	ld de,Variables_de_borrado+5
1644  8B82 01 06 00     	ld bc,6
1645  8B85 ED B8        	lddr
1646  8B87 C9           	ret
1647  8B88
1648  8B88              ; ----------------------------------------------------------------------
1649  8B88              ;
1650  8B88              ;	9/9/23
1651  8B88
1652  8B88              Repone_datos_de_borrado_Amadeus
1653  8B88
1654  8B88 21 45 88     	ld hl,Variables_de_borrado
1655  8B8B 11 AC 70     	ld de,Album_de_fotos_Amadeus
1656  8B8E 01 06 00     	ld bc,6
1657  8B91 ED B0        	ldir
1658  8B93
1659  8B93 EB           	ex de,hl
1660  8B94 22 8D 88     	ld (End_Snapshot_Amadeus),hl
1661  8B97
1662  8B97 C9           	ret
1663  8B98
1664  8B98              ; ----------------------------------------------------------------------
1665  8B98              ;
1666  8B98              ;	27/10/23
1667  8B98              ;
1668  8B98
1669  8B98              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1670  8B98              ;	_ Album_de_fotos correspondiente.
1671  8B98
1672  8B98              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1673  8B98              ;	_ durante el proceso de escritura.
1674  8B98
1675  8B98              Repone_datos_de_borrado
1676  8B98
1677  8B98 ED 5B 87 88  	ld de,(Stack_snapshot)
1678  8B9C 21 45 88     	ld hl,Variables_de_borrado
1679  8B9F 01 06 00     	ld bc,6
1680  8BA2 ED B0        	ldir
1681  8BA4
1682  8BA4 EB           	ex de,hl
1683  8BA5 22 87 88     	ld (Stack_snapshot),hl
1684  8BA8
1685  8BA8 C9           	ret
1686  8BA9
1687  8BA9              ; --------------------------------------------------------------------------------------
1688  8BA9
1689  8BA9              Pinta_Amadeus
1690  8BA9
1691  8BA9 CD 4B 8A        	call Calcula_malotes_Amadeus
1692  8BAC CD 5A 94     	call Extrae_foto_Amadeus
1693  8BAF CD 0B 8A     	call Limpia_album_Amadeus
1694  8BB2
1695  8BB2 C9           	ret
1696  8BB3
1697  8BB3              Pinta_entidades
1698  8BB3
1699  8BB3              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1700  8BB3
1701  8BB3 3A 8F 88     	ld a,(Ctrl_3)
1702  8BB6 CB 47        	bit 0,a
1703  8BB8 C8           	ret z
1704  8BB9
1705  8BB9 CD 33 8A     	call Calcula_numero_de_malotes
1706  8BBC CD D8 93     	call Extrae_foto_entidades
1707  8BBF CD 76 71     	call Limpia_y_reinicia_Stack_Snapshot
1708  8BC2
1709  8BC2 C9           	ret
1710  8BC3
1711  8BC3              ; -----------------------------------------------------------------------------------
1712  8BC3              ;
1713  8BC3              ;	10/12/23
1714  8BC3              ;
1715  8BC3              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1716  8BC3
1717  8BC3              Actualiza_relojes
1718  8BC3
1719  8BC3 3A 8F 88     	ld a,(Ctrl_3)
1720  8BC6 CB 47        	bit 0,a
1721  8BC8 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1722  8BC9
1723  8BC9 21 A2 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1724  8BCC 34           	inc (hl)
1725  8BCD
1726  8BCD 34           	inc (hl)
1727  8BCE 35           	dec (hl)
1728  8BCF C0           	ret nz
1729  8BD0
1730  8BD0 21 A3 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1731  8BD3 34           	inc (hl)
1732  8BD4 C9           	ret
1733  8BD5
1734  8BD5              ; ---------------------------------------------------------------
1735  8BD5              ;
1736  8BD5              ;	21/12/23
1737  8BD5
1738  8BD5              Guarda_parametros_DRAW
1739  8BD5
1740  8BD5 21 2E 88     	ld hl,Bandeja_DRAW
1741  8BD8 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1742  8BDB 01 2A 00     	ld bc,42
1743  8BDE ED B0        	ldir
1744  8BE0 C9           	ret
1745  8BE1
1746  8BE1              Recupera_parametros_DRAW
1747  8BE1
1748  8BE1 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1749  8BE4 11 2E 88     	ld de,Bandeja_DRAW
1750  8BE7 01 2A 00     	ld bc,42
1751  8BEA ED B0        	ldir
1752  8BEC C9           	ret
1753  8BED
1754  8BED              ; ---------------------------------------------------------------
1755  8BED
1756  8BED              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8BED              ; ******************************************************************************************************************************************************************************************
   2+ 8BED              ;
   3+ 8BED              ;   21/07/23
   4+ 8BED              ;
   5+ 8BED              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8BED              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8BED              ;
   8+ 8BED              ;
   9+ 8BED              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8BED              ;
  11+ 8BED              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8BED              ;               _ hacen las entidades hacia abajo.
  13+ 8BED              ;
  14+ 8BED              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8BED              ;
  16+ 8BED              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8BED              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8BED              ;
  19+ 8BED              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8BED              ;           _ la bala.
  21+ 8BED              ;
  22+ 8BED              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8BED              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8BED              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8BED              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8BED              ;           _ en el momento de generarse la bala)).
  27+ 8BED
  28+ 8BED              Genera_disparo
  29+ 8BED
  30+ 8BED              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8BED              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8BED              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8BED              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8BED              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8BED              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8BED              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8BED
  38+ 8BED              ; Exclusiones:
  39+ 8BED
  40+ 8BED 3A 5B 88         ld a,(Vel_down)
  41+ 8BF0 47               ld b,a
  42+ 8BF1 3A A1 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8BF4 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8BF5 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8BF6 3A 52 88         ld a,(Columnas)
  46+ 8BF9 47               ld b,a
  47+ 8BFA 3A 30 88         ld a,(Columns)
  48+ 8BFD B8               cp b
  49+ 8BFE C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8BFF
  51+ 8BFF              ; ----- ----- -----
  52+ 8BFF
  53+ 8BFF 3A 51 88         ld a,(Ctrl_0)
  54+ 8C02 CB 77            bit 6,a
  55+ 8C04 20 06            jr nz,14F
  56+ 8C06
  57+ 8C06 3A 36 88         ld a,(Coordenada_y)
  58+ 8C09 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8C0B D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8C0C
  61+ 8C0C 21 00 80     14 ld hl,Indice_disparo
  62+ 8C0F 3A 37 88         ld a,(CTRL_DESPLZ)
  63+ 8C12 4F               ld c,a
  64+ 8C13 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8C15              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8C15              ;                                            ""        ""       "f9", B="1"
  67+ 8C15              ;                                            ""        ""       "fb", B="2"
  68+ 8C15              ;                                            ""        ""       "fb", B="3"
  69+ 8C15 A7               and a
  70+ 8C16 28 10            jr z,1F
  71+ 8C18 E6 01            and 1
  72+ 8C1A C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8C1B
  74+ 8C1B 79               ld a,c
  75+ 8C1C 16 F9            ld d,$f9
  76+ 8C1E 23           2 inc hl
  77+ 8C1F 23               inc hl
  78+ 8C20 04               inc b
  79+ 8C21 BA               cp d
  80+ 8C22 28 04            jr z,1F
  81+ 8C24 14               inc d
  82+ 8C25 14               inc d
  83+ 8C26 18 F6            jr 2B
  84+ 8C28
  85+ 8C28 CD 7F 8A     1 call Extrae_address
  86+ 8C2B E5               push hl
  87+ 8C2C FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8C2E DD 21 A0 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8C32
  90+ 8C32              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8C32              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8C32
  93+ 8C32 3A 51 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8C35 CB 77            bit 6,a
  95+ 8C37 20 04            jr nz,19F
  96+ 8C39
  97+ 8C39 AF               xor a
  98+ 8C3A 32 AA 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8C3D
 100+ 8C3D 3A 43 88     19 ld a,(Cuad_objeto)
 101+ 8C40 FE 02            cp 2
 102+ 8C42 38 66            jr c,3F
 103+ 8C44 28 64            jr z,3F
 104+ 8C46
 105+ 8C46              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8C46
 107+ 8C46 E6 01            and 1
 108+ 8C48 28 30            jr z,4F
 109+ 8C4A
 110+ 8C4A              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8C4A              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8C4A              ;
 113+ 8C4A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8C4A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8C4A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8C4A
 117+ 8C4A 2A 31 88     	ld hl,(Posicion_actual)
 118+ 8C4D
 119+ 8C4D              ;   Amadeus o entidad ???.
 120+ 8C4D
 121+ 8C4D 3A 51 88         ld a,(Ctrl_0)
 122+ 8C50 CB 77            bit 6,a
 123+ 8C52 28 0A            jr z,8F
 124+ 8C54
 125+ 8C54              ; 	Dispara Amadeus.
 126+ 8C54
 127+ 8C54 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8C56 CD C9 93         call PreviousScan
 129+ 8C59 CD C9 93         call PreviousScan
 130+ 8C5C
 131+ 8C5C              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8C5C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8C5C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8C5C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8C5C
 136+ 8C5C 18 11            jr 10F
 137+ 8C5E
 138+ 8C5E              ; 	Dispara Entidad.
 139+ 8C5E
 140+ 8C5E 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8C61              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8C61
 143+ 8C61              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8C61              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8C61
 146+ 8C61 C5               push bc
 147+ 8C62 06 10            ld b,16
 148+ 8C64 CD BA 93     9 call NextScan
 149+ 8C67 10 FB            djnz 9B
 150+ 8C69 C1               pop bc
 151+ 8C6A CD D4 8C         call Ajusta_disparo_parte_izquierda
 152+ 8C6D 18 06            jr 17F
 153+ 8C6F
 154+ 8C6F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8C6F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8C6F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8C6F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8C6F
 159+ 8C6F CD D4 8C     10 call Ajusta_disparo_parte_izquierda
 160+ 8C72 CD 49 8D         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8C75              ;                                                      ; _al generar el disparo.
 162+ 8C75
 163+ 8C75              ; 	LLegados a este punto tendremos:
 164+ 8C75              ;
 165+ 8C75              ;       Puntero_objeto_disparo en IY.
 166+ 8C75              ;       Rutinas_de_impresion en IX.
 167+ 8C75              ;       Puntero_de_impresion en HL.
 168+ 8C75              ;       Impacto/Dirección en BC.
 169+ 8C75
 170+ 8C75 CD DC 8C     17 call Almacena_disparo
 171+ 8C78 18 52            jr 6F                                             ; RET.
 172+ 8C7A
 173+ 8C7A              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8C7A              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8C7A              ;
 176+ 8C7A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8C7A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8C7A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8C7A
 180+ 8C7A 2A 31 88     4 ld hl,(Posicion_actual)
 181+ 8C7D
 182+ 8C7D              ;   Amadeus o entidad ???.
 183+ 8C7D
 184+ 8C7D 3A 51 88         ld a,(Ctrl_0)
 185+ 8C80 CB 77            bit 6,a
 186+ 8C82 28 0A            jr z,11F
 187+ 8C84
 188+ 8C84              ; 	Dispara Amadeus.
 189+ 8C84
 190+ 8C84 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8C86 CD C9 93         call PreviousScan
 192+ 8C89 CD C9 93         call PreviousScan
 193+ 8C8C
 194+ 8C8C              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8C8C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8C8C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8C8C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8C8C
 199+ 8C8C 18 11            jr 13F
 200+ 8C8E
 201+ 8C8E              ; 	Dispara Entidad.
 202+ 8C8E
 203+ 8C8E 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8C91              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8C91
 206+ 8C91              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8C91              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8C91
 209+ 8C91 C5               push bc
 210+ 8C92 06 10            ld b,16
 211+ 8C94 CD BA 93     12 call NextScan
 212+ 8C97 10 FB            djnz 12B
 213+ 8C99 C1               pop bc
 214+ 8C9A
 215+ 8C9A CD CD 8C         call Ajusta_disparo_parte_derecha
 216+ 8C9D 18 06            jr 18F
 217+ 8C9F
 218+ 8C9F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8C9F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8C9F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8C9F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8C9F
 223+ 8C9F CD CD 8C     13 call Ajusta_disparo_parte_derecha
 224+ 8CA2 CD 49 8D         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8CA5              ;                                                       ; _al generar el disparo.
 226+ 8CA5
 227+ 8CA5              ; LLegados a este punto tendremos:
 228+ 8CA5              ;
 229+ 8CA5              ;       Puntero_objeto_disparo en IY.
 230+ 8CA5              ;       Rutinas_de_impresion en IX.
 231+ 8CA5              ;       Puntero_de_impresion en HL.
 232+ 8CA5              ;       Impacto/Dirección en BC.
 233+ 8CA5
 234+ 8CA5 CD DC 8C     18 call Almacena_disparo
 235+ 8CA8 18 22            jr 6F                                               ; RET.
 236+ 8CAA
 237+ 8CAA              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8CAA
 239+ 8CAA 28 11        3 jr z,5F
 240+ 8CAC
 241+ 8CAC              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8CAC              ;
 243+ 8CAC              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8CAC              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8CAC              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8CAC              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8CAC
 248+ 8CAC              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8CAC              ;	   ""        ""       "f9", B="1"
 250+ 8CAC              ;	   ""        ""       "fb", B="2"
 251+ 8CAC              ; 	   ""        ""       "fb", B="3"
 252+ 8CAC
 253+ 8CAC 2A 31 88     	ld hl,(Posicion_actual)
 254+ 8CAF CD BA 93     	call NextScan
 255+ 8CB2
 256+ 8CB2              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8CB2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8CB2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8CB2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8CB2
 261+ 8CB2 CD D4 8C         call Ajusta_disparo_parte_izquierda
 262+ 8CB5
 263+ 8CB5              ; 	No se produce impacto. B="$80"
 264+ 8CB5              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8CB5
 266+ 8CB5 01 80 80         ld bc,$8080
 267+ 8CB8
 268+ 8CB8              ; 	LLegados a este punto tendremos:
 269+ 8CB8              ;
 270+ 8CB8              ;       Puntero_objeto_disparo en IY.
 271+ 8CB8              ;       Rutinas_de_impresion en IX.
 272+ 8CB8              ;       Puntero_de_impresion en HL.
 273+ 8CB8              ;       Impacto/Dirección en BC.
 274+ 8CB8
 275+ 8CB8 CD DC 8C         call Almacena_disparo
 276+ 8CBB 18 0F            jr 6F                                           ; RET.
 277+ 8CBD
 278+ 8CBD              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8CBD              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8CBD              ;
 281+ 8CBD              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8CBD              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8CBD              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8CBD              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8CBD
 286+ 8CBD 2A 31 88     5 ld hl,(Posicion_actual)
 287+ 8CC0 CD BA 93     	call NextScan
 288+ 8CC3
 289+ 8CC3              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8CC3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8CC3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8CC3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8CC3
 294+ 8CC3 CD CD 8C         call Ajusta_disparo_parte_derecha
 295+ 8CC6
 296+ 8CC6              ; 	No se produce impacto. B="$80"
 297+ 8CC6              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8CC6
 299+ 8CC6 01 80 80     15 ld bc,$8080
 300+ 8CC9
 301+ 8CC9              ; 	LLegados a este punto tendremos:
 302+ 8CC9              ;
 303+ 8CC9              ;       Puntero_objeto_disparo en IY.
 304+ 8CC9              ;       Rutinas_de_impresion en IX.
 305+ 8CC9              ;       Puntero_de_impresion en HL.
 306+ 8CC9              ;       Impacto/Dirección en BC.
 307+ 8CC9
 308+ 8CC9 CD DC 8C         call Almacena_disparo
 309+ 8CCC
 310+ 8CCC C9           6 ret
 311+ 8CCD
 312+ 8CCD              ; ----------------------------------------------------------------
 313+ 8CCD              ;
 314+ 8CCD              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8CCD              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8CCD              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8CCD
 318+ 8CCD 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8CCE FE 02            cp 2
 320+ 8CD0 38 01            jr c,1F
 321+ 8CD2 23               inc hl
 322+ 8CD3 C9           1 ret
 323+ 8CD4
 324+ 8CD4 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8CD5 FE 01        	cp 1
 326+ 8CD7 20 01        	jr nz,1F
 327+ 8CD9 2B           	dec hl
 328+ 8CDA 2B           1 dec hl
 329+ 8CDB C9               ret
 330+ 8CDC
 331+ 8CDC              ; ----------------------------------------------------------------
 332+ 8CDC              ;
 333+ 8CDC              ;   25/02/23
 334+ 8CDC              ;
 335+ 8CDC              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8CDC              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8CDC              ;
 338+ 8CDC              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8CDC              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8CDC
 341+ 8CDC              Almacena_disparo
 342+ 8CDC
 343+ 8CDC E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8CDD F1               pop af
 345+ 8CDE 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8CDF
 347+ 8CDF 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8CE0 E6 01            and 1
 349+ 8CE2 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8CE4              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8CE4              ; 	Dispara AMADEUS.
 352+ 8CE4
 353+ 8CE4              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8CE4              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8CE4              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8CE4              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8CE4
 358+ 8CE4 C5               push bc
 359+ 8CE5 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8CE8 2A 94 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8CEB A7               and a
 362+ 8CEC ED 42            sbc hl,bc
 363+ 8CEE CC 04 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8CF1 C1               pop bc
 365+ 8CF2 28 54            jr z,4F
 366+ 8CF4
 367+ 8CF4 2A 94 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8CF7 23               inc hl
 369+ 8CF8 23               inc hl
 370+ 8CF9 22 94 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8CFC              ;                                                   ; _ Disparo_(+1).
 372+ 8CFC 18 18            jr 2F
 373+ 8CFE
 374+ 8CFE              ; Dispara una entidad.
 375+ 8CFE
 376+ 8CFE C5           1 push bc
 377+ 8CFF 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8D02 2A 92 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8D05 A7               and a
 380+ 8D06 ED 42            sbc hl,bc
 381+ 8D08 CC FD 89         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8D0B C1               pop bc
 383+ 8D0C 28 3A            jr z,4F
 384+ 8D0E
 385+ 8D0E 2A 92 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8D11 23               inc hl
 387+ 8D12 23               inc hl
 388+ 8D13 22 92 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8D16              ;                                                   ; _ Disparo_(+1).
 390+ 8D16 CD 7F 8A     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8D19              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8D19              ;
 393+ 8D19              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8D19              ;                                                     Rutinas_de_impresion en IX.
 395+ 8D19              ;                                                     Puntero_de_impresion en HL.
 396+ 8D19              ;                                                     Impacto/Dirección en BC.
 397+ 8D19
 398+ 8D19 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8D1A 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8D1B 23               inc hl                                          ; _ al siguiente.
 401+ 8D1C A7               and a
 402+ 8D1D 20 C0            jr nz,3B
 403+ 8D1F
 404+ 8D1F 08               ex af,af
 405+ 8D20 ED 73 81 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8D24 F9               ld sp,hl
 407+ 8D25
 408+ 8D25 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8D27 F5               push af                                         ; Puntero de impresión.
 410+ 8D28 FD E5            push iy                                         ; Puntero objeto.
 411+ 8D2A C5               push bc                                         ; Control.
 412+ 8D2B
 413+ 8D2B ED 7B 81 88      ld sp,(Stack)
 414+ 8D2F
 415+ 8D2F              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8D2F
 417+ 8D2F 21 70 88     	ld hl,Ctrl_1
 418+ 8D32 CB C6        	set 0,(hl)
 419+ 8D34
 420+ 8D34 DD E5        	push ix
 421+ 8D36 E1               pop hl
 422+ 8D37 F5               push af
 423+ 8D38 DD E1            pop ix
 424+ 8D3A
 425+ 8D3A CD 16 71     	call Guarda_foto_registros
 426+ 8D3D
 427+ 8D3D 21 70 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8D40 CB 86        	res 0,(hl)
 429+ 8D42
 430+ 8D42              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8D42              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8D42
 433+ 8D42 CD 04 8A         call Inicia_Puntero_Disparo_Amadeus
 434+ 8D45 CD FD 89         call Inicia_Puntero_Disparo_Entidades
 435+ 8D48
 436+ 8D48 C9           4 ret
 437+ 8D49
 438+ 8D49              ; ----------------------------------------------------------------
 439+ 8D49              ;
 440+ 8D49              ;   4/3/23
 441+ 8D49              ;
 442+ 8D49              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8D49              ;   _ al generarse el disparo.
 444+ 8D49              ;
 445+ 8D49              ;       "$80" ..... No se produce colisión.
 446+ 8D49              ;       "$81" ..... Se produce colisión.
 447+ 8D49              ;
 448+ 8D49              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8D49              ;         _ que forman el disparo.
 450+ 8D49
 451+ 8D49
 452+ 8D49              Comprueba_Colision
 453+ 8D49
 454+ 8D49              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8D49
 456+ 8D49 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8D4B E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8D4C
 459+ 8D4C CD 82 8D         call Modifica_H_Velocidad_disparo
 460+ 8D4F
 461+ 8D4F 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8D50 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8D52 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8D54
 465+ 8D54 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8D56 CD 72 8D         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8D59
 468+ 8D59 7B               ld a,e
 469+ 8D5A E6 01            and 1
 470+ 8D5C 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8D5E              ;                                                  ; _ para activar IMPACTO.
 472+ 8D5E E1               pop hl
 473+ 8D5F E5               push hl
 474+ 8D60 CD BA 93         call NextScan
 475+ 8D63
 476+ 8D63 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8D64 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8D66 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8D68              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8D68 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8D6A CD 72 8D         call Bucle_2
 482+ 8D6D
 483+ 8D6D 43           1 ld b,e
 484+ 8D6E E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8D6F FD E1            pop iy
 486+ 8D71 C9               ret
 487+ 8D72
 488+ 8D72              ; ---------- ----------
 489+ 8D72
 490+ 8D72 06 02        Bucle_2 ld b,2
 491+ 8D74 FD 7E 00     2 ld a,(iy)
 492+ 8D77 A6               and (hl)
 493+ 8D78 28 02            jr z,1F
 494+ 8D7A 1E 81            ld e,$81
 495+ 8D7C 23           1 inc hl
 496+ 8D7D FD 23            inc iy
 497+ 8D7F 10 F3            djnz 2B
 498+ 8D81 C9               ret
 499+ 8D82
 500+ 8D82              ; ---------- ----------
 501+ 8D82              ;
 502+ 8D82              ;   21/7/23
 503+ 8D82
 504+ 8D82              Modifica_H_Velocidad_disparo
 505+ 8D82
 506+ 8D82 3A A1 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8D85 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8D87 D0               ret nc                                         ; _ incrementamos H.
 509+ 8D88 24               inc h
 510+ 8D89
 511+ 8D89 C9               ret
 512+ 8D8A
 513+ 8D8A              ; -------------------------------------------------------------------------------------------------------------
 514+ 8D8A              ;
 515+ 8D8A              ;   04/12/23
 516+ 8D8A              ;
 517+ 8D8A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8D8A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8D8A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8D8A              ;
 521+ 8D8A              ;   MODIFICA: HL,DE,B y A.
 522+ 8D8A
 523+ 8D8A              Genera_coordenadas_X
 524+ 8D8A
 525+ 8D8A              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8D8A              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8D8A
 528+ 8D8A              ;   Limpiamos almacenes.
 529+ 8D8A
 530+ 8D8A CD BB 8D         call Limpia_Coordenadas_X
 531+ 8D8D
 532+ 8D8D              ;   Almacenamos coordenadas X.
 533+ 8D8D
 534+ 8D8D              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8D8D
 536+ 8D8D 2A 4B 88         ld hl,(Puntero_de_impresion)
 537+ 8D90 11 9E 88         ld de,Coordenadas_X_Entidad
 538+ 8D93 06 02            ld b,2
 539+ 8D95
 540+ 8D95 3A 37 88         ld a,(CTRL_DESPLZ)
 541+ 8D98 A7               and a
 542+ 8D99 28 01            jr z,1F
 543+ 8D9B 04               inc b
 544+ 8D9C
 545+ 8D9C CD B2 8D     1 call Guarda_coordenadas_X
 546+ 8D9F
 547+ 8D9F              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8D9F
 549+ 8D9F 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8DA2 11 9B 88         ld de,Coordenadas_X_Amadeus
 551+ 8DA5 06 02            ld b,2
 552+ 8DA7
 553+ 8DA7 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8DAA A7               and a
 555+ 8DAB 28 01            jr z,2F
 556+ 8DAD 04               inc b
 557+ 8DAE
 558+ 8DAE CD B2 8D     2 call Guarda_coordenadas_X
 559+ 8DB1
 560+ 8DB1              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8DB1
 562+ 8DB1 C9               ret
 563+ 8DB2
 564+ 8DB2              ; ----- ----- ----- ----- -----
 565+ 8DB2
 566+ 8DB2 7D           Guarda_coordenadas_X  ld a,l
 567+ 8DB3 E6 1F            and $1f
 568+ 8DB5 12           1 ld (de),a
 569+ 8DB6 3C               inc a
 570+ 8DB7 13               inc de
 571+ 8DB8 10 FB            djnz 1B
 572+ 8DBA C9               ret
 573+ 8DBB
 574+ 8DBB AF           Limpia_Coordenadas_X xor a
 575+ 8DBC 06 06            ld b,6
 576+ 8DBE 21 9B 88         ld hl,Coordenadas_X_Amadeus
 577+ 8DC1 77           1 ld (hl),a
 578+ 8DC2 23               inc hl
 579+ 8DC3 10 FC            djnz 1B
 580+ 8DC5 C9               ret
 581+ 8DC6
 582+ 8DC6              ; ----- ----- ----- ----- -----
 583+ 8DC6
 584+ 8DC6              Compara_coordenadas_X
 585+ 8DC6
 586+ 8DC6 06 03            ld b,3
 587+ 8DC8 11 A0 88         ld de,Coordenadas_X_Entidad+2
 588+ 8DCB
 589+ 8DCB 1A               ld a,(de)
 590+ 8DCC A7               and a
 591+ 8DCD 20 01            jr nz,2F
 592+ 8DCF 05               dec b
 593+ 8DD0
 594+ 8DD0 1B           2 dec de
 595+ 8DD1 1B               dec de
 596+ 8DD2 21 9B 88         ld hl,Coordenadas_X_Amadeus
 597+ 8DD5
 598+ 8DD5 D5           1 push de
 599+ 8DD6 E5               push hl
 600+ 8DD7 C5               push bc
 601+ 8DD8
 602+ 8DD8 CD E2 8D         call Comparando
 603+ 8DDB
 604+ 8DDB C1               pop bc
 605+ 8DDC E1               pop hl
 606+ 8DDD D1               pop de
 607+ 8DDE
 608+ 8DDE 13               inc de
 609+ 8DDF 10 F4            djnz 1B
 610+ 8DE1
 611+ 8DE1 C9               ret
 612+ 8DE2
 613+ 8DE2              ; ----- ----- ----- ----- -----
 614+ 8DE2              ;
 615+ 8DE2              ;   4/12/23
 616+ 8DE2              ;
 617+ 8DE2              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8DE2
 619+ 8DE2 06 03        Comparando ld b,3
 620+ 8DE4 1A               ld a,(de)
 621+ 8DE5 4E           2 ld c,(hl)
 622+ 8DE6 B9               cp c
 623+ 8DE7 28 04            jr z,1F
 624+ 8DE9 23               inc hl
 625+ 8DEA 10 F9            djnz 2B
 626+ 8DEC C9               ret
 627+ 8DED
 628+ 8DED 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8DEF 32 44 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8DF2 21 96 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8DF5 CB D6            set 2,(hl)
 632+ 8DF7 C9               ret
 633+ 8DF8
 634+ 8DF8              ; -----------------------------------------------------------------------
 635+ 8DF8              ;
 636+ 8DF8              ;   7/12/23
 637+ 8DF8              ;
 638+ 8DF8
 639+ 8DF8              Detecta_colision_nave_entidad
 640+ 8DF8
 641+ 8DF8              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8DF8
 643+ 8DF8 FD 2A 33 88      ld iy,(Puntero_objeto)
 644+ 8DFC 2A 4B 88         ld hl,(Puntero_de_impresion)
 645+ 8DFF
 646+ 8DFF E5               push hl
 647+ 8E00
 648+ 8E00              ; ----- ----- -----
 649+ 8E00 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8E02 06 0A            ld b,10
 651+ 8E04 CD 34 8E     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8E07 7B               ld a,e
 653+ 8E08 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8E0A 38 0E            jr c,3F
 655+ 8E0C
 656+ 8E0C              ; LLegados a este punto:
 657+ 8E0C              ;
 658+ 8E0C              ;   HAY COLISIÓN !!!!!.
 659+ 8E0C              ;
 660+ 8E0C              ;   .db (Impacto) de Amadeus a "1".
 661+ 8E0C              ;   SET el bit3 de (Impacto2).
 662+ 8E0C              ;
 663+ 8E0C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8E0C
 665+ 8E0C 21 44 88         ld hl,Impacto
 666+ 8E0F 36 01            ld (hl),1
 667+ 8E11 21 96 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8E14 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8E16 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8E18
 671+ 8E18 18 18            jr 1F
 672+ 8E1A
 673+ 8E1A              ; -----
 674+ 8E1A
 675+ 8E1A E1           3 pop hl
 676+ 8E1B CD BA 93         call NextScan
 677+ 8E1E E5               push hl
 678+ 8E1F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8E20 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8E22 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8E24 30 0C            jr nc,1F
 682+ 8E26              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8E26 10 DC            djnz 2B
 684+ 8E28
 685+ 8E28              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8E28
 687+ 8E28              ; LLegados a este punto:
 688+ 8E28              ;
 689+ 8E28              ;   NO HAY COLISIÓN !!!!!.
 690+ 8E28              ;
 691+ 8E28              ;   .db (Impacto) de Amadeus a "0".
 692+ 8E28              ;   RES el bit2 de (Impacto2).
 693+ 8E28              ;
 694+ 8E28              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8E28              ;   Lo colocamos a "0".
 696+ 8E28
 697+ 8E28 21 96 88         ld hl,Impacto2
 698+ 8E2B CB 96            res 2,(hl)
 699+ 8E2D 2A 97 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8E30 36 00            ld (hl),0
 701+ 8E32
 702+ 8E32 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8E33 C9               ret
 704+ 8E34
 705+ 8E34               ; ---------- ----------
 706+ 8E34
 707+ 8E34 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8E35 3A 30 88         ld a,(Columns)
 709+ 8E38 47               ld b,a
 710+ 8E39 FD 7E 00     2 ld a,(iy)
 711+ 8E3C BE               cp (hl)
 712+ 8E3D 28 01            jr z,1F
 713+ 8E3F
 714+ 8E3F 1C               inc e
 715+ 8E40
 716+ 8E40 23           1 inc hl
 717+ 8E41 FD 23            inc iy
 718+ 8E43 10 F4            djnz 2B
 719+ 8E45 C1               pop bc
 720+ 8E46 C9               ret
 721+ 8E47
 722+ 8E47              ; -------------------------------------------------------------------------------------------------------------
 723+ 8E47              ;
 724+ 8E47              ;   13/03/23
 725+ 8E47              ;
 726+ 8E47              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8E47              ;
 728+ 8E47              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8E47
 730+ 8E47 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8E4A 7E               ld a,(hl)
 732+ 8E4B A7               and a
 733+ 8E4C C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8E4D
 735+ 8E4D 44               ld b,h
 736+ 8E4E 4D               ld c,l
 737+ 8E4F 2A 89 88         ld hl,(Stack_snapshot_disparos)
 738+ 8E52 E5               push hl
 739+ 8E53 A7               and a
 740+ 8E54 ED 42            sbc hl,bc
 741+ 8E56 E5               push hl
 742+ 8E57 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8E58
 744+ 8E58 E1               pop hl
 745+ 8E59 54               ld d,h
 746+ 8E5A 5D               ld e,l
 747+ 8E5B 1B               dec de
 748+ 8E5C ED B8            lddr                                                ; Limpiamos.
 749+ 8E5E
 750+ 8E5E 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8E61 22 89 88         ld (Stack_snapshot_disparos),hl
 752+ 8E64
 753+ 8E64 C9               ret
 754+ 8E65
 755+ 8E65              ; -------------------------------------------------------------------------------------------------------------
 756+ 8E65              ;
 757+ 8E65              ;   18/07/23
 758+ 8E65              ;
 759+ 8E65
 760+ 8E65              Motor_de_disparos
 761+ 8E65
 762+ 8E65              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8E65
 764+ 8E65 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8E68 2A 94 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8E6B
 767+ 8E6B CD 7F 8A     2 call Extrae_address
 768+ 8E6E 7E               ld a,(hl)
 769+ 8E6F A7               and a
 770+ 8E70 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8E72
 772+ 8E72              ; ----- ----- ----- ----- ----- -----
 773+ 8E72
 774+ 8E72 C5               push bc
 775+ 8E73 CD 37 8F         call foto_disparo_a_borrar
 776+ 8E76
 777+ 8E76              ; Existe colisión con este disparo???
 778+ 8E76
 779+ 8E76 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8E77 7E               ld a,(hl)
 781+ 8E78 2B               dec hl
 782+ 8E79 E6 01            and 1
 783+ 8E7B 28 1D            jr z,9F
 784+ 8E7D
 785+ 8E7D              ;   En este punto:
 786+ 8E7D              ;
 787+ 8E7D              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8E7D              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8E7D              ;   _con la entidad).
 790+ 8E7D              ;
 791+ 8E7D              ;   Disparo_2A defw 0                                ; Control.
 792+ 8E7D              ;    defw 0                                          ; Puntero objeto.
 793+ 8E7D              ;    defw 0                                          ; Puntero de impresión.
 794+ 8E7D              ;    defw 0                                          ; Rutina de impresión.
 795+ 8E7D
 796+ 8E7D E5               push hl
 797+ 8E7E
 798+ 8E7E 06 04            ld b,4
 799+ 8E80 23           19 inc hl
 800+ 8E81 10 FD            djnz 19B
 801+ 8E83
 802+ 8E83 CD 7F 8A         call Extrae_address
 803+ 8E86 CD 91 9A         call Genera_coordenadas_disparo
 804+ 8E89
 805+ 8E89              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8E89
 807+ 8E89 21 99 88         ld hl,Coordenadas_disparo_certero
 808+ 8E8C 72               ld (hl),d
 809+ 8E8D 23               inc hl
 810+ 8E8E 73               ld (hl),e
 811+ 8E8F
 812+ 8E8F              ; Elimino el disparo de la base de datos.
 813+ 8E8F
 814+ 8E8F E1               pop hl
 815+ 8E90 CD B6 8F         call Elimina_disparo_de_base_de_datos
 816+ 8E93 21 96 88         ld hl,Impacto2
 817+ 8E96 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8E98
 819+ 8E98 18 06            jr 11F
 820+ 8E9A
 821+ 8E9A CD 60 8F     9 call Mueve_disparo
 822+ 8E9D CD 37 8F         call foto_disparo_a_borrar
 823+ 8EA0
 824+ 8EA0 C1           11 pop bc
 825+ 8EA1 18 04            jr 7F
 826+ 8EA3
 827+ 8EA3              ; ----- ----- ----- ----- ----- -----
 828+ 8EA3
 829+ 8EA3 ED 42        1 sbc hl,bc
 830+ 8EA5 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8EA7
 832+ 8EA7 2A 94 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8EAA 23               inc hl
 834+ 8EAB 23               inc hl
 835+ 8EAC 22 94 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8EAF 18 BA            jr 2B
 837+ 8EB1
 838+ 8EB1 CD 04 8A     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8EB4              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8EB4
 841+ 8EB4              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8EB4
 843+ 8EB4 01 6E 85         ld bc,Disparo_11
 844+ 8EB7 2A 92 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8EBA
 846+ 8EBA CD 7F 8A     5 call Extrae_address
 847+ 8EBD 7E               ld a,(hl)
 848+ 8EBE A7               and a
 849+ 8EBF 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8EC1
 851+ 8EC1              ; ----- ----- ----- ----- ----- -----
 852+ 8EC1
 853+ 8EC1 C5               push bc
 854+ 8EC2 CD 37 8F         call foto_disparo_a_borrar
 855+ 8EC5
 856+ 8EC5              ; Existe colisión con este disparo???
 857+ 8EC5
 858+ 8EC5 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8EC6 7E               ld a,(hl)
 860+ 8EC7 2B               dec hl
 861+ 8EC8 E6 01            and 1
 862+ 8ECA 28 4D            jr z,10F
 863+ 8ECC
 864+ 8ECC              ;! La colisión se produce con Amadeus???
 865+ 8ECC              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8ECC
 867+ 8ECC E5               push hl
 868+ 8ECD
 869+ 8ECD 06 04            ld b,4
 870+ 8ECF 23           16 inc hl
 871+ 8ED0 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8ED2
 873+ 8ED2 CD 7F 8A         call Extrae_address
 874+ 8ED5 CD 91 9A         call Genera_coordenadas_disparo
 875+ 8ED8
 876+ 8ED8 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8ED9 FE 16            cp $16
 878+ 8EDB 38 2A            jr c,15F
 879+ 8EDD
 880+ 8EDD
 881+ 8EDD              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8EDD
 883+ 8EDD D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8EDE
 885+ 8EDE              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8EDE
 887+ 8EDE 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 8EE1
 889+ 8EE1              ; Coordenada X de Amadeus en D.
 890+ 8EE1
 891+ 8EE1 7D               ld a,l
 892+ 8EE2 E6 1F            and $1F
 893+ 8EE4 57               ld d,a
 894+ 8EE5
 895+ 8EE5 21 8A 85         ld hl,Amadeus_db+8
 896+ 8EE8 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 8EE9
 898+ 8EE9 21 9B 88         ld hl,Coordenadas_X_Amadeus
 899+ 8EEC CD B2 8D         call Guarda_coordenadas_X
 900+ 8EEF
 901+ 8EEF D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 8EF0
 903+ 8EF0              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 8EF0
 905+ 8EF0 06 02            ld b,2
 906+ 8EF2 C5           20 push bc
 907+ 8EF3
 908+ 8EF3 06 03            ld b,3
 909+ 8EF5 21 9B 88         ld hl,Coordenadas_X_Amadeus
 910+ 8EF8 7E           18 ld a,(hl)
 911+ 8EF9 BA               cp d
 912+ 8EFA 20 04            jr nz,17F
 913+ 8EFC
 914+ 8EFC              ;! Colisión Amadeus !!!!!!!!!!
 915+ 8EFC
 916+ 8EFC C1               pop bc
 917+ 8EFD E1               pop hl
 918+ 8EFE 18 0D            jr 14F
 919+ 8F00
 920+ 8F00 23           17 inc hl
 921+ 8F01 10 F5            djnz 18B
 922+ 8F03
 923+ 8F03 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 8F04
 925+ 8F04 C1               pop bc
 926+ 8F05 10 EB            djnz 20B
 927+ 8F07
 928+ 8F07
 929+ 8F07              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 8F07              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 8F07
 932+ 8F07 E1           15 pop hl
 933+ 8F08 23               inc hl
 934+ 8F09 35               dec (hl)
 935+ 8F0A 2B               dec hl
 936+ 8F0B 18 0C            jr 10F
 937+ 8F0D
 938+ 8F0D              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 8F0D              ; _ almacén de coordenadas_X de Amadeus.
 940+ 8F0D
 941+ 8F0D E5           14 push hl
 942+ 8F0E CD B6 8F         call Elimina_disparo_de_base_de_datos
 943+ 8F11 21 96 88         ld hl,Impacto2
 944+ 8F14 CB CE            set 1,(hl)
 945+ 8F16 E1               pop hl
 946+ 8F17 18 06            jr 12F
 947+ 8F19
 948+ 8F19              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 8F19
 950+ 8F19 CD 60 8F     10 call Mueve_disparo
 951+ 8F1C CD 37 8F         call foto_disparo_a_borrar
 952+ 8F1F C1           12 pop bc
 953+ 8F20
 954+ 8F20 18 04            jr 8F
 955+ 8F22
 956+ 8F22              ; ----- ----- ----- ----- ----- -----
 957+ 8F22
 958+ 8F22 ED 42        4 sbc hl,bc
 959+ 8F24 28 0A            jr z,6F
 960+ 8F26
 961+ 8F26 2A 92 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 8F29 23               inc hl
 963+ 8F2A 23               inc hl
 964+ 8F2B 22 92 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 8F2E 18 8A            jr 5B
 966+ 8F30
 967+ 8F30 CD FD 89     6 call Inicia_Puntero_Disparo_Entidades
 968+ 8F33 CD BB 8D         call Limpia_Coordenadas_X
 969+ 8F36 C9               ret
 970+ 8F37
 971+ 8F37              ; ------------------------------------------------------------------
 972+ 8F37
 973+ 8F37              foto_disparo_a_borrar
 974+ 8F37
 975+ 8F37 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 8F38 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 8F39 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 8F3A
 979+ 8F3A E5               push hl
 980+ 8F3B 23               inc hl
 981+ 8F3C 23               inc hl
 982+ 8F3D ED 73 81 88      ld (Stack),sp
 983+ 8F41 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 8F42 FD E1            pop iy
 985+ 8F44 DD E1            pop ix
 986+ 8F46 E1               pop hl
 987+ 8F47 ED 7B 81 88      ld sp,(Stack)
 988+ 8F4B 3A 70 88         ld a,(Ctrl_1)
 989+ 8F4E CB C7            set 0,a
 990+ 8F50 32 70 88         ld (Ctrl_1),a
 991+ 8F53 CD 16 71         call Guarda_foto_registros
 992+ 8F56 3A 70 88         ld a,(Ctrl_1)
 993+ 8F59 CB 87            res 0,a
 994+ 8F5B 32 70 88         ld (Ctrl_1),a
 995+ 8F5E E1               pop hl
 996+ 8F5F C9               ret
 997+ 8F60
 998+ 8F60              ;---------------------------------------------------
 999+ 8F60              ;
1000+ 8F60              ;   18/07/23
1001+ 8F60              ;
1002+ 8F60
1003+ 8F60              Mueve_disparo
1004+ 8F60
1005+ 8F60              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 8F60              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 8F60              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 8F60
1009+ 8F60 E5               push hl
1010+ 8F61
1011+ 8F61 7E               ld a,(hl)
1012+ 8F62
1013+ 8F62 06 04            ld b,4
1014+ 8F64 23           1 inc hl
1015+ 8F65 10 FD            djnz 1B
1016+ 8F67
1017+ 8F67              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 8F67
1019+ 8F67 CD 7F 8A         call Extrae_address
1020+ 8F6A
1021+ 8F6A E6 01            and 1
1022+ 8F6C 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 8F6E
1024+ 8F6E              ; Disparo hacia arriba, (Amadeus).
1025+ 8F6E
1026+ 8F6E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 8F6E              ; _ de la dificultad.
1028+ 8F6E
1029+ 8F6E CD C9 93         call PreviousScan
1030+ 8F71 CD C9 93         call PreviousScan
1031+ 8F74 CD C9 93         call PreviousScan
1032+ 8F77 CD C9 93         call PreviousScan
1033+ 8F7A
1034+ 8F7A              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 8F7A
1036+ 8F7A 7C               ld a,h
1037+ 8F7B FE 40            cp $40
1038+ 8F7D 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 8F7F
1040+ 8F7F              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 8F7F
1042+ 8F7F EB               ex de,hl
1043+ 8F80 06 04            ld b,4
1044+ 8F82 2B           6 dec hl
1045+ 8F83 10 FD            djnz 6B
1046+ 8F85
1047+ 8F85 CD B6 8F         call Elimina_disparo_de_base_de_datos
1048+ 8F88 E1               pop hl
1049+ 8F89 18 10            jr 7F
1050+ 8F8B
1051+ 8F8B              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 8F8B              ; HL contiene el puntero de impresión del disparo.
1053+ 8F8B              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 8F8B
1055+ 8F8B D5           3 push de
1056+ 8F8C C5               push bc
1057+ 8F8D
1058+ 8F8D CD 49 8D         call Comprueba_Colision
1059+ 8F90
1060+ 8F90              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 8F90
1062+ 8F90 78               ld a,b
1063+ 8F91
1064+ 8F91 C1               pop bc
1065+ 8F92 D1               pop de
1066+ 8F93
1067+ 8F93 EB               ex de,hl
1068+ 8F94
1069+ 8F94 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 8F95 23               inc hl                                      ; _ movimiento.
1071+ 8F96 72               ld (hl),d
1072+ 8F97
1073+ 8F97 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 8F98
1075+ 8F98 23               inc hl                                      ; _ en curso.
1076+ 8F99 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 8F9A 2B               dec hl
1078+ 8F9B
1079+ 8F9B C9           7 ret
1080+ 8F9C
1081+ 8F9C              ; Disparo hacia abajo, (Entidad).
1082+ 8F9C
1083+ 8F9C 3A A1 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 8F9F 47               ld b,a
1085+ 8FA0
1086+ 8FA0 CD BA 93     4 call NextScan
1087+ 8FA3 10 FB            djnz 4B
1088+ 8FA5
1089+ 8FA5              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 8FA5
1091+ 8FA5 7C               ld a,h
1092+ 8FA6 FE 58            cp $58
1093+ 8FA8 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 8FAA
1095+ 8FAA EB               ex de,hl
1096+ 8FAB 06 04            ld b,4
1097+ 8FAD 2B           5 dec hl
1098+ 8FAE 10 FD            djnz 5B
1099+ 8FB0
1100+ 8FB0 CD B6 8F         call Elimina_disparo_de_base_de_datos
1101+ 8FB3 E1               pop hl
1102+ 8FB4 18 E5            jr 7B
1103+ 8FB6
1104+ 8FB6              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 8FB6
1106+ 8FB6 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 8FB9 AF               xor a
1108+ 8FBA 77               ld (hl),a
1109+ 8FBB 54               ld d,h
1110+ 8FBC 5D               ld e,l
1111+ 8FBD 13               inc de
1112+ 8FBE ED B0            ldir
1113+ 8FC0 C9               ret
1114+ 8FC1
1115+ 8FC1              ; -----------------------------------------------------------------
1116+ 8FC1              ;
1117+ 8FC1              ;   7/12/23
1118+ 8FC1              ;
1119+ 8FC1
1120+ 8FC1 3A 96 88     Selector_de_impactos ld a,(Impacto2)
1121+ 8FC4 A7               and a
1122+ 8FC5 C8               ret z
1123+ 8FC6
1124+ 8FC6              ; Analizamos si hay impacto por disparos.
1125+ 8FC6
1126+ 8FC6              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 8FC6
1128+ 8FC6 CB 4F            bit 1,a
1129+ 8FC8 28 07            jr z,1F
1130+ 8FCA
1131+ 8FCA 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 8FCD 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 8FCF 18 08            jr 2F
1134+ 8FD1
1135+ 8FD1 CB 47        1 bit 0,a
1136+ 8FD3 C8               ret z
1137+ 8FD4
1138+ 8FD4              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 8FD4
1140+ 8FD4 21 70 88         ld hl,Ctrl_1
1141+ 8FD7 CB D6            set 2,(hl)
1142+ 8FD9
1143+ 8FD9 C9           2 ret
1144+ 8FDA
1145+ 8FDA              ; -----------------------------------------------------------------
1146+ 8FDA              ;
1147+ 8FDA              ;   25/04/23
1148+ 8FDA              ;
1149+ 8FDA
1150+ 8FDA              Determina_resultado_comparativa
1151+ 8FDA
1152+ 8FDA              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 8FDA              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 8FDA              ;
1155+ 8FDA              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 8FDA              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 8FDA              ;
1158+ 8FDA              ;   SBC HL,DE
1159+ 8FDA
1160+ 8FDA              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 8FDA              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 8FDA
1163+ 8FDA              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 8FDA              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 8FDA
1166+ 8FDA
1167+ 8FDA 3A 43 88         ld a,(Cuad_objeto)
1168+ 8FDD FE 02            cp 2
1169+ 8FDF 28 26            jr z,2F
1170+ 8FE1 38 24            jr c,2F
1171+ 8FE3
1172+ 8FE3              ; Cuadrantes 3º y 4º
1173+ 8FE3
1174+ 8FE3 E6 01            and 1
1175+ 8FE5 28 10            jr z,4F
1176+ 8FE7
1177+ 8FE7              ; Cuadrante 3º
1178+ 8FE7
1179+ 8FE7 7C               ld a,h
1180+ 8FE8 06 00            ld b,0
1181+ 8FEA
1182+ 8FEA CD 75 90         call Compara_cositas_H3
1183+ 8FED
1184+ 8FED 04               inc b
1185+ 8FEE 05               dec b
1186+ 8FEF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 8FF0
1188+ 8FF0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 8FF1 06 00            ld b,0
1190+ 8FF3
1191+ 8FF3 CD 87 90         call Compara_cositas_L3
1192+ 8FF6 C9               ret
1193+ 8FF7
1194+ 8FF7              ; Cuadrante 4º
1195+ 8FF7
1196+ 8FF7 7C           4 ld a,h
1197+ 8FF8 06 00            ld b,0
1198+ 8FFA
1199+ 8FFA CD 99 90         call Compara_cositas_H4
1200+ 8FFD
1201+ 8FFD 04               inc b
1202+ 8FFE 05               dec b
1203+ 8FFF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9000
1205+ 9000 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9001 06 00            ld b,0
1207+ 9003
1208+ 9003 CD AF 90         call Compara_cositas_L4
1209+ 9006 C9               ret
1210+ 9007
1211+ 9007              ; Cuadrantes 1º y 2º.
1212+ 9007
1213+ 9007 28 10        2 jr z,3F
1214+ 9009
1215+ 9009              ; 1er Cuadrante
1216+ 9009
1217+ 9009 7C               ld a,h
1218+ 900A 06 00            ld b,0
1219+ 900C
1220+ 900C CD 4D 90         call Compara_cositas_H1
1221+ 900F
1222+ 900F 04               inc b
1223+ 9010 05               dec b
1224+ 9011 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9012
1226+ 9012 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9013 06 00            ld b,0
1228+ 9015
1229+ 9015 CD 63 90         call Compara_cositas_L1
1230+ 9018 C9               ret
1231+ 9019
1232+ 9019
1233+ 9019              ; 2º Cuadrante
1234+ 9019
1235+ 9019 7C           3 ld a,h
1236+ 901A 06 00            ld b,0
1237+ 901C
1238+ 901C CD 29 90         call Compara_cositas_H2
1239+ 901F
1240+ 901F 04               inc b
1241+ 9020 05               dec b
1242+ 9021 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9022
1244+ 9022 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9023 06 00            ld b,0
1246+ 9025
1247+ 9025 CD 3B 90         call Compara_cositas_L2
1248+ 9028 C9               ret
1249+ 9029
1250+ 9029 A7           Compara_cositas_H2 and a
1251+ 902A 28 0D            jr z,1F
1252+ 902C              ;    cp $fd
1253+ 902C              ;    jr z,1F
1254+ 902C              ;    cp $fe
1255+ 902C              ;    jr z,1F
1256+ 902C FE FF            cp $ff
1257+ 902E 28 09            jr z,1F
1258+ 9030 FE 01            cp $01
1259+ 9032 28 05            jr z,1F
1260+ 9034 FE 02            cp $02
1261+ 9036 28 01            jr z,1F
1262+ 9038 C0               ret nz
1263+ 9039 04           1 inc b
1264+ 903A C9               ret
1265+ 903B
1266+ 903B A7           Compara_cositas_L2 and a
1267+ 903C 28 0D            jr z,1F
1268+ 903E              ;    cp $fd
1269+ 903E              ;    jr z,1F
1270+ 903E FE FE            cp $fe
1271+ 9040 28 09            jr z,1F
1272+ 9042 FE FF            cp $ff
1273+ 9044 28 05            jr z,1F
1274+ 9046 FE 01            cp $01
1275+ 9048 28 01            jr z,1F
1276+ 904A              ;    cp $02
1277+ 904A              ;    jr z,1F
1278+ 904A C0               ret nz
1279+ 904B 04           1 inc b
1280+ 904C C9               ret
1281+ 904D
1282+ 904D A7           Compara_cositas_H1 and a
1283+ 904E 28 11            jr z,1F
1284+ 9050              ;    cp $fd
1285+ 9050              ;    jr z,1F
1286+ 9050              ;    cp $fe
1287+ 9050              ;    jr z,1F
1288+ 9050 FE FF            cp $ff
1289+ 9052 28 0D            jr z,1F
1290+ 9054 FE 01            cp $01
1291+ 9056 28 09            jr z,1F
1292+ 9058 FE 02            cp $02
1293+ 905A 28 05            jr z,1F
1294+ 905C FE 03            cp $03
1295+ 905E 28 01            jr z,1F
1296+ 9060 C0               ret nz
1297+ 9061 04           1 inc b
1298+ 9062 C9               ret
1299+ 9063
1300+ 9063 A7           Compara_cositas_L1 and a
1301+ 9064 28 0D            jr z,1F
1302+ 9066              ;    cp $fd
1303+ 9066              ;    jr z,1F
1304+ 9066              ;    cp $fe
1305+ 9066              ;    jr z,1F
1306+ 9066              ;    cp $ff
1307+ 9066              ;    jr z,1F
1308+ 9066 FE 01            cp $01
1309+ 9068 28 09            jr z,1F
1310+ 906A FE 02            cp $02
1311+ 906C 28 05            jr z,1F
1312+ 906E FE 03            cp $03
1313+ 9070 28 01            jr z,1F
1314+ 9072 C0               ret nz
1315+ 9073 04           1 inc b
1316+ 9074 C9               ret
1317+ 9075
1318+ 9075 A7           Compara_cositas_H3 and a
1319+ 9076 28 0D            jr z,1F
1320+ 9078              ;    cp $fd
1321+ 9078              ;    jr z,1F
1322+ 9078 FE FE            cp $fe
1323+ 907A 28 09            jr z,1F
1324+ 907C FE FF            cp $ff
1325+ 907E 28 05            jr z,1F
1326+ 9080 FE 01            cp $01
1327+ 9082 28 01            jr z,1F
1328+ 9084              ;    cp $02
1329+ 9084              ;    jr z,1F
1330+ 9084              ;    cp $03
1331+ 9084              ;    jr z,1F
1332+ 9084 C0               ret nz
1333+ 9085 04           1 inc b
1334+ 9086 C9               ret
1335+ 9087
1336+ 9087 A7           Compara_cositas_L3 and a
1337+ 9088 28 0D            jr z,1F
1338+ 908A              ;    cp $fd
1339+ 908A              ;    jr z,1F
1340+ 908A              ;    cp $fe
1341+ 908A              ;    jr z,1F
1342+ 908A              ;    cp $ff
1343+ 908A              ;    jr z,1F
1344+ 908A FE 01            cp $01
1345+ 908C 28 09            jr z,1F
1346+ 908E FE 02            cp $02
1347+ 9090 28 05            jr z,1F
1348+ 9092 FE 03            cp $03
1349+ 9094 28 01            jr z,1F
1350+ 9096 C0               ret nz
1351+ 9097 04           1 inc b
1352+ 9098 C9               ret
1353+ 9099
1354+ 9099 A7           Compara_cositas_H4 and a
1355+ 909A 28 11            jr z,1F
1356+ 909C FE FD            cp $fd
1357+ 909E 28 0D            jr z,1F
1358+ 90A0 FE FE            cp $fe
1359+ 90A2 28 09            jr z,1F
1360+ 90A4 FE FF            cp $ff
1361+ 90A6 28 05            jr z,1F
1362+ 90A8 FE 01            cp $01
1363+ 90AA 28 01            jr z,1F
1364+ 90AC              ;    cp $02
1365+ 90AC              ;    jr z,1F
1366+ 90AC              ;    cp $03
1367+ 90AC              ;    jr z,1F
1368+ 90AC C0               ret nz
1369+ 90AD 04           1 inc b
1370+ 90AE C9               ret
1371+ 90AF
1372+ 90AF A7           Compara_cositas_L4 and a
1373+ 90B0 28 0D            jr z,1F
1374+ 90B2              ;    cp $fd
1375+ 90B2              ;    jr z,1F
1376+ 90B2 FE FE            cp $fe
1377+ 90B4 28 09            jr z,1F
1378+ 90B6 FE FF            cp $ff
1379+ 90B8 28 05            jr z,1F
1380+ 90BA FE 01            cp $01
1381+ 90BC 28 01            jr z,1F
1382+ 90BE              ;    cp $02
1383+ 90BE              ;    jr z,1F
1384+ 90BE              ;    cp $03
1385+ 90BE              ;    jr z,1F
1386+ 90BE C0               ret nz
1387+ 90BF 04           1 inc b
1388+ 90C0 C9               ret
# file closed: Disparo.asm
1757  90C1              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 90C1              ; ******************************************************************************************************************************************************************************************
   2+ 90C1              ;
   3+ 90C1              ; 26/06/23
   4+ 90C1              ;
   5+ 90C1              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 90C1
   7+ 90C1              Draw
   8+ 90C1
   9+ 90C1 CD AE 93     	call Prepara_draw
  10+ 90C4 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 90C5 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 90C6 28 05        	jr z,2F
  13+ 90C8
  14+ 90C8 3A 43 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 90CB 18 0C        	jr 1F
  16+ 90CD
  17+ 90CD 2A 41 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 90D0 22 31 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 90D3 CD 62 92     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 90D6              ;													; _la esquina superior izquierda de la pantalla.
  21+ 90D6
  22+ 90D6 CD 22 9D     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 90D9
  24+ 90D9 3A 51 88     1 ld a,(Ctrl_0)
  25+ 90DC CB 6F        	bit 5,a
  26+ 90DE 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 90E0
  28+ 90E0 CD F8 90     	call Comprueba_limite_horizontal
  29+ 90E3 CD 88 91     	call Comprueba_limite_vertical
  30+ 90E6
  31+ 90E6              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 90E6              ; -----------------------
  33+ 90E6              ; -----------------------
  34+ 90E6              ; -----------------------
  35+ 90E6
  36+ 90E6 CD DE 92     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 90E9 CD 15 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 90EC CD 74 93     	call Define_rutina_de_impresion
  39+ 90EF
  40+ 90EF 3A 51 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 90F2 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 90F4 32 51 88     	ld (Ctrl_0),a
  43+ 90F7
  44+ 90F7 C9           	ret
  45+ 90F8
  46+ 90F8              ; *******************************************************************************************************************************************************************************************
  47+ 90F8              ;	21/01/23
  48+ 90F8              ;
  49+ 90F8              ; 	Comprueba_limite_horizontal.
  50+ 90F8              ;
  51+ 90F8              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 90F8              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 90F8              ;
  54+ 90F8              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 90F8              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 90F8              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 90F8              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 90F8
  59+ 90F8
  60+ 90F8
  61+ 90F8 3A 51 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 90FB CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 90FD 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 90FF E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 9101 32 51 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 9104 18 09            jr 6F
  67+ 9106 CB 5F        1 bit 3,a
  68+ 9108 28 0A            jr z,2F
  69+ 910A E6 F7            and $f7
  70+ 910C 32 51 88         ld (Ctrl_0),a
  71+ 910F CD 62 92     6 call Inicializacion
  72+ 9112 18 5B            jr 5F
  73+ 9114 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9115
  75+ 9115              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9115              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9115
  78+ 9115 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9116 2A 53 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9119 CD CD 96     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 911C 67           	ld h,a
  82+ 911D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 911E CD CD 96     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9121 67           	ld h,a
  85+ 9122 A7           	and a
  86+ 9123 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9125 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9126 3A 43 88     	ld a,(Cuad_objeto)
  89+ 9129 FE 02        	cp 2
  90+ 912B 38 1E        	jr c,3F
  91+ 912D 28 1C        	jr z,3F
  92+ 912F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9130 28 23            jr z,7F
  94+ 9132 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9134 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9136 E1           	pop hl
  97+ 9137
  98+ 9137              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9137              ; _para indicar con E="2" en caso necesario.
 100+ 9137
 101+ 9137 E5               push hl
 102+ 9138 C5               push bc
 103+ 9139 CD CD 96     	call calcula_tercio
 104+ 913C FE 01        	cp 1
 105+ 913E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9140 CD 70 91         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9143 28 26            jr z,9F
 108+ 9145 38 24            jr c,9F
 109+ 9147 1E 00        11 ld e,0
 110+ 9149 18 22            jr 8F
 111+ 914B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 914C 28 07        	jr z, 7F
 113+ 914E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9150 1E 00         	ld e,0
 115+ 9152 E1           	pop hl
 116+ 9153 18 04        	jr 4F
 117+ 9155 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9157 18 15            jr 10F
 119+ 9159
 120+ 9159              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9159              ; _para indicar con E="2" en caso necesario.
 122+ 9159
 123+ 9159 E5           4 push hl
 124+ 915A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 915B CD CD 96     	call calcula_tercio
 126+ 915E FE 01        	cp 1
 127+ 9160 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9162 CD 70 91         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9165 28 04            jr z,9F
 130+ 9167 30 02            jr nc,9F
 131+ 9169 18 02        	jr 8F
 132+ 916B 1E 02        9 ld e,2
 133+ 916D C1           8 pop bc
 134+ 916E E1           10 pop hl
 135+ 916F C9           5 ret
 136+ 9170
 137+ 9170              ; --------------------
 138+ 9170              ;
 139+ 9170              ; 25/08/22
 140+ 9170
 141+ 9170 CD CD 96     Comprueba_centro call calcula_tercio
 142+ 9173 67               ld h,a
 143+ 9174 08           	ex af,af
 144+ 9175 FE 02        	cp 2
 145+ 9177 38 07        	jr c,1F
 146+ 9179 28 05        	jr z,1F
 147+ 917B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 917E 18 03        	jr 2F
 149+ 9180 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9183 08           2 ex af,af
 151+ 9184 A7               and a
 152+ 9185 ED 42            sbc hl,bc
 153+ 9187 C9               ret
 154+ 9188
 155+ 9188              ; *********************************************************************************************************************************************************************************************
 156+ 9188              ;
 157+ 9188              ;   16/8/22
 158+ 9188              ;
 159+ 9188              ;	Comprueba_limite_vertical
 160+ 9188              ;
 161+ 9188              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 9188              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 9188              ;
 164+ 9188
 165+ 9188 2A 31 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 918B 7D           	ld a,l
 167+ 918C E6 1F        	and $1F
 168+ 918E 57           	ld d,a
 169+ 918F 3A 55 88     	ld a,(Limite_vertical)
 170+ 9192 BA           	cp d 											; Límite - Posición.
 171+ 9193 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9194 3A 43 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9197 CB 47        	bit 0,a
 174+ 9199 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 919B
 176+ 919B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 919B
 178+ 919B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 919C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 919E
 181+ 919E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 919E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 919E
 184+ 919E 3A 35 88         ld a,(Coordenada_X)
 185+ 91A1 16 0F            ld d,Centro_izquierda
 186+ 91A3 A7               and a
 187+ 91A4 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 91A5 28 1E            jr z,3F
 189+ 91A7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 91A9              ;                                                    ; _salimos sin modificar nada.
 191+ 91A9 18 0E            jr 2F
 192+ 91AB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 91AC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 91AE
 195+ 91AE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 91AE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 91AE
 198+ 91AE 3A 35 88         ld a,(Coordenada_X)
 199+ 91B1 16 10            ld d,Centro_derecha
 200+ 91B3 A7               and a
 201+ 91B4 92               sub d
 202+ 91B5 28 0E            jr z,3F
 203+ 91B7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 91B9              ;                                                    ; _salimos sin modificar nada.
 205+ 91B9 CB 43        2 bit 0,e
 206+ 91BB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 91BD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 91BE CD 52 92         call Modificaccionne
 209+ 91C1 C1           	pop bc
 210+ 91C2 CD 62 92         call Inicializacion
 211+ 91C5 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 91C6
 213+ 91C6              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 91C6
 215+ 91C6 C5           4 push bc
 216+ 91C7 01 30 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 91CA 0A           	ld a,(bc)
 218+ 91CB 3D           	dec a
 219+ 91CC 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 91CD 7D           	ld a,l
 221+ 91CE 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 91CF CB 47        	bit 0,a
 223+ 91D1 28 03        	jr z,5F
 224+ 91D3 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 91D4 18 2E        	jr 7F
 226+ 91D6
 227+ 91D6              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 91D6
 229+ 91D6 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 91D7 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 91D8 3A 51 88     	ld a,(Ctrl_0)
 232+ 91DB CB 4F        	bit 1,a
 233+ 91DD 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 91DF F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 91E0
 236+ 91E0              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 91E0
 238+ 91E0 1C               inc e
 239+ 91E1 1D               dec e
 240+ 91E2 20 07            jr nz,12F
 241+ 91E4 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 91E5 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 91E6 22 31 88     	ld (Posicion_actual),hl
 244+ 91E9 18 44        13 jr 9F
 245+ 91EB CB 43        12 bit 0,e
 246+ 91ED 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 91EF              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 91EF C1           	pop bc
 249+ 91F0 18 D3        	jr 3B
 250+ 91F2 80           14 add b
 251+ 91F3 6F               ld l,a
 252+ 91F4 22 31 88     	ld (Posicion_actual),hl
 253+ 91F7 CD 52 92         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 91FA 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 91FC E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 91FE 32 51 88         ld (Ctrl_0),a
 257+ 9201 F1           	pop af
 258+ 9202 18 2B        	jr 9F
 259+ 9204
 260+ 9204              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9204
 262+ 9204 F5           7 push af
 263+ 9205 3A 51 88     	ld a,(Ctrl_0)
 264+ 9208 CB 47        	bit 0,a
 265+ 920A 20 1D        	jr nz,8F
 266+ 920C F1           	pop af
 267+ 920D
 268+ 920D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 920D
 270+ 920D 1C           	inc e
 271+ 920E 1D               dec e
 272+ 920F 20 07            jr nz,10F
 273+ 9211 90           	sub b
 274+ 9212 6F               ld l,a
 275+ 9213 22 31 88     	ld (Posicion_actual),hl
 276+ 9216 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9218              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9218 CB 43        10 bit 0,e
 279+ 921A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 921C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 921C C1           	pop bc
 282+ 921D 18 A6        	jr 3B
 283+ 921F 90           16 sub b
 284+ 9220 6F               ld l,a
 285+ 9221 22 31 88     	ld (Posicion_actual),hl
 286+ 9224 CD 52 92         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9227 18 06            jr 9F
 288+ 9229 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 922B 32 51 88         ld (Ctrl_0),a
 290+ 922E F1           	pop af
 291+ 922F C1           9 pop bc
 292+ 9230 1E 00        	ld e,0
 293+ 9232 CD 62 92         call Inicializacion
 294+ 9235 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9236 08           	ex af,af
 296+ 9237 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9238 18 8B            jr 3B
 298+ 923A
 299+ 923A              ; --------------------
 300+ 923A
 301+ 923A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 923C CD C9 93     1 call PreviousScan
 303+ 923F 10 FB            djnz 1B
 304+ 9241 22 31 88     	ld (Posicion_actual),hl
 305+ 9244 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9245 C9           	ret
 307+ 9246
 308+ 9246              ; --------------------
 309+ 9246
 310+ 9246 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9248 CD BA 93     1 call NextScan
 312+ 924B 10 FB            djnz 1B
 313+ 924D 22 31 88     	ld (Posicion_actual),hl
 314+ 9250 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9251 C9           	ret
 316+ 9252
 317+ 9252              ; --------------------
 318+ 9252              ;
 319+ 9252              ;	22/01/23
 320+ 9252              ;
 321+ 9252              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9252              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9252              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9252
 325+ 9252
 326+ 9252              Modificaccionne
 327+ 9252
 328+ 9252 3A 43 88     	ld a,(Cuad_objeto)
 329+ 9255 FE 02        	cp 2
 330+ 9257 CC 3A 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 925A DC 3A 92         call c,Modifica_Pos_actual
 332+ 925D C8           	ret z
 333+ 925E CD 46 92         call Modifica_Pos_actual2
 334+ 9261 C9               ret
 335+ 9262
 336+ 9262              ; *************************************************************************************************************************************************************************************************
 337+ 9262              ;
 338+ 9262              ;	13/8/22
 339+ 9262              ;
 340+ 9262              ;	Inicializacion
 341+ 9262              ;
 342+ 9262              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9262              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9262              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9262              ;
 346+ 9262              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9262              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9262              ;	_ desaparece/aparece.
 349+ 9262
 350+ 9262              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9262              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9262              ;
 353+ 9262              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9262              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9262              ; 		   [E] ="0"
 356+ 9262
 357+ 9262              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9262
 359+ 9262 CD CD 96     Inicializacion call calcula_tercio
 360+ 9265 28 36        	jr z,primit
 361+ 9267 E6 02        	and 2
 362+ 9269 20 07        	jr nz,segmit
 363+ 926B 7D           	ld a,l
 364+ 926C FE 7F        	cp $7f
 365+ 926E 38 2D        	jr c,primit
 366+ 9270 28 2B        	jr z,primit
 367+ 9272 CD D8 92     segmit call column
 368+ 9275 38 13        	jr c,tercuad
 369+ 9277 3E 04        cuarcuad ld a,4
 370+ 9279 32 43 88     	ld (Cuad_objeto),a
 371+ 927C 21 20 48     	ld hl,$4820
 372+ 927F 22 53 88     	ld (Limite_horizontal),hl
 373+ 9282 21 55 88     	ld hl,Limite_vertical
 374+ 9285 36 0D        	ld (hl),$0d
 375+ 9287 08           	ex af,af
 376+ 9288 18 3C        	jr 1F
 377+ 928A              tercuad
 378+ 928A 3E 03        	ld a,3
 379+ 928C 32 43 88     	ld (Cuad_objeto),a
 380+ 928F 21 20 48     	ld hl,$4820
 381+ 9292 22 53 88     	ld (Limite_horizontal),hl
 382+ 9295 21 55 88     	ld hl,Limite_vertical
 383+ 9298 36 12        	ld (hl),$12
 384+ 929A 08           	ex af,af
 385+ 929B 18 29        	jr 1F
 386+ 929D CD D8 92     primit call column
 387+ 92A0 38 13        	jr c, primcuad
 388+ 92A2              segcuad
 389+ 92A2 3E 02        	ld a,2
 390+ 92A4 32 43 88     	ld (Cuad_objeto),a
 391+ 92A7 21 C0 4F     	ld hl,$4fc0
 392+ 92AA 22 53 88     	ld (Limite_horizontal),hl
 393+ 92AD 21 55 88     	ld hl,Limite_vertical
 394+ 92B0 36 0D        	ld (hl),$0d
 395+ 92B2 08           	ex af,af
 396+ 92B3 18 11        	jr 1F
 397+ 92B5              primcuad
 398+ 92B5 3E 01        	ld a,1
 399+ 92B7 32 43 88     	ld (Cuad_objeto),a
 400+ 92BA 21 C0 4F     	ld hl,$4fc0
 401+ 92BD 22 53 88     	ld (Limite_horizontal),hl
 402+ 92C0 21 55 88     	ld hl,Limite_vertical
 403+ 92C3 36 12        	ld (hl),$12
 404+ 92C5 08           	ex af,af
 405+ 92C6
 406+ 92C6 C5           1 push bc
 407+ 92C7 E5           	push hl
 408+ 92C8 D5           	push de
 409+ 92C9
 410+ 92C9 2A 31 88     	ld hl,(Posicion_actual)
 411+ 92CC CD 65 9A     	call Genera_coordenadas
 412+ 92CF
 413+ 92CF D1           	pop de
 414+ 92D0 E1           	pop hl
 415+ 92D1 C1           	pop bc
 416+ 92D2
 417+ 92D2 21 51 88     	ld hl,Ctrl_0
 418+ 92D5 CB EE        	set 5,(hl)
 419+ 92D7 C9           	ret
 420+ 92D8
 421+ 92D8              ; ------------------------------------------------------------------------------------------------------------------
 422+ 92D8
 423+ 92D8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 92D8              ;
 425+ 92D8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 92D8
 427+ 92D8 7D           column ld a,l
 428+ 92D9 E6 1F        	and $1f
 429+ 92DB FE 10         	cp $10
 430+ 92DD C9            	ret
 431+ 92DE
 432+ 92DE              ; --------------------------------------------------------------------------------------------------------------------
 433+ 92DE              ;
 434+ 92DE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 92DE              ;
 436+ 92DE              ; 14/12/22
 437+ 92DE              ;
 438+ 92DE              ;	Modifica: A y BC.
 439+ 92DE
 440+ 92DE 3A 43 88     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 92E1 E6 01        	and 1
 442+ 92E3 28 17        	jr z,1F
 443+ 92E5
 444+ 92E5              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 92E5
 446+ 92E5 3A 35 88     	ld a,(Coordenada_X)
 447+ 92E8 47           	ld b,a
 448+ 92E9 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 92EA 79           	ld a,c
 450+ 92EB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 92EC 38 08        	jr c,2F
 452+ 92EE 47           	ld b,a
 453+ 92EF 79           	ld a,c
 454+ 92F0 90           	sub b
 455+ 92F1 32 52 88     	ld (Columnas),a
 456+ 92F4 18 1B        	jr 4F
 457+ 92F6 79           2 ld a,c
 458+ 92F7 32 52 88     	ld (Columnas),a
 459+ 92FA 18 15        	jr 4F
 460+ 92FC
 461+ 92FC              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 92FC
 463+ 92FC 3A 35 88     1 ld a,(Coordenada_X)
 464+ 92FF 81           	add c
 465+ 9300 3D           	dec a
 466+ 9301 D6 1F        	sub $1f
 467+ 9303 38 08        	jr c,3F
 468+ 9305 47           	ld b,a
 469+ 9306 79           	ld a,c
 470+ 9307 90           	sub b
 471+ 9308 32 52 88     	ld (Columnas),a
 472+ 930B 18 04        	jr 4F
 473+ 930D 79           3 ld a,c
 474+ 930E 32 52 88     	ld (Columnas),a
 475+ 9311 D9           4 exx
 476+ 9312 4F           	ld c,a
 477+ 9313 D9           	exx
 478+ 9314 C9            ret
 479+ 9315
 480+ 9315              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9315              ;
 482+ 9315              ;   19/7/23
 483+ 9315              ;
 484+ 9315              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9315              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9315              ;
 487+ 9315              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9315              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9315              ;
 490+ 9315              ;	DESTRUYE: HL,B Y A.
 491+ 9315
 492+ 9315 3A 43 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9318 FE 02        	cp 2
 494+ 931A 38 18        	jr c,1F
 495+ 931C 28 16        	jr z,1F
 496+ 931E E6 01        	and 1
 497+ 9320 28 0D        	jr z,3F
 498+ 9322
 499+ 9322              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9322
 501+ 9322 CD 68 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9325
 503+ 9325 7D           9 ld a,l
 504+ 9326 E6 1F        	and $1f
 505+ 9328 28 2A        	jr z,7F
 506+ 932A 2B           	dec hl
 507+ 932B 10 F8        	djnz 9B
 508+ 932D 18 25        	jr 7F
 509+ 932F
 510+ 932F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 932F
 512+ 932F 2A 31 88     3 ld hl,(Posicion_actual)
 513+ 9332 18 20        	jr 7F
 514+ 9334
 515+ 9334 28 14        1 jr z,2F
 516+ 9336
 517+ 9336              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9336
 519+ 9336 CD 68 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9339
 521+ 9339 7D           4 ld a,l
 522+ 933A E6 1F        	and $1f
 523+ 933C 28 03        	jr z,6F
 524+ 933E 2B           	dec hl
 525+ 933F 10 F8        	djnz 4B
 526+ 9341 06 0F        6 ld b,15
 527+ 9343 CD C9 93     5 call PreviousScan
 528+ 9346 10 FB        	djnz 5B
 529+ 9348 18 0A        	jr 7F
 530+ 934A
 531+ 934A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 934A
 533+ 934A CD 68 93     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 934D 06 0F        	ld b,15
 535+ 934F CD C9 93     8 call PreviousScan
 536+ 9352 10 FB        	djnz 8B
 537+ 9354
 538+ 9354 E5           7 push hl
 539+ 9355 DD E1        	pop ix
 540+ 9357
 541+ 9357 2A 33 88     	ld hl,(Puntero_objeto)
 542+ 935A E5           	push hl
 543+ 935B FD E1        	pop iy
 544+ 935D
 545+ 935D              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 935D
 547+ 935D 3A 51 88     	ld a,(Ctrl_0)
 548+ 9360 CB 77        	bit 6,a
 549+ 9362 C8           	ret z
 550+ 9363
 551+ 9363              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9363              ; _ entidad / Amadeus´.
 553+ 9363
 554+ 9363 DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 9367
 556+ 9367 C9           	ret
 557+ 9368
 558+ 9368              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9368              ;
 560+ 9368              ;	2/1/23
 561+ 9368              ;
 562+ 9368              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9368              ;
 564+ 9368              ;	Tras esta rutina tenemos:
 565+ 9368              ;
 566+ 9368              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9368              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9368              ;
 569+ 9368              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9368
 571+ 9368 2A 31 88     Operandos ld hl,(Posicion_actual)
 572+ 936B 3A 52 88     	ld a,(Columnas)
 573+ 936E 3D           	dec a
 574+ 936F 20 01        	jr nz,1F
 575+ 9371 3C           	inc a
 576+ 9372 47           1 ld b,a
 577+ 9373 C9           	ret
 578+ 9374
 579+ 9374              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9374              ;
 581+ 9374              ;	3/1/23
 582+ 9374              ;
 583+ 9374              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9374              ;
 585+ 9374              ;	Destruye: A,B,HL y DE.
 586+ 9374
 587+ 9374              Define_rutina_de_impresion
 588+ 9374
 589+ 9374 3A 30 88     	ld a,(Columns)
 590+ 9377 47           	ld b,a
 591+ 9378 3A 52 88     	ld a,(Columnas)
 592+ 937B B8           	cp b
 593+ 937C 20 0D        	jr nz,2f
 594+ 937E
 595+ 937E              ;	La entidad se imprime entera.
 596+ 937E
 597+ 937E 21 9D 94     	ld hl, Indice_entidades_completas
 598+ 9381 E6 01        	and 1
 599+ 9383 28 02        	jr z,1F
 600+ 9385
 601+ 9385 23           	inc hl
 602+ 9386 23           	inc hl
 603+ 9387
 604+ 9387 CD 7F 8A     1 call Extrae_address
 605+ 938A C9           	ret		;	ret
 606+ 938B
 607+ 938B              ;	La entidad no se imprime entera en pantalla.
 608+ 938B
 609+ 938B 3A 43 88     2 ld a,(Cuad_objeto)
 610+ 938E E6 01        	and 1
 611+ 9390 28 17        	jr z,3F
 612+ 9392
 613+ 9392              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9392
 615+ 9392 21 A1 94     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9395 3A 30 88     4 ld a,(Columns)
 617+ 9398 E6 01        	and 1
 618+ 939A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 939C
 620+ 939C 23           	inc hl
 621+ 939D 23           	inc hl
 622+ 939E
 623+ 939E 3A 52 88     	ld a,(Columnas)
 624+ 93A1 E6 01        	and 1
 625+ 93A3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 93A5
 627+ 93A5 23           	inc hl
 628+ 93A6 23           	inc hl
 629+ 93A7
 630+ 93A7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 93A9
 632+ 93A9 21 A7 94     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 93AC 18 E7        	jr 4B
 634+ 93AE
 635+ 93AE              ; --------------------------------------------------------------------------------------------------------------------
 636+ 93AE              ;
 637+ 93AE              ;	Prepara_draw
 638+ 93AE              ;
 639+ 93AE              ;	Es una rutina de carga.
 640+ 93AE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 93AE              ;
 642+ 93AE              ;	FUNCIONAMIENTO:
 643+ 93AE              ;
 644+ 93AE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 93AE              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 93AE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 93AE              ;
 648+ 93AE              ;	DESTRUYE:
 649+ 93AE              ;
 650+ 93AE              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 93AE
 652+ 93AE 21 2F 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 93B1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 93B2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 93B3 4E           	ld c,(hl)
 656+ 93B4 2A 31 88     	ld hl,(Posicion_actual)
 657+ 93B7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 93B9 C9           	ret
 659+ 93BA
 660+ 93BA              ;----------------------------------------------------------------------------------------------------------------
 661+ 93BA              ;
 662+ 93BA              ;	5/08/22
 663+ 93BA              ;
 664+ 93BA              ;   NextScan.
 665+ 93BA              ;
 666+ 93BA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 93BA              ;
 668+ 93BA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 93BA              ;
 670+ 93BA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 93BA              ;
 672+ 93BA              ;       DESTRUIDOS: AF y HL !!!
 673+ 93BA              ;
 674+ 93BA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 93BA              ;
 676+ 93BA
 677+ 93BA 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 93BB 7C               ld a,h
 679+ 93BC E6 07            and 7
 680+ 93BE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 93BF
 682+ 93BF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 93C0 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 93C2 6F               ld l,a
 685+ 93C3 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 93C4
 687+ 93C4 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 93C5 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 93C7 67               ld h,a
 690+ 93C8 C9               ret
 691+ 93C9
 692+ 93C9              ;----------------------------------------------------------------------------------------------------------------
 693+ 93C9              ;
 694+ 93C9              ;	5/08/22
 695+ 93C9              ;
 696+ 93C9              ;   PreviousScan.
 697+ 93C9              ;
 698+ 93C9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 93C9              ;
 700+ 93C9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 93C9              ;
 702+ 93C9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 93C9              ;
 704+ 93C9              ;       DESTRUIDOS: AF y HL !!!
 705+ 93C9              ;
 706+ 93C9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 93C9              ;
 708+ 93C9
 709+ 93C9 7C           PreviousScan ld a,h
 710+ 93CA 25               dec h               ; Dec H.
 711+ 93CB E6 07            and 7
 712+ 93CD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 93CE
 714+ 93CE 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 93CF D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 93D1 6F               ld l,a
 717+ 93D2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 93D3
 719+ 93D3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 93D4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 93D6 67               ld h,a
 722+ 93D7 C9               ret
 723+ 93D8
 724+ 93D8              ; -----------------------------------------------------------------------------------
 725+ 93D8              ;
 726+ 93D8              ;	31/7/23
 727+ 93D8              ;
 728+ 93D8              ;	Rutina principal de pintado de entidades.
 729+ 93D8              ;	Extrae la foto del frame, (entidades).
 730+ 93D8
 731+ 93D8              Extrae_foto_entidades
 732+ 93D8
 733+ 93D8 21 01 70     	ld hl,Album_de_fotos+1
 734+ 93DB 7E           	ld a,(hl)
 735+ 93DC A7           	and a
 736+ 93DD C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 93DE
 738+ 93DE              ;	No hay datos, (entidades para pintar en este frame).
 739+ 93DE
 740+ 93DE 3A 7C 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 93E1 A7           	and a
 742+ 93E2 C8           	ret z
 743+ 93E3
 744+ 93E3              ; -----------------------------------
 745+ 93E3
 746+ 93E3 ED 73 81 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 93E7 31 00 70     	ld sp,Album_de_fotos
 748+ 93EA
 749+ 93EA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 93EC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 93ED D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 93EE
 753+ 93EE ED 73 83 88  	ld (Stack_2),sp
 754+ 93F2 ED 7B 81 88  	ld sp,(Stack)
 755+ 93F6
 756+ 93F6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 93F6
 758+ 93F6 3E CD        	ld a,$cd
 759+ 93F8 32 00 94     	ld (Imprime),a
 760+ 93FB EB           	ex de,hl
 761+ 93FC 22 01 94     	ld (Imprime+1),hl
 762+ 93FF EB           	ex de,hl
 763+ 9400
 764+ 9400              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9400
 766+ 9400 00 00 00     Imprime db 0,0,0
 767+ 9403
 768+ 9403 ED 73 81 88  	ld (Stack),sp
 769+ 9407
 770+ 9407 3A 7C 88     	ld a,(Numero_de_malotes)
 771+ 940A 3D           	dec a
 772+ 940B 28 09        	jr z,1F
 773+ 940D 32 7C 88      	ld (Numero_de_malotes),a
 774+ 9410
 775+ 9410 ED 7B 83 88  	ld sp,(Stack_2)
 776+ 9414 18 D4        	jr 2B
 777+ 9416
 778+ 9416 AF           1 xor a
 779+ 9417 32 83 88     	ld (Stack_2),a
 780+ 941A
 781+ 941A C9           	ret
 782+ 941B
 783+ 941B              ; -----------------------------------------------------------------------------------
 784+ 941B              ;
 785+ 941B              ;	28/2/23
 786+ 941B              ;
 787+ 941B              ;	Pinta los disparos generados.
 788+ 941B
 789+ 941B              Extrae_foto_disparos
 790+ 941B
 791+ 941B 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 941E 7E               ld a,(hl)
 793+ 941F A7               and a
 794+ 9420 C8               ret z
 795+ 9421
 796+ 9421 3A 91 88     	ld a,(Numero_de_disparotes)
 797+ 9424 A7           	and a
 798+ 9425 C8           	ret z
 799+ 9426 ED 73 81 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 942A 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 942D
 802+ 942D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 942F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9430 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9431
 806+ 9431 ED 73 83 88  	ld (Stack_2),sp
 807+ 9435 ED 7B 81 88  	ld sp,(Stack)
 808+ 9439
 809+ 9439              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9439
 811+ 9439 3E CD        	ld a,$cd
 812+ 943B 32 43 94     	ld (Imprime2),a
 813+ 943E EB           	ex de,hl
 814+ 943F 22 44 94     	ld (Imprime2+1),hl
 815+ 9442 EB           	ex de,hl
 816+ 9443
 817+ 9443              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9443
 819+ 9443 00 00 00     Imprime2 db 0,0,0
 820+ 9446
 821+ 9446 3A 91 88     	ld a,(Numero_de_disparotes)
 822+ 9449 3D           	dec a
 823+ 944A 28 09        	jr z,1F
 824+ 944C 32 91 88      	ld (Numero_de_disparotes),a
 825+ 944F
 826+ 944F ED 7B 83 88  	ld sp,(Stack_2)
 827+ 9453 18 D8        	jr 2B
 828+ 9455
 829+ 9455 AF           1 xor a
 830+ 9456 32 83 88     	ld (Stack_2),a
 831+ 9459 C9           	ret
 832+ 945A
 833+ 945A              ; -----------------------------------------------------------------------------------
 834+ 945A              ;
 835+ 945A              ;	4/9/23
 836+ 945A              ;
 837+ 945A              ;	Rutina principal de pintado de Amadeus.
 838+ 945A              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 945A
 840+ 945A 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 945D 7E           	ld a,(hl)
 842+ 945E A7           	and a
 843+ 945F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9460
 845+ 9460 3A 7C 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9463 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9464 C8           	ret z
 848+ 9465
 849+ 9465              ; -----------------------------------
 850+ 9465
 851+ 9465 ED 73 81 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9469 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 946C
 854+ 946C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 946E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 946F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9470
 858+ 9470 ED 73 83 88  	ld (Stack_2),sp
 859+ 9474 ED 7B 81 88  	ld sp,(Stack)
 860+ 9478
 861+ 9478              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9478
 863+ 9478 3E CD        	ld a,$cd
 864+ 947A 32 82 94     	ld (Imprime_Amadeus),a
 865+ 947D EB           	ex de,hl
 866+ 947E 22 83 94     	ld (Imprime_Amadeus+1),hl
 867+ 9481 EB           	ex de,hl
 868+ 9482
 869+ 9482              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9482
 871+ 9482 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9485
 873+ 9485 ED 73 81 88  	ld (Stack),sp
 874+ 9489
 875+ 9489 3A 7C 88     	ld a,(Numero_de_malotes)
 876+ 948C 3D           	dec a
 877+ 948D 28 09        	jr z,1F
 878+ 948F 32 7C 88      	ld (Numero_de_malotes),a
 879+ 9492
 880+ 9492 ED 7B 83 88  	ld sp,(Stack_2)
 881+ 9496 18 D4        	jr 2B
 882+ 9498
 883+ 9498 AF           1 xor a
 884+ 9499 32 83 88     	ld (Stack_2),a
 885+ 949C
 886+ 949C C9           	ret
# file closed: Draw_XOR.asm
1758  949D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 949D              ;   índices de Rutinas de impresión.
   2+ 949D
   3+ 949D AD 94        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 949F DA 94            defw Pinta_Amadeus_3x2
   5+ 94A1
   6+ 94A1 30 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 94A3 D0 95            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 94A5 84 95            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 94A7
  10+ 94A7 5A 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 94A9 5E 96            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 94AB 12 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 94AD
  14+ 94AD
  15+ 94AD              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 94AD              ;
  17+ 94AD              ;   12/12/22
  18+ 94AD              ;
  19+ 94AD              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 94AD              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 94AD              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 94AD              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 94AD              ;
  24+ 94AD              ;   Modifica: DE y HL.
  25+ 94AD
  26+ 94AD ED 73 81 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 94B1 FD F9        	ld sp,iy
  28+ 94B3 06 10            ld b,16
  29+ 94B5 D1           1 pop de
  30+ 94B6 7B               ld a,e
  31+ 94B7 AE               xor (hl)
  32+ 94B8 77           	ld (hl),a
  33+ 94B9 23           	inc hl
  34+ 94BA 7A               ld a,d
  35+ 94BB AE               xor (hl)
  36+ 94BC 77           	ld (hl),a
  37+ 94BD 2B           	dec hl
  38+ 94BE 24           	inc h
  39+ 94BF 7C               ld a,h
  40+ 94C0 E6 07            and 7
  41+ 94C2 20 0A            jr nz,2F
  42+ 94C4 7D               ld a,l
  43+ 94C5 C6 20            add a,$20
  44+ 94C7 6F               ld l,a
  45+ 94C8 38 04            jr c,2F
  46+ 94CA 7C               ld a,h
  47+ 94CB D6 08            sub 8
  48+ 94CD 67               ld h,a
  49+ 94CE 7C           2 ld a,h
  50+ 94CF FE 58            cp $58
  51+ 94D1 28 02            jr z,3F
  52+ 94D3 10 E0            djnz 1B
  53+ 94D5 ED 7B 81 88  3 ld sp,(Stack)
  54+ 94D9 C9           	ret
  55+ 94DA
  56+ 94DA ED 73 81 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 94DE FD F9        	ld sp,iy
  58+ 94E0 06 08            ld b,8
  59+ 94E2 D1           1 pop de
  60+ 94E3 7B               ld a,e
  61+ 94E4 AE               xor (hl)
  62+ 94E5 77           	ld (hl),a
  63+ 94E6 23           	inc hl
  64+ 94E7 7A               ld a,d
  65+ 94E8 AE               xor (hl)
  66+ 94E9 77           	ld (hl),a
  67+ 94EA 23           	inc hl
  68+ 94EB D1           	pop de
  69+ 94EC 7B               ld a,e
  70+ 94ED AE               xor (hl)
  71+ 94EE 77           	ld (hl),a
  72+ 94EF 2B           	dec hl
  73+ 94F0 2B           	dec hl
  74+ 94F1 24           	inc h
  75+ 94F2 7C               ld a,h
  76+ 94F3 E6 07            and 7
  77+ 94F5 20 0A            jr nz,2F
  78+ 94F7 7D               ld a,l
  79+ 94F8 C6 20            add a,$20
  80+ 94FA 6F               ld l,a
  81+ 94FB 38 04            jr c,2F
  82+ 94FD 7C               ld a,h
  83+ 94FE D6 08            sub 8
  84+ 9500 67               ld h,a
  85+ 9501 7C           2 ld a,h
  86+ 9502 FE 58            cp $58
  87+ 9504 28 25            jr z,4F
  88+ 9506 7A               ld a,d
  89+ 9507 AE               xor (hl)
  90+ 9508 77               ld (hl),a
  91+ 9509 D1           	pop de
  92+ 950A 23           	inc hl
  93+ 950B 7B               ld a,e
  94+ 950C AE               xor (hl)
  95+ 950D 77           	ld (hl),a
  96+ 950E 23           	inc hl
  97+ 950F 7A               ld a,d
  98+ 9510 AE               xor (hl)
  99+ 9511 77           	ld (hl),a
 100+ 9512 2B           	dec hl
 101+ 9513 2B           	dec hl
 102+ 9514 24           	inc h
 103+ 9515 7C               ld a,h
 104+ 9516 E6 07            and 7
 105+ 9518 20 0A            jr nz,3F
 106+ 951A 7D               ld a,l
 107+ 951B C6 20            add a,$20
 108+ 951D 6F               ld l,a
 109+ 951E 38 04            jr c,3F
 110+ 9520 7C               ld a,h
 111+ 9521 D6 08            sub 8
 112+ 9523 67               ld h,a
 113+ 9524 7C           3 ld a,h
 114+ 9525 FE 58            cp $58
 115+ 9527 28 02            jr z,4F
 116+ 9529 10 B7            djnz 1B
 117+ 952B ED 7B 81 88  4 ld sp,(Stack)
 118+ 952F C9           	ret
 119+ 9530
 120+ 9530              ; ---------------------------------------------------
 121+ 9530
 122+ 9530 ED 73 81 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9534 FD F9        	ld sp,iy
 124+ 9536
 125+ 9536              ; >>>
 126+ 9536
 127+ 9536 06 10            ld b,16
 128+ 9538 D1           1 pop de
 129+ 9539 7A           	ld a,d
 130+ 953A AE           	xor (hl)
 131+ 953B 77           	ld (hl),a
 132+ 953C 24           	inc h
 133+ 953D 7C               ld a,h
 134+ 953E E6 07            and 7
 135+ 9540 20 0C            jr nz,2F
 136+ 9542 7D               ld a,l
 137+ 9543 C6 20            add a,$20
 138+ 9545 6F               ld l,a
 139+ 9546 38 06            jr c,2F
 140+ 9548 7C               ld a,h
 141+ 9549 D6 08            sub 8
 142+ 954B 67               ld h,a
 143+ 954C 18 00            jr 2F
 144+ 954E 7C           2 ld a,h
 145+ 954F FE 58            cp $58
 146+ 9551 28 02            jr z,3F
 147+ 9553 10 E3            djnz 1B
 148+ 9555 ED 7B 81 88  3 ld sp,(Stack)
 149+ 9559 C9           	ret
 150+ 955A
 151+ 955A ED 73 81 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 955E FD F9        	ld sp,iy
 153+ 9560
 154+ 9560              ; >>>
 155+ 9560
 156+ 9560 06 10            ld b,16
 157+ 9562 D1           1 pop de
 158+ 9563 7B           	ld a,e
 159+ 9564 AE           	xor (hl)
 160+ 9565 77           	ld (hl),a
 161+ 9566 24           	inc h
 162+ 9567 7C               ld a,h
 163+ 9568 E6 07            and 7
 164+ 956A 20 0C            jr nz,2F
 165+ 956C 7D               ld a,l
 166+ 956D C6 20            add a,$20
 167+ 956F 6F               ld l,a
 168+ 9570 38 06            jr c,2F
 169+ 9572 7C               ld a,h
 170+ 9573 D6 08            sub 8
 171+ 9575 67               ld h,a
 172+ 9576 18 00            jr 2F
 173+ 9578 7C           2 ld a,h
 174+ 9579 FE 58            cp $58
 175+ 957B 28 02            jr z,3F
 176+ 957D 10 E3            djnz 1B
 177+ 957F ED 7B 81 88  3 ld sp,(Stack)
 178+ 9583 C9           	ret
 179+ 9584
 180+ 9584              ; ---------------------------------------------------
 181+ 9584
 182+ 9584 ED 73 81 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9588 FD F9        	ld sp,iy
 184+ 958A 06 08            ld b,8
 185+ 958C D1           1 pop de
 186+ 958D 7A           	ld a,d
 187+ 958E AE           	xor (hl)
 188+ 958F 77           	ld (hl),a
 189+ 9590 23           	inc hl
 190+ 9591 D1           	pop de
 191+ 9592 7B           	ld a,e
 192+ 9593 AE           	xor (hl)
 193+ 9594 77           	ld (hl),a
 194+ 9595 2B           	dec hl
 195+ 9596 24            	inc h
 196+ 9597 7C               ld a,h
 197+ 9598 E6 07            and 7
 198+ 959A 20 0A            jr nz,2F
 199+ 959C 7D               ld a,l
 200+ 959D C6 20            add a,$20
 201+ 959F 6F               ld l,a
 202+ 95A0 38 04            jr c,2F
 203+ 95A2 7C               ld a,h
 204+ 95A3 D6 08            sub 8
 205+ 95A5 67               ld h,a
 206+ 95A6 7C           2 ld a,h
 207+ 95A7 FE 58            cp $58
 208+ 95A9 28 20            jr z,4F
 209+ 95AB D1               pop de
 210+ 95AC 7B           	ld a,e
 211+ 95AD AE           	xor (hl)
 212+ 95AE 77           	ld (hl),a
 213+ 95AF 23           	inc hl
 214+ 95B0 7A           	ld a,d
 215+ 95B1 AE           	xor (hl)
 216+ 95B2 77           	ld (hl),a
 217+ 95B3 2B           	dec hl
 218+ 95B4 24           	inc h
 219+ 95B5 7C               ld a,h
 220+ 95B6 E6 07            and 7
 221+ 95B8 20 0A            jr nz,3F
 222+ 95BA 7D               ld a,l
 223+ 95BB C6 20            add a,$20
 224+ 95BD 6F               ld l,a
 225+ 95BE 38 04            jr c,3F
 226+ 95C0 7C               ld a,h
 227+ 95C1 D6 08            sub 8
 228+ 95C3 67               ld h,a
 229+ 95C4 7C           3 ld a,h
 230+ 95C5 FE 58            cp $58
 231+ 95C7 28 02            jr z,4F
 232+ 95C9 10 C1            djnz 1B
 233+ 95CB ED 7B 81 88  4 ld sp,(Stack)
 234+ 95CF C9           	ret
 235+ 95D0
 236+ 95D0 ED 73 81 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 95D4 FD F9        	ld sp,iy
 238+ 95D6 06 08            ld b,8
 239+ 95D8 D1           1 pop de
 240+ 95D9 D1           	pop de
 241+ 95DA 7B           	ld a,e
 242+ 95DB AE           	xor (hl)
 243+ 95DC 77           	ld (hl),a
 244+ 95DD 24            	inc h
 245+ 95DE 7C               ld a,h
 246+ 95DF E6 07            and 7
 247+ 95E1 20 0A            jr nz,2F
 248+ 95E3 7D               ld a,l
 249+ 95E4 C6 20            add a,$20
 250+ 95E6 6F               ld l,a
 251+ 95E7 38 04            jr c,2F
 252+ 95E9 7C               ld a,h
 253+ 95EA D6 08            sub 8
 254+ 95EC 67               ld h,a
 255+ 95ED 7C           2 ld a,h
 256+ 95EE FE 58            cp $58
 257+ 95F0 28 1B            jr z,4F
 258+ 95F2 D1               pop de
 259+ 95F3 7A           	ld a,d
 260+ 95F4 AE           	xor (hl)
 261+ 95F5 77           	ld (hl),a
 262+ 95F6 24           	inc h
 263+ 95F7 7C               ld a,h
 264+ 95F8 E6 07            and 7
 265+ 95FA 20 0A            jr nz,3F
 266+ 95FC 7D               ld a,l
 267+ 95FD C6 20            add a,$20
 268+ 95FF 6F               ld l,a
 269+ 9600 38 04            jr c,3F
 270+ 9602 7C               ld a,h
 271+ 9603 D6 08            sub 8
 272+ 9605 67               ld h,a
 273+ 9606 7C           3 ld a,h
 274+ 9607 FE 58            cp $58
 275+ 9609 28 02            jr z,4F
 276+ 960B 10 CB            djnz 1B
 277+ 960D ED 7B 81 88  4 ld sp,(Stack)
 278+ 9611 C9           	ret
 279+ 9612
 280+ 9612 ED 73 81 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9616 FD F9        	ld sp,iy
 282+ 9618 06 08            ld b,8
 283+ 961A D1           1 pop de
 284+ 961B 7B           	ld a,e
 285+ 961C AE           	xor (hl)
 286+ 961D 77           	ld (hl),a
 287+ 961E 23           	inc hl
 288+ 961F 7A           	ld a,d
 289+ 9620 AE           	xor (hl)
 290+ 9621 77           	ld (hl),a
 291+ 9622 2B           	dec hl
 292+ 9623 24             	inc h
 293+ 9624 7C               ld a,h
 294+ 9625 E6 07            and 7
 295+ 9627 20 0A            jr nz,2F
 296+ 9629 7D               ld a,l
 297+ 962A C6 20            add a,$20
 298+ 962C 6F               ld l,a
 299+ 962D 38 04            jr c,2F
 300+ 962F 7C               ld a,h
 301+ 9630 D6 08            sub 8
 302+ 9632 67               ld h,a
 303+ 9633 7C           2 ld a,h
 304+ 9634 FE 58            cp $58
 305+ 9636 28 21            jr z,4F
 306+ 9638 D1               pop de
 307+ 9639 7A           	ld a,d
 308+ 963A AE           	xor (hl)
 309+ 963B 77           	ld (hl),a
 310+ 963C 23           	inc hl
 311+ 963D D1               pop de
 312+ 963E 7B           	ld a,e
 313+ 963F AE           	xor (hl)
 314+ 9640 77           	ld (hl),a
 315+ 9641 2B           	dec hl
 316+ 9642 24           	inc h
 317+ 9643 7C               ld a,h
 318+ 9644 E6 07            and 7
 319+ 9646 20 0A            jr nz,3F
 320+ 9648 7D               ld a,l
 321+ 9649 C6 20            add a,$20
 322+ 964B 6F               ld l,a
 323+ 964C 38 04            jr c,3F
 324+ 964E 7C               ld a,h
 325+ 964F D6 08            sub 8
 326+ 9651 67               ld h,a
 327+ 9652 7C           3 ld a,h
 328+ 9653 FE 58            cp $58
 329+ 9655 28 02            jr z,4F
 330+ 9657 10 C1            djnz 1B
 331+ 9659 ED 7B 81 88  4 ld sp,(Stack)
 332+ 965D C9           	ret
 333+ 965E
 334+ 965E ED 73 81 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9662 FD F9        	ld sp,iy
 336+ 9664 06 08            ld b,8
 337+ 9666 D1           1 pop de
 338+ 9667 7B           	ld a,e
 339+ 9668 AE           	xor (hl)
 340+ 9669 77           	ld (hl),a
 341+ 966A 24            	inc h
 342+ 966B 7C               ld a,h
 343+ 966C E6 07            and 7
 344+ 966E 20 0A            jr nz,2F
 345+ 9670 7D               ld a,l
 346+ 9671 C6 20            add a,$20
 347+ 9673 6F               ld l,a
 348+ 9674 38 04            jr c,2F
 349+ 9676 7C               ld a,h
 350+ 9677 D6 08            sub 8
 351+ 9679 67               ld h,a
 352+ 967A 7C           2 ld a,h
 353+ 967B FE 58            cp $58
 354+ 967D 28 1C            jr z,4F
 355+ 967F D1               pop de
 356+ 9680 7A           	ld a,d
 357+ 9681 AE           	xor (hl)
 358+ 9682 77           	ld (hl),a
 359+ 9683 24           	inc h
 360+ 9684 7C               ld a,h
 361+ 9685 E6 07            and 7
 362+ 9687 20 0A            jr nz,3F
 363+ 9689 7D               ld a,l
 364+ 968A C6 20            add a,$20
 365+ 968C 6F               ld l,a
 366+ 968D 38 04            jr c,3F
 367+ 968F 7C               ld a,h
 368+ 9690 D6 08            sub 8
 369+ 9692 67               ld h,a
 370+ 9693 7C           3 ld a,h
 371+ 9694 FE 58            cp $58
 372+ 9696 28 03            jr z,4F
 373+ 9698 D1               pop de
 374+ 9699 10 CB            djnz 1B
 375+ 969B ED 7B 81 88  4 ld sp,(Stack)
 376+ 969F C9           	ret
 377+ 96A0
 378+ 96A0              ; ---------------------------------------------------
 379+ 96A0              ;
 380+ 96A0              ;   27/02/23
 381+ 96A0              ;
 382+ 96A0              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 96A0              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 96A0              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 96A0
 386+ 96A0 ED 73 81 88  Pinta_Disparo ld (Stack),sp
 387+ 96A4 FD F9            ld sp,iy
 388+ 96A6 06 03            ld b,3
 389+ 96A8 D1           1 pop de
 390+ 96A9 7B               ld a,e
 391+ 96AA AE               xor (hl)
 392+ 96AB 77               ld (hl),a
 393+ 96AC 23               inc hl
 394+ 96AD 7A               ld a,d
 395+ 96AE AE               xor (hl)
 396+ 96AF 77               ld (hl),a
 397+ 96B0 2B               dec hl
 398+ 96B1
 399+ 96B1 24               inc h
 400+ 96B2 7C               ld a,h
 401+ 96B3 E6 07            and 7
 402+ 96B5 20 0A            jr nz,2F
 403+ 96B7 7D               ld a,l
 404+ 96B8 C6 20            add a,$20
 405+ 96BA 6F               ld l,a
 406+ 96BB 38 04            jr c,2F
 407+ 96BD 7C               ld a,h
 408+ 96BE D6 08            sub 8
 409+ 96C0 67               ld h,a
 410+ 96C1 7C           2 ld a,h
 411+ 96C2 FE 58            cp $58
 412+ 96C4 28 02            jr z,3F
 413+ 96C6
 414+ 96C6 10 E0            djnz 1B
 415+ 96C8 ED 7B 81 88  3 ld sp,(Stack)
 416+ 96CC C9               ret
 417+ 96CD
# file closed: Rutinas_de_impresion_sprites.asm
1759  96CD              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 96CD              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 96CD              ;
   3+ 96CD              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 96CD              ;
   5+ 96CD              ; *****************************************************************************************************************************************************************************************
   6+ 96CD              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 96CD
   8+ 96CD 7C           calcula_tercio ld a,h
   9+ 96CE E6 18        	and $18
  10+ 96D0 CB 2F        	sra a
  11+ 96D2 CB 2F        	sra a
  12+ 96D4 CB 2F        	sra a
  13+ 96D6 C9           	ret
  14+ 96D7
# file closed: calcula_tercio.asm
1760  96D7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 96D7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 96D7              ;
   3+ 96D7              ;
   4+ 96D7              ;	CLS.
   5+ 96D7              ;
   6+ 96D7              ;	Limpia la pantalla y define sus atributos.
   7+ 96D7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 96D7              ;
   9+ 96D7              ;	COLORES: 0 ..... NEGRO
  10+ 96D7              ;    		 1 ..... AZUL
  11+ 96D7              ; 			 2 ..... ROJO
  12+ 96D7              ;			 3 ..... MAGENTA
  13+ 96D7              ; 			 4 ..... VERDE
  14+ 96D7              ; 			 5 ..... CIAN
  15+ 96D7              ;			 6 ..... AMARILLO
  16+ 96D7              ; 			 7 ..... BLANCO
  17+ 96D7              ;
  18+ 96D7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 96D7              ;
  20+ 96D7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 96D7
  22+ 96D7
  23+ 96D7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 96DA 11 01 40     	LD DE,$4001
  25+ 96DD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 96E0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 96E2 ED B0        	LDIR
  28+ 96E4 01 FF 02     	LD BC,767
  29+ 96E7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 96E8 ED B0        	LDIR
  31+ 96EA C9           	ret
  32+ 96EB
# file closed: Cls.asm
1761  96EB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 96EB
   2+ 96EB              ; ******************************************************************************************************************************************************************************************
   3+ 96EB              ;
   4+ 96EB              ;   20/05/23
   5+ 96EB              ;
   6+ 96EB              ;	Recompone_posicion_inicio
   7+ 96EB              ;
   8+ 96EB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 96EB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 96EB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 96EB              ;	_ a una u otra rutina.
  12+ 96EB
  13+ 96EB              Recompone_posicion_inicio
  14+ 96EB
  15+ 96EB 2A 41 88     	ld hl,(Posicion_inicio)
  16+ 96EE 7D           	ld a,l
  17+ 96EF E6 1F        	and $1f
  18+ 96F1 28 16        	jr z,1F
  19+ 96F3
  20+ 96F3 FE 1F        	cp $1f
  21+ 96F5 28 0D        	jr z,3F
  22+ 96F7
  23+ 96F7 21 56 88     	ld hl,Ctrl_2
  24+ 96FA CB C6        	set 0,(hl)
  25+ 96FC 2A 33 88     	ld hl,(Puntero_objeto)
  26+ 96FF 22 71 88     	ld (Repone_puntero_objeto),hl
  27+ 9702 18 08        	jr 2F
  28+ 9704
  29+ 9704 CD B2 98     3 call Mov_left
  30+ 9707 18 03        	jr 2F
  31+ 9709
  32+ 9709 CD 8F 97     1 call Mov_right
  33+ 970C 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 970F 22 33 88     	ld (Puntero_objeto),hl
  35+ 9712 C9           	ret
  36+ 9713
  37+ 9713              ; ******************************************************************************************************************************************************************************************
  38+ 9713              ;
  39+ 9713              ;   27/05/23
  40+ 9713              ;
  41+ 9713              ;	Mov_down
  42+ 9713              ;
  43+ 9713              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9713              ;
  45+ 9713              ;
  46+ 9713              Mov_down
  47+ 9713
  48+ 9713 CD 7D 97     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9716              ;																	; _ repone (Puntero_objeto).
  50+ 9716 21 51 88     	ld hl,Ctrl_0
  51+ 9719 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 971B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 971B              ; 																	; _ en el caso de que no lo haya.
  54+ 971B 3A 5B 88     	ld a,(Vel_down)
  55+ 971E 47           	ld b,a
  56+ 971F 2A 31 88         ld hl,(Posicion_actual)
  57+ 9722 CD CD 96     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9725 E6 02        	and 2
  59+ 9727 28 17        	jr z,1F
  60+ 9729
  61+ 9729              ; Nos encontramos en el último tercio de pantalla.
  62+ 9729              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9729
  64+ 9729 7C           	ld a,h
  65+ 972A FE 57        	cp $57
  66+ 972C 20 12        	jr nz,1F
  67+ 972E
  68+ 972E 7D           	ld a,l
  69+ 972F C6 20        	add $20
  70+ 9731 30 0D        	jr nc,1F
  71+ 9733
  72+ 9733              ; ------------------------------
  73+ 9733              ;
  74+ 9733              ;	12/01/24
  75+ 9733
  76+ 9733              ;	call Reaparece_arriba
  77+ 9733 CD 3F 9A     	call Reinicio
  78+ 9736
  79+ 9736              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9736
  81+ 9736 3A 8F 88     	ld a,(Ctrl_3)
  82+ 9739 CB CF        	set 1,a
  83+ 973B 32 8F 88     	ld (Ctrl_3),a
  84+ 973E
  85+ 973E 18 08        	jr 3F
  86+ 9740              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9740              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9740              ; ------------------------------
  89+ 9740
  90+ 9740 CD BA 93     1 call NextScan
  91+ 9743 22 31 88     	ld (Posicion_actual),hl
  92+ 9746 10 DA            djnz 2B
  93+ 9748 CD 65 9A     3 call Genera_coordenadas
  94+ 974B C9           	ret
  95+ 974C
  96+ 974C              ; ******************************************************************************************************************************************************************************************
  97+ 974C              ;
  98+ 974C              ;   27/05/23
  99+ 974C              ;
 100+ 974C              ;	Mov_up
 101+ 974C              ;
 102+ 974C              ; 	Mueve el Sprite hacia arriba.
 103+ 974C              ;
 104+ 974C              ;
 105+ 974C              Mov_up
 106+ 974C
 107+ 974C CD 7D 97     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 974F              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 974F 21 51 88     	ld hl,Ctrl_0
 110+ 9752 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9754              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9754              ; 																		; _ en el caso de que no lo haya.
 113+ 9754 3A 5A 88     	ld a,(Vel_up)
 114+ 9757 47           	ld b,a
 115+ 9758 2A 31 88     	ld hl,(Posicion_actual)
 116+ 975B CD CD 96     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 975E A7           	and a
 118+ 975F 20 10        	jr nz,1F
 119+ 9761
 120+ 9761              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9761              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9761
 123+ 9761 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9762 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9764 20 0B            jr nz,1F
 126+ 9766 7D               ld a,l
 127+ 9767 D6 20            sub $20
 128+ 9769 30 06            jr nc,1F
 129+ 976B 25               dec h
 130+ 976C
 131+ 976C              ; -----------------------------
 132+ 976C CD 20 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 976F              ;	call Reinicio
 134+ 976F              ; -----------------------------
 135+ 976F
 136+ 976F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9771 CD C9 93     1 call PreviousScan
 138+ 9774 22 31 88     	ld (Posicion_actual),hl
 139+ 9777 10 E2            djnz 3B
 140+ 9779 CD 65 9A     2 call Genera_coordenadas
 141+ 977C C9           	ret
 142+ 977D
 143+ 977D              ; -----------------------------
 144+ 977D              ;
 145+ 977D              ;	27/5/23
 146+ 977D              ;
 147+ 977D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 977D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 977D              ;
 150+ 977D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 977D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 977D              ;
 153+ 977D              ;	Modifica: A y (Puntero_objeto).
 154+ 977D
 155+ 977D 3A 56 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9780 CB 47        	bit 0,a
 157+ 9782 C8           	ret z
 158+ 9783 CB 87        	res 0,a
 159+ 9785 32 56 88     	ld (Ctrl_2),a
 160+ 9788 2A 71 88     	ld hl,(Repone_puntero_objeto)
 161+ 978B 22 33 88     	ld (Puntero_objeto),hl
 162+ 978E C9           	ret
 163+ 978F
 164+ 978F              ; ******************************************************************************************************************************************************************************************
 165+ 978F              ;
 166+ 978F              ;	19/10/22
 167+ 978F              ;
 168+ 978F              ;	Mov_right.
 169+ 978F              ;
 170+ 978F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 978F              ;
 172+ 978F
 173+ 978F 3A 51 88     Mov_right ld a,(Ctrl_0)
 174+ 9792 CB 77        	bit 6,a
 175+ 9794 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9796
 177+ 9796 CD CE 99     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9799 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 979A
 180+ 979A 21 51 88     	ld hl,Ctrl_0
 181+ 979D CB E6        	set 4,(hl)
 182+ 979F 18 52        	jr 8F
 183+ 97A1
 184+ 97A1 21 51 88     10 ld hl,Ctrl_0
 185+ 97A4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 97A6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 97A6              ; 																	; _ en el caso de que no lo haya.
 188+ 97A6 3A 35 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 97A9 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 97AB 20 46        	jr nz,8F
 191+ 97AD
 192+ 97AD 3A 37 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 97B0 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 97B1 28 40        	jr z,8F
 195+ 97B3
 196+ 97B3              ; ---------- ---------- ----------
 197+ 97B3              ;
 198+ 97B3              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 97B3
 200+ 97B3 3A 59 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 97B6 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 97B8 28 11        	jr z,1F
 203+ 97BA 38 06        	jr c,6F
 204+ 97BC FE 04        	cp 4
 205+ 97BE 28 14        	jr z,7F
 206+ 97C0 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 97C2
 208+ 97C2              ; ---------- ---------- ----------
 209+ 97C2              ;
 210+ 97C2              ; Perfiles de velocidad
 211+ 97C2              ;
 212+ 97C2
 213+ 97C2 3A 37 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 97C5 FE FE        	cp $fe
 215+ 97C7 20 2A        	jr nz,8F
 216+ 97C9 18 10        	jr 3F
 217+ 97CB 3A 37 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 97CE FE FD        	cp $fd
 219+ 97D0 20 21        	jr nz,8F
 220+ 97D2 18 07        	jr 3F
 221+ 97D4 3A 37 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 97D7 FE FB        	cp $fb
 223+ 97D9 20 18        	jr nz,8F
 224+ 97DB
 225+ 97DB              ; ---------- ---------- ----------
 226+ 97DB
 227+ 97DB              3
 228+ 97DB CD 0E 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 97DE              ;	call Reinicio
 230+ 97DE
 231+ 97DE              ; ---------- ---------- ----------
 232+ 97DE              ;
 233+ 97DE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 97DE
 235+ 97DE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 97E0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 97E1 CD FA 97     	call DESPLZ_DER
 238+ 97E4 C1           	pop bc
 239+ 97E5 10 F9        	djnz 5B
 240+ 97E7 2A 31 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 97EA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 97EB 22 31 88     	ld (Posicion_actual),hl
 243+ 97EE CD 65 9A     	call Genera_coordenadas
 244+ 97F1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 97F3
 246+ 97F3              ; ---------- ---------- ----------
 247+ 97F3
 248+ 97F3 2A 31 88     8 ld hl,(Posicion_actual)
 249+ 97F6 CD FA 97     	call DESPLZ_DER
 250+ 97F9 C9           2 ret
 251+ 97FA
 252+ 97FA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 97FA              ;
 254+ 97FA              ;	22/9/22
 255+ 97FA              ;
 256+ 97FA
 257+ 97FA CD 09 98     DESPLZ_DER call Desplaza_derecha
 258+ 97FD CD 55 98         call modifica_parametros_1er_DESPLZ_2
 259+ 9800 CD 7E 98         call Ciclo_completo
 260+ 9803 21 51 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9806 CB FE        	set 7,(hl)
 262+ 9808 C9           	ret
 263+ 9809
 264+ 9809              ; ******************************************************************************************************************************************************************************************
 265+ 9809              ;	15/02/23
 266+ 9809              ;
 267+ 9809
 268+ 9809 3A 59 88     Desplaza_derecha ld a,(Vel_right)
 269+ 980C 47           	ld b,a
 270+ 980D 2A 3D 88     	ld hl,(Puntero_DESPLZ_der)
 271+ 9810 23           1 inc hl
 272+ 9811 23           	inc hl
 273+ 9812 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9814 22 3D 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9817 CD 7F 8A     	call Extrae_address
 276+ 981A 22 33 88     	ld (Puntero_objeto),hl
 277+ 981D
 278+ 981D              ; Modifica (Puntero_DESPLZ_izq).
 279+ 981D
 280+ 981D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 981D              ; Cuántos movimientos hemos hecho ??
 282+ 981D              ; DE contiene (Puntero_DESPLZ_der).
 283+ 981D
 284+ 981D 2A 39 88     7 ld hl,(Indice_Sprite_der)
 285+ 9820 EB           	ex de,hl
 286+ 9821 A7           	and a
 287+ 9822 ED 52        	sbc hl,de
 288+ 9824 CB 3D        	srl l
 289+ 9826 3E 08        6 ld a,8
 290+ 9828 95           	sub l
 291+ 9829 30 1E        	jr nc,3F
 292+ 982B
 293+ 982B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 982B              ; B="0".
 295+ 982B
 296+ 982B 04           4 inc b
 297+ 982C 3C           	inc a
 298+ 982D 20 FC        	jr nz,4B
 299+ 982F 78           	ld a,b
 300+ 9830 08           	ex af,af
 301+ 9831 2A 39 88     	ld hl,(Indice_Sprite_der)
 302+ 9834 23           5 inc hl
 303+ 9835 23           	inc hl
 304+ 9836 10 FC        	djnz 5B
 305+ 9838 22 3D 88     	ld (Puntero_DESPLZ_der),hl
 306+ 983B CD 7F 8A     	call Extrae_address
 307+ 983E 22 33 88     	ld (Puntero_objeto),hl
 308+ 9841
 309+ 9841              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9841              ; _(Posicion_actual).
 311+ 9841
 312+ 9841 21 31 88     	ld hl,Posicion_actual
 313+ 9844 34           	inc (hl)
 314+ 9845 08               ex af,af
 315+ 9846 6F           	ld l,a
 316+ 9847 18 DD        	jr 6B
 317+ 9849
 318+ 9849              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9849
 320+ 9849 47           3 ld b,a
 321+ 984A 2A 3B 88     	ld hl,(Indice_Sprite_izq)
 322+ 984D 23           2 inc hl
 323+ 984E 23           	inc hl
 324+ 984F 10 FC        	djnz 2B
 325+ 9851 22 3F 88     	ld (Puntero_DESPLZ_izq),hl
 326+ 9854 C9           8 ret
 327+ 9855
 328+ 9855              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9855              ;
 330+ 9855              ;	24/7/22
 331+ 9855              ;
 332+ 9855              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9855              ;
 334+ 9855              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9855              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9855              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9855
 338+ 9855 3A 37 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9858 A7           	and a
 340+ 9859 20 1F        	jr nz,1F
 341+ 985B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 985D 32 37 88         ld (CTRL_DESPLZ),a
 343+ 9860
 344+ 9860 21 30 88     	ld hl,Columns
 345+ 9863 34           	inc (hl)
 346+ 9864 3A 43 88     	ld a,(Cuad_objeto)
 347+ 9867 E6 01        	and 1
 348+ 9869 28 0F        	jr z,1F
 349+ 986B 2A 31 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 986E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 986F 22 31 88     	ld (Posicion_actual),hl
 352+ 9872 CD 65 9A     	call Genera_coordenadas
 353+ 9875 CD DA 99     	call Inc_CTRL_DESPLZ
 354+ 9878 18 03        	jr 2F
 355+ 987A CD DA 99     1 call Inc_CTRL_DESPLZ
 356+ 987D C9           2 ret
 357+ 987E
 358+ 987E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 987E              ;
 360+ 987E              ;	24/7/22
 361+ 987E              ;
 362+ 987E              ;	Ciclo_completo.
 363+ 987E              ;
 364+ 987E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 987E              ;
 366+ 987E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 987E              ; 	Decrementamos (Columns).
 368+ 987E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 987E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 987E
 371+ 987E
 372+ 987E 3A 37 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9881 FE FF        	cp $ff
 374+ 9883 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9885 E6 F0        	and $f0
 376+ 9887 20 28        	jr nz,3F
 377+ 9889
 378+ 9889              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9889
 380+ 9889 3A 37 88     	ld a,(CTRL_DESPLZ)
 381+ 988C 47           	ld b,a
 382+ 988D 3E F8        	ld a,$f8
 383+ 988F 80           	add b
 384+ 9890 32 37 88     	ld (CTRL_DESPLZ),a
 385+ 9893 18 1C        	jr 3F
 386+ 9895 21 30 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9898 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9899 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 989A 32 37 88     	ld (CTRL_DESPLZ),a
 390+ 989D 3A 43 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 98A0 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 98A2 20 0A        	jr nz,2F
 393+ 98A4 2A 31 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 98A7 23           	inc hl
 395+ 98A8 22 31 88     	ld (Posicion_actual),hl
 396+ 98AB CD 65 9A     	call Genera_coordenadas
 397+ 98AE
 398+ 98AE              ; Inicia el puntero de Sprite.
 399+ 98AE
 400+ 98AE CD 94 8A     2 call Inicia_puntero_objeto_der
 401+ 98B1 C9           3 ret
 402+ 98B2
 403+ 98B2              ; ******************************************************************************************************************************************************************************************
 404+ 98B2              ;
 405+ 98B2              ;	15/02/23
 406+ 98B2              ;
 407+ 98B2              ;	Mov_left.
 408+ 98B2              ;
 409+ 98B2              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 98B2              ;
 411+ 98B2              Mov_left
 412+ 98B2
 413+ 98B2 21 51 88     	ld hl,Ctrl_0
 414+ 98B5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 98B7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 98B7              ; 																	; _ en el caso de que no lo haya.
 417+ 98B7 3A 51 88     	ld a,(Ctrl_0)
 418+ 98BA CB 77        	bit 6,a
 419+ 98BC 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 98BE
 421+ 98BE CD D4 99     	call Stop_Amadeus_left
 422+ 98C1 C8           	ret z
 423+ 98C2 20 4A        	jr nz,8F
 424+ 98C4
 425+ 98C4 3A 35 88     11 ld a,(Coordenada_X)
 426+ 98C7 A7           	and a
 427+ 98C8 20 44        	jr nz,8F
 428+ 98CA
 429+ 98CA 3A 37 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 98CD A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 98CE 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 98D0
 433+ 98D0              ; ---------- ---------- ----------
 434+ 98D0
 435+ 98D0 3A 58 88     	ld a,(Vel_left)
 436+ 98D3 FE 02        	cp 2
 437+ 98D5 28 0F        	jr z,1F
 438+ 98D7 38 04        	jr c,6F
 439+ 98D9 FE 04        	cp 4
 440+ 98DB 28 12        	jr z,7F
 441+ 98DD
 442+ 98DD              ; ---------- ---------- ----------
 443+ 98DD
 444+ 98DD 3A 37 88     6 ld a,(CTRL_DESPLZ)
 445+ 98E0 FE F8        	cp $f8
 446+ 98E2 20 2A        	jr nz,8F
 447+ 98E4 18 10        	jr 4F
 448+ 98E6 3A 37 88     1 ld a,(CTRL_DESPLZ)
 449+ 98E9 FE F9        	cp $f9
 450+ 98EB 20 21        	jr nz,8F
 451+ 98ED 18 07        	jr 4F
 452+ 98EF 3A 37 88     7 ld a,(CTRL_DESPLZ)
 453+ 98F2 FE FB        	cp $fb
 454+ 98F4 20 18        	jr nz,8F
 455+ 98F6
 456+ 98F6              ; ---------- ---------- ----------
 457+ 98F6
 458+ 98F6              4
 459+ 98F6 CD FC 99     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 98F9              ;	call Reinicio
 461+ 98F9
 462+ 98F9              ; ---------- ---------- ----------
 463+ 98F9
 464+ 98F9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 98FB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 98FC
 467+ 98FC              ;	ld hl,(Indice_Sprite_izq)
 468+ 98FC              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 98FC
 470+ 98FC CD 15 99     	call DESPLZ_IZQ
 471+ 98FF C1           	pop bc
 472+ 9900 10 F9        	djnz 5B
 473+ 9902 2A 31 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9905 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9906 22 31 88     	ld (Posicion_actual),hl
 476+ 9909 CD 65 9A     	call Genera_coordenadas
 477+ 990C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 990E
 479+ 990E              ; ---------- ---------- ----------
 480+ 990E
 481+ 990E              ; Movemos, no hay recolocación.
 482+ 990E
 483+ 990E 2A 31 88     8 ld hl,(Posicion_actual)
 484+ 9911 CD 15 99     	call DESPLZ_IZQ
 485+ 9914 C9           2 ret
 486+ 9915
 487+ 9915              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9915              ;
 489+ 9915              ;	22/9/22
 490+ 9915
 491+ 9915              DESPLZ_IZQ
 492+ 9915
 493+ 9915 CD 24 99     	call Desplaza_izquierda
 494+ 9918 CD 70 99         call modifica_parametros_1er_DESPLZ
 495+ 991B CD 98 99     	call Ciclo_completo_2
 496+ 991E 21 51 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9921 CB BE        	res 7,(hl)
 498+ 9923 C9           	ret
 499+ 9924
 500+ 9924              Desplaza_izquierda
 501+ 9924
 502+ 9924 3A 58 88     	ld a,(Vel_left)
 503+ 9927 47           	ld b,a
 504+ 9928 2A 3F 88     	ld hl,(Puntero_DESPLZ_izq)
 505+ 992B 23           1 inc hl
 506+ 992C 23           	inc hl
 507+ 992D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 992F 22 3F 88     	ld (Puntero_DESPLZ_izq),hl
 509+ 9932 CD 7F 8A     	call Extrae_address
 510+ 9935 22 33 88     	ld (Puntero_objeto),hl
 511+ 9938
 512+ 9938              ; Modifica (Puntero_DESPLZ_der).
 513+ 9938
 514+ 9938              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9938              ; Cuántos movimientos hemos hecho ??
 516+ 9938              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9938
 518+ 9938 2A 3B 88     7 ld hl,(Indice_Sprite_izq)
 519+ 993B EB           	ex de,hl
 520+ 993C A7           	and a
 521+ 993D ED 52        	sbc hl,de
 522+ 993F CB 3D        	srl l
 523+ 9941 3E 08        6 ld a,8
 524+ 9943 95           	sub l
 525+ 9944 30 1E        	jr nc,3F
 526+ 9946
 527+ 9946              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9946              ; B="0".
 529+ 9946
 530+ 9946 04           4 inc b
 531+ 9947 3C           	inc a
 532+ 9948 20 FC        	jr nz,4B
 533+ 994A 78           	ld a,b
 534+ 994B 08           	ex af,af
 535+ 994C 2A 3B 88     	ld hl,(Indice_Sprite_izq)
 536+ 994F 23           5 inc hl
 537+ 9950 23           	inc hl
 538+ 9951 10 FC        	djnz 5B
 539+ 9953 22 3F 88     	ld (Puntero_DESPLZ_izq),hl
 540+ 9956 CD 7F 8A     	call Extrae_address
 541+ 9959 22 33 88     	ld (Puntero_objeto),hl
 542+ 995C
 543+ 995C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 995C              ; _(Posicion_actual).
 545+ 995C
 546+ 995C 21 31 88     	ld hl,Posicion_actual
 547+ 995F 35           	dec (hl)
 548+ 9960 08           	ex af,af
 549+ 9961 6F           	ld l,a
 550+ 9962 18 DD        	jr 6B
 551+ 9964
 552+ 9964              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9964
 554+ 9964 47           3 ld b,a
 555+ 9965 2A 39 88     	ld hl,(Indice_Sprite_der)
 556+ 9968 23           2 inc hl
 557+ 9969 23           	inc hl
 558+ 996A 10 FC        	djnz 2B
 559+ 996C 22 3D 88     	ld (Puntero_DESPLZ_der),hl
 560+ 996F C9           8 ret
 561+ 9970
 562+ 9970              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9970              ;
 564+ 9970              ;	modifica_parametros_1er_DESPLZ
 565+ 9970              ;
 566+ 9970              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9970              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9970              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9970
 570+ 9970 3A 37 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9973 A7           	and a
 572+ 9974 20 1E        	jr nz,1F
 573+ 9976 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9977 32 37 88         ld (CTRL_DESPLZ),a
 575+ 997A 21 30 88     	ld hl,Columns
 576+ 997D 34           	inc (hl)
 577+ 997E 3A 43 88     	ld a,(Cuad_objeto)
 578+ 9981 E6 01        	and 1
 579+ 9983 20 0F        	jr nz,1F
 580+ 9985 2A 31 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9988 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9989 22 31 88     	ld (Posicion_actual),hl
 583+ 998C CD 65 9A     	call Genera_coordenadas
 584+ 998F CD EB 99     	call Dec_CTRL_DESPLZ
 585+ 9992 18 03        	jr 2F
 586+ 9994 CD EB 99     1 call Dec_CTRL_DESPLZ
 587+ 9997 C9           2 ret
 588+ 9998
 589+ 9998              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9998
 591+ 9998 3A 37 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 999B FE F7        	cp $f7
 593+ 999D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 999F 30 2C        	jr nc,3F
 595+ 99A1
 596+ 99A1              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 99A1
 598+ 99A1 06 00        	ld b,0
 599+ 99A3 04           4 inc b
 600+ 99A4 3C           	inc a
 601+ 99A5 FE F7        	cp $f7
 602+ 99A7 20 FA        	jr nz,4B
 603+ 99A9 3E FF        	ld a,$ff
 604+ 99AB 90           	sub b
 605+ 99AC 32 37 88     	ld (CTRL_DESPLZ),a
 606+ 99AF 18 1C        	jr 3F
 607+ 99B1
 608+ 99B1              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 99B1
 610+ 99B1 21 30 88     1 ld hl,Columns
 611+ 99B4 35           	dec (hl)
 612+ 99B5 AF           	xor a
 613+ 99B6 32 37 88     	ld (CTRL_DESPLZ),a
 614+ 99B9 3A 43 88     	ld a,(Cuad_objeto)
 615+ 99BC E6 01        	and 1
 616+ 99BE 28 0A        	jr z,2F
 617+ 99C0 2A 31 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 99C3 2B           	dec hl
 619+ 99C4 22 31 88     	ld (Posicion_actual),hl
 620+ 99C7 CD 65 9A     	call Genera_coordenadas
 621+ 99CA
 622+ 99CA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 99CA
 624+ 99CA CD A7 8A     2 call Inicia_puntero_objeto_izq
 625+ 99CD C9           3 ret
 626+ 99CE
 627+ 99CE              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 99CE              ;
 629+ 99CE              ;	19/10/22
 630+ 99CE              ;
 631+ 99CE              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 99CE              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 99CE
 634+ 99CE 3A 35 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 99D1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 99D3 C9           	ret
 637+ 99D4
 638+ 99D4              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 99D4              ;
 640+ 99D4              ;	19/10/22
 641+ 99D4              ;
 642+ 99D4              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 99D4              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 99D4
 645+ 99D4 3A 35 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 99D7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 99D9 C9           	ret
 648+ 99DA
 649+ 99DA              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 99DA              ;
 651+ 99DA              ;	24/7/22
 652+ 99DA              ;
 653+ 99DA              ;	Inc_CTRL_DESPLZ
 654+ 99DA              ;
 655+ 99DA              ;
 656+ 99DA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 99DA
 658+ 99DA 21 37 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 99DD 3A 59 88     	ld a,(Vel_right)
 660+ 99E0 A7           	and a
 661+ 99E1 28 06        	jr z,1F
 662+ 99E3 47           	ld b,a
 663+ 99E4 34           3 inc (hl)
 664+ 99E5 10 FD        	djnz 3B
 665+ 99E7 18 01        	jr 2F
 666+ 99E9 34           1 inc (hl)
 667+ 99EA C9           2 ret
 668+ 99EB
 669+ 99EB              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 99EB              ;
 671+ 99EB              ;	5/2/23
 672+ 99EB              ;
 673+ 99EB              ;	Dec_CTRL_DESPLZ
 674+ 99EB              ;
 675+ 99EB              ;
 676+ 99EB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 99EB
 678+ 99EB 21 37 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 99EE 3A 58 88     	ld a,(Vel_left)
 680+ 99F1 A7           	and a
 681+ 99F2 28 06        	jr z,1F
 682+ 99F4 47           	ld b,a
 683+ 99F5 35           3 dec (hl)
 684+ 99F6 10 FD        	djnz 3B
 685+ 99F8 18 01        	jr 2F
 686+ 99FA 35           1 dec (hl)
 687+ 99FB C9           2 ret
 688+ 99FC
 689+ 99FC              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 99FC
 691+ 99FC 2A 31 88     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 99FF 01 1F 00     	ld bc,31
 693+ 9A02 A7           	and a
 694+ 9A03 ED 4A        	adc hl,bc
 695+ 9A05 22 31 88     	ld (Posicion_actual),hl
 696+ 9A08 21 51 88     	ld hl,Ctrl_0														; $xxx1
 697+ 9A0B CB C6        	set 0,(hl)
 698+ 9A0D C9           	ret
 699+ 9A0E
 700+ 9A0E              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9A0E
 702+ 9A0E 2A 31 88     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9A11 01 1F 00     	ld bc,31
 704+ 9A14 A7           	and a
 705+ 9A15 ED 42        	sbc hl,bc
 706+ 9A17 22 31 88     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9A1A 21 51 88     	ld hl,Ctrl_0
 708+ 9A1D CB CE        	set 1,(hl)
 709+ 9A1F C9           	ret
 710+ 9A20
 711+ 9A20              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9A20
 713+ 9A20 24           Reaparece_abajo inc h
 714+ 9A21 01 E0 17     	ld bc,$17e0
 715+ 9A24 A7           	and a
 716+ 9A25 ED 4A        	adc hl,bc
 717+ 9A27 22 31 88     	ld (Posicion_actual),hl
 718+ 9A2A 21 51 88     	ld hl,Ctrl_0
 719+ 9A2D CB D6        	set 2,(hl)
 720+ 9A2F C9           	ret
 721+ 9A30
 722+ 9A30              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9A30
 724+ 9A30 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9A33 A7           	and a
 726+ 9A34 ED 42        	sbc hl,bc
 727+ 9A36 22 31 88     	ld (Posicion_actual),hl
 728+ 9A39 21 51 88     	ld hl,Ctrl_0
 729+ 9A3C CB DE        	set 3,(hl)
 730+ 9A3E C9           	ret
 731+ 9A3F
 732+ 9A3F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9A3F              ;
 734+ 9A3F              ;	15/07/23
 735+ 9A3F
 736+ 9A3F              Reinicio
 737+ 9A3F
 738+ 9A3F              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9A3F
 740+ 9A3F AF           	xor a
 741+ 9A40 21 68 88     	ld hl,Puntero_indice_mov_bucle
 742+ 9A43 CD 61 9A     	call Limpia_contenido_hl
 743+ 9A46
 744+ 9A46 21 31 88     	ld hl,Posicion_actual
 745+ 9A49 CD 61 9A     	call Limpia_contenido_hl
 746+ 9A4C
 747+ 9A4C CD 9C 86     	call Inicializa_Puntero_indice_mov
 748+ 9A4F CD 22 9D     	call Inicia_Puntero_mov
 749+ 9A52
 750+ 9A52 21 6A 88     	ld hl,Incrementa_puntero
 751+ 9A55 06 05        	ld b,5
 752+ 9A57 77           1 ld (hl),a
 753+ 9A58 23           	inc hl
 754+ 9A59 10 FC        	djnz 1B
 755+ 9A5B
 756+ 9A5B 21 56 88     	ld hl,Ctrl_2
 757+ 9A5E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9A60
 759+ 9A60 C9           	ret
 760+ 9A61
 761+ 9A61 77           Limpia_contenido_hl	ld (hl),a
 762+ 9A62 23           	inc hl
 763+ 9A63 77           	ld (hl),a
 764+ 9A64 C9           	ret
 765+ 9A65
 766+ 9A65
# file closed: Direcciones.asm
1762  9A65              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9A65              ; ------------------------------------------------------------------------
   2+ 9A65              ;
   3+ 9A65              ;	30/1/24
   4+ 9A65              ;
   5+ 9A65              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9A65              ;	Fila superior "0", Columna izquierda "0".
   7+ 9A65              ;
   8+ 9A65              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9A65              ;
  10+ 9A65              ;	Modifica: A,BC y DE.
  11+ 9A65
  12+ 9A65 7D           Genera_coordenadas ld a,l
  13+ 9A66 E6 1F        	and $1f
  14+ 9A68 32 35 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9A6B
  16+ 9A6B 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9A6C FE 40        	cp $40
  18+ 9A6E 38 1C        	jr c,4F
  19+ 9A70
  20+ 9A70 CD CD 96     	call calcula_tercio
  21+ 9A73 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9A74
  23+ 9A74 1E 00        	ld e,0
  24+ 9A76 7D           	ld a,l
  25+ 9A77 E6 E0        	and $e0
  26+ 9A79 28 01        	jr z,1F
  27+ 9A7B 04           	inc b
  28+ 9A7C
  29+ 9A7C 04           1 inc b
  30+ 9A7D 05           	dec b
  31+ 9A7E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9A80              ;														; _ , salimos.
  33+ 9A80 1C           3 inc e
  34+ 9A81 D6 20        	sub 32
  35+ 9A83 20 FB        	jr nz,3B
  36+ 9A85 10 F5        	djnz 1B
  37+ 9A87
  38+ 9A87 7B           2 ld a,e
  39+ 9A88 32 36 88     	ld (Coordenada_y),a
  40+ 9A8B C9           	ret
  41+ 9A8C
  42+ 9A8C AF           4 xor a
  43+ 9A8D 32 36 88     	ld (Coordenada_y),a
  44+ 9A90 C9           	ret
  45+ 9A91
  46+ 9A91              ; ------------------------------------------------------------------------
  47+ 9A91              ;	28/05/23
  48+ 9A91              ;
  49+ 9A91              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9A91              ;	Fila superior "0", Columna izquierda "0".
  51+ 9A91              ;
  52+ 9A91              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9A91              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9A91              ;
  55+ 9A91              ;		DE="$120d"
  56+ 9A91              ;
  57+ 9A91              ;		D, (Coordenada_X), Columnas, $12
  58+ 9A91              ;		E, (Coordenada_y), Filas, $0d
  59+ 9A91              ;
  60+ 9A91              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9A91
  62+ 9A91              ;	Modifica: A,BC y DE.
  63+ 9A91
  64+ 9A91
  65+ 9A91              Genera_coordenadas_disparo
  66+ 9A91
  67+ 9A91              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9A91
  69+ 9A91 7D           	ld a,l
  70+ 9A92 E6 1F        	and $1f
  71+ 9A94 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9A95 CD CD 96     	call calcula_tercio
  73+ 9A98 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9A99 1E 00        	ld e,0
  75+ 9A9B 7D           	ld a,l
  76+ 9A9C E6 E0        	and $e0
  77+ 9A9E 28 01        	jr z,1F
  78+ 9AA0 04           	inc b
  79+ 9AA1 1C           1 inc e
  80+ 9AA2 D6 20        	sub 32
  81+ 9AA4 20 FB        	jr nz,1B
  82+ 9AA6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9AA8 C9           	ret
  84+ 9AA9
# file closed: Genera_coordenadas.asm
1763  9AA9              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9AA9              ; Relojes y temporizaciones.
   2+ 9AA9
   3+ 9AA9              ; ------------------------------------------------------
   4+ 9AA9              ;
   5+ 9AA9              ;	16/7/23
   6+ 9AA9              ;
   7+ 9AA9              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9AA9              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9AA9              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9AA9              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9AA9              ;
  12+ 9AA9              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9AA9              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9AA9
  15+ 9AA9              ; Disparo_entidad db 1
  16+ 9AA9              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9AA9              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9AA9
  19+ 9AA9              Habilita_disparos
  20+ 9AA9
  21+ 9AA9 7E           	ld a,(hl)
  22+ 9AAA A7           	and a
  23+ 9AAB C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9AAC
  25+ 9AAC EB           	ex de,hl
  26+ 9AAD
  27+ 9AAD 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9AAE C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9AAF
  30+ 9AAF              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9AAF
  32+ 9AAF 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9AB0 7E           	ld a,(hl)
  34+ 9AB1 23           	inc hl
  35+ 9AB2 77           	ld (hl),a
  36+ 9AB3
  37+ 9AB3 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9AB4 3E 01        	ld a,1
  39+ 9AB6 77           	ld (hl),a
  40+ 9AB7 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1764  9AB8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9AB8
   2+ 9AB8
   3+ 9AB8              ;   07/07/23
   4+ 9AB8              ;
   5+ 9AB8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9AB8              ;
   7+ 9AB8              ;   Codificación:
   8+ 9AB8              ;
   9+ 9AB8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9AB8              ;
  11+ 9AB8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9AB8              ;
  13+ 9AB8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9AB8              ;
  15+ 9AB8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9AB8              ;
  17+ 9AB8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9AB8              ;                               ..... %01000010 Vel_up 4
  19+ 9AB8              ;                                               Vel_down 2
  20+ 9AB8              ;                               ..... $42
  21+ 9AB8              ;
  22+ 9AB8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9AB8              ;
  24+ 9AB8              ;                               ..... %01000010 Vel_left 4
  25+ 9AB8              ;                                               Vel_right 2
  26+ 9AB8              ;                               ..... $42
  27+ 9AB8              ;
  28+ 9AB8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9AB8              ;
  30+ 9AB8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9AB8              ;
  32+ 9AB8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9AB8              ;
  34+ 9AB8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9AB8              ;                                     $53
  36+ 9AB8              ;
  37+ 9AB8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9AB8              ;
  39+ 9AB8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9AB8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9AB8              ;
  42+ 9AB8              ;                       Arriba ..... $81
  43+ 9AB8              ;                       Arriba - izquierda ..... $a1
  44+ 9AB8              ;                       Arriba - derecha ..... $91
  45+ 9AB8              ;
  46+ 9AB8              ;                       Abajo ..... $41
  47+ 9AB8              ;                       Abajo - izquierda ..... $61
  48+ 9AB8              ;                       Abajo - derecha ..... $51
  49+ 9AB8              ;
  50+ 9AB8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9AB8              ;
  52+ 9AB8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9AB8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9AB8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9AB8              ;
  56+ 9AB8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9AB8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9AB8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9AB8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9AB8              ;
  61+ 9AB8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9AB8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9AB8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9AB8              ;
  65+ 9AB8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9AB8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9AB8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9AB8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9AB8
  70+ 9AB8              ; ----- ----- ----- ----- -----
  71+ 9AB8
  72+ 9AB8 E4 9A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9ABA EC 9A            defw F_1
  74+ 9ABC F6 9A            defw F_2
  75+ 9ABE 00 9B            defw Codo_abajo_derecha
  76+ 9AC0 34 9B            defw Derecha_y_subiendo
  77+ 9AC2 3E 9B            defw Derecha_y_subiendo_1
  78+ 9AC4 48 9B            defw F_3
  79+ 9AC6 52 9B            defw F_4
  80+ 9AC8 5C 9B            defw Derecha_y_bajando
  81+ 9ACA 66 9B            defw Derecha_y_bajando_1
  82+ 9ACC 70 9B            defw Derecha_y_bajando_2
  83+ 9ACE 7A 9B            defw Codo_derecha_abajo
  84+ 9AD0 AA 9B            defw Codo_abajo_izq.
  85+ 9AD2 DE 9B            defw Izquierda_y_subiendo
  86+ 9AD4 E8 9B            defw Izquierda_y_subiendo_1
  87+ 9AD6 F2 9B            defw F_5
  88+ 9AD8 FC 9B            defw F_6
  89+ 9ADA 06 9C            defw Izquierda_y_bajando
  90+ 9ADC 10 9C            defw Izquierda_y_bajando_1
  91+ 9ADE 1A 9C            defw Izquierda_y_bajando_2
  92+ 9AE0 24 9C            defw Codo_izquierda_abajo
  93+ 9AE2 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9AE4
  95+ 9AE4 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9AE8 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9AEC
  98+ 9AEC 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9AF0 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9AF4 08 00
 100+ 9AF6 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9AFA 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9AFE 0F FE
 102+ 9B00
 103+ 9B00 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9B04 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9B0C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9B14 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9B1C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9B24 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9B28 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9B2C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9B30 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9B34
 117+ 9B34 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9B38 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9B3C 06 00
 119+ 9B3E
 120+ 9B3E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9B42 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9B46 02 00
 122+ 9B48
 123+ 9B48 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9B4C 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9B50 04 00
 125+ 9B52 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9B56 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9B5A 08 00
 127+ 9B5C
 128+ 9B5C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9B60 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9B64 02 00
 130+ 9B66
 131+ 9B66 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9B6A 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9B6E 06 00
 133+ 9B70
 134+ 9B70 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9B74 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9B78 06 00
 136+ 9B7A
 137+ 9B7A              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9B7A
 139+ 9B7A 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9B7E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9B82 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9B86 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9B8A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9B8E 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9B92 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9B96 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9B9A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9B9E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9BA2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9BA6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9BAA
 152+ 9BAA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9BAE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9BB2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9BB6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9BBA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9BBE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9BC2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9BC6 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9BCA 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9BCE 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9BD2 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9BD6 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9BDA 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9BDE
 166+ 9BDE 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9BE2 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9BE6 06 00
 168+ 9BE8
 169+ 9BE8 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9BEC 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9BF0 02 00
 171+ 9BF2
 172+ 9BF2 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9BF6 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9BFA 04 00
 174+ 9BFC 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9C00 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9C04 08 00
 176+ 9C06
 177+ 9C06 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9C0A 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9C0E 02 00
 179+ 9C10
 180+ 9C10 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9C14 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9C18 06 00
 182+ 9C1A
 183+ 9C1A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9C1E 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9C22 06 00
 185+ 9C24
 186+ 9C24 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9C28 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9C2C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9C30 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9C34 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9C38 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9C3C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9C40 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9C44 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9C48 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9C4C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9C50 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9C54
 199+ 9C54              ; ----- ----- ----- ----- -----
 200+ 9C54              ;
 201+ 9C54              ;   28/12/23
 202+ 9C54
 203+ 9C54              Movimiento
 204+ 9C54
 205+ 9C54              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9C54
 207+ 9C54 3A 56 88         ld a,(Ctrl_2)
 208+ 9C57 CB 57            bit 2,a
 209+ 9C59 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9C5B
 211+ 9C5B 2A 66 88         ld hl,(Puntero_mov)
 212+ 9C5E 7E               ld a,(hl)
 213+ 9C5F
 214+ 9C5F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9C5F
 216+ 9C5F              Inicia_desplazamiento.
 217+ 9C5F
 218+ 9C5F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9C5F
 220+ 9C5F CD 5F 9D         call Ajusta_velocidad_desplazamiento
 221+ 9C62
 222+ 9C62              ; Iniciamos (Repetimos_mov).
 223+ 9C62
 224+ 9C62 7E               ld a,(hl)
 225+ 9C63 E6 0F            and $0f
 226+ 9C65 32 6C 88         ld (Repetimos_desplazamiento),a
 227+ 9C68 32 6D 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9C6B
 229+ 9C6B              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9C6B
 231+ 9C6B 23               inc hl
 232+ 9C6C 7E               ld a,(hl)
 233+ 9C6D 32 6F 88         ld (Cola_de_desplazamiento),a
 234+ 9C70 2B               dec hl
 235+ 9C71
 236+ 9C71 21 56 88         ld hl,Ctrl_2
 237+ 9C74 CB D6            set 2,(hl)
 238+ 9C76
 239+ 9C76              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9C76              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9C76
 242+ 9C76              Desplazamiento_iniciado
 243+ 9C76
 244+ 9C76 CD 2D 9D         call Aplica_desplazamiento
 245+ 9C79
 246+ 9C79              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9C79
 248+ 9C79 3A 8F 88         ld a,(Ctrl_3)
 249+ 9C7C CB 57            bit 2,a
 250+ 9C7E C0               ret nz
 251+ 9C7F
 252+ 9C7F 3A 56 88         ld a,(Ctrl_2)
 253+ 9C82 CB 67            bit 4,a
 254+ 9C84 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9C85
 256+ 9C85 21 6C 88     3 ld hl,Repetimos_desplazamiento
 257+ 9C88 35               dec (hl)
 258+ 9C89 C0               ret nz
 259+ 9C8A
 260+ 9C8A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9C8A              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9C8A              ; Analiza (Cola_de_desplazamiento).
 263+ 9C8A
 264+ 9C8A 3A 6F 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9C8D A7               and a
 266+ 9C8E CC 88 9D         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9C91 28 30            jr z,Reinicia_el_movimiento
 268+ 9C93
 269+ 9C93 FE FF            cp $ff
 270+ 9C95 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9C97
 272+ 9C97 FE FE            cp $fe
 273+ 9C99 CC 06 9D         call z,Fijamos_bucle
 274+ 9C9C 28 25            jr z,Reinicia_el_movimiento
 275+ 9C9E
 276+ 9C9E FE FD            cp $fd
 277+ 9CA0 20 11            jr nz,1F
 278+ 9CA2
 279+ 9CA2              ; ---
 280+ 9CA2              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9CA2
 282+ 9CA2 3A 56 88         ld a,(Ctrl_2)
 283+ 9CA5 CB 5F            bit 3,a
 284+ 9CA7 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9CA9
 286+ 9CA9              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9CA9
 288+ 9CA9 21 56 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9CAC CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9CAE
 291+ 9CAE CD 17 9D         call Inicia_Repetimos_movimiento
 292+ 9CB1 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9CB3              ; ---
 294+ 9CB3
 295+ 9CB3 FE 01        1 cp 1
 296+ 9CB5 CA F0 9C         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9CB8
 298+ 9CB8 3D               dec a
 299+ 9CB9 32 6F 88         ld (Cola_de_desplazamiento),a
 300+ 9CBC
 301+ 9CBC 3A 6D 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9CBF 32 6C 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9CC2              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9CC2 C9               ret
 305+ 9CC3
 306+ 9CC3              Reinicia_el_movimiento
 307+ 9CC3
 308+ 9CC3 3A 56 88         ld a,(Ctrl_2)
 309+ 9CC6 CB 5F            bit 3,a
 310+ 9CC8 28 1B            jr z,2F
 311+ 9CCA
 312+ 9CCA              ; (Cola_de_desplazamiento)="254".
 313+ 9CCA
 314+ 9CCA 21 6E 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9CCD 35               dec (hl)
 316+ 9CCE 20 15            jr nz,2F
 317+ 9CD0
 318+ 9CD0              ; Fin de las repeticiones del último movimiento.
 319+ 9CD0
 320+ 9CD0 21 56 88         ld hl,Ctrl_2
 321+ 9CD3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9CD5
 323+ 9CD5 2A 66 88         ld hl,(Puntero_mov)
 324+ 9CD8 23               inc hl
 325+ 9CD9 23               inc hl
 326+ 9CDA 23               inc hl
 327+ 9CDB 22 66 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9CDE              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9CDE 7E               ld a,(hl)
 330+ 9CDF 32 6F 88         ld (Cola_de_desplazamiento),a
 331+ 9CE2
 332+ 9CE2 C3 8A 9C         jp Cola
 333+ 9CE5
 334+ 9CE5 CD 22 9D     2 call Inicia_Puntero_mov
 335+ 9CE8
 336+ 9CE8 21 56 88         ld hl,Ctrl_2
 337+ 9CEB CB 96            res 2,(hl)
 338+ 9CED
 339+ 9CED C3 54 9C         jp Movimiento
 340+ 9CF0
 341+ 9CF0              Siguiente_desplazamiento
 342+ 9CF0
 343+ 9CF0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9CF0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9CF0
 346+ 9CF0 21 56 88         ld hl,Ctrl_2
 347+ 9CF3 CB 96            res 2,(hl)
 348+ 9CF5
 349+ 9CF5 2A 66 88         ld hl,(Puntero_mov)
 350+ 9CF8 23               inc hl
 351+ 9CF9 23               inc hl
 352+ 9CFA 22 66 88         ld (Puntero_mov),hl
 353+ 9CFD
 354+ 9CFD 7E               ld a,(hl)
 355+ 9CFE A7               and a
 356+ 9CFF CC 88 9D         call z,Incrementa_Puntero_indice_mov
 357+ 9D02 CA C3 9C         jp z,Reinicia_el_movimiento
 358+ 9D05
 359+ 9D05 C9               ret
 360+ 9D06
 361+ 9D06              ; Subrutinas -----------------------------------------
 362+ 9D06              ; ---------- --------- --------- ---------- ----------
 363+ 9D06              ;
 364+ 9D06              ;   24/07/23
 365+ 9D06              ;
 366+ 9D06              ;   Fijamos_bucle
 367+ 9D06              ;
 368+ 9D06              ;
 369+ 9D06
 370+ 9D06              Fijamos_bucle
 371+ 9D06
 372+ 9D06 3A 6A 88         ld a,(Incrementa_puntero)
 373+ 9D09 3C               inc a
 374+ 9D0A 32 6B 88         ld (Incrementa_puntero_backup),a
 375+ 9D0D
 376+ 9D0D CD 88 9D         call Incrementa_Puntero_indice_mov
 377+ 9D10 2A 64 88         ld hl,(Puntero_indice_mov)
 378+ 9D13 22 68 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9D16 C9               ret
 380+ 9D17
 381+ 9D17              ; ---------- --------- --------- ---------- ----------
 382+ 9D17              ;
 383+ 9D17              ;   07/7/23
 384+ 9D17              ;
 385+ 9D17              ;   Inicia_Repetimos_movimiento
 386+ 9D17              ;
 387+ 9D17              ;
 388+ 9D17
 389+ 9D17              Inicia_Repetimos_movimiento
 390+ 9D17
 391+ 9D17              ; Iniciamos (Repetimos_movimiento).
 392+ 9D17
 393+ 9D17 DD 2A 66 88      ld ix,(Puntero_mov)
 394+ 9D1B DD 7E 02         ld a,(ix+2)
 395+ 9D1E 32 6E 88         ld (Repetimos_movimiento),a
 396+ 9D21
 397+ 9D21 C9               ret
 398+ 9D22
 399+ 9D22              ; ---------- --------- --------- ---------- ----------
 400+ 9D22              ;
 401+ 9D22              ;   26/6/23
 402+ 9D22              ;
 403+ 9D22              ;   Inicia_Puntero_mov
 404+ 9D22              ;
 405+ 9D22              ;
 406+ 9D22
 407+ 9D22 2A 64 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9D25 5E               ld e,(hl)
 409+ 9D26 23               inc hl
 410+ 9D27 56               ld d,(hl)
 411+ 9D28 EB               ex de,hl
 412+ 9D29 22 66 88         ld (Puntero_mov),hl
 413+ 9D2C C9               ret
 414+ 9D2D
 415+ 9D2D              ; ---------- --------- --------- ---------- ----------
 416+ 9D2D              ;
 417+ 9D2D              ;   27/06/23
 418+ 9D2D              ;
 419+ 9D2D              ;   Aplica_movimiento.
 420+ 9D2D
 421+ 9D2D              Aplica_desplazamiento
 422+ 9D2D
 423+ 9D2D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9D2D
 425+ 9D2D 2A 66 88         ld hl, (Puntero_mov)
 426+ 9D30
 427+ 9D30 7E               ld a,(hl)
 428+ 9D31 E6 F0            and $f0
 429+ 9D33 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9D34
 431+ 9D34 CB 7E            bit 7,(hl)
 432+ 9D36 28 03            jr z,1F
 433+ 9D38 CD 4C 97         call Mov_up
 434+ 9D3B 2A 66 88     1 ld hl, (Puntero_mov)
 435+ 9D3E CB 76            bit 6,(hl)
 436+ 9D40 28 09            jr z,2F
 437+ 9D42 CD 13 97         call Mov_down
 438+ 9D45
 439+ 9D45              ; Se ha aplicado reinicio ???
 440+ 9D45              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9D45
 442+ 9D45 3A 8F 88         ld a,(Ctrl_3)
 443+ 9D48 CB 57            bit 2,a
 444+ 9D4A C0               ret nz
 445+ 9D4B
 446+ 9D4B 2A 66 88     2 ld hl, (Puntero_mov)
 447+ 9D4E CB 6E            bit 5,(hl)
 448+ 9D50 28 03            jr z,3F
 449+ 9D52 CD B2 98         call Mov_left
 450+ 9D55 2A 66 88     3 ld hl, (Puntero_mov)
 451+ 9D58 CB 66            bit 4,(hl)
 452+ 9D5A C8               ret z
 453+ 9D5B CD 8F 97         call Mov_right
 454+ 9D5E C9               ret
 455+ 9D5F
 456+ 9D5F              ; ---------- --------- --------- ---------- ----------
 457+ 9D5F              ;
 458+ 9D5F              ;   26/06/23
 459+ 9D5F              ;
 460+ 9D5F              ;   Ajusta_velocidad_desplazamiento.
 461+ 9D5F
 462+ 9D5F              Ajusta_velocidad_desplazamiento
 463+ 9D5F
 464+ 9D5F              ; 1er byte de la cadena de movimiento.
 465+ 9D5F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9D5F
 467+ 9D5F CD 7D 9D         call Extrae_nibble_alto
 468+ 9D62
 469+ 9D62 32 5A 88         ld (Vel_up),a
 470+ 9D65 79               ld a,c
 471+ 9D66 E6 0F            and $0f
 472+ 9D68 32 5B 88         ld (Vel_down),a
 473+ 9D6B
 474+ 9D6B              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9D6B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9D6B
 477+ 9D6B 23               inc hl
 478+ 9D6C CD 7D 9D         call Extrae_nibble_alto
 479+ 9D6F
 480+ 9D6F 32 58 88         ld (Vel_left),a
 481+ 9D72 79               ld a,c
 482+ 9D73 E6 0F            and $0f
 483+ 9D75 32 59 88         ld (Vel_right),a
 484+ 9D78
 485+ 9D78              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9D78
 487+ 9D78 23               inc hl
 488+ 9D79 22 66 88         ld (Puntero_mov),hl
 489+ 9D7C C9               ret
 490+ 9D7D
 491+ 9D7D 06 04        Extrae_nibble_alto ld b,4
 492+ 9D7F 7E               ld a,(hl)
 493+ 9D80 4F               ld c,a
 494+ 9D81 E6 F0            and $f0
 495+ 9D83 CB 3F        1 srl a
 496+ 9D85 10 FC            djnz 1B
 497+ 9D87 C9               ret
 498+ 9D88
 499+ 9D88              ; ---------- --------- --------- ---------- ----------
 500+ 9D88              ;
 501+ 9D88              ;   5/7/23
 502+ 9D88              ;
 503+ 9D88              ;   Incrementa_Puntero_indice_mov
 504+ 9D88
 505+ 9D88              Incrementa_Puntero_indice_mov
 506+ 9D88
 507+ 9D88 21 6A 88         ld hl,Incrementa_puntero
 508+ 9D8B 34               inc (hl)
 509+ 9D8C
 510+ 9D8C 2A 64 88         ld hl,(Puntero_indice_mov)
 511+ 9D8F 01 02 00         ld bc,2
 512+ 9D92 A7               and a
 513+ 9D93 09               add hl,bc
 514+ 9D94 22 64 88         ld (Puntero_indice_mov),hl
 515+ 9D97
 516+ 9D97 7E               ld a,(hl)
 517+ 9D98 A7               and a
 518+ 9D99
 519+ 9D99              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9D99
 521+ 9D99              ;    jr z,$
 522+ 9D99
 523+ 9D99              ;! Reinicia el Patrón de movimiento.
 524+ 9D99
 525+ 9D99 CC 9E 9D         call z,Inicializa_Puntero_indice_mov_2
 526+ 9D9C
 527+ 9D9C AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9D9D
 529+ 9D9D C9               ret
 530+ 9D9E
 531+ 9D9E              ; ---------- --------- --------- ---------- ----------
 532+ 9D9E              ;
 533+ 9D9E              ;   15/01/24
 534+ 9D9E              ;
 535+ 9D9E              ;   Inicializa_Puntero_indice_mov
 536+ 9D9E
 537+ 9D9E              Inicializa_Puntero_indice_mov_2
 538+ 9D9E
 539+ 9D9E              ; Existe etiqueta de bucle principal???
 540+ 9D9E
 541+ 9D9E 2A 68 88         ld hl,(Puntero_indice_mov_bucle)
 542+ 9DA1 24               inc h
 543+ 9DA2 25               dec h
 544+ 9DA3 28 05            jr z,2F
 545+ 9DA5
 546+ 9DA5 22 64 88         ld (Puntero_indice_mov),hl
 547+ 9DA8 18 14            jr 3F
 548+ 9DAA
 549+ 9DAA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9DAA
 551+ 9DAA 3A 6A 88     2 ld a,(Incrementa_puntero)
 552+ 9DAD 47               ld b,a
 553+ 9DAE
 554+ 9DAE 2A 64 88         ld hl,(Puntero_indice_mov)
 555+ 9DB1 2B           1 dec hl
 556+ 9DB2 2B               dec hl
 557+ 9DB3 10 FC            djnz 1B
 558+ 9DB5 22 64 88         ld (Puntero_indice_mov),hl
 559+ 9DB8
 560+ 9DB8 AF               xor a
 561+ 9DB9 32 6A 88         ld (Incrementa_puntero),a
 562+ 9DBC 18 06            jr 4F
 563+ 9DBE
 564+ 9DBE 3A 6B 88     3 ld a,(Incrementa_puntero_backup)
 565+ 9DC1 32 6A 88         ld (Incrementa_puntero),a
 566+ 9DC4 C9           4 ret
 567+ 9DC5
 568+ 9DC5              ; ----------------------------------------------------------------------
 569+ 9DC5              ;
 570+ 9DC5              ;   30/01/24
 571+ 9DC5              ;
 572+ 9DC5              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 573+ 9DC5
 574+ 9DC5 3A 2E 88     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 575+ 9DC8 CD AA 87         call Calcula_salto_en_BC
 576+ 9DCB 21 5C 88         ld hl,Contador_general_de_mov_masticados_Entidad_1
 577+ 9DCE A7               and a
 578+ 9DCF ED 4A            adc hl,bc
 579+ 9DD1 C9               ret
 580+ 9DD2
 581+ 9DD2              ; ----------------------------------------------------------------------
 582+ 9DD2              ;
 583+ 9DD2              ;   30/01/24
 584+ 9DD2              ;
 585+ 9DD2              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 586+ 9DD2              ;
 587+ 9DD2              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 588+ 9DD2
 589+ 9DD2 4E           Transfiere_datos_de_contadores ld c,(hl)
 590+ 9DD3 23               inc hl
 591+ 9DD4 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 592+ 9DD5 69               ld l,c
 593+ 9DD6 60               ld h,b
 594+ 9DD7 22 4F 88         ld (Contador_de_mov_masticados),hl
 595+ 9DDA C9               ret
 596+ 9DDB
 597+ 9DDB
# file closed: Patrones_de_mov.asm
1765  9DDB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9DDB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9DDB              ;
   3+ 9DDB              ;	12/12/23
   4+ 9DDB              ;
   5+ 9DDB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9DDB
   7+ 9DDB              ;	ADC HL,SP	LD (addr),SP
   8+ 9DDB              ;	ADD HL,SP	LD SP,(addr)
   9+ 9DDB              ;	ADD IX,SP	LD SP,nn
  10+ 9DDB              ; 	ADD IY,SP	LD SP,HL
  11+ 9DDB              ;				LD SP,IX
  12+ 9DDB              ;	DEC SP		LD SP,IY
  13+ 9DDB
  14+ 9DDB              ;	EX (SP),HL
  15+ 9DDB              ;	EX (SP),IX
  16+ 9DDB              ;	EX (SP),IY
  17+ 9DDB
  18+ 9DDB              ;	INC SP
  19+ 9DDB
  20+ 9DDB                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 ED 73 81 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 711A
  36+ 711A              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 711A
  38+ 711A 31 4B 88         ld sp,Variables_de_borrado+6
  39+ 711D
  40+ 711D E5               push hl
  41+ 711E DD E5            push ix
  42+ 7120 FD E5            push iy
  43+ 7122
  44+ 7122 31 4D 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 7125 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 7127              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 7127
  48+ 7127 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 712A
  50+ 712A E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 712B DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 712D FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 712F
  54+ 712F              ; Disparo o entidad?
  55+ 712F
  56+ 712F 3A 70 88         ld a,(Ctrl_1)
  57+ 7132 CB 47            bit 0,a
  58+ 7134 28 05            jr z,2F
  59+ 7136
  60+ 7136 2A 89 88         ld hl,(Stack_snapshot_disparos)
  61+ 7139 18 0F            jr 4F
  62+ 713B
  63+ 713B              ; No es disparo. Entidad/Amadeus ????
  64+ 713B
  65+ 713B 3A 51 88     2 ld a,(Ctrl_0)
  66+ 713E CB 77            bit 6,a
  67+ 7140 28 05            jr z,7F
  68+ 7142
  69+ 7142              ; Guardamos foto de Amadeus.
  70+ 7142
  71+ 7142 2A 8D 88         ld hl,(End_Snapshot_Amadeus)
  72+ 7145 18 03            jr 4F
  73+ 7147
  74+ 7147 2A 87 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 714A
  76+ 714A 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 714C
  78+ 714C D1           1 pop de
  79+ 714D 73               ld (hl),e
  80+ 714E 23               inc hl
  81+ 714F 72               ld (hl),d
  82+ 7150 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 7151 10 F9            djnz 1B
  84+ 7153
  85+ 7153              ; Disparo o entidad ?
  86+ 7153
  87+ 7153 3A 70 88         ld a,(Ctrl_1)
  88+ 7156 CB 47            bit 0,a
  89+ 7158 28 05            jr z,5F
  90+ 715A
  91+ 715A 22 89 88         ld (Stack_snapshot_disparos),hl
  92+ 715D 18 12            jr 6F
  93+ 715F
  94+ 715F              ; Entidad o Amadeus ?
  95+ 715F
  96+ 715F 3A 51 88     5 ld a,(Ctrl_0)
  97+ 7162 CB 77            bit 6,a
  98+ 7164 28 08            jr z,8F
  99+ 7166
 100+ 7166 22 8D 88         ld (End_Snapshot_Amadeus),hl
 101+ 7169 ED 7B 81 88      ld sp,(Stack)
 102+ 716D C9               ret
 103+ 716E
 104+ 716E 22 87 88     8 ld (Stack_snapshot),hl
 105+ 7171 ED 7B 81 88  6 ld sp,(Stack)
 106+ 7175
 107+ 7175 C9               ret
 108+ 7176
 109+ 7176              ; -----------------------------------------------------------------------------
 110+ 7176              ;
 111+ 7176              ;   21/11/23
 112+ 7176
 113+ 7176              Limpia_y_reinicia_Stack_Snapshot
 114+ 7176
 115+ 7176              ;   Limpia Album_de_fotos.
 116+ 7176
 117+ 7176 2A 87 88         ld hl,(Stack_snapshot)
 118+ 7179 7D               ld a,l
 119+ 717A A7               and a
 120+ 717B C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 717C
 122+ 717C 47               ld b,a
 123+ 717D 04               inc b
 124+ 717E
 125+ 717E 36 00        1 ld (hl),0
 126+ 7180 2D               dec l
 127+ 7181 10 FB            djnz 1B
 128+ 7183
 129+ 7183              ;   Reinicializa (Stack_snapshot).
 130+ 7183
 131+ 7183 AF               xor a
 132+ 7184 32 87 88         ld (Stack_snapshot),a
 133+ 7187
 134+ 7187 C9               ret
# file closed: Guarda_foto_registros.asm
1766  7188
1767  7188              	SAVESNA "Pruebas.sna", START
1768  7188
1769  7188
1770  7188
1771  7188
# file closed: Banco_de_pruebas.asm
