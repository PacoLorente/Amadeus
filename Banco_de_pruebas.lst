# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD C0 8E     	call Frame
  15  AA04 FB           	ei
  16  AA05 ED 4D        	reti
  17  AA07
  18  AA07              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  AA07
  20  AA07              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA07              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA07              ;
   3+ AA07              ;	17/02/23
   4+ AA07              ;
   5+ AA07              ;	Sprites e índices.
   6+ AA07
   7+ AA07              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 19 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 1D 8A        	defw End_Snapshot_1
 267+ 8500 21 8A        	defw End_Snapshot_2
 268+ 8502 25 8A        	defw End_Snapshot_3
 269+ 8504 1B 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 1F 8A        	defw End_Snapshot_disparos_1
 271+ 8508 23 8A        	defw End_Snapshot_disparos_2
 272+ 850A 27 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 DE 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 DE 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  22  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB C1 88        	defw Nivel_2
   7+ 88AD CE 88        	defw Nivel_3
   8+ 88AF DE 88        	defw Nivel_4
   9+ 88B1 F0 88        	defw Nivel_5
  10+ 88B3              ;	...
  11+ 88B3              ;	...
  12+ 88B3              ;	+ Niveles ...
  13+ 88B3
  14+ 88B3 00 00        	defw 0
  15+ 88B5 00 00        	defw 0
  16+ 88B7
  17+ 88B7 09           Nivel_1 db 9	                                ; Nº de entidades.
  18+ 88B8 01 01 01 01  	db 1,1,1,1,1,1,1,1,1						; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  18+ 88BC 01 01 01 01
  18+ 88C0 01
  19+ 88C1 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 88C2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88C6 01 02
  21+ 88C8 02 01 01 01  	db 2,1,1,1,1,2
  21+ 88CC 01 02
  22+ 88CE 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 88CF 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  23+ 88D3 01
  24+ 88D4 03 01 01 01  	db 3,1,1,1,1
  24+ 88D8 01
  25+ 88D9 03 01 01 01  	db 3,1,1,1,1
  25+ 88DD 01
  26+ 88DE 11           Nivel_4 db 17									; Nº de entidades.
  27+ 88DF 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  27+ 88E3 01
  28+ 88E4 04 01 01 01  	db 4,1,1,1,1
  28+ 88E8 01
  29+ 88E9 04 01 01 01  	db 4,1,1,1,1
  29+ 88ED 01
  30+ 88EE 02 03        	db 2,3
  31+ 88F0 14           Nivel_5 db 20									; Nº de entidades.
  32+ 88F1 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  32+ 88F5 01
  33+ 88F6 05 01 01 01  	db 5,1,1,1,1
  33+ 88FA 01
  34+ 88FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88FF 01
  35+ 8900 05 01 01 01  	db 5,1,1,1,1
  35+ 8904 01
  36+ 8905
  37+ 8905              ;---------------------------------------------------------------------------------------------------------------
  38+ 8905              ;
  39+ 8905              ;   3/9/23
  40+ 8905              ;
  41+ 8905              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8905              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8905              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8905              ;	_en la caja DRAW correspondiente.
  45+ 8905              ;
  46+ 8905              ;	MODIFICA: HL,DE y A.
  47+ 8905              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8905
  49+ 8905              Inicializa_Punteros_de_nivel
  50+ 8905
  51+ 8905 21 A9 88     	ld hl,Indice_de_niveles
  52+ 8908 22 54 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 890B CD 96 8D     	call Extrae_address
  54+ 890E 7E           	ld a,(hl)
  55+ 890F 32 07 8A     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8912 23           	inc hl
  57+ 8913 22 56 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8916 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8917
  60+ 8917              ;---------------------------------------------------------------------------------------------------------------
  61+ 8917              ;
  62+ 8917              ;   13/5/23
  63+ 8917              ;
  64+ 8917              ;	Destruye A,BC,HL,DE
  65+ 8917
  66+ 8917              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8917              ;	_del juego.
  68+ 8917
  69+ 8917              Prepara_cajas
  70+ 8917
  71+ 8917              ; Preparamos los punteros de las cajas.
  72+ 8917
  73+ 8917 21 8C 85     	ld hl,Indice_de_cajas
  74+ 891A CD 96 8D     	call Extrae_address
  75+ 891D CD 5A 89     	call Avanza_caja
  76+ 8920
  77+ 8920 CD 9E 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8923
  79+ 8923 2A 56 8A     	ld hl,(Datos_de_nivel)
  80+ 8926
  81+ 8926              ; HL está en los datos del nivel correspondiente.
  82+ 8926              ; B actuará como contador de cajas.
  83+ 8926
  84+ 8926 C5           1 push bc
  85+ 8927
  86+ 8927 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8928 CD 4B 89     	call PreparaBC
  88+ 892B
  89+ 892B 21 85 88     	ld hl,Indice_de_entidades
  90+ 892E CD 53 89     	call SBC_HL_con_BC_y_Extrae
  91+ 8931 22 0D 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8934
  93+ 8934 CD 64 89     	call Datos_de_entidad_a_caja
  94+ 8937
  95+ 8937 2A 05 8A     	ld hl,(Indice_restore_caja)
  96+ 893A CD 96 8D     	call Extrae_address
  97+ 893D CD 5A 89     	call Avanza_caja
  98+ 8940
  99+ 8940 2A 56 8A     	ld hl,(Datos_de_nivel)
 100+ 8943 23           	inc hl
 101+ 8944 22 56 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8947
 103+ 8947 C1           	pop bc
 104+ 8948 10 DC        	djnz 1B
 105+ 894A C9           	ret
 106+ 894B
 107+ 894B CB 27        PreparaBC sla a
 108+ 894D D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 894F 4F           	ld c,a
 110+ 8950 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 8952 C9           	ret
 112+ 8953
 113+ 8953 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8954 ED 4A        	adc hl,bc
 115+ 8956 CD 96 8D     	call Extrae_address
 116+ 8959 C9           	ret
 117+ 895A
 118+ 895A 22 01 8A     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 895D 13           	inc de
 120+ 895E 13           	inc de
 121+ 895F EB           	ex de,hl
 122+ 8960 22 05 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8963 C9           	ret
 124+ 8964
 125+ 8964              Datos_de_entidad_a_caja
 126+ 8964
 127+ 8964              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8964
 129+ 8964
 130+ 8964 ED 5B 01 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8968
 132+ 8968 01 02 00     	ld bc,2
 133+ 896B ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 896D
 135+ 896D 01 07 00     	ld bc,7
 136+ 8970 CD 98 89     	call Situa_DE
 137+ 8973
 138+ 8973 01 05 00     	ld bc,5
 139+ 8976 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8978
 141+ 8978 01 04 00     	ld bc,4
 142+ 897B CD 98 89     	call Situa_DE
 143+ 897E
 144+ 897E 01 07 00     	ld bc,7
 145+ 8981 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8983
 147+ 8983 01 18 00     	ld bc,24
 148+ 8986 CD 98 89     	call Situa_DE
 149+ 8989
 150+ 8989 01 02 00     	ld bc,2
 151+ 898C ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 898E
 153+ 898E              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 898E              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 898E
 156+ 898E 01 0F 00     	ld bc,15									; *****
 157+ 8991 CD 98 89     	call Situa_DE
 158+ 8994
 159+ 8994 3E 03        	ld a,3
 160+ 8996 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8997
 162+ 8997 C9           	ret
 163+ 8998
 164+ 8998 EB           Situa_DE ex de,hl
 165+ 8999 A7           	and a
 166+ 899A ED 4A        	adc hl,bc
 167+ 899C EB           	ex de,hl
 168+ 899D C9           	ret
 169+ 899E
 170+ 899E              ;---------------------------------------------------------------------------------------------------------------
 171+ 899E              ;
 172+ 899E              ;	21/5/23
 173+ 899E              ;
 174+ 899E              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 899E              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 899E              ;
 177+ 899E              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 899E              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 899E              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 899E              ;
 181+ 899E              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 899E              ;	MODIFICA: A y B.
 183+ 899E              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 899E
 185+ 899E              Admin_num_entidades
 186+ 899E
 187+ 899E              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 899E
 189+ 899E 3A 07 8A     	ld a,(Numero_de_entidades)
 190+ 89A1 A7           	and a
 191+ 89A2              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 89A2              ;	jr z,$
 193+ 89A2              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 89A2
 195+ 89A2 20 03        	jr nz,3F
 196+ 89A4
 197+ 89A4              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 89A4
 199+ 89A4 CD 05 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 89A7
 201+ 89A7 3A 07 8A     3 ld a,(Numero_de_entidades)
 202+ 89AA FE 0A        	cp 10
 203+ 89AC 38 08        	jr c,1F
 204+ 89AE
 205+ 89AE              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 89AE              ; Actualizamos variables.
 207+ 89AE
 208+ 89AE 3E 0A        	ld a,10
 209+ 89B0 32 08 8A     	ld (Numero_parcial_de_entidades),a
 210+ 89B3 47           	ld b,a
 211+ 89B4 18 04        	jr 2F
 212+ 89B6
 213+ 89B6              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 89B6              ; (Numero_de_entidades)="0".
 215+ 89B6
 216+ 89B6 32 08 8A     1 ld (Numero_parcial_de_entidades),a
 217+ 89B9 47           	ld b,a
 218+ 89BA C9           2 ret
# file closed: Niveles.asm
  23  89BB
  24  89BB              ; ******************************************************************************************************************************************************************************************
  25  89BB              ; Constantes.
  26  89BB              ; ******************************************************************************************************************************************************************************************
  27  89BB              ;
  28  89BB              ; 25/05/23
  29  89BB              ;
  30  89BB              ; Constantes generales.
  31  89BB              ;
  32  89BB
  33  89BB              Sprite_vacio equ $f000
  34  89BB              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  89BB              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  89BB              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  89BB              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  89BB
  39  89BB              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  89BB              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  89BB              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  89BB              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  89BB              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  89BB              ;                               				        ; De momento situamos este almacén en $7060.
  45  89BB              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  89BB              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  89BB              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  89BB              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  89BB              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  89BB              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  51  89BB
  52  89BB              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  89BB
  54  89BB              ; ******************************************************************************************************************************************************************************************
  55  89BB              ; Variables.
  56  89BB              ; ******************************************************************************************************************************************************************************************
  57  89BB              ;
  58  89BB              ; 28/07/23
  59  89BB              ;
  60  89BB              ; Variables de DRAW. (Motor principal).
  61  89BB              ;
  62  89BB              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  89BB
  64  89BB 00           Filas db 0												; Filas. [DRAW]
  65  89BC 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  89BD 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  89BF 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  89C1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  89C2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  89C3
  71  89C3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  89C3
  73  89C3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  89C4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  89C4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  89C4 00           Attr db 0												; Atributos de la entidad:
  77  89C5
  78  89C5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  89C5              ;
  80  89C5              ;	COLORES: 0 ..... NEGRO
  81  89C5              ;    		 1 ..... AZUL
  82  89C5              ; 			 2 ..... ROJO
  83  89C5              ;			 3 ..... MAGENTA
  84  89C5              ; 			 4 ..... VERDE
  85  89C5              ; 			 5 ..... CIAN
  86  89C5              ;			 6 ..... AMARILLO
  87  89C5              ; 			 7 ..... BLANCO
  88  89C5
  89  89C5 00 00        Indice_Sprite_der defw 0
  90  89C7 00 00        Indice_Sprite_izq defw 0
  91  89C9 00 00        Puntero_DESPLZ_der defw 0
  92  89CB 00 00        Puntero_DESPLZ_izq defw 0
  93  89CD
  94  89CD 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  89CF 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  89D0
  97  89D0              ; Variables de objeto. (Características).
  98  89D0
  99  89D0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  89D1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  89D2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  89D3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  89D4
 104  89D4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  89D5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  89D5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  89D5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89D7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  89D9 00 00        	defw 0
 110  89DB 00 00 00 00  	db 0,0,0,0
 111  89DF
 112  89DF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 113  89E1 00 00        	defw 0
 114  89E3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 115  89E5 00 00 00 00  	db 0,0,0,0
 116  89E9
 117  89E9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 118  89E9
 119  89E9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 120  89EA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 121  89EA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 122  89EA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 123  89EA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 124  89EA              ;
 125  89EA              ; 														DESCRIPCIÖN:
 126  89EA              ;
 127  89EA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 128  89EA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 129  89EA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 130  89EA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 131  89EA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 132  89EA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 133  89EA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 134  89EA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 135  89EA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 136  89EA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 137  89EA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 138  89EA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 139  89EA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 140  89EA              ;
 141  89EA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 142  89EA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 143  89EA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 144  89EA
 145  89EA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 146  89EB
 147  89EB              ; Movimiento. ------------------------------------------------------------------------------------------------------
 148  89EB
 149  89EB 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 150  89EC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 151  89EE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 152  89F0 00 00        Puntero_indice_mov_bucle defw 0							;
 153  89F2              ;
 154  89F2              ;
 155  89F2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 156  89F3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 157  89F3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 158  89F3 00           Incrementa_puntero_backup db 0
 159  89F4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 160  89F5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 161  89F5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 162  89F6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 163  89F7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 164  89F8              ;
 165  89F8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 166  89F8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 167  89F8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 168  89F8              ;
 169  89F8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 170  89F8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 171  89F8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 172  89F8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 173  89F8              ;
 174  89F8              ;														;	"$ff" ..... Bucle infinito de repetición.
 175  89F8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 176  89F8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 177  89F8
 178  89F8
 179  89F8              ; Variables de funcionamiento. [DRAW].
 180  89F8
 181  89F8 00           Columnas db 0
 182  89F9 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 183  89FB              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 184  89FB 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89FC
 186  89FC              ; variables de control general.
 187  89FC
 188  89FC 00           Ctrl_2 db 0
 189  89FD              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 190  89FD              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 191  89FD              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 192  89FD              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 193  89FD              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 194  89FD              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 195  89FD              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 196  89FD              ;
 197  89FD              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 198  89FD              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 199  89FD              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 200  89FD              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 201  89FD              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 202  89FD
 203  89FD 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 204  89FE
 205  89FE              ;! 67 Bytes por entidad.
 206  89FE
 207  89FE              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 208  89FE              ;					         		---------;      ;---------
 209  89FE
 210  89FE
 211  89FE              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 212  89FE
 213  89FE 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 214  89FF
 215  89FF              ;														DESCRIPCIÓN:
 216  89FF              ;
 217  89FF              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 218  89FF              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 219  89FF              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 220  89FF              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 221  89FF              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 222  89FF              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 223  89FF
 224  89FF              ;														BIT 3, Recarga de nueva oleada.
 225  89FF              ;														BIT 4, Recarga de nueva oleada.
 226  89FF              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 227  89FF              ;														BIT 6, **** Frame completo.
 228  89FF
 229  89FF 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 230  8A01              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 231  8A01              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 232  8A01              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 233  8A01
 234  8A01
 235  8A01
 236  8A01              ; Gestión de ENTIDADES y CAJAS.
 237  8A01
 238  8A01 00 00        Puntero_store_caja defw 0
 239  8A03 00 00        Puntero_restore_caja defw 0
 240  8A05 00 00        Indice_restore_caja defw 0
 241  8A07 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 242  8A08 00           Numero_parcial_de_entidades db 0
 243  8A09 00           Entidades_en_curso db 0									; ..... ..... .....
 244  8A0A 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 245  8A0B              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 246  8A0B              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 247  8A0B              ;														; _ (Numero_de_malotes)="0".
 248  8A0B 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 249  8A0D 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 250  8A0F              ;														; _ puntero (Indice_entidades).
 251  8A0F
 252  8A0F
 253  8A0F              ;---------------------------------------------------------------------------------------------------------------
 254  8A0F              ;
 255  8A0F              ;	2/9/23
 256  8A0F              ;
 257  8A0F              ;	Álbumes.
 258  8A0F
 259  8A0F 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 260  8A11              ;														; _variable para almacenar lo posición del puntero_
 261  8A11              ; 														; _de pila, SP.
 262  8A11 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 263  8A13              ;														; La utiliza la rutina [Extrae_foto_registros].
 264  8A13 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 265  8A15 00 00        Stack_snapshot defw 0
 266  8A17 00 00        Stack_snapshot_disparos defw 0
 267  8A19
 268  8A19 00 00        End_Snapshot defw 0
 269  8A1B              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 270  8A1B 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 271  8A1D              ;														; _el snapshot de los registros del siguiente disparo.
 272  8A1D              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 273  8A1D 00 00        End_Snapshot_1 defw 0
 274  8A1F 00 00        End_Snapshot_disparos_1 defw 0
 275  8A21 00 00        End_Snapshot_2 defw 0
 276  8A23 00 00        End_Snapshot_disparos_2 defw 0
 277  8A25 00 00        End_Snapshot_3 defw 0
 278  8A27 00 00        End_Snapshot_disparos_3 defw 0
 279  8A29
 280  8A29 00 00        Puntero_indice_album_de_fotos defw 0
 281  8A2B 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 282  8A2D
 283  8A2D 00 00        Puntero_indice_End_Snapshot defw 0
 284  8A2F 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 285  8A31 00 00        Puntero_de_End_Snapshot defw 0
 286  8A33 00 00        Puntero_de_End_Snapshot_disparos defw 0
 287  8A35
 288  8A35              ;---------------------------------------------------------------------------------------------------------------
 289  8A35
 290  8A35              ; Gestión de Disparos.
 291  8A35
 292  8A35 00           Numero_de_disparotes db 0
 293  8A36 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 294  8A38 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 295  8A3A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 296  8A3B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 297  8A3B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 298  8A3B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 299  8A3D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 300  8A3D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 301  8A3D              ;														; _produzca colisión.
 302  8A3D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 303  8A3F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 304  8A3F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8A42              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 306  8A42 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 307  8A45              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 308  8A45 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 309  8A47 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 310  8A48
 311  8A48              ;---------------------------------------------------------------------------------------------------------------
 312  8A48
 313  8A48              ; Relojes y temporizaciones.
 314  8A48
 315  8A48 00           Contador_de_frames db 0
 316  8A49 00           Contador_de_frames_2 db 0
 317  8A4A
 318  8A4A 04           Clock_explosion db 4
 319  8A4B 1E           Clock_Entidades_en_curso db 30
 320  8A4C 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 321  8A4D              ;														; Repite la oleada de entidades.
 322  8A4D 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 323  8A4E 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 324  8A4F 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 325  8A50
 326  8A50 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 327  8A51 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 328  8A52 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 329  8A53
 330  8A53              ;---------------------------------------------------------------------------------------------------------------
 331  8A53
 332  8A53              ; Gestión de NIVELES.
 333  8A53
 334  8A53 00           Nivel db 0												; Nivel actual del juego.
 335  8A54 00 00        Puntero_indice_NIVELES defw 0
 336  8A56 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 337  8A58              ; 														; _ que definen el NIVEL.
 338  8A58              ; Y todo comienza aquí .....
 339  8A58              ;
 340  8A58              ; Rutina principal *************************************************************************************************************************************************************************
 341  8A58              ;
 342  8A58              ;	14/11/22
 343  8A58
 344  8A58              START
 345  8A58
 346  8A58 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 347  8A5B 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 348  8A5D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 349  8A5F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 350  8A61 F3           	DI
 351  8A62
 352  8A62 3E 07        	ld a,%00000111
 353  8A64 CD 0B 9A     	call Cls
 354  8A67
 355  8A67 CD 6F 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 356  8A6A
 357  8A6A              ; INICIALIZACIÓN.
 358  8A6A
 359  8A6A CD 05 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 360  8A6D
 361  8A6D CD 17 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 362  8A70
 363  8A70 CD E0 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 364  8A73              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 365  8A73 CD F6 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 366  8A76              ;													     ; _ malotes antes de guardar ninguna foto.
 367  8A76              ; ----------
 368  8A76
 369  8A76 CD 1F 8E     	call Restore_entidad
 370  8A79
 371  8A79 21 08 8A     	ld hl,Numero_parcial_de_entidades
 372  8A7C 46           	ld b,(hl)
 373  8A7D 04           	inc b
 374  8A7E 05           	dec b
 375  8A7F 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 376  8A81
 377  8A81              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 378  8A81              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 379  8A81              ;	Pintamos el resto de entidades:
 380  8A81
 381  8A81              ;	INICIA ENTIDADES !!!!!
 382  8A81
 383  8A81 C5           1 push bc  												; Guardo el contador de entidades.
 384  8A82
 385  8A82 CD 87 8C     	call Inicia_entidad
 386  8A85
 387  8A85 C1           	pop bc
 388  8A86 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 389  8A88
 390  8A88              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 391  8A88              ; (Esto se dá cuando se inicia una nueva oleada).
 392  8A88
 393  8A88 3A FE 89     	ld a,(Ctrl_1)
 394  8A8B CB 5F        	bit 3,a
 395  8A8D 20 18        	jr nz,5F											; Loop
 396  8A8F
 397  8A8F              ; 	INICIA AMADEUS !!!!!
 398  8A8F
 399  8A8F CD 46 8E     3 call Restore_Amadeus
 400  8A92 CD 9C 8D     	call Inicia_Puntero_objeto
 401  8A95 CD 41 94     	call Draw
 402  8A98 CD A0 7F     	call Guarda_foto_registros
 403  8A9B 11 A4 85     	ld de,Amadeus_db
 404  8A9E CD 58 8E     	call Store_Amadeus
 405  8AA1
 406  8AA1              ; 	INICIA DISPAROS !!!!!
 407  8AA1
 408  8AA1 CD 58 8D     	call Inicia_Puntero_Disparo_Entidades
 409  8AA4 CD 5F 8D     	call Inicia_Puntero_Disparo_Amadeus
 410  8AA7
 411  8AA7              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 412  8AA7
 413  8AA7 CD E0 8C     5 call Inicia_punteros_de_cajas
 414  8AAA CD 1F 8E     	call Restore_entidad
 415  8AAD
 416  8AAD 3A FE 89     	ld a,(Ctrl_1)
 417  8AB0 CB 5F        	bit 3,a
 418  8AB2 28 0A        	jr z,6F
 419  8AB4
 420  8AB4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 421  8AB4
 422  8AB4 21 FE 89     	ld hl,Ctrl_1
 423  8AB7 CB 9E        	res 3,(hl)
 424  8AB9 CD 66 8D     	call Calcula_numero_de_malotes
 425  8ABC 18 0A        	jr Main
 426  8ABE
 427  8ABE              ; ----------
 428  8ABE
 429  8ABE 3A 08 8A     6 ld a,(Numero_parcial_de_entidades)
 430  8AC1 3C           	inc a
 431  8AC2 32 0A 8A     	ld (Numero_de_malotes),a
 432  8AC5
 433  8AC5              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 434  8AC5              ; _ tenemos calculado (Numero_de_malotes).
 435  8AC5              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 436  8AC5              ; _ para situarnos en el siguiente album.
 437  8AC5
 438  8AC5 CD 27 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 439  8AC8
 440  8AC8              ; ------------------------------------
 441  8AC8
 442  8AC8              Main
 443  8AC8
 444  8AC8              ;
 445  8AC8              ;	3/8/23
 446  8AC8
 447  8AC8 00           	nop
 448  8AC9 00           	nop
 449  8ACA 00           	nop
 450  8ACB 00           	nop
 451  8ACC
 452  8ACC FB           	ei
 453  8ACD
 454  8ACD 3A 4B 8A     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 455  8AD0 47           	ld b,a
 456  8AD1 3A 48 8A     	ld a,(Contador_de_frames)
 457  8AD4 B8           	cp b
 458  8AD5 20 18        	jr nz,13F
 459  8AD7
 460  8AD7 3A 08 8A     	ld a,(Numero_parcial_de_entidades)
 461  8ADA 47           	ld b,a
 462  8ADB 3A 09 8A     	ld a,(Entidades_en_curso)
 463  8ADE B8           	cp b
 464  8ADF 28 0E        	jr z,13F
 465  8AE1 30 0C        	jr nc,13F
 466  8AE3
 467  8AE3 3C           	inc a
 468  8AE4 32 09 8A     	ld (Entidades_en_curso),a
 469  8AE7
 470  8AE7 3A 4B 8A     	ld a,(Clock_Entidades_en_curso)
 471  8AEA
 472  8AEA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 473  8AEA              ;! _ IMPREDECIBLE !!!!
 474  8AEA
 475  8AEA C6 64        	add 100
 476  8AEC 32 4B 8A     	ld (Clock_Entidades_en_curso),a
 477  8AEF
 478  8AEF              ; Habilita disparos.
 479  8AEF
 480  8AEF 21 4D 8A     13 ld hl,Disparo_Amadeus
 481  8AF2 11 4F 8A     	ld de,CLOCK_repone_disparo_Amadeus
 482  8AF5 CD CF 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 483  8AF8
 484  8AF8 21 50 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 485  8AFB 11 52 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 486  8AFE CD CF 9D     	call Habilita_disparos
 487  8B01
 488  8B01              ; COLISIONES.
 489  8B01
 490  8B01 CD 23 93     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 491  8B04
 492  8B04              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 493  8B04              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 494  8B04              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 495  8B04
 496  8B04 AF           	xor a
 497  8B05 32 3A 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 498  8B08
 499  8B08 CD E0 8C     	call Inicia_punteros_de_cajas
 500  8B0B CD 1F 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 501  8B0E              ; 														; _ en DRAW.
 502  8B0E 3A BB 89     	ld a,(Filas)
 503  8B11 A7           	and a
 504  8B12 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 505  8B14 CD 31 8E     	call Incrementa_punteros_de_cajas
 506  8B17 18 F2        	jr 12B
 507  8B19
 508  8B19              ; ---------------------------------------------------------------------------------------
 509  8B19
 510  8B19 3A 08 8A     10 ld a,(Numero_parcial_de_entidades)
 511  8B1C 47               ld b,a
 512  8B1D A7           	and a
 513  8B1E 20 14        	jr nz,11F
 514  8B20
 515  8B20 21 FE 89     	ld hl,Ctrl_1
 516  8B23 CB 66        	bit 4,(hl)
 517  8B25 C2 B1 8B     	jp nz,16F
 518  8B28
 519  8B28 21 FE 89     	ld hl,Ctrl_1
 520  8B2B CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 521  8B2D
 522  8B2D 3A 48 8A     	ld a,(Contador_de_frames)
 523  8B30 3C           	inc a
 524  8B31 32 4C 8A     	ld (Activa_recarga_cajas),a
 525  8B34
 526  8B34              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 527  8B34
 528  8B34 3A 09 8A     11 ld a,(Entidades_en_curso)
 529  8B37 A7           	and a
 530  8B38 CA B1 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 531  8B3B 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 532  8B3C
 533  8B3C              ; Código que ejecutamos con cada entidad:
 534  8B3C              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 535  8B3C
 536  8B3C C5           15 push bc 												; Nº de entidades en curso.
 537  8B3D
 538  8B3D              ; Impacto ???
 539  8B3D
 540  8B3D 3A D4 89     	ld a,(Impacto)
 541  8B40 A7           	and a
 542  8B41 28 2D        	jr z,8F
 543  8B43
 544  8B43              ; Hay Impacto en esta entidad.
 545  8B43
 546  8B43 21 4A 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 547  8B46 35           	dec (hl)
 548  8B47 20 62        	jr nz,17F
 549  8B49
 550  8B49              ;! Velocidad de la animación de la explosión.
 551  8B49
 552  8B49 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 553  8B4B              ;														; _,(velocidad de la explosión).
 554  8B4B CD 97 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 555  8B4E
 556  8B4E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 557  8B4E
 558  8B4E 3A FC 89     	ld a,(Ctrl_2)
 559  8B51 CB 4F        	bit 1,a
 560  8B53 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 561  8B55
 562  8B55              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 563  8B55
 564  8B55 3A C3 89     	ld a,(CTRL_DESPLZ)
 565  8B58 A7           	and a
 566  8B59 20 08        	jr nz,18F
 567  8B5B
 568  8B5B 21 84 84     	ld hl,Indice_Explosion_2x2-2
 569  8B5E 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 570  8B61 18 06        	jr 19F
 571  8B63
 572  8B63 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 573  8B66 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 574  8B69
 575  8B69 21 FC 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 576  8B6C CB CE        	set 1,(hl)
 577  8B6E 18 22        	jr 7F
 578  8B70
 579  8B70              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 580  8B70              ; _con las coordenadas de la entidad almacenada en DRAW.
 581  8B70
 582  8B70 3A FE 89     8 ld a,(Ctrl_1)
 583  8B73 CB 57        	bit 2,a
 584  8B75 28 1B        	jr z,7F
 585  8B77
 586  8B77 2A 3D 8A     	ld hl,(Coordenadas_disparo_certero)
 587  8B7A EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 588  8B7B              ;														; E contiene la coordenada_X del disparo.
 589  8B7B 2A C1 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 590  8B7E              ;														; H FILA, (Coordenada_y de la entidad).
 591  8B7E A7           	and a
 592  8B7F ED 52        	sbc hl,de
 593  8B81
 594  8B81 CD 5A 93     	call Determina_resultado_comparativa
 595  8B84
 596  8B84 78           	ld a,b
 597  8B85 A7           	and a
 598  8B86 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 599  8B88
 600  8B88              ; ----- ----- -----
 601  8B88
 602  8B88 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 603  8B8A 32 D4 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 604  8B8D
 605  8B8D 21 FE 89     	ld hl,Ctrl_1
 606  8B90 CB 96        	res 2,(hl)
 607  8B92
 608  8B92 CD 09 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 609  8B95
 610  8B95 3A E9 89     	ld a,(Ctrl_0)
 611  8B98 CB 67        	bit 4,a
 612  8B9A 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 613  8B9C
 614  8B9C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 615  8B9C              ; [[[
 616  8B9C CD BA 8E     	call Detecta_disparo_entidad
 617  8B9F              ; ]]]
 618  8B9F CD A7 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 619  8BA2
 620  8BA2 21 E9 89     	ld hl,Ctrl_0
 621  8BA5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 622  8BA7 AF           	xor a
 623  8BA8 32 EA 89     	ld (Obj_dibujado),a
 624  8BAB
 625  8BAB CD E4 8D     17 call Store_Restore_cajas
 626  8BAE
 627  8BAE C1           	pop bc
 628  8BAF 10 8B        	djnz 15B
 629  8BB1
 630  8BB1              ; ------------------------------------
 631  8BB1
 632  8BB1              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 633  8BB1              ; Hemos gestionado todas las unidades.
 634  8BB1              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 635  8BB1
 636  8BB1              ;	ld hl,Ctrl_1
 637  8BB1              ;	res 2,(hl)
 638  8BB1
 639  8BB1              ; ------------------------------------
 640  8BB1
 641  8BB1              ; Tras la gestión de las entidades, ... AMADEUS.
 642  8BB1
 643  8BB1 CD 46 8E     16 call Restore_Amadeus
 644  8BB4
 645  8BB4              ;! Activa/desactiva impacto con Amadeus.
 646  8BB4
 647  8BB4 3A D4 89     	ld a,(Impacto)
 648  8BB7 A7           	and a
 649  8BB8 20 FE        	jr nz,$
 650  8BBA
 651  8BBA CD 68 8C     	call Mov_Amadeus
 652  8BBD
 653  8BBD 3A E9 89     	ld a,(Ctrl_0)
 654  8BC0 CB 67        	bit 4,a
 655  8BC2 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 656  8BC4
 657  8BC4 CD A7 8C     	call Guarda_foto_entidad_a_pintar
 658  8BC7
 659  8BC7 21 E9 89     14 ld hl,Ctrl_0
 660  8BCA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 661  8BCC
 662  8BCC AF           	xor a
 663  8BCD 32 EA 89     	ld (Obj_dibujado),a
 664  8BD0
 665  8BD0 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 666  8BD3 CD 58 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 667  8BD6
 668  8BD6              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 669  8BD6
 670  8BD6              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 671  8BD6
 672  8BD6              ;	call Calcula_numero_de_disparotes
 673  8BD6
 674  8BD6 CD 27 8D      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 675  8BD9              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 676  8BD9              ;														; _ interrupción.
 677  8BD9 3E 04        	ld a,4
 678  8BDB D3 FE        	out ($fe),a
 679  8BDD
 680  8BDD              ; ----------------------------------------
 681  8BDD
 682  8BDD 3A FE 89     	ld a,(Ctrl_1) 										; Existe Loop?
 683  8BE0 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 684  8BE2 CA C8 8A     	jp z,Main
 685  8BE5
 686  8BE5              ; -----
 687  8BE5              ;	(((
 688  8BE5
 689  8BE5 3A 48 8A     	ld a,(Contador_de_frames)
 690  8BE8 47           	ld b,a
 691  8BE9 3A 4C 8A     	ld a,(Activa_recarga_cajas)
 692  8BEC B8           	cp b
 693  8BED 28 08        	jr z,20F
 694  8BEF
 695  8BEF 21 FE 89     	ld hl,Ctrl_1
 696  8BF2 CB E6        	set 4,(hl)
 697  8BF4 C3 C8 8A     	jp Main
 698  8BF7
 699  8BF7 21 FE 89     20 ld hl,Ctrl_1
 700  8BFA CB A6        	res 4,(hl)
 701  8BFC F3           	di
 702  8BFD
 703  8BFD 3A 48 8A     	ld a,(Contador_de_frames)
 704  8C00
 705  8C00              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 706  8C00              ;! _ IMPREDECIBLE !!!!
 707  8C00
 708  8C00 C6 0A        	add 10
 709  8C02 32 4B 8A     	ld (Clock_Entidades_en_curso),a
 710  8C05
 711  8C05 C3 6D 8A     	jp 4B
 712  8C08
 713  8C08 C9           	ret
 714  8C09
 715  8C09              ; --------------------------------------------------------------------------------------------------------------
 716  8C09              ;
 717  8C09              ;	27/05/23
 718  8C09
 719  8C09              Mov_obj
 720  8C09
 721  8C09 3A FC 89     	ld a,(Ctrl_2)
 722  8C0C CB 4F        	bit 1,a
 723  8C0E 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 724  8C10
 725  8C10              ; Explosión:
 726  8C10
 727  8C10 3A FD 89     	ld a,(Frames_explosion)
 728  8C13 A7           	and a
 729  8C14 20 11        	jr nz,4F
 730  8C16
 731  8C16              ; Una alimaña menos!!!!!!!!!1
 732  8C16
 733  8C16 CD 61 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 734  8C19 21 08 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 735  8C1C 35           	dec (hl)
 736  8C1D 21 09 8A     	ld hl,Entidades_en_curso
 737  8C20 35           	dec (hl)
 738  8C21 21 07 8A     	ld hl,Numero_de_entidades
 739  8C24 35           	dec (hl)
 740  8C25 18 40        	jr 3F
 741  8C27
 742  8C27              ; -----
 743  8C27
 744  8C27              ;	`Movemos´ la explosión.
 745  8C27
 746  8C27 2A C9 89     4 ld hl,(Puntero_DESPLZ_der)
 747  8C2A 23           	inc hl
 748  8C2B 23           	inc hl
 749  8C2C 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 750  8C2F CD 96 8D     	call Extrae_address
 751  8C32 22 BF 89     	ld (Puntero_objeto),hl
 752  8C35
 753  8C35 21 FD 89     	ld hl,Frames_explosion
 754  8C38 35           	dec (hl)
 755  8C39
 756  8C39 CD 97 8C     	call Guarda_foto_entidad_a_borrar
 757  8C3C 18 29        	jr 3F
 758  8C3E
 759  8C3E AF           2 xor a
 760  8C3F 32 EA 89     	ld (Obj_dibujado),a
 761  8C42 32 E9 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 762  8C45              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 763  8C45              ; 														; _de la entidad.
 764  8C45 CD B1 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 765  8C48              ;														; Obj_dibujado="0".
 766  8C48              ; Movemos Entidades malignas.
 767  8C48
 768  8C48              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 769  8C48              ;	and a 												; _a movernos. (Limitador_de_entidades).
 770  8C48              ;	ret z
 771  8C48
 772  8C48 CD 7A 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 773  8C4B
 774  8C4B 3A E9 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 775  8C4E CB 67        	bit 4,a
 776  8C50 C8           	ret z
 777  8C51
 778  8C51              ; Ha habido desplazamiento de la entidad maligna.
 779  8C51              ; Ha llegado a zona de AMADEUS ???
 780  8C51
 781  8C51 3A C2 89     	ld a,(Coordenada_y)
 782  8C54 FE 14        	cp $14
 783  8C56 D4 E8 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 784  8C59              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 785  8C59              ; ---------
 786  8C59
 787  8C59 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 788  8C5B 32 EA 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 789  8C5E CD B1 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 790  8C61 CD C8 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 791  8C64 CD 97 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 792  8C67 C9           3 ret													; _de la misma.
 793  8C68
 794  8C68              ; --------------------------------------------------------------------------------------------------------------
 795  8C68              ;
 796  8C68              ;	29/1/23
 797  8C68
 798  8C68              Mov_Amadeus
 799  8C68
 800  8C68 AF           	xor a
 801  8C69 32 EA 89     	ld (Obj_dibujado),a
 802  8C6C CD B1 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 803  8C6F              ;														; Obj_dibujado="0".
 804  8C6F              ; Movemos Amadeus.
 805  8C6F
 806  8C6F CD 83 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 807  8C72 3A E9 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 808  8C75 CB 67        	bit 4,a
 809  8C77 C8           	ret z
 810  8C78
 811  8C78              ; ---------
 812  8C78
 813  8C78 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 814  8C7A 32 EA 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 815  8C7D CD B1 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 816  8C80 CD C8 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 817  8C83 CD 97 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 818  8C86 C9           	ret													; _de la nave.
 819  8C87
 820  8C87              ; -----------------------------------------------------------------------------------
 821  8C87
 822  8C87 CD 9C 8D     Inicia_entidad	call Inicia_Puntero_objeto
 823  8C8A CD 1F 9A     	call Recompone_posicion_inicio
 824  8C8D CD 41 94     	call Draw
 825  8C90 CD A0 7F     	call Guarda_foto_registros
 826  8C93 CD E4 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 827  8C96 C9           	ret
 828  8C97
 829  8C97              ; --------------------------------------------------------------------------------------------------------------
 830  8C97              ;
 831  8C97              ;	31/8/23
 832  8C97              ;
 833  8C97              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 834  8C97
 835  8C97              Guarda_foto_entidad_a_borrar
 836  8C97
 837  8C97 CD 25 97     	call Prepara_draw
 838  8C9A CD 55 96     	call calcula_CColumnass
 839  8C9D CD 8C 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 840  8CA0 CD EB 96     	call Define_rutina_de_impresion
 841  8CA3 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 842  8CA6 C9           	ret
 843  8CA7
 844  8CA7              ; --------------------------------------------------------------------------------------------------------------
 845  8CA7              ;
 846  8CA7              ;	31/08/23
 847  8CA7              ;
 848  8CA7              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 849  8CA7              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 850  8CA7
 851  8CA7              Guarda_foto_entidad_a_pintar
 852  8CA7
 853  8CA7 CD D4 8C     	call Repone_pintar
 854  8CAA CD 41 94     	call Draw
 855  8CAD CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 856  8CB0 C9           	ret
 857  8CB1
 858  8CB1              ; --------------------------------------------------------------------------------------------------------------
 859  8CB1              ;
 860  8CB1              ;
 861  8CB1
 862  8CB1 21 BB 89     Prepara_var_pintado_borrado	ld hl,Filas
 863  8CB4 3A EA 89     	ld a,(Obj_dibujado)
 864  8CB7 A7           	and a
 865  8CB8 28 05        	jr z,1F
 866  8CBA 11 DF 89     	ld de,Variables_de_pintado
 867  8CBD 18 03        	jr 2F
 868  8CBF 11 D5 89     1 ld de,Variables_de_borrado
 869  8CC2 01 08 00     2 ld bc,8
 870  8CC5 ED B0        	ldir
 871  8CC7 C9           	ret
 872  8CC8
 873  8CC8              ; --------------------------------------------------------------------------------------------------------------
 874  8CC8
 875  8CC8 21 D5 89     Repone_borrar ld hl,Variables_de_borrado
 876  8CCB 11 BB 89     	ld de,Filas
 877  8CCE 01 08 00     	ld bc,8
 878  8CD1 ED B0        	ldir
 879  8CD3 C9           	ret
 880  8CD4
 881  8CD4 21 DF 89     Repone_pintar ld hl,Variables_de_pintado
 882  8CD7 11 BB 89     	ld de,Filas
 883  8CDA 01 08 00     	ld bc,8
 884  8CDD ED B0        	ldir
 885  8CDF C9           	ret
 886  8CE0
 887  8CE0              ; *************************************************************************************************************************************************************
 888  8CE0              ;
 889  8CE0              ; 8/1/23
 890  8CE0              ;
 891  8CE0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 892  8CE0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 893  8CE0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 894  8CE0
 895  8CE0              ; Destruye HL y DE !!!!!
 896  8CE0
 897  8CE0              Inicia_punteros_de_cajas
 898  8CE0
 899  8CE0 21 8C 85     	ld hl,Indice_de_cajas
 900  8CE3 CD 96 8D         call Extrae_address
 901  8CE6 22 01 8A         ld (Puntero_store_caja),hl
 902  8CE9 21 8E 85     	ld hl,Indice_de_cajas+2
 903  8CEC 22 05 8A     	ld (Indice_restore_caja),hl
 904  8CEF CD 96 8D     	call Extrae_address
 905  8CF2 22 03 8A     	ld (Puntero_restore_caja),hl
 906  8CF5 C9               ret
 907  8CF6
 908  8CF6              ; ---------------------------------------------------------------
 909  8CF6              ;
 910  8CF6              ;	9/8/23
 911  8CF6              ;
 912  8CF6              ;	Inicialización y gestión de álbumes de fotos y cajas.
 913  8CF6
 914  8CF6              Inicia_punteros_de_albumes_y_malotes
 915  8CF6
 916  8CF6 21 EC 84     	ld hl,Indice_album_de_fotos
 917  8CF9 22 29 8A     	ld (Puntero_indice_album_de_fotos),hl
 918  8CFC CD 96 8D     	call Extrae_address
 919  8CFF 22 15 8A     	ld (Stack_snapshot),hl
 920  8D02
 921  8D02 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 922  8D05 22 2B 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 923  8D08 CD 96 8D     	call Extrae_address
 924  8D0B 22 17 8A     	ld (Stack_snapshot_disparos),hl
 925  8D0E
 926  8D0E 21 FC 84     	ld hl,Indice_End_Snapshot
 927  8D11 22 2D 8A     	ld (Puntero_indice_End_Snapshot),hl
 928  8D14 CD 96 8D     	call Extrae_address
 929  8D17 22 31 8A     	ld (Puntero_de_End_Snapshot),hl
 930  8D1A
 931  8D1A 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 932  8D1D 22 2F 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 933  8D20 CD 96 8D     	call Extrae_address
 934  8D23 22 33 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 935  8D26
 936  8D26 C9           	ret
 937  8D27
 938  8D27              ;	2/9/23
 939  8D27
 940  8D27              Avanza_puntero_de_album_de_fotos_y_malotes
 941  8D27
 942  8D27              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 943  8D27
 944  8D27              ; Estamos en el último álbum del índice???.
 945  8D27
 946  8D27 2A 29 8A     	ld hl,(Puntero_indice_album_de_fotos)
 947  8D2A 01 F2 84     	ld bc,Indice_album_de_fotos+6
 948  8D2D A7           	and a
 949  8D2E ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 950  8D30 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 951  8D32
 952  8D32 21 FE 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 953  8D35 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 954  8D37 76           	halt
 955  8D38 C9           	ret
 956  8D39
 957  8D39 F3           1 di
 958  8D3A 2A 29 8A     	ld hl,(Puntero_indice_album_de_fotos)
 959  8D3D 23           	inc hl
 960  8D3E 23           	inc hl
 961  8D3F 22 29 8A     	ld (Puntero_indice_album_de_fotos),hl
 962  8D42 CD 96 8D     	call Extrae_address
 963  8D45 22 15 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 964  8D48
 965  8D48 2A 2D 8A     	ld hl,(Puntero_indice_End_Snapshot)
 966  8D4B 23           	inc hl
 967  8D4C 23           	inc hl
 968  8D4D 22 2D 8A     	ld (Puntero_indice_End_Snapshot),hl
 969  8D50 CD 96 8D     	call Extrae_address
 970  8D53 22 31 8A     	ld (Puntero_de_End_Snapshot),hl
 971  8D56 FB           	ei
 972  8D57
 973  8D57 C9           	ret
 974  8D58
 975  8D58              ; *************************************************************************************************************************************************************
 976  8D58              ;
 977  8D58              ; 8/1/23
 978  8D58              ;
 979  8D58              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 980  8D58
 981  8D58 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 982  8D5B 22 36 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 983  8D5E C9           	ret
 984  8D5F 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 985  8D62 22 38 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 986  8D65 C9           	ret
 987  8D66
 988  8D66              ; -------------------------------------------------------------------------------------------------------------
 989  8D66              ;
 990  8D66              ; 3/8/23
 991  8D66              ;
 992  8D66
 993  8D66              Calcula_numero_de_malotes
 994  8D66
 995  8D66 21 00 70     	ld hl,Album_de_fotos
 996  8D69 EB           	ex de,hl
 997  8D6A 2A 19 8A     	ld hl,(End_Snapshot)
 998  8D6D
 999  8D6D 06 00        	ld b,0
1000  8D6F 7D           	ld a,l
1001  8D70 93           	sub e
1002  8D71 28 07        	jr z,1F
1003  8D73
1004  8D73              ; Nº de malotes no es "0".
1005  8D73
1006  8D73 D6 06        2 sub 6
1007  8D75 04           	inc b
1008  8D76 A7           	and a
1009  8D77 20 FA        	jr nz,2B
1010  8D79 78           	ld a,b
1011  8D7A
1012  8D7A 32 0A 8A     1 ld (Numero_de_malotes),a
1013  8D7D C9           	ret
1014  8D7E
1015  8D7E              ; -------------------------------------------------------------------------------------------------------------
1016  8D7E              ;
1017  8D7E              ; 28/2/23
1018  8D7E              ;
1019  8D7E
1020  8D7E              Calcula_numero_de_disparotes
1021  8D7E
1022  8D7E 21 0D 72     	ld hl,Album_de_fotos_disparos
1023  8D81 EB           	ex de,hl
1024  8D82 2A 33 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1025  8D85
1026  8D85 06 00        	ld b,0
1027  8D87 7D           	ld a,l
1028  8D88 93           	sub e
1029  8D89 28 07        	jr z,1F
1030  8D8B
1031  8D8B              ; Nº de malotes no es "0".
1032  8D8B
1033  8D8B D6 06        2 sub 6
1034  8D8D 04           	inc b
1035  8D8E A7           	and a
1036  8D8F 20 FA        	jr nz,2B
1037  8D91 78           	ld a,b
1038  8D92
1039  8D92 32 35 8A     1 ld (Numero_de_disparotes),a
1040  8D95 C9           	ret
1041  8D96
1042  8D96              ; *************************************************************************************************************************************************************
1043  8D96              ;
1044  8D96              ; 20/10/22
1045  8D96              ;
1046  8D96              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1047  8D96              ;
1048  8D96              ; Destruye el puntero y DE !!!!!
1049  8D96
1050  8D96 5E           Extrae_address ld e,(hl)
1051  8D97 23           	inc hl
1052  8D98 56           	ld d,(hl)
1053  8D99 2B           	dec hl
1054  8D9A EB           	ex de,hl
1055  8D9B C9           	ret
1056  8D9C
1057  8D9C              ; *************************************************************************************************************************************************************
1058  8D9C              ;
1059  8D9C              ;	7/2/23
1060  8D9C              ;
1061  8D9C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1062  8D9C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1063  8D9C              ;
1064  8D9C              ;   Destruye HL y BC !!!!!,
1065  8D9C              ;
1066  8D9C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1067  8D9C              ;					"0" ..... Izquierda.
1068  8D9C
1069  8D9C              Inicia_Puntero_objeto
1070  8D9C
1071  8D9C 3A CF 89     	ld a,(Cuad_objeto)
1072  8D9F E6 01        	and 1
1073  8DA1 F5           	push af
1074  8DA2 CC C0 8D     	call z,Inicia_puntero_objeto_izq
1075  8DA5 F1           	pop af
1076  8DA6 28 2B        	jr z,1F
1077  8DA8 CD AD 8D     	call Inicia_puntero_objeto_der
1078  8DAB 18 26        	jr 1F
1079  8DAD
1080  8DAD              ; Arrancamos desde la parte izquierda de la pantalla.
1081  8DAD              ; Iniciamos (Indice_Sprite_der).
1082  8DAD
1083  8DAD 2A C5 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1084  8DB0 22 C9 89     	ld (Puntero_DESPLZ_der),hl
1085  8DB3 CD 96 8D     	call Extrae_address
1086  8DB6 22 BF 89     	ld (Puntero_objeto),hl
1087  8DB9
1088  8DB9 2A C7 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1089  8DBC 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
1090  8DBF C9           	ret
1091  8DC0
1092  8DC0              ; Arrancamos desde la parte derecha de la pantalla.
1093  8DC0              ; Iniciamos (Indice_Sprite_izq).
1094  8DC0
1095  8DC0 2A C7 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1096  8DC3 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
1097  8DC6 CD 96 8D     	call Extrae_address
1098  8DC9 22 BF 89     	ld (Puntero_objeto),hl
1099  8DCC
1100  8DCC 2A C5 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1101  8DCF 22 C9 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1102  8DD2 C9           	ret
1103  8DD3
1104  8DD3              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1105  8DD3
1106  8DD3 21 40 83     1 ld hl,Amadeus
1107  8DD6 ED 4B BF 89  	ld bc,(Puntero_objeto)
1108  8DDA B7 ED 42     	sub hl,bc
1109  8DDD C0           	ret nz
1110  8DDE 21 E9 89     	ld hl,Ctrl_0
1111  8DE1 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1112  8DE3 C9           	ret 												; _de nuestra nave en los extremos.
1113  8DE4
1114  8DE4              ; *************************************************************************************************************************************************************
1115  8DE4              ;
1116  8DE4              ;	14/5/23
1117  8DE4              ;
1118  8DE4              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1119  8DE4              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1120  8DE4
1121  8DE4              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1122  8DE4              ;	_de la 2ª y 3ª entidad respectivamente.
1123  8DE4
1124  8DE4              Store_Restore_cajas
1125  8DE4
1126  8DE4 E5           	push hl
1127  8DE5 D5           	push de
1128  8DE6 C5            	push bc
1129  8DE7
1130  8DE7              ;	STORE !!!!!
1131  8DE7              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1132  8DE7
1133  8DE7 21 BB 89     	ld hl,Filas
1134  8DEA ED 5B 01 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1135  8DEE 01 43 00     	ld bc,67
1136  8DF1 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1137  8DF3
1138  8DF3              ; 	Entidad_sospechosa. 20/4/23
1139  8DF3
1140  8DF3 3A D4 89     	ld a,(Impacto)
1141  8DF6 A7           	and a
1142  8DF7 28 0C        	jr z,1F
1143  8DF9
1144  8DF9 2A 01 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1145  8DFC 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1146  8DFF A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1147  8E00 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1148  8E02 22 3B 8A     	ld (Entidad_sospechosa_de_colision),hl
1149  8E05
1150  8E05              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1151  8E05
1152  8E05 2A 03 8A     1 ld hl,(Puntero_restore_caja)
1153  8E08 7E           	ld a,(hl)
1154  8E09 A7           	and a
1155  8E0A F5           	push af
1156  8E0B 28 08        	jr z,2F
1157  8E0D
1158  8E0D 11 BB 89     	ld de,Filas
1159  8E10 01 43 00     	ld bc,67
1160  8E13 ED B0        	ldir
1161  8E15
1162  8E15 CD 31 8E     2 call Incrementa_punteros_de_cajas
1163  8E18 F1           	pop af
1164  8E19 28 EA        	jr z,1B
1165  8E1B
1166  8E1B C1           	pop bc
1167  8E1C D1           	pop de
1168  8E1D E1           	pop hl
1169  8E1E
1170  8E1E C9           	ret
1171  8E1F
1172  8E1F              ; **************************************************************************************************
1173  8E1F              ;
1174  8E1F              ;	12/05/23
1175  8E1F              ;
1176  8E1F              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1177  8E1F
1178  8E1F E5           Restore_entidad push hl
1179  8E20 D5           	push de
1180  8E21 C5            	push bc
1181  8E22
1182  8E22 2A 01 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1183  8E25 11 BB 89     	ld de,Filas
1184  8E28 01 43 00     	ld bc,67
1185  8E2B ED B0        	ldir
1186  8E2D
1187  8E2D C1           	pop bc
1188  8E2E D1           	pop de
1189  8E2F E1           	pop hl
1190  8E30 C9           	ret
1191  8E31
1192  8E31
1193  8E31              ; **************************************************************************************************
1194  8E31              ;
1195  8E31              ;	08/05/23
1196  8E31              ;
1197  8E31              ;	Incrementamos los dos punteros de entidades. (+1).
1198  8E31
1199  8E31 2A 03 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1200  8E34 22 01 8A     	ld (Puntero_store_caja),hl
1201  8E37 2A 05 8A     	ld hl,(Indice_restore_caja)
1202  8E3A 23           	inc hl
1203  8E3B 23           	inc hl
1204  8E3C 22 05 8A     	ld (Indice_restore_caja),hl
1205  8E3F CD 96 8D         call Extrae_address
1206  8E42 22 03 8A         ld (Puntero_restore_caja),hl
1207  8E45 C9               ret
1208  8E46
1209  8E46              ; **************************************************************************************************
1210  8E46              ;
1211  8E46              ;	25/01/23
1212  8E46              ;
1213  8E46              ;	Restore_Amadeus
1214  8E46              ;
1215  8E46              ;	Cargamos en DRAW los parámetros de Amadeus.
1216  8E46              ;
1217  8E46
1218  8E46 E5           Restore_Amadeus	push hl
1219  8E47 D5           	push de
1220  8E48 C5            	push bc
1221  8E49 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1222  8E4C 11 BB 89     	ld de,Filas
1223  8E4F 01 43 00     	ld bc,67
1224  8E52 ED B0        	ldir
1225  8E54 C1           	pop bc
1226  8E55 D1           	pop de
1227  8E56 E1           	pop hl
1228  8E57 C9           	ret
1229  8E58
1230  8E58              ; *************************************************************************************************************************************************************
1231  8E58              ;
1232  8E58              ;	29/04/23
1233  8E58              ;
1234  8E58              ;	Store_Amadeus
1235  8E58              ;
1236  8E58              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1237  8E58              ;
1238  8E58              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1239  8E58              ;
1240  8E58              ;	DESTRUYE: HL y BC y DE.
1241  8E58
1242  8E58 21 BB 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1243  8E5B 01 43 00     	ld bc,67
1244  8E5E ED B0        	ldir
1245  8E60 C9           	ret
1246  8E61
1247  8E61              ; -----------------------------------------------------------
1248  8E61              ;
1249  8E61              ;	27/04/23
1250  8E61              ;
1251  8E61              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1252  8E61              ;
1253  8E61              ;	Destruye: HL,BC,DE,A
1254  8E61
1255  8E61 21 BB 89     Borra_datos_entidad ld hl,Filas
1256  8E64 01 42 00     	ld bc,66
1257  8E67 AF           	xor a
1258  8E68 77           	ld (hl),a
1259  8E69 11 BC 89     	ld de,Filas+1
1260  8E6C ED B0        	ldir
1261  8E6E C9           	ret
1262  8E6F
1263  8E6F              ; -----------------------------------------------------------
1264  8E6F
1265  8E6F              ; Teclado.
1266  8E6F
1267  8E6F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1268  8E71 DB FE        	in a,($fe)
1269  8E73 E6 01        	and $01
1270  8E75 28 02        	jr z,1f
1271  8E77 18 F6        	jr Pulsa_ENTER
1272  8E79 C9           1 ret
1273  8E7A
1274  8E7A              ; **************************************************************************************************
1275  8E7A              ;
1276  8E7A              ; Temporización.
1277  8E7A
1278  8E7A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1279  8E7A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1280  8E7A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1281  8E7A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1282  8E7A
1283  8E7A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1284  8E7A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1285  8E7A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1286  8E7A
1287  8E7A              ; A partir de $4f61 no hace falta DELAY.
1288  8E7A
1289  8E7A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1290  8E7A
1291  8E7A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1292  8E7D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1293  8E7E 78           	LD A,B
1294  8E7F A7           	AND A
1295  8E80 20 FB        	JR NZ,wait
1296  8E82 C9           	RET
1297  8E83
1298  8E83              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1299  8E83              ;
1300  8E83              ;	5/3/23
1301  8E83              ;
1302  8E83              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1303  8E83
1304  8E83              Movimiento_Amadeus
1305  8E83
1306  8E83              ; Disparo.
1307  8E83
1308  8E83 3A 4D 8A     	ld a,(Disparo_Amadeus)
1309  8E86 A7           	and a
1310  8E87 20 02        	jr nz,1F
1311  8E89 18 15        	jr 2F
1312  8E8B
1313  8E8B 3E F7        1 ld a,$f7													; "5" para disparar.
1314  8E8D DB FE        	in a,($fe)
1315  8E8F E6 10        	and $10
1316  8E91
1317  8E91 F5           	push af
1318  8E92 CC 4B 8F     	call z,Genera_disparo
1319  8E95 F1           	pop af
1320  8E96 20 08        	jr nz,2F
1321  8E98
1322  8E98 3A 4D 8A     	ld a,(Disparo_Amadeus)
1323  8E9B EE 01        	xor 1
1324  8E9D 32 4D 8A     	ld (Disparo_Amadeus),a
1325  8EA0
1326  8EA0 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1327  8EA2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1328  8EA4 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1329  8EA6 CC D9 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1330  8EA9 3E F7        	ld a,$f7
1331  8EAB DB FE        	in a,($fe)
1332  8EAD E6 01        	and $01
1333  8EAF C8           	ret z
1334  8EB0
1335  8EB0 3E F7        	ld a,$f7
1336  8EB2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1337  8EB4 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1338  8EB6 CC BB 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1339  8EB9 C9           	ret
1340  8EBA
1341  8EBA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1342  8EBA              ;
1343  8EBA              ;	Rutina provisional para que los malotes cagen balas.
1344  8EBA
1345  8EBA              Detecta_disparo_entidad
1346  8EBA
1347  8EBA 3A 50 8A     	ld a,(Disparo_entidad)
1348  8EBD A7           	and a
1349  8EBE C8           	ret z
1350  8EBF
1351  8EBF              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1352  8EBF
1353  8EBF              ;	ld a,$7f				; Detecta SPACE.
1354  8EBF              ;	in a,($fe)
1355  8EBF              ;	and 1
1356  8EBF              ;	ret nz
1357  8EBF
1358  8EBF              ;	call Genera_disparo
1359  8EBF C9           	ret
1360  8EC0
1361  8EC0              ; ----------------------------------------------------------------------
1362  8EC0              ;
1363  8EC0              ;	11/8/23
1364  8EC0
1365  8EC0              Frame
1366  8EC0
1367  8EC0              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1368  8EC0              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1369  8EC0
1370  8EC0              ; PINTAMOS.
1371  8EC0
1372  8EC0 ED 73 13 8A  	ld (Stack_3),sp
1373  8EC4
1374  8EC4              ; Guardamos registros y SP.
1375  8EC4
1376  8EC4 08           	ex af,af'
1377  8EC5 F5           	push af	;af'
1378  8EC6 D9           	exx
1379  8EC7 E5           	push hl	;hl'
1380  8EC8 D5           	push de	;de'
1381  8EC9 C5           	push bc	;bc'
1382  8ECA D9           	exx
1383  8ECB E5           	push hl	;hl
1384  8ECC D5           	push de	;de
1385  8ECD C5           	push bc	;bc
1386  8ECE 08           	ex af,af'
1387  8ECF F5           	push af	;af
1388  8ED0 DD E5        	push ix
1389  8ED2 FD E5        	push iy
1390  8ED4
1391  8ED4 3E 02        	ld a,2
1392  8ED6 D3 FE            out ($fe),a											; Rojo.
1393  8ED8
1394  8ED8              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1395  8ED8              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1396  8ED8
1397  8ED8 2A 29 8A     	ld hl,(Puntero_indice_album_de_fotos)
1398  8EDB 01 EC 84     	ld bc,Indice_album_de_fotos
1399  8EDE A7           	and a
1400  8EDF ED 42        	sbc hl,bc
1401  8EE1 28 4E        	jr z,6F
1402  8EE3
1403  8EE3              ; $59,
1404  8EE3
1405  8EE3 CD 66 8D     	call Calcula_numero_de_malotes
1406  8EE6
1407  8EE6 CD 4F 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1408  8EE9
1409  8EE9              ;	call Extrae_foto_disparos
1410  8EE9 3E 01            ld a,1
1411  8EEB D3 FE            out ($fe),a											; Azul.
1412  8EED
1413  8EED              ; 	Gestiona albumes de fotos.
1414  8EED
1415  8EED              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1416  8EED CD 00 79     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1417  8EF0
1418  8EF0              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1419  8EF0
1420  8EF0 3A FE 89     	ld a,(Ctrl_1)
1421  8EF3 CB 6F        	bit 5,a
1422  8EF5 20 24        	jr nz,1F
1423  8EF7
1424  8EF7              ; No hemos terminado de guardar el último FRAME.
1425  8EF7
1426  8EF7 2A 29 8A     	ld hl,(Puntero_indice_album_de_fotos)
1427  8EFA              ;	ld bc,Indice_album_de_fotos
1428  8EFA 2B           	dec hl
1429  8EFB 2B           	dec hl
1430  8EFC
1431  8EFC              ;	ld a,l
1432  8EFC              ;	sub c
1433  8EFC              ;	jr z,$
1434  8EFC
1435  8EFC 22 29 8A     	ld (Puntero_indice_album_de_fotos),hl
1436  8EFF
1437  8EFF 2A 2D 8A     	ld hl,(Puntero_indice_End_Snapshot)
1438  8F02 2B           	dec hl
1439  8F03 2B           	dec hl
1440  8F04 22 2D 8A     	ld (Puntero_indice_End_Snapshot),hl
1441  8F07 CD 96 8D     	call Extrae_address
1442  8F0A 22 31 8A     	ld (Puntero_de_End_Snapshot),hl
1443  8F0D
1444  8F0D CD 96 8D     	call Extrae_address
1445  8F10
1446  8F10              ; Esta vacío este album???
1447  8F10
1448  8F10 24           	inc h
1449  8F11 25           	dec h
1450  8F12 20 02        	jr nz,5F
1451  8F14
1452  8F14              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1453  8F14
1454  8F14 18 05        	jr 1F
1455  8F16
1456  8F16 22 15 8A     5 ld (Stack_snapshot),hl
1457  8F19 18 09        	jr 2F
1458  8F1B
1459  8F1B              ; FRAME completo.
1460  8F1B
1461  8F1B 2A 29 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1462  8F1E CD 96 8D     	call Extrae_address
1463  8F21 22 15 8A     	ld (Stack_snapshot),hl
1464  8F24
1465  8F24              ;	En este punto:
1466  8F24
1467  8F24              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1468  8F24              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1469  8F24
1470  8F24              ; RELOJES.
1471  8F24
1472  8F24 21 48 8A     2 ld hl,Contador_de_frames
1473  8F27 7E           	ld a,(hl)
1474  8F28 FE FF        	cp $ff
1475  8F2A 20 04        	jr nz,3F
1476  8F2C 34           	inc (hl)
1477  8F2D 21 49 8A     	ld hl,Contador_de_frames_2
1478  8F30 34           3 inc (hl)											; 0 - 255
1479  8F31
1480  8F31 21 FE 89     6 ld hl,Ctrl_1
1481  8F34 CB AE        	res 5,(hl)
1482  8F36
1483  8F36              ; Recuperamos registros y SP.
1484  8F36
1485  8F36 FD E1        	pop iy
1486  8F38 DD E1        	pop ix
1487  8F3A F1           	pop af
1488  8F3B C1           	pop bc
1489  8F3C D1           	pop de
1490  8F3D E1           	pop hl
1491  8F3E D9           	exx
1492  8F3F C1           	pop bc
1493  8F40 D1           	pop de
1494  8F41 E1           	pop hl
1495  8F42 08           	ex af,af'
1496  8F43 F1           	pop af
1497  8F44 08           	ex af,af'
1498  8F45 D9           	exx
1499  8F46
1500  8F46 ED 7B 13 8A  	ld sp,(Stack_3)
1501  8F4A
1502  8F4A C9           	ret
1503  8F4B
1504  8F4B              ; ---------------------------------------------------------------
1505  8F4B
1506  8F4B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F4B              ; ******************************************************************************************************************************************************************************************
   2+ 8F4B              ;
   3+ 8F4B              ;   21/07/23
   4+ 8F4B              ;
   5+ 8F4B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F4B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F4B              ;
   8+ 8F4B              ;
   9+ 8F4B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F4B              ;
  11+ 8F4B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F4B              ;               _ hacen las entidades hacia abajo.
  13+ 8F4B              ;
  14+ 8F4B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F4B              ;
  16+ 8F4B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F4B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F4B              ;
  19+ 8F4B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F4B              ;           _ la bala.
  21+ 8F4B              ;
  22+ 8F4B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F4B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F4B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F4B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F4B              ;           _ en el momento de generarse la bala)).
  27+ 8F4B
  28+ 8F4B              Genera_disparo
  29+ 8F4B
  30+ 8F4B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F4B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F4B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F4B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F4B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F4B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F4B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F4B
  38+ 8F4B              ; Exclusiones:
  39+ 8F4B
  40+ 8F4B 3A D3 89         ld a,(Vel_down)
  41+ 8F4E 47               ld b,a
  42+ 8F4F 3A 47 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F52 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F53 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F54 3A F8 89         ld a,(Columnas)
  46+ 8F57 47               ld b,a
  47+ 8F58 3A BC 89         ld a,(Columns)
  48+ 8F5B B8               cp b
  49+ 8F5C C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F5D
  51+ 8F5D              ; ----- ----- -----
  52+ 8F5D
  53+ 8F5D 3A E9 89         ld a,(Ctrl_0)
  54+ 8F60 CB 77            bit 6,a
  55+ 8F62 20 06            jr nz,14F
  56+ 8F64
  57+ 8F64 3A C2 89         ld a,(Coordenada_y)
  58+ 8F67 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F69 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F6A
  61+ 8F6A 21 00 80     14 ld hl,Indice_disparo
  62+ 8F6D 3A C3 89         ld a,(CTRL_DESPLZ)
  63+ 8F70 4F               ld c,a
  64+ 8F71 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F73              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F73              ;                                            ""        ""       "f9", B="1"
  67+ 8F73              ;                                            ""        ""       "fb", B="2"
  68+ 8F73              ;                                            ""        ""       "fb", B="3"
  69+ 8F73 A7               and a
  70+ 8F74 28 10            jr z,1F
  71+ 8F76 E6 01            and 1
  72+ 8F78 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F79
  74+ 8F79 79               ld a,c
  75+ 8F7A 16 F9            ld d,$f9
  76+ 8F7C 23           2 inc hl
  77+ 8F7D 23               inc hl
  78+ 8F7E 04               inc b
  79+ 8F7F BA               cp d
  80+ 8F80 28 04            jr z,1F
  81+ 8F82 14               inc d
  82+ 8F83 14               inc d
  83+ 8F84 18 F6            jr 2B
  84+ 8F86
  85+ 8F86 CD 96 8D     1 call Extrae_address
  86+ 8F89 E5               push hl
  87+ 8F8A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F8C DD 21 D4 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F90
  90+ 8F90              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F90              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F90
  93+ 8F90 3A E9 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F93 CB 77            bit 6,a
  95+ 8F95 20 04            jr nz,19F
  96+ 8F97
  97+ 8F97 AF               xor a
  98+ 8F98 32 50 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F9B
 100+ 8F9B 3A CF 89     19 ld a,(Cuad_objeto)
 101+ 8F9E FE 02            cp 2
 102+ 8FA0 38 66            jr c,3F
 103+ 8FA2 28 64            jr z,3F
 104+ 8FA4
 105+ 8FA4              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8FA4
 107+ 8FA4 E6 01            and 1
 108+ 8FA6 28 30            jr z,4F
 109+ 8FA8
 110+ 8FA8              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8FA8              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8FA8              ;
 113+ 8FA8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8FA8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8FA8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8FA8
 117+ 8FA8 2A BD 89     	ld hl,(Posicion_actual)
 118+ 8FAB
 119+ 8FAB              ;   Amadeus o entidad ???.
 120+ 8FAB
 121+ 8FAB 3A E9 89         ld a,(Ctrl_0)
 122+ 8FAE CB 77            bit 6,a
 123+ 8FB0 28 0A            jr z,8F
 124+ 8FB2
 125+ 8FB2              ; 	Dispara Amadeus.
 126+ 8FB2
 127+ 8FB2 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8FB4 CD 40 97         call PreviousScan
 129+ 8FB7 CD 40 97         call PreviousScan
 130+ 8FBA
 131+ 8FBA              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8FBA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8FBA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8FBA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8FBA
 136+ 8FBA 18 11            jr 10F
 137+ 8FBC
 138+ 8FBC              ; 	Dispara Entidad.
 139+ 8FBC
 140+ 8FBC 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8FBF              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8FBF
 143+ 8FBF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8FBF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8FBF
 146+ 8FBF C5               push bc
 147+ 8FC0 06 10            ld b,16
 148+ 8FC2 CD 31 97     9 call NextScan
 149+ 8FC5 10 FB            djnz 9B
 150+ 8FC7 C1               pop bc
 151+ 8FC8 CD 32 90         call Ajusta_disparo_parte_izquierda
 152+ 8FCB 18 06            jr 17F
 153+ 8FCD
 154+ 8FCD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FCD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FCD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FCD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FCD
 159+ 8FCD CD 32 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FD0 CD A7 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FD3              ;                                                      ; _al generar el disparo.
 162+ 8FD3
 163+ 8FD3              ; 	LLegados a este punto tendremos:
 164+ 8FD3              ;
 165+ 8FD3              ;       Puntero_objeto_disparo en IY.
 166+ 8FD3              ;       Rutinas_de_impresion en IX.
 167+ 8FD3              ;       Puntero_de_impresion en HL.
 168+ 8FD3              ;       Impacto/Dirección en BC.
 169+ 8FD3
 170+ 8FD3 CD 3A 90     17 call Almacena_disparo
 171+ 8FD6 18 52            jr 6F                                             ; RET.
 172+ 8FD8
 173+ 8FD8              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FD8              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FD8              ;
 176+ 8FD8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FD8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FD8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FD8
 180+ 8FD8 2A BD 89     4 ld hl,(Posicion_actual)
 181+ 8FDB
 182+ 8FDB              ;   Amadeus o entidad ???.
 183+ 8FDB
 184+ 8FDB 3A E9 89         ld a,(Ctrl_0)
 185+ 8FDE CB 77            bit 6,a
 186+ 8FE0 28 0A            jr z,11F
 187+ 8FE2
 188+ 8FE2              ; 	Dispara Amadeus.
 189+ 8FE2
 190+ 8FE2 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FE4 CD 40 97         call PreviousScan
 192+ 8FE7 CD 40 97         call PreviousScan
 193+ 8FEA
 194+ 8FEA              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FEA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FEA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FEA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FEA
 199+ 8FEA 18 11            jr 13F
 200+ 8FEC
 201+ 8FEC              ; 	Dispara Entidad.
 202+ 8FEC
 203+ 8FEC 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FEF              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FEF
 206+ 8FEF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FEF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FEF
 209+ 8FEF C5               push bc
 210+ 8FF0 06 10            ld b,16
 211+ 8FF2 CD 31 97     12 call NextScan
 212+ 8FF5 10 FB            djnz 12B
 213+ 8FF7 C1               pop bc
 214+ 8FF8
 215+ 8FF8 CD 2B 90         call Ajusta_disparo_parte_derecha
 216+ 8FFB 18 06            jr 18F
 217+ 8FFD
 218+ 8FFD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FFD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FFD              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FFD              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FFD
 223+ 8FFD CD 2B 90     13 call Ajusta_disparo_parte_derecha
 224+ 9000 CD A7 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9003              ;                                                       ; _al generar el disparo.
 226+ 9003
 227+ 9003              ; LLegados a este punto tendremos:
 228+ 9003              ;
 229+ 9003              ;       Puntero_objeto_disparo en IY.
 230+ 9003              ;       Rutinas_de_impresion en IX.
 231+ 9003              ;       Puntero_de_impresion en HL.
 232+ 9003              ;       Impacto/Dirección en BC.
 233+ 9003
 234+ 9003 CD 3A 90     18 call Almacena_disparo
 235+ 9006 18 22            jr 6F                                               ; RET.
 236+ 9008
 237+ 9008              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9008
 239+ 9008 28 11        3 jr z,5F
 240+ 900A
 241+ 900A              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 900A              ;
 243+ 900A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 900A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 900A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 900A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 900A
 248+ 900A              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 900A              ;	   ""        ""       "f9", B="1"
 250+ 900A              ;	   ""        ""       "fb", B="2"
 251+ 900A              ; 	   ""        ""       "fb", B="3"
 252+ 900A
 253+ 900A 2A BD 89     	ld hl,(Posicion_actual)
 254+ 900D CD 31 97     	call NextScan
 255+ 9010
 256+ 9010              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9010              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9010              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9010              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9010
 261+ 9010 CD 32 90         call Ajusta_disparo_parte_izquierda
 262+ 9013
 263+ 9013              ; 	No se produce impacto. B="$80"
 264+ 9013              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9013
 266+ 9013 01 80 80         ld bc,$8080
 267+ 9016
 268+ 9016              ; 	LLegados a este punto tendremos:
 269+ 9016              ;
 270+ 9016              ;       Puntero_objeto_disparo en IY.
 271+ 9016              ;       Rutinas_de_impresion en IX.
 272+ 9016              ;       Puntero_de_impresion en HL.
 273+ 9016              ;       Impacto/Dirección en BC.
 274+ 9016
 275+ 9016 CD 3A 90         call Almacena_disparo
 276+ 9019 18 0F            jr 6F                                           ; RET.
 277+ 901B
 278+ 901B              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 901B              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 901B              ;
 281+ 901B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 901B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 901B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 901B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 901B
 286+ 901B 2A BD 89     5 ld hl,(Posicion_actual)
 287+ 901E CD 31 97     	call NextScan
 288+ 9021
 289+ 9021              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9021              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9021              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9021              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9021
 294+ 9021 CD 2B 90         call Ajusta_disparo_parte_derecha
 295+ 9024
 296+ 9024              ; 	No se produce impacto. B="$80"
 297+ 9024              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9024
 299+ 9024 01 80 80     15 ld bc,$8080
 300+ 9027
 301+ 9027              ; 	LLegados a este punto tendremos:
 302+ 9027              ;
 303+ 9027              ;       Puntero_objeto_disparo en IY.
 304+ 9027              ;       Rutinas_de_impresion en IX.
 305+ 9027              ;       Puntero_de_impresion en HL.
 306+ 9027              ;       Impacto/Dirección en BC.
 307+ 9027
 308+ 9027 CD 3A 90         call Almacena_disparo
 309+ 902A
 310+ 902A C9           6 ret
 311+ 902B
 312+ 902B              ; ----------------------------------------------------------------
 313+ 902B              ;
 314+ 902B              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 902B              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 902B              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 902B
 318+ 902B 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 902C FE 02            cp 2
 320+ 902E 38 01            jr c,1F
 321+ 9030 23               inc hl
 322+ 9031 C9           1 ret
 323+ 9032
 324+ 9032 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9033 FE 01        	cp 1
 326+ 9035 20 01        	jr nz,1F
 327+ 9037 2B           	dec hl
 328+ 9038 2B           1 dec hl
 329+ 9039 C9               ret
 330+ 903A
 331+ 903A              ; ----------------------------------------------------------------
 332+ 903A              ;
 333+ 903A              ;   25/02/23
 334+ 903A              ;
 335+ 903A              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 903A              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 903A              ;
 338+ 903A              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 903A              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 903A
 341+ 903A              Almacena_disparo
 342+ 903A
 343+ 903A E5               push hl  										; HL contiene el puntero de impresión.
 344+ 903B F1               pop af
 345+ 903C 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 903D
 347+ 903D 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 903E E6 01            and 1
 349+ 9040 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9042              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9042              ; 	Dispara AMADEUS.
 352+ 9042
 353+ 9042              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9042              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9042              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9042              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9042
 358+ 9042 C5               push bc
 359+ 9043 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9046 2A 38 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9049 A7               and a
 362+ 904A ED 42            sbc hl,bc
 363+ 904C CC 5F 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 904F C1               pop bc
 365+ 9050 28 54            jr z,4F
 366+ 9052
 367+ 9052 2A 38 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9055 23               inc hl
 369+ 9056 23               inc hl
 370+ 9057 22 38 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 905A              ;                                                   ; _ Disparo_(+1).
 372+ 905A 18 18            jr 2F
 373+ 905C
 374+ 905C              ; Dispara una entidad.
 375+ 905C
 376+ 905C C5           1 push bc
 377+ 905D 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9060 2A 36 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9063 A7               and a
 380+ 9064 ED 42            sbc hl,bc
 381+ 9066 CC 58 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9069 C1               pop bc
 383+ 906A 28 3A            jr z,4F
 384+ 906C
 385+ 906C 2A 36 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 906F 23               inc hl
 387+ 9070 23               inc hl
 388+ 9071 22 36 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9074              ;                                                   ; _ Disparo_(+1).
 390+ 9074 CD 96 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9077              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9077              ;
 393+ 9077              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9077              ;                                                     Rutinas_de_impresion en IX.
 395+ 9077              ;                                                     Puntero_de_impresion en HL.
 396+ 9077              ;                                                     Impacto/Dirección en BC.
 397+ 9077
 398+ 9077 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9078 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9079 23               inc hl                                          ; _ al siguiente.
 401+ 907A A7               and a
 402+ 907B 20 C0            jr nz,3B
 403+ 907D
 404+ 907D 08               ex af,af
 405+ 907E ED 73 0F 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9082 F9               ld sp,hl
 407+ 9083
 408+ 9083 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9085 F5               push af                                         ; Puntero de impresión.
 410+ 9086 FD E5            push iy                                         ; Puntero objeto.
 411+ 9088 C5               push bc                                         ; Control.
 412+ 9089
 413+ 9089 ED 7B 0F 8A      ld sp,(Stack)
 414+ 908D
 415+ 908D              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 908D
 417+ 908D 21 FE 89     	ld hl,Ctrl_1
 418+ 9090 CB C6        	set 0,(hl)
 419+ 9092
 420+ 9092 DD E5        	push ix
 421+ 9094 E1               pop hl
 422+ 9095 F5               push af
 423+ 9096 DD E1            pop ix
 424+ 9098
 425+ 9098 CD A0 7F     	call Guarda_foto_registros
 426+ 909B
 427+ 909B 21 FE 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 909E CB 86        	res 0,(hl)
 429+ 90A0
 430+ 90A0              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 90A0              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 90A0
 433+ 90A0 CD 5F 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 90A3 CD 58 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 90A6
 436+ 90A6 C9           4 ret
 437+ 90A7
 438+ 90A7              ; ----------------------------------------------------------------
 439+ 90A7              ;
 440+ 90A7              ;   4/3/23
 441+ 90A7              ;
 442+ 90A7              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 90A7              ;   _ al generarse el disparo.
 444+ 90A7              ;
 445+ 90A7              ;       "$80" ..... No se produce colisión.
 446+ 90A7              ;       "$81" ..... Se produce colisión.
 447+ 90A7              ;
 448+ 90A7              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 90A7              ;         _ que forman el disparo.
 450+ 90A7
 451+ 90A7
 452+ 90A7              Comprueba_Colision
 453+ 90A7
 454+ 90A7              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 90A7
 456+ 90A7 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 90A9 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 90AA
 459+ 90AA CD E0 90         call Modifica_H_Velocidad_disparo
 460+ 90AD
 461+ 90AD 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 90AE FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 90B0 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 90B2
 465+ 90B2 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 90B4 CD D0 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 90B7
 468+ 90B7 7B               ld a,e
 469+ 90B8 E6 01            and 1
 470+ 90BA 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 90BC              ;                                                  ; _ para activar IMPACTO.
 472+ 90BC E1               pop hl
 473+ 90BD E5               push hl
 474+ 90BE CD 31 97         call NextScan
 475+ 90C1
 476+ 90C1 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 90C2 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 90C4 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 90C6              ;                                                  ; _ 2º scanline si esto es así.
 480+ 90C6 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 90C8 CD D0 90         call Bucle_2
 482+ 90CB
 483+ 90CB 43           1 ld b,e
 484+ 90CC E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90CD FD E1            pop iy
 486+ 90CF C9               ret
 487+ 90D0
 488+ 90D0              ; ---------- ----------
 489+ 90D0
 490+ 90D0 06 02        Bucle_2 ld b,2
 491+ 90D2 FD 7E 00     2 ld a,(iy)
 492+ 90D5 A6               and (hl)
 493+ 90D6 28 02            jr z,1F
 494+ 90D8 1E 81            ld e,$81
 495+ 90DA 23           1 inc hl
 496+ 90DB FD 23            inc iy
 497+ 90DD 10 F3            djnz 2B
 498+ 90DF C9               ret
 499+ 90E0
 500+ 90E0              ; ---------- ----------
 501+ 90E0              ;
 502+ 90E0              ;   21/7/23
 503+ 90E0
 504+ 90E0              Modifica_H_Velocidad_disparo
 505+ 90E0
 506+ 90E0 3A 47 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90E3 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90E5 D0               ret nc                                         ; _ incrementamos H.
 509+ 90E6 24               inc h
 510+ 90E7
 511+ 90E7 C9               ret
 512+ 90E8
 513+ 90E8              ; -------------------------------------------------------------------------------------------------------------
 514+ 90E8              ;
 515+ 90E8              ;   11/04/23
 516+ 90E8              ;
 517+ 90E8              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90E8              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90E8              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90E8              ;
 521+ 90E8              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90E8
 523+ 90E8              Compara_coordenadas_X
 524+ 90E8
 525+ 90E8              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90E8              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90E8
 528+ 90E8              ; Preparamos registros:
 529+ 90E8
 530+ 90E8 21 C1 89         ld hl,Filas+6
 531+ 90EB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90EC 23               inc hl
 533+ 90ED 23               inc hl
 534+ 90EE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90EF 43               ld b,e
 536+ 90F0
 537+ 90F0 21 CF 89         ld hl,Filas+20
 538+ 90F3 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90F4 21 42 8A         ld hl,Coordenadas_X_Entidad
 540+ 90F7 CD 13 93         call Guarda_coordenadas_X
 541+ 90FA
 542+ 90FA              ; Preparamos registros:
 543+ 90FA
 544+ 90FA 21 AA 85         ld hl,Amadeus_db+6
 545+ 90FD 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90FE 23               inc hl
 547+ 90FF 23               inc hl
 548+ 9100 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9101 7B               ld a,e
 550+ 9102 08               ex af,af'
 551+ 9103 21 B8 85         ld hl,Amadeus_db+20
 552+ 9106 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9107 21 3F 8A         ld hl,Coordenadas_X_Amadeus
 554+ 910A CD 13 93         call Guarda_coordenadas_X
 555+ 910D
 556+ 910D              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 910D              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 910D
 559+ 910D 04               inc b
 560+ 910E 05               dec b
 561+ 910F 28 04            jr z,1F
 562+ 9111 06 03            ld b,3
 563+ 9113 18 02            jr 2F
 564+ 9115 06 02        1 ld b,2
 565+ 9117 08           2 ex af,af'
 566+ 9118 3C               inc a
 567+ 9119 3D               dec a
 568+ 911A 28 04            jr z,5F
 569+ 911C 0E 03            ld c,3
 570+ 911E 18 02            jr 6F
 571+ 9120 0E 02        5 ld c,2
 572+ 9122 79           6 ld a,c
 573+ 9123 08               ex af,af'
 574+ 9124 11 42 8A         ld de,Coordenadas_X_Entidad
 575+ 9127 1A           4 ld a,(de)
 576+ 9128 21 3F 8A         ld hl,Coordenadas_X_Amadeus
 577+ 912B BE           3 cp (hl)
 578+ 912C 28 0E            jr z,7F
 579+ 912E 23               inc hl
 580+ 912F 0D               dec c
 581+ 9130 20 F9            jr nz,3B
 582+ 9132 13               inc de
 583+ 9133 08               ex af,af'
 584+ 9134 4F               ld c,a
 585+ 9135 08               ex af,af'
 586+ 9136 10 EF            djnz 4B
 587+ 9138
 588+ 9138              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9138
 590+ 9138 CD 4F 93     8 call Limpia_Coordenadas_X
 591+ 913B C9               ret
 592+ 913C
 593+ 913C 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 913E 32 D4 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9141 21 3A 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9144 CB D6            set 2,(hl)
 597+ 9146 18 F0            jr 8B
 598+ 9148
 599+ 9148              ; -----------------------------------------------------------------------
 600+ 9148              ;
 601+ 9148              ;   17/04/23
 602+ 9148              ;
 603+ 9148
 604+ 9148              Detecta_colision_nave_entidad
 605+ 9148
 606+ 9148              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9148
 608+ 9148 2A BD 89         ld hl,(Posicion_actual)
 609+ 914B CD 8C 96         call Calcula_puntero_de_impresion
 610+ 914E
 611+ 914E              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 914E              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 914E
 614+ 914E DD E5            push ix
 615+ 9150 E1               pop hl
 616+ 9151 E5               push hl
 617+ 9152
 618+ 9152              ; ----- ----- -----
 619+ 9152 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9154 06 0A            ld b,10
 621+ 9156 CD 86 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9159 7B               ld a,e
 623+ 915A FE 05            cp 5
 624+ 915C 38 0E            jr c,3F
 625+ 915E
 626+ 915E              ; LLegados a este punto:
 627+ 915E              ;
 628+ 915E              ;   HAY COLISIÓN !!!!!.
 629+ 915E              ;
 630+ 915E              ;   .db (Impacto) de Amadeus a "1".
 631+ 915E              ;   SET el bit3 de (Impacto2).
 632+ 915E              ;
 633+ 915E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 915E
 635+ 915E 21 BD 85         ld hl,Amadeus_db+25
 636+ 9161 36 01            ld (hl),1
 637+ 9163 21 3A 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9166 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9168 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 916A 18 18            jr 1F
 641+ 916C
 642+ 916C              ; -----
 643+ 916C
 644+ 916C E1           3 pop hl
 645+ 916D CD 31 97         call NextScan
 646+ 9170 E5               push hl
 647+ 9171 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9172 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9174 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9176 30 0C            jr nc,1F
 651+ 9178              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9178 10 DC            djnz 2B
 653+ 917A
 654+ 917A              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 917A
 656+ 917A              ; LLegados a este punto:
 657+ 917A              ;
 658+ 917A              ;   NO HAY COLISIÓN !!!!!.
 659+ 917A              ;
 660+ 917A              ;   .db (Impacto) de Amadeus a "0".
 661+ 917A              ;   RES el bit2 de (Impacto2).
 662+ 917A              ;
 663+ 917A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 917A              ;   Lo colocamos a "0".
 665+ 917A
 666+ 917A 21 3A 8A         ld hl,Impacto2
 667+ 917D CB 96            res 2,(hl)
 668+ 917F 2A 3B 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9182 36 00            ld (hl),0
 670+ 9184
 671+ 9184 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9185 C9               ret
 673+ 9186
 674+ 9186               ; ---------- ----------
 675+ 9186
 676+ 9186 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9187 3A BC 89         ld a,(Columns)
 678+ 918A 47               ld b,a
 679+ 918B FD 7E 00     2 ld a,(iy)
 680+ 918E BE               cp (hl)
 681+ 918F 28 01            jr z,1F
 682+ 9191
 683+ 9191 1C               inc e
 684+ 9192
 685+ 9192 23           1 inc hl
 686+ 9193 FD 23            inc iy
 687+ 9195 10 F4            djnz 2B
 688+ 9197 C1               pop bc
 689+ 9198 C9               ret
 690+ 9199
 691+ 9199              ; -------------------------------------------------------------------------------------------------------------
 692+ 9199              ;
 693+ 9199              ;   13/03/23
 694+ 9199              ;
 695+ 9199              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9199              ;
 697+ 9199              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9199
 699+ 9199 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 919C 7E               ld a,(hl)
 701+ 919D A7               and a
 702+ 919E C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 919F
 704+ 919F 44               ld b,h
 705+ 91A0 4D               ld c,l
 706+ 91A1 2A 17 8A         ld hl,(Stack_snapshot_disparos)
 707+ 91A4 E5               push hl
 708+ 91A5 A7               and a
 709+ 91A6 ED 42            sbc hl,bc
 710+ 91A8 E5               push hl
 711+ 91A9 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 91AA
 713+ 91AA E1               pop hl
 714+ 91AB 54               ld d,h
 715+ 91AC 5D               ld e,l
 716+ 91AD 1B               dec de
 717+ 91AE ED B8            lddr                                                ; Limpiamos.
 718+ 91B0
 719+ 91B0 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 91B3 22 17 8A         ld (Stack_snapshot_disparos),hl
 721+ 91B6
 722+ 91B6 C9               ret
 723+ 91B7
 724+ 91B7              ; -------------------------------------------------------------------------------------------------------------
 725+ 91B7              ;
 726+ 91B7              ;   18/07/23
 727+ 91B7              ;
 728+ 91B7
 729+ 91B7              Motor_de_disparos
 730+ 91B7
 731+ 91B7              ; Gestiona DISPAROS DE AMADEUS.
 732+ 91B7
 733+ 91B7 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 91BA 2A 38 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 91BD
 736+ 91BD CD 96 8D     2 call Extrae_address
 737+ 91C0 7E               ld a,(hl)
 738+ 91C1 A7               and a
 739+ 91C2 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 91C4
 741+ 91C4              ; ----- ----- ----- ----- ----- -----
 742+ 91C4
 743+ 91C4 C5               push bc
 744+ 91C5 CD 89 92         call foto_disparo_a_borrar
 745+ 91C8
 746+ 91C8              ; Existe colisión con este disparo???
 747+ 91C8
 748+ 91C8 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 91C9 7E               ld a,(hl)
 750+ 91CA 2B               dec hl
 751+ 91CB E6 01            and 1
 752+ 91CD 28 1D            jr z,9F
 753+ 91CF
 754+ 91CF              ;   En este punto:
 755+ 91CF              ;
 756+ 91CF              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91CF              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91CF              ;   _con la entidad).
 759+ 91CF              ;
 760+ 91CF              ;   Disparo_2A defw 0                                ; Control.
 761+ 91CF              ;    defw 0                                          ; Puntero objeto.
 762+ 91CF              ;    defw 0                                          ; Puntero de impresión.
 763+ 91CF              ;    defw 0                                          ; Rutina de impresión.
 764+ 91CF
 765+ 91CF E5               push hl
 766+ 91D0
 767+ 91D0 06 04            ld b,4
 768+ 91D2 23           19 inc hl
 769+ 91D3 10 FD            djnz 19B
 770+ 91D5
 771+ 91D5 CD 96 8D         call Extrae_address
 772+ 91D8 CD B7 9D         call Genera_coordenadas_disparo
 773+ 91DB
 774+ 91DB              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91DB
 776+ 91DB 21 3D 8A         ld hl,Coordenadas_disparo_certero
 777+ 91DE 72               ld (hl),d
 778+ 91DF 23               inc hl
 779+ 91E0 73               ld (hl),e
 780+ 91E1
 781+ 91E1              ; Elimino el disparo de la base de datos.
 782+ 91E1
 783+ 91E1 E1               pop hl
 784+ 91E2 CD 08 93         call Elimina_disparo_de_base_de_datos
 785+ 91E5 21 3A 8A         ld hl,Impacto2
 786+ 91E8 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91EA
 788+ 91EA 18 06            jr 11F
 789+ 91EC
 790+ 91EC CD B2 92     9 call Mueve_disparo
 791+ 91EF CD 89 92         call foto_disparo_a_borrar
 792+ 91F2
 793+ 91F2 C1           11 pop bc
 794+ 91F3 18 04            jr 7F
 795+ 91F5
 796+ 91F5              ; ----- ----- ----- ----- ----- -----
 797+ 91F5
 798+ 91F5 ED 42        1 sbc hl,bc
 799+ 91F7 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91F9
 801+ 91F9 2A 38 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91FC 23               inc hl
 803+ 91FD 23               inc hl
 804+ 91FE 22 38 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9201 18 BA            jr 2B
 806+ 9203
 807+ 9203 CD 5F 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9206              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9206
 810+ 9206              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9206
 812+ 9206 01 8A 85         ld bc,Disparo_11
 813+ 9209 2A 36 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 920C
 815+ 920C CD 96 8D     5 call Extrae_address
 816+ 920F 7E               ld a,(hl)
 817+ 9210 A7               and a
 818+ 9211 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9213
 820+ 9213              ; ----- ----- ----- ----- ----- -----
 821+ 9213
 822+ 9213 C5               push bc
 823+ 9214 CD 89 92         call foto_disparo_a_borrar
 824+ 9217
 825+ 9217              ; Existe colisión con este disparo???
 826+ 9217
 827+ 9217 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9218 7E               ld a,(hl)
 829+ 9219 2B               dec hl
 830+ 921A E6 01            and 1
 831+ 921C 28 4D            jr z,10F
 832+ 921E
 833+ 921E              ;! La colisión se produce con Amadeus???
 834+ 921E              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 921E
 836+ 921E E5               push hl
 837+ 921F
 838+ 921F 06 04            ld b,4
 839+ 9221 23           16 inc hl
 840+ 9222 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9224
 842+ 9224 CD 96 8D         call Extrae_address
 843+ 9227 CD B7 9D         call Genera_coordenadas_disparo
 844+ 922A
 845+ 922A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 922B FE 16            cp $16
 847+ 922D 38 2A            jr c,15F
 848+ 922F
 849+ 922F
 850+ 922F              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 922F
 852+ 922F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9230
 854+ 9230              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9230
 856+ 9230
 857+ 9230 2A 45 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9233
 859+ 9233              ; Coordenada X de Amadeus en D.
 860+ 9233
 861+ 9233 7D               ld a,l
 862+ 9234 E6 1F            and $1F
 863+ 9236 57               ld d,a
 864+ 9237
 865+ 9237 21 AC 85         ld hl,Amadeus_db+8
 866+ 923A 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 923B
 868+ 923B 21 3F 8A         ld hl,Coordenadas_X_Amadeus
 869+ 923E CD 13 93         call Guarda_coordenadas_X
 870+ 9241
 871+ 9241 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9242
 873+ 9242              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9242
 875+ 9242 06 02            ld b,2
 876+ 9244 C5           20 push bc
 877+ 9245
 878+ 9245 06 03            ld b,3
 879+ 9247 21 3F 8A         ld hl,Coordenadas_X_Amadeus
 880+ 924A 7E           18 ld a,(hl)
 881+ 924B BA               cp d
 882+ 924C 20 04            jr nz,17F
 883+ 924E
 884+ 924E              ;! Colisión Amadeus !!!!!!!!!!
 885+ 924E
 886+ 924E C1               pop bc
 887+ 924F E1               pop hl
 888+ 9250 18 0D            jr 14F
 889+ 9252
 890+ 9252 23           17 inc hl
 891+ 9253 10 F5            djnz 18B
 892+ 9255
 893+ 9255 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9256
 895+ 9256 C1               pop bc
 896+ 9257 10 EB            djnz 20B
 897+ 9259
 898+ 9259
 899+ 9259              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9259              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9259
 902+ 9259 E1           15 pop hl
 903+ 925A 23               inc hl
 904+ 925B 35               dec (hl)
 905+ 925C 2B               dec hl
 906+ 925D 18 0C            jr 10F
 907+ 925F
 908+ 925F              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 925F              ; _ almacén de coordenadas_X de Amadeus.
 910+ 925F
 911+ 925F E5           14 push hl
 912+ 9260 CD 08 93         call Elimina_disparo_de_base_de_datos
 913+ 9263 21 3A 8A         ld hl,Impacto2
 914+ 9266 CB CE            set 1,(hl)
 915+ 9268 E1               pop hl
 916+ 9269 18 06            jr 12F
 917+ 926B
 918+ 926B              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 926B
 920+ 926B CD B2 92     10 call Mueve_disparo
 921+ 926E CD 89 92         call foto_disparo_a_borrar
 922+ 9271 C1           12 pop bc
 923+ 9272
 924+ 9272 18 04            jr 8F
 925+ 9274
 926+ 9274              ; ----- ----- ----- ----- ----- -----
 927+ 9274
 928+ 9274 ED 42        4 sbc hl,bc
 929+ 9276 28 0A            jr z,6F
 930+ 9278
 931+ 9278 2A 36 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 927B 23               inc hl
 933+ 927C 23               inc hl
 934+ 927D 22 36 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9280 18 8A            jr 5B
 936+ 9282
 937+ 9282 CD 58 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9285 CD 4F 93         call Limpia_Coordenadas_X
 939+ 9288 C9               ret
 940+ 9289
 941+ 9289              ; ------------------------------------------------------------------
 942+ 9289
 943+ 9289              foto_disparo_a_borrar
 944+ 9289
 945+ 9289 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 928A A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 928B C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 928C
 949+ 928C E5               push hl
 950+ 928D 23               inc hl
 951+ 928E 23               inc hl
 952+ 928F ED 73 0F 8A      ld (Stack),sp
 953+ 9293 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9294 FD E1            pop iy
 955+ 9296 DD E1            pop ix
 956+ 9298 E1               pop hl
 957+ 9299 ED 7B 0F 8A      ld sp,(Stack)
 958+ 929D 3A FE 89         ld a,(Ctrl_1)
 959+ 92A0 CB C7            set 0,a
 960+ 92A2 32 FE 89         ld (Ctrl_1),a
 961+ 92A5 CD A0 7F         call Guarda_foto_registros
 962+ 92A8 3A FE 89         ld a,(Ctrl_1)
 963+ 92AB CB 87            res 0,a
 964+ 92AD 32 FE 89         ld (Ctrl_1),a
 965+ 92B0 E1               pop hl
 966+ 92B1 C9               ret
 967+ 92B2
 968+ 92B2              ;---------------------------------------------------
 969+ 92B2              ;
 970+ 92B2              ;   18/07/23
 971+ 92B2              ;
 972+ 92B2
 973+ 92B2              Mueve_disparo
 974+ 92B2
 975+ 92B2              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 92B2              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 92B2              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 92B2
 979+ 92B2 E5               push hl
 980+ 92B3
 981+ 92B3 7E               ld a,(hl)
 982+ 92B4
 983+ 92B4 06 04            ld b,4
 984+ 92B6 23           1 inc hl
 985+ 92B7 10 FD            djnz 1B
 986+ 92B9
 987+ 92B9              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 92B9
 989+ 92B9 CD 96 8D         call Extrae_address
 990+ 92BC
 991+ 92BC E6 01            and 1
 992+ 92BE 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 92C0
 994+ 92C0              ; Disparo hacia arriba, (Amadeus).
 995+ 92C0
 996+ 92C0              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 92C0              ; _ de la dificultad.
 998+ 92C0
 999+ 92C0 CD 40 97         call PreviousScan
1000+ 92C3 CD 40 97         call PreviousScan
1001+ 92C6 CD 40 97         call PreviousScan
1002+ 92C9 CD 40 97         call PreviousScan
1003+ 92CC
1004+ 92CC              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92CC
1006+ 92CC 7C               ld a,h
1007+ 92CD FE 40            cp $40
1008+ 92CF 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92D1
1010+ 92D1              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92D1
1012+ 92D1 EB               ex de,hl
1013+ 92D2 06 04            ld b,4
1014+ 92D4 2B           6 dec hl
1015+ 92D5 10 FD            djnz 6B
1016+ 92D7
1017+ 92D7 CD 08 93         call Elimina_disparo_de_base_de_datos
1018+ 92DA E1               pop hl
1019+ 92DB 18 10            jr 7F
1020+ 92DD
1021+ 92DD              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92DD              ; HL contiene el puntero de impresión del disparo.
1023+ 92DD              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92DD
1025+ 92DD D5           3 push de
1026+ 92DE C5               push bc
1027+ 92DF
1028+ 92DF CD A7 90         call Comprueba_Colision
1029+ 92E2
1030+ 92E2              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92E2
1032+ 92E2 78               ld a,b
1033+ 92E3
1034+ 92E3 C1               pop bc
1035+ 92E4 D1               pop de
1036+ 92E5
1037+ 92E5 EB               ex de,hl
1038+ 92E6
1039+ 92E6 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92E7 23               inc hl                                      ; _ movimiento.
1041+ 92E8 72               ld (hl),d
1042+ 92E9
1043+ 92E9 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92EA
1045+ 92EA 23               inc hl                                      ; _ en curso.
1046+ 92EB 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92EC 2B               dec hl
1048+ 92ED
1049+ 92ED C9           7 ret
1050+ 92EE
1051+ 92EE              ; Disparo hacia abajo, (Entidad).
1052+ 92EE
1053+ 92EE 3A 47 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92F1 47               ld b,a
1055+ 92F2
1056+ 92F2 CD 31 97     4 call NextScan
1057+ 92F5 10 FB            djnz 4B
1058+ 92F7
1059+ 92F7              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92F7
1061+ 92F7 7C               ld a,h
1062+ 92F8 FE 58            cp $58
1063+ 92FA 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92FC
1065+ 92FC EB               ex de,hl
1066+ 92FD 06 04            ld b,4
1067+ 92FF 2B           5 dec hl
1068+ 9300 10 FD            djnz 5B
1069+ 9302
1070+ 9302 CD 08 93         call Elimina_disparo_de_base_de_datos
1071+ 9305 E1               pop hl
1072+ 9306 18 E5            jr 7B
1073+ 9308
1074+ 9308              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9308
1076+ 9308 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 930B AF               xor a
1078+ 930C 77               ld (hl),a
1079+ 930D 54               ld d,h
1080+ 930E 5D               ld e,l
1081+ 930F 13               inc de
1082+ 9310 ED B0            ldir
1083+ 9312 C9               ret
1084+ 9313
1085+ 9313              ; -----------------------------------------------------------------
1086+ 9313              ;
1087+ 9313              ;   19/7/23
1088+ 9313              ;
1089+ 9313              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9313              ;
1091+ 9313              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9313              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9313              ;
1094+ 9313              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9313              ;
1096+ 9313              ;   INPUTS:
1097+ 9313              ;
1098+ 9313              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9313              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9313
1101+ 9313              ;   MODIFICA: A, HL, BC y DE.
1102+ 9313
1103+ 9313              Guarda_coordenadas_X
1104+ 9313
1105+ 9313 7B               ld a,e
1106+ 9314 A7               and a
1107+ 9315 20 04            jr nz,1F
1108+ 9317
1109+ 9317 06 02            ld b,2
1110+ 9319 18 02            jr 2F
1111+ 931B
1112+ 931B 06 03        1 ld b,3
1113+ 931D 72           2 ld (hl),d
1114+ 931E 23               inc hl
1115+ 931F 14               inc d
1116+ 9320 10 FB            djnz 2B
1117+ 9322
1118+ 9322 C9               ret
1119+ 9323
1120+ 9323              ; -----------------------------------------------------------------
1121+ 9323              ;
1122+ 9323              ;   12/04/23
1123+ 9323              ;
1124+ 9323
1125+ 9323 3A 3A 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9326 A7               and a
1127+ 9327 C8               ret z
1128+ 9328
1129+ 9328 FE 04            cp 4
1130+ 932A 20 09            jr nz,1F
1131+ 932C
1132+ 932C
1133+ 932C              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 932C
1135+ 932C CD 48 91         call Detecta_colision_nave_entidad
1136+ 932F
1137+ 932F 21 3A 8A         ld hl,Impacto2
1138+ 9332 CB 5E            bit 3,(hl)
1139+ 9334 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9335
1141+ 9335              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9335              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9335
1144+ 9335 21 3A 8A     1 ld hl,Impacto2
1145+ 9338 CB 4E            bit 1,(hl)
1146+ 933A 28 07            jr z,2F
1147+ 933C
1148+ 933C 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 933F 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9341 18 0B            jr 3F
1151+ 9343
1152+ 9343 21 3A 8A     2 ld hl,Impacto2
1153+ 9346 CB 46            bit 0,(hl)
1154+ 9348 C8               ret z
1155+ 9349
1156+ 9349              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9349
1158+ 9349 21 FE 89         ld hl,Ctrl_1
1159+ 934C CB D6            set 2,(hl)
1160+ 934E
1161+ 934E C9           3 ret
1162+ 934F
1163+ 934F              ; -----------------------------------------------------------------
1164+ 934F              ;
1165+ 934F              ;   19/7/23
1166+ 934F              ;
1167+ 934F              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 934F
1169+ 934F AF           Limpia_Coordenadas_X xor a
1170+ 9350 06 06            ld b,6
1171+ 9352 21 3F 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9355 77           1 ld (hl),a
1173+ 9356 23               inc hl
1174+ 9357 10 FC            djnz 1B
1175+ 9359 C9               ret
1176+ 935A
1177+ 935A              ; -----------------------------------------------------------------
1178+ 935A              ;
1179+ 935A              ;   25/04/23
1180+ 935A              ;
1181+ 935A
1182+ 935A              Determina_resultado_comparativa
1183+ 935A
1184+ 935A              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 935A              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 935A              ;
1187+ 935A              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 935A              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 935A              ;
1190+ 935A              ;   SBC HL,DE
1191+ 935A
1192+ 935A              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 935A              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 935A
1195+ 935A              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 935A              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 935A
1198+ 935A
1199+ 935A 3A CF 89         ld a,(Cuad_objeto)
1200+ 935D FE 02            cp 2
1201+ 935F 28 26            jr z,2F
1202+ 9361 38 24            jr c,2F
1203+ 9363
1204+ 9363              ; Cuadrantes 3º y 4º
1205+ 9363
1206+ 9363 E6 01            and 1
1207+ 9365 28 10            jr z,4F
1208+ 9367
1209+ 9367              ; Cuadrante 3º
1210+ 9367
1211+ 9367 7C               ld a,h
1212+ 9368 06 00            ld b,0
1213+ 936A
1214+ 936A CD F5 93         call Compara_cositas_H3
1215+ 936D
1216+ 936D 04               inc b
1217+ 936E 05               dec b
1218+ 936F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9370
1220+ 9370 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9371 06 00            ld b,0
1222+ 9373
1223+ 9373 CD 07 94         call Compara_cositas_L3
1224+ 9376 C9               ret
1225+ 9377
1226+ 9377              ; Cuadrante 4º
1227+ 9377
1228+ 9377 7C           4 ld a,h
1229+ 9378 06 00            ld b,0
1230+ 937A
1231+ 937A CD 19 94         call Compara_cositas_H4
1232+ 937D
1233+ 937D 04               inc b
1234+ 937E 05               dec b
1235+ 937F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9380
1237+ 9380 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9381 06 00            ld b,0
1239+ 9383
1240+ 9383 CD 2F 94         call Compara_cositas_L4
1241+ 9386 C9               ret
1242+ 9387
1243+ 9387              ; Cuadrantes 1º y 2º.
1244+ 9387
1245+ 9387 28 10        2 jr z,3F
1246+ 9389
1247+ 9389              ; 1er Cuadrante
1248+ 9389
1249+ 9389 7C               ld a,h
1250+ 938A 06 00            ld b,0
1251+ 938C
1252+ 938C CD CD 93         call Compara_cositas_H1
1253+ 938F
1254+ 938F 04               inc b
1255+ 9390 05               dec b
1256+ 9391 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9392
1258+ 9392 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9393 06 00            ld b,0
1260+ 9395
1261+ 9395 CD E3 93         call Compara_cositas_L1
1262+ 9398 C9               ret
1263+ 9399
1264+ 9399
1265+ 9399              ; 2º Cuadrante
1266+ 9399
1267+ 9399 7C           3 ld a,h
1268+ 939A 06 00            ld b,0
1269+ 939C
1270+ 939C CD A9 93         call Compara_cositas_H2
1271+ 939F
1272+ 939F 04               inc b
1273+ 93A0 05               dec b
1274+ 93A1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 93A2
1276+ 93A2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 93A3 06 00            ld b,0
1278+ 93A5
1279+ 93A5 CD BB 93         call Compara_cositas_L2
1280+ 93A8 C9               ret
1281+ 93A9
1282+ 93A9 A7           Compara_cositas_H2 and a
1283+ 93AA 28 0D            jr z,1F
1284+ 93AC              ;    cp $fd
1285+ 93AC              ;    jr z,1F
1286+ 93AC              ;    cp $fe
1287+ 93AC              ;    jr z,1F
1288+ 93AC FE FF            cp $ff
1289+ 93AE 28 09            jr z,1F
1290+ 93B0 FE 01            cp $01
1291+ 93B2 28 05            jr z,1F
1292+ 93B4 FE 02            cp $02
1293+ 93B6 28 01            jr z,1F
1294+ 93B8 C0               ret nz
1295+ 93B9 04           1 inc b
1296+ 93BA C9               ret
1297+ 93BB
1298+ 93BB A7           Compara_cositas_L2 and a
1299+ 93BC 28 0D            jr z,1F
1300+ 93BE              ;    cp $fd
1301+ 93BE              ;    jr z,1F
1302+ 93BE FE FE            cp $fe
1303+ 93C0 28 09            jr z,1F
1304+ 93C2 FE FF            cp $ff
1305+ 93C4 28 05            jr z,1F
1306+ 93C6 FE 01            cp $01
1307+ 93C8 28 01            jr z,1F
1308+ 93CA              ;    cp $02
1309+ 93CA              ;    jr z,1F
1310+ 93CA C0               ret nz
1311+ 93CB 04           1 inc b
1312+ 93CC C9               ret
1313+ 93CD
1314+ 93CD A7           Compara_cositas_H1 and a
1315+ 93CE 28 11            jr z,1F
1316+ 93D0              ;    cp $fd
1317+ 93D0              ;    jr z,1F
1318+ 93D0              ;    cp $fe
1319+ 93D0              ;    jr z,1F
1320+ 93D0 FE FF            cp $ff
1321+ 93D2 28 0D            jr z,1F
1322+ 93D4 FE 01            cp $01
1323+ 93D6 28 09            jr z,1F
1324+ 93D8 FE 02            cp $02
1325+ 93DA 28 05            jr z,1F
1326+ 93DC FE 03            cp $03
1327+ 93DE 28 01            jr z,1F
1328+ 93E0 C0               ret nz
1329+ 93E1 04           1 inc b
1330+ 93E2 C9               ret
1331+ 93E3
1332+ 93E3 A7           Compara_cositas_L1 and a
1333+ 93E4 28 0D            jr z,1F
1334+ 93E6              ;    cp $fd
1335+ 93E6              ;    jr z,1F
1336+ 93E6              ;    cp $fe
1337+ 93E6              ;    jr z,1F
1338+ 93E6              ;    cp $ff
1339+ 93E6              ;    jr z,1F
1340+ 93E6 FE 01            cp $01
1341+ 93E8 28 09            jr z,1F
1342+ 93EA FE 02            cp $02
1343+ 93EC 28 05            jr z,1F
1344+ 93EE FE 03            cp $03
1345+ 93F0 28 01            jr z,1F
1346+ 93F2 C0               ret nz
1347+ 93F3 04           1 inc b
1348+ 93F4 C9               ret
1349+ 93F5
1350+ 93F5 A7           Compara_cositas_H3 and a
1351+ 93F6 28 0D            jr z,1F
1352+ 93F8              ;    cp $fd
1353+ 93F8              ;    jr z,1F
1354+ 93F8 FE FE            cp $fe
1355+ 93FA 28 09            jr z,1F
1356+ 93FC FE FF            cp $ff
1357+ 93FE 28 05            jr z,1F
1358+ 9400 FE 01            cp $01
1359+ 9402 28 01            jr z,1F
1360+ 9404              ;    cp $02
1361+ 9404              ;    jr z,1F
1362+ 9404              ;    cp $03
1363+ 9404              ;    jr z,1F
1364+ 9404 C0               ret nz
1365+ 9405 04           1 inc b
1366+ 9406 C9               ret
1367+ 9407
1368+ 9407 A7           Compara_cositas_L3 and a
1369+ 9408 28 0D            jr z,1F
1370+ 940A              ;    cp $fd
1371+ 940A              ;    jr z,1F
1372+ 940A              ;    cp $fe
1373+ 940A              ;    jr z,1F
1374+ 940A              ;    cp $ff
1375+ 940A              ;    jr z,1F
1376+ 940A FE 01            cp $01
1377+ 940C 28 09            jr z,1F
1378+ 940E FE 02            cp $02
1379+ 9410 28 05            jr z,1F
1380+ 9412 FE 03            cp $03
1381+ 9414 28 01            jr z,1F
1382+ 9416 C0               ret nz
1383+ 9417 04           1 inc b
1384+ 9418 C9               ret
1385+ 9419
1386+ 9419 A7           Compara_cositas_H4 and a
1387+ 941A 28 11            jr z,1F
1388+ 941C FE FD            cp $fd
1389+ 941E 28 0D            jr z,1F
1390+ 9420 FE FE            cp $fe
1391+ 9422 28 09            jr z,1F
1392+ 9424 FE FF            cp $ff
1393+ 9426 28 05            jr z,1F
1394+ 9428 FE 01            cp $01
1395+ 942A 28 01            jr z,1F
1396+ 942C              ;    cp $02
1397+ 942C              ;    jr z,1F
1398+ 942C              ;    cp $03
1399+ 942C              ;    jr z,1F
1400+ 942C C0               ret nz
1401+ 942D 04           1 inc b
1402+ 942E C9               ret
1403+ 942F
1404+ 942F A7           Compara_cositas_L4 and a
1405+ 9430 28 0D            jr z,1F
1406+ 9432              ;    cp $fd
1407+ 9432              ;    jr z,1F
1408+ 9432 FE FE            cp $fe
1409+ 9434 28 09            jr z,1F
1410+ 9436 FE FF            cp $ff
1411+ 9438 28 05            jr z,1F
1412+ 943A FE 01            cp $01
1413+ 943C 28 01            jr z,1F
1414+ 943E              ;    cp $02
1415+ 943E              ;    jr z,1F
1416+ 943E              ;    cp $03
1417+ 943E              ;    jr z,1F
1418+ 943E C0               ret nz
1419+ 943F 04           1 inc b
1420+ 9440 C9               ret
# file closed: Disparo.asm
1507  9441              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9441              ; ******************************************************************************************************************************************************************************************
   2+ 9441              ;
   3+ 9441              ; 26/06/23
   4+ 9441              ;
   5+ 9441              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9441
   7+ 9441 CD 25 97     Draw call Prepara_draw
   8+ 9444 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9445 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9446 28 05        	jr z,2F
  11+ 9448
  12+ 9448 3A CF 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 944B 18 0C        	jr 1F
  14+ 944D
  15+ 944D 2A CD 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9450 22 BD 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9453 CD E2 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9456              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9456 CD 42 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9459
  21+ 9459 3A E9 89     1 ld a,(Ctrl_0)
  22+ 945C CB 6F        	bit 5,a
  23+ 945E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9460
  25+ 9460 CD 78 94     	call Comprueba_limite_horizontal
  26+ 9463 CD 08 95     	call Comprueba_limite_vertical
  27+ 9466
  28+ 9466              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9466              ; -----------------------
  30+ 9466              ; -----------------------
  31+ 9466              ; -----------------------
  32+ 9466
  33+ 9466 CD 55 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9469 CD 8C 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 946C CD EB 96     	call Define_rutina_de_impresion
  36+ 946F
  37+ 946F 3A E9 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9472 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9474 32 E9 89     	ld (Ctrl_0),a
  40+ 9477
  41+ 9477 C9           	ret
  42+ 9478
  43+ 9478              ; *******************************************************************************************************************************************************************************************
  44+ 9478              ;	21/01/23
  45+ 9478              ;
  46+ 9478              ; 	Comprueba_limite_horizontal.
  47+ 9478              ;
  48+ 9478              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9478              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9478              ;
  51+ 9478              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9478              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9478              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9478              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9478
  56+ 9478
  57+ 9478
  58+ 9478 3A E9 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 947B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 947D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 947F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9481 32 E9 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9484 18 09            jr 6F
  64+ 9486 CB 5F        1 bit 3,a
  65+ 9488 28 0A            jr z,2F
  66+ 948A E6 F7            and $f7
  67+ 948C 32 E9 89         ld (Ctrl_0),a
  68+ 948F CD E2 95     6 call Inicializacion
  69+ 9492 18 5B            jr 5F
  70+ 9494 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9495
  72+ 9495              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9495              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9495
  75+ 9495 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9496 2A F9 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9499 CD 01 9A     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 949C 67           	ld h,a
  79+ 949D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 949E CD 01 9A     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 94A1 67           	ld h,a
  82+ 94A2 A7           	and a
  83+ 94A3 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 94A5 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 94A6 3A CF 89     	ld a,(Cuad_objeto)
  86+ 94A9 FE 02        	cp 2
  87+ 94AB 38 1E        	jr c,3F
  88+ 94AD 28 1C        	jr z,3F
  89+ 94AF 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 94B0 28 23            jr z,7F
  91+ 94B2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 94B4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 94B6 E1           	pop hl
  94+ 94B7
  95+ 94B7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 94B7              ; _para indicar con E="2" en caso necesario.
  97+ 94B7
  98+ 94B7 E5               push hl
  99+ 94B8 C5               push bc
 100+ 94B9 CD 01 9A     	call calcula_tercio
 101+ 94BC FE 01        	cp 1
 102+ 94BE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 94C0 CD F0 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 94C3 28 26            jr z,9F
 105+ 94C5 38 24            jr c,9F
 106+ 94C7 1E 00        11 ld e,0
 107+ 94C9 18 22            jr 8F
 108+ 94CB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94CC 28 07        	jr z, 7F
 110+ 94CE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94D0 1E 00         	ld e,0
 112+ 94D2 E1           	pop hl
 113+ 94D3 18 04        	jr 4F
 114+ 94D5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94D7 18 15            jr 10F
 116+ 94D9
 117+ 94D9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94D9              ; _para indicar con E="2" en caso necesario.
 119+ 94D9
 120+ 94D9 E5           4 push hl
 121+ 94DA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94DB CD 01 9A     	call calcula_tercio
 123+ 94DE FE 01        	cp 1
 124+ 94E0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94E2 CD F0 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94E5 28 04            jr z,9F
 127+ 94E7 30 02            jr nc,9F
 128+ 94E9 18 02        	jr 8F
 129+ 94EB 1E 02        9 ld e,2
 130+ 94ED C1           8 pop bc
 131+ 94EE E1           10 pop hl
 132+ 94EF C9           5 ret
 133+ 94F0
 134+ 94F0              ; --------------------
 135+ 94F0              ;
 136+ 94F0              ; 25/08/22
 137+ 94F0
 138+ 94F0 CD 01 9A     Comprueba_centro call calcula_tercio
 139+ 94F3 67               ld h,a
 140+ 94F4 08           	ex af,af
 141+ 94F5 FE 02        	cp 2
 142+ 94F7 38 07        	jr c,1F
 143+ 94F9 28 05        	jr z,1F
 144+ 94FB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94FE 18 03        	jr 2F
 146+ 9500 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9503 08           2 ex af,af
 148+ 9504 A7               and a
 149+ 9505 ED 42            sbc hl,bc
 150+ 9507 C9               ret
 151+ 9508
 152+ 9508              ; *********************************************************************************************************************************************************************************************
 153+ 9508              ;
 154+ 9508              ;   16/8/22
 155+ 9508              ;
 156+ 9508              ;	Comprueba_limite_vertical
 157+ 9508              ;
 158+ 9508              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9508              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9508              ;
 161+ 9508
 162+ 9508 2A BD 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 950B 7D           	ld a,l
 164+ 950C E6 1F        	and $1F
 165+ 950E 57           	ld d,a
 166+ 950F 3A FB 89     	ld a,(Limite_vertical)
 167+ 9512 BA           	cp d 											; Límite - Posición.
 168+ 9513 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9514 3A CF 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9517 CB 47        	bit 0,a
 171+ 9519 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 951B
 173+ 951B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 951B
 175+ 951B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 951C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 951E
 178+ 951E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 951E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 951E
 181+ 951E 3A C1 89         ld a,(Coordenada_X)
 182+ 9521 16 0F            ld d,Centro_izquierda
 183+ 9523 A7               and a
 184+ 9524 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9525 28 1E            jr z,3F
 186+ 9527 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9529              ;                                                    ; _salimos sin modificar nada.
 188+ 9529 18 0E            jr 2F
 189+ 952B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 952C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 952E
 192+ 952E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 952E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 952E
 195+ 952E 3A C1 89         ld a,(Coordenada_X)
 196+ 9531 16 10            ld d,Centro_derecha
 197+ 9533 A7               and a
 198+ 9534 92               sub d
 199+ 9535 28 0E            jr z,3F
 200+ 9537 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9539              ;                                                    ; _salimos sin modificar nada.
 202+ 9539 CB 43        2 bit 0,e
 203+ 953B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 953D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 953E CD D2 95         call Modificaccionne
 206+ 9541 C1           	pop bc
 207+ 9542 CD E2 95         call Inicializacion
 208+ 9545 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9546
 210+ 9546              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9546
 212+ 9546 C5           4 push bc
 213+ 9547 01 BC 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 954A 0A           	ld a,(bc)
 215+ 954B 3D           	dec a
 216+ 954C 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 954D 7D           	ld a,l
 218+ 954E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 954F CB 47        	bit 0,a
 220+ 9551 28 03        	jr z,5F
 221+ 9553 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9554 18 2E        	jr 7F
 223+ 9556
 224+ 9556              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9556
 226+ 9556 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9557 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9558 3A E9 89     	ld a,(Ctrl_0)
 229+ 955B CB 4F        	bit 1,a
 230+ 955D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 955F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9560
 233+ 9560              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9560
 235+ 9560 1C               inc e
 236+ 9561 1D               dec e
 237+ 9562 20 07            jr nz,12F
 238+ 9564 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9565 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9566 22 BD 89     	ld (Posicion_actual),hl
 241+ 9569 18 44        13 jr 9F
 242+ 956B CB 43        12 bit 0,e
 243+ 956D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 956F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 956F C1           	pop bc
 246+ 9570 18 D3        	jr 3B
 247+ 9572 80           14 add b
 248+ 9573 6F               ld l,a
 249+ 9574 22 BD 89     	ld (Posicion_actual),hl
 250+ 9577 CD D2 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 957A 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 957C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 957E 32 E9 89         ld (Ctrl_0),a
 254+ 9581 F1           	pop af
 255+ 9582 18 2B        	jr 9F
 256+ 9584
 257+ 9584              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9584
 259+ 9584 F5           7 push af
 260+ 9585 3A E9 89     	ld a,(Ctrl_0)
 261+ 9588 CB 47        	bit 0,a
 262+ 958A 20 1D        	jr nz,8F
 263+ 958C F1           	pop af
 264+ 958D
 265+ 958D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 958D
 267+ 958D 1C           	inc e
 268+ 958E 1D               dec e
 269+ 958F 20 07            jr nz,10F
 270+ 9591 90           	sub b
 271+ 9592 6F               ld l,a
 272+ 9593 22 BD 89     	ld (Posicion_actual),hl
 273+ 9596 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9598              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9598 CB 43        10 bit 0,e
 276+ 959A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 959C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 959C C1           	pop bc
 279+ 959D 18 A6        	jr 3B
 280+ 959F 90           16 sub b
 281+ 95A0 6F               ld l,a
 282+ 95A1 22 BD 89     	ld (Posicion_actual),hl
 283+ 95A4 CD D2 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 95A7 18 06            jr 9F
 285+ 95A9 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 95AB 32 E9 89         ld (Ctrl_0),a
 287+ 95AE F1           	pop af
 288+ 95AF C1           9 pop bc
 289+ 95B0 1E 00        	ld e,0
 290+ 95B2 CD E2 95         call Inicializacion
 291+ 95B5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 95B6 08           	ex af,af
 293+ 95B7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 95B8 18 8B            jr 3B
 295+ 95BA
 296+ 95BA              ; --------------------
 297+ 95BA
 298+ 95BA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 95BC CD 40 97     1 call PreviousScan
 300+ 95BF 10 FB            djnz 1B
 301+ 95C1 22 BD 89     	ld (Posicion_actual),hl
 302+ 95C4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 95C5 C9           	ret
 304+ 95C6
 305+ 95C6              ; --------------------
 306+ 95C6
 307+ 95C6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 95C8 CD 31 97     1 call NextScan
 309+ 95CB 10 FB            djnz 1B
 310+ 95CD 22 BD 89     	ld (Posicion_actual),hl
 311+ 95D0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95D1 C9           	ret
 313+ 95D2
 314+ 95D2              ; --------------------
 315+ 95D2              ;
 316+ 95D2              ;	22/01/23
 317+ 95D2              ;
 318+ 95D2              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95D2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95D2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95D2
 322+ 95D2
 323+ 95D2              Modificaccionne
 324+ 95D2
 325+ 95D2 3A CF 89     	ld a,(Cuad_objeto)
 326+ 95D5 FE 02        	cp 2
 327+ 95D7 CC BA 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95DA DC BA 95         call c,Modifica_Pos_actual
 329+ 95DD C8           	ret z
 330+ 95DE CD C6 95         call Modifica_Pos_actual2
 331+ 95E1 C9               ret
 332+ 95E2
 333+ 95E2              ; *************************************************************************************************************************************************************************************************
 334+ 95E2              ;
 335+ 95E2              ;	13/8/22
 336+ 95E2              ;
 337+ 95E2              ;	Inicializacion
 338+ 95E2              ;
 339+ 95E2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95E2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95E2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95E2              ;
 343+ 95E2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95E2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95E2              ;	_ desaparece/aparece.
 346+ 95E2
 347+ 95E2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95E2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95E2              ;
 350+ 95E2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95E2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95E2              ; 		   [E] ="0"
 353+ 95E2
 354+ 95E2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95E2
 356+ 95E2 CD 01 9A     Inicializacion call calcula_tercio
 357+ 95E5 28 36        	jr z,primit
 358+ 95E7 E6 02        	and 2
 359+ 95E9 20 07        	jr nz,segmit
 360+ 95EB 7D           	ld a,l
 361+ 95EC FE 7F        	cp $7f
 362+ 95EE 38 2D        	jr c,primit
 363+ 95F0 28 2B        	jr z,primit
 364+ 95F2 CD 4F 96     segmit call column
 365+ 95F5 38 13        	jr c,tercuad
 366+ 95F7 3E 04        cuarcuad ld a,4
 367+ 95F9 32 CF 89     	ld (Cuad_objeto),a
 368+ 95FC 21 20 48     	ld hl,$4820
 369+ 95FF 22 F9 89     	ld (Limite_horizontal),hl
 370+ 9602 21 FB 89     	ld hl,Limite_vertical
 371+ 9605 36 0D        	ld (hl),$0d
 372+ 9607 08           	ex af,af
 373+ 9608 18 3C        	jr 1F
 374+ 960A              tercuad
 375+ 960A 3E 03        	ld a,3
 376+ 960C 32 CF 89     	ld (Cuad_objeto),a
 377+ 960F 21 20 48     	ld hl,$4820
 378+ 9612 22 F9 89     	ld (Limite_horizontal),hl
 379+ 9615 21 FB 89     	ld hl,Limite_vertical
 380+ 9618 36 12        	ld (hl),$12
 381+ 961A 08           	ex af,af
 382+ 961B 18 29        	jr 1F
 383+ 961D CD 4F 96     primit call column
 384+ 9620 38 13        	jr c, primcuad
 385+ 9622              segcuad
 386+ 9622 3E 02        	ld a,2
 387+ 9624 32 CF 89     	ld (Cuad_objeto),a
 388+ 9627 21 C0 4F     	ld hl,$4fc0
 389+ 962A 22 F9 89     	ld (Limite_horizontal),hl
 390+ 962D 21 FB 89     	ld hl,Limite_vertical
 391+ 9630 36 0D        	ld (hl),$0d
 392+ 9632 08           	ex af,af
 393+ 9633 18 11        	jr 1F
 394+ 9635              primcuad
 395+ 9635 3E 01        	ld a,1
 396+ 9637 32 CF 89     	ld (Cuad_objeto),a
 397+ 963A 21 C0 4F     	ld hl,$4fc0
 398+ 963D 22 F9 89     	ld (Limite_horizontal),hl
 399+ 9640 21 FB 89     	ld hl,Limite_vertical
 400+ 9643 36 12        	ld (hl),$12
 401+ 9645 08           	ex af,af
 402+ 9646 CD 8C 9D     1 call Genera_coordenadas
 403+ 9649 21 E9 89     	ld hl,Ctrl_0
 404+ 964C CB EE        	set 5,(hl)
 405+ 964E C9           	ret
 406+ 964F
 407+ 964F              ; ------------------------------------------------------------------------------------------------------------------
 408+ 964F
 409+ 964F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 964F              ;
 411+ 964F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 964F
 413+ 964F 7D           column ld a,l
 414+ 9650 E6 1F        	and $1f
 415+ 9652 FE 10         	cp $10
 416+ 9654 C9            	ret
 417+ 9655
 418+ 9655              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9655              ;
 420+ 9655              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9655              ;
 422+ 9655              ; 14/12/22
 423+ 9655              ;
 424+ 9655              ;	Modifica: A y BC.
 425+ 9655
 426+ 9655 3A CF 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9658 E6 01        	and 1
 428+ 965A 28 17        	jr z,1F
 429+ 965C
 430+ 965C              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 965C
 432+ 965C 3A C1 89     	ld a,(Coordenada_X)
 433+ 965F 47           	ld b,a
 434+ 9660 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9661 79           	ld a,c
 436+ 9662 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9663 38 08        	jr c,2F
 438+ 9665 47           	ld b,a
 439+ 9666 79           	ld a,c
 440+ 9667 90           	sub b
 441+ 9668 32 F8 89     	ld (Columnas),a
 442+ 966B 18 1B        	jr 4F
 443+ 966D 79           2 ld a,c
 444+ 966E 32 F8 89     	ld (Columnas),a
 445+ 9671 18 15        	jr 4F
 446+ 9673
 447+ 9673              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9673
 449+ 9673 3A C1 89     1 ld a,(Coordenada_X)
 450+ 9676 81           	add c
 451+ 9677 3D           	dec a
 452+ 9678 D6 1F        	sub $1f
 453+ 967A 38 08        	jr c,3F
 454+ 967C 47           	ld b,a
 455+ 967D 79           	ld a,c
 456+ 967E 90           	sub b
 457+ 967F 32 F8 89     	ld (Columnas),a
 458+ 9682 18 04        	jr 4F
 459+ 9684 79           3 ld a,c
 460+ 9685 32 F8 89     	ld (Columnas),a
 461+ 9688 D9           4 exx
 462+ 9689 4F           	ld c,a
 463+ 968A D9           	exx
 464+ 968B C9            ret
 465+ 968C
 466+ 968C              ; --------------------------------------------------------------------------------------------------------------------
 467+ 968C              ;
 468+ 968C              ;   19/7/23
 469+ 968C              ;
 470+ 968C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 968C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 968C              ;
 473+ 968C              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 968C              ;			HL e IY Contienen (Puntero_objeto).
 475+ 968C              ;
 476+ 968C              ;	DESTRUYE: HL,B Y A.
 477+ 968C
 478+ 968C 3A CF 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 968F FE 02        	cp 2
 480+ 9691 38 18        	jr c,1F
 481+ 9693 28 16        	jr z,1F
 482+ 9695 E6 01        	and 1
 483+ 9697 28 0D        	jr z,3F
 484+ 9699
 485+ 9699              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9699
 487+ 9699 CD DF 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 969C
 489+ 969C 7D           9 ld a,l
 490+ 969D E6 1F        	and $1f
 491+ 969F 28 2A        	jr z,7F
 492+ 96A1 2B           	dec hl
 493+ 96A2 10 F8        	djnz 9B
 494+ 96A4 18 25        	jr 7F
 495+ 96A6
 496+ 96A6              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 96A6
 498+ 96A6 2A BD 89     3 ld hl,(Posicion_actual)
 499+ 96A9 18 20        	jr 7F
 500+ 96AB
 501+ 96AB 28 14        1 jr z,2F
 502+ 96AD
 503+ 96AD              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 96AD
 505+ 96AD CD DF 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 96B0
 507+ 96B0 7D           4 ld a,l
 508+ 96B1 E6 1F        	and $1f
 509+ 96B3 28 03        	jr z,6F
 510+ 96B5 2B           	dec hl
 511+ 96B6 10 F8        	djnz 4B
 512+ 96B8 06 0F        6 ld b,15
 513+ 96BA CD 40 97     5 call PreviousScan
 514+ 96BD 10 FB        	djnz 5B
 515+ 96BF 18 0A        	jr 7F
 516+ 96C1
 517+ 96C1              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 96C1
 519+ 96C1 CD DF 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 96C4 06 0F        	ld b,15
 521+ 96C6 CD 40 97     8 call PreviousScan
 522+ 96C9 10 FB        	djnz 8B
 523+ 96CB
 524+ 96CB E5           7 push hl
 525+ 96CC DD E1        	pop ix
 526+ 96CE
 527+ 96CE 2A BF 89     	ld hl,(Puntero_objeto)
 528+ 96D1 E5           	push hl
 529+ 96D2 FD E1        	pop iy
 530+ 96D4
 531+ 96D4              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96D4
 533+ 96D4 3A E9 89     	ld a,(Ctrl_0)
 534+ 96D7 CB 77        	bit 6,a
 535+ 96D9 C8           	ret z
 536+ 96DA
 537+ 96DA              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96DA              ; _ entidad / Amadeus´.
 539+ 96DA
 540+ 96DA DD 22 45 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96DE
 542+ 96DE C9           	ret
 543+ 96DF
 544+ 96DF              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96DF              ;
 546+ 96DF              ;	2/1/23
 547+ 96DF              ;
 548+ 96DF              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96DF              ;
 550+ 96DF              ;	Tras esta rutina tenemos:
 551+ 96DF              ;
 552+ 96DF              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96DF              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96DF              ;
 555+ 96DF              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96DF
 557+ 96DF 2A BD 89     Operandos ld hl,(Posicion_actual)
 558+ 96E2 3A F8 89     	ld a,(Columnas)
 559+ 96E5 3D           	dec a
 560+ 96E6 20 01        	jr nz,1F
 561+ 96E8 3C           	inc a
 562+ 96E9 47           1 ld b,a
 563+ 96EA C9           	ret
 564+ 96EB
 565+ 96EB              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96EB              ;
 567+ 96EB              ;	3/1/23
 568+ 96EB              ;
 569+ 96EB              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96EB              ;
 571+ 96EB              ;	Destruye: A,B,HL y DE.
 572+ 96EB
 573+ 96EB              Define_rutina_de_impresion
 574+ 96EB
 575+ 96EB 3A BC 89     	ld a,(Columns)
 576+ 96EE 47           	ld b,a
 577+ 96EF 3A F8 89     	ld a,(Columnas)
 578+ 96F2 B8           	cp b
 579+ 96F3 20 0D        	jr nz,2f
 580+ 96F5
 581+ 96F5              ;	La entidad se imprime entera.
 582+ 96F5
 583+ 96F5 21 D1 97     	ld hl, Indice_entidades_completas
 584+ 96F8 E6 01        	and 1
 585+ 96FA 28 02        	jr z,1F
 586+ 96FC
 587+ 96FC 23           	inc hl
 588+ 96FD 23           	inc hl
 589+ 96FE
 590+ 96FE CD 96 8D     1 call Extrae_address
 591+ 9701 C9           	ret		;	ret
 592+ 9702
 593+ 9702              ;	La entidad no se imprime entera en pantalla.
 594+ 9702
 595+ 9702 3A CF 89     2 ld a,(Cuad_objeto)
 596+ 9705 E6 01        	and 1
 597+ 9707 28 17        	jr z,3F
 598+ 9709
 599+ 9709              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9709
 601+ 9709 21 D5 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 970C 3A BC 89     4 ld a,(Columns)
 603+ 970F E6 01        	and 1
 604+ 9711 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9713
 606+ 9713 23           	inc hl
 607+ 9714 23           	inc hl
 608+ 9715
 609+ 9715 3A F8 89     	ld a,(Columnas)
 610+ 9718 E6 01        	and 1
 611+ 971A 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 971C
 613+ 971C 23           	inc hl
 614+ 971D 23           	inc hl
 615+ 971E
 616+ 971E 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9720
 618+ 9720 21 DB 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9723 18 E7        	jr 4B
 620+ 9725
 621+ 9725              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9725              ;
 623+ 9725              ;	Prepara_draw
 624+ 9725              ;
 625+ 9725              ;	Es una rutina de carga.
 626+ 9725              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9725              ;
 628+ 9725              ;	FUNCIONAMIENTO:
 629+ 9725              ;
 630+ 9725              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9725              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9725              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9725              ;
 634+ 9725              ;	DESTRUYE:
 635+ 9725              ;
 636+ 9725              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9725
 638+ 9725 21 BB 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9728 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9729 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 972A 4E           	ld c,(hl)
 642+ 972B 2A BD 89     	ld hl,(Posicion_actual)
 643+ 972E 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9730 C9           	ret
 645+ 9731
 646+ 9731              ;----------------------------------------------------------------------------------------------------------------
 647+ 9731              ;
 648+ 9731              ;	5/08/22
 649+ 9731              ;
 650+ 9731              ;   NextScan.
 651+ 9731              ;
 652+ 9731              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9731              ;
 654+ 9731              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9731              ;
 656+ 9731              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9731              ;
 658+ 9731              ;       DESTRUIDOS: AF y HL !!!
 659+ 9731              ;
 660+ 9731              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9731              ;
 662+ 9731
 663+ 9731 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9732 7C               ld a,h
 665+ 9733 E6 07            and 7
 666+ 9735 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9736
 668+ 9736 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9737 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9739 6F               ld l,a
 671+ 973A D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 973B
 673+ 973B 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 973C D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 973E 67               ld h,a
 676+ 973F C9               ret
 677+ 9740
 678+ 9740              ;----------------------------------------------------------------------------------------------------------------
 679+ 9740              ;
 680+ 9740              ;	5/08/22
 681+ 9740              ;
 682+ 9740              ;   PreviousScan.
 683+ 9740              ;
 684+ 9740              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9740              ;
 686+ 9740              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9740              ;
 688+ 9740              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9740              ;
 690+ 9740              ;       DESTRUIDOS: AF y HL !!!
 691+ 9740              ;
 692+ 9740              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9740              ;
 694+ 9740
 695+ 9740 7C           PreviousScan ld a,h
 696+ 9741 25               dec h               ; Dec H.
 697+ 9742 E6 07            and 7
 698+ 9744 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9745
 700+ 9745 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9746 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9748 6F               ld l,a
 703+ 9749 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 974A
 705+ 974A 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 974B C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 974D 67               ld h,a
 708+ 974E C9               ret
 709+ 974F
 710+ 974F              ; -----------------------------------------------------------------------------------
 711+ 974F              ;
 712+ 974F              ;	31/7/23
 713+ 974F              ;
 714+ 974F              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 974F              ;	Extrae fotos de Album_de_fotos.
 716+ 974F
 717+ 974F              Extrae_foto_entidades
 718+ 974F
 719+ 974F 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9752 7E           	ld a,(hl)
 721+ 9753 A7           	and a
 722+ 9754 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9755
 724+ 9755 3A 0A 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9758 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9759 C8           	ret z
 727+ 975A
 728+ 975A              ; -----------------------------------
 729+ 975A
 730+ 975A ED 73 0F 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 975E 31 00 70     	ld sp,Album_de_fotos
 732+ 9761
 733+ 9761 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9763 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9764 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9765
 737+ 9765 ED 73 11 8A  	ld (Stack_2),sp
 738+ 9769 ED 7B 0F 8A  	ld sp,(Stack)
 739+ 976D
 740+ 976D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 976D
 742+ 976D 3E CD        	ld a,$cd
 743+ 976F 32 77 97     	ld (Imprime),a
 744+ 9772 EB           	ex de,hl
 745+ 9773 22 78 97     	ld (Imprime+1),hl
 746+ 9776 EB           	ex de,hl
 747+ 9777
 748+ 9777              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 9777
 750+ 9777 00 00 00     Imprime db 0,0,0
 751+ 977A
 752+ 977A ED 73 0F 8A  	ld (Stack),sp
 753+ 977E
 754+ 977E 3A 0A 8A     	ld a,(Numero_de_malotes)
 755+ 9781 3D           	dec a
 756+ 9782 28 09        	jr z,1F
 757+ 9784 32 0A 8A      	ld (Numero_de_malotes),a
 758+ 9787
 759+ 9787 ED 7B 11 8A  	ld sp,(Stack_2)
 760+ 978B 18 D4        	jr 2B
 761+ 978D
 762+ 978D AF           1 xor a
 763+ 978E 32 11 8A     	ld (Stack_2),a
 764+ 9791
 765+ 9791 C9           	ret
 766+ 9792
 767+ 9792              ; -----------------------------------------------------------------------------------
 768+ 9792              ;
 769+ 9792              ;	28/2/23
 770+ 9792              ;
 771+ 9792              ;	Pinta los disparos generados.
 772+ 9792
 773+ 9792              Extrae_foto_disparos
 774+ 9792
 775+ 9792 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 776+ 9795 7E               ld a,(hl)
 777+ 9796 A7               and a
 778+ 9797 C8               ret z
 779+ 9798
 780+ 9798 3A 35 8A     	ld a,(Numero_de_disparotes)
 781+ 979B A7           	and a
 782+ 979C C8           	ret z
 783+ 979D ED 73 0F 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 97A1 31 0D 72     	ld sp,Album_de_fotos_disparos
 785+ 97A4
 786+ 97A4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 97A6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 97A7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 97A8
 790+ 97A8 ED 73 11 8A  	ld (Stack_2),sp
 791+ 97AC ED 7B 0F 8A  	ld sp,(Stack)
 792+ 97B0
 793+ 97B0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 97B0
 795+ 97B0 3E CD        	ld a,$cd
 796+ 97B2 32 BA 97     	ld (Imprime2),a
 797+ 97B5 EB           	ex de,hl
 798+ 97B6 22 BB 97     	ld (Imprime2+1),hl
 799+ 97B9 EB           	ex de,hl
 800+ 97BA
 801+ 97BA              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 97BA
 803+ 97BA 00 00 00     Imprime2 db 0,0,0
 804+ 97BD
 805+ 97BD 3A 35 8A     	ld a,(Numero_de_disparotes)
 806+ 97C0 3D           	dec a
 807+ 97C1 28 09        	jr z,1F
 808+ 97C3 32 35 8A      	ld (Numero_de_disparotes),a
 809+ 97C6
 810+ 97C6 ED 7B 11 8A  	ld sp,(Stack_2)
 811+ 97CA 18 D8        	jr 2B
 812+ 97CC
 813+ 97CC AF           1 xor a
 814+ 97CD 32 11 8A     	ld (Stack_2),a
 815+ 97D0 C9           	ret
 816+ 97D1
# file closed: Draw_XOR.asm
1508  97D1              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97D1              ;   índices de Rutinas de impresión.
   2+ 97D1
   3+ 97D1 E1 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97D3 0E 98            defw Pinta_Amadeus_3x2
   5+ 97D5
   6+ 97D5 64 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97D7 04 99            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97D9 B8 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97DB
  10+ 97DB 8E 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97DD 92 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97DF 46 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97E1
  14+ 97E1
  15+ 97E1              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97E1              ;
  17+ 97E1              ;   12/12/22
  18+ 97E1              ;
  19+ 97E1              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97E1              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97E1              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97E1              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97E1              ;
  24+ 97E1              ;   Modifica: DE y HL.
  25+ 97E1
  26+ 97E1 ED 73 0F 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97E5 FD F9        	ld sp,iy
  28+ 97E7 06 10            ld b,16
  29+ 97E9 D1           1 pop de
  30+ 97EA 7B               ld a,e
  31+ 97EB AE               xor (hl)
  32+ 97EC 77           	ld (hl),a
  33+ 97ED 23           	inc hl
  34+ 97EE 7A               ld a,d
  35+ 97EF AE               xor (hl)
  36+ 97F0 77           	ld (hl),a
  37+ 97F1 2B           	dec hl
  38+ 97F2 24           	inc h
  39+ 97F3 7C               ld a,h
  40+ 97F4 E6 07            and 7
  41+ 97F6 20 0A            jr nz,2F
  42+ 97F8 7D               ld a,l
  43+ 97F9 C6 20            add a,$20
  44+ 97FB 6F               ld l,a
  45+ 97FC 38 04            jr c,2F
  46+ 97FE 7C               ld a,h
  47+ 97FF D6 08            sub 8
  48+ 9801 67               ld h,a
  49+ 9802 7C           2 ld a,h
  50+ 9803 FE 58            cp $58
  51+ 9805 28 02            jr z,3F
  52+ 9807 10 E0            djnz 1B
  53+ 9809 ED 7B 0F 8A  3 ld sp,(Stack)
  54+ 980D C9           	ret
  55+ 980E
  56+ 980E ED 73 0F 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9812 FD F9        	ld sp,iy
  58+ 9814 06 08            ld b,8
  59+ 9816 D1           1 pop de
  60+ 9817 7B               ld a,e
  61+ 9818 AE               xor (hl)
  62+ 9819 77           	ld (hl),a
  63+ 981A 23           	inc hl
  64+ 981B 7A               ld a,d
  65+ 981C AE               xor (hl)
  66+ 981D 77           	ld (hl),a
  67+ 981E 23           	inc hl
  68+ 981F D1           	pop de
  69+ 9820 7B               ld a,e
  70+ 9821 AE               xor (hl)
  71+ 9822 77           	ld (hl),a
  72+ 9823 2B           	dec hl
  73+ 9824 2B           	dec hl
  74+ 9825 24           	inc h
  75+ 9826 7C               ld a,h
  76+ 9827 E6 07            and 7
  77+ 9829 20 0A            jr nz,2F
  78+ 982B 7D               ld a,l
  79+ 982C C6 20            add a,$20
  80+ 982E 6F               ld l,a
  81+ 982F 38 04            jr c,2F
  82+ 9831 7C               ld a,h
  83+ 9832 D6 08            sub 8
  84+ 9834 67               ld h,a
  85+ 9835 7C           2 ld a,h
  86+ 9836 FE 58            cp $58
  87+ 9838 28 25            jr z,4F
  88+ 983A 7A               ld a,d
  89+ 983B AE               xor (hl)
  90+ 983C 77               ld (hl),a
  91+ 983D D1           	pop de
  92+ 983E 23           	inc hl
  93+ 983F 7B               ld a,e
  94+ 9840 AE               xor (hl)
  95+ 9841 77           	ld (hl),a
  96+ 9842 23           	inc hl
  97+ 9843 7A               ld a,d
  98+ 9844 AE               xor (hl)
  99+ 9845 77           	ld (hl),a
 100+ 9846 2B           	dec hl
 101+ 9847 2B           	dec hl
 102+ 9848 24           	inc h
 103+ 9849 7C               ld a,h
 104+ 984A E6 07            and 7
 105+ 984C 20 0A            jr nz,3F
 106+ 984E 7D               ld a,l
 107+ 984F C6 20            add a,$20
 108+ 9851 6F               ld l,a
 109+ 9852 38 04            jr c,3F
 110+ 9854 7C               ld a,h
 111+ 9855 D6 08            sub 8
 112+ 9857 67               ld h,a
 113+ 9858 7C           3 ld a,h
 114+ 9859 FE 58            cp $58
 115+ 985B 28 02            jr z,4F
 116+ 985D 10 B7            djnz 1B
 117+ 985F ED 7B 0F 8A  4 ld sp,(Stack)
 118+ 9863 C9           	ret
 119+ 9864
 120+ 9864              ; ---------------------------------------------------
 121+ 9864
 122+ 9864 ED 73 0F 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9868 FD F9        	ld sp,iy
 124+ 986A
 125+ 986A              ; >>>
 126+ 986A
 127+ 986A 06 10            ld b,16
 128+ 986C D1           1 pop de
 129+ 986D 7A           	ld a,d
 130+ 986E AE           	xor (hl)
 131+ 986F 77           	ld (hl),a
 132+ 9870 24           	inc h
 133+ 9871 7C               ld a,h
 134+ 9872 E6 07            and 7
 135+ 9874 20 0C            jr nz,2F
 136+ 9876 7D               ld a,l
 137+ 9877 C6 20            add a,$20
 138+ 9879 6F               ld l,a
 139+ 987A 38 06            jr c,2F
 140+ 987C 7C               ld a,h
 141+ 987D D6 08            sub 8
 142+ 987F 67               ld h,a
 143+ 9880 18 00            jr 2F
 144+ 9882 7C           2 ld a,h
 145+ 9883 FE 58            cp $58
 146+ 9885 28 02            jr z,3F
 147+ 9887 10 E3            djnz 1B
 148+ 9889 ED 7B 0F 8A  3 ld sp,(Stack)
 149+ 988D C9           	ret
 150+ 988E
 151+ 988E ED 73 0F 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9892 FD F9        	ld sp,iy
 153+ 9894
 154+ 9894              ; >>>
 155+ 9894
 156+ 9894 06 10            ld b,16
 157+ 9896 D1           1 pop de
 158+ 9897 7B           	ld a,e
 159+ 9898 AE           	xor (hl)
 160+ 9899 77           	ld (hl),a
 161+ 989A 24           	inc h
 162+ 989B 7C               ld a,h
 163+ 989C E6 07            and 7
 164+ 989E 20 0C            jr nz,2F
 165+ 98A0 7D               ld a,l
 166+ 98A1 C6 20            add a,$20
 167+ 98A3 6F               ld l,a
 168+ 98A4 38 06            jr c,2F
 169+ 98A6 7C               ld a,h
 170+ 98A7 D6 08            sub 8
 171+ 98A9 67               ld h,a
 172+ 98AA 18 00            jr 2F
 173+ 98AC 7C           2 ld a,h
 174+ 98AD FE 58            cp $58
 175+ 98AF 28 02            jr z,3F
 176+ 98B1 10 E3            djnz 1B
 177+ 98B3 ED 7B 0F 8A  3 ld sp,(Stack)
 178+ 98B7 C9           	ret
 179+ 98B8
 180+ 98B8              ; ---------------------------------------------------
 181+ 98B8
 182+ 98B8 ED 73 0F 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 98BC FD F9        	ld sp,iy
 184+ 98BE 06 08            ld b,8
 185+ 98C0 D1           1 pop de
 186+ 98C1 7A           	ld a,d
 187+ 98C2 AE           	xor (hl)
 188+ 98C3 77           	ld (hl),a
 189+ 98C4 23           	inc hl
 190+ 98C5 D1           	pop de
 191+ 98C6 7B           	ld a,e
 192+ 98C7 AE           	xor (hl)
 193+ 98C8 77           	ld (hl),a
 194+ 98C9 2B           	dec hl
 195+ 98CA 24            	inc h
 196+ 98CB 7C               ld a,h
 197+ 98CC E6 07            and 7
 198+ 98CE 20 0A            jr nz,2F
 199+ 98D0 7D               ld a,l
 200+ 98D1 C6 20            add a,$20
 201+ 98D3 6F               ld l,a
 202+ 98D4 38 04            jr c,2F
 203+ 98D6 7C               ld a,h
 204+ 98D7 D6 08            sub 8
 205+ 98D9 67               ld h,a
 206+ 98DA 7C           2 ld a,h
 207+ 98DB FE 58            cp $58
 208+ 98DD 28 20            jr z,4F
 209+ 98DF D1               pop de
 210+ 98E0 7B           	ld a,e
 211+ 98E1 AE           	xor (hl)
 212+ 98E2 77           	ld (hl),a
 213+ 98E3 23           	inc hl
 214+ 98E4 7A           	ld a,d
 215+ 98E5 AE           	xor (hl)
 216+ 98E6 77           	ld (hl),a
 217+ 98E7 2B           	dec hl
 218+ 98E8 24           	inc h
 219+ 98E9 7C               ld a,h
 220+ 98EA E6 07            and 7
 221+ 98EC 20 0A            jr nz,3F
 222+ 98EE 7D               ld a,l
 223+ 98EF C6 20            add a,$20
 224+ 98F1 6F               ld l,a
 225+ 98F2 38 04            jr c,3F
 226+ 98F4 7C               ld a,h
 227+ 98F5 D6 08            sub 8
 228+ 98F7 67               ld h,a
 229+ 98F8 7C           3 ld a,h
 230+ 98F9 FE 58            cp $58
 231+ 98FB 28 02            jr z,4F
 232+ 98FD 10 C1            djnz 1B
 233+ 98FF ED 7B 0F 8A  4 ld sp,(Stack)
 234+ 9903 C9           	ret
 235+ 9904
 236+ 9904 ED 73 0F 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9908 FD F9        	ld sp,iy
 238+ 990A 06 08            ld b,8
 239+ 990C D1           1 pop de
 240+ 990D D1           	pop de
 241+ 990E 7B           	ld a,e
 242+ 990F AE           	xor (hl)
 243+ 9910 77           	ld (hl),a
 244+ 9911 24            	inc h
 245+ 9912 7C               ld a,h
 246+ 9913 E6 07            and 7
 247+ 9915 20 0A            jr nz,2F
 248+ 9917 7D               ld a,l
 249+ 9918 C6 20            add a,$20
 250+ 991A 6F               ld l,a
 251+ 991B 38 04            jr c,2F
 252+ 991D 7C               ld a,h
 253+ 991E D6 08            sub 8
 254+ 9920 67               ld h,a
 255+ 9921 7C           2 ld a,h
 256+ 9922 FE 58            cp $58
 257+ 9924 28 1B            jr z,4F
 258+ 9926 D1               pop de
 259+ 9927 7A           	ld a,d
 260+ 9928 AE           	xor (hl)
 261+ 9929 77           	ld (hl),a
 262+ 992A 24           	inc h
 263+ 992B 7C               ld a,h
 264+ 992C E6 07            and 7
 265+ 992E 20 0A            jr nz,3F
 266+ 9930 7D               ld a,l
 267+ 9931 C6 20            add a,$20
 268+ 9933 6F               ld l,a
 269+ 9934 38 04            jr c,3F
 270+ 9936 7C               ld a,h
 271+ 9937 D6 08            sub 8
 272+ 9939 67               ld h,a
 273+ 993A 7C           3 ld a,h
 274+ 993B FE 58            cp $58
 275+ 993D 28 02            jr z,4F
 276+ 993F 10 CB            djnz 1B
 277+ 9941 ED 7B 0F 8A  4 ld sp,(Stack)
 278+ 9945 C9           	ret
 279+ 9946
 280+ 9946 ED 73 0F 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 994A FD F9        	ld sp,iy
 282+ 994C 06 08            ld b,8
 283+ 994E D1           1 pop de
 284+ 994F 7B           	ld a,e
 285+ 9950 AE           	xor (hl)
 286+ 9951 77           	ld (hl),a
 287+ 9952 23           	inc hl
 288+ 9953 7A           	ld a,d
 289+ 9954 AE           	xor (hl)
 290+ 9955 77           	ld (hl),a
 291+ 9956 2B           	dec hl
 292+ 9957 24             	inc h
 293+ 9958 7C               ld a,h
 294+ 9959 E6 07            and 7
 295+ 995B 20 0A            jr nz,2F
 296+ 995D 7D               ld a,l
 297+ 995E C6 20            add a,$20
 298+ 9960 6F               ld l,a
 299+ 9961 38 04            jr c,2F
 300+ 9963 7C               ld a,h
 301+ 9964 D6 08            sub 8
 302+ 9966 67               ld h,a
 303+ 9967 7C           2 ld a,h
 304+ 9968 FE 58            cp $58
 305+ 996A 28 21            jr z,4F
 306+ 996C D1               pop de
 307+ 996D 7A           	ld a,d
 308+ 996E AE           	xor (hl)
 309+ 996F 77           	ld (hl),a
 310+ 9970 23           	inc hl
 311+ 9971 D1               pop de
 312+ 9972 7B           	ld a,e
 313+ 9973 AE           	xor (hl)
 314+ 9974 77           	ld (hl),a
 315+ 9975 2B           	dec hl
 316+ 9976 24           	inc h
 317+ 9977 7C               ld a,h
 318+ 9978 E6 07            and 7
 319+ 997A 20 0A            jr nz,3F
 320+ 997C 7D               ld a,l
 321+ 997D C6 20            add a,$20
 322+ 997F 6F               ld l,a
 323+ 9980 38 04            jr c,3F
 324+ 9982 7C               ld a,h
 325+ 9983 D6 08            sub 8
 326+ 9985 67               ld h,a
 327+ 9986 7C           3 ld a,h
 328+ 9987 FE 58            cp $58
 329+ 9989 28 02            jr z,4F
 330+ 998B 10 C1            djnz 1B
 331+ 998D ED 7B 0F 8A  4 ld sp,(Stack)
 332+ 9991 C9           	ret
 333+ 9992
 334+ 9992 ED 73 0F 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9996 FD F9        	ld sp,iy
 336+ 9998 06 08            ld b,8
 337+ 999A D1           1 pop de
 338+ 999B 7B           	ld a,e
 339+ 999C AE           	xor (hl)
 340+ 999D 77           	ld (hl),a
 341+ 999E 24            	inc h
 342+ 999F 7C               ld a,h
 343+ 99A0 E6 07            and 7
 344+ 99A2 20 0A            jr nz,2F
 345+ 99A4 7D               ld a,l
 346+ 99A5 C6 20            add a,$20
 347+ 99A7 6F               ld l,a
 348+ 99A8 38 04            jr c,2F
 349+ 99AA 7C               ld a,h
 350+ 99AB D6 08            sub 8
 351+ 99AD 67               ld h,a
 352+ 99AE 7C           2 ld a,h
 353+ 99AF FE 58            cp $58
 354+ 99B1 28 1C            jr z,4F
 355+ 99B3 D1               pop de
 356+ 99B4 7A           	ld a,d
 357+ 99B5 AE           	xor (hl)
 358+ 99B6 77           	ld (hl),a
 359+ 99B7 24           	inc h
 360+ 99B8 7C               ld a,h
 361+ 99B9 E6 07            and 7
 362+ 99BB 20 0A            jr nz,3F
 363+ 99BD 7D               ld a,l
 364+ 99BE C6 20            add a,$20
 365+ 99C0 6F               ld l,a
 366+ 99C1 38 04            jr c,3F
 367+ 99C3 7C               ld a,h
 368+ 99C4 D6 08            sub 8
 369+ 99C6 67               ld h,a
 370+ 99C7 7C           3 ld a,h
 371+ 99C8 FE 58            cp $58
 372+ 99CA 28 03            jr z,4F
 373+ 99CC D1               pop de
 374+ 99CD 10 CB            djnz 1B
 375+ 99CF ED 7B 0F 8A  4 ld sp,(Stack)
 376+ 99D3 C9           	ret
 377+ 99D4
 378+ 99D4              ; ---------------------------------------------------
 379+ 99D4              ;
 380+ 99D4              ;   27/02/23
 381+ 99D4              ;
 382+ 99D4              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99D4              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99D4              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99D4
 386+ 99D4 ED 73 0F 8A  Pinta_Disparo ld (Stack),sp
 387+ 99D8 FD F9            ld sp,iy
 388+ 99DA 06 03            ld b,3
 389+ 99DC D1           1 pop de
 390+ 99DD 7B               ld a,e
 391+ 99DE AE               xor (hl)
 392+ 99DF 77               ld (hl),a
 393+ 99E0 23               inc hl
 394+ 99E1 7A               ld a,d
 395+ 99E2 AE               xor (hl)
 396+ 99E3 77               ld (hl),a
 397+ 99E4 2B               dec hl
 398+ 99E5
 399+ 99E5 24               inc h
 400+ 99E6 7C               ld a,h
 401+ 99E7 E6 07            and 7
 402+ 99E9 20 0A            jr nz,2F
 403+ 99EB 7D               ld a,l
 404+ 99EC C6 20            add a,$20
 405+ 99EE 6F               ld l,a
 406+ 99EF 38 04            jr c,2F
 407+ 99F1 7C               ld a,h
 408+ 99F2 D6 08            sub 8
 409+ 99F4 67               ld h,a
 410+ 99F5 7C           2 ld a,h
 411+ 99F6 FE 58            cp $58
 412+ 99F8 28 02            jr z,3F
 413+ 99FA
 414+ 99FA 10 E0            djnz 1B
 415+ 99FC ED 7B 0F 8A  3 ld sp,(Stack)
 416+ 9A00 C9               ret
 417+ 9A01
# file closed: Rutinas_de_impresion_sprites.asm
1509  9A01              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9A01              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9A01              ;
   3+ 9A01              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9A01              ;
   5+ 9A01              ; *****************************************************************************************************************************************************************************************
   6+ 9A01              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9A01
   8+ 9A01 7C           calcula_tercio ld a,h
   9+ 9A02 E6 18        	and $18
  10+ 9A04 CB 2F        	sra a
  11+ 9A06 CB 2F        	sra a
  12+ 9A08 CB 2F        	sra a
  13+ 9A0A C9           	ret
  14+ 9A0B
# file closed: calcula_tercio.asm
1510  9A0B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9A0B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9A0B              ;
   3+ 9A0B              ;
   4+ 9A0B              ;	CLS.
   5+ 9A0B              ;
   6+ 9A0B              ;	Limpia la pantalla y define sus atributos.
   7+ 9A0B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9A0B              ;
   9+ 9A0B              ;	COLORES: 0 ..... NEGRO
  10+ 9A0B              ;    		 1 ..... AZUL
  11+ 9A0B              ; 			 2 ..... ROJO
  12+ 9A0B              ;			 3 ..... MAGENTA
  13+ 9A0B              ; 			 4 ..... VERDE
  14+ 9A0B              ; 			 5 ..... CIAN
  15+ 9A0B              ;			 6 ..... AMARILLO
  16+ 9A0B              ; 			 7 ..... BLANCO
  17+ 9A0B              ;
  18+ 9A0B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9A0B              ;
  20+ 9A0B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9A0B
  22+ 9A0B
  23+ 9A0B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9A0E 11 01 40     	LD DE,$4001
  25+ 9A11 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9A14 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9A16 ED B0        	LDIR
  28+ 9A18 01 FF 02     	LD BC,767
  29+ 9A1B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9A1C ED B0        	LDIR
  31+ 9A1E C9           	ret
  32+ 9A1F
# file closed: Cls.asm
1511  9A1F              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A1F              ; ******************************************************************************************************************************************************************************************
   2+ 9A1F              ;
   3+ 9A1F              ;   20/05/23
   4+ 9A1F              ;
   5+ 9A1F              ;	Recompone_posicion_inicio
   6+ 9A1F              ;
   7+ 9A1F              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9A1F              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9A1F              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9A1F              ;	_ a una u otra rutina.
  11+ 9A1F
  12+ 9A1F              Recompone_posicion_inicio
  13+ 9A1F
  14+ 9A1F 2A CD 89     	ld hl,(Posicion_inicio)
  15+ 9A22 7D           	ld a,l
  16+ 9A23 E6 1F        	and $1f
  17+ 9A25 28 16        	jr z,1F
  18+ 9A27
  19+ 9A27 FE 1F        	cp $1f
  20+ 9A29 28 0D        	jr z,3F
  21+ 9A2B
  22+ 9A2B 21 FC 89     	ld hl,Ctrl_2
  23+ 9A2E CB C6        	set 0,(hl)
  24+ 9A30 2A BF 89     	ld hl,(Puntero_objeto)
  25+ 9A33 22 FF 89     	ld (Repone_puntero_objeto),hl
  26+ 9A36 18 08        	jr 2F
  27+ 9A38
  28+ 9A38 CD D9 9B     3 call Mov_left
  29+ 9A3B 18 03        	jr 2F
  30+ 9A3D
  31+ 9A3D CD BB 9A     1 call Mov_right
  32+ 9A40 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A43 22 BF 89     	ld (Puntero_objeto),hl
  34+ 9A46 C9           	ret
  35+ 9A47
  36+ 9A47              ; ******************************************************************************************************************************************************************************************
  37+ 9A47              ;
  38+ 9A47              ;   27/05/23
  39+ 9A47              ;
  40+ 9A47              ;	Mov_down
  41+ 9A47              ;
  42+ 9A47              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A47              ;
  44+ 9A47              ;
  45+ 9A47              Mov_down
  46+ 9A47
  47+ 9A47 CD A9 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A4A              ;																	; _ repone (Puntero_objeto).
  49+ 9A4A 21 E9 89     	ld hl,Ctrl_0
  50+ 9A4D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A4F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A4F              ; 																	; _ en el caso de que no lo haya.
  53+ 9A4F 3A D3 89     	ld a,(Vel_down)
  54+ 9A52 47           	ld b,a
  55+ 9A53 2A BD 89         ld hl,(Posicion_actual)
  56+ 9A56 CD 01 9A     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A59 E6 02        	and 2
  58+ 9A5B 28 0F        	jr z,1F
  59+ 9A5D
  60+ 9A5D              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A5D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A5D
  63+ 9A5D 7C           	ld a,h
  64+ 9A5E FE 57        	cp $57
  65+ 9A60 20 0A        	jr nz,1F
  66+ 9A62
  67+ 9A62 7D           	ld a,l
  68+ 9A63 C6 20        	add $20
  69+ 9A65 30 05        	jr nc,1F
  70+ 9A67
  71+ 9A67              ; ------------------------------
  72+ 9A67              ;	call Reaparece_arriba
  73+ 9A67 CD 66 9D     	call Reinicio
  74+ 9A6A              ; ------------------------------
  75+ 9A6A
  76+ 9A6A 18 08        	jr 3F
  77+ 9A6C CD 31 97     1 call NextScan
  78+ 9A6F 22 BD 89     	ld (Posicion_actual),hl
  79+ 9A72 10 E2            djnz 2B
  80+ 9A74 CD 8C 9D     3 call Genera_coordenadas
  81+ 9A77 C9           	ret
  82+ 9A78
  83+ 9A78              ; ******************************************************************************************************************************************************************************************
  84+ 9A78              ;
  85+ 9A78              ;   27/05/23
  86+ 9A78              ;
  87+ 9A78              ;	Mov_up
  88+ 9A78              ;
  89+ 9A78              ; 	Mueve el Sprite hacia arriba.
  90+ 9A78              ;
  91+ 9A78              ;
  92+ 9A78              Mov_up
  93+ 9A78
  94+ 9A78 CD A9 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A7B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A7B 21 E9 89     	ld hl,Ctrl_0
  97+ 9A7E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A80              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A80              ; 																		; _ en el caso de que no lo haya.
 100+ 9A80 3A D2 89     	ld a,(Vel_up)
 101+ 9A83 47           	ld b,a
 102+ 9A84 2A BD 89     	ld hl,(Posicion_actual)
 103+ 9A87 CD 01 9A     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A8A A7           	and a
 105+ 9A8B 20 10        	jr nz,1F
 106+ 9A8D
 107+ 9A8D              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A8D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A8D
 110+ 9A8D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A8E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A90 20 0B            jr nz,1F
 113+ 9A92 7D               ld a,l
 114+ 9A93 D6 20            sub $20
 115+ 9A95 30 06            jr nc,1F
 116+ 9A97 25               dec h
 117+ 9A98
 118+ 9A98              ; -----------------------------
 119+ 9A98 CD 47 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A9B              ;	call Reinicio
 121+ 9A9B              ; -----------------------------
 122+ 9A9B
 123+ 9A9B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A9D CD 40 97     1 call PreviousScan
 125+ 9AA0 22 BD 89     	ld (Posicion_actual),hl
 126+ 9AA3 10 E2            djnz 3B
 127+ 9AA5 CD 8C 9D     2 call Genera_coordenadas
 128+ 9AA8 C9           	ret
 129+ 9AA9
 130+ 9AA9              ; -----------------------------
 131+ 9AA9              ;
 132+ 9AA9              ;	27/5/23
 133+ 9AA9              ;
 134+ 9AA9              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9AA9              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9AA9              ;
 137+ 9AA9              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9AA9              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9AA9              ;
 140+ 9AA9              ;	Modifica: A y (Puntero_objeto).
 141+ 9AA9
 142+ 9AA9 3A FC 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9AAC CB 47        	bit 0,a
 144+ 9AAE C8           	ret z
 145+ 9AAF CB 87        	res 0,a
 146+ 9AB1 32 FC 89     	ld (Ctrl_2),a
 147+ 9AB4 2A FF 89     	ld hl,(Repone_puntero_objeto)
 148+ 9AB7 22 BF 89     	ld (Puntero_objeto),hl
 149+ 9ABA C9           	ret
 150+ 9ABB
 151+ 9ABB              ; ******************************************************************************************************************************************************************************************
 152+ 9ABB              ;
 153+ 9ABB              ;	19/10/22
 154+ 9ABB              ;
 155+ 9ABB              ;	Mov_right.
 156+ 9ABB              ;
 157+ 9ABB              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9ABB              ;
 159+ 9ABB
 160+ 9ABB 21 E9 89     Mov_right ld hl,Ctrl_0
 161+ 9ABE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9AC0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9AC0              ; 																	; _ en el caso de que no lo haya.
 164+ 9AC0 3A E9 89     	ld a,(Ctrl_0)
 165+ 9AC3 CB 77        	bit 6,a
 166+ 9AC5 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9AC7
 168+ 9AC7 CD F5 9C     	call Stop_Amadeus_right
 169+ 9ACA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9ACB 18 4D        	jr 8F
 171+ 9ACD
 172+ 9ACD 3A C1 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AD0 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9AD2 20 46        	jr nz,8F
 175+ 9AD4
 176+ 9AD4 3A C3 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9AD7 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AD8 28 40        	jr z,8F
 179+ 9ADA
 180+ 9ADA              ; ---------- ---------- ----------
 181+ 9ADA              ;
 182+ 9ADA              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9ADA
 184+ 9ADA 3A D1 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9ADD FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9ADF 28 11        	jr z,1F
 187+ 9AE1 38 06        	jr c,6F
 188+ 9AE3 FE 04        	cp 4
 189+ 9AE5 28 14        	jr z,7F
 190+ 9AE7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AE9
 192+ 9AE9              ; ---------- ---------- ----------
 193+ 9AE9              ;
 194+ 9AE9              ; Perfiles de velocidad
 195+ 9AE9              ;
 196+ 9AE9
 197+ 9AE9 3A C3 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AEC FE FE        	cp $fe
 199+ 9AEE 20 2A        	jr nz,8F
 200+ 9AF0 18 10        	jr 3F
 201+ 9AF2 3A C3 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AF5 FE FD        	cp $fd
 203+ 9AF7 20 21        	jr nz,8F
 204+ 9AF9 18 07        	jr 3F
 205+ 9AFB 3A C3 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AFE FE FB        	cp $fb
 207+ 9B00 20 18        	jr nz,8F
 208+ 9B02
 209+ 9B02              ; ---------- ---------- ----------
 210+ 9B02
 211+ 9B02              3
 212+ 9B02 CD 35 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9B05              ;	call Reinicio
 214+ 9B05
 215+ 9B05              ; ---------- ---------- ----------
 216+ 9B05              ;
 217+ 9B05              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9B05
 219+ 9B05 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9B07 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9B08 CD 21 9B     	call DESPLZ_DER
 222+ 9B0B C1           	pop bc
 223+ 9B0C 10 F9        	djnz 5B
 224+ 9B0E 2A BD 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9B11 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9B12 22 BD 89     	ld (Posicion_actual),hl
 227+ 9B15 CD 8C 9D     	call Genera_coordenadas
 228+ 9B18 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9B1A
 230+ 9B1A              ; ---------- ---------- ----------
 231+ 9B1A
 232+ 9B1A 2A BD 89     8 ld hl,(Posicion_actual)
 233+ 9B1D CD 21 9B     	call DESPLZ_DER
 234+ 9B20 C9           2 ret
 235+ 9B21
 236+ 9B21              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9B21              ;
 238+ 9B21              ;	22/9/22
 239+ 9B21              ;
 240+ 9B21
 241+ 9B21 CD 30 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9B24 CD 7C 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9B27 CD A5 9B         call Ciclo_completo
 244+ 9B2A 21 E9 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B2D CB FE        	set 7,(hl)
 246+ 9B2F C9           	ret
 247+ 9B30
 248+ 9B30              ; ******************************************************************************************************************************************************************************************
 249+ 9B30              ;	15/02/23
 250+ 9B30              ;
 251+ 9B30
 252+ 9B30 3A D1 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B33 47           	ld b,a
 254+ 9B34 2A C9 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B37 23           1 inc hl
 256+ 9B38 23           	inc hl
 257+ 9B39 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B3B 22 C9 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B3E CD 96 8D     	call Extrae_address
 260+ 9B41 22 BF 89     	ld (Puntero_objeto),hl
 261+ 9B44
 262+ 9B44              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B44
 264+ 9B44              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B44              ; Cuántos movimientos hemos hecho ??
 266+ 9B44              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B44
 268+ 9B44 2A C5 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B47 EB           	ex de,hl
 270+ 9B48 A7           	and a
 271+ 9B49 ED 52        	sbc hl,de
 272+ 9B4B CB 3D        	srl l
 273+ 9B4D 3E 08        6 ld a,8
 274+ 9B4F 95           	sub l
 275+ 9B50 30 1E        	jr nc,3F
 276+ 9B52
 277+ 9B52              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B52              ; B="0".
 279+ 9B52
 280+ 9B52 04           4 inc b
 281+ 9B53 3C           	inc a
 282+ 9B54 20 FC        	jr nz,4B
 283+ 9B56 78           	ld a,b
 284+ 9B57 08           	ex af,af
 285+ 9B58 2A C5 89     	ld hl,(Indice_Sprite_der)
 286+ 9B5B 23           5 inc hl
 287+ 9B5C 23           	inc hl
 288+ 9B5D 10 FC        	djnz 5B
 289+ 9B5F 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B62 CD 96 8D     	call Extrae_address
 291+ 9B65 22 BF 89     	ld (Puntero_objeto),hl
 292+ 9B68
 293+ 9B68              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B68              ; _(Posicion_actual).
 295+ 9B68
 296+ 9B68 21 BD 89     	ld hl,Posicion_actual
 297+ 9B6B 34           	inc (hl)
 298+ 9B6C 08               ex af,af
 299+ 9B6D 6F           	ld l,a
 300+ 9B6E 18 DD        	jr 6B
 301+ 9B70
 302+ 9B70              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B70
 304+ 9B70 47           3 ld b,a
 305+ 9B71 2A C7 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B74 23           2 inc hl
 307+ 9B75 23           	inc hl
 308+ 9B76 10 FC        	djnz 2B
 309+ 9B78 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B7B C9           8 ret
 311+ 9B7C
 312+ 9B7C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B7C              ;
 314+ 9B7C              ;	24/7/22
 315+ 9B7C              ;
 316+ 9B7C              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B7C              ;
 318+ 9B7C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B7C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B7C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B7C
 322+ 9B7C 3A C3 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B7F A7           	and a
 324+ 9B80 20 1F        	jr nz,1F
 325+ 9B82 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B84 32 C3 89         ld (CTRL_DESPLZ),a
 327+ 9B87
 328+ 9B87 21 BC 89     	ld hl,Columns
 329+ 9B8A 34           	inc (hl)
 330+ 9B8B 3A CF 89     	ld a,(Cuad_objeto)
 331+ 9B8E E6 01        	and 1
 332+ 9B90 28 0F        	jr z,1F
 333+ 9B92 2A BD 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B95 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B96 22 BD 89     	ld (Posicion_actual),hl
 336+ 9B99 CD 8C 9D     	call Genera_coordenadas
 337+ 9B9C CD 01 9D     	call Inc_CTRL_DESPLZ
 338+ 9B9F 18 03        	jr 2F
 339+ 9BA1 CD 01 9D     1 call Inc_CTRL_DESPLZ
 340+ 9BA4 C9           2 ret
 341+ 9BA5
 342+ 9BA5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9BA5              ;
 344+ 9BA5              ;	24/7/22
 345+ 9BA5              ;
 346+ 9BA5              ;	Ciclo_completo.
 347+ 9BA5              ;
 348+ 9BA5              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9BA5              ;
 350+ 9BA5              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9BA5              ; 	Decrementamos (Columns).
 352+ 9BA5              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9BA5              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9BA5
 355+ 9BA5
 356+ 9BA5 3A C3 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9BA8 FE FF        	cp $ff
 358+ 9BAA 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9BAC E6 F0        	and $f0
 360+ 9BAE 20 28        	jr nz,3F
 361+ 9BB0
 362+ 9BB0              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9BB0
 364+ 9BB0 3A C3 89     	ld a,(CTRL_DESPLZ)
 365+ 9BB3 47           	ld b,a
 366+ 9BB4 3E F8        	ld a,$f8
 367+ 9BB6 80           	add b
 368+ 9BB7 32 C3 89     	ld (CTRL_DESPLZ),a
 369+ 9BBA 18 1C        	jr 3F
 370+ 9BBC 21 BC 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9BBF 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9BC0 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9BC1 32 C3 89     	ld (CTRL_DESPLZ),a
 374+ 9BC4 3A CF 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9BC7 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BC9 20 0A        	jr nz,2F
 377+ 9BCB 2A BD 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BCE 23           	inc hl
 379+ 9BCF 22 BD 89     	ld (Posicion_actual),hl
 380+ 9BD2 CD 8C 9D     	call Genera_coordenadas
 381+ 9BD5
 382+ 9BD5              ; Inicia el puntero de Sprite.
 383+ 9BD5
 384+ 9BD5 CD AD 8D     2 call Inicia_puntero_objeto_der
 385+ 9BD8 C9           3 ret
 386+ 9BD9
 387+ 9BD9              ; ******************************************************************************************************************************************************************************************
 388+ 9BD9              ;
 389+ 9BD9              ;	15/02/23
 390+ 9BD9              ;
 391+ 9BD9              ;	Mov_left.
 392+ 9BD9              ;
 393+ 9BD9              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BD9              ;
 395+ 9BD9 21 E9 89     Mov_left ld hl,Ctrl_0
 396+ 9BDC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BDE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BDE              ; 																	; _ en el caso de que no lo haya.
 399+ 9BDE 3A E9 89     	ld a,(Ctrl_0)
 400+ 9BE1 CB 77        	bit 6,a
 401+ 9BE3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BE5
 403+ 9BE5 CD FB 9C     	call Stop_Amadeus_left
 404+ 9BE8 C8           	ret z
 405+ 9BE9 20 4A        	jr nz,8F
 406+ 9BEB
 407+ 9BEB 3A C1 89     11 ld a,(Coordenada_X)
 408+ 9BEE A7           	and a
 409+ 9BEF 20 44        	jr nz,8F
 410+ 9BF1
 411+ 9BF1 3A C3 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BF4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BF5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BF7
 415+ 9BF7              ; ---------- ---------- ----------
 416+ 9BF7
 417+ 9BF7 3A D0 89     	ld a,(Vel_left)
 418+ 9BFA FE 02        	cp 2
 419+ 9BFC 28 0F        	jr z,1F
 420+ 9BFE 38 04        	jr c,6F
 421+ 9C00 FE 04        	cp 4
 422+ 9C02 28 12        	jr z,7F
 423+ 9C04
 424+ 9C04              ; ---------- ---------- ----------
 425+ 9C04
 426+ 9C04 3A C3 89     6 ld a,(CTRL_DESPLZ)
 427+ 9C07 FE F8        	cp $f8
 428+ 9C09 20 2A        	jr nz,8F
 429+ 9C0B 18 10        	jr 4F
 430+ 9C0D 3A C3 89     1 ld a,(CTRL_DESPLZ)
 431+ 9C10 FE F9        	cp $f9
 432+ 9C12 20 21        	jr nz,8F
 433+ 9C14 18 07        	jr 4F
 434+ 9C16 3A C3 89     7 ld a,(CTRL_DESPLZ)
 435+ 9C19 FE FB        	cp $fb
 436+ 9C1B 20 18        	jr nz,8F
 437+ 9C1D
 438+ 9C1D              ; ---------- ---------- ----------
 439+ 9C1D
 440+ 9C1D              4
 441+ 9C1D CD 23 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9C20              ;	call Reinicio
 443+ 9C20
 444+ 9C20              ; ---------- ---------- ----------
 445+ 9C20
 446+ 9C20 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9C22 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9C23
 449+ 9C23              ;	ld hl,(Indice_Sprite_izq)
 450+ 9C23              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9C23
 452+ 9C23 CD 3C 9C     	call DESPLZ_IZQ
 453+ 9C26 C1           	pop bc
 454+ 9C27 10 F9        	djnz 5B
 455+ 9C29 2A BD 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C2C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C2D 22 BD 89     	ld (Posicion_actual),hl
 458+ 9C30 CD 8C 9D     	call Genera_coordenadas
 459+ 9C33 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C35
 461+ 9C35              ; ---------- ---------- ----------
 462+ 9C35
 463+ 9C35              ; Movemos, no hay recolocación.
 464+ 9C35
 465+ 9C35 2A BD 89     8 ld hl,(Posicion_actual)
 466+ 9C38 CD 3C 9C     	call DESPLZ_IZQ
 467+ 9C3B C9           2 ret
 468+ 9C3C
 469+ 9C3C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C3C              ;
 471+ 9C3C              ;	22/9/22
 472+ 9C3C
 473+ 9C3C              DESPLZ_IZQ
 474+ 9C3C
 475+ 9C3C CD 4B 9C     	call Desplaza_izquierda
 476+ 9C3F CD 97 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C42 CD BF 9C     	call Ciclo_completo_2
 478+ 9C45 21 E9 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C48 CB BE        	res 7,(hl)
 480+ 9C4A C9           	ret
 481+ 9C4B
 482+ 9C4B              Desplaza_izquierda
 483+ 9C4B
 484+ 9C4B 3A D0 89     	ld a,(Vel_left)
 485+ 9C4E 47           	ld b,a
 486+ 9C4F 2A CB 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C52 23           1 inc hl
 488+ 9C53 23           	inc hl
 489+ 9C54 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C56 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C59 CD 96 8D     	call Extrae_address
 492+ 9C5C 22 BF 89     	ld (Puntero_objeto),hl
 493+ 9C5F
 494+ 9C5F              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C5F
 496+ 9C5F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C5F              ; Cuántos movimientos hemos hecho ??
 498+ 9C5F              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C5F
 500+ 9C5F 2A C7 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C62 EB           	ex de,hl
 502+ 9C63 A7           	and a
 503+ 9C64 ED 52        	sbc hl,de
 504+ 9C66 CB 3D        	srl l
 505+ 9C68 3E 08        6 ld a,8
 506+ 9C6A 95           	sub l
 507+ 9C6B 30 1E        	jr nc,3F
 508+ 9C6D
 509+ 9C6D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C6D              ; B="0".
 511+ 9C6D
 512+ 9C6D 04           4 inc b
 513+ 9C6E 3C           	inc a
 514+ 9C6F 20 FC        	jr nz,4B
 515+ 9C71 78           	ld a,b
 516+ 9C72 08           	ex af,af
 517+ 9C73 2A C7 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C76 23           5 inc hl
 519+ 9C77 23           	inc hl
 520+ 9C78 10 FC        	djnz 5B
 521+ 9C7A 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C7D CD 96 8D     	call Extrae_address
 523+ 9C80 22 BF 89     	ld (Puntero_objeto),hl
 524+ 9C83
 525+ 9C83              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C83              ; _(Posicion_actual).
 527+ 9C83
 528+ 9C83 21 BD 89     	ld hl,Posicion_actual
 529+ 9C86 35           	dec (hl)
 530+ 9C87 08           	ex af,af
 531+ 9C88 6F           	ld l,a
 532+ 9C89 18 DD        	jr 6B
 533+ 9C8B
 534+ 9C8B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C8B
 536+ 9C8B 47           3 ld b,a
 537+ 9C8C 2A C5 89     	ld hl,(Indice_Sprite_der)
 538+ 9C8F 23           2 inc hl
 539+ 9C90 23           	inc hl
 540+ 9C91 10 FC        	djnz 2B
 541+ 9C93 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C96 C9           8 ret
 543+ 9C97
 544+ 9C97              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C97              ;
 546+ 9C97              ;	modifica_parametros_1er_DESPLZ
 547+ 9C97              ;
 548+ 9C97              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C97              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C97              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C97
 552+ 9C97 3A C3 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C9A A7           	and a
 554+ 9C9B 20 1E        	jr nz,1F
 555+ 9C9D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C9E 32 C3 89         ld (CTRL_DESPLZ),a
 557+ 9CA1 21 BC 89     	ld hl,Columns
 558+ 9CA4 34           	inc (hl)
 559+ 9CA5 3A CF 89     	ld a,(Cuad_objeto)
 560+ 9CA8 E6 01        	and 1
 561+ 9CAA 20 0F        	jr nz,1F
 562+ 9CAC 2A BD 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9CAF 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9CB0 22 BD 89     	ld (Posicion_actual),hl
 565+ 9CB3 CD 8C 9D     	call Genera_coordenadas
 566+ 9CB6 CD 12 9D     	call Dec_CTRL_DESPLZ
 567+ 9CB9 18 03        	jr 2F
 568+ 9CBB CD 12 9D     1 call Dec_CTRL_DESPLZ
 569+ 9CBE C9           2 ret
 570+ 9CBF
 571+ 9CBF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9CBF
 573+ 9CBF 3A C3 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9CC2 FE F7        	cp $f7
 575+ 9CC4 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9CC6 30 2C        	jr nc,3F
 577+ 9CC8
 578+ 9CC8              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9CC8
 580+ 9CC8 06 00        	ld b,0
 581+ 9CCA 04           4 inc b
 582+ 9CCB 3C           	inc a
 583+ 9CCC FE F7        	cp $f7
 584+ 9CCE 20 FA        	jr nz,4B
 585+ 9CD0 3E FF        	ld a,$ff
 586+ 9CD2 90           	sub b
 587+ 9CD3 32 C3 89     	ld (CTRL_DESPLZ),a
 588+ 9CD6 18 1C        	jr 3F
 589+ 9CD8
 590+ 9CD8              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CD8
 592+ 9CD8 21 BC 89     1 ld hl,Columns
 593+ 9CDB 35           	dec (hl)
 594+ 9CDC AF           	xor a
 595+ 9CDD 32 C3 89     	ld (CTRL_DESPLZ),a
 596+ 9CE0 3A CF 89     	ld a,(Cuad_objeto)
 597+ 9CE3 E6 01        	and 1
 598+ 9CE5 28 0A        	jr z,2F
 599+ 9CE7 2A BD 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CEA 2B           	dec hl
 601+ 9CEB 22 BD 89     	ld (Posicion_actual),hl
 602+ 9CEE CD 8C 9D     	call Genera_coordenadas
 603+ 9CF1
 604+ 9CF1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CF1
 606+ 9CF1 CD C0 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CF4 C9           3 ret
 608+ 9CF5
 609+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CF5              ;
 611+ 9CF5              ;	19/10/22
 612+ 9CF5              ;
 613+ 9CF5              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CF5              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CF5
 616+ 9CF5 3A C1 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CF8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CFA C9           	ret
 619+ 9CFB
 620+ 9CFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CFB              ;
 622+ 9CFB              ;	19/10/22
 623+ 9CFB              ;
 624+ 9CFB              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CFB              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CFB
 627+ 9CFB 3A C1 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CFE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9D00 C9           	ret
 630+ 9D01
 631+ 9D01              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9D01              ;
 633+ 9D01              ;	24/7/22
 634+ 9D01              ;
 635+ 9D01              ;	Inc_CTRL_DESPLZ
 636+ 9D01              ;
 637+ 9D01              ;
 638+ 9D01              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9D01
 640+ 9D01 21 C3 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9D04 3A D1 89     	ld a,(Vel_right)
 642+ 9D07 A7           	and a
 643+ 9D08 28 06        	jr z,1F
 644+ 9D0A 47           	ld b,a
 645+ 9D0B 34           3 inc (hl)
 646+ 9D0C 10 FD        	djnz 3B
 647+ 9D0E 18 01        	jr 2F
 648+ 9D10 34           1 inc (hl)
 649+ 9D11 C9           2 ret
 650+ 9D12
 651+ 9D12              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9D12              ;
 653+ 9D12              ;	5/2/23
 654+ 9D12              ;
 655+ 9D12              ;	Dec_CTRL_DESPLZ
 656+ 9D12              ;
 657+ 9D12              ;
 658+ 9D12              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9D12
 660+ 9D12 21 C3 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9D15 3A D0 89     	ld a,(Vel_left)
 662+ 9D18 A7           	and a
 663+ 9D19 28 06        	jr z,1F
 664+ 9D1B 47           	ld b,a
 665+ 9D1C 35           3 dec (hl)
 666+ 9D1D 10 FD        	djnz 3B
 667+ 9D1F 18 01        	jr 2F
 668+ 9D21 35           1 dec (hl)
 669+ 9D22 C9           2 ret
 670+ 9D23
 671+ 9D23              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9D23
 673+ 9D23 2A BD 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9D26 01 1F 00     	ld bc,31
 675+ 9D29 A7           	and a
 676+ 9D2A ED 4A        	adc hl,bc
 677+ 9D2C 22 BD 89     	ld (Posicion_actual),hl
 678+ 9D2F 21 E9 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D32 CB C6        	set 0,(hl)
 680+ 9D34 C9           	ret
 681+ 9D35
 682+ 9D35              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D35
 684+ 9D35 2A BD 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D38 01 1F 00     	ld bc,31
 686+ 9D3B A7           	and a
 687+ 9D3C ED 42        	sbc hl,bc
 688+ 9D3E 22 BD 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D41 21 E9 89     	ld hl,Ctrl_0
 690+ 9D44 CB CE        	set 1,(hl)
 691+ 9D46 C9           	ret
 692+ 9D47
 693+ 9D47              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D47
 695+ 9D47 24           Reaparece_abajo inc h
 696+ 9D48 01 E0 17     	ld bc,$17e0
 697+ 9D4B A7           	and a
 698+ 9D4C ED 4A        	adc hl,bc
 699+ 9D4E 22 BD 89     	ld (Posicion_actual),hl
 700+ 9D51 21 E9 89     	ld hl,Ctrl_0
 701+ 9D54 CB D6        	set 2,(hl)
 702+ 9D56 C9           	ret
 703+ 9D57
 704+ 9D57              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D57
 706+ 9D57 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D5A A7           	and a
 708+ 9D5B ED 42        	sbc hl,bc
 709+ 9D5D 22 BD 89     	ld (Posicion_actual),hl
 710+ 9D60 21 E9 89     	ld hl,Ctrl_0
 711+ 9D63 CB DE        	set 3,(hl)
 712+ 9D65 C9           	ret
 713+ 9D66
 714+ 9D66              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D66              ;
 716+ 9D66              ;	15/07/23
 717+ 9D66
 718+ 9D66              Reinicio
 719+ 9D66
 720+ 9D66              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D66
 722+ 9D66 AF           	xor a
 723+ 9D67 21 F0 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D6A CD 88 9D     	call Limpia_contenido_hl
 725+ 9D6D
 726+ 9D6D 21 BD 89     	ld hl,Posicion_actual
 727+ 9D70 CD 88 9D     	call Limpia_contenido_hl
 728+ 9D73
 729+ 9D73 CD B8 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D76 CD 42 A0     	call Inicia_Puntero_mov
 731+ 9D79
 732+ 9D79 21 F2 89     	ld hl,Incrementa_puntero
 733+ 9D7C 06 05        	ld b,5
 734+ 9D7E 77           1 ld (hl),a
 735+ 9D7F 23           	inc hl
 736+ 9D80 10 FC        	djnz 1B
 737+ 9D82
 738+ 9D82 21 FC 89     	ld hl,Ctrl_2
 739+ 9D85 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D87
 741+ 9D87 C9           	ret
 742+ 9D88
 743+ 9D88 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D89 23           	inc hl
 745+ 9D8A 77           	ld (hl),a
 746+ 9D8B C9           	ret
 747+ 9D8C
 748+ 9D8C
# file closed: Direcciones.asm
1512  9D8C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D8C              ; ------------------------------------------------------------------------
   2+ 9D8C              ;
   3+ 9D8C              ;	02/04/23
   4+ 9D8C              ;
   5+ 9D8C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D8C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D8C              ;
   8+ 9D8C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D8C              ;
  10+ 9D8C              ;	Modifica: A,BC y DE.
  11+ 9D8C
  12+ 9D8C C5           Genera_coordenadas push bc
  13+ 9D8D E5           	push hl
  14+ 9D8E D5           	push de
  15+ 9D8F
  16+ 9D8F 2A BD 89     	ld hl,(Posicion_actual)
  17+ 9D92
  18+ 9D92 7D           	ld a,l
  19+ 9D93 E6 1F        	and $1f
  20+ 9D95 32 C1 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D98
  22+ 9D98 CD 01 9A     	call calcula_tercio
  23+ 9D9B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D9C
  25+ 9D9C 1E 00        	ld e,0
  26+ 9D9E 7D           	ld a,l
  27+ 9D9F E6 E0        	and $e0
  28+ 9DA1 28 01        	jr z,1F
  29+ 9DA3 04           	inc b
  30+ 9DA4
  31+ 9DA4 04           1 inc b
  32+ 9DA5 05           	dec b
  33+ 9DA6 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9DA8              ;														; _ , salimos.
  35+ 9DA8 1C           3 inc e
  36+ 9DA9 D6 20        	sub 32
  37+ 9DAB 20 FB        	jr nz,3B
  38+ 9DAD 10 F5        	djnz 1B
  39+ 9DAF
  40+ 9DAF 7B           2 ld a,e
  41+ 9DB0 32 C2 89     	ld (Coordenada_y),a
  42+ 9DB3
  43+ 9DB3 D1           	pop de
  44+ 9DB4 E1           	pop hl
  45+ 9DB5 C1           	pop bc
  46+ 9DB6
  47+ 9DB6 C9           	ret
  48+ 9DB7
  49+ 9DB7              ; ------------------------------------------------------------------------
  50+ 9DB7              ;	28/05/23
  51+ 9DB7              ;
  52+ 9DB7              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9DB7              ;	Fila superior "0", Columna izquierda "0".
  54+ 9DB7              ;
  55+ 9DB7              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9DB7              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9DB7              ;
  58+ 9DB7              ;		DE="$120d"
  59+ 9DB7              ;
  60+ 9DB7              ;		D, (Coordenada_X), Columnas, $12
  61+ 9DB7              ;		E, (Coordenada_y), Filas, $0d
  62+ 9DB7              ;
  63+ 9DB7              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9DB7
  65+ 9DB7              ;	Modifica: A,BC y DE.
  66+ 9DB7
  67+ 9DB7
  68+ 9DB7              Genera_coordenadas_disparo
  69+ 9DB7
  70+ 9DB7              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9DB7
  72+ 9DB7 7D           	ld a,l
  73+ 9DB8 E6 1F        	and $1f
  74+ 9DBA 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9DBB CD 01 9A     	call calcula_tercio
  76+ 9DBE 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9DBF 1E 00        	ld e,0
  78+ 9DC1 7D           	ld a,l
  79+ 9DC2 E6 E0        	and $e0
  80+ 9DC4 28 01        	jr z,1F
  81+ 9DC6 04           	inc b
  82+ 9DC7 1C           1 inc e
  83+ 9DC8 D6 20        	sub 32
  84+ 9DCA 20 FB        	jr nz,1B
  85+ 9DCC 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DCE C9           	ret
  87+ 9DCF
# file closed: Genera_coordenadas.asm
1513  9DCF              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9DCF              ; Relojes y temporizaciones.
   2+ 9DCF
   3+ 9DCF              ; ------------------------------------------------------
   4+ 9DCF              ;
   5+ 9DCF              ;	16/7/23
   6+ 9DCF              ;
   7+ 9DCF              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9DCF              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9DCF              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9DCF              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9DCF              ;
  12+ 9DCF              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9DCF              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9DCF
  15+ 9DCF              ; Disparo_entidad db 1
  16+ 9DCF              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9DCF              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9DCF
  19+ 9DCF              Habilita_disparos
  20+ 9DCF
  21+ 9DCF 7E           	ld a,(hl)
  22+ 9DD0 A7           	and a
  23+ 9DD1 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9DD2
  25+ 9DD2 EB           	ex de,hl
  26+ 9DD3
  27+ 9DD3 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9DD4 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9DD5
  30+ 9DD5              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9DD5
  32+ 9DD5 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9DD6 7E           	ld a,(hl)
  34+ 9DD7 23           	inc hl
  35+ 9DD8 77           	ld (hl),a
  36+ 9DD9
  37+ 9DD9 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9DDA 3E 01        	ld a,1
  39+ 9DDC 77           	ld (hl),a
  40+ 9DDD C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1514  9DDE              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DDE
   2+ 9DDE
   3+ 9DDE              ;   07/07/23
   4+ 9DDE              ;
   5+ 9DDE              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DDE              ;
   7+ 9DDE              ;   Codificación:
   8+ 9DDE              ;
   9+ 9DDE              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DDE              ;
  11+ 9DDE              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DDE              ;
  13+ 9DDE              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DDE              ;
  15+ 9DDE              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DDE              ;
  17+ 9DDE              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DDE              ;                               ..... %01000010 Vel_up 4
  19+ 9DDE              ;                                               Vel_down 2
  20+ 9DDE              ;                               ..... $42
  21+ 9DDE              ;
  22+ 9DDE              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DDE              ;
  24+ 9DDE              ;                               ..... %01000010 Vel_left 4
  25+ 9DDE              ;                                               Vel_right 2
  26+ 9DDE              ;                               ..... $42
  27+ 9DDE              ;
  28+ 9DDE              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DDE              ;
  30+ 9DDE              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DDE              ;
  32+ 9DDE              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DDE              ;
  34+ 9DDE              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DDE              ;                                     $53
  36+ 9DDE              ;
  37+ 9DDE              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DDE              ;
  39+ 9DDE              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DDE              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DDE              ;
  42+ 9DDE              ;                       Arriba ..... $81
  43+ 9DDE              ;                       Arriba - izquierda ..... $a1
  44+ 9DDE              ;                       Arriba - derecha ..... $91
  45+ 9DDE              ;
  46+ 9DDE              ;                       Abajo ..... $41
  47+ 9DDE              ;                       Abajo - izquierda ..... $61
  48+ 9DDE              ;                       Abajo - derecha ..... $51
  49+ 9DDE              ;
  50+ 9DDE              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DDE              ;
  52+ 9DDE              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DDE              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DDE              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DDE              ;
  56+ 9DDE              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DDE              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DDE              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DDE              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DDE              ;
  61+ 9DDE              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DDE              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DDE              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DDE              ;
  65+ 9DDE              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DDE              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DDE              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DDE              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DDE
  70+ 9DDE              ; ----- ----- ----- ----- -----
  71+ 9DDE
  72+ 9DDE 0A 9E        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DE0 12 9E            defw F_1
  74+ 9DE2 1C 9E            defw F_2
  75+ 9DE4 26 9E            defw Codo_abajo_derecha
  76+ 9DE6 5A 9E            defw Derecha_y_subiendo
  77+ 9DE8 64 9E            defw Derecha_y_subiendo_1
  78+ 9DEA 6E 9E            defw F_3
  79+ 9DEC 78 9E            defw F_4
  80+ 9DEE 82 9E            defw Derecha_y_bajando
  81+ 9DF0 8C 9E            defw Derecha_y_bajando_1
  82+ 9DF2 96 9E            defw Derecha_y_bajando_2
  83+ 9DF4 A0 9E            defw Codo_derecha_abajo
  84+ 9DF6 D0 9E            defw Codo_abajo_izq.
  85+ 9DF8 04 9F            defw Izquierda_y_subiendo
  86+ 9DFA 0E 9F            defw Izquierda_y_subiendo_1
  87+ 9DFC 18 9F            defw F_5
  88+ 9DFE 22 9F            defw F_6
  89+ 9E00 2C 9F            defw Izquierda_y_bajando
  90+ 9E02 36 9F            defw Izquierda_y_bajando_1
  91+ 9E04 40 9F            defw Izquierda_y_bajando_2
  92+ 9E06 4A 9F            defw Codo_izquierda_abajo
  93+ 9E08 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9E0A
  95+ 9E0A 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9E0E 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9E12
  98+ 9E12 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9E16 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9E1A 08 00
 100+ 9E1C 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9E20 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9E24 0F FE
 102+ 9E26
 103+ 9E26 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9E2A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E2E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E32 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E36 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E3A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E3E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E42 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E46 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E4A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E4E 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E52 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E56 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E5A
 117+ 9E5A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E5E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E62 06 00
 119+ 9E64
 120+ 9E64 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E68 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E6C 02 00
 122+ 9E6E
 123+ 9E6E 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E72 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E76 04 00
 125+ 9E78 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E7C 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E80 08 00
 127+ 9E82
 128+ 9E82 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E86 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E8A 02 00
 130+ 9E8C
 131+ 9E8C 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E90 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E94 06 00
 133+ 9E96
 134+ 9E96 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E9A 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E9E 06 00
 136+ 9EA0
 137+ 9EA0              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9EA0
 139+ 9EA0 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9EA4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9EA8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9EAC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9EB0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9EB4 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9EB8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9EBC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9EC0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9EC4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9EC8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9ECC 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9ED0
 152+ 9ED0 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9ED4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9ED8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EDC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EE0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EE4 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EE8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EEC 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EF0 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EF4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EF8 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EFC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9F00 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9F04
 166+ 9F04 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9F08 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9F0C 06 00
 168+ 9F0E
 169+ 9F0E 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9F12 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9F16 02 00
 171+ 9F18
 172+ 9F18 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9F1C 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9F20 04 00
 174+ 9F22 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9F26 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9F2A 08 00
 176+ 9F2C
 177+ 9F2C 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F30 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F34 02 00
 179+ 9F36
 180+ 9F36 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F3A 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F3E 06 00
 182+ 9F40
 183+ 9F40 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F44 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F48 06 00
 185+ 9F4A
 186+ 9F4A 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F4E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F52 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F56 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F5A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F5E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F62 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F66 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F6A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F6E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F72 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F76 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F7A
 199+ 9F7A              ; ----- ----- ----- ----- -----
 200+ 9F7A              ;
 201+ 9F7A              ;   27/06/23
 202+ 9F7A
 203+ 9F7A              Movimiento
 204+ 9F7A
 205+ 9F7A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F7A
 207+ 9F7A              ;    ld hl,(Posicion_actual)
 208+ 9F7A
 209+ 9F7A 3A FC 89         ld a,(Ctrl_2)
 210+ 9F7D CB 57            bit 2,a
 211+ 9F7F 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F81
 213+ 9F81 2A EE 89         ld hl,(Puntero_mov)
 214+ 9F84 7E               ld a,(hl)
 215+ 9F85
 216+ 9F85              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F85
 218+ 9F85              Inicia_desplazamiento.
 219+ 9F85
 220+ 9F85              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F85
 222+ 9F85 CD 79 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F88
 224+ 9F88              ; Iniciamos (Repetimos_mov).
 225+ 9F88
 226+ 9F88 7E               ld a,(hl)
 227+ 9F89 E6 0F            and $0f
 228+ 9F8B 32 F4 89         ld (Repetimos_desplazamiento),a
 229+ 9F8E 32 F5 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F91
 231+ 9F91              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F91
 233+ 9F91 23               inc hl
 234+ 9F92 7E               ld a,(hl)
 235+ 9F93 32 F7 89         ld (Cola_de_desplazamiento),a
 236+ 9F96 2B               dec hl
 237+ 9F97
 238+ 9F97 21 FC 89         ld hl,Ctrl_2
 239+ 9F9A CB D6            set 2,(hl)
 240+ 9F9C
 241+ 9F9C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F9C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F9C
 244+ 9F9C              Desplazamiento_iniciado
 245+ 9F9C
 246+ 9F9C CD 4D A0         call Aplica_desplazamiento
 247+ 9F9F
 248+ 9F9F 3A FC 89         ld a,(Ctrl_2)
 249+ 9FA2 CB 67            bit 4,a
 250+ 9FA4 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9FA5
 252+ 9FA5 21 F4 89     3 ld hl,Repetimos_desplazamiento
 253+ 9FA8 35               dec (hl)
 254+ 9FA9 C0               ret nz
 255+ 9FAA
 256+ 9FAA              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9FAA              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9FAA              ; Analiza (Cola_de_desplazamiento).
 259+ 9FAA
 260+ 9FAA 3A F7 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9FAD A7               and a
 262+ 9FAE CC A2 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9FB1 28 30            jr z,Reinicia_el_movimiento
 264+ 9FB3
 265+ 9FB3 FE FF            cp $ff
 266+ 9FB5 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9FB7
 268+ 9FB7 FE FE            cp $fe
 269+ 9FB9 CC 26 A0         call z,Fijamos_bucle
 270+ 9FBC 28 25            jr z,Reinicia_el_movimiento
 271+ 9FBE
 272+ 9FBE FE FD            cp $fd
 273+ 9FC0 20 11            jr nz,1F
 274+ 9FC2
 275+ 9FC2              ; ---
 276+ 9FC2              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9FC2
 278+ 9FC2 3A FC 89         ld a,(Ctrl_2)
 279+ 9FC5 CB 5F            bit 3,a
 280+ 9FC7 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9FC9
 282+ 9FC9              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9FC9
 284+ 9FC9 21 FC 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9FCC CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9FCE
 287+ 9FCE CD 37 A0         call Inicia_Repetimos_movimiento
 288+ 9FD1 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9FD3              ; ---
 290+ 9FD3
 291+ 9FD3 FE 01        1 cp 1
 292+ 9FD5 CA 10 A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FD8
 294+ 9FD8 3D               dec a
 295+ 9FD9 32 F7 89         ld (Cola_de_desplazamiento),a
 296+ 9FDC
 297+ 9FDC 3A F5 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FDF 32 F4 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FE2              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FE2 C9               ret
 301+ 9FE3
 302+ 9FE3              Reinicia_el_movimiento
 303+ 9FE3
 304+ 9FE3 3A FC 89         ld a,(Ctrl_2)
 305+ 9FE6 CB 5F            bit 3,a
 306+ 9FE8 28 1B            jr z,2F
 307+ 9FEA
 308+ 9FEA              ; (Cola_de_desplazamiento)="254".
 309+ 9FEA
 310+ 9FEA 21 F6 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FED 35               dec (hl)
 312+ 9FEE 20 15            jr nz,2F
 313+ 9FF0
 314+ 9FF0              ; Fin de las repeticiones del último movimiento.
 315+ 9FF0
 316+ 9FF0 21 FC 89         ld hl,Ctrl_2
 317+ 9FF3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FF5
 319+ 9FF5 2A EE 89         ld hl,(Puntero_mov)
 320+ 9FF8 23               inc hl
 321+ 9FF9 23               inc hl
 322+ 9FFA 23               inc hl
 323+ 9FFB 22 EE 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FFE              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FFE 7E               ld a,(hl)
 326+ 9FFF 32 F7 89         ld (Cola_de_desplazamiento),a
 327+ A002
 328+ A002 C3 AA 9F         jp Cola
 329+ A005
 330+ A005
 331+ A005 CD 42 A0     2 call Inicia_Puntero_mov
 332+ A008
 333+ A008 21 FC 89         ld hl,Ctrl_2
 334+ A00B CB 96            res 2,(hl)
 335+ A00D
 336+ A00D C3 7A 9F         jp Movimiento
 337+ A010
 338+ A010              Siguiente_desplazamiento
 339+ A010
 340+ A010              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ A010              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ A010
 343+ A010 21 FC 89         ld hl,Ctrl_2
 344+ A013 CB 96            res 2,(hl)
 345+ A015
 346+ A015 2A EE 89         ld hl,(Puntero_mov)
 347+ A018 23               inc hl
 348+ A019 23               inc hl
 349+ A01A 22 EE 89         ld (Puntero_mov),hl
 350+ A01D
 351+ A01D 7E               ld a,(hl)
 352+ A01E A7               and a
 353+ A01F CC A2 A0         call z,Incrementa_Puntero_indice_mov
 354+ A022 CA E3 9F         jp z,Reinicia_el_movimiento
 355+ A025
 356+ A025 C9               ret
 357+ A026              ; Subrutinas -----------------------------------------
 358+ A026              ; ---------- --------- --------- ---------- ----------
 359+ A026              ;
 360+ A026              ;   24/07/23
 361+ A026              ;
 362+ A026              ;   Fijamos_bucle
 363+ A026              ;
 364+ A026              ;
 365+ A026
 366+ A026              Fijamos_bucle
 367+ A026
 368+ A026 3A F2 89         ld a,(Incrementa_puntero)
 369+ A029 3C               inc a
 370+ A02A 32 F3 89         ld (Incrementa_puntero_backup),a
 371+ A02D
 372+ A02D CD A2 A0         call Incrementa_Puntero_indice_mov
 373+ A030 2A EC 89         ld hl,(Puntero_indice_mov)
 374+ A033 22 F0 89         ld (Puntero_indice_mov_bucle),hl
 375+ A036 C9               ret
 376+ A037
 377+ A037              ; ---------- --------- --------- ---------- ----------
 378+ A037              ;
 379+ A037              ;   07/7/23
 380+ A037              ;
 381+ A037              ;   Inicia_Repetimos_movimiento
 382+ A037              ;
 383+ A037              ;
 384+ A037
 385+ A037              Inicia_Repetimos_movimiento
 386+ A037
 387+ A037              ; Iniciamos (Repetimos_movimiento).
 388+ A037
 389+ A037 DD 2A EE 89      ld ix,(Puntero_mov)
 390+ A03B DD 7E 02         ld a,(ix+2)
 391+ A03E 32 F6 89         ld (Repetimos_movimiento),a
 392+ A041
 393+ A041 C9               ret
 394+ A042
 395+ A042              ; ---------- --------- --------- ---------- ----------
 396+ A042              ;
 397+ A042              ;   26/6/23
 398+ A042              ;
 399+ A042              ;   Inicia_Puntero_mov
 400+ A042              ;
 401+ A042              ;
 402+ A042
 403+ A042 2A EC 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A045 5E               ld e,(hl)
 405+ A046 23               inc hl
 406+ A047 56               ld d,(hl)
 407+ A048 EB               ex de,hl
 408+ A049 22 EE 89         ld (Puntero_mov),hl
 409+ A04C C9               ret
 410+ A04D
 411+ A04D              ; ---------- --------- --------- ---------- ----------
 412+ A04D              ;
 413+ A04D              ;   27/06/23
 414+ A04D              ;
 415+ A04D              ;   Aplica_movimiento.
 416+ A04D
 417+ A04D              Aplica_desplazamiento
 418+ A04D
 419+ A04D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A04D
 421+ A04D 2A EE 89         ld hl, (Puntero_mov)
 422+ A050
 423+ A050 7E               ld a,(hl)
 424+ A051 E6 F0            and $f0
 425+ A053 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A054
 427+ A054 CB 7E            bit 7,(hl)
 428+ A056 28 03            jr z,1F
 429+ A058 CD 78 9A         call Mov_up
 430+ A05B 2A EE 89     1 ld hl, (Puntero_mov)
 431+ A05E CB 76            bit 6,(hl)
 432+ A060 28 03            jr z,2F
 433+ A062 CD 47 9A         call Mov_down
 434+ A065 2A EE 89     2 ld hl, (Puntero_mov)
 435+ A068 CB 6E            bit 5,(hl)
 436+ A06A 28 03            jr z,3F
 437+ A06C CD D9 9B         call Mov_left
 438+ A06F 2A EE 89     3 ld hl, (Puntero_mov)
 439+ A072 CB 66            bit 4,(hl)
 440+ A074 C8               ret z
 441+ A075 CD BB 9A         call Mov_right
 442+ A078 C9               ret
 443+ A079
 444+ A079              ; ---------- --------- --------- ---------- ----------
 445+ A079              ;
 446+ A079              ;   26/06/23
 447+ A079              ;
 448+ A079              ;   Ajusta_velocidad_desplazamiento.
 449+ A079
 450+ A079              Ajusta_velocidad_desplazamiento
 451+ A079
 452+ A079              ; 1er byte de la cadena de movimiento.
 453+ A079              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A079
 455+ A079 CD 97 A0         call Extrae_nibble_alto
 456+ A07C
 457+ A07C 32 D2 89         ld (Vel_up),a
 458+ A07F 79               ld a,c
 459+ A080 E6 0F            and $0f
 460+ A082 32 D3 89         ld (Vel_down),a
 461+ A085
 462+ A085              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A085              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A085
 465+ A085 23               inc hl
 466+ A086 CD 97 A0         call Extrae_nibble_alto
 467+ A089
 468+ A089 32 D0 89         ld (Vel_left),a
 469+ A08C 79               ld a,c
 470+ A08D E6 0F            and $0f
 471+ A08F 32 D1 89         ld (Vel_right),a
 472+ A092
 473+ A092              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A092
 475+ A092 23               inc hl
 476+ A093 22 EE 89         ld (Puntero_mov),hl
 477+ A096 C9               ret
 478+ A097
 479+ A097 06 04        Extrae_nibble_alto ld b,4
 480+ A099 7E               ld a,(hl)
 481+ A09A 4F               ld c,a
 482+ A09B E6 F0            and $f0
 483+ A09D CB 3F        1 srl a
 484+ A09F 10 FC            djnz 1B
 485+ A0A1 C9               ret
 486+ A0A2
 487+ A0A2              ; ---------- --------- --------- ---------- ----------
 488+ A0A2              ;
 489+ A0A2              ;   5/7/23
 490+ A0A2              ;
 491+ A0A2              ;   Incrementa_Puntero_indice_mov
 492+ A0A2
 493+ A0A2              Incrementa_Puntero_indice_mov
 494+ A0A2
 495+ A0A2 21 F2 89         ld hl,Incrementa_puntero
 496+ A0A5 34               inc (hl)
 497+ A0A6
 498+ A0A6 2A EC 89         ld hl,(Puntero_indice_mov)
 499+ A0A9 01 02 00         ld bc,2
 500+ A0AC A7               and a
 501+ A0AD 09               add hl,bc
 502+ A0AE 22 EC 89         ld (Puntero_indice_mov),hl
 503+ A0B1
 504+ A0B1 7E               ld a,(hl)
 505+ A0B2 A7               and a
 506+ A0B3
 507+ A0B3              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A0B3
 509+ A0B3              ;    jr z,$
 510+ A0B3
 511+ A0B3              ;! Reinicia el Patrón de movimiento.
 512+ A0B3
 513+ A0B3 CC B8 A0         call z,Inicializa_Puntero_indice_mov
 514+ A0B6
 515+ A0B6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A0B7
 517+ A0B7 C9               ret
 518+ A0B8
 519+ A0B8
 520+ A0B8              ; ---------- --------- --------- ---------- ----------
 521+ A0B8              ;
 522+ A0B8              ;   24/07/23
 523+ A0B8              ;
 524+ A0B8              ;   Inicializa_Puntero_indice_mov
 525+ A0B8
 526+ A0B8              Inicializa_Puntero_indice_mov
 527+ A0B8
 528+ A0B8              ; Existe etiqueta de bucle principal???
 529+ A0B8
 530+ A0B8 2A F0 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A0BB 24               inc h
 532+ A0BC 25               dec h
 533+ A0BD 28 05            jr z,2F
 534+ A0BF
 535+ A0BF 22 EC 89         ld (Puntero_indice_mov),hl
 536+ A0C2 18 14            jr 3F
 537+ A0C4
 538+ A0C4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A0C4
 540+ A0C4 3A F2 89     2 ld a,(Incrementa_puntero)
 541+ A0C7 47               ld b,a
 542+ A0C8
 543+ A0C8 2A EC 89         ld hl,(Puntero_indice_mov)
 544+ A0CB 2B           1 dec hl
 545+ A0CC 2B               dec hl
 546+ A0CD 10 FC            djnz 1B
 547+ A0CF 22 EC 89         ld (Puntero_indice_mov),hl
 548+ A0D2
 549+ A0D2 AF               xor a
 550+ A0D3 32 F2 89         ld (Incrementa_puntero),a
 551+ A0D6 18 06            jr 4F
 552+ A0D8
 553+ A0D8 3A F3 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0DB 32 F2 89         ld (Incrementa_puntero),a
 555+ A0DE C9           4 ret
 556+ A0DF
 557+ A0DF
 558+ A0DF
# file closed: Patrones_de_mov.asm
1515  A0DF              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0DF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0DF              ;
   3+ A0DF              ;	9/8/23
   4+ A0DF              ;
   5+ A0DF              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0DF
   7+ A0DF              ;	ADC HL,SP	LD (addr),SP
   8+ A0DF              ;	ADD HL,SP	LD SP,(addr)
   9+ A0DF              ;	ADD IX,SP	LD SP,nn
  10+ A0DF              ; 	ADD IY,SP	LD SP,HL
  11+ A0DF              ;				LD SP,IX
  12+ A0DF              ;	DEC SP		LD SP,IY
  13+ A0DF
  14+ A0DF              ;	EX (SP),HL
  15+ A0DF              ;	EX (SP),IX
  16+ A0DF              ;	EX (SP),IY
  17+ A0DF
  18+ A0DF              ;	INC SP
  19+ A0DF
  20+ A0DF                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 0F 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A FE 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 17 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 15 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 17 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 15 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 0F 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 31 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7900
  92+ 7900
  93+ 7900              Gestiona_albumes_de_fotos
  94+ 7900
  95+ 7900              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7900              ;   Vaciamos Album_de_fotos.
  97+ 7900
  98+ 7900              ;   Album_de_fotos. Contiene datos ???
  99+ 7900
 100+ 7900 21 01 70         ld hl,Album_de_fotos+1
 101+ 7903 7E               ld a,(hl)
 102+ 7904 A7               and a
 103+ 7905 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7907
 105+ 7907 2A 19 8A         ld hl,(End_Snapshot)
 106+ 790A 01 00 70         ld bc,Album_de_fotos
 107+ 790D 11 01 70         ld de,Album_de_fotos+1
 108+ 7910 AF               xor a
 109+ 7911 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 7912
 111+ 7912 CD A2 79         call Limpia_album
 112+ 7915
 113+ 7915 21 00 00         ld hl,0
 114+ 7918 22 19 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 791B
 116+ 791B              ; ----- ----- ----- -----
 117+ 791B
 118+ 791B              ;   Album_de_fotos_1. Contiene datos ???
 119+ 791B
 120+ 791B 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 791E 7E               ld a,(hl)
 122+ 791F A7               and a
 123+ 7920 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 7922              ;                               ; _ información del album2 al album1.
 125+ 7922
 126+ 7922              ; ----- ----- ----- -----
 127+ 7922              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 7922
 129+ 7922 2A 1D 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 7925 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7928 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 792B
 133+ 792B CD A2 79         call Limpia_album
 134+ 792E
 135+ 792E              ;   Calculamos (End_Snapshot)
 136+ 792E
 137+ 792E A7               and a
 138+ 792F ED 4A            adc hl,bc
 139+ 7931 22 19 8A         ld (End_Snapshot),hl
 140+ 7934
 141+ 7934              ;   Limpiamos Album_de_fotos_1.
 142+ 7934
 143+ 7934 2A 1D 8A         ld hl,(End_Snapshot_1)
 144+ 7937 01 84 70         ld bc,Album_de_fotos_1
 145+ 793A 11 85 70         ld de,Album_de_fotos_1+1
 146+ 793D AF               xor a
 147+ 793E 02               ld (bc),a
 148+ 793F
 149+ 793F CD A2 79         call Limpia_album
 150+ 7942
 151+ 7942 21 00 00         ld hl,0
 152+ 7945 22 1D 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7948
 154+ 7948              ; ----- ----- ----- -----
 155+ 7948
 156+ 7948              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7948
 158+ 7948 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 794B 7E               ld a,(hl)
 160+ 794C A7               and a
 161+ 794D 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 794F              ;                               ; _ información del album3 al album2.
 163+ 794F              ; ----- ----- ----- -----
 164+ 794F              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 794F
 166+ 794F 2A 21 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 7952 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 7955 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7958
 170+ 7958 CD A2 79         call Limpia_album
 171+ 795B
 172+ 795B              ;   Calculamos (End_Snapshot_1):
 173+ 795B
 174+ 795B A7               and a
 175+ 795C ED 4A            adc hl,bc
 176+ 795E 22 1D 8A         ld (End_Snapshot_1),hl
 177+ 7961
 178+ 7961              ;   Limpiamos Album_de_fotos_2.
 179+ 7961
 180+ 7961 2A 21 8A         ld hl,(End_Snapshot_2)
 181+ 7964 01 07 71         ld bc,Album_de_fotos_2
 182+ 7967 11 08 71         ld de,Album_de_fotos_2+1
 183+ 796A AF               xor a
 184+ 796B 02               ld (bc),a
 185+ 796C
 186+ 796C CD A2 79         call Limpia_album
 187+ 796F
 188+ 796F 21 00 00         ld hl,0
 189+ 7972 22 21 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 7975
 191+ 7975              ; ----- ----- ----- -----
 192+ 7975
 193+ 7975              ;   Album_de_fotos_3. Contiene datos ???
 194+ 7975
 195+ 7975 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7978 7E               ld a,(hl)
 197+ 7979 A7               and a
 198+ 797A C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 797B
 200+ 797B              ; ----- ----- ----- -----
 201+ 797B              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 797B
 203+ 797B 2A 25 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 797E 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 7981 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 7984
 207+ 7984 CD A2 79         call Limpia_album
 208+ 7987
 209+ 7987              ;   Calculamos (End_Snapshot_2):
 210+ 7987
 211+ 7987 A7               and a
 212+ 7988 ED 4A            adc hl,bc
 213+ 798A 22 21 8A         ld (End_Snapshot_2),hl
 214+ 798D
 215+ 798D              ;   Limpiamos Album_de_fotos_3.
 216+ 798D
 217+ 798D 2A 25 8A         ld hl,(End_Snapshot_3)
 218+ 7990 01 8A 71         ld bc,Album_de_fotos_3
 219+ 7993 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 7996 AF               xor a
 221+ 7997 02               ld (bc),a
 222+ 7998
 223+ 7998 CD A2 79         call Limpia_album
 224+ 799B
 225+ 799B 21 00 00         ld hl,0
 226+ 799E 22 25 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 79A1 C9               ret
 228+ 79A2
 229+ 79A2              ; ----------------------------------------------------
 230+ 79A2              ;
 231+ 79A2              ;   10/8/23
 232+ 79A2              ;
 233+ 79A2              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 79A2              ;
 235+ 79A2              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 79A2              ;           BC ..... Dirección de inicio del álbum.
 237+ 79A2              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 79A2
 239+ 79A2              ;    ld hl,(End_Snapshot)
 240+ 79A2              ;    ld bc,Album_de_fotos
 241+ 79A2              ;    ld de,Album_de_fotos+1
 242+ 79A2
 243+ 79A2              ;   MODIFICA: A,HL,BC y DE.
 244+ 79A2
 245+ 79A2              Limpia_album
 246+ 79A2 D5               push de            ; Guardo DESTINO.
 247+ 79A3 C5               push bc            ; Guardo ORIGEN.
 248+ 79A4 ED 42            sbc hl,bc
 249+ 79A6 4D               ld c,l
 250+ 79A7 44               ld b,h
 251+ 79A8 E1               pop hl
 252+ 79A9 C5               push bc
 253+ 79AA ED B0            ldir
 254+ 79AC C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 79AD E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 79AE C9               ret                         ; _ a otro).
 257+ 79AF              ;
 258+ 79AF
 259+ 79AF              ; -----------------------------------------------
 260+ 79AF
 261+ 79AF
 262+ 79AF
 263+ 79AF
 264+ 79AF
# file closed: Guarda_foto_registros.asm
1516  79AF
1517  79AF              	SAVESNA "Pruebas.sna", START
1518  79AF
1519  79AF
1520  79AF
1521  79AF
# file closed: Banco_de_pruebas.asm
