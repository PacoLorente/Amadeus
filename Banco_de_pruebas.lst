# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 51 8B  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD 7F 8E     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD 8F 8E     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 5B 8B     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B 51 8B  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC              ;! """"""""""""""""""""""""""""""""""""""""""""""""""
 172+ 88BC
 173+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 174+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 174+ 88C4 02 00
 175+ 88C6
 176+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 177+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 177+ 88CE 04 00
 178+ 88D0
 179+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 180+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 180+ 88D8 08 00
 181+ 88DA
 182+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 183+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 183+ 88E2 02 00
 184+ 88E4
 185+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 186+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 186+ 88EC 06 00
 187+ 88EE
 188+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 189+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 189+ 88F6 06 00
 190+ 88F8
 191+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 192+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 194+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 195+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 197+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 199+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 200+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 201+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 202+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
 211+ 8928
 212+ 8928
# file closed: Patrones_de_mov.asm
 107  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 39 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 04           Nivel_1 db 4									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8939
  19+ 8939 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 893E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8942 01 02
  22+ 8944 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8948 01 02
  23+ 894A
  24+ 894A              ;---------------------------------------------------------------------------------------------------------------
  25+ 894A              ;
  26+ 894A              ;   19/1/24
  27+ 894A              ;
  28+ 894A              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 894A              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 894A              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 894A              ;	_ de la 1ª entidad del Nivel.
  32+ 894A              ;
  33+ 894A              ;	MODIFICA: HL,DE y A.
  34+ 894A              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 894A
  36+ 894A              Inicializa_Nivel
  37+ 894A
  38+ 894A 2A 7A 8B     	ld hl,(Puntero_indice_NIVELES)
  39+ 894D CD 4B 8D     	call Extrae_address
  40+ 8950 7E           	ld a,(hl)
  41+ 8951 32 45 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 8954 23           	inc hl
  43+ 8955 CD 5F 89     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 8958 22 7C 8B     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 895B CD 68 89     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 895E C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 895F
  48+ 895F              ; ----------------------
  49+ 895F
  50+ 895F 11 24 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8962 01 04 00     	ld bc,4
  52+ 8965 ED B0        	ldir
  53+ 8967 C9           	ret
  54+ 8968
  55+ 8968 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 8969 CD 76 8A         call Calcula_salto_en_BC
  57+ 896C 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 896F A7               and a
  59+ 8970 ED 4A            adc hl,bc
  60+ 8972 CD 4B 8D         call Extrae_address
  61+ 8975 22 30 8B         ld (Puntero_indice_mov),hl
  62+ 8978 C9               ret
  63+ 8979
  64+ 8979              ;---------------------------------------------------------------------------------------------------------------
  65+ 8979              ;
  66+ 8979              ;   5/1/24
  67+ 8979              ;
  68+ 8979              ;	Destruye A,BC,HL,DE
  69+ 8979
  70+ 8979              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 8979              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 8979
  73+ 8979              Inicia_Entidades
  74+ 8979
  75+ 8979              ; Preparamos los punteros de las cajas de entidades:
  76+ 8979
  77+ 8979 CD B3 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 897C              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 897C CD DD 8A     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 897F
  81+ 897F 2A 7C 8B     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 8982
  83+ 8982 22 7C 8B     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 8985
  85+ 8985 CD 24 8A     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 8988
  87+ 8988 2A 7C 8B     	ld hl,(Datos_de_nivel)
  88+ 898B
  89+ 898B              ; En este punto:
  90+ 898B              ;
  91+ 898B              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 898B              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 898B
  94+ 898B C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 898C
  96+ 898C 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 898D CD 76 8A     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 8990
  99+ 8990 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 100+ 8993 CD 7E 8A     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 8996
 102+ 8996 CD 88 8A     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 8999
 104+ 8999              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 8999
 106+ 8999 CD 46 8A     	call Busca_mov_masticados_segun_tipo
 107+ 899C
 108+ 899C A7           	and a
 109+ 899D 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 899F
 111+ 899F              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 899F
 113+ 899F              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 899F              ;	_ de este tipo de entidad.
 115+ 899F
 116+ 899F CD 05 90     	call Situa_en_contador_general_de_mov_masticados
 117+ 89A2 CD 12 90     	call Transfiere_datos_de_contadores
 118+ 89A5
 119+ 89A5 18 06        	jr 4F
 120+ 89A7
 121+ 89A7 CD 0D 8C     3 call Construye_movimientos_masticados_entidad
 122+ 89AA
 123+ 89AA              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 124+ 89AA              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 125+ 89AA              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 126+ 89AA              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 127+ 89AA              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 128+ 89AA
 129+ 89AA CD 04 8A     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 130+ 89AD              ;																; _ Mov_masticados ya generados.
 131+ 89AD CD DF 89     4 call Guarda_foto_de_mov_masticado
 132+ 89B0
 133+ 89B0              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 134+ 89B0
 135+ 89B0 2A 17 8B     	ld hl,(Puntero_de_impresion)
 136+ 89B3 CD 93 9E     	call Genera_coordenadas
 137+ 89B6 CD AF 8A     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 138+ 89B9 CD E9 89     	call Limpiamos_bandeja_DRAW
 139+ 89BC CD B2 8D     	call Incrementa_punteros_de_cajas
 140+ 89BF
 141+ 89BF              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 142+ 89BF              ; _ entidad del Nivel.
 143+ 89BF
 144+ 89BF 3A 5C 8B     	ld a,(Ctrl_4)
 145+ 89C2 E6 F0        	and $f0
 146+ 89C4 32 5C 8B     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 147+ 89C7
 148+ 89C7              ; Siguiente entidad del Nivel.
 149+ 89C7
 150+ 89C7 2A 7C 8B     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 151+ 89CA 23           	inc hl 														; _ entidad del Nivel.
 152+ 89CB
 153+ 89CB C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 154+ 89CC
 155+ 89CC 10 B4        	djnz 2B
 156+ 89CE
 157+ 89CE C9           	ret
 158+ 89CF
 159+ 89CF              ; ---------------------------------------------------------------------
 160+ 89CF              ;
 161+ 89CF              ;	30/01/24
 162+ 89CF
 163+ 89CF
 164+ 89CF              Store_Restore_cajas
 165+ 89CF
 166+ 89CF              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 89CF
 168+ 89CF 2A 17 8B     	ld hl,(Puntero_de_impresion)
 169+ 89D2 CD 93 9E     	call Genera_coordenadas
 170+ 89D5 CD AF 8A     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 171+ 89D8 CD E9 89     	call Limpiamos_bandeja_DRAW
 172+ 89DB
 173+ 89DB              ; 	Entidad_sospechosa. 20/4/23
 174+ 89DB
 175+ 89DB              ;	ld a,(Impacto)
 176+ 89DB              ;	and a
 177+ 89DB              ;	jr z,1F
 178+ 89DB
 179+ 89DB              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 180+ 89DB              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 181+ 89DB              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 182+ 89DB              ;	adc hl,bc 											; _ "0" más adelante.
 183+ 89DB              ;	ld (Entidad_sospechosa_de_colision),hl
 184+ 89DB
 185+ 89DB
 186+ 89DB              ;1 ld hl,(Puntero_restore_caja)
 187+ 89DB              ;	ld a,(hl)
 188+ 89DB              ;	and a
 189+ 89DB              ;	push af
 190+ 89DB              ;	jr z,2F
 191+ 89DB
 192+ 89DB              ;	di
 193+ 89DB              ;	ld de,Bandeja_DRAW
 194+ 89DB              ;	ld bc,42
 195+ 89DB              ;	ldir
 196+ 89DB              ;	ei
 197+ 89DB
 198+ 89DB CD B2 8D     2 call Incrementa_punteros_de_cajas
 199+ 89DE C9           	ret
 200+ 89DF
 201+ 89DF
 202+ 89DF              ; ---------------------------------------------------------------------
 203+ 89DF              ;
 204+ 89DF              ;	29/01/24
 205+ 89DF
 206+ 89DF CD 62 8C     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 207+ 89E2 CD BF 80     	call Guarda_foto_registros
 208+ 89E5              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 209+ 89E5              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 210+ 89E5              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 211+ 89E5              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 212+ 89E5
 213+ 89E5 CD F4 89     	call Decrementa_Contador_de_mov_masticados
 214+ 89E8 C9           	ret
 215+ 89E9
 216+ 89E9              ; ---------------------------------------------------------------------
 217+ 89E9              ;
 218+ 89E9              ;	25/01/24
 219+ 89E9
 220+ 89E9 21 FA 8A     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 221+ 89EC 06 2A        	ld b,42
 222+ 89EE AF           	xor a
 223+ 89EF
 224+ 89EF 77           1 ld (hl),a
 225+ 89F0 23           	inc hl
 226+ 89F1 10 FC        	djnz 1B
 227+ 89F3
 228+ 89F3 C9           	ret
 229+ 89F4
 230+ 89F4              ; ---------------------------------------------------------------------
 231+ 89F4              ;
 232+ 89F4              ;	22/01/24
 233+ 89F4
 234+ 89F4 2A 1B 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 235+ 89F7 2B           	dec hl
 236+ 89F8
 237+ 89F8 24           	inc h
 238+ 89F9 25           	dec h
 239+ 89FA 20 04        	jr nz,1F
 240+ 89FC
 241+ 89FC 7D           	ld a,l
 242+ 89FD A7           	and a
 243+ 89FE 28 FE        	jr z,$
 244+ 8A00
 245+ 8A00 22 1B 8B     1 ld (Contador_de_mov_masticados),hl
 246+ 8A03 C9           	ret
 247+ 8A04
 248+ 8A04              ; ---------------------------------------------------------------------
 249+ 8A04              ;
 250+ 8A04              ;	22/01/24
 251+ 8A04
 252+ 8A04 21 5C 8B     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 253+ 8A07 CB 46        	bit 0,(hl)
 254+ 8A09 20 0D        	jr nz,1F
 255+ 8A0B CB 4E        	bit 1,(hl)
 256+ 8A0D 20 0C        	jr nz,2F
 257+ 8A0F CB 56        	bit 2,(hl)
 258+ 8A11 20 0B        	jr nz,3F
 259+ 8A13 CB 5E        	bit 3,(hl)
 260+ 8A15 20 0A        	jr nz,4F
 261+ 8A17 C9           	ret
 262+ 8A18
 263+ 8A18 CB E6        1 set 4,(hl)
 264+ 8A1A C9           	ret
 265+ 8A1B CB EE        2 set 5,(hl)
 266+ 8A1D C9           	ret
 267+ 8A1E CB F6        3 set 6,(hl)
 268+ 8A20 C9           	ret
 269+ 8A21 CB FE        4 set 7,(hl)
 270+ 8A23 C9           	ret
 271+ 8A24
 272+ 8A24              ; ---------------------------------------------------------------------
 273+ 8A24              ;
 274+ 8A24              ;	23/01/24
 275+ 8A24              ;
 276+ 8A24              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 277+ 8A24              ;
 278+ 8A24              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 279+ 8A24              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 280+ 8A24              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 281+ 8A24              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 282+ 8A24
 283+ 8A24              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 284+ 8A24
 285+ 8A24 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 286+ 8A25 3D           	dec a
 287+ 8A26 20 06        	jr nz,1F
 288+ 8A28
 289+ 8A28              ; --- Tipo_1
 290+ 8A28
 291+ 8A28 21 5C 8B     	ld hl,Ctrl_4
 292+ 8A2B CB C6        	set 0,(hl)
 293+ 8A2D C9           	ret
 294+ 8A2E
 295+ 8A2E 3D           1 dec a
 296+ 8A2F 20 06        	jr nz,2F
 297+ 8A31
 298+ 8A31              ; --- Tipo_2
 299+ 8A31
 300+ 8A31 21 5C 8B     	ld hl,Ctrl_4
 301+ 8A34 CB CE        	set 1,(hl)
 302+ 8A36 C9           	ret
 303+ 8A37
 304+ 8A37 3D           2 dec a
 305+ 8A38 20 06        	jr nz,3F
 306+ 8A3A
 307+ 8A3A              ; --- Tipo_3
 308+ 8A3A
 309+ 8A3A 21 5C 8B     	ld hl,Ctrl_4
 310+ 8A3D CB D6        	set 2,(hl)
 311+ 8A3F C9           	ret
 312+ 8A40
 313+ 8A40              ; --- Tipo_3
 314+ 8A40
 315+ 8A40 21 5C 8B     3 ld hl,Ctrl_4
 316+ 8A43 CB D6        	set 2,(hl)
 317+ 8A45 C9           	ret
 318+ 8A46
 319+ 8A46              ; ---------------------------------------------------------------------
 320+ 8A46              ;
 321+ 8A46              ;	22/01/24
 322+ 8A46
 323+ 8A46 21 5C 8B     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 324+ 8A49 CB 46        	bit 0,(hl)
 325+ 8A4B 20 0E        	jr nz,1F
 326+ 8A4D
 327+ 8A4D CB 4E        	bit 1,(hl)
 328+ 8A4F 20 10        	jr nz,2F
 329+ 8A51
 330+ 8A51 CB 56        	bit 2,(hl)
 331+ 8A53 20 12        	jr nz,3F
 332+ 8A55
 333+ 8A55 CB 5E        	bit 3,(hl)
 334+ 8A57 20 14        	jr nz,4F
 335+ 8A59 18 19        	jr 6F
 336+ 8A5B
 337+ 8A5B              ; Entidad_de_Tipo_1.
 338+ 8A5B
 339+ 8A5B CB 66        1 bit 4,(hl)
 340+ 8A5D 28 15        	jr z,6F
 341+ 8A5F 18 10        	jr 5F
 342+ 8A61
 343+ 8A61              ; Entidad_de_Tipo_2.
 344+ 8A61
 345+ 8A61 CB 6E        2 bit 5,(hl)
 346+ 8A63 28 0F        	jr z,6F
 347+ 8A65 18 0A        	jr 5F
 348+ 8A67
 349+ 8A67              ; Entidad_de_Tipo_3.
 350+ 8A67
 351+ 8A67 CB 76        3 bit 6,(hl)
 352+ 8A69 28 09        	jr z,6F
 353+ 8A6B 18 04        	jr 5F
 354+ 8A6D
 355+ 8A6D              ; Entidad_de_Tipo_4.
 356+ 8A6D
 357+ 8A6D CB 7E        4 bit 7,(hl)
 358+ 8A6F 28 03        	jr z,6F
 359+ 8A71
 360+ 8A71              ; Esta entidad TIENE MOV_MASTICADOS.
 361+ 8A71
 362+ 8A71 AF           5 xor a
 363+ 8A72 3C           	inc a
 364+ 8A73 C9           	ret
 365+ 8A74
 366+ 8A74              ; Esta entidad NO TIENE MOV_MASTICADOS.
 367+ 8A74
 368+ 8A74 AF           6 xor a
 369+ 8A75 C9           	ret
 370+ 8A76
 371+ 8A76              ;	------------------------------------------------------------------------------------
 372+ 8A76              ;
 373+ 8A76              ;	12/01/24
 374+ 8A76              ;
 375+ 8A76              ;	INPUTS:	A contiene el (Tipo) de entidad.
 376+ 8A76              ;
 377+ 8A76              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 378+ 8A76              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 379+ 8A76
 380+ 8A76 CB 27        Calcula_salto_en_BC sla a
 381+ 8A78 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 382+ 8A7A 4F           	ld c,a
 383+ 8A7B 06 00        	ld b,0
 384+ 8A7D C9           	ret
 385+ 8A7E
 386+ 8A7E              ; ------------------------------------------------------------------
 387+ 8A7E              ;
 388+ 8A7E              ;	19/1/24
 389+ 8A7E              ;
 390+ 8A7E              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 391+ 8A7E              ;	Actualiza (Datos_de_entidad) con esa dirección.
 392+ 8A7E
 393+ 8A7E A7           Situa_en_datos_de_definicion and a
 394+ 8A7F ED 4A        	adc hl,bc
 395+ 8A81 CD 4B 8D     	call Extrae_address
 396+ 8A84 22 4B 8B         ld (Datos_de_entidad),hl
 397+ 8A87 C9           	ret
 398+ 8A88
 399+ 8A88              ; ------------------------------------------------------------------
 400+ 8A88
 401+ 8A88              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 402+ 8A88              ; 	inc de
 403+ 8A88              ; 	inc de
 404+ 8A88              ; 	ex de,hl
 405+ 8A88              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 406+ 8A88              ; 	ret
 407+ 8A88
 408+ 8A88              ; ----------------------------------------------------------------------------------------------------------
 409+ 8A88              ;
 410+ 8A88              ;	31/1/24
 411+ 8A88              ;
 412+ 8A88              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 413+ 8A88              ;	_ de entidad.
 414+ 8A88              ;
 415+ 8A88              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 416+ 8A88              ;
 417+ 8A88              ;
 418+ 8A88              ;	MODIFICA: HL,DE y BC
 419+ 8A88
 420+ 8A88
 421+ 8A88              Definicion_de_entidad_a_bandeja_DRAW
 422+ 8A88
 423+ 8A88 11 FA 8A     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 424+ 8A8B 01 03 00     	ld bc,3
 425+ 8A8E ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 426+ 8A90              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 427+ 8A90 11 04 8B     	ld de,Attr									; DE en (Attr).
 428+ 8A93 01 05 00     	ld bc,5
 429+ 8A96 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 430+ 8A98              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 431+ 8A98 11 0D 8B     	ld de,Posicion_inicio
 432+ 8A9B 01 03 00     	ld bc,3
 433+ 8A9E ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 434+ 8AA0              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 435+ 8AA0 11 19 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 436+ 8AA3 01 02 00     	ld bc,2
 437+ 8AA6 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 438+ 8AA8
 439+ 8AA8 11 23 8B     	ld de,Frames_explosion
 440+ 8AAB 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 441+ 8AAD 12           	ld (de),a 									; Vuelco (Frames_explosion).
 442+ 8AAE
 443+ 8AAE C9           	ret
 444+ 8AAF
 445+ 8AAF              ; ----------------------------------------------------------------------------------------------------------
 446+ 8AAF              ;
 447+ 8AAF              ;	22/01/24
 448+ 8AAF              ;
 449+ 8AAF              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 450+ 8AAF              ;
 451+ 8AAF              ;	Las cajas contienen entidades iniciadas:
 452+ 8AAF              ;
 453+ 8AAF              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 454+ 8AAF              ;
 455+ 8AAF              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 456+ 8AAF              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 457+ 8AAF              ;
 458+ 8AAF              ;	MODIFICA: HL,DE y BC
 459+ 8AAF
 460+ 8AAF 21 FA 8A     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 461+ 8AB2 ED 5B 3F 8B  	ld de,(Puntero_store_caja)
 462+ 8AB6 7E           	ld a,(hl)
 463+ 8AB7 12           	ld (de),a
 464+ 8AB8 13           	inc de 													; (Tipo).
 465+ 8AB9
 466+ 8AB9 21 01 8B     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 467+ 8ABC 01 02 00     	ld bc,2
 468+ 8ABF ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 469+ 8AC1              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 470+ 8AC1 23           	inc hl
 471+ 8AC2 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 472+ 8AC3 12           	ld (de),a
 473+ 8AC4 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 474+ 8AC5
 475+ 8AC5 21 10 8B     	ld hl,Impacto
 476+ 8AC8 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 477+ 8AC9 12           	ld (de),a
 478+ 8ACA 13           	inc de 													; (Impacto), volcado a la caja.
 479+ 8ACB              ;															; DE situado ahora en (Variables_de_borrado).
 480+ 8ACB 23           	inc hl
 481+ 8ACC 01 06 00     	ld bc,6
 482+ 8ACF ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 483+ 8AD1              ; 															; DE situado ahora en (Puntero_de_impresión).
 484+ 8AD1 01 07 00     	ld bc,7
 485+ 8AD4 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 486+ 8AD6              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 487+ 8AD6              ;															; HL apunta ahora a (Columnas).
 488+ 8AD6 21 22 8B     	ld hl,Ctrl_2
 489+ 8AD9 7E           	ld a,(hl)
 490+ 8ADA 12           	ld (de),a 												; Volcamos (Ctrl_2).
 491+ 8ADB 13           	inc de
 492+ 8ADC
 493+ 8ADC C9           	ret
 494+ 8ADD
 495+ 8ADD              ;---------------------------------------------------------------------------------------------------------------
 496+ 8ADD              ;
 497+ 8ADD              ;	5/1/24
 498+ 8ADD              ;
 499+ 8ADD              ;	INICIALIZA (Numero_parcial_de_entidades).
 500+ 8ADD              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 501+ 8ADD              ;
 502+ 8ADD              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 503+ 8ADD              ;
 504+ 8ADD              ;	(Numero_parcial_de_entidades)="7".
 505+ 8ADD              ;
 506+ 8ADD              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 507+ 8ADD              ;
 508+ 8ADD              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 509+ 8ADD              ;
 510+ 8ADD              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 511+ 8ADD              ;	MODIFICA: A y B.
 512+ 8ADD              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 513+ 8ADD
 514+ 8ADD              Inicializa_Numero_parcial_de_entidades
 515+ 8ADD
 516+ 8ADD              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 517+ 8ADD
 518+ 8ADD 3A 45 8B     	ld a,(Numero_de_entidades)
 519+ 8AE0 A7           	and a
 520+ 8AE1
 521+ 8AE1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 522+ 8AE1              ;	jr z,$
 523+ 8AE1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 524+ 8AE1
 525+ 8AE1 20 03        	jr nz,3F
 526+ 8AE3
 527+ 8AE3              ; ---------- ---------- ----------
 528+ 8AE3
 529+ 8AE3              ;! RESET para pruebas. Omitir esta línea en modo normal.
 530+ 8AE3              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 531+ 8AE3
 532+ 8AE3 CD 4A 89     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 533+ 8AE6
 534+ 8AE6              ; ---------- ---------- ----------
 535+ 8AE6
 536+ 8AE6 3A 45 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 537+ 8AE9 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 538+ 8AEB 38 08        	jr c,1F
 539+ 8AED
 540+ 8AED              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 541+ 8AED              ; Actualizamos variables.
 542+ 8AED
 543+ 8AED 3E 07        	ld a,7
 544+ 8AEF 32 46 8B     	ld (Numero_parcial_de_entidades),a
 545+ 8AF2 47           	ld b,a
 546+ 8AF3 18 04        	jr 2F
 547+ 8AF5
 548+ 8AF5              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 549+ 8AF5              ; (Numero_de_entidades)="0".
 550+ 8AF5
 551+ 8AF5 32 46 8B     1 ld (Numero_parcial_de_entidades),a
 552+ 8AF8 47           	ld b,a
 553+ 8AF9 C9           2 ret
# file closed: Niveles.asm
 108  8AFA
 109  8AFA              ; ******************************************************************************************************************************************************************************************
 110  8AFA              ; Constantes.
 111  8AFA              ; ******************************************************************************************************************************************************************************************
 112  8AFA              ;
 113  8AFA              ; 25/12/23
 114  8AFA
 115  8AFA              ;
 116  8AFA              ; Constantes.
 117  8AFA              ;
 118  8AFA
 119  8AFA              Sprite_vacio equ $eae0
 120  8AFA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  8AFA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  8AFA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  8AFA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  8AFA
 125  8AFA              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 126  8AFA              ;														;
 127  8AFA              Almacen_de_movimientos_masticados_Amadeus equ $e700
 128  8AFA
 129  8AFA              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 130  8AFA              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 131  8AFA              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 132  8AFA              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 133  8AFA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 134  8AFA              ;														; 55 Bytes.
 135  8AFA
 136  8AFA              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 137  8AFA              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 138  8AFA
 139  8AFA              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 140  8AFA
 141  8AFA              ; ******************************************************************************************************************************************************************************************
 142  8AFA              ; Variables.
 143  8AFA              ; ******************************************************************************************************************************************************************************************
 144  8AFA              ;
 145  8AFA              ; 18/01/24
 146  8AFA              ;
 147  8AFA              ; Variables de DRAW. (Motor principal).	42 Bytes.
 148  8AFA              ;
 149  8AFA
 150  8AFA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 151  8AFA
 152  8AFA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 153  8AFB              ;															- Patrón de movimiento.
 154  8AFB              ;															- Aspecto
 155  8AFB 00           Filas db 0												; Filas. [DRAW]
 156  8AFC 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 157  8AFD 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 158  8AFF 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 159  8B01 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 160  8B02 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 161  8B03
 162  8B03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 163  8B03
 164  8B03 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 165  8B04              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 166  8B04              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 167  8B04 00           Attr db 0												; Atributos de la entidad:
 168  8B05
 169  8B05              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 170  8B05              ;
 171  8B05              ;	COLORES: 0 ..... NEGRO
 172  8B05              ;    		 1 ..... AZUL
 173  8B05              ; 			 2 ..... ROJO
 174  8B05              ;			 3 ..... MAGENTA
 175  8B05              ; 			 4 ..... VERDE
 176  8B05              ; 			 5 ..... CIAN
 177  8B05              ;			 6 ..... AMARILLO
 178  8B05              ; 			 7 ..... BLANCO
 179  8B05
 180  8B05 00 00        Indice_Sprite_der defw 0
 181  8B07 00 00        Indice_Sprite_izq defw 0
 182  8B09 00 00        Puntero_DESPLZ_der defw 0
 183  8B0B 00 00        Puntero_DESPLZ_izq defw 0
 184  8B0D
 185  8B0D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 186  8B0F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 187  8B10
 188  8B10              ; Variables de objeto. (Características).
 189  8B10
 190  8B10 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 191  8B11              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 192  8B11              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 193  8B11 00 00 00...  Variables_de_borrado ds 6
 194  8B17
 195  8B17 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 196  8B19              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 197  8B19
 198  8B19 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 199  8B1B
 200  8B1B              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 201  8B1B              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 202  8B1B
 203  8B1B 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 204  8B1D              ;														; _palabras que componen el "movimiento_masticado".
 205  8B1D
 206  8B1D              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 207  8B1D
 208  8B1D 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 209  8B1E              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 210  8B1E              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 211  8B1E              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 212  8B1E              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 213  8B1E              ;
 214  8B1E              ; 														DESCRIPCIÖN:
 215  8B1E              ;
 216  8B1E              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 217  8B1E              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 218  8B1E              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 219  8B1E              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 220  8B1E              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 221  8B1E              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 222  8B1E              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 223  8B1E              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 224  8B1E              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 225  8B1E              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 226  8B1E              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 227  8B1E              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 228  8B1E              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 229  8B1E              ;
 230  8B1E              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 231  8B1E              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 232  8B1E              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 233  8B1E
 234  8B1E              ; Variables de funcionamiento. [DRAW].
 235  8B1E
 236  8B1E 00           Columnas db 0
 237  8B1F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 238  8B21              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8B21 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 240  8B22
 241  8B22              ; variables de control general.
 242  8B22
 243  8B22 00           Ctrl_2 db 0
 244  8B23              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 245  8B23              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 246  8B23              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 247  8B23              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 248  8B23              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 249  8B23              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 250  8B23              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 251  8B23              ;
 252  8B23              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 253  8B23              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 254  8B23              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 255  8B23              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 256  8B23              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 257  8B23              ;														BIT 4, ???
 258  8B23              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 259  8B23
 260  8B23 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 261  8B24
 262  8B24              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 263  8B24
 264  8B24              ;					         		---------;      ;---------
 265  8B24
 266  8B24              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 267  8B24
 268  8B24              Perfiles_de_velocidad
 269  8B24
 270  8B24 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 271  8B25 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 272  8B26 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 273  8B27 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 274  8B28
 275  8B28              ; Contadores de 16 bits.
 276  8B28
 277  8B28 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 278  8B2A 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 279  8B2C 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 280  8B2E 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 281  8B30
 282  8B30              ; Movimiento. ------------------------------------------------------------------------------------------------------
 283  8B30
 284  8B30 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 285  8B32 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 286  8B34 00 00        Puntero_indice_mov_bucle defw 0							;
 287  8B36              ;
 288  8B36              ;
 289  8B36 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 290  8B37              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 291  8B37              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 292  8B37 00           Incrementa_puntero_backup db 0
 293  8B38 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 294  8B39              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 295  8B39 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 296  8B3A 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 297  8B3B 00           Cola_de_desplazamiento db 0								; Este byte indica:
 298  8B3C              ;
 299  8B3C              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 300  8B3C              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 301  8B3C              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 302  8B3C              ;
 303  8B3C              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 304  8B3C              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 305  8B3C              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 306  8B3C              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 307  8B3C              ;
 308  8B3C              ;														;	"$ff" ..... Bucle infinito de repetición.
 309  8B3C              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 310  8B3C              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 311  8B3C              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 312  8B3C
 313  8B3C 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 314  8B3D
 315  8B3D              ;														DESCRIPCIÓN:
 316  8B3D              ;
 317  8B3D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 318  8B3D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 319  8B3D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 320  8B3D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 321  8B3D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 322  8B3D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 323  8B3D
 324  8B3D              ;														BIT 3, Recarga de nueva oleada.
 325  8B3D              ;														BIT 4, Recarga de nueva oleada.
 326  8B3D              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 327  8B3D              ;														BIT 6, **** Frame completo.
 328  8B3D              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 329  8B3D
 330  8B3D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 331  8B3F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 332  8B3F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 333  8B3F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 334  8B3F
 335  8B3F              ; Gestión de ENTIDADES y CAJAS.
 336  8B3F
 337  8B3F 00 00        Puntero_store_caja defw 0
 338  8B41 00 00        Puntero_restore_caja defw 0
 339  8B43 00 00        Indice_restore_caja defw 0
 340  8B45 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 341  8B46 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 342  8B47 00           Entidades_en_curso db 0									; ..... ..... .....
 343  8B48 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 344  8B49              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 345  8B49              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 346  8B49              ;														; _ (Numero_de_malotes)="0".
 347  8B49 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 348  8B4B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 349  8B4D              ;														; _ puntero (Indice_entidades).
 350  8B4D
 351  8B4D              ;---------------------------------------------------------------------------------------------------------------
 352  8B4D              ;
 353  8B4D              ;	11/01/24
 354  8B4D              ;
 355  8B4D              ;	Álbumes.
 356  8B4D
 357  8B4D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 358  8B4F              ;														; _variable para almacenar lo posición del puntero_
 359  8B4F              ; 														; _de pila, SP.
 360  8B4F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 361  8B51              ;														; La utiliza la rutina [Extrae_foto_registros].
 362  8B51 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 363  8B53 00 80        Stack_snapshot defw Album_de_fotos
 364  8B55 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 365  8B57
 366  8B57              ;End_Snapshot defw Album_de_fotos
 367  8B57              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 368  8B57 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 369  8B59              ;														; _el snapshot de los registros del siguiente disparo.
 370  8B59              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 371  8B59 AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 372  8B5B
 373  8B5B 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 374  8B5C              ;
 375  8B5C              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 376  8B5C              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 377  8B5C              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 378  8B5C
 379  8B5C 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 380  8B5D              ;
 381  8B5D              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 382  8B5D              ;
 383  8B5D              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 384  8B5D              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 385  8B5D              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 386  8B5D              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 387  8B5D              ;
 388  8B5D              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 389  8B5D              ;															_ masticados ya generados.
 390  8B5D              ;
 391  8B5D              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 392  8B5D              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 393  8B5D              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 394  8B5D              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 395  8B5D
 396  8B5D
 397  8B5D              ; Gestión de Disparos.
 398  8B5D
 399  8B5D 00           Numero_de_disparotes db 0
 400  8B5E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 401  8B60 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 402  8B62 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 403  8B63              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 404  8B63              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 405  8B63 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 406  8B65              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 407  8B65              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 408  8B65              ;														; _produzca colisión.
 409  8B65 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 410  8B67              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 411  8B67 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 412  8B6A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 413  8B6A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 414  8B6D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 415  8B6D 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 416  8B6E
 417  8B6E              ;---------------------------------------------------------------------------------------------------------------
 418  8B6E
 419  8B6E              ; Relojes y temporizaciones.
 420  8B6E
 421  8B6E 00           Contador_de_frames db 0
 422  8B6F 00           Contador_de_frames_2 db 0
 423  8B70
 424  8B70 04           Clock_explosion db 4
 425  8B71 14           Clock_Entidades_en_curso db 20
 426  8B72 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 427  8B73              ;														; Repite la oleada de entidades.
 428  8B73 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 429  8B74 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 430  8B75 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 431  8B76
 432  8B76 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 433  8B77 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 434  8B78 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 435  8B79
 436  8B79              ;---------------------------------------------------------------------------------------------------------------
 437  8B79
 438  8B79              ; Gestión de NIVELES.
 439  8B79
 440  8B79 00           Nivel db 0												; Nivel actual del juego.
 441  8B7A 00 00        Puntero_indice_NIVELES defw 0
 442  8B7C 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 443  8B7E              ; 														; _ que definen el NIVEL.
 444  8B7E              ; Y todo comienza aquí .....
 445  8B7E              ;
 446  8B7E              ; 	INICIO  *************************************************************************************************************************************************************************
 447  8B7E              ;
 448  8B7E              ;	5/1/24
 449  8B7E
 450  8B7E              START
 451  8B7E
 452  8B7E 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 453  8B81 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 454  8B83 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 455  8B85 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 456  8B87 F3           	DI
 457  8B88
 458  8B88 3E 07        	ld a,%00000111
 459  8B8A CD 05 9B     	call Cls
 460  8B8D CD F0 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 461  8B90
 462  8B90              ; INICIALIZACIÓN.
 463  8B90
 464  8B90              ;	Inicializa 1er Nivel.
 465  8B90
 466  8B90 21 28 89     	ld hl,Indice_de_niveles
 467  8B93 22 7A 8B     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 468  8B96 CD 4A 89     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 469  8B99
 470  8B99              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 471  8B99              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 472  8B99              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 473  8B99
 474  8B99              ;	Provisional, (para desarrollo).
 475  8B99
 476  8B99              	;-
 477  8B99              ;	ld hl,Numero_parcial_de_entidades
 478  8B99              ;	ld b,(hl)
 479  8B99              ;	inc b
 480  8B99              ;	dec b
 481  8B99              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 482  8B99
 483  8B99 CD 79 89     4 call Inicia_Entidades
 484  8B9C
 485  8B9C CD B3 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 486  8B9F
 487  8B9F              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 488  8B9F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 489  8B9F              ; (Esto se dá cuando se inicia una nueva oleada).
 490  8B9F
 491  8B9F              ;	ld a,(Ctrl_1)
 492  8B9F              ;	bit 3,a
 493  8B9F              ;	jr nz,5F											; Loop
 494  8B9F
 495  8B9F              ; 	INICIA AMADEUS !!!!!
 496  8B9F
 497  8B9F              ;3 call Restore_Amadeus
 498  8B9F              ;	call Inicia_Puntero_objeto
 499  8B9F              ;	call Draw
 500  8B9F
 501  8B9F              ;	call Guarda_movimiento_masticado	;! Provisional
 502  8B9F
 503  8B9F              ;	call Guarda_foto_registros
 504  8B9F              ;	call Guarda_datos_de_borrado_Amadeus
 505  8B9F
 506  8B9F              ;	ld de,Amadeus_db
 507  8B9F              ;	call Store_Amadeus
 508  8B9F
 509  8B9F              ; 	INICIA DISPAROS !!!!!
 510  8B9F
 511  8B9F              ;	call Inicia_Puntero_Disparo_Entidades
 512  8B9F              ;	call Inicia_Puntero_Disparo_Amadeus
 513  8B9F
 514  8B9F              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 515  8B9F
 516  8B9F              ;5 call Inicia_punteros_de_cajas
 517  8B9F              ;	call Restore_entidad
 518  8B9F
 519  8B9F              ;	ld a,(Ctrl_1)
 520  8B9F              ;	bit 3,a
 521  8B9F              ;	jr z,6F
 522  8B9F
 523  8B9F              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 524  8B9F
 525  8B9F              ;	ld hl,Ctrl_1
 526  8B9F              ;	res 3,(hl)
 527  8B9F              ;	jr Main
 528  8B9F
 529  8B9F              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 530  8B9F
 531  8B9F 21 5B 8B     6 ld hl,Ctrl_3
 532  8BA2 CB C6        	set 0,(hl)											; Frame completo.
 533  8BA4 FB           	ei
 534  8BA5 76           	halt
 535  8BA6
 536  8BA6              ; ------------------------------------
 537  8BA6
 538  8BA6              Main
 539  8BA6              ;
 540  8BA6              ;	11/12/23
 541  8BA6
 542  8BA6              ; Aparece nueva entidad ???
 543  8BA6
 544  8BA6              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 545  8BA6              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 546  8BA6              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 547  8BA6              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 548  8BA6              ;														; _un 2º bloque.
 549  8BA6
 550  8BA6              ;	ld a,1
 551  8BA6              ;	out ($fe),a
 552  8BA6
 553  8BA6 3A 71 8B     	ld a,(Clock_Entidades_en_curso)
 554  8BA9 47           	ld b,a
 555  8BAA 3A 6E 8B     	ld a,(Contador_de_frames)
 556  8BAD B8           	cp b
 557  8BAE 20 18        	jr nz,13F
 558  8BB0
 559  8BB0              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 560  8BB0              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 561  8BB0
 562  8BB0 3A 46 8B     21 ld a,(Numero_parcial_de_entidades)
 563  8BB3 47           	ld b,a
 564  8BB4 3A 47 8B     	ld a,(Entidades_en_curso)
 565  8BB7 B8           	cp b
 566  8BB8 28 0E        	jr z,13F
 567  8BBA 30 0C        	jr nc,13F
 568  8BBC
 569  8BBC 3C           	inc a
 570  8BBD 32 47 8B     	ld (Entidades_en_curso),a
 571  8BC0
 572  8BC0              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 573  8BC0
 574  8BC0 3A 71 8B     	ld a,(Clock_Entidades_en_curso)
 575  8BC3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 576  8BC3              ;! _ IMPREDECIBLE !!!!
 577  8BC3 C6 64        	add 100
 578  8BC5 32 71 8B     	ld (Clock_Entidades_en_curso),a
 579  8BC8
 580  8BC8              ; -------------------------------------------------------------------------------------------------------------
 581  8BC8
 582  8BC8              ; Habilita disparos.
 583  8BC8
 584  8BC8              13
 585  8BC8
 586  8BC8              ;	ld hl,Disparo_Amadeus
 587  8BC8              ;	ld de,CLOCK_repone_disparo_Amadeus
 588  8BC8              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 589  8BC8
 590  8BC8              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 591  8BC8              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 592  8BC8              ;	call Habilita_disparos
 593  8BC8
 594  8BC8              ; COLISIONES.
 595  8BC8
 596  8BC8              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 597  8BC8
 598  8BC8              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 599  8BC8              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 600  8BC8              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 601  8BC8
 602  8BC8              ;	xor a
 603  8BC8              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 604  8BC8
 605  8BC8              ;	call Inicia_punteros_de_cajas
 606  8BC8              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 607  8BC8              ; 														; _ en DRAW.
 608  8BC8
 609  8BC8              ;	ld a,(Filas)
 610  8BC8              ;	and a
 611  8BC8              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 612  8BC8              ;	call Incrementa_punteros_de_cajas
 613  8BC8              ;	jr 12B
 614  8BC8
 615  8BC8              ; ---------------------------------------------------------------------------------------
 616  8BC8
 617  8BC8 3A 46 8B     10 ld a,(Numero_parcial_de_entidades)
 618  8BCB 47               ld b,a
 619  8BCC A7           	and a
 620  8BCD 20 00        	jr nz,11F
 621  8BCF
 622  8BCF              ;	ld hl,Ctrl_1;
 623  8BCF              ;	bit 4,(hl)
 624  8BCF              ;	jp nz,16F
 625  8BCF
 626  8BCF              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 627  8BCF
 628  8BCF              ;	ld hl,Ctrl_1
 629  8BCF              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 630  8BCF
 631  8BCF              ;	ld a,(Contador_de_frames)
 632  8BCF              ;	inc a
 633  8BCF              ;	ld (Activa_recarga_cajas),a
 634  8BCF
 635  8BCF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 636  8BCF
 637  8BCF 3A 47 8B     11 ld a,(Entidades_en_curso)
 638  8BD2 A7           	and a
 639  8BD3 28 14        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 640  8BD5 47           	ld b,a												; No hay entidades que gestionar.
 641  8BD6
 642  8BD6              ; ( Código que ejecutamos con cada entidad: ).
 643  8BD6
 644  8BD6              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 645  8BD6
 646  8BD6 C5           15 push bc 												; Nº de entidades en curso.
 647  8BD7
 648  8BD7 CD 86 8D     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 649  8BDA
 650  8BDA              ; Existe "Entidad_guía" ???.
 651  8BDA              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 652  8BDA
 653  8BDA              ;	ld a,(Ctrl_3)
 654  8BDA              ;	bit 1,a
 655  8BDA              ;	jr nz,22F
 656  8BDA
 657  8BDA              ; Almacén de "Movimientos_masticados" lleno ???
 658  8BDA              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 659  8BDA              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 660  8BDA
 661  8BDA              ;;	ld a,(Ctrl_3)
 662  8BDA              ;;	bit 3,a
 663  8BDA              ;;	jr nz,22F
 664  8BDA
 665  8BDA              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 666  8BDA
 667  8BDA              ;	ld hl,Ctrl_2
 668  8BDA              ;	set 5,(hl)
 669  8BDA              ;	ld hl,Ctrl_3
 670  8BDA              ;	set 1,(hl)
 671  8BDA
 672  8BDA              ; Impacto ???
 673  8BDA
 674  8BDA              ;22 ld a,(Impacto)
 675  8BDA              ;	and a
 676  8BDA              ;	jr z,8F
 677  8BDA
 678  8BDA              ; Hay Impacto en esta entidad.
 679  8BDA
 680  8BDA              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 681  8BDA              ;	dec (hl)
 682  8BDA              ;	jp nz,17F
 683  8BDA
 684  8BDA              ;! Velocidad de la animación de la explosión.
 685  8BDA
 686  8BDA              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 687  8BDA              ;														; _,(velocidad de la explosión).
 688  8BDA              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 689  8BDA
 690  8BDA              ;	call Repone_datos_de_borrado
 691  8BDA              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 692  8BDA
 693  8BDA              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 694  8BDA
 695  8BDA              ;	ld a,(Ctrl_2)
 696  8BDA              ;	bit 1,a
 697  8BDA              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 698  8BDA
 699  8BDA              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 700  8BDA
 701  8BDA              ;	ld a,(CTRL_DESPLZ)
 702  8BDA              ;	and a
 703  8BDA              ;	jr nz,18F
 704  8BDA
 705  8BDA              ;	ld hl,Indice_Explosion_2x2-2
 706  8BDA              ;	ld (Puntero_DESPLZ_der),hl
 707  8BDA              ;	jr 19F
 708  8BDA
 709  8BDA              ;18 ld hl,Indice_Explosion_2x3-2
 710  8BDA              ;	ld (Puntero_DESPLZ_der),hl
 711  8BDA
 712  8BDA              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 713  8BDA              ;	set 1,(hl)
 714  8BDA              ;	jr 7F
 715  8BDA
 716  8BDA              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 717  8BDA              ; _con las coordenadas de la entidad almacenada en DRAW.
 718  8BDA
 719  8BDA              ;8 ld a,(Ctrl_1)
 720  8BDA              ;	bit 2,a
 721  8BDA              ;	jr z,7F
 722  8BDA
 723  8BDA              ;	ld hl,(Coordenadas_disparo_certero)
 724  8BDA              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 725  8BDA              ;														; E contiene la coordenada_X del disparo.
 726  8BDA              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 727  8BDA              ;														; H FILA, (Coordenada_y de la entidad).
 728  8BDA              ;	and a
 729  8BDA              ;	sbc hl,de
 730  8BDA
 731  8BDA              ;	call Determina_resultado_comparativa
 732  8BDA
 733  8BDA              ;	ld a,b
 734  8BDA              ;	and a
 735  8BDA              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 736  8BDA
 737  8BDA              ; ----- ----- -----
 738  8BDA
 739  8BDA              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 740  8BDA              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 741  8BDA
 742  8BDA              ;	ld hl,Ctrl_1
 743  8BDA              ;	res 2,(hl)
 744  8BDA
 745  8BDA CD F6 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 746  8BDD
 747  8BDD              ;	ld a,(Ctrl_0)
 748  8BDD              ;	bit 4,a
 749  8BDD              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 750  8BDD
 751  8BDD              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 752  8BDD              ; [[[
 753  8BDD              ;	call Detecta_disparo_entidad
 754  8BDD              ; ]]]
 755  8BDD
 756  8BDD CD DF 89     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 757  8BE0
 758  8BE0              ;	ld hl,Ctrl_0
 759  8BE0              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 760  8BE0
 761  8BE0 CD CF 89     17 call Store_Restore_cajas
 762  8BE3
 763  8BE3 C1           	pop bc
 764  8BE4
 765  8BE4 10 F0        	djnz 15B
 766  8BE6
 767  8BE6 CD B3 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 768  8BE9
 769  8BE9              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 770  8BE9              ; Hemos gestionado todas las unidades.
 771  8BE9              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 772  8BE9
 773  8BE9              ;	ld hl,Ctrl_1
 774  8BE9              ;	res 2,(hl)
 775  8BE9
 776  8BE9 21 5B 8B     16 ld hl,Ctrl_3
 777  8BEC CB C6        	set 0,(hl)											; Frame completo.
 778  8BEE
 779  8BEE AF           	xor a
 780  8BEF D3 FE        	out ($fe),a
 781  8BF1
 782  8BF1 76           	halt
 783  8BF2
 784  8BF2              ; ----------------------------------------
 785  8BF2
 786  8BF2              ;	ld a,(Ctrl_1) 										; Existe Loop?
 787  8BF2              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 788  8BF2 CA A6 8B     	jp z,Main
 789  8BF5
 790  8BF5              ; RECARGA DE NUEVA OLEADA.
 791  8BF5
 792  8BF5              ;	ld a,(Contador_de_frames)
 793  8BF5              ;	ld b,a
 794  8BF5              ;	ld a,(Activa_recarga_cajas)
 795  8BF5              ;	cp b
 796  8BF5              ;	jr z,20F
 797  8BF5
 798  8BF5              ;	ld hl,Ctrl_1
 799  8BF5              ;	set 4,(hl)
 800  8BF5              ;	jp Main
 801  8BF5
 802  8BF5              ;20 ld hl,Ctrl_1
 803  8BF5              ;	res 4,(hl)
 804  8BF5
 805  8BF5              ;	ld a,(Contador_de_frames)
 806  8BF5
 807  8BF5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 808  8BF5              ;! _ IMPREDECIBLE !!!!
 809  8BF5
 810  8BF5              ;	add 10
 811  8BF5              ;	ld (Clock_Entidades_en_curso),a
 812  8BF5
 813  8BF5              ;	jp 4B
 814  8BF5
 815  8BF5 C9           	ret
 816  8BF6
 817  8BF6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 818  8BF6              ;
 819  8BF6              ;	16/11/23
 820  8BF6
 821  8BF6              ;;Gestiona_Amadeus
 822  8BF6
 823  8BF6              ;! Activa/desactiva impacto con Amadeus.
 824  8BF6
 825  8BF6              ;	ld a,(Impacto)
 826  8BF6              ;	and a
 827  8BF6              ;	jr nz,2F
 828  8BF6
 829  8BF6              ;;	call Mov_Amadeus
 830  8BF6
 831  8BF6              ;;2 ld a,(Ctrl_0)
 832  8BF6              ;;	bit 4,a
 833  8BF6              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 834  8BF6
 835  8BF6              ;;	call Guarda_foto_entidad_a_pintar
 836  8BF6              ;;	call Guarda_datos_de_borrado_Amadeus
 837  8BF6
 838  8BF6              ;;1 ld hl,Ctrl_0
 839  8BF6              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 840  8BF6
 841  8BF6              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 842  8BF6
 843  8BF6              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 844  8BF6
 845  8BF6              ;	call Calcula_numero_de_disparotes
 846  8BF6
 847  8BF6              ;;	ret
 848  8BF6
 849  8BF6              ; --------------------------------------------------------------------------------------------------------------
 850  8BF6              ;
 851  8BF6              ;	15/12/23
 852  8BF6
 853  8BF6              Mov_obj
 854  8BF6
 855  8BF6              ;	ld a,(Ctrl_2)
 856  8BF6              ;	bit 1,a
 857  8BF6              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 858  8BF6
 859  8BF6              ; Explosión:
 860  8BF6
 861  8BF6              ;	ld a,(Frames_explosion)
 862  8BF6              ;	and a
 863  8BF6              ;	jr nz,4F
 864  8BF6
 865  8BF6              ;!  Una alimaña menos!!!!!!!!!1
 866  8BF6
 867  8BF6              ; Se trataba de una Entidad_guía ???
 868  8BF6
 869  8BF6              ;	ld a,(Ctrl_2)
 870  8BF6              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 871  8BF6              ;	jr z,5F
 872  8BF6
 873  8BF6              ;	ld hl,Ctrl_3
 874  8BF6              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 875  8BF6
 876  8BF6              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 877  8BF6              ;!! _generado puede ser distinto, (aletoriedad).
 878  8BF6
 879  8BF6              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 880  8BF6              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 881  8BF6              ;	dec (hl)
 882  8BF6              ;	ld hl,Entidades_en_curso
 883  8BF6              ;	dec (hl)
 884  8BF6              ;	ld hl,Numero_de_entidades
 885  8BF6              ;	dec (hl)
 886  8BF6              ;	jr 3F
 887  8BF6
 888  8BF6              ; -----
 889  8BF6
 890  8BF6              ;	`Movemos´ la explosión.
 891  8BF6
 892  8BF6              ;4 ld hl,(Puntero_DESPLZ_der)
 893  8BF6              ;	inc hl
 894  8BF6              ;	inc hl
 895  8BF6              ;	call Extrae_address
 896  8BF6              ;;	ld (Puntero_objeto),hl
 897  8BF6
 898  8BF6              ;;	ld hl,Frames_explosion
 899  8BF6              ;;	dec (hl)
 900  8BF6
 901  8BF6              ;;	ld hl,Ctrl_0
 902  8BF6              ;;	set 4,(hl);;
 903  8BF6
 904  8BF6              ;;	jr 3F
 905  8BF6
 906  8BF6              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 907  8BF6
 908  8BF6              ;2 xor a
 909  8BF6              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 910  8BF6
 911  8BF6              ; Movemos Entidades malignas.
 912  8BF6              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 913  8BF6
 914  8BF6              ;	ld a,(Ctrl_2)
 915  8BF6              ;	bit 5,a
 916  8BF6              ;	jr nz,8F
 917  8BF6
 918  8BF6              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 919  8BF6              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 920  8BF6              ;	jr 7F
 921  8BF6
 922  8BF6              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 923  8BF6
 924  8BF6              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 925  8BF6              ;	bit 4,a
 926  8BF6              ;	ret z
 927  8BF6
 928  8BF6              ; Ha habido desplazamiento de la entidad maligna.
 929  8BF6              ; Ha llegado a zona de AMADEUS ???
 930  8BF6
 931  8BF6              ;7 ld a,(Coordenada_y)
 932  8BF6              ;	cp $14
 933  8BF6              ;	jr c,1F
 934  8BF6
 935  8BF6              ; ---------
 936  8BF6
 937  8BF6              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 938  8BF6              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 939  8BF6
 940  8BF6              ;	di
 941  8BF6              ;	call Genera_coordenadas_X
 942  8BF6              ;	call Compara_coordenadas_X
 943  8BF6              ;	ei
 944  8BF6
 945  8BF6              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 946  8BF6
 947  8BF6              ; ---------
 948  8BF6
 949  8BF6              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 950  8BF6 CD 64 8E     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 951  8BF9 CD F1 8C     	call Limpia_Variables_de_borrado
 952  8BFC
 953  8BFC C9           3 ret
 954  8BFD
 955  8BFD              ; --------------------------------------------------------------------------------------------------------------
 956  8BFD              ;
 957  8BFD              ;	29/1/23
 958  8BFD
 959  8BFD              Mov_Amadeus
 960  8BFD
 961  8BFD              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 962  8BFD
 963  8BFD CD BD 9B     	call Mov_right
 964  8C00
 965  8C00 3A 1D 8B     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 966  8C03 CB 67        	bit 4,a
 967  8C05 C8           	ret z
 968  8C06
 969  8C06              ; ---------
 970  8C06
 971  8C06              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 972  8C06 CD 54 8E     	call Repone_datos_de_borrado_Amadeus
 973  8C09 CD F1 8C     	call Limpia_Variables_de_borrado
 974  8C0C
 975  8C0C C9           	ret
 976  8C0D
 977  8C0D              ; -----------------------------------------------------------------------------------
 978  8C0D              ;
 979  8C0D              ;	20/01/24
 980  8C0D              ;
 981  8C0D              ;
 982  8C0D
 983  8C0D              Construye_movimientos_masticados_entidad
 984  8C0D
 985  8C0D 2A 19 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 986  8C10 E5           	push hl
 987  8C11 CD 55 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 988  8C14              ;															; _ el (Contador_de_mov_masticados).
 989  8C14 CD 51 8D     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 990  8C17              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 991  8C17 CD 19 9B     	call Recompone_posicion_inicio
 992  8C1A
 993  8C1A CD EF 94     1 call Draw
 994  8C1D CD 39 8C     	call Guarda_movimiento_masticado
 995  8C20
 996  8C20 CD A1 8E     	call Movimiento
 997  8C23
 998  8C23 3A 5B 8B     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 999  8C26 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1000  8C28 28 F0        	jr z,1B
1001  8C2A
1002  8C2A              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1003  8C2A              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1004  8C2A
1005  8C2A E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1006  8C2B 22 19 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1007  8C2E
1008  8C2E              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1009  8C2E
1010  8C2E CD 05 90     	call Situa_en_contador_general_de_mov_masticados
1011  8C31
1012  8C31              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1013  8C31              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1014  8C31
1015  8C31 ED 4B 1B 8B  	ld bc,(Contador_de_mov_masticados)
1016  8C35 71           	ld (hl),c
1017  8C36 23           	inc hl
1018  8C37 70           	ld (hl),b
1019  8C38
1020  8C38 C9           	ret
1021  8C39
1022  8C39              ; -----------------------------------------------------------------------------------
1023  8C39              ;
1024  8C39              ;	28/12/23
1025  8C39              ;
1026  8C39              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1027  8C39              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1028  8C39
1029  8C39              Guarda_movimiento_masticado
1030  8C39
1031  8C39 ED 73 4D 8B  	ld (Stack),sp
1032  8C3D ED 7B 19 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1033  8C41
1034  8C41 E5           	push hl
1035  8C42 DD E5            push ix
1036  8C44 FD E5            push iy
1037  8C46
1038  8C46 ED 7B 4D 8B      ld sp,(Stack)
1039  8C4A
1040  8C4A              ;    push hl
1041  8C4A
1042  8C4A 2A 1B 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1043  8C4D 23           	inc hl
1044  8C4E 22 1B 8B     	ld (Contador_de_mov_masticados),hl
1045  8C51
1046  8C51              ;	pop hl
1047  8C51
1048  8C51 CD 55 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1049  8C54              ;															; _ el (Contador_de_mov_masticados).
1050  8C54 C9               ret
1051  8C55
1052  8C55              ; --------------------------------------------------------------------------------------------------------------
1053  8C55              ;
1054  8C55              ;	12/1/24
1055  8C55              ;
1056  8C55              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1057  8C55
1058  8C55              Actualiza_Puntero_de_almacen_de_mov_masticados
1059  8C55
1060  8C55              ;	push hl
1061  8C55              ;	push bc
1062  8C55
1063  8C55 2A 19 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1064  8C58 01 06 00     	ld bc,6
1065  8C5B A7           	and a
1066  8C5C ED 4A        	adc hl,bc
1067  8C5E 22 19 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1068  8C61
1069  8C61              ;	pop bc
1070  8C61              ;	pop hl
1071  8C61
1072  8C61 C9           	ret
1073  8C62
1074  8C62              ; --------------------------------------------------------------------------------------------------------------
1075  8C62              ;
1076  8C62              ;	15/01/24
1077  8C62              ;
1078  8C62              ;	Cargamos los registros_
1079  8C62              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1080  8C62              ;
1081  8C62              ;	HL contiene la dirección de la rutina de impresión.
1082  8C62              ;	IX contiene el puntero de impresión.
1083  8C62              ;	IY contiene (Puntero_objeto).
1084  8C62
1085  8C62
1086  8C62 ED 73 4D 8B  Cargamos_registros_con_mov_masticado ld (Stack),sp
1087  8C66 ED 7B 19 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1088  8C6A
1089  8C6A FD E1        	pop iy
1090  8C6C DD E1        	pop ix
1091  8C6E E1           	pop hl
1092  8C6F
1093  8C6F ED 73 19 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1094  8C73
1095  8C73 ED 7B 4D 8B  	ld sp,(Stack)
1096  8C77
1097  8C77 C9           	ret
1098  8C78
1099  8C78              ; --------------------------------------------------------------------------------------------------------------
1100  8C78              ;
1101  8C78              ;	28/12/23
1102  8C78              ;
1103  8C78              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1104  8C78              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1105  8C78
1106  8C78              Guarda_foto_entidad_a_pintar
1107  8C78
1108  8C78 3A 1D 8B     	ld a,(Ctrl_0)
1109  8C7B CB 77        	bit 6,a
1110  8C7D 28 04        	jr z,5F
1111  8C7F
1112  8C7F              ;	Guarda la foto de Amadeus.
1113  8C7F
1114  8C7F              ;	call Draw
1115  8C7F              ;	call Guarda_movimiento_masticado	;! Provisional
1116  8C7F CD BF 80     	call Guarda_foto_registros
1117  8C82 C9           	ret
1118  8C83
1119  8C83              ; ENTIDADES!
1120  8C83              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1121  8C83
1122  8C83 3A 5B 8B     5 ld a,(Ctrl_3)
1123  8C86 CB 5F        	bit 3,a
1124  8C88 28 01        	jr z,1F
1125  8C8A
1126  8C8A              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1127  8C8A
1128  8C8A              4
1129  8C8A              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1130  8C8A C9           	ret
1131  8C8B
1132  8C8B              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1133  8C8B
1134  8C8B 3A 5B 8B     1 ld a,(Ctrl_3)
1135  8C8E CB 57        	bit 2,a
1136  8C90 20 10        	jr nz,6F
1137  8C92
1138  8C92              ; Entidad guía o fantasma ???
1139  8C92
1140  8C92 3A 22 8B     	ld a,(Ctrl_2)
1141  8C95 CB 6F        	bit 5,a
1142  8C97 20 10        	jr nz,3F
1143  8C99
1144  8C99              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1145  8C99
1146  8C99 18 EF        	jr 4B
1147  8C9B
1148  8C9B              ; ENTIDAD_GUÍA:
1149  8C9B              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1150  8C9B              ; _guardando "movimientos_masticados".
1151  8C9B
1152  8C9B 3A 5B 8B     2 ld a,(Ctrl_3)
1153  8C9E CB 57        	bit 2,a
1154  8CA0 28 07        	jr z,3F
1155  8CA2
1156  8CA2              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1157  8CA2              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1158  8CA2
1159  8CA2 CB 97        6 res 2,a
1160  8CA4 CB DF        	set 3,a
1161  8CA6 32 5B 8B     	ld (Ctrl_3),a
1162  8CA9
1163  8CA9
1164  8CA9              ;	Esto sólo lo ejecuta una entidad guía.
1165  8CA9
1166  8CA9 CD EF 94     3 	call Draw
1167  8CAC CD 39 8C     	call Guarda_movimiento_masticado
1168  8CAF CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1169  8CB2
1170  8CB2              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1171  8CB2              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1172  8CB2
1173  8CB2              ;	call Convierte_guia_en_fantasma
1174  8CB2 C9           	ret
1175  8CB3
1176  8CB3              ; --------------------------------------------------------------------------------------------------------------
1177  8CB3              ;
1178  8CB3              ;	19/9/23
1179  8CB3
1180  8CB3              ;Prepara_var_pintado
1181  8CB3
1182  8CB3              ;	ld hl,Filas
1183  8CB3              ;	ld de,Variables_de_pintado
1184  8CB3              ;	ld bc,8
1185  8CB3              ;	ldir
1186  8CB3              ;	ret
1187  8CB3
1188  8CB3              ; --------------------------------------------------------------------------------------------------------------
1189  8CB3
1190  8CB3              ;Repone_pintar
1191  8CB3
1192  8CB3              ;	ld hl,Variables_de_pintado
1193  8CB3              ;	ld de,Filas
1194  8CB3              ;	ld bc,8
1195  8CB3              ;	ldir
1196  8CB3              ;	ret
1197  8CB3
1198  8CB3              ; *************************************************************************************************************************************************************
1199  8CB3              ;
1200  8CB3              ; 8/1/23
1201  8CB3              ;
1202  8CB3              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1203  8CB3              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1204  8CB3              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1205  8CB3
1206  8CB3              ; Destruye HL y DE !!!!!
1207  8CB3
1208  8CB3              Inicia_punteros_de_cajas
1209  8CB3
1210  8CB3 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1211  8CB6 CD 4B 8D         call Extrae_address
1212  8CB9 22 3F 8B         ld (Puntero_store_caja),hl
1213  8CBC 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1214  8CBF 22 43 8B     	ld (Indice_restore_caja),hl
1215  8CC2 CD 4B 8D     	call Extrae_address
1216  8CC5 22 41 8B     	ld (Puntero_restore_caja),hl
1217  8CC8 C9               ret
1218  8CC9
1219  8CC9              ; *************************************************************************************************************************************************************
1220  8CC9              ;
1221  8CC9              ; 8/1/23
1222  8CC9              ;
1223  8CC9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1224  8CC9
1225  8CC9 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1226  8CCC 22 5E 8B     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1227  8CCF C9           	ret
1228  8CD0 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1229  8CD3 22 60 8B     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1230  8CD6 C9           	ret
1231  8CD7
1232  8CD7              ; -------------------------------------------------------------------------------------------------------------
1233  8CD7              ;
1234  8CD7              ; 21/9/23
1235  8CD7              ;
1236  8CD7
1237  8CD7              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1238  8CD7
1239  8CD7              Limpia_album_Amadeus
1240  8CD7
1241  8CD7 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1242  8CDA 7E           	ld a,(hl)
1243  8CDB A7           	and a
1244  8CDC C8           	ret z
1245  8CDD
1246  8CDD 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1247  8CE0 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1248  8CE3 01 0B 00     	ld bc,11
1249  8CE6 AF           	xor a
1250  8CE7 77           	ld (hl),a
1251  8CE8 ED B0        	ldir
1252  8CEA
1253  8CEA 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1254  8CED 22 59 8B     	ld (End_Snapshot_Amadeus),hl
1255  8CF0
1256  8CF0 C9           	ret
1257  8CF1
1258  8CF1 21 11 8B     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1259  8CF4 11 12 8B     	ld de,Variables_de_borrado+1
1260  8CF7 01 05 00     	ld bc,5
1261  8CFA AF           	xor a
1262  8CFB 77           	ld (hl),a
1263  8CFC ED B0        	ldir
1264  8CFE C9           	ret
1265  8CFF
1266  8CFF              ; -------------------------------------------------------------------------------------------------------------
1267  8CFF              ;
1268  8CFF              ; 8/9/23
1269  8CFF              ;
1270  8CFF
1271  8CFF              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1272  8CFF              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1273  8CFF
1274  8CFF              Calcula_numero_de_malotes
1275  8CFF
1276  8CFF 21 00 80     	ld hl,Album_de_fotos
1277  8D02 EB           	ex de,hl
1278  8D03 2A 53 8B     	ld hl,(Stack_snapshot)
1279  8D06
1280  8D06 06 00        	ld b,0
1281  8D08 7D           	ld a,l
1282  8D09 93           	sub e
1283  8D0A 28 07        	jr z,1F
1284  8D0C
1285  8D0C              ; Nº de malotes no es "0".
1286  8D0C
1287  8D0C D6 06        2 sub 6
1288  8D0E 04           	inc b
1289  8D0F A7           	and a
1290  8D10 20 FA        	jr nz,2B
1291  8D12 78           	ld a,b
1292  8D13
1293  8D13 32 48 8B     1 ld (Numero_de_malotes),a
1294  8D16 C9           	ret
1295  8D17
1296  8D17              ; -------------------------------------------------------------------------------------------------------------
1297  8D17              ;
1298  8D17              ; 8/9/23
1299  8D17              ;
1300  8D17
1301  8D17              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1302  8D17              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1303  8D17
1304  8D17              Calcula_malotes_Amadeus
1305  8D17
1306  8D17 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1307  8D1A EB           	ex de,hl
1308  8D1B 2A 59 8B     	ld hl,(End_Snapshot_Amadeus)
1309  8D1E
1310  8D1E 7C           	ld a,h
1311  8D1F A7           	and a
1312  8D20 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1313  8D22
1314  8D22 06 00        	ld b,0
1315  8D24 7D           	ld a,l
1316  8D25 93           	sub e
1317  8D26 28 07        	jr z,1F
1318  8D28
1319  8D28              ; Nº de malotes no es "0".
1320  8D28
1321  8D28 D6 06        2 sub 6
1322  8D2A 04           	inc b
1323  8D2B A7           	and a
1324  8D2C 20 FA        	jr nz,2B
1325  8D2E 78           	ld a,b
1326  8D2F
1327  8D2F 32 48 8B     1 ld (Numero_de_malotes),a
1328  8D32 C9           	ret
1329  8D33
1330  8D33              ; -------------------------------------------------------------------------------------------------------------
1331  8D33              ;
1332  8D33              ; 28/2/23
1333  8D33              ;
1334  8D33
1335  8D33              Calcula_numero_de_disparotes
1336  8D33
1337  8D33 21 56 80     	ld hl,Album_de_fotos_disparos
1338  8D36 EB           	ex de,hl
1339  8D37 2A 57 8B     	ld hl,(End_Snapshot_disparos)
1340  8D3A
1341  8D3A 06 00        	ld b,0
1342  8D3C 7D           	ld a,l
1343  8D3D 93           	sub e
1344  8D3E 28 07        	jr z,1F
1345  8D40
1346  8D40              ; Nº de malotes no es "0".
1347  8D40
1348  8D40 D6 06        2 sub 6
1349  8D42 04           	inc b
1350  8D43 A7           	and a
1351  8D44 20 FA        	jr nz,2B
1352  8D46 78           	ld a,b
1353  8D47
1354  8D47 32 5D 8B     1 ld (Numero_de_disparotes),a
1355  8D4A C9           	ret
1356  8D4B
1357  8D4B              ; *************************************************************************************************************************************************************
1358  8D4B              ;
1359  8D4B              ; 20/10/22
1360  8D4B              ;
1361  8D4B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1362  8D4B              ;
1363  8D4B              ; Destruye el puntero y DE !!!!!
1364  8D4B
1365  8D4B 5E           Extrae_address ld e,(hl)
1366  8D4C 23           	inc hl
1367  8D4D 56           	ld d,(hl)
1368  8D4E 2B           	dec hl
1369  8D4F EB           	ex de,hl
1370  8D50 C9           	ret
1371  8D51
1372  8D51              ; *************************************************************************************************************************************************************
1373  8D51              ;
1374  8D51              ;	20/1/24
1375  8D51              ;
1376  8D51              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1377  8D51              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1378  8D51              ;
1379  8D51              ;   Destruye HL y BC !!!!!,
1380  8D51              ;
1381  8D51              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1382  8D51              ;					"0" ..... Izquierda.
1383  8D51
1384  8D51              Inicia_Puntero_objeto
1385  8D51
1386  8D51 3A 0F 8B     	ld a,(Cuad_objeto)
1387  8D54 E6 01        	and 1
1388  8D56 F5           	push af
1389  8D57 CC 73 8D     	call z,Inicia_puntero_objeto_izq
1390  8D5A F1           	pop af
1391  8D5B C8           	ret z
1392  8D5C CD 60 8D     	call Inicia_puntero_objeto_der
1393  8D5F C9           	ret
1394  8D60
1395  8D60              ; Arrancamos desde la parte izquierda de la pantalla.
1396  8D60              ; Iniciamos (Indice_Sprite_der).
1397  8D60
1398  8D60 2A 05 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1399  8D63 22 09 8B     	ld (Puntero_DESPLZ_der),hl
1400  8D66 CD 4B 8D     	call Extrae_address
1401  8D69 22 FF 8A     	ld (Puntero_objeto),hl
1402  8D6C
1403  8D6C 2A 07 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1404  8D6F 22 0B 8B     	ld (Puntero_DESPLZ_izq),hl
1405  8D72 C9           	ret
1406  8D73
1407  8D73              ; Arrancamos desde la parte derecha de la pantalla.
1408  8D73              ; Iniciamos (Indice_Sprite_izq).
1409  8D73
1410  8D73 2A 07 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1411  8D76 22 0B 8B     	ld (Puntero_DESPLZ_izq),hl
1412  8D79 CD 4B 8D     	call Extrae_address
1413  8D7C 22 FF 8A     	ld (Puntero_objeto),hl
1414  8D7F
1415  8D7F 2A 05 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1416  8D82 22 09 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1417  8D85 C9           	ret
1418  8D86
1419  8D86              ; **************************************************************************************************
1420  8D86              ;
1421  8D86              ;	31/01/24
1422  8D86              ;
1423  8D86              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1424  8D86
1425  8D86              Restore_entidad
1426  8D86
1427  8D86 2A 3F 8B     	ld hl,(Puntero_store_caja)
1428  8D89 11 FA 8A     	ld de,Bandeja_DRAW
1429  8D8C 7E           	ld a,(hl)
1430  8D8D 12           	ld (de),a
1431  8D8E 23           	inc hl 											; (Tipo).
1432  8D8F
1433  8D8F 11 01 8B     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1434  8D92 01 02 00     	ld bc,2
1435  8D95 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1436  8D97
1437  8D97 13           	inc de
1438  8D98 7E           	ld a,(hl)
1439  8D99 12           	ld (de),a 										; Transferimos (Attr).
1440  8D9A 23           	inc hl
1441  8D9B
1442  8D9B 11 10 8B     	ld de,Impacto
1443  8D9E
1444  8D9E 7E           	ld a,(hl)
1445  8D9F 12           	ld (de),a 										; Transferimos (Impacto).
1446  8DA0 23           	inc hl
1447  8DA1
1448  8DA1 13           	inc de
1449  8DA2
1450  8DA2 01 06 00     	ld bc,6
1451  8DA5 ED B0        	ldir
1452  8DA7
1453  8DA7 01 07 00     	ld bc,7
1454  8DAA ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1455  8DAC              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1456  8DAC 11 22 8B     	ld de,Ctrl_2
1457  8DAF
1458  8DAF 7E           	ld a,(hl)
1459  8DB0 12           	ld (de),a 										; Transferimos (Ctrl_2).
1460  8DB1
1461  8DB1 C9           	ret
1462  8DB2
1463  8DB2              ; **************************************************************************************************
1464  8DB2              ;
1465  8DB2              ;	08/05/23
1466  8DB2              ;
1467  8DB2              ;	Incrementamos los dos punteros de entidades. (+1).
1468  8DB2
1469  8DB2              Incrementa_punteros_de_cajas
1470  8DB2
1471  8DB2 2A 41 8B     	ld hl,(Puntero_restore_caja)
1472  8DB5 22 3F 8B     	ld (Puntero_store_caja),hl
1473  8DB8 2A 43 8B     	ld hl,(Indice_restore_caja)
1474  8DBB 23           	inc hl
1475  8DBC 23           	inc hl
1476  8DBD 22 43 8B     	ld (Indice_restore_caja),hl
1477  8DC0 CD 4B 8D         call Extrae_address
1478  8DC3 22 41 8B         ld (Puntero_restore_caja),hl
1479  8DC6 C9               ret
1480  8DC7
1481  8DC7              ; **************************************************************************************************
1482  8DC7              ;
1483  8DC7              ;	21/12/23
1484  8DC7              ;
1485  8DC7              ;	Restore_Amadeus
1486  8DC7              ;
1487  8DC7              ;	Cargamos en DRAW los parámetros de Amadeus.
1488  8DC7              ;
1489  8DC7
1490  8DC7 E5           Restore_Amadeus	push hl
1491  8DC8 D5           	push de
1492  8DC9 C5            	push bc
1493  8DCA 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1494  8DCD 11 FA 8A     	ld de,Bandeja_DRAW
1495  8DD0 01 2A 00     	ld bc,42
1496  8DD3 ED B0        	ldir
1497  8DD5 C1           	pop bc
1498  8DD6 D1           	pop de
1499  8DD7 E1           	pop hl
1500  8DD8 C9           	ret
1501  8DD9
1502  8DD9              ; *************************************************************************************************************************************************************
1503  8DD9              ;
1504  8DD9              ;	21/12/23
1505  8DD9              ;
1506  8DD9              ;	Store_Amadeus
1507  8DD9              ;
1508  8DD9              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1509  8DD9              ;
1510  8DD9              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1511  8DD9              ;
1512  8DD9              ;	DESTRUYE: HL y BC y DE.
1513  8DD9
1514  8DD9 21 FA 8A     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1515  8DDC 01 2A 00     	ld bc,42
1516  8DDF ED B0        	ldir
1517  8DE1 C9           	ret
1518  8DE2
1519  8DE2              ; -----------------------------------------------------------
1520  8DE2              ;
1521  8DE2              ;	21/12/23
1522  8DE2              ;
1523  8DE2              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1524  8DE2              ;
1525  8DE2              ;	Destruye: HL,BC,DE,A
1526  8DE2
1527  8DE2 21 FA 8A     Borra_datos_entidad ld hl,Bandeja_DRAW
1528  8DE5 01 29 00     	ld bc,41
1529  8DE8 AF           	xor a
1530  8DE9 77           	ld (hl),a
1531  8DEA 11 FB 8A     	ld de,Bandeja_DRAW+1
1532  8DED ED B0        	ldir
1533  8DEF C9           	ret
1534  8DF0
1535  8DF0              ; -----------------------------------------------------------
1536  8DF0
1537  8DF0              ; Teclado.
1538  8DF0
1539  8DF0 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1540  8DF2 DB FE        	in a,($fe)
1541  8DF4 E6 01        	and $01
1542  8DF6 28 02        	jr z,1f
1543  8DF8 18 F6        	jr Pulsa_ENTER
1544  8DFA C9           1 ret
1545  8DFB
1546  8DFB              ; **************************************************************************************************
1547  8DFB              ;
1548  8DFB              ; Temporización.
1549  8DFB
1550  8DFB              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1551  8DFB              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1552  8DFB              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1553  8DFB              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1554  8DFB
1555  8DFB              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1556  8DFB              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1557  8DFB              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1558  8DFB
1559  8DFB              ; A partir de $4f61 no hace falta DELAY.
1560  8DFB
1561  8DFB              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1562  8DFB
1563  8DFB 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1564  8DFE 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1565  8DFF 78           	LD A,B
1566  8E00 A7           	AND A
1567  8E01 20 FB        	JR NZ,wait
1568  8E03 C9           	RET
1569  8E04
1570  8E04              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1571  8E04              ;
1572  8E04              ;	5/3/23
1573  8E04              ;
1574  8E04              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1575  8E04
1576  8E04              Movimiento_Amadeus
1577  8E04
1578  8E04              ; Disparo.
1579  8E04
1580  8E04 3A 73 8B     	ld a,(Disparo_Amadeus)
1581  8E07 A7           	and a
1582  8E08 20 02        	jr nz,1F
1583  8E0A 18 15        	jr 2F
1584  8E0C
1585  8E0C 3E F7        1 ld a,$f7													; "5" para disparar.
1586  8E0E DB FE        	in a,($fe)
1587  8E10 E6 10        	and $10
1588  8E12
1589  8E12 F5           	push af
1590  8E13 CC 1B 90     	call z,Genera_disparo
1591  8E16 F1           	pop af
1592  8E17 20 08        	jr nz,2F
1593  8E19
1594  8E19 3A 73 8B     	ld a,(Disparo_Amadeus)
1595  8E1C EE 01        	xor 1
1596  8E1E 32 73 8B     	ld (Disparo_Amadeus),a
1597  8E21 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1598  8E23 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1599  8E25 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1600  8E27 CC E0 9C         call z,Mov_left											;			"			"			"			"			"			"			"			"
1601  8E2A
1602  8E2A 3E F7        	ld a,$f7
1603  8E2C DB FE        	in a,($fe)
1604  8E2E E6 01        	and $01
1605  8E30 C8           	ret z
1606  8E31
1607  8E31 3E F7        	ld a,$f7
1608  8E33 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1609  8E35 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1610  8E37 CC BD 9B     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1611  8E3A C9           	ret
1612  8E3B
1613  8E3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1614  8E3B              ;
1615  8E3B              ;	Rutina provisional para que los malotes cagen balas.
1616  8E3B
1617  8E3B              Detecta_disparo_entidad
1618  8E3B
1619  8E3B 3A 76 8B     	ld a,(Disparo_entidad)
1620  8E3E A7           	and a
1621  8E3F C8           	ret z
1622  8E40
1623  8E40              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1624  8E40
1625  8E40              ;	ld a,$7f				; Detecta SPACE.
1626  8E40              ;	in a,($fe)
1627  8E40              ;	and 1
1628  8E40              ;	ret nz
1629  8E40
1630  8E40 CD 1B 90     	call Genera_disparo
1631  8E43 C9           	ret
1632  8E44
1633  8E44              ; ----------------------------------------------------------------------
1634  8E44              ;
1635  8E44              ;	8/9/23
1636  8E44
1637  8E44 2A 59 8B     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1638  8E47 2B            	dec hl
1639  8E48 7E           	ld a,(hl)
1640  8E49 A7           	and a
1641  8E4A C8           	ret z										; Salimos si es álbum está vacío.
1642  8E4B
1643  8E4B 11 16 8B     	ld de,Variables_de_borrado+5
1644  8E4E 01 06 00     	ld bc,6
1645  8E51 ED B8        	lddr
1646  8E53 C9           	ret
1647  8E54
1648  8E54              ; ----------------------------------------------------------------------
1649  8E54              ;
1650  8E54              ;	9/9/23
1651  8E54
1652  8E54              Repone_datos_de_borrado_Amadeus
1653  8E54
1654  8E54 21 11 8B     	ld hl,Variables_de_borrado
1655  8E57 11 AC 80     	ld de,Album_de_fotos_Amadeus
1656  8E5A 01 06 00     	ld bc,6
1657  8E5D ED B0        	ldir
1658  8E5F
1659  8E5F EB           	ex de,hl
1660  8E60 22 59 8B     	ld (End_Snapshot_Amadeus),hl
1661  8E63
1662  8E63 C9           	ret
1663  8E64
1664  8E64              ; ----------------------------------------------------------------------
1665  8E64              ;
1666  8E64              ;	27/10/23
1667  8E64              ;
1668  8E64
1669  8E64              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1670  8E64              ;	_ Album_de_fotos correspondiente.
1671  8E64
1672  8E64              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1673  8E64              ;	_ durante el proceso de escritura.
1674  8E64
1675  8E64              Repone_datos_de_borrado
1676  8E64
1677  8E64 ED 5B 53 8B  	ld de,(Stack_snapshot)
1678  8E68 21 11 8B     	ld hl,Variables_de_borrado
1679  8E6B 01 06 00     	ld bc,6
1680  8E6E ED B0        	ldir
1681  8E70
1682  8E70 EB           	ex de,hl
1683  8E71 22 53 8B     	ld (Stack_snapshot),hl
1684  8E74
1685  8E74 C9           	ret
1686  8E75
1687  8E75              ; --------------------------------------------------------------------------------------
1688  8E75
1689  8E75              Pinta_Amadeus
1690  8E75
1691  8E75 CD 17 8D        	call Calcula_malotes_Amadeus
1692  8E78 CD 88 98     	call Extrae_foto_Amadeus
1693  8E7B CD D7 8C     	call Limpia_album_Amadeus
1694  8E7E
1695  8E7E C9           	ret
1696  8E7F
1697  8E7F              Pinta_entidades
1698  8E7F
1699  8E7F              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1700  8E7F
1701  8E7F 3A 5B 8B     	ld a,(Ctrl_3)
1702  8E82 CB 47        	bit 0,a
1703  8E84 C8           	ret z
1704  8E85
1705  8E85 CD FF 8C     	call Calcula_numero_de_malotes
1706  8E88 CD 06 98     	call Extrae_foto_entidades
1707  8E8B CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1708  8E8E
1709  8E8E C9           	ret
1710  8E8F
1711  8E8F              ; -----------------------------------------------------------------------------------
1712  8E8F              ;
1713  8E8F              ;	10/12/23
1714  8E8F              ;
1715  8E8F              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1716  8E8F
1717  8E8F              Actualiza_relojes
1718  8E8F
1719  8E8F 3A 5B 8B     	ld a,(Ctrl_3)
1720  8E92 CB 47        	bit 0,a
1721  8E94 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1722  8E95
1723  8E95 21 6E 8B     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1724  8E98 34           	inc (hl)
1725  8E99
1726  8E99 34           	inc (hl)
1727  8E9A 35           	dec (hl)
1728  8E9B C0           	ret nz
1729  8E9C
1730  8E9C 21 6F 8B     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1731  8E9F 34           	inc (hl)
1732  8EA0 C9           	ret
1733  8EA1
1734  8EA1              ; ---------------------------------------------------------------
1735  8EA1              ;
1736  8EA1              ;	21/12/23
1737  8EA1
1738  8EA1              ;Guarda_parametros_DRAW
1739  8EA1
1740  8EA1              ;	ld hl,Bandeja_DRAW
1741  8EA1              ;	ld de,Almacen_de_parametros_DRAW
1742  8EA1              ;	ld bc,42
1743  8EA1              ;	ldir
1744  8EA1              ;	ret
1745  8EA1
1746  8EA1              ;Recupera_parametros_DRAW
1747  8EA1
1748  8EA1              ;	ld hl,Almacen_de_parametros_DRAW
1749  8EA1              ;	ld de,Bandeja_DRAW
1750  8EA1              ;	ld bc,42
1751  8EA1              ;	ldir
1752  8EA1              ;	ret
1753  8EA1
1754  8EA1              ; ---------------------------------------------------------------
1755  8EA1
1756  8EA1              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 8EA1              ; ----- ----- ----- ----- -----
   2+ 8EA1              ;
   3+ 8EA1              ;   28/12/23
   4+ 8EA1
   5+ 8EA1              Movimiento
   6+ 8EA1
   7+ 8EA1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 8EA1
   9+ 8EA1 3A 22 8B         ld a,(Ctrl_2)
  10+ 8EA4 CB 57            bit 2,a
  11+ 8EA6 20 1B            jr nz, Desplazamiento_iniciado
  12+ 8EA8
  13+ 8EA8 2A 32 8B         ld hl,(Puntero_mov)
  14+ 8EAB 7E               ld a,(hl)
  15+ 8EAC
  16+ 8EAC              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 8EAC
  18+ 8EAC              Inicia_desplazamiento.
  19+ 8EAC
  20+ 8EAC              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 8EAC
  22+ 8EAC CD 9F 8F         call Ajusta_velocidad_desplazamiento
  23+ 8EAF
  24+ 8EAF              ; Iniciamos (Repetimos_mov).
  25+ 8EAF
  26+ 8EAF 7E               ld a,(hl)
  27+ 8EB0 E6 0F            and $0f
  28+ 8EB2 32 38 8B         ld (Repetimos_desplazamiento),a
  29+ 8EB5 32 39 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 8EB8
  31+ 8EB8              ; Iniciamos (Cola_de_desplazamiento).
  32+ 8EB8
  33+ 8EB8 23               inc hl
  34+ 8EB9 7E               ld a,(hl)
  35+ 8EBA 32 3B 8B         ld (Cola_de_desplazamiento),a
  36+ 8EBD 2B               dec hl
  37+ 8EBE
  38+ 8EBE 21 22 8B         ld hl,Ctrl_2
  39+ 8EC1 CB D6            set 2,(hl)
  40+ 8EC3
  41+ 8EC3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 8EC3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 8EC3
  44+ 8EC3              Desplazamiento_iniciado
  45+ 8EC3
  46+ 8EC3 CD 73 8F         call Aplica_desplazamiento
  47+ 8EC6
  48+ 8EC6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 8EC6
  50+ 8EC6 3A 5B 8B         ld a,(Ctrl_3)
  51+ 8EC9 CB 4F            bit 1,a
  52+ 8ECB C0               ret nz
  53+ 8ECC
  54+ 8ECC              ;    ld a,(Ctrl_2)
  55+ 8ECC              ;    bit 4,a
  56+ 8ECC              ;    ret nz                                                      ; Salimos si se ha producido reinicio.
  57+ 8ECC
  58+ 8ECC 21 38 8B     3 ld hl,Repetimos_desplazamiento
  59+ 8ECF 35               dec (hl)
  60+ 8ED0 C0               ret nz
  61+ 8ED1
  62+ 8ED1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  63+ 8ED1              ; Hay que volver a ejecutar este desplazamiento ???.
  64+ 8ED1              ; Analiza (Cola_de_desplazamiento).
  65+ 8ED1
  66+ 8ED1 3A 3B 8B     Cola ld a,(Cola_de_desplazamiento)
  67+ 8ED4 A7               and a
  68+ 8ED5 CC C8 8F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  69+ 8ED8 28 30            jr z,Reinicia_el_movimiento
  70+ 8EDA
  71+ 8EDA FE FF            cp $ff
  72+ 8EDC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  73+ 8EDE
  74+ 8EDE FE FE            cp $fe
  75+ 8EE0 CC 4D 8F         call z,Fijamos_bucle
  76+ 8EE3 28 25            jr z,Reinicia_el_movimiento
  77+ 8EE5
  78+ 8EE5 FE FD            cp $fd
  79+ 8EE7 20 11            jr nz,1F
  80+ 8EE9
  81+ 8EE9              ; ---
  82+ 8EE9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  83+ 8EE9
  84+ 8EE9 3A 22 8B         ld a,(Ctrl_2)
  85+ 8EEC CB 5F            bit 3,a
  86+ 8EEE 20 1A            jr nz,Reinicia_el_movimiento
  87+ 8EF0
  88+ 8EF0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  89+ 8EF0
  90+ 8EF0 21 22 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  91+ 8EF3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  92+ 8EF5
  93+ 8EF5 CD 5E 8F         call Inicia_Repetimos_movimiento
  94+ 8EF8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  95+ 8EFA              ; ---
  96+ 8EFA
  97+ 8EFA FE 01        1 cp 1
  98+ 8EFC CA 37 8F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  99+ 8EFF
 100+ 8EFF 3D               dec a
 101+ 8F00 32 3B 8B         ld (Cola_de_desplazamiento),a
 102+ 8F03
 103+ 8F03 3A 39 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 104+ 8F06 32 38 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 105+ 8F09              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 106+ 8F09 C9               ret
 107+ 8F0A
 108+ 8F0A              Reinicia_el_movimiento
 109+ 8F0A
 110+ 8F0A 3A 22 8B         ld a,(Ctrl_2)
 111+ 8F0D CB 5F            bit 3,a
 112+ 8F0F 28 1B            jr z,2F
 113+ 8F11
 114+ 8F11              ; (Cola_de_desplazamiento)="254".
 115+ 8F11
 116+ 8F11 21 3A 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 117+ 8F14 35               dec (hl)
 118+ 8F15 20 15            jr nz,2F
 119+ 8F17
 120+ 8F17              ; Fin de las repeticiones del último movimiento.
 121+ 8F17
 122+ 8F17 21 22 8B         ld hl,Ctrl_2
 123+ 8F1A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 124+ 8F1C
 125+ 8F1C 2A 32 8B         ld hl,(Puntero_mov)
 126+ 8F1F 23               inc hl
 127+ 8F20 23               inc hl
 128+ 8F21 23               inc hl
 129+ 8F22 22 32 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 130+ 8F25              ;                                                               ; _ para ejecutar su mandato. :)
 131+ 8F25 7E               ld a,(hl)
 132+ 8F26 32 3B 8B         ld (Cola_de_desplazamiento),a
 133+ 8F29
 134+ 8F29 C3 D1 8E         jp Cola
 135+ 8F2C
 136+ 8F2C CD 69 8F     2 call Inicia_Puntero_mov
 137+ 8F2F
 138+ 8F2F 21 22 8B         ld hl,Ctrl_2
 139+ 8F32 CB 96            res 2,(hl)
 140+ 8F34
 141+ 8F34 C3 A1 8E         jp Movimiento
 142+ 8F37
 143+ 8F37              Siguiente_desplazamiento
 144+ 8F37
 145+ 8F37              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 146+ 8F37              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 147+ 8F37
 148+ 8F37 21 22 8B         ld hl,Ctrl_2
 149+ 8F3A CB 96            res 2,(hl)
 150+ 8F3C
 151+ 8F3C 2A 32 8B         ld hl,(Puntero_mov)
 152+ 8F3F 23               inc hl
 153+ 8F40 23               inc hl
 154+ 8F41 22 32 8B         ld (Puntero_mov),hl
 155+ 8F44
 156+ 8F44 7E               ld a,(hl)
 157+ 8F45 A7               and a
 158+ 8F46 CC C8 8F         call z,Incrementa_Puntero_indice_mov
 159+ 8F49 CA 0A 8F         jp z,Reinicia_el_movimiento
 160+ 8F4C
 161+ 8F4C C9               ret
 162+ 8F4D
 163+ 8F4D              ; Subrutinas -----------------------------------------
 164+ 8F4D              ; ---------- --------- --------- ---------- ----------
 165+ 8F4D              ;
 166+ 8F4D              ;   24/07/23
 167+ 8F4D              ;
 168+ 8F4D              ;   Fijamos_bucle
 169+ 8F4D              ;
 170+ 8F4D              ;
 171+ 8F4D
 172+ 8F4D              Fijamos_bucle
 173+ 8F4D
 174+ 8F4D 3A 36 8B         ld a,(Incrementa_puntero)
 175+ 8F50 3C               inc a
 176+ 8F51 32 37 8B         ld (Incrementa_puntero_backup),a
 177+ 8F54
 178+ 8F54 CD C8 8F         call Incrementa_Puntero_indice_mov
 179+ 8F57 2A 30 8B         ld hl,(Puntero_indice_mov)
 180+ 8F5A 22 34 8B         ld (Puntero_indice_mov_bucle),hl
 181+ 8F5D C9               ret
 182+ 8F5E
 183+ 8F5E              ; ---------- --------- --------- ---------- ----------
 184+ 8F5E              ;
 185+ 8F5E              ;   07/7/23
 186+ 8F5E              ;
 187+ 8F5E              ;   Inicia_Repetimos_movimiento
 188+ 8F5E              ;
 189+ 8F5E              ;
 190+ 8F5E
 191+ 8F5E              Inicia_Repetimos_movimiento
 192+ 8F5E
 193+ 8F5E              ; Iniciamos (Repetimos_movimiento).
 194+ 8F5E
 195+ 8F5E DD 2A 32 8B      ld ix,(Puntero_mov)
 196+ 8F62 DD 7E 02         ld a,(ix+2)
 197+ 8F65 32 3A 8B         ld (Repetimos_movimiento),a
 198+ 8F68
 199+ 8F68 C9               ret
 200+ 8F69
 201+ 8F69              ; ---------- --------- --------- ---------- ----------
 202+ 8F69              ;
 203+ 8F69              ;   26/6/23
 204+ 8F69              ;
 205+ 8F69              ;   Inicia_Puntero_mov
 206+ 8F69              ;
 207+ 8F69              ;
 208+ 8F69
 209+ 8F69 2A 30 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 210+ 8F6C CD 4B 8D         call Extrae_address
 211+ 8F6F 22 32 8B         ld (Puntero_mov),hl
 212+ 8F72 C9               ret
 213+ 8F73
 214+ 8F73              ; ---------- --------- --------- ---------- ----------
 215+ 8F73              ;
 216+ 8F73              ;   27/06/23
 217+ 8F73              ;
 218+ 8F73              ;   Aplica_movimiento.
 219+ 8F73
 220+ 8F73              Aplica_desplazamiento
 221+ 8F73
 222+ 8F73              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 223+ 8F73
 224+ 8F73 2A 32 8B         ld hl, (Puntero_mov)
 225+ 8F76
 226+ 8F76 7E               ld a,(hl)
 227+ 8F77 E6 F0            and $f0
 228+ 8F79 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 229+ 8F7A
 230+ 8F7A CB 7E            bit 7,(hl)
 231+ 8F7C 28 03            jr z,1F
 232+ 8F7E CD 7A 9B         call Mov_up
 233+ 8F81 2A 32 8B     1 ld hl, (Puntero_mov)
 234+ 8F84 CB 76            bit 6,(hl)
 235+ 8F86 28 03            jr z,2F
 236+ 8F88 CD 41 9B         call Mov_down
 237+ 8F8B
 238+ 8F8B              ; Se ha aplicado reinicio ???
 239+ 8F8B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 240+ 8F8B
 241+ 8F8B              ;    ld a,(Ctrl_3)
 242+ 8F8B              ;    bit 1,a
 243+ 8F8B              ;    ret nz
 244+ 8F8B
 245+ 8F8B 2A 32 8B     2 ld hl, (Puntero_mov)
 246+ 8F8E CB 6E            bit 5,(hl)
 247+ 8F90 28 03            jr z,3F
 248+ 8F92 CD E0 9C         call Mov_left
 249+ 8F95 2A 32 8B     3 ld hl, (Puntero_mov)
 250+ 8F98 CB 66            bit 4,(hl)
 251+ 8F9A C8               ret z
 252+ 8F9B CD BD 9B         call Mov_right
 253+ 8F9E C9               ret
 254+ 8F9F
 255+ 8F9F              ; ---------- --------- --------- ---------- ----------
 256+ 8F9F              ;
 257+ 8F9F              ;   26/06/23
 258+ 8F9F              ;
 259+ 8F9F              ;   Ajusta_velocidad_desplazamiento.
 260+ 8F9F
 261+ 8F9F              Ajusta_velocidad_desplazamiento
 262+ 8F9F
 263+ 8F9F              ; 1er byte de la cadena de movimiento.
 264+ 8F9F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 265+ 8F9F
 266+ 8F9F CD BD 8F         call Extrae_nibble_alto
 267+ 8FA2
 268+ 8FA2 32 26 8B         ld (Vel_up),a
 269+ 8FA5 79               ld a,c
 270+ 8FA6 E6 0F            and $0f
 271+ 8FA8 32 27 8B         ld (Vel_down),a
 272+ 8FAB
 273+ 8FAB              ; Saltamos al 2º byte de la cadena de movimiento.
 274+ 8FAB              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 275+ 8FAB
 276+ 8FAB 23               inc hl
 277+ 8FAC CD BD 8F         call Extrae_nibble_alto
 278+ 8FAF
 279+ 8FAF 32 24 8B         ld (Vel_left),a
 280+ 8FB2 79               ld a,c
 281+ 8FB3 E6 0F            and $0f
 282+ 8FB5 32 25 8B         ld (Vel_right),a
 283+ 8FB8
 284+ 8FB8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 285+ 8FB8
 286+ 8FB8 23               inc hl
 287+ 8FB9 22 32 8B         ld (Puntero_mov),hl
 288+ 8FBC C9               ret
 289+ 8FBD
 290+ 8FBD 06 04        Extrae_nibble_alto ld b,4
 291+ 8FBF 7E               ld a,(hl)
 292+ 8FC0 4F               ld c,a
 293+ 8FC1 E6 F0            and $f0
 294+ 8FC3 CB 3F        1 srl a
 295+ 8FC5 10 FC            djnz 1B
 296+ 8FC7 C9               ret
 297+ 8FC8
 298+ 8FC8              ; ---------- --------- --------- ---------- ----------
 299+ 8FC8              ;
 300+ 8FC8              ;   5/7/23
 301+ 8FC8              ;
 302+ 8FC8              ;   Incrementa_Puntero_indice_mov
 303+ 8FC8
 304+ 8FC8              Incrementa_Puntero_indice_mov
 305+ 8FC8
 306+ 8FC8 21 36 8B         ld hl,Incrementa_puntero
 307+ 8FCB 34               inc (hl)
 308+ 8FCC
 309+ 8FCC 2A 30 8B         ld hl,(Puntero_indice_mov)
 310+ 8FCF 01 02 00         ld bc,2
 311+ 8FD2 A7               and a
 312+ 8FD3 09               add hl,bc
 313+ 8FD4 22 30 8B         ld (Puntero_indice_mov),hl
 314+ 8FD7
 315+ 8FD7 7E               ld a,(hl)
 316+ 8FD8 A7               and a
 317+ 8FD9
 318+ 8FD9              ;! STOP. Fin del patrón de movimiento de la entidad.
 319+ 8FD9
 320+ 8FD9              ;    jr z,$
 321+ 8FD9
 322+ 8FD9              ;! Reinicia el Patrón de movimiento.
 323+ 8FD9
 324+ 8FD9 CC DE 8F         call z,Inicializa_Puntero_indice_mov_2
 325+ 8FDC
 326+ 8FDC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 327+ 8FDD
 328+ 8FDD C9               ret
 329+ 8FDE
 330+ 8FDE              ; ---------- --------- --------- ---------- ----------
 331+ 8FDE              ;
 332+ 8FDE              ;   15/01/24
 333+ 8FDE              ;
 334+ 8FDE              ;   Inicializa_Puntero_indice_mov
 335+ 8FDE
 336+ 8FDE              Inicializa_Puntero_indice_mov_2
 337+ 8FDE
 338+ 8FDE              ; Existe etiqueta de bucle principal???
 339+ 8FDE
 340+ 8FDE 2A 34 8B         ld hl,(Puntero_indice_mov_bucle)
 341+ 8FE1 24               inc h
 342+ 8FE2 25               dec h
 343+ 8FE3 28 05            jr z,2F
 344+ 8FE5
 345+ 8FE5 22 30 8B         ld (Puntero_indice_mov),hl
 346+ 8FE8 18 14            jr 3F
 347+ 8FEA
 348+ 8FEA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 349+ 8FEA
 350+ 8FEA 3A 36 8B     2 ld a,(Incrementa_puntero)
 351+ 8FED 47               ld b,a
 352+ 8FEE
 353+ 8FEE 2A 30 8B         ld hl,(Puntero_indice_mov)
 354+ 8FF1 2B           1 dec hl
 355+ 8FF2 2B               dec hl
 356+ 8FF3 10 FC            djnz 1B
 357+ 8FF5 22 30 8B         ld (Puntero_indice_mov),hl
 358+ 8FF8
 359+ 8FF8 AF               xor a
 360+ 8FF9 32 36 8B         ld (Incrementa_puntero),a
 361+ 8FFC 18 06            jr 4F
 362+ 8FFE
 363+ 8FFE 3A 37 8B     3 ld a,(Incrementa_puntero_backup)
 364+ 9001 32 36 8B         ld (Incrementa_puntero),a
 365+ 9004 C9           4 ret
 366+ 9005
 367+ 9005              ; ----------------------------------------------------------------------
 368+ 9005              ;
 369+ 9005              ;   30/01/24
 370+ 9005              ;
 371+ 9005              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 372+ 9005
 373+ 9005 3A FA 8A     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 374+ 9008 CD 76 8A         call Calcula_salto_en_BC
 375+ 900B 21 28 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 376+ 900E A7               and a
 377+ 900F ED 4A            adc hl,bc
 378+ 9011 C9               ret
 379+ 9012
 380+ 9012              ; ----------------------------------------------------------------------
 381+ 9012              ;
 382+ 9012              ;   30/01/24
 383+ 9012              ;
 384+ 9012              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 385+ 9012              ;
 386+ 9012              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 387+ 9012
 388+ 9012 4E           Transfiere_datos_de_contadores ld c,(hl)
 389+ 9013 23               inc hl
 390+ 9014 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 391+ 9015 69               ld l,c
 392+ 9016 60               ld h,b
 393+ 9017 22 1B 8B         ld (Contador_de_mov_masticados),hl
 394+ 901A C9               ret
 395+ 901B
# file closed: Movimiento.asm
1757  901B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 901B              ; ******************************************************************************************************************************************************************************************
   2+ 901B              ;
   3+ 901B              ;   21/07/23
   4+ 901B              ;
   5+ 901B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 901B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 901B              ;
   8+ 901B              ;
   9+ 901B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 901B              ;
  11+ 901B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 901B              ;               _ hacen las entidades hacia abajo.
  13+ 901B              ;
  14+ 901B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 901B              ;
  16+ 901B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 901B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 901B              ;
  19+ 901B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 901B              ;           _ la bala.
  21+ 901B              ;
  22+ 901B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 901B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 901B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 901B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 901B              ;           _ en el momento de generarse la bala)).
  27+ 901B
  28+ 901B              Genera_disparo
  29+ 901B
  30+ 901B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 901B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 901B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 901B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 901B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 901B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 901B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 901B
  38+ 901B              ; Exclusiones:
  39+ 901B
  40+ 901B 3A 27 8B         ld a,(Vel_down)
  41+ 901E 47               ld b,a
  42+ 901F 3A 6D 8B         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9022 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9023 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9024 3A 1E 8B         ld a,(Columnas)
  46+ 9027 47               ld b,a
  47+ 9028 3A FC 8A         ld a,(Columns)
  48+ 902B B8               cp b
  49+ 902C C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 902D
  51+ 902D              ; ----- ----- -----
  52+ 902D
  53+ 902D 3A 1D 8B         ld a,(Ctrl_0)
  54+ 9030 CB 77            bit 6,a
  55+ 9032 20 06            jr nz,14F
  56+ 9034
  57+ 9034 3A 02 8B         ld a,(Coordenada_y)
  58+ 9037 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9039 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 903A
  61+ 903A 21 31 81     14 ld hl,Indice_disparo
  62+ 903D 3A 03 8B         ld a,(CTRL_DESPLZ)
  63+ 9040 4F               ld c,a
  64+ 9041 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9043              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9043              ;                                            ""        ""       "f9", B="1"
  67+ 9043              ;                                            ""        ""       "fb", B="2"
  68+ 9043              ;                                            ""        ""       "fb", B="3"
  69+ 9043 A7               and a
  70+ 9044 28 10            jr z,1F
  71+ 9046 E6 01            and 1
  72+ 9048 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9049
  74+ 9049 79               ld a,c
  75+ 904A 16 F9            ld d,$f9
  76+ 904C 23           2 inc hl
  77+ 904D 23               inc hl
  78+ 904E 04               inc b
  79+ 904F BA               cp d
  80+ 9050 28 04            jr z,1F
  81+ 9052 14               inc d
  82+ 9053 14               inc d
  83+ 9054 18 F6            jr 2B
  84+ 9056
  85+ 9056 CD 4B 8D     1 call Extrae_address
  86+ 9059 E5               push hl
  87+ 905A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 905C DD 21 CE 9A  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9060
  90+ 9060              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9060              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9060
  93+ 9060 3A 1D 8B         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9063 CB 77            bit 6,a
  95+ 9065 20 04            jr nz,19F
  96+ 9067
  97+ 9067 AF               xor a
  98+ 9068 32 76 8B         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 906B
 100+ 906B 3A 0F 8B     19 ld a,(Cuad_objeto)
 101+ 906E FE 02            cp 2
 102+ 9070 38 66            jr c,3F
 103+ 9072 28 64            jr z,3F
 104+ 9074
 105+ 9074              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9074
 107+ 9074 E6 01            and 1
 108+ 9076 28 30            jr z,4F
 109+ 9078
 110+ 9078              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9078              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9078              ;
 113+ 9078              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9078              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9078              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9078
 117+ 9078 2A FD 8A     	ld hl,(Posicion_actual)
 118+ 907B
 119+ 907B              ;   Amadeus o entidad ???.
 120+ 907B
 121+ 907B 3A 1D 8B         ld a,(Ctrl_0)
 122+ 907E CB 77            bit 6,a
 123+ 9080 28 0A            jr z,8F
 124+ 9082
 125+ 9082              ; 	Dispara Amadeus.
 126+ 9082
 127+ 9082 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9084 CD F7 97         call PreviousScan
 129+ 9087 CD F7 97         call PreviousScan
 130+ 908A
 131+ 908A              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 908A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 908A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 908A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 908A
 136+ 908A 18 11            jr 10F
 137+ 908C
 138+ 908C              ; 	Dispara Entidad.
 139+ 908C
 140+ 908C 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 908F              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 908F
 143+ 908F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 908F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 908F
 146+ 908F C5               push bc
 147+ 9090 06 10            ld b,16
 148+ 9092 CD E8 97     9 call NextScan
 149+ 9095 10 FB            djnz 9B
 150+ 9097 C1               pop bc
 151+ 9098 CD 02 91         call Ajusta_disparo_parte_izquierda
 152+ 909B 18 06            jr 17F
 153+ 909D
 154+ 909D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 909D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 909D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 909D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 909D
 159+ 909D CD 02 91     10 call Ajusta_disparo_parte_izquierda
 160+ 90A0 CD 77 91         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 90A3              ;                                                      ; _al generar el disparo.
 162+ 90A3
 163+ 90A3              ; 	LLegados a este punto tendremos:
 164+ 90A3              ;
 165+ 90A3              ;       Puntero_objeto_disparo en IY.
 166+ 90A3              ;       Rutinas_de_impresion en IX.
 167+ 90A3              ;       Puntero_de_impresion en HL.
 168+ 90A3              ;       Impacto/Dirección en BC.
 169+ 90A3
 170+ 90A3 CD 0A 91     17 call Almacena_disparo
 171+ 90A6 18 52            jr 6F                                             ; RET.
 172+ 90A8
 173+ 90A8              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 90A8              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 90A8              ;
 176+ 90A8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 90A8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 90A8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 90A8
 180+ 90A8 2A FD 8A     4 ld hl,(Posicion_actual)
 181+ 90AB
 182+ 90AB              ;   Amadeus o entidad ???.
 183+ 90AB
 184+ 90AB 3A 1D 8B         ld a,(Ctrl_0)
 185+ 90AE CB 77            bit 6,a
 186+ 90B0 28 0A            jr z,11F
 187+ 90B2
 188+ 90B2              ; 	Dispara Amadeus.
 189+ 90B2
 190+ 90B2 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 90B4 CD F7 97         call PreviousScan
 192+ 90B7 CD F7 97         call PreviousScan
 193+ 90BA
 194+ 90BA              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 90BA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 90BA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 90BA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 90BA
 199+ 90BA 18 11            jr 13F
 200+ 90BC
 201+ 90BC              ; 	Dispara Entidad.
 202+ 90BC
 203+ 90BC 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 90BF              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 90BF
 206+ 90BF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 90BF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 90BF
 209+ 90BF C5               push bc
 210+ 90C0 06 10            ld b,16
 211+ 90C2 CD E8 97     12 call NextScan
 212+ 90C5 10 FB            djnz 12B
 213+ 90C7 C1               pop bc
 214+ 90C8
 215+ 90C8 CD FB 90         call Ajusta_disparo_parte_derecha
 216+ 90CB 18 06            jr 18F
 217+ 90CD
 218+ 90CD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 90CD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 90CD              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 90CD              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 90CD
 223+ 90CD CD FB 90     13 call Ajusta_disparo_parte_derecha
 224+ 90D0 CD 77 91         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 90D3              ;                                                       ; _al generar el disparo.
 226+ 90D3
 227+ 90D3              ; LLegados a este punto tendremos:
 228+ 90D3              ;
 229+ 90D3              ;       Puntero_objeto_disparo en IY.
 230+ 90D3              ;       Rutinas_de_impresion en IX.
 231+ 90D3              ;       Puntero_de_impresion en HL.
 232+ 90D3              ;       Impacto/Dirección en BC.
 233+ 90D3
 234+ 90D3 CD 0A 91     18 call Almacena_disparo
 235+ 90D6 18 22            jr 6F                                               ; RET.
 236+ 90D8
 237+ 90D8              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 90D8
 239+ 90D8 28 11        3 jr z,5F
 240+ 90DA
 241+ 90DA              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 90DA              ;
 243+ 90DA              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 90DA              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 90DA              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 90DA              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 90DA
 248+ 90DA              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 90DA              ;	   ""        ""       "f9", B="1"
 250+ 90DA              ;	   ""        ""       "fb", B="2"
 251+ 90DA              ; 	   ""        ""       "fb", B="3"
 252+ 90DA
 253+ 90DA 2A FD 8A     	ld hl,(Posicion_actual)
 254+ 90DD CD E8 97     	call NextScan
 255+ 90E0
 256+ 90E0              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 90E0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 90E0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 90E0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 90E0
 261+ 90E0 CD 02 91         call Ajusta_disparo_parte_izquierda
 262+ 90E3
 263+ 90E3              ; 	No se produce impacto. B="$80"
 264+ 90E3              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 90E3
 266+ 90E3 01 80 80         ld bc,$8080
 267+ 90E6
 268+ 90E6              ; 	LLegados a este punto tendremos:
 269+ 90E6              ;
 270+ 90E6              ;       Puntero_objeto_disparo en IY.
 271+ 90E6              ;       Rutinas_de_impresion en IX.
 272+ 90E6              ;       Puntero_de_impresion en HL.
 273+ 90E6              ;       Impacto/Dirección en BC.
 274+ 90E6
 275+ 90E6 CD 0A 91         call Almacena_disparo
 276+ 90E9 18 0F            jr 6F                                           ; RET.
 277+ 90EB
 278+ 90EB              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 90EB              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 90EB              ;
 281+ 90EB              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 90EB              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 90EB              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 90EB              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 90EB
 286+ 90EB 2A FD 8A     5 ld hl,(Posicion_actual)
 287+ 90EE CD E8 97     	call NextScan
 288+ 90F1
 289+ 90F1              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 90F1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 90F1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 90F1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 90F1
 294+ 90F1 CD FB 90         call Ajusta_disparo_parte_derecha
 295+ 90F4
 296+ 90F4              ; 	No se produce impacto. B="$80"
 297+ 90F4              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 90F4
 299+ 90F4 01 80 80     15 ld bc,$8080
 300+ 90F7
 301+ 90F7              ; 	LLegados a este punto tendremos:
 302+ 90F7              ;
 303+ 90F7              ;       Puntero_objeto_disparo en IY.
 304+ 90F7              ;       Rutinas_de_impresion en IX.
 305+ 90F7              ;       Puntero_de_impresion en HL.
 306+ 90F7              ;       Impacto/Dirección en BC.
 307+ 90F7
 308+ 90F7 CD 0A 91         call Almacena_disparo
 309+ 90FA
 310+ 90FA C9           6 ret
 311+ 90FB
 312+ 90FB              ; ----------------------------------------------------------------
 313+ 90FB              ;
 314+ 90FB              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 90FB              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 90FB              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 90FB
 318+ 90FB 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 90FC FE 02            cp 2
 320+ 90FE 38 01            jr c,1F
 321+ 9100 23               inc hl
 322+ 9101 C9           1 ret
 323+ 9102
 324+ 9102 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9103 FE 01        	cp 1
 326+ 9105 20 01        	jr nz,1F
 327+ 9107 2B           	dec hl
 328+ 9108 2B           1 dec hl
 329+ 9109 C9               ret
 330+ 910A
 331+ 910A              ; ----------------------------------------------------------------
 332+ 910A              ;
 333+ 910A              ;   25/02/23
 334+ 910A              ;
 335+ 910A              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 910A              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 910A              ;
 338+ 910A              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 910A              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 910A
 341+ 910A              Almacena_disparo
 342+ 910A
 343+ 910A E5               push hl  										; HL contiene el puntero de impresión.
 344+ 910B F1               pop af
 345+ 910C 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 910D
 347+ 910D 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 910E E6 01            and 1
 349+ 9110 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9112              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9112              ; 	Dispara AMADEUS.
 352+ 9112
 353+ 9112              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9112              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9112              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9112              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9112
 358+ 9112 C5               push bc
 359+ 9113 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9116 2A 60 8B         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9119 A7               and a
 362+ 911A ED 42            sbc hl,bc
 363+ 911C CC D0 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 911F C1               pop bc
 365+ 9120 28 54            jr z,4F
 366+ 9122
 367+ 9122 2A 60 8B         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9125 23               inc hl
 369+ 9126 23               inc hl
 370+ 9127 22 60 8B         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 912A              ;                                                   ; _ Disparo_(+1).
 372+ 912A 18 18            jr 2F
 373+ 912C
 374+ 912C              ; Dispara una entidad.
 375+ 912C
 376+ 912C C5           1 push bc
 377+ 912D 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9130 2A 5E 8B         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9133 A7               and a
 380+ 9134 ED 42            sbc hl,bc
 381+ 9136 CC C9 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9139 C1               pop bc
 383+ 913A 28 3A            jr z,4F
 384+ 913C
 385+ 913C 2A 5E 8B         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 913F 23               inc hl
 387+ 9140 23               inc hl
 388+ 9141 22 5E 8B         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9144              ;                                                   ; _ Disparo_(+1).
 390+ 9144 CD 4B 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9147              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9147              ;
 393+ 9147              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9147              ;                                                     Rutinas_de_impresion en IX.
 395+ 9147              ;                                                     Puntero_de_impresion en HL.
 396+ 9147              ;                                                     Impacto/Dirección en BC.
 397+ 9147
 398+ 9147 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9148 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9149 23               inc hl                                          ; _ al siguiente.
 401+ 914A A7               and a
 402+ 914B 20 C0            jr nz,3B
 403+ 914D
 404+ 914D 08               ex af,af
 405+ 914E ED 73 4D 8B      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9152 F9               ld sp,hl
 407+ 9153
 408+ 9153 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9155 F5               push af                                         ; Puntero de impresión.
 410+ 9156 FD E5            push iy                                         ; Puntero objeto.
 411+ 9158 C5               push bc                                         ; Control.
 412+ 9159
 413+ 9159 ED 7B 4D 8B      ld sp,(Stack)
 414+ 915D
 415+ 915D              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 915D
 417+ 915D 21 3C 8B     	ld hl,Ctrl_1
 418+ 9160 CB C6        	set 0,(hl)
 419+ 9162
 420+ 9162 DD E5        	push ix
 421+ 9164 E1               pop hl
 422+ 9165 F5               push af
 423+ 9166 DD E1            pop ix
 424+ 9168
 425+ 9168 CD BF 80     	call Guarda_foto_registros
 426+ 916B
 427+ 916B 21 3C 8B     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 916E CB 86        	res 0,(hl)
 429+ 9170
 430+ 9170              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9170              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9170
 433+ 9170 CD D0 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9173 CD C9 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9176
 436+ 9176 C9           4 ret
 437+ 9177
 438+ 9177              ; ----------------------------------------------------------------
 439+ 9177              ;
 440+ 9177              ;   4/3/23
 441+ 9177              ;
 442+ 9177              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9177              ;   _ al generarse el disparo.
 444+ 9177              ;
 445+ 9177              ;       "$80" ..... No se produce colisión.
 446+ 9177              ;       "$81" ..... Se produce colisión.
 447+ 9177              ;
 448+ 9177              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9177              ;         _ que forman el disparo.
 450+ 9177
 451+ 9177
 452+ 9177              Comprueba_Colision
 453+ 9177
 454+ 9177              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9177
 456+ 9177 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9179 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 917A
 459+ 917A CD B0 91         call Modifica_H_Velocidad_disparo
 460+ 917D
 461+ 917D 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 917E FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9180 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9182
 465+ 9182 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9184 CD A0 91         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9187
 468+ 9187 7B               ld a,e
 469+ 9188 E6 01            and 1
 470+ 918A 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 918C              ;                                                  ; _ para activar IMPACTO.
 472+ 918C E1               pop hl
 473+ 918D E5               push hl
 474+ 918E CD E8 97         call NextScan
 475+ 9191
 476+ 9191 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9192 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9194 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9196              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9196 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9198 CD A0 91         call Bucle_2
 482+ 919B
 483+ 919B 43           1 ld b,e
 484+ 919C E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 919D FD E1            pop iy
 486+ 919F C9               ret
 487+ 91A0
 488+ 91A0              ; ---------- ----------
 489+ 91A0
 490+ 91A0 06 02        Bucle_2 ld b,2
 491+ 91A2 FD 7E 00     2 ld a,(iy)
 492+ 91A5 A6               and (hl)
 493+ 91A6 28 02            jr z,1F
 494+ 91A8 1E 81            ld e,$81
 495+ 91AA 23           1 inc hl
 496+ 91AB FD 23            inc iy
 497+ 91AD 10 F3            djnz 2B
 498+ 91AF C9               ret
 499+ 91B0
 500+ 91B0              ; ---------- ----------
 501+ 91B0              ;
 502+ 91B0              ;   21/7/23
 503+ 91B0
 504+ 91B0              Modifica_H_Velocidad_disparo
 505+ 91B0
 506+ 91B0 3A 6D 8B         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 91B3 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 91B5 D0               ret nc                                         ; _ incrementamos H.
 509+ 91B6 24               inc h
 510+ 91B7
 511+ 91B7 C9               ret
 512+ 91B8
 513+ 91B8              ; -------------------------------------------------------------------------------------------------------------
 514+ 91B8              ;
 515+ 91B8              ;   04/12/23
 516+ 91B8              ;
 517+ 91B8              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 91B8              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 91B8              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 91B8              ;
 521+ 91B8              ;   MODIFICA: HL,DE,B y A.
 522+ 91B8
 523+ 91B8              Genera_coordenadas_X
 524+ 91B8
 525+ 91B8              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 91B8              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 91B8
 528+ 91B8              ;   Limpiamos almacenes.
 529+ 91B8
 530+ 91B8 CD E9 91         call Limpia_Coordenadas_X
 531+ 91BB
 532+ 91BB              ;   Almacenamos coordenadas X.
 533+ 91BB
 534+ 91BB              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 91BB
 536+ 91BB 2A 17 8B         ld hl,(Puntero_de_impresion)
 537+ 91BE 11 6A 8B         ld de,Coordenadas_X_Entidad
 538+ 91C1 06 02            ld b,2
 539+ 91C3
 540+ 91C3 3A 03 8B         ld a,(CTRL_DESPLZ)
 541+ 91C6 A7               and a
 542+ 91C7 28 01            jr z,1F
 543+ 91C9 04               inc b
 544+ 91CA
 545+ 91CA CD E0 91     1 call Guarda_coordenadas_X
 546+ 91CD
 547+ 91CD              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 91CD
 549+ 91CD 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 91D0 11 67 8B         ld de,Coordenadas_X_Amadeus
 551+ 91D3 06 02            ld b,2
 552+ 91D5
 553+ 91D5 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 91D8 A7               and a
 555+ 91D9 28 01            jr z,2F
 556+ 91DB 04               inc b
 557+ 91DC
 558+ 91DC CD E0 91     2 call Guarda_coordenadas_X
 559+ 91DF
 560+ 91DF              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 91DF
 562+ 91DF C9               ret
 563+ 91E0
 564+ 91E0              ; ----- ----- ----- ----- -----
 565+ 91E0
 566+ 91E0 7D           Guarda_coordenadas_X  ld a,l
 567+ 91E1 E6 1F            and $1f
 568+ 91E3 12           1 ld (de),a
 569+ 91E4 3C               inc a
 570+ 91E5 13               inc de
 571+ 91E6 10 FB            djnz 1B
 572+ 91E8 C9               ret
 573+ 91E9
 574+ 91E9 AF           Limpia_Coordenadas_X xor a
 575+ 91EA 06 06            ld b,6
 576+ 91EC 21 67 8B         ld hl,Coordenadas_X_Amadeus
 577+ 91EF 77           1 ld (hl),a
 578+ 91F0 23               inc hl
 579+ 91F1 10 FC            djnz 1B
 580+ 91F3 C9               ret
 581+ 91F4
 582+ 91F4              ; ----- ----- ----- ----- -----
 583+ 91F4
 584+ 91F4              Compara_coordenadas_X
 585+ 91F4
 586+ 91F4 06 03            ld b,3
 587+ 91F6 11 6C 8B         ld de,Coordenadas_X_Entidad+2
 588+ 91F9
 589+ 91F9 1A               ld a,(de)
 590+ 91FA A7               and a
 591+ 91FB 20 01            jr nz,2F
 592+ 91FD 05               dec b
 593+ 91FE
 594+ 91FE 1B           2 dec de
 595+ 91FF 1B               dec de
 596+ 9200 21 67 8B         ld hl,Coordenadas_X_Amadeus
 597+ 9203
 598+ 9203 D5           1 push de
 599+ 9204 E5               push hl
 600+ 9205 C5               push bc
 601+ 9206
 602+ 9206 CD 10 92         call Comparando
 603+ 9209
 604+ 9209 C1               pop bc
 605+ 920A E1               pop hl
 606+ 920B D1               pop de
 607+ 920C
 608+ 920C 13               inc de
 609+ 920D 10 F4            djnz 1B
 610+ 920F
 611+ 920F C9               ret
 612+ 9210
 613+ 9210              ; ----- ----- ----- ----- -----
 614+ 9210              ;
 615+ 9210              ;   4/12/23
 616+ 9210              ;
 617+ 9210              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9210
 619+ 9210 06 03        Comparando ld b,3
 620+ 9212 1A               ld a,(de)
 621+ 9213 4E           2 ld c,(hl)
 622+ 9214 B9               cp c
 623+ 9215 28 04            jr z,1F
 624+ 9217 23               inc hl
 625+ 9218 10 F9            djnz 2B
 626+ 921A C9               ret
 627+ 921B
 628+ 921B 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 921D 32 10 8B         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9220 21 62 8B         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9223 CB D6            set 2,(hl)
 632+ 9225 C9               ret
 633+ 9226
 634+ 9226              ; -----------------------------------------------------------------------
 635+ 9226              ;
 636+ 9226              ;   7/12/23
 637+ 9226              ;
 638+ 9226
 639+ 9226              Detecta_colision_nave_entidad
 640+ 9226
 641+ 9226              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9226
 643+ 9226 FD 2A FF 8A      ld iy,(Puntero_objeto)
 644+ 922A 2A 17 8B         ld hl,(Puntero_de_impresion)
 645+ 922D
 646+ 922D E5               push hl
 647+ 922E
 648+ 922E              ; ----- ----- -----
 649+ 922E 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9230 06 0A            ld b,10
 651+ 9232 CD 62 92     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9235 7B               ld a,e
 653+ 9236 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9238 38 0E            jr c,3F
 655+ 923A
 656+ 923A              ; LLegados a este punto:
 657+ 923A              ;
 658+ 923A              ;   HAY COLISIÓN !!!!!.
 659+ 923A              ;
 660+ 923A              ;   .db (Impacto) de Amadeus a "1".
 661+ 923A              ;   SET el bit3 de (Impacto2).
 662+ 923A              ;
 663+ 923A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 923A
 665+ 923A 21 10 8B         ld hl,Impacto
 666+ 923D 36 01            ld (hl),1
 667+ 923F 21 62 8B         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9242 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9244 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9246
 671+ 9246 18 18            jr 1F
 672+ 9248
 673+ 9248              ; -----
 674+ 9248
 675+ 9248 E1           3 pop hl
 676+ 9249 CD E8 97         call NextScan
 677+ 924C E5               push hl
 678+ 924D 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 924E FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9250 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9252 30 0C            jr nc,1F
 682+ 9254              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9254 10 DC            djnz 2B
 684+ 9256
 685+ 9256              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9256
 687+ 9256              ; LLegados a este punto:
 688+ 9256              ;
 689+ 9256              ;   NO HAY COLISIÓN !!!!!.
 690+ 9256              ;
 691+ 9256              ;   .db (Impacto) de Amadeus a "0".
 692+ 9256              ;   RES el bit2 de (Impacto2).
 693+ 9256              ;
 694+ 9256              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9256              ;   Lo colocamos a "0".
 696+ 9256
 697+ 9256 21 62 8B         ld hl,Impacto2
 698+ 9259 CB 96            res 2,(hl)
 699+ 925B 2A 63 8B         ld hl,(Entidad_sospechosa_de_colision)
 700+ 925E 36 00            ld (hl),0
 701+ 9260
 702+ 9260 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9261 C9               ret
 704+ 9262
 705+ 9262               ; ---------- ----------
 706+ 9262
 707+ 9262 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9263 3A FC 8A         ld a,(Columns)
 709+ 9266 47               ld b,a
 710+ 9267 FD 7E 00     2 ld a,(iy)
 711+ 926A BE               cp (hl)
 712+ 926B 28 01            jr z,1F
 713+ 926D
 714+ 926D 1C               inc e
 715+ 926E
 716+ 926E 23           1 inc hl
 717+ 926F FD 23            inc iy
 718+ 9271 10 F4            djnz 2B
 719+ 9273 C1               pop bc
 720+ 9274 C9               ret
 721+ 9275
 722+ 9275              ; -------------------------------------------------------------------------------------------------------------
 723+ 9275              ;
 724+ 9275              ;   13/03/23
 725+ 9275              ;
 726+ 9275              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9275              ;
 728+ 9275              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9275
 730+ 9275 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9278 7E               ld a,(hl)
 732+ 9279 A7               and a
 733+ 927A C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 927B
 735+ 927B 44               ld b,h
 736+ 927C 4D               ld c,l
 737+ 927D 2A 55 8B         ld hl,(Stack_snapshot_disparos)
 738+ 9280 E5               push hl
 739+ 9281 A7               and a
 740+ 9282 ED 42            sbc hl,bc
 741+ 9284 E5               push hl
 742+ 9285 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9286
 744+ 9286 E1               pop hl
 745+ 9287 54               ld d,h
 746+ 9288 5D               ld e,l
 747+ 9289 1B               dec de
 748+ 928A ED B8            lddr                                                ; Limpiamos.
 749+ 928C
 750+ 928C 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 928F 22 55 8B         ld (Stack_snapshot_disparos),hl
 752+ 9292
 753+ 9292 C9               ret
 754+ 9293
 755+ 9293              ; -------------------------------------------------------------------------------------------------------------
 756+ 9293              ;
 757+ 9293              ;   18/07/23
 758+ 9293              ;
 759+ 9293
 760+ 9293              Motor_de_disparos
 761+ 9293
 762+ 9293              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9293
 764+ 9293 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9296 2A 60 8B         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9299
 767+ 9299 CD 4B 8D     2 call Extrae_address
 768+ 929C 7E               ld a,(hl)
 769+ 929D A7               and a
 770+ 929E 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 92A0
 772+ 92A0              ; ----- ----- ----- ----- ----- -----
 773+ 92A0
 774+ 92A0 C5               push bc
 775+ 92A1 CD 65 93         call foto_disparo_a_borrar
 776+ 92A4
 777+ 92A4              ; Existe colisión con este disparo???
 778+ 92A4
 779+ 92A4 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 92A5 7E               ld a,(hl)
 781+ 92A6 2B               dec hl
 782+ 92A7 E6 01            and 1
 783+ 92A9 28 1D            jr z,9F
 784+ 92AB
 785+ 92AB              ;   En este punto:
 786+ 92AB              ;
 787+ 92AB              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 92AB              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 92AB              ;   _con la entidad).
 790+ 92AB              ;
 791+ 92AB              ;   Disparo_2A defw 0                                ; Control.
 792+ 92AB              ;    defw 0                                          ; Puntero objeto.
 793+ 92AB              ;    defw 0                                          ; Puntero de impresión.
 794+ 92AB              ;    defw 0                                          ; Rutina de impresión.
 795+ 92AB
 796+ 92AB E5               push hl
 797+ 92AC
 798+ 92AC 06 04            ld b,4
 799+ 92AE 23           19 inc hl
 800+ 92AF 10 FD            djnz 19B
 801+ 92B1
 802+ 92B1 CD 4B 8D         call Extrae_address
 803+ 92B4 CD BF 9E         call Genera_coordenadas_disparo
 804+ 92B7
 805+ 92B7              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 92B7
 807+ 92B7 21 65 8B         ld hl,Coordenadas_disparo_certero
 808+ 92BA 72               ld (hl),d
 809+ 92BB 23               inc hl
 810+ 92BC 73               ld (hl),e
 811+ 92BD
 812+ 92BD              ; Elimino el disparo de la base de datos.
 813+ 92BD
 814+ 92BD E1               pop hl
 815+ 92BE CD E4 93         call Elimina_disparo_de_base_de_datos
 816+ 92C1 21 62 8B         ld hl,Impacto2
 817+ 92C4 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 92C6
 819+ 92C6 18 06            jr 11F
 820+ 92C8
 821+ 92C8 CD 8E 93     9 call Mueve_disparo
 822+ 92CB CD 65 93         call foto_disparo_a_borrar
 823+ 92CE
 824+ 92CE C1           11 pop bc
 825+ 92CF 18 04            jr 7F
 826+ 92D1
 827+ 92D1              ; ----- ----- ----- ----- ----- -----
 828+ 92D1
 829+ 92D1 ED 42        1 sbc hl,bc
 830+ 92D3 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 92D5
 832+ 92D5 2A 60 8B     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 92D8 23               inc hl
 834+ 92D9 23               inc hl
 835+ 92DA 22 60 8B         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 92DD 18 BA            jr 2B
 837+ 92DF
 838+ 92DF CD D0 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 92E2              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 92E2
 841+ 92E2              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 92E2
 843+ 92E2 01 9F 86         ld bc,Disparo_11
 844+ 92E5 2A 5E 8B         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 92E8
 846+ 92E8 CD 4B 8D     5 call Extrae_address
 847+ 92EB 7E               ld a,(hl)
 848+ 92EC A7               and a
 849+ 92ED 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 92EF
 851+ 92EF              ; ----- ----- ----- ----- ----- -----
 852+ 92EF
 853+ 92EF C5               push bc
 854+ 92F0 CD 65 93         call foto_disparo_a_borrar
 855+ 92F3
 856+ 92F3              ; Existe colisión con este disparo???
 857+ 92F3
 858+ 92F3 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 92F4 7E               ld a,(hl)
 860+ 92F5 2B               dec hl
 861+ 92F6 E6 01            and 1
 862+ 92F8 28 4D            jr z,10F
 863+ 92FA
 864+ 92FA              ;! La colisión se produce con Amadeus???
 865+ 92FA              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 92FA
 867+ 92FA E5               push hl
 868+ 92FB
 869+ 92FB 06 04            ld b,4
 870+ 92FD 23           16 inc hl
 871+ 92FE 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9300
 873+ 9300 CD 4B 8D         call Extrae_address
 874+ 9303 CD BF 9E         call Genera_coordenadas_disparo
 875+ 9306
 876+ 9306 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9307 FE 16            cp $16
 878+ 9309 38 2A            jr c,15F
 879+ 930B
 880+ 930B
 881+ 930B              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 930B
 883+ 930B D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 930C
 885+ 930C              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 930C
 887+ 930C 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 930F
 889+ 930F              ; Coordenada X de Amadeus en D.
 890+ 930F
 891+ 930F 7D               ld a,l
 892+ 9310 E6 1F            and $1F
 893+ 9312 57               ld d,a
 894+ 9313
 895+ 9313 21 BB 86         ld hl,Amadeus_db+8
 896+ 9316 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9317
 898+ 9317 21 67 8B         ld hl,Coordenadas_X_Amadeus
 899+ 931A CD E0 91         call Guarda_coordenadas_X
 900+ 931D
 901+ 931D D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 931E
 903+ 931E              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 931E
 905+ 931E 06 02            ld b,2
 906+ 9320 C5           20 push bc
 907+ 9321
 908+ 9321 06 03            ld b,3
 909+ 9323 21 67 8B         ld hl,Coordenadas_X_Amadeus
 910+ 9326 7E           18 ld a,(hl)
 911+ 9327 BA               cp d
 912+ 9328 20 04            jr nz,17F
 913+ 932A
 914+ 932A              ;! Colisión Amadeus !!!!!!!!!!
 915+ 932A
 916+ 932A C1               pop bc
 917+ 932B E1               pop hl
 918+ 932C 18 0D            jr 14F
 919+ 932E
 920+ 932E 23           17 inc hl
 921+ 932F 10 F5            djnz 18B
 922+ 9331
 923+ 9331 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9332
 925+ 9332 C1               pop bc
 926+ 9333 10 EB            djnz 20B
 927+ 9335
 928+ 9335
 929+ 9335              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9335              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9335
 932+ 9335 E1           15 pop hl
 933+ 9336 23               inc hl
 934+ 9337 35               dec (hl)
 935+ 9338 2B               dec hl
 936+ 9339 18 0C            jr 10F
 937+ 933B
 938+ 933B              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 933B              ; _ almacén de coordenadas_X de Amadeus.
 940+ 933B
 941+ 933B E5           14 push hl
 942+ 933C CD E4 93         call Elimina_disparo_de_base_de_datos
 943+ 933F 21 62 8B         ld hl,Impacto2
 944+ 9342 CB CE            set 1,(hl)
 945+ 9344 E1               pop hl
 946+ 9345 18 06            jr 12F
 947+ 9347
 948+ 9347              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9347
 950+ 9347 CD 8E 93     10 call Mueve_disparo
 951+ 934A CD 65 93         call foto_disparo_a_borrar
 952+ 934D C1           12 pop bc
 953+ 934E
 954+ 934E 18 04            jr 8F
 955+ 9350
 956+ 9350              ; ----- ----- ----- ----- ----- -----
 957+ 9350
 958+ 9350 ED 42        4 sbc hl,bc
 959+ 9352 28 0A            jr z,6F
 960+ 9354
 961+ 9354 2A 5E 8B     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9357 23               inc hl
 963+ 9358 23               inc hl
 964+ 9359 22 5E 8B         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 935C 18 8A            jr 5B
 966+ 935E
 967+ 935E CD C9 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9361 CD E9 91         call Limpia_Coordenadas_X
 969+ 9364 C9               ret
 970+ 9365
 971+ 9365              ; ------------------------------------------------------------------
 972+ 9365
 973+ 9365              foto_disparo_a_borrar
 974+ 9365
 975+ 9365 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9366 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9367 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9368
 979+ 9368 E5               push hl
 980+ 9369 23               inc hl
 981+ 936A 23               inc hl
 982+ 936B ED 73 4D 8B      ld (Stack),sp
 983+ 936F F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9370 FD E1            pop iy
 985+ 9372 DD E1            pop ix
 986+ 9374 E1               pop hl
 987+ 9375 ED 7B 4D 8B      ld sp,(Stack)
 988+ 9379 3A 3C 8B         ld a,(Ctrl_1)
 989+ 937C CB C7            set 0,a
 990+ 937E 32 3C 8B         ld (Ctrl_1),a
 991+ 9381 CD BF 80         call Guarda_foto_registros
 992+ 9384 3A 3C 8B         ld a,(Ctrl_1)
 993+ 9387 CB 87            res 0,a
 994+ 9389 32 3C 8B         ld (Ctrl_1),a
 995+ 938C E1               pop hl
 996+ 938D C9               ret
 997+ 938E
 998+ 938E              ;---------------------------------------------------
 999+ 938E              ;
1000+ 938E              ;   18/07/23
1001+ 938E              ;
1002+ 938E
1003+ 938E              Mueve_disparo
1004+ 938E
1005+ 938E              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 938E              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 938E              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 938E
1009+ 938E E5               push hl
1010+ 938F
1011+ 938F 7E               ld a,(hl)
1012+ 9390
1013+ 9390 06 04            ld b,4
1014+ 9392 23           1 inc hl
1015+ 9393 10 FD            djnz 1B
1016+ 9395
1017+ 9395              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9395
1019+ 9395 CD 4B 8D         call Extrae_address
1020+ 9398
1021+ 9398 E6 01            and 1
1022+ 939A 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 939C
1024+ 939C              ; Disparo hacia arriba, (Amadeus).
1025+ 939C
1026+ 939C              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 939C              ; _ de la dificultad.
1028+ 939C
1029+ 939C CD F7 97         call PreviousScan
1030+ 939F CD F7 97         call PreviousScan
1031+ 93A2 CD F7 97         call PreviousScan
1032+ 93A5 CD F7 97         call PreviousScan
1033+ 93A8
1034+ 93A8              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 93A8
1036+ 93A8 7C               ld a,h
1037+ 93A9 FE 40            cp $40
1038+ 93AB 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 93AD
1040+ 93AD              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 93AD
1042+ 93AD EB               ex de,hl
1043+ 93AE 06 04            ld b,4
1044+ 93B0 2B           6 dec hl
1045+ 93B1 10 FD            djnz 6B
1046+ 93B3
1047+ 93B3 CD E4 93         call Elimina_disparo_de_base_de_datos
1048+ 93B6 E1               pop hl
1049+ 93B7 18 10            jr 7F
1050+ 93B9
1051+ 93B9              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 93B9              ; HL contiene el puntero de impresión del disparo.
1053+ 93B9              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 93B9
1055+ 93B9 D5           3 push de
1056+ 93BA C5               push bc
1057+ 93BB
1058+ 93BB CD 77 91         call Comprueba_Colision
1059+ 93BE
1060+ 93BE              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 93BE
1062+ 93BE 78               ld a,b
1063+ 93BF
1064+ 93BF C1               pop bc
1065+ 93C0 D1               pop de
1066+ 93C1
1067+ 93C1 EB               ex de,hl
1068+ 93C2
1069+ 93C2 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 93C3 23               inc hl                                      ; _ movimiento.
1071+ 93C4 72               ld (hl),d
1072+ 93C5
1073+ 93C5 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 93C6
1075+ 93C6 23               inc hl                                      ; _ en curso.
1076+ 93C7 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 93C8 2B               dec hl
1078+ 93C9
1079+ 93C9 C9           7 ret
1080+ 93CA
1081+ 93CA              ; Disparo hacia abajo, (Entidad).
1082+ 93CA
1083+ 93CA 3A 6D 8B     2 ld a,(Velocidad_disparo_entidades)
1084+ 93CD 47               ld b,a
1085+ 93CE
1086+ 93CE CD E8 97     4 call NextScan
1087+ 93D1 10 FB            djnz 4B
1088+ 93D3
1089+ 93D3              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 93D3
1091+ 93D3 7C               ld a,h
1092+ 93D4 FE 58            cp $58
1093+ 93D6 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 93D8
1095+ 93D8 EB               ex de,hl
1096+ 93D9 06 04            ld b,4
1097+ 93DB 2B           5 dec hl
1098+ 93DC 10 FD            djnz 5B
1099+ 93DE
1100+ 93DE CD E4 93         call Elimina_disparo_de_base_de_datos
1101+ 93E1 E1               pop hl
1102+ 93E2 18 E5            jr 7B
1103+ 93E4
1104+ 93E4              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 93E4
1106+ 93E4 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 93E7 AF               xor a
1108+ 93E8 77               ld (hl),a
1109+ 93E9 54               ld d,h
1110+ 93EA 5D               ld e,l
1111+ 93EB 13               inc de
1112+ 93EC ED B0            ldir
1113+ 93EE C9               ret
1114+ 93EF
1115+ 93EF              ; -----------------------------------------------------------------
1116+ 93EF              ;
1117+ 93EF              ;   7/12/23
1118+ 93EF              ;
1119+ 93EF
1120+ 93EF 3A 62 8B     Selector_de_impactos ld a,(Impacto2)
1121+ 93F2 A7               and a
1122+ 93F3 C8               ret z
1123+ 93F4
1124+ 93F4              ; Analizamos si hay impacto por disparos.
1125+ 93F4
1126+ 93F4              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 93F4
1128+ 93F4 CB 4F            bit 1,a
1129+ 93F6 28 07            jr z,1F
1130+ 93F8
1131+ 93F8 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 93FB 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 93FD 18 08            jr 2F
1134+ 93FF
1135+ 93FF CB 47        1 bit 0,a
1136+ 9401 C8               ret z
1137+ 9402
1138+ 9402              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9402
1140+ 9402 21 3C 8B         ld hl,Ctrl_1
1141+ 9405 CB D6            set 2,(hl)
1142+ 9407
1143+ 9407 C9           2 ret
1144+ 9408
1145+ 9408              ; -----------------------------------------------------------------
1146+ 9408              ;
1147+ 9408              ;   25/04/23
1148+ 9408              ;
1149+ 9408
1150+ 9408              Determina_resultado_comparativa
1151+ 9408
1152+ 9408              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9408              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9408              ;
1155+ 9408              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9408              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9408              ;
1158+ 9408              ;   SBC HL,DE
1159+ 9408
1160+ 9408              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9408              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9408
1163+ 9408              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9408              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9408
1166+ 9408
1167+ 9408 3A 0F 8B         ld a,(Cuad_objeto)
1168+ 940B FE 02            cp 2
1169+ 940D 28 26            jr z,2F
1170+ 940F 38 24            jr c,2F
1171+ 9411
1172+ 9411              ; Cuadrantes 3º y 4º
1173+ 9411
1174+ 9411 E6 01            and 1
1175+ 9413 28 10            jr z,4F
1176+ 9415
1177+ 9415              ; Cuadrante 3º
1178+ 9415
1179+ 9415 7C               ld a,h
1180+ 9416 06 00            ld b,0
1181+ 9418
1182+ 9418 CD A3 94         call Compara_cositas_H3
1183+ 941B
1184+ 941B 04               inc b
1185+ 941C 05               dec b
1186+ 941D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 941E
1188+ 941E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 941F 06 00            ld b,0
1190+ 9421
1191+ 9421 CD B5 94         call Compara_cositas_L3
1192+ 9424 C9               ret
1193+ 9425
1194+ 9425              ; Cuadrante 4º
1195+ 9425
1196+ 9425 7C           4 ld a,h
1197+ 9426 06 00            ld b,0
1198+ 9428
1199+ 9428 CD C7 94         call Compara_cositas_H4
1200+ 942B
1201+ 942B 04               inc b
1202+ 942C 05               dec b
1203+ 942D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 942E
1205+ 942E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 942F 06 00            ld b,0
1207+ 9431
1208+ 9431 CD DD 94         call Compara_cositas_L4
1209+ 9434 C9               ret
1210+ 9435
1211+ 9435              ; Cuadrantes 1º y 2º.
1212+ 9435
1213+ 9435 28 10        2 jr z,3F
1214+ 9437
1215+ 9437              ; 1er Cuadrante
1216+ 9437
1217+ 9437 7C               ld a,h
1218+ 9438 06 00            ld b,0
1219+ 943A
1220+ 943A CD 7B 94         call Compara_cositas_H1
1221+ 943D
1222+ 943D 04               inc b
1223+ 943E 05               dec b
1224+ 943F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9440
1226+ 9440 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9441 06 00            ld b,0
1228+ 9443
1229+ 9443 CD 91 94         call Compara_cositas_L1
1230+ 9446 C9               ret
1231+ 9447
1232+ 9447
1233+ 9447              ; 2º Cuadrante
1234+ 9447
1235+ 9447 7C           3 ld a,h
1236+ 9448 06 00            ld b,0
1237+ 944A
1238+ 944A CD 57 94         call Compara_cositas_H2
1239+ 944D
1240+ 944D 04               inc b
1241+ 944E 05               dec b
1242+ 944F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9450
1244+ 9450 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9451 06 00            ld b,0
1246+ 9453
1247+ 9453 CD 69 94         call Compara_cositas_L2
1248+ 9456 C9               ret
1249+ 9457
1250+ 9457 A7           Compara_cositas_H2 and a
1251+ 9458 28 0D            jr z,1F
1252+ 945A              ;    cp $fd
1253+ 945A              ;    jr z,1F
1254+ 945A              ;    cp $fe
1255+ 945A              ;    jr z,1F
1256+ 945A FE FF            cp $ff
1257+ 945C 28 09            jr z,1F
1258+ 945E FE 01            cp $01
1259+ 9460 28 05            jr z,1F
1260+ 9462 FE 02            cp $02
1261+ 9464 28 01            jr z,1F
1262+ 9466 C0               ret nz
1263+ 9467 04           1 inc b
1264+ 9468 C9               ret
1265+ 9469
1266+ 9469 A7           Compara_cositas_L2 and a
1267+ 946A 28 0D            jr z,1F
1268+ 946C              ;    cp $fd
1269+ 946C              ;    jr z,1F
1270+ 946C FE FE            cp $fe
1271+ 946E 28 09            jr z,1F
1272+ 9470 FE FF            cp $ff
1273+ 9472 28 05            jr z,1F
1274+ 9474 FE 01            cp $01
1275+ 9476 28 01            jr z,1F
1276+ 9478              ;    cp $02
1277+ 9478              ;    jr z,1F
1278+ 9478 C0               ret nz
1279+ 9479 04           1 inc b
1280+ 947A C9               ret
1281+ 947B
1282+ 947B A7           Compara_cositas_H1 and a
1283+ 947C 28 11            jr z,1F
1284+ 947E              ;    cp $fd
1285+ 947E              ;    jr z,1F
1286+ 947E              ;    cp $fe
1287+ 947E              ;    jr z,1F
1288+ 947E FE FF            cp $ff
1289+ 9480 28 0D            jr z,1F
1290+ 9482 FE 01            cp $01
1291+ 9484 28 09            jr z,1F
1292+ 9486 FE 02            cp $02
1293+ 9488 28 05            jr z,1F
1294+ 948A FE 03            cp $03
1295+ 948C 28 01            jr z,1F
1296+ 948E C0               ret nz
1297+ 948F 04           1 inc b
1298+ 9490 C9               ret
1299+ 9491
1300+ 9491 A7           Compara_cositas_L1 and a
1301+ 9492 28 0D            jr z,1F
1302+ 9494              ;    cp $fd
1303+ 9494              ;    jr z,1F
1304+ 9494              ;    cp $fe
1305+ 9494              ;    jr z,1F
1306+ 9494              ;    cp $ff
1307+ 9494              ;    jr z,1F
1308+ 9494 FE 01            cp $01
1309+ 9496 28 09            jr z,1F
1310+ 9498 FE 02            cp $02
1311+ 949A 28 05            jr z,1F
1312+ 949C FE 03            cp $03
1313+ 949E 28 01            jr z,1F
1314+ 94A0 C0               ret nz
1315+ 94A1 04           1 inc b
1316+ 94A2 C9               ret
1317+ 94A3
1318+ 94A3 A7           Compara_cositas_H3 and a
1319+ 94A4 28 0D            jr z,1F
1320+ 94A6              ;    cp $fd
1321+ 94A6              ;    jr z,1F
1322+ 94A6 FE FE            cp $fe
1323+ 94A8 28 09            jr z,1F
1324+ 94AA FE FF            cp $ff
1325+ 94AC 28 05            jr z,1F
1326+ 94AE FE 01            cp $01
1327+ 94B0 28 01            jr z,1F
1328+ 94B2              ;    cp $02
1329+ 94B2              ;    jr z,1F
1330+ 94B2              ;    cp $03
1331+ 94B2              ;    jr z,1F
1332+ 94B2 C0               ret nz
1333+ 94B3 04           1 inc b
1334+ 94B4 C9               ret
1335+ 94B5
1336+ 94B5 A7           Compara_cositas_L3 and a
1337+ 94B6 28 0D            jr z,1F
1338+ 94B8              ;    cp $fd
1339+ 94B8              ;    jr z,1F
1340+ 94B8              ;    cp $fe
1341+ 94B8              ;    jr z,1F
1342+ 94B8              ;    cp $ff
1343+ 94B8              ;    jr z,1F
1344+ 94B8 FE 01            cp $01
1345+ 94BA 28 09            jr z,1F
1346+ 94BC FE 02            cp $02
1347+ 94BE 28 05            jr z,1F
1348+ 94C0 FE 03            cp $03
1349+ 94C2 28 01            jr z,1F
1350+ 94C4 C0               ret nz
1351+ 94C5 04           1 inc b
1352+ 94C6 C9               ret
1353+ 94C7
1354+ 94C7 A7           Compara_cositas_H4 and a
1355+ 94C8 28 11            jr z,1F
1356+ 94CA FE FD            cp $fd
1357+ 94CC 28 0D            jr z,1F
1358+ 94CE FE FE            cp $fe
1359+ 94D0 28 09            jr z,1F
1360+ 94D2 FE FF            cp $ff
1361+ 94D4 28 05            jr z,1F
1362+ 94D6 FE 01            cp $01
1363+ 94D8 28 01            jr z,1F
1364+ 94DA              ;    cp $02
1365+ 94DA              ;    jr z,1F
1366+ 94DA              ;    cp $03
1367+ 94DA              ;    jr z,1F
1368+ 94DA C0               ret nz
1369+ 94DB 04           1 inc b
1370+ 94DC C9               ret
1371+ 94DD
1372+ 94DD A7           Compara_cositas_L4 and a
1373+ 94DE 28 0D            jr z,1F
1374+ 94E0              ;    cp $fd
1375+ 94E0              ;    jr z,1F
1376+ 94E0 FE FE            cp $fe
1377+ 94E2 28 09            jr z,1F
1378+ 94E4 FE FF            cp $ff
1379+ 94E6 28 05            jr z,1F
1380+ 94E8 FE 01            cp $01
1381+ 94EA 28 01            jr z,1F
1382+ 94EC              ;    cp $02
1383+ 94EC              ;    jr z,1F
1384+ 94EC              ;    cp $03
1385+ 94EC              ;    jr z,1F
1386+ 94EC C0               ret nz
1387+ 94ED 04           1 inc b
1388+ 94EE C9               ret
# file closed: Disparo.asm
1758  94EF              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 94EF              ; ******************************************************************************************************************************************************************************************
   2+ 94EF              ;
   3+ 94EF              ; 26/06/23
   4+ 94EF              ;
   5+ 94EF              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 94EF
   7+ 94EF              Draw
   8+ 94EF
   9+ 94EF CD DC 97     	call Prepara_draw
  10+ 94F2 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 94F3 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 94F4 28 05        	jr z,2F
  13+ 94F6
  14+ 94F6 3A 0F 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 94F9 18 0C        	jr 1F
  16+ 94FB
  17+ 94FB 2A 0D 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 94FE 22 FD 8A     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9501 CD 90 96     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9504              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9504
  22+ 9504 CD 69 8F     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9507
  24+ 9507 3A 1D 8B     1 ld a,(Ctrl_0)
  25+ 950A CB 6F        	bit 5,a
  26+ 950C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 950E
  28+ 950E CD 26 95     	call Comprueba_limite_horizontal
  29+ 9511 CD B6 95     	call Comprueba_limite_vertical
  30+ 9514
  31+ 9514              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9514              ; -----------------------
  33+ 9514              ; -----------------------
  34+ 9514              ; -----------------------
  35+ 9514
  36+ 9514 CD 0C 97     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9517 CD 43 97     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 951A CD A2 97     	call Define_rutina_de_impresion
  39+ 951D
  40+ 951D 3A 1D 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 9520 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 9522 32 1D 8B     	ld (Ctrl_0),a
  43+ 9525
  44+ 9525 C9           	ret
  45+ 9526
  46+ 9526              ; *******************************************************************************************************************************************************************************************
  47+ 9526              ;	21/01/23
  48+ 9526              ;
  49+ 9526              ; 	Comprueba_limite_horizontal.
  50+ 9526              ;
  51+ 9526              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9526              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9526              ;
  54+ 9526              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9526              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9526              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9526              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9526
  59+ 9526
  60+ 9526
  61+ 9526 3A 1D 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9529 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 952B 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 952D E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 952F 32 1D 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 9532 18 09            jr 6F
  67+ 9534 CB 5F        1 bit 3,a
  68+ 9536 28 0A            jr z,2F
  69+ 9538 E6 F7            and $f7
  70+ 953A 32 1D 8B         ld (Ctrl_0),a
  71+ 953D CD 90 96     6 call Inicializacion
  72+ 9540 18 5B            jr 5F
  73+ 9542 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9543
  75+ 9543              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9543              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9543
  78+ 9543 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9544 2A 1F 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9547 CD FB 9A     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 954A 67           	ld h,a
  82+ 954B EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 954C CD FB 9A     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 954F 67           	ld h,a
  85+ 9550 A7           	and a
  86+ 9551 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9553 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9554 3A 0F 8B     	ld a,(Cuad_objeto)
  89+ 9557 FE 02        	cp 2
  90+ 9559 38 1E        	jr c,3F
  91+ 955B 28 1C        	jr z,3F
  92+ 955D 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 955E 28 23            jr z,7F
  94+ 9560 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9562 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9564 E1           	pop hl
  97+ 9565
  98+ 9565              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9565              ; _para indicar con E="2" en caso necesario.
 100+ 9565
 101+ 9565 E5               push hl
 102+ 9566 C5               push bc
 103+ 9567 CD FB 9A     	call calcula_tercio
 104+ 956A FE 01        	cp 1
 105+ 956C 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 956E CD 9E 95         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9571 28 26            jr z,9F
 108+ 9573 38 24            jr c,9F
 109+ 9575 1E 00        11 ld e,0
 110+ 9577 18 22            jr 8F
 111+ 9579 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 957A 28 07        	jr z, 7F
 113+ 957C 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 957E 1E 00         	ld e,0
 115+ 9580 E1           	pop hl
 116+ 9581 18 04        	jr 4F
 117+ 9583 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9585 18 15            jr 10F
 119+ 9587
 120+ 9587              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9587              ; _para indicar con E="2" en caso necesario.
 122+ 9587
 123+ 9587 E5           4 push hl
 124+ 9588 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9589 CD FB 9A     	call calcula_tercio
 126+ 958C FE 01        	cp 1
 127+ 958E 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9590 CD 9E 95         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9593 28 04            jr z,9F
 130+ 9595 30 02            jr nc,9F
 131+ 9597 18 02        	jr 8F
 132+ 9599 1E 02        9 ld e,2
 133+ 959B C1           8 pop bc
 134+ 959C E1           10 pop hl
 135+ 959D C9           5 ret
 136+ 959E
 137+ 959E              ; --------------------
 138+ 959E              ;
 139+ 959E              ; 25/08/22
 140+ 959E
 141+ 959E CD FB 9A     Comprueba_centro call calcula_tercio
 142+ 95A1 67               ld h,a
 143+ 95A2 08           	ex af,af
 144+ 95A3 FE 02        	cp 2
 145+ 95A5 38 07        	jr c,1F
 146+ 95A7 28 05        	jr z,1F
 147+ 95A9 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 95AC 18 03        	jr 2F
 149+ 95AE 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 95B1 08           2 ex af,af
 151+ 95B2 A7               and a
 152+ 95B3 ED 42            sbc hl,bc
 153+ 95B5 C9               ret
 154+ 95B6
 155+ 95B6              ; *********************************************************************************************************************************************************************************************
 156+ 95B6              ;
 157+ 95B6              ;   16/8/22
 158+ 95B6              ;
 159+ 95B6              ;	Comprueba_limite_vertical
 160+ 95B6              ;
 161+ 95B6              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 95B6              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 95B6              ;
 164+ 95B6
 165+ 95B6 2A FD 8A     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 95B9 7D           	ld a,l
 167+ 95BA E6 1F        	and $1F
 168+ 95BC 57           	ld d,a
 169+ 95BD 3A 21 8B     	ld a,(Limite_vertical)
 170+ 95C0 BA           	cp d 											; Límite - Posición.
 171+ 95C1 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 95C2 3A 0F 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 95C5 CB 47        	bit 0,a
 174+ 95C7 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 95C9
 176+ 95C9              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 95C9
 178+ 95C9 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 95CA 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 95CC
 181+ 95CC              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 95CC              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 95CC
 184+ 95CC 3A 01 8B         ld a,(Coordenada_X)
 185+ 95CF 16 0F            ld d,Centro_izquierda
 186+ 95D1 A7               and a
 187+ 95D2 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 95D3 28 1E            jr z,3F
 189+ 95D5 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 95D7              ;                                                    ; _salimos sin modificar nada.
 191+ 95D7 18 0E            jr 2F
 192+ 95D9 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 95DA 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 95DC
 195+ 95DC              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 95DC              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 95DC
 198+ 95DC 3A 01 8B         ld a,(Coordenada_X)
 199+ 95DF 16 10            ld d,Centro_derecha
 200+ 95E1 A7               and a
 201+ 95E2 92               sub d
 202+ 95E3 28 0E            jr z,3F
 203+ 95E5 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 95E7              ;                                                    ; _salimos sin modificar nada.
 205+ 95E7 CB 43        2 bit 0,e
 206+ 95E9 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 95EB C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 95EC CD 80 96         call Modificaccionne
 209+ 95EF C1           	pop bc
 210+ 95F0 CD 90 96         call Inicializacion
 211+ 95F3 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 95F4
 213+ 95F4              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 95F4
 215+ 95F4 C5           4 push bc
 216+ 95F5 01 FC 8A     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 95F8 0A           	ld a,(bc)
 218+ 95F9 3D           	dec a
 219+ 95FA 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 95FB 7D           	ld a,l
 221+ 95FC 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 95FD CB 47        	bit 0,a
 223+ 95FF 28 03        	jr z,5F
 224+ 9601 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9602 18 2E        	jr 7F
 226+ 9604
 227+ 9604              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9604
 229+ 9604 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9605 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9606 3A 1D 8B     	ld a,(Ctrl_0)
 232+ 9609 CB 4F        	bit 1,a
 233+ 960B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 960D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 960E
 236+ 960E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 960E
 238+ 960E 1C               inc e
 239+ 960F 1D               dec e
 240+ 9610 20 07            jr nz,12F
 241+ 9612 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9613 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9614 22 FD 8A     	ld (Posicion_actual),hl
 244+ 9617 18 44        13 jr 9F
 245+ 9619 CB 43        12 bit 0,e
 246+ 961B 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 961D              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 961D C1           	pop bc
 249+ 961E 18 D3        	jr 3B
 250+ 9620 80           14 add b
 251+ 9621 6F               ld l,a
 252+ 9622 22 FD 8A     	ld (Posicion_actual),hl
 253+ 9625 CD 80 96         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9628 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 962A E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 962C 32 1D 8B         ld (Ctrl_0),a
 257+ 962F F1           	pop af
 258+ 9630 18 2B        	jr 9F
 259+ 9632
 260+ 9632              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9632
 262+ 9632 F5           7 push af
 263+ 9633 3A 1D 8B     	ld a,(Ctrl_0)
 264+ 9636 CB 47        	bit 0,a
 265+ 9638 20 1D        	jr nz,8F
 266+ 963A F1           	pop af
 267+ 963B
 268+ 963B              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 963B
 270+ 963B 1C           	inc e
 271+ 963C 1D               dec e
 272+ 963D 20 07            jr nz,10F
 273+ 963F 90           	sub b
 274+ 9640 6F               ld l,a
 275+ 9641 22 FD 8A     	ld (Posicion_actual),hl
 276+ 9644 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9646              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9646 CB 43        10 bit 0,e
 279+ 9648 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 964A              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 964A C1           	pop bc
 282+ 964B 18 A6        	jr 3B
 283+ 964D 90           16 sub b
 284+ 964E 6F               ld l,a
 285+ 964F 22 FD 8A     	ld (Posicion_actual),hl
 286+ 9652 CD 80 96         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9655 18 06            jr 9F
 288+ 9657 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9659 32 1D 8B         ld (Ctrl_0),a
 290+ 965C F1           	pop af
 291+ 965D C1           9 pop bc
 292+ 965E 1E 00        	ld e,0
 293+ 9660 CD 90 96         call Inicializacion
 294+ 9663 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9664 08           	ex af,af
 296+ 9665 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9666 18 8B            jr 3B
 298+ 9668
 299+ 9668              ; --------------------
 300+ 9668
 301+ 9668 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 966A CD F7 97     1 call PreviousScan
 303+ 966D 10 FB            djnz 1B
 304+ 966F 22 FD 8A     	ld (Posicion_actual),hl
 305+ 9672 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9673 C9           	ret
 307+ 9674
 308+ 9674              ; --------------------
 309+ 9674
 310+ 9674 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9676 CD E8 97     1 call NextScan
 312+ 9679 10 FB            djnz 1B
 313+ 967B 22 FD 8A     	ld (Posicion_actual),hl
 314+ 967E AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 967F C9           	ret
 316+ 9680
 317+ 9680              ; --------------------
 318+ 9680              ;
 319+ 9680              ;	22/01/23
 320+ 9680              ;
 321+ 9680              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9680              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9680              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9680
 325+ 9680
 326+ 9680              Modificaccionne
 327+ 9680
 328+ 9680 3A 0F 8B     	ld a,(Cuad_objeto)
 329+ 9683 FE 02        	cp 2
 330+ 9685 CC 68 96         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9688 DC 68 96         call c,Modifica_Pos_actual
 332+ 968B C8           	ret z
 333+ 968C CD 74 96         call Modifica_Pos_actual2
 334+ 968F C9               ret
 335+ 9690
 336+ 9690              ; *************************************************************************************************************************************************************************************************
 337+ 9690              ;
 338+ 9690              ;	13/8/22
 339+ 9690              ;
 340+ 9690              ;	Inicializacion
 341+ 9690              ;
 342+ 9690              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9690              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9690              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9690              ;
 346+ 9690              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9690              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9690              ;	_ desaparece/aparece.
 349+ 9690
 350+ 9690              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9690              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9690              ;
 353+ 9690              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9690              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9690              ; 		   [E] ="0"
 356+ 9690
 357+ 9690              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9690
 359+ 9690 CD FB 9A     Inicializacion call calcula_tercio
 360+ 9693 28 36        	jr z,primit
 361+ 9695 E6 02        	and 2
 362+ 9697 20 07        	jr nz,segmit
 363+ 9699 7D           	ld a,l
 364+ 969A FE 7F        	cp $7f
 365+ 969C 38 2D        	jr c,primit
 366+ 969E 28 2B        	jr z,primit
 367+ 96A0 CD 06 97     segmit call column
 368+ 96A3 38 13        	jr c,tercuad
 369+ 96A5 3E 04        cuarcuad ld a,4
 370+ 96A7 32 0F 8B     	ld (Cuad_objeto),a
 371+ 96AA 21 20 48     	ld hl,$4820
 372+ 96AD 22 1F 8B     	ld (Limite_horizontal),hl
 373+ 96B0 21 21 8B     	ld hl,Limite_vertical
 374+ 96B3 36 0D        	ld (hl),$0d
 375+ 96B5 08           	ex af,af
 376+ 96B6 18 3C        	jr 1F
 377+ 96B8              tercuad
 378+ 96B8 3E 03        	ld a,3
 379+ 96BA 32 0F 8B     	ld (Cuad_objeto),a
 380+ 96BD 21 20 48     	ld hl,$4820
 381+ 96C0 22 1F 8B     	ld (Limite_horizontal),hl
 382+ 96C3 21 21 8B     	ld hl,Limite_vertical
 383+ 96C6 36 12        	ld (hl),$12
 384+ 96C8 08           	ex af,af
 385+ 96C9 18 29        	jr 1F
 386+ 96CB CD 06 97     primit call column
 387+ 96CE 38 13        	jr c, primcuad
 388+ 96D0              segcuad
 389+ 96D0 3E 02        	ld a,2
 390+ 96D2 32 0F 8B     	ld (Cuad_objeto),a
 391+ 96D5 21 C0 4F     	ld hl,$4fc0
 392+ 96D8 22 1F 8B     	ld (Limite_horizontal),hl
 393+ 96DB 21 21 8B     	ld hl,Limite_vertical
 394+ 96DE 36 0D        	ld (hl),$0d
 395+ 96E0 08           	ex af,af
 396+ 96E1 18 11        	jr 1F
 397+ 96E3              primcuad
 398+ 96E3 3E 01        	ld a,1
 399+ 96E5 32 0F 8B     	ld (Cuad_objeto),a
 400+ 96E8 21 C0 4F     	ld hl,$4fc0
 401+ 96EB 22 1F 8B     	ld (Limite_horizontal),hl
 402+ 96EE 21 21 8B     	ld hl,Limite_vertical
 403+ 96F1 36 12        	ld (hl),$12
 404+ 96F3 08           	ex af,af
 405+ 96F4
 406+ 96F4 C5           1 push bc
 407+ 96F5 E5           	push hl
 408+ 96F6 D5           	push de
 409+ 96F7
 410+ 96F7 2A FD 8A     	ld hl,(Posicion_actual)
 411+ 96FA CD 93 9E     	call Genera_coordenadas
 412+ 96FD
 413+ 96FD D1           	pop de
 414+ 96FE E1           	pop hl
 415+ 96FF C1           	pop bc
 416+ 9700
 417+ 9700 21 1D 8B     	ld hl,Ctrl_0
 418+ 9703 CB EE        	set 5,(hl)
 419+ 9705 C9           	ret
 420+ 9706
 421+ 9706              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9706
 423+ 9706              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9706              ;
 425+ 9706              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9706
 427+ 9706 7D           column ld a,l
 428+ 9707 E6 1F        	and $1f
 429+ 9709 FE 10         	cp $10
 430+ 970B C9            	ret
 431+ 970C
 432+ 970C              ; --------------------------------------------------------------------------------------------------------------------
 433+ 970C              ;
 434+ 970C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 970C              ;
 436+ 970C              ; 14/12/22
 437+ 970C              ;
 438+ 970C              ;	Modifica: A y BC.
 439+ 970C
 440+ 970C 3A 0F 8B     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 970F E6 01        	and 1
 442+ 9711 28 17        	jr z,1F
 443+ 9713
 444+ 9713              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9713
 446+ 9713 3A 01 8B     	ld a,(Coordenada_X)
 447+ 9716 47           	ld b,a
 448+ 9717 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9718 79           	ld a,c
 450+ 9719 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 971A 38 08        	jr c,2F
 452+ 971C 47           	ld b,a
 453+ 971D 79           	ld a,c
 454+ 971E 90           	sub b
 455+ 971F 32 1E 8B     	ld (Columnas),a
 456+ 9722 18 1B        	jr 4F
 457+ 9724 79           2 ld a,c
 458+ 9725 32 1E 8B     	ld (Columnas),a
 459+ 9728 18 15        	jr 4F
 460+ 972A
 461+ 972A              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 972A
 463+ 972A 3A 01 8B     1 ld a,(Coordenada_X)
 464+ 972D 81           	add c
 465+ 972E 3D           	dec a
 466+ 972F D6 1F        	sub $1f
 467+ 9731 38 08        	jr c,3F
 468+ 9733 47           	ld b,a
 469+ 9734 79           	ld a,c
 470+ 9735 90           	sub b
 471+ 9736 32 1E 8B     	ld (Columnas),a
 472+ 9739 18 04        	jr 4F
 473+ 973B 79           3 ld a,c
 474+ 973C 32 1E 8B     	ld (Columnas),a
 475+ 973F D9           4 exx
 476+ 9740 4F           	ld c,a
 477+ 9741 D9           	exx
 478+ 9742 C9            ret
 479+ 9743
 480+ 9743              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9743              ;
 482+ 9743              ;   19/7/23
 483+ 9743              ;
 484+ 9743              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9743              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9743              ;
 487+ 9743              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9743              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9743              ;
 490+ 9743              ;	DESTRUYE: HL,B Y A.
 491+ 9743
 492+ 9743 3A 0F 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9746 FE 02        	cp 2
 494+ 9748 38 18        	jr c,1F
 495+ 974A 28 16        	jr z,1F
 496+ 974C E6 01        	and 1
 497+ 974E 28 0D        	jr z,3F
 498+ 9750
 499+ 9750              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9750
 501+ 9750 CD 96 97     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9753
 503+ 9753 7D           9 ld a,l
 504+ 9754 E6 1F        	and $1f
 505+ 9756 28 2A        	jr z,7F
 506+ 9758 2B           	dec hl
 507+ 9759 10 F8        	djnz 9B
 508+ 975B 18 25        	jr 7F
 509+ 975D
 510+ 975D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 975D
 512+ 975D 2A FD 8A     3 ld hl,(Posicion_actual)
 513+ 9760 18 20        	jr 7F
 514+ 9762
 515+ 9762 28 14        1 jr z,2F
 516+ 9764
 517+ 9764              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9764
 519+ 9764 CD 96 97     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9767
 521+ 9767 7D           4 ld a,l
 522+ 9768 E6 1F        	and $1f
 523+ 976A 28 03        	jr z,6F
 524+ 976C 2B           	dec hl
 525+ 976D 10 F8        	djnz 4B
 526+ 976F 06 0F        6 ld b,15
 527+ 9771 CD F7 97     5 call PreviousScan
 528+ 9774 10 FB        	djnz 5B
 529+ 9776 18 0A        	jr 7F
 530+ 9778
 531+ 9778              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9778
 533+ 9778 CD 96 97     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 977B 06 0F        	ld b,15
 535+ 977D CD F7 97     8 call PreviousScan
 536+ 9780 10 FB        	djnz 8B
 537+ 9782
 538+ 9782 E5           7 push hl
 539+ 9783 DD E1        	pop ix
 540+ 9785
 541+ 9785 2A FF 8A     	ld hl,(Puntero_objeto)
 542+ 9788 E5           	push hl
 543+ 9789 FD E1        	pop iy
 544+ 978B
 545+ 978B              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 978B
 547+ 978B 3A 1D 8B     	ld a,(Ctrl_0)
 548+ 978E CB 77        	bit 6,a
 549+ 9790 C8           	ret z
 550+ 9791
 551+ 9791              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9791              ; _ entidad / Amadeus´.
 553+ 9791
 554+ 9791 DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 9795
 556+ 9795 C9           	ret
 557+ 9796
 558+ 9796              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9796              ;
 560+ 9796              ;	2/1/23
 561+ 9796              ;
 562+ 9796              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9796              ;
 564+ 9796              ;	Tras esta rutina tenemos:
 565+ 9796              ;
 566+ 9796              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9796              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9796              ;
 569+ 9796              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9796
 571+ 9796 2A FD 8A     Operandos ld hl,(Posicion_actual)
 572+ 9799 3A 1E 8B     	ld a,(Columnas)
 573+ 979C 3D           	dec a
 574+ 979D 20 01        	jr nz,1F
 575+ 979F 3C           	inc a
 576+ 97A0 47           1 ld b,a
 577+ 97A1 C9           	ret
 578+ 97A2
 579+ 97A2              ; --------------------------------------------------------------------------------------------------------------------
 580+ 97A2              ;
 581+ 97A2              ;	3/1/23
 582+ 97A2              ;
 583+ 97A2              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 97A2              ;
 585+ 97A2              ;	Destruye: A,B,HL y DE.
 586+ 97A2
 587+ 97A2              Define_rutina_de_impresion
 588+ 97A2
 589+ 97A2 3A FC 8A     	ld a,(Columns)
 590+ 97A5 47           	ld b,a
 591+ 97A6 3A 1E 8B     	ld a,(Columnas)
 592+ 97A9 B8           	cp b
 593+ 97AA 20 0D        	jr nz,2f
 594+ 97AC
 595+ 97AC              ;	La entidad se imprime entera.
 596+ 97AC
 597+ 97AC 21 CB 98     	ld hl, Indice_entidades_completas
 598+ 97AF E6 01        	and 1
 599+ 97B1 28 02        	jr z,1F
 600+ 97B3
 601+ 97B3 23           	inc hl
 602+ 97B4 23           	inc hl
 603+ 97B5
 604+ 97B5 CD 4B 8D     1 call Extrae_address
 605+ 97B8 C9           	ret		;	ret
 606+ 97B9
 607+ 97B9              ;	La entidad no se imprime entera en pantalla.
 608+ 97B9
 609+ 97B9 3A 0F 8B     2 ld a,(Cuad_objeto)
 610+ 97BC E6 01        	and 1
 611+ 97BE 28 17        	jr z,3F
 612+ 97C0
 613+ 97C0              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 97C0
 615+ 97C0 21 CF 98     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 97C3 3A FC 8A     4 ld a,(Columns)
 617+ 97C6 E6 01        	and 1
 618+ 97C8 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 97CA
 620+ 97CA 23           	inc hl
 621+ 97CB 23           	inc hl
 622+ 97CC
 623+ 97CC 3A 1E 8B     	ld a,(Columnas)
 624+ 97CF E6 01        	and 1
 625+ 97D1 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 97D3
 627+ 97D3 23           	inc hl
 628+ 97D4 23           	inc hl
 629+ 97D5
 630+ 97D5 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 97D7
 632+ 97D7 21 D5 98     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 97DA 18 E7        	jr 4B
 634+ 97DC
 635+ 97DC              ; --------------------------------------------------------------------------------------------------------------------
 636+ 97DC              ;
 637+ 97DC              ;	Prepara_draw
 638+ 97DC              ;
 639+ 97DC              ;	Es una rutina de carga.
 640+ 97DC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 97DC              ;
 642+ 97DC              ;	FUNCIONAMIENTO:
 643+ 97DC              ;
 644+ 97DC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 97DC              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 97DC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 97DC              ;
 648+ 97DC              ;	DESTRUYE:
 649+ 97DC              ;
 650+ 97DC              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 97DC
 652+ 97DC 21 FB 8A     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 97DF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 97E0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 97E1 4E           	ld c,(hl)
 656+ 97E2 2A FD 8A     	ld hl,(Posicion_actual)
 657+ 97E5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 97E7 C9           	ret
 659+ 97E8
 660+ 97E8              ;----------------------------------------------------------------------------------------------------------------
 661+ 97E8              ;
 662+ 97E8              ;	5/08/22
 663+ 97E8              ;
 664+ 97E8              ;   NextScan.
 665+ 97E8              ;
 666+ 97E8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 97E8              ;
 668+ 97E8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 97E8              ;
 670+ 97E8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 97E8              ;
 672+ 97E8              ;       DESTRUIDOS: AF y HL !!!
 673+ 97E8              ;
 674+ 97E8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 97E8              ;
 676+ 97E8
 677+ 97E8 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 97E9 7C               ld a,h
 679+ 97EA E6 07            and 7
 680+ 97EC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 97ED
 682+ 97ED 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 97EE C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 97F0 6F               ld l,a
 685+ 97F1 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 97F2
 687+ 97F2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 97F3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 97F5 67               ld h,a
 690+ 97F6 C9               ret
 691+ 97F7
 692+ 97F7              ;----------------------------------------------------------------------------------------------------------------
 693+ 97F7              ;
 694+ 97F7              ;	5/08/22
 695+ 97F7              ;
 696+ 97F7              ;   PreviousScan.
 697+ 97F7              ;
 698+ 97F7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 97F7              ;
 700+ 97F7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 97F7              ;
 702+ 97F7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 97F7              ;
 704+ 97F7              ;       DESTRUIDOS: AF y HL !!!
 705+ 97F7              ;
 706+ 97F7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 97F7              ;
 708+ 97F7
 709+ 97F7 7C           PreviousScan ld a,h
 710+ 97F8 25               dec h               ; Dec H.
 711+ 97F9 E6 07            and 7
 712+ 97FB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 97FC
 714+ 97FC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 97FD D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 97FF 6F               ld l,a
 717+ 9800 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9801
 719+ 9801 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9802 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9804 67               ld h,a
 722+ 9805 C9               ret
 723+ 9806
 724+ 9806              ; -----------------------------------------------------------------------------------
 725+ 9806              ;
 726+ 9806              ;	31/7/23
 727+ 9806              ;
 728+ 9806              ;	Rutina principal de pintado de entidades.
 729+ 9806              ;	Extrae la foto del frame, (entidades).
 730+ 9806
 731+ 9806              Extrae_foto_entidades
 732+ 9806
 733+ 9806 21 01 80     	ld hl,Album_de_fotos+1
 734+ 9809 7E           	ld a,(hl)
 735+ 980A A7           	and a
 736+ 980B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 980C
 738+ 980C              ;	No hay datos, (entidades para pintar en este frame).
 739+ 980C
 740+ 980C 3A 48 8B     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 980F A7           	and a
 742+ 9810 C8           	ret z
 743+ 9811
 744+ 9811              ; -----------------------------------
 745+ 9811
 746+ 9811 ED 73 4D 8B  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9815 31 00 80     	ld sp,Album_de_fotos
 748+ 9818
 749+ 9818 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 981A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 981B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 981C
 753+ 981C ED 73 4F 8B  	ld (Stack_2),sp
 754+ 9820 ED 7B 4D 8B  	ld sp,(Stack)
 755+ 9824
 756+ 9824              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9824
 758+ 9824 3E CD        	ld a,$cd
 759+ 9826 32 2E 98     	ld (Imprime),a
 760+ 9829 EB           	ex de,hl
 761+ 982A 22 2F 98     	ld (Imprime+1),hl
 762+ 982D EB           	ex de,hl
 763+ 982E
 764+ 982E              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 982E
 766+ 982E 00 00 00     Imprime db 0,0,0
 767+ 9831
 768+ 9831 ED 73 4D 8B  	ld (Stack),sp
 769+ 9835
 770+ 9835 3A 48 8B     	ld a,(Numero_de_malotes)
 771+ 9838 3D           	dec a
 772+ 9839 28 09        	jr z,1F
 773+ 983B 32 48 8B      	ld (Numero_de_malotes),a
 774+ 983E
 775+ 983E ED 7B 4F 8B  	ld sp,(Stack_2)
 776+ 9842 18 D4        	jr 2B
 777+ 9844
 778+ 9844 AF           1 xor a
 779+ 9845 32 4F 8B     	ld (Stack_2),a
 780+ 9848
 781+ 9848 C9           	ret
 782+ 9849
 783+ 9849              ; -----------------------------------------------------------------------------------
 784+ 9849              ;
 785+ 9849              ;	28/2/23
 786+ 9849              ;
 787+ 9849              ;	Pinta los disparos generados.
 788+ 9849
 789+ 9849              Extrae_foto_disparos
 790+ 9849
 791+ 9849 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 984C 7E               ld a,(hl)
 793+ 984D A7               and a
 794+ 984E C8               ret z
 795+ 984F
 796+ 984F 3A 5D 8B     	ld a,(Numero_de_disparotes)
 797+ 9852 A7           	and a
 798+ 9853 C8           	ret z
 799+ 9854 ED 73 4D 8B  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9858 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 985B
 802+ 985B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 985D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 985E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 985F
 806+ 985F ED 73 4F 8B  	ld (Stack_2),sp
 807+ 9863 ED 7B 4D 8B  	ld sp,(Stack)
 808+ 9867
 809+ 9867              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9867
 811+ 9867 3E CD        	ld a,$cd
 812+ 9869 32 71 98     	ld (Imprime2),a
 813+ 986C EB           	ex de,hl
 814+ 986D 22 72 98     	ld (Imprime2+1),hl
 815+ 9870 EB           	ex de,hl
 816+ 9871
 817+ 9871              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9871
 819+ 9871 00 00 00     Imprime2 db 0,0,0
 820+ 9874
 821+ 9874 3A 5D 8B     	ld a,(Numero_de_disparotes)
 822+ 9877 3D           	dec a
 823+ 9878 28 09        	jr z,1F
 824+ 987A 32 5D 8B      	ld (Numero_de_disparotes),a
 825+ 987D
 826+ 987D ED 7B 4F 8B  	ld sp,(Stack_2)
 827+ 9881 18 D8        	jr 2B
 828+ 9883
 829+ 9883 AF           1 xor a
 830+ 9884 32 4F 8B     	ld (Stack_2),a
 831+ 9887 C9           	ret
 832+ 9888
 833+ 9888              ; -----------------------------------------------------------------------------------
 834+ 9888              ;
 835+ 9888              ;	4/9/23
 836+ 9888              ;
 837+ 9888              ;	Rutina principal de pintado de Amadeus.
 838+ 9888              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9888
 840+ 9888 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 988B 7E           	ld a,(hl)
 842+ 988C A7           	and a
 843+ 988D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 988E
 845+ 988E 3A 48 8B     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9891 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9892 C8           	ret z
 848+ 9893
 849+ 9893              ; -----------------------------------
 850+ 9893
 851+ 9893 ED 73 4D 8B  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9897 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 989A
 854+ 989A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 989C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 989D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 989E
 858+ 989E ED 73 4F 8B  	ld (Stack_2),sp
 859+ 98A2 ED 7B 4D 8B  	ld sp,(Stack)
 860+ 98A6
 861+ 98A6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 98A6
 863+ 98A6 3E CD        	ld a,$cd
 864+ 98A8 32 B0 98     	ld (Imprime_Amadeus),a
 865+ 98AB EB           	ex de,hl
 866+ 98AC 22 B1 98     	ld (Imprime_Amadeus+1),hl
 867+ 98AF EB           	ex de,hl
 868+ 98B0
 869+ 98B0              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 98B0
 871+ 98B0 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 98B3
 873+ 98B3 ED 73 4D 8B  	ld (Stack),sp
 874+ 98B7
 875+ 98B7 3A 48 8B     	ld a,(Numero_de_malotes)
 876+ 98BA 3D           	dec a
 877+ 98BB 28 09        	jr z,1F
 878+ 98BD 32 48 8B      	ld (Numero_de_malotes),a
 879+ 98C0
 880+ 98C0 ED 7B 4F 8B  	ld sp,(Stack_2)
 881+ 98C4 18 D4        	jr 2B
 882+ 98C6
 883+ 98C6 AF           1 xor a
 884+ 98C7 32 4F 8B     	ld (Stack_2),a
 885+ 98CA
 886+ 98CA C9           	ret
# file closed: Draw_XOR.asm
1759  98CB              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 98CB              ;   índices de Rutinas de impresión.
   2+ 98CB
   3+ 98CB DB 98        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 98CD 08 99            defw Pinta_Amadeus_3x2
   5+ 98CF
   6+ 98CF 5E 99        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 98D1 FE 99            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 98D3 B2 99            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 98D5
  10+ 98D5 88 99        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 98D7 8C 9A            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 98D9 40 9A            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 98DB
  14+ 98DB
  15+ 98DB              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 98DB              ;
  17+ 98DB              ;   12/12/22
  18+ 98DB              ;
  19+ 98DB              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 98DB              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 98DB              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 98DB              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 98DB              ;
  24+ 98DB              ;   Modifica: DE y HL.
  25+ 98DB
  26+ 98DB ED 73 4D 8B  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 98DF FD F9        	ld sp,iy
  28+ 98E1 06 10            ld b,16
  29+ 98E3 D1           1 pop de
  30+ 98E4 7B               ld a,e
  31+ 98E5 AE               xor (hl)
  32+ 98E6 77           	ld (hl),a
  33+ 98E7 23           	inc hl
  34+ 98E8 7A               ld a,d
  35+ 98E9 AE               xor (hl)
  36+ 98EA 77           	ld (hl),a
  37+ 98EB 2B           	dec hl
  38+ 98EC 24           	inc h
  39+ 98ED 7C               ld a,h
  40+ 98EE E6 07            and 7
  41+ 98F0 20 0A            jr nz,2F
  42+ 98F2 7D               ld a,l
  43+ 98F3 C6 20            add a,$20
  44+ 98F5 6F               ld l,a
  45+ 98F6 38 04            jr c,2F
  46+ 98F8 7C               ld a,h
  47+ 98F9 D6 08            sub 8
  48+ 98FB 67               ld h,a
  49+ 98FC 7C           2 ld a,h
  50+ 98FD FE 58            cp $58
  51+ 98FF 28 02            jr z,3F
  52+ 9901 10 E0            djnz 1B
  53+ 9903 ED 7B 4D 8B  3 ld sp,(Stack)
  54+ 9907 C9           	ret
  55+ 9908
  56+ 9908 ED 73 4D 8B  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 990C FD F9        	ld sp,iy
  58+ 990E 06 08            ld b,8
  59+ 9910 D1           1 pop de
  60+ 9911 7B               ld a,e
  61+ 9912 AE               xor (hl)
  62+ 9913 77           	ld (hl),a
  63+ 9914 23           	inc hl
  64+ 9915 7A               ld a,d
  65+ 9916 AE               xor (hl)
  66+ 9917 77           	ld (hl),a
  67+ 9918 23           	inc hl
  68+ 9919 D1           	pop de
  69+ 991A 7B               ld a,e
  70+ 991B AE               xor (hl)
  71+ 991C 77           	ld (hl),a
  72+ 991D 2B           	dec hl
  73+ 991E 2B           	dec hl
  74+ 991F 24           	inc h
  75+ 9920 7C               ld a,h
  76+ 9921 E6 07            and 7
  77+ 9923 20 0A            jr nz,2F
  78+ 9925 7D               ld a,l
  79+ 9926 C6 20            add a,$20
  80+ 9928 6F               ld l,a
  81+ 9929 38 04            jr c,2F
  82+ 992B 7C               ld a,h
  83+ 992C D6 08            sub 8
  84+ 992E 67               ld h,a
  85+ 992F 7C           2 ld a,h
  86+ 9930 FE 58            cp $58
  87+ 9932 28 25            jr z,4F
  88+ 9934 7A               ld a,d
  89+ 9935 AE               xor (hl)
  90+ 9936 77               ld (hl),a
  91+ 9937 D1           	pop de
  92+ 9938 23           	inc hl
  93+ 9939 7B               ld a,e
  94+ 993A AE               xor (hl)
  95+ 993B 77           	ld (hl),a
  96+ 993C 23           	inc hl
  97+ 993D 7A               ld a,d
  98+ 993E AE               xor (hl)
  99+ 993F 77           	ld (hl),a
 100+ 9940 2B           	dec hl
 101+ 9941 2B           	dec hl
 102+ 9942 24           	inc h
 103+ 9943 7C               ld a,h
 104+ 9944 E6 07            and 7
 105+ 9946 20 0A            jr nz,3F
 106+ 9948 7D               ld a,l
 107+ 9949 C6 20            add a,$20
 108+ 994B 6F               ld l,a
 109+ 994C 38 04            jr c,3F
 110+ 994E 7C               ld a,h
 111+ 994F D6 08            sub 8
 112+ 9951 67               ld h,a
 113+ 9952 7C           3 ld a,h
 114+ 9953 FE 58            cp $58
 115+ 9955 28 02            jr z,4F
 116+ 9957 10 B7            djnz 1B
 117+ 9959 ED 7B 4D 8B  4 ld sp,(Stack)
 118+ 995D C9           	ret
 119+ 995E
 120+ 995E              ; ---------------------------------------------------
 121+ 995E
 122+ 995E ED 73 4D 8B  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9962 FD F9        	ld sp,iy
 124+ 9964
 125+ 9964              ; >>>
 126+ 9964
 127+ 9964 06 10            ld b,16
 128+ 9966 D1           1 pop de
 129+ 9967 7A           	ld a,d
 130+ 9968 AE           	xor (hl)
 131+ 9969 77           	ld (hl),a
 132+ 996A 24           	inc h
 133+ 996B 7C               ld a,h
 134+ 996C E6 07            and 7
 135+ 996E 20 0C            jr nz,2F
 136+ 9970 7D               ld a,l
 137+ 9971 C6 20            add a,$20
 138+ 9973 6F               ld l,a
 139+ 9974 38 06            jr c,2F
 140+ 9976 7C               ld a,h
 141+ 9977 D6 08            sub 8
 142+ 9979 67               ld h,a
 143+ 997A 18 00            jr 2F
 144+ 997C 7C           2 ld a,h
 145+ 997D FE 58            cp $58
 146+ 997F 28 02            jr z,3F
 147+ 9981 10 E3            djnz 1B
 148+ 9983 ED 7B 4D 8B  3 ld sp,(Stack)
 149+ 9987 C9           	ret
 150+ 9988
 151+ 9988 ED 73 4D 8B  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 998C FD F9        	ld sp,iy
 153+ 998E
 154+ 998E              ; >>>
 155+ 998E
 156+ 998E 06 10            ld b,16
 157+ 9990 D1           1 pop de
 158+ 9991 7B           	ld a,e
 159+ 9992 AE           	xor (hl)
 160+ 9993 77           	ld (hl),a
 161+ 9994 24           	inc h
 162+ 9995 7C               ld a,h
 163+ 9996 E6 07            and 7
 164+ 9998 20 0C            jr nz,2F
 165+ 999A 7D               ld a,l
 166+ 999B C6 20            add a,$20
 167+ 999D 6F               ld l,a
 168+ 999E 38 06            jr c,2F
 169+ 99A0 7C               ld a,h
 170+ 99A1 D6 08            sub 8
 171+ 99A3 67               ld h,a
 172+ 99A4 18 00            jr 2F
 173+ 99A6 7C           2 ld a,h
 174+ 99A7 FE 58            cp $58
 175+ 99A9 28 02            jr z,3F
 176+ 99AB 10 E3            djnz 1B
 177+ 99AD ED 7B 4D 8B  3 ld sp,(Stack)
 178+ 99B1 C9           	ret
 179+ 99B2
 180+ 99B2              ; ---------------------------------------------------
 181+ 99B2
 182+ 99B2 ED 73 4D 8B  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 99B6 FD F9        	ld sp,iy
 184+ 99B8 06 08            ld b,8
 185+ 99BA D1           1 pop de
 186+ 99BB 7A           	ld a,d
 187+ 99BC AE           	xor (hl)
 188+ 99BD 77           	ld (hl),a
 189+ 99BE 23           	inc hl
 190+ 99BF D1           	pop de
 191+ 99C0 7B           	ld a,e
 192+ 99C1 AE           	xor (hl)
 193+ 99C2 77           	ld (hl),a
 194+ 99C3 2B           	dec hl
 195+ 99C4 24            	inc h
 196+ 99C5 7C               ld a,h
 197+ 99C6 E6 07            and 7
 198+ 99C8 20 0A            jr nz,2F
 199+ 99CA 7D               ld a,l
 200+ 99CB C6 20            add a,$20
 201+ 99CD 6F               ld l,a
 202+ 99CE 38 04            jr c,2F
 203+ 99D0 7C               ld a,h
 204+ 99D1 D6 08            sub 8
 205+ 99D3 67               ld h,a
 206+ 99D4 7C           2 ld a,h
 207+ 99D5 FE 58            cp $58
 208+ 99D7 28 20            jr z,4F
 209+ 99D9 D1               pop de
 210+ 99DA 7B           	ld a,e
 211+ 99DB AE           	xor (hl)
 212+ 99DC 77           	ld (hl),a
 213+ 99DD 23           	inc hl
 214+ 99DE 7A           	ld a,d
 215+ 99DF AE           	xor (hl)
 216+ 99E0 77           	ld (hl),a
 217+ 99E1 2B           	dec hl
 218+ 99E2 24           	inc h
 219+ 99E3 7C               ld a,h
 220+ 99E4 E6 07            and 7
 221+ 99E6 20 0A            jr nz,3F
 222+ 99E8 7D               ld a,l
 223+ 99E9 C6 20            add a,$20
 224+ 99EB 6F               ld l,a
 225+ 99EC 38 04            jr c,3F
 226+ 99EE 7C               ld a,h
 227+ 99EF D6 08            sub 8
 228+ 99F1 67               ld h,a
 229+ 99F2 7C           3 ld a,h
 230+ 99F3 FE 58            cp $58
 231+ 99F5 28 02            jr z,4F
 232+ 99F7 10 C1            djnz 1B
 233+ 99F9 ED 7B 4D 8B  4 ld sp,(Stack)
 234+ 99FD C9           	ret
 235+ 99FE
 236+ 99FE ED 73 4D 8B  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9A02 FD F9        	ld sp,iy
 238+ 9A04 06 08            ld b,8
 239+ 9A06 D1           1 pop de
 240+ 9A07 D1           	pop de
 241+ 9A08 7B           	ld a,e
 242+ 9A09 AE           	xor (hl)
 243+ 9A0A 77           	ld (hl),a
 244+ 9A0B 24            	inc h
 245+ 9A0C 7C               ld a,h
 246+ 9A0D E6 07            and 7
 247+ 9A0F 20 0A            jr nz,2F
 248+ 9A11 7D               ld a,l
 249+ 9A12 C6 20            add a,$20
 250+ 9A14 6F               ld l,a
 251+ 9A15 38 04            jr c,2F
 252+ 9A17 7C               ld a,h
 253+ 9A18 D6 08            sub 8
 254+ 9A1A 67               ld h,a
 255+ 9A1B 7C           2 ld a,h
 256+ 9A1C FE 58            cp $58
 257+ 9A1E 28 1B            jr z,4F
 258+ 9A20 D1               pop de
 259+ 9A21 7A           	ld a,d
 260+ 9A22 AE           	xor (hl)
 261+ 9A23 77           	ld (hl),a
 262+ 9A24 24           	inc h
 263+ 9A25 7C               ld a,h
 264+ 9A26 E6 07            and 7
 265+ 9A28 20 0A            jr nz,3F
 266+ 9A2A 7D               ld a,l
 267+ 9A2B C6 20            add a,$20
 268+ 9A2D 6F               ld l,a
 269+ 9A2E 38 04            jr c,3F
 270+ 9A30 7C               ld a,h
 271+ 9A31 D6 08            sub 8
 272+ 9A33 67               ld h,a
 273+ 9A34 7C           3 ld a,h
 274+ 9A35 FE 58            cp $58
 275+ 9A37 28 02            jr z,4F
 276+ 9A39 10 CB            djnz 1B
 277+ 9A3B ED 7B 4D 8B  4 ld sp,(Stack)
 278+ 9A3F C9           	ret
 279+ 9A40
 280+ 9A40 ED 73 4D 8B  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9A44 FD F9        	ld sp,iy
 282+ 9A46 06 08            ld b,8
 283+ 9A48 D1           1 pop de
 284+ 9A49 7B           	ld a,e
 285+ 9A4A AE           	xor (hl)
 286+ 9A4B 77           	ld (hl),a
 287+ 9A4C 23           	inc hl
 288+ 9A4D 7A           	ld a,d
 289+ 9A4E AE           	xor (hl)
 290+ 9A4F 77           	ld (hl),a
 291+ 9A50 2B           	dec hl
 292+ 9A51 24             	inc h
 293+ 9A52 7C               ld a,h
 294+ 9A53 E6 07            and 7
 295+ 9A55 20 0A            jr nz,2F
 296+ 9A57 7D               ld a,l
 297+ 9A58 C6 20            add a,$20
 298+ 9A5A 6F               ld l,a
 299+ 9A5B 38 04            jr c,2F
 300+ 9A5D 7C               ld a,h
 301+ 9A5E D6 08            sub 8
 302+ 9A60 67               ld h,a
 303+ 9A61 7C           2 ld a,h
 304+ 9A62 FE 58            cp $58
 305+ 9A64 28 21            jr z,4F
 306+ 9A66 D1               pop de
 307+ 9A67 7A           	ld a,d
 308+ 9A68 AE           	xor (hl)
 309+ 9A69 77           	ld (hl),a
 310+ 9A6A 23           	inc hl
 311+ 9A6B D1               pop de
 312+ 9A6C 7B           	ld a,e
 313+ 9A6D AE           	xor (hl)
 314+ 9A6E 77           	ld (hl),a
 315+ 9A6F 2B           	dec hl
 316+ 9A70 24           	inc h
 317+ 9A71 7C               ld a,h
 318+ 9A72 E6 07            and 7
 319+ 9A74 20 0A            jr nz,3F
 320+ 9A76 7D               ld a,l
 321+ 9A77 C6 20            add a,$20
 322+ 9A79 6F               ld l,a
 323+ 9A7A 38 04            jr c,3F
 324+ 9A7C 7C               ld a,h
 325+ 9A7D D6 08            sub 8
 326+ 9A7F 67               ld h,a
 327+ 9A80 7C           3 ld a,h
 328+ 9A81 FE 58            cp $58
 329+ 9A83 28 02            jr z,4F
 330+ 9A85 10 C1            djnz 1B
 331+ 9A87 ED 7B 4D 8B  4 ld sp,(Stack)
 332+ 9A8B C9           	ret
 333+ 9A8C
 334+ 9A8C ED 73 4D 8B  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9A90 FD F9        	ld sp,iy
 336+ 9A92 06 08            ld b,8
 337+ 9A94 D1           1 pop de
 338+ 9A95 7B           	ld a,e
 339+ 9A96 AE           	xor (hl)
 340+ 9A97 77           	ld (hl),a
 341+ 9A98 24            	inc h
 342+ 9A99 7C               ld a,h
 343+ 9A9A E6 07            and 7
 344+ 9A9C 20 0A            jr nz,2F
 345+ 9A9E 7D               ld a,l
 346+ 9A9F C6 20            add a,$20
 347+ 9AA1 6F               ld l,a
 348+ 9AA2 38 04            jr c,2F
 349+ 9AA4 7C               ld a,h
 350+ 9AA5 D6 08            sub 8
 351+ 9AA7 67               ld h,a
 352+ 9AA8 7C           2 ld a,h
 353+ 9AA9 FE 58            cp $58
 354+ 9AAB 28 1C            jr z,4F
 355+ 9AAD D1               pop de
 356+ 9AAE 7A           	ld a,d
 357+ 9AAF AE           	xor (hl)
 358+ 9AB0 77           	ld (hl),a
 359+ 9AB1 24           	inc h
 360+ 9AB2 7C               ld a,h
 361+ 9AB3 E6 07            and 7
 362+ 9AB5 20 0A            jr nz,3F
 363+ 9AB7 7D               ld a,l
 364+ 9AB8 C6 20            add a,$20
 365+ 9ABA 6F               ld l,a
 366+ 9ABB 38 04            jr c,3F
 367+ 9ABD 7C               ld a,h
 368+ 9ABE D6 08            sub 8
 369+ 9AC0 67               ld h,a
 370+ 9AC1 7C           3 ld a,h
 371+ 9AC2 FE 58            cp $58
 372+ 9AC4 28 03            jr z,4F
 373+ 9AC6 D1               pop de
 374+ 9AC7 10 CB            djnz 1B
 375+ 9AC9 ED 7B 4D 8B  4 ld sp,(Stack)
 376+ 9ACD C9           	ret
 377+ 9ACE
 378+ 9ACE              ; ---------------------------------------------------
 379+ 9ACE              ;
 380+ 9ACE              ;   27/02/23
 381+ 9ACE              ;
 382+ 9ACE              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9ACE              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9ACE              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9ACE
 386+ 9ACE ED 73 4D 8B  Pinta_Disparo ld (Stack),sp
 387+ 9AD2 FD F9            ld sp,iy
 388+ 9AD4 06 03            ld b,3
 389+ 9AD6 D1           1 pop de
 390+ 9AD7 7B               ld a,e
 391+ 9AD8 AE               xor (hl)
 392+ 9AD9 77               ld (hl),a
 393+ 9ADA 23               inc hl
 394+ 9ADB 7A               ld a,d
 395+ 9ADC AE               xor (hl)
 396+ 9ADD 77               ld (hl),a
 397+ 9ADE 2B               dec hl
 398+ 9ADF
 399+ 9ADF 24               inc h
 400+ 9AE0 7C               ld a,h
 401+ 9AE1 E6 07            and 7
 402+ 9AE3 20 0A            jr nz,2F
 403+ 9AE5 7D               ld a,l
 404+ 9AE6 C6 20            add a,$20
 405+ 9AE8 6F               ld l,a
 406+ 9AE9 38 04            jr c,2F
 407+ 9AEB 7C               ld a,h
 408+ 9AEC D6 08            sub 8
 409+ 9AEE 67               ld h,a
 410+ 9AEF 7C           2 ld a,h
 411+ 9AF0 FE 58            cp $58
 412+ 9AF2 28 02            jr z,3F
 413+ 9AF4
 414+ 9AF4 10 E0            djnz 1B
 415+ 9AF6 ED 7B 4D 8B  3 ld sp,(Stack)
 416+ 9AFA C9               ret
 417+ 9AFB
# file closed: Rutinas_de_impresion_sprites.asm
1760  9AFB              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9AFB              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9AFB              ;
   3+ 9AFB              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9AFB              ;
   5+ 9AFB              ; *****************************************************************************************************************************************************************************************
   6+ 9AFB              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9AFB
   8+ 9AFB 7C           calcula_tercio ld a,h
   9+ 9AFC E6 18        	and $18
  10+ 9AFE CB 2F        	sra a
  11+ 9B00 CB 2F        	sra a
  12+ 9B02 CB 2F        	sra a
  13+ 9B04 C9           	ret
  14+ 9B05
# file closed: calcula_tercio.asm
1761  9B05              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9B05              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9B05              ;
   3+ 9B05              ;
   4+ 9B05              ;	CLS.
   5+ 9B05              ;
   6+ 9B05              ;	Limpia la pantalla y define sus atributos.
   7+ 9B05              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9B05              ;
   9+ 9B05              ;	COLORES: 0 ..... NEGRO
  10+ 9B05              ;    		 1 ..... AZUL
  11+ 9B05              ; 			 2 ..... ROJO
  12+ 9B05              ;			 3 ..... MAGENTA
  13+ 9B05              ; 			 4 ..... VERDE
  14+ 9B05              ; 			 5 ..... CIAN
  15+ 9B05              ;			 6 ..... AMARILLO
  16+ 9B05              ; 			 7 ..... BLANCO
  17+ 9B05              ;
  18+ 9B05              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9B05              ;
  20+ 9B05              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9B05
  22+ 9B05
  23+ 9B05 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9B08 11 01 40     	LD DE,$4001
  25+ 9B0B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9B0E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9B10 ED B0        	LDIR
  28+ 9B12 01 FF 02     	LD BC,767
  29+ 9B15 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9B16 ED B0        	LDIR
  31+ 9B18 C9           	ret
  32+ 9B19
# file closed: Cls.asm
1762  9B19              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9B19
   2+ 9B19              ; ******************************************************************************************************************************************************************************************
   3+ 9B19              ;
   4+ 9B19              ;   20/05/23
   5+ 9B19              ;
   6+ 9B19              ;	Recompone_posicion_inicio
   7+ 9B19              ;
   8+ 9B19              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9B19              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9B19              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9B19              ;	_ a una u otra rutina.
  12+ 9B19
  13+ 9B19              Recompone_posicion_inicio
  14+ 9B19
  15+ 9B19 2A 0D 8B     	ld hl,(Posicion_inicio)
  16+ 9B1C 7D           	ld a,l
  17+ 9B1D E6 1F        	and $1f
  18+ 9B1F 28 16        	jr z,1F
  19+ 9B21
  20+ 9B21 FE 1F        	cp $1f
  21+ 9B23 28 0D        	jr z,3F
  22+ 9B25
  23+ 9B25 21 22 8B     	ld hl,Ctrl_2
  24+ 9B28 CB C6        	set 0,(hl)
  25+ 9B2A 2A FF 8A     	ld hl,(Puntero_objeto)
  26+ 9B2D 22 3D 8B     	ld (Repone_puntero_objeto),hl
  27+ 9B30 18 08        	jr 2F
  28+ 9B32
  29+ 9B32 CD E0 9C     3 call Mov_left
  30+ 9B35 18 03        	jr 2F
  31+ 9B37
  32+ 9B37 CD BD 9B     1 call Mov_right
  33+ 9B3A 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9B3D 22 FF 8A     	ld (Puntero_objeto),hl
  35+ 9B40 C9           	ret
  36+ 9B41
  37+ 9B41              ; ******************************************************************************************************************************************************************************************
  38+ 9B41              ;
  39+ 9B41              ;   27/05/23
  40+ 9B41              ;
  41+ 9B41              ;	Mov_down
  42+ 9B41              ;
  43+ 9B41              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9B41              ;
  45+ 9B41              ;
  46+ 9B41              Mov_down
  47+ 9B41
  48+ 9B41 CD AB 9B     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9B44              ;																	; _ repone (Puntero_objeto).
  50+ 9B44 21 1D 8B     	ld hl,Ctrl_0
  51+ 9B47 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9B49              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9B49              ; 																	; _ en el caso de que no lo haya.
  54+ 9B49 3A 27 8B     	ld a,(Vel_down)
  55+ 9B4C 47           	ld b,a
  56+ 9B4D 2A FD 8A         ld hl,(Posicion_actual)
  57+ 9B50 CD FB 9A     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9B53 E6 02        	and 2
  59+ 9B55 28 17        	jr z,1F
  60+ 9B57
  61+ 9B57              ; Nos encontramos en el último tercio de pantalla.
  62+ 9B57              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9B57
  64+ 9B57 7C           	ld a,h
  65+ 9B58 FE 57        	cp $57
  66+ 9B5A 20 12        	jr nz,1F
  67+ 9B5C
  68+ 9B5C 7D           	ld a,l
  69+ 9B5D C6 20        	add $20
  70+ 9B5F 30 0D        	jr nc,1F
  71+ 9B61
  72+ 9B61              ; ------------------------------
  73+ 9B61              ;
  74+ 9B61              ;	12/01/24
  75+ 9B61
  76+ 9B61              ;	call Reaparece_arriba
  77+ 9B61 CD 6D 9E     	call Reinicio
  78+ 9B64
  79+ 9B64              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9B64
  81+ 9B64 3A 5B 8B     	ld a,(Ctrl_3)
  82+ 9B67 CB CF        	set 1,a
  83+ 9B69 32 5B 8B     	ld (Ctrl_3),a
  84+ 9B6C
  85+ 9B6C 18 08        	jr 3F
  86+ 9B6E              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9B6E              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9B6E              ; ------------------------------
  89+ 9B6E
  90+ 9B6E CD E8 97     1 call NextScan
  91+ 9B71 22 FD 8A     	ld (Posicion_actual),hl
  92+ 9B74 10 DA            djnz 2B
  93+ 9B76 CD 93 9E     3 call Genera_coordenadas
  94+ 9B79 C9           	ret
  95+ 9B7A
  96+ 9B7A              ; ******************************************************************************************************************************************************************************************
  97+ 9B7A              ;
  98+ 9B7A              ;   27/05/23
  99+ 9B7A              ;
 100+ 9B7A              ;	Mov_up
 101+ 9B7A              ;
 102+ 9B7A              ; 	Mueve el Sprite hacia arriba.
 103+ 9B7A              ;
 104+ 9B7A              ;
 105+ 9B7A              Mov_up
 106+ 9B7A
 107+ 9B7A CD AB 9B     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9B7D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9B7D 21 1D 8B     	ld hl,Ctrl_0
 110+ 9B80 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9B82              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9B82              ; 																		; _ en el caso de que no lo haya.
 113+ 9B82 3A 26 8B     	ld a,(Vel_up)
 114+ 9B85 47           	ld b,a
 115+ 9B86 2A FD 8A     	ld hl,(Posicion_actual)
 116+ 9B89 CD FB 9A     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9B8C A7           	and a
 118+ 9B8D 20 10        	jr nz,1F
 119+ 9B8F
 120+ 9B8F              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9B8F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9B8F
 123+ 9B8F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9B90 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9B92 20 0B            jr nz,1F
 126+ 9B94 7D               ld a,l
 127+ 9B95 D6 20            sub $20
 128+ 9B97 30 06            jr nc,1F
 129+ 9B99 25               dec h
 130+ 9B9A
 131+ 9B9A              ; -----------------------------
 132+ 9B9A CD 4E 9E         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9B9D              ;	call Reinicio
 134+ 9B9D              ; -----------------------------
 135+ 9B9D
 136+ 9B9D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9B9F CD F7 97     1 call PreviousScan
 138+ 9BA2 22 FD 8A     	ld (Posicion_actual),hl
 139+ 9BA5 10 E2            djnz 3B
 140+ 9BA7 CD 93 9E     2 call Genera_coordenadas
 141+ 9BAA C9           	ret
 142+ 9BAB
 143+ 9BAB              ; -----------------------------
 144+ 9BAB              ;
 145+ 9BAB              ;	27/5/23
 146+ 9BAB              ;
 147+ 9BAB              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9BAB              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9BAB              ;
 150+ 9BAB              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9BAB              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9BAB              ;
 153+ 9BAB              ;	Modifica: A y (Puntero_objeto).
 154+ 9BAB
 155+ 9BAB 3A 22 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9BAE CB 47        	bit 0,a
 157+ 9BB0 C8           	ret z
 158+ 9BB1 CB 87        	res 0,a
 159+ 9BB3 32 22 8B     	ld (Ctrl_2),a
 160+ 9BB6 2A 3D 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9BB9 22 FF 8A     	ld (Puntero_objeto),hl
 162+ 9BBC C9           	ret
 163+ 9BBD
 164+ 9BBD              ; ******************************************************************************************************************************************************************************************
 165+ 9BBD              ;
 166+ 9BBD              ;	19/10/22
 167+ 9BBD              ;
 168+ 9BBD              ;	Mov_right.
 169+ 9BBD              ;
 170+ 9BBD              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9BBD              ;
 172+ 9BBD
 173+ 9BBD 3A 1D 8B     Mov_right ld a,(Ctrl_0)
 174+ 9BC0 CB 77        	bit 6,a
 175+ 9BC2 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9BC4
 177+ 9BC4 CD FC 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9BC7 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9BC8
 180+ 9BC8 21 1D 8B     	ld hl,Ctrl_0
 181+ 9BCB CB E6        	set 4,(hl)
 182+ 9BCD 18 52        	jr 8F
 183+ 9BCF
 184+ 9BCF 21 1D 8B     10 ld hl,Ctrl_0
 185+ 9BD2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9BD4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9BD4              ; 																	; _ en el caso de que no lo haya.
 188+ 9BD4 3A 01 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9BD7 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9BD9 20 46        	jr nz,8F
 191+ 9BDB
 192+ 9BDB 3A 03 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9BDE A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9BDF 28 40        	jr z,8F
 195+ 9BE1
 196+ 9BE1              ; ---------- ---------- ----------
 197+ 9BE1              ;
 198+ 9BE1              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9BE1
 200+ 9BE1 3A 25 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9BE4 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9BE6 28 11        	jr z,1F
 203+ 9BE8 38 06        	jr c,6F
 204+ 9BEA FE 04        	cp 4
 205+ 9BEC 28 14        	jr z,7F
 206+ 9BEE 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9BF0
 208+ 9BF0              ; ---------- ---------- ----------
 209+ 9BF0              ;
 210+ 9BF0              ; Perfiles de velocidad
 211+ 9BF0              ;
 212+ 9BF0
 213+ 9BF0 3A 03 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9BF3 FE FE        	cp $fe
 215+ 9BF5 20 2A        	jr nz,8F
 216+ 9BF7 18 10        	jr 3F
 217+ 9BF9 3A 03 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9BFC FE FD        	cp $fd
 219+ 9BFE 20 21        	jr nz,8F
 220+ 9C00 18 07        	jr 3F
 221+ 9C02 3A 03 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9C05 FE FB        	cp $fb
 223+ 9C07 20 18        	jr nz,8F
 224+ 9C09
 225+ 9C09              ; ---------- ---------- ----------
 226+ 9C09
 227+ 9C09              3
 228+ 9C09 CD 3C 9E     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9C0C              ;	call Reinicio
 230+ 9C0C
 231+ 9C0C              ; ---------- ---------- ----------
 232+ 9C0C              ;
 233+ 9C0C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9C0C
 235+ 9C0C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9C0E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9C0F CD 28 9C     	call DESPLZ_DER
 238+ 9C12 C1           	pop bc
 239+ 9C13 10 F9        	djnz 5B
 240+ 9C15 2A FD 8A     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9C18 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9C19 22 FD 8A     	ld (Posicion_actual),hl
 243+ 9C1C CD 93 9E     	call Genera_coordenadas
 244+ 9C1F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9C21
 246+ 9C21              ; ---------- ---------- ----------
 247+ 9C21
 248+ 9C21 2A FD 8A     8 ld hl,(Posicion_actual)
 249+ 9C24 CD 28 9C     	call DESPLZ_DER
 250+ 9C27 C9           2 ret
 251+ 9C28
 252+ 9C28              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9C28              ;
 254+ 9C28              ;	22/9/22
 255+ 9C28              ;
 256+ 9C28
 257+ 9C28 CD 37 9C     DESPLZ_DER call Desplaza_derecha
 258+ 9C2B CD 83 9C         call modifica_parametros_1er_DESPLZ_2
 259+ 9C2E CD AC 9C         call Ciclo_completo
 260+ 9C31 21 1D 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9C34 CB FE        	set 7,(hl)
 262+ 9C36 C9           	ret
 263+ 9C37
 264+ 9C37              ; ******************************************************************************************************************************************************************************************
 265+ 9C37              ;	15/02/23
 266+ 9C37              ;
 267+ 9C37
 268+ 9C37 3A 25 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9C3A 47           	ld b,a
 270+ 9C3B 2A 09 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9C3E 23           1 inc hl
 272+ 9C3F 23           	inc hl
 273+ 9C40 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9C42 22 09 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9C45 CD 4B 8D     	call Extrae_address
 276+ 9C48 22 FF 8A     	ld (Puntero_objeto),hl
 277+ 9C4B
 278+ 9C4B              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9C4B
 280+ 9C4B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9C4B              ; Cuántos movimientos hemos hecho ??
 282+ 9C4B              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9C4B
 284+ 9C4B 2A 05 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9C4E EB           	ex de,hl
 286+ 9C4F A7           	and a
 287+ 9C50 ED 52        	sbc hl,de
 288+ 9C52 CB 3D        	srl l
 289+ 9C54 3E 08        6 ld a,8
 290+ 9C56 95           	sub l
 291+ 9C57 30 1E        	jr nc,3F
 292+ 9C59
 293+ 9C59              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9C59              ; B="0".
 295+ 9C59
 296+ 9C59 04           4 inc b
 297+ 9C5A 3C           	inc a
 298+ 9C5B 20 FC        	jr nz,4B
 299+ 9C5D 78           	ld a,b
 300+ 9C5E 08           	ex af,af
 301+ 9C5F 2A 05 8B     	ld hl,(Indice_Sprite_der)
 302+ 9C62 23           5 inc hl
 303+ 9C63 23           	inc hl
 304+ 9C64 10 FC        	djnz 5B
 305+ 9C66 22 09 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9C69 CD 4B 8D     	call Extrae_address
 307+ 9C6C 22 FF 8A     	ld (Puntero_objeto),hl
 308+ 9C6F
 309+ 9C6F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9C6F              ; _(Posicion_actual).
 311+ 9C6F
 312+ 9C6F 21 FD 8A     	ld hl,Posicion_actual
 313+ 9C72 34           	inc (hl)
 314+ 9C73 08               ex af,af
 315+ 9C74 6F           	ld l,a
 316+ 9C75 18 DD        	jr 6B
 317+ 9C77
 318+ 9C77              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9C77
 320+ 9C77 47           3 ld b,a
 321+ 9C78 2A 07 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9C7B 23           2 inc hl
 323+ 9C7C 23           	inc hl
 324+ 9C7D 10 FC        	djnz 2B
 325+ 9C7F 22 0B 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9C82 C9           8 ret
 327+ 9C83
 328+ 9C83              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9C83              ;
 330+ 9C83              ;	24/7/22
 331+ 9C83              ;
 332+ 9C83              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9C83              ;
 334+ 9C83              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9C83              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9C83              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9C83
 338+ 9C83 3A 03 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9C86 A7           	and a
 340+ 9C87 20 1F        	jr nz,1F
 341+ 9C89 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9C8B 32 03 8B         ld (CTRL_DESPLZ),a
 343+ 9C8E
 344+ 9C8E 21 FC 8A     	ld hl,Columns
 345+ 9C91 34           	inc (hl)
 346+ 9C92 3A 0F 8B     	ld a,(Cuad_objeto)
 347+ 9C95 E6 01        	and 1
 348+ 9C97 28 0F        	jr z,1F
 349+ 9C99 2A FD 8A     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9C9C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9C9D 22 FD 8A     	ld (Posicion_actual),hl
 352+ 9CA0 CD 93 9E     	call Genera_coordenadas
 353+ 9CA3 CD 08 9E     	call Inc_CTRL_DESPLZ
 354+ 9CA6 18 03        	jr 2F
 355+ 9CA8 CD 08 9E     1 call Inc_CTRL_DESPLZ
 356+ 9CAB C9           2 ret
 357+ 9CAC
 358+ 9CAC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9CAC              ;
 360+ 9CAC              ;	24/7/22
 361+ 9CAC              ;
 362+ 9CAC              ;	Ciclo_completo.
 363+ 9CAC              ;
 364+ 9CAC              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9CAC              ;
 366+ 9CAC              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9CAC              ; 	Decrementamos (Columns).
 368+ 9CAC              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9CAC              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9CAC
 371+ 9CAC
 372+ 9CAC 3A 03 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9CAF FE FF        	cp $ff
 374+ 9CB1 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9CB3 E6 F0        	and $f0
 376+ 9CB5 20 28        	jr nz,3F
 377+ 9CB7
 378+ 9CB7              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9CB7
 380+ 9CB7 3A 03 8B     	ld a,(CTRL_DESPLZ)
 381+ 9CBA 47           	ld b,a
 382+ 9CBB 3E F8        	ld a,$f8
 383+ 9CBD 80           	add b
 384+ 9CBE 32 03 8B     	ld (CTRL_DESPLZ),a
 385+ 9CC1 18 1C        	jr 3F
 386+ 9CC3 21 FC 8A     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9CC6 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9CC7 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9CC8 32 03 8B     	ld (CTRL_DESPLZ),a
 390+ 9CCB 3A 0F 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9CCE E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9CD0 20 0A        	jr nz,2F
 393+ 9CD2 2A FD 8A     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9CD5 23           	inc hl
 395+ 9CD6 22 FD 8A     	ld (Posicion_actual),hl
 396+ 9CD9 CD 93 9E     	call Genera_coordenadas
 397+ 9CDC
 398+ 9CDC              ; Inicia el puntero de Sprite.
 399+ 9CDC
 400+ 9CDC CD 60 8D     2 call Inicia_puntero_objeto_der
 401+ 9CDF C9           3 ret
 402+ 9CE0
 403+ 9CE0              ; ******************************************************************************************************************************************************************************************
 404+ 9CE0              ;
 405+ 9CE0              ;	15/02/23
 406+ 9CE0              ;
 407+ 9CE0              ;	Mov_left.
 408+ 9CE0              ;
 409+ 9CE0              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9CE0              ;
 411+ 9CE0              Mov_left
 412+ 9CE0
 413+ 9CE0 21 1D 8B     	ld hl,Ctrl_0
 414+ 9CE3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9CE5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9CE5              ; 																	; _ en el caso de que no lo haya.
 417+ 9CE5 3A 1D 8B     	ld a,(Ctrl_0)
 418+ 9CE8 CB 77        	bit 6,a
 419+ 9CEA 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9CEC
 421+ 9CEC CD 02 9E     	call Stop_Amadeus_left
 422+ 9CEF C8           	ret z
 423+ 9CF0 20 4A        	jr nz,8F
 424+ 9CF2
 425+ 9CF2 3A 01 8B     11 ld a,(Coordenada_X)
 426+ 9CF5 A7           	and a
 427+ 9CF6 20 44        	jr nz,8F
 428+ 9CF8
 429+ 9CF8 3A 03 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9CFB A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9CFC 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9CFE
 433+ 9CFE              ; ---------- ---------- ----------
 434+ 9CFE
 435+ 9CFE 3A 24 8B     	ld a,(Vel_left)
 436+ 9D01 FE 02        	cp 2
 437+ 9D03 28 0F        	jr z,1F
 438+ 9D05 38 04        	jr c,6F
 439+ 9D07 FE 04        	cp 4
 440+ 9D09 28 12        	jr z,7F
 441+ 9D0B
 442+ 9D0B              ; ---------- ---------- ----------
 443+ 9D0B
 444+ 9D0B 3A 03 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9D0E FE F8        	cp $f8
 446+ 9D10 20 2A        	jr nz,8F
 447+ 9D12 18 10        	jr 4F
 448+ 9D14 3A 03 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9D17 FE F9        	cp $f9
 450+ 9D19 20 21        	jr nz,8F
 451+ 9D1B 18 07        	jr 4F
 452+ 9D1D 3A 03 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9D20 FE FB        	cp $fb
 454+ 9D22 20 18        	jr nz,8F
 455+ 9D24
 456+ 9D24              ; ---------- ---------- ----------
 457+ 9D24
 458+ 9D24              4
 459+ 9D24 CD 2A 9E     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9D27              ;	call Reinicio
 461+ 9D27
 462+ 9D27              ; ---------- ---------- ----------
 463+ 9D27
 464+ 9D27 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9D29 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9D2A
 467+ 9D2A              ;	ld hl,(Indice_Sprite_izq)
 468+ 9D2A              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9D2A
 470+ 9D2A CD 43 9D     	call DESPLZ_IZQ
 471+ 9D2D C1           	pop bc
 472+ 9D2E 10 F9        	djnz 5B
 473+ 9D30 2A FD 8A     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9D33 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9D34 22 FD 8A     	ld (Posicion_actual),hl
 476+ 9D37 CD 93 9E     	call Genera_coordenadas
 477+ 9D3A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9D3C
 479+ 9D3C              ; ---------- ---------- ----------
 480+ 9D3C
 481+ 9D3C              ; Movemos, no hay recolocación.
 482+ 9D3C
 483+ 9D3C 2A FD 8A     8 ld hl,(Posicion_actual)
 484+ 9D3F CD 43 9D     	call DESPLZ_IZQ
 485+ 9D42 C9           2 ret
 486+ 9D43
 487+ 9D43              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9D43              ;
 489+ 9D43              ;	22/9/22
 490+ 9D43
 491+ 9D43              DESPLZ_IZQ
 492+ 9D43
 493+ 9D43 CD 52 9D     	call Desplaza_izquierda
 494+ 9D46 CD 9E 9D         call modifica_parametros_1er_DESPLZ
 495+ 9D49 CD C6 9D     	call Ciclo_completo_2
 496+ 9D4C 21 1D 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9D4F CB BE        	res 7,(hl)
 498+ 9D51 C9           	ret
 499+ 9D52
 500+ 9D52              Desplaza_izquierda
 501+ 9D52
 502+ 9D52 3A 24 8B     	ld a,(Vel_left)
 503+ 9D55 47           	ld b,a
 504+ 9D56 2A 0B 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9D59 23           1 inc hl
 506+ 9D5A 23           	inc hl
 507+ 9D5B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9D5D 22 0B 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9D60 CD 4B 8D     	call Extrae_address
 510+ 9D63 22 FF 8A     	ld (Puntero_objeto),hl
 511+ 9D66
 512+ 9D66              ; Modifica (Puntero_DESPLZ_der).
 513+ 9D66
 514+ 9D66              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9D66              ; Cuántos movimientos hemos hecho ??
 516+ 9D66              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9D66
 518+ 9D66 2A 07 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9D69 EB           	ex de,hl
 520+ 9D6A A7           	and a
 521+ 9D6B ED 52        	sbc hl,de
 522+ 9D6D CB 3D        	srl l
 523+ 9D6F 3E 08        6 ld a,8
 524+ 9D71 95           	sub l
 525+ 9D72 30 1E        	jr nc,3F
 526+ 9D74
 527+ 9D74              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9D74              ; B="0".
 529+ 9D74
 530+ 9D74 04           4 inc b
 531+ 9D75 3C           	inc a
 532+ 9D76 20 FC        	jr nz,4B
 533+ 9D78 78           	ld a,b
 534+ 9D79 08           	ex af,af
 535+ 9D7A 2A 07 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9D7D 23           5 inc hl
 537+ 9D7E 23           	inc hl
 538+ 9D7F 10 FC        	djnz 5B
 539+ 9D81 22 0B 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9D84 CD 4B 8D     	call Extrae_address
 541+ 9D87 22 FF 8A     	ld (Puntero_objeto),hl
 542+ 9D8A
 543+ 9D8A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9D8A              ; _(Posicion_actual).
 545+ 9D8A
 546+ 9D8A 21 FD 8A     	ld hl,Posicion_actual
 547+ 9D8D 35           	dec (hl)
 548+ 9D8E 08           	ex af,af
 549+ 9D8F 6F           	ld l,a
 550+ 9D90 18 DD        	jr 6B
 551+ 9D92
 552+ 9D92              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9D92
 554+ 9D92 47           3 ld b,a
 555+ 9D93 2A 05 8B     	ld hl,(Indice_Sprite_der)
 556+ 9D96 23           2 inc hl
 557+ 9D97 23           	inc hl
 558+ 9D98 10 FC        	djnz 2B
 559+ 9D9A 22 09 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9D9D C9           8 ret
 561+ 9D9E
 562+ 9D9E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9D9E              ;
 564+ 9D9E              ;	modifica_parametros_1er_DESPLZ
 565+ 9D9E              ;
 566+ 9D9E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9D9E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9D9E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9D9E
 570+ 9D9E 3A 03 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9DA1 A7           	and a
 572+ 9DA2 20 1E        	jr nz,1F
 573+ 9DA4 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9DA5 32 03 8B         ld (CTRL_DESPLZ),a
 575+ 9DA8 21 FC 8A     	ld hl,Columns
 576+ 9DAB 34           	inc (hl)
 577+ 9DAC 3A 0F 8B     	ld a,(Cuad_objeto)
 578+ 9DAF E6 01        	and 1
 579+ 9DB1 20 0F        	jr nz,1F
 580+ 9DB3 2A FD 8A     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9DB6 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9DB7 22 FD 8A     	ld (Posicion_actual),hl
 583+ 9DBA CD 93 9E     	call Genera_coordenadas
 584+ 9DBD CD 19 9E     	call Dec_CTRL_DESPLZ
 585+ 9DC0 18 03        	jr 2F
 586+ 9DC2 CD 19 9E     1 call Dec_CTRL_DESPLZ
 587+ 9DC5 C9           2 ret
 588+ 9DC6
 589+ 9DC6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9DC6
 591+ 9DC6 3A 03 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9DC9 FE F7        	cp $f7
 593+ 9DCB 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9DCD 30 2C        	jr nc,3F
 595+ 9DCF
 596+ 9DCF              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9DCF
 598+ 9DCF 06 00        	ld b,0
 599+ 9DD1 04           4 inc b
 600+ 9DD2 3C           	inc a
 601+ 9DD3 FE F7        	cp $f7
 602+ 9DD5 20 FA        	jr nz,4B
 603+ 9DD7 3E FF        	ld a,$ff
 604+ 9DD9 90           	sub b
 605+ 9DDA 32 03 8B     	ld (CTRL_DESPLZ),a
 606+ 9DDD 18 1C        	jr 3F
 607+ 9DDF
 608+ 9DDF              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9DDF
 610+ 9DDF 21 FC 8A     1 ld hl,Columns
 611+ 9DE2 35           	dec (hl)
 612+ 9DE3 AF           	xor a
 613+ 9DE4 32 03 8B     	ld (CTRL_DESPLZ),a
 614+ 9DE7 3A 0F 8B     	ld a,(Cuad_objeto)
 615+ 9DEA E6 01        	and 1
 616+ 9DEC 28 0A        	jr z,2F
 617+ 9DEE 2A FD 8A     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9DF1 2B           	dec hl
 619+ 9DF2 22 FD 8A     	ld (Posicion_actual),hl
 620+ 9DF5 CD 93 9E     	call Genera_coordenadas
 621+ 9DF8
 622+ 9DF8              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9DF8
 624+ 9DF8 CD 73 8D     2 call Inicia_puntero_objeto_izq
 625+ 9DFB C9           3 ret
 626+ 9DFC
 627+ 9DFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9DFC              ;
 629+ 9DFC              ;	19/10/22
 630+ 9DFC              ;
 631+ 9DFC              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9DFC              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9DFC
 634+ 9DFC 3A 01 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9DFF FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9E01 C9           	ret
 637+ 9E02
 638+ 9E02              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9E02              ;
 640+ 9E02              ;	19/10/22
 641+ 9E02              ;
 642+ 9E02              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9E02              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9E02
 645+ 9E02 3A 01 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9E05 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9E07 C9           	ret
 648+ 9E08
 649+ 9E08              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9E08              ;
 651+ 9E08              ;	24/7/22
 652+ 9E08              ;
 653+ 9E08              ;	Inc_CTRL_DESPLZ
 654+ 9E08              ;
 655+ 9E08              ;
 656+ 9E08              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9E08
 658+ 9E08 21 03 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9E0B 3A 25 8B     	ld a,(Vel_right)
 660+ 9E0E A7           	and a
 661+ 9E0F 28 06        	jr z,1F
 662+ 9E11 47           	ld b,a
 663+ 9E12 34           3 inc (hl)
 664+ 9E13 10 FD        	djnz 3B
 665+ 9E15 18 01        	jr 2F
 666+ 9E17 34           1 inc (hl)
 667+ 9E18 C9           2 ret
 668+ 9E19
 669+ 9E19              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9E19              ;
 671+ 9E19              ;	5/2/23
 672+ 9E19              ;
 673+ 9E19              ;	Dec_CTRL_DESPLZ
 674+ 9E19              ;
 675+ 9E19              ;
 676+ 9E19              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9E19
 678+ 9E19 21 03 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9E1C 3A 24 8B     	ld a,(Vel_left)
 680+ 9E1F A7           	and a
 681+ 9E20 28 06        	jr z,1F
 682+ 9E22 47           	ld b,a
 683+ 9E23 35           3 dec (hl)
 684+ 9E24 10 FD        	djnz 3B
 685+ 9E26 18 01        	jr 2F
 686+ 9E28 35           1 dec (hl)
 687+ 9E29 C9           2 ret
 688+ 9E2A
 689+ 9E2A              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9E2A
 691+ 9E2A 2A FD 8A     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9E2D 01 1F 00     	ld bc,31
 693+ 9E30 A7           	and a
 694+ 9E31 ED 4A        	adc hl,bc
 695+ 9E33 22 FD 8A     	ld (Posicion_actual),hl
 696+ 9E36 21 1D 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9E39 CB C6        	set 0,(hl)
 698+ 9E3B C9           	ret
 699+ 9E3C
 700+ 9E3C              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9E3C
 702+ 9E3C 2A FD 8A     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9E3F 01 1F 00     	ld bc,31
 704+ 9E42 A7           	and a
 705+ 9E43 ED 42        	sbc hl,bc
 706+ 9E45 22 FD 8A     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9E48 21 1D 8B     	ld hl,Ctrl_0
 708+ 9E4B CB CE        	set 1,(hl)
 709+ 9E4D C9           	ret
 710+ 9E4E
 711+ 9E4E              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9E4E
 713+ 9E4E 24           Reaparece_abajo inc h
 714+ 9E4F 01 E0 17     	ld bc,$17e0
 715+ 9E52 A7           	and a
 716+ 9E53 ED 4A        	adc hl,bc
 717+ 9E55 22 FD 8A     	ld (Posicion_actual),hl
 718+ 9E58 21 1D 8B     	ld hl,Ctrl_0
 719+ 9E5B CB D6        	set 2,(hl)
 720+ 9E5D C9           	ret
 721+ 9E5E
 722+ 9E5E              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9E5E
 724+ 9E5E 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9E61 A7           	and a
 726+ 9E62 ED 42        	sbc hl,bc
 727+ 9E64 22 FD 8A     	ld (Posicion_actual),hl
 728+ 9E67 21 1D 8B     	ld hl,Ctrl_0
 729+ 9E6A CB DE        	set 3,(hl)
 730+ 9E6C C9           	ret
 731+ 9E6D
 732+ 9E6D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9E6D              ;
 734+ 9E6D              ;	15/07/23
 735+ 9E6D
 736+ 9E6D              Reinicio
 737+ 9E6D
 738+ 9E6D              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9E6D
 740+ 9E6D AF           	xor a
 741+ 9E6E 21 34 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9E71 CD 8F 9E     	call Limpia_contenido_hl
 743+ 9E74
 744+ 9E74 21 FD 8A     	ld hl,Posicion_actual
 745+ 9E77 CD 8F 9E     	call Limpia_contenido_hl
 746+ 9E7A
 747+ 9E7A CD 68 89     	call Inicializa_Puntero_indice_mov
 748+ 9E7D CD 69 8F     	call Inicia_Puntero_mov
 749+ 9E80
 750+ 9E80 21 36 8B     	ld hl,Incrementa_puntero
 751+ 9E83 06 05        	ld b,5
 752+ 9E85 77           1 ld (hl),a
 753+ 9E86 23           	inc hl
 754+ 9E87 10 FC        	djnz 1B
 755+ 9E89
 756+ 9E89 21 22 8B     	ld hl,Ctrl_2
 757+ 9E8C CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9E8E
 759+ 9E8E C9           	ret
 760+ 9E8F
 761+ 9E8F 77           Limpia_contenido_hl	ld (hl),a
 762+ 9E90 23           	inc hl
 763+ 9E91 77           	ld (hl),a
 764+ 9E92 C9           	ret
 765+ 9E93
 766+ 9E93
# file closed: Direcciones.asm
1763  9E93              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9E93              ; ------------------------------------------------------------------------
   2+ 9E93              ;
   3+ 9E93              ;	30/1/24
   4+ 9E93              ;
   5+ 9E93              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9E93              ;	Fila superior "0", Columna izquierda "0".
   7+ 9E93              ;
   8+ 9E93              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9E93              ;
  10+ 9E93              ;	Modifica: A,BC y DE.
  11+ 9E93
  12+ 9E93 7D           Genera_coordenadas ld a,l
  13+ 9E94 E6 1F        	and $1f
  14+ 9E96 32 01 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9E99
  16+ 9E99 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9E9A FE 40        	cp $40
  18+ 9E9C 38 1C        	jr c,4F
  19+ 9E9E
  20+ 9E9E CD FB 9A     	call calcula_tercio
  21+ 9EA1 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9EA2
  23+ 9EA2 1E 00        	ld e,0
  24+ 9EA4 7D           	ld a,l
  25+ 9EA5 E6 E0        	and $e0
  26+ 9EA7 28 01        	jr z,1F
  27+ 9EA9 04           	inc b
  28+ 9EAA
  29+ 9EAA 04           1 inc b
  30+ 9EAB 05           	dec b
  31+ 9EAC 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9EAE              ;														; _ , salimos.
  33+ 9EAE 1C           3 inc e
  34+ 9EAF D6 20        	sub 32
  35+ 9EB1 20 FB        	jr nz,3B
  36+ 9EB3 10 F5        	djnz 1B
  37+ 9EB5
  38+ 9EB5 7B           2 ld a,e
  39+ 9EB6 32 02 8B     	ld (Coordenada_y),a
  40+ 9EB9 C9           	ret
  41+ 9EBA
  42+ 9EBA AF           4 xor a
  43+ 9EBB 32 02 8B     	ld (Coordenada_y),a
  44+ 9EBE C9           	ret
  45+ 9EBF
  46+ 9EBF              ; ------------------------------------------------------------------------
  47+ 9EBF              ;	28/05/23
  48+ 9EBF              ;
  49+ 9EBF              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9EBF              ;	Fila superior "0", Columna izquierda "0".
  51+ 9EBF              ;
  52+ 9EBF              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9EBF              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9EBF              ;
  55+ 9EBF              ;		DE="$120d"
  56+ 9EBF              ;
  57+ 9EBF              ;		D, (Coordenada_X), Columnas, $12
  58+ 9EBF              ;		E, (Coordenada_y), Filas, $0d
  59+ 9EBF              ;
  60+ 9EBF              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9EBF
  62+ 9EBF              ;	Modifica: A,BC y DE.
  63+ 9EBF
  64+ 9EBF
  65+ 9EBF              Genera_coordenadas_disparo
  66+ 9EBF
  67+ 9EBF              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9EBF
  69+ 9EBF 7D           	ld a,l
  70+ 9EC0 E6 1F        	and $1f
  71+ 9EC2 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9EC3 CD FB 9A     	call calcula_tercio
  73+ 9EC6 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9EC7 1E 00        	ld e,0
  75+ 9EC9 7D           	ld a,l
  76+ 9ECA E6 E0        	and $e0
  77+ 9ECC 28 01        	jr z,1F
  78+ 9ECE 04           	inc b
  79+ 9ECF 1C           1 inc e
  80+ 9ED0 D6 20        	sub 32
  81+ 9ED2 20 FB        	jr nz,1B
  82+ 9ED4 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9ED6 C9           	ret
  84+ 9ED7
# file closed: Genera_coordenadas.asm
1764  9ED7              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9ED7              ; Relojes y temporizaciones.
   2+ 9ED7
   3+ 9ED7              ; ------------------------------------------------------
   4+ 9ED7              ;
   5+ 9ED7              ;	16/7/23
   6+ 9ED7              ;
   7+ 9ED7              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9ED7              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9ED7              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9ED7              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9ED7              ;
  12+ 9ED7              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9ED7              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9ED7
  15+ 9ED7              ; Disparo_entidad db 1
  16+ 9ED7              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9ED7              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9ED7
  19+ 9ED7              Habilita_disparos
  20+ 9ED7
  21+ 9ED7 7E           	ld a,(hl)
  22+ 9ED8 A7           	and a
  23+ 9ED9 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9EDA
  25+ 9EDA EB           	ex de,hl
  26+ 9EDB
  27+ 9EDB 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9EDC C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9EDD
  30+ 9EDD              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9EDD
  32+ 9EDD 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9EDE 7E           	ld a,(hl)
  34+ 9EDF 23           	inc hl
  35+ 9EE0 77           	ld (hl),a
  36+ 9EE1
  37+ 9EE1 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9EE2 3E 01        	ld a,1
  39+ 9EE4 77           	ld (hl),a
  40+ 9EE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1765  9EE6              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9EE6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9EE6              ;
   3+ 9EE6              ;	12/12/23
   4+ 9EE6              ;
   5+ 9EE6              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9EE6
   7+ 9EE6              ;	ADC HL,SP	LD (addr),SP
   8+ 9EE6              ;	ADD HL,SP	LD SP,(addr)
   9+ 9EE6              ;	ADD IX,SP	LD SP,nn
  10+ 9EE6              ; 	ADD IY,SP	LD SP,HL
  11+ 9EE6              ;				LD SP,IX
  12+ 9EE6              ;	DEC SP		LD SP,IY
  13+ 9EE6
  14+ 9EE6              ;	EX (SP),HL
  15+ 9EE6              ;	EX (SP),IX
  16+ 9EE6              ;	EX (SP),IY
  17+ 9EE6
  18+ 9EE6              ;	INC SP
  19+ 9EE6
  20+ 9EE6                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 4D 8B      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 17 8B         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 19 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 3C 8B         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A 55 8B         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 1D 8B     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A 59 8B         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A 53 8B     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 3C 8B         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 55 8B         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 1D 8B     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 59 8B         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B 4D 8B      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 53 8B     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B 4D 8B  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A 53 8B         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 53 8B         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1766  8131
1767  8131              	SAVESNA "Pruebas.sna", START
1768  8131
1769  8131
1770  8131
1771  8131
# file closed: Banco_de_pruebas.asm
