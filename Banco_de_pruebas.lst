# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 92 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 B1 84        	defw Entidad_1
  98+ 846A EC 84        	defw Entidad_2
  99+ 846C 27 85        	defw Entidad_3
 100+ 846E 62 85        	defw Entidad_4
 101+ 8470 9D 85        	defw Entidad_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480
 119+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 120+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B
 127+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 128+ 848F
 129+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 130+ 8490
 131+ 8490 00 00        	db 0,0											; Variables_de_borrado
 132+ 8492 00 00        	defw 0											;	" " " " " " "
 133+ 8494 00 00        	defw 0											;	" " " " " " "
 134+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 135+ 849A
 136+ 849A 00 00        	db 0,0											; Variables_de_pintado
 137+ 849C 00 00        	defw 0											;	" " " " " " "
 138+ 849E 00 00        	defw 0											;	" " " " " " "
 139+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 140+ 84A4
 141+ 84A4 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 142+ 84A6
 143+ 84A6 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 144+ 84AA 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 145+ 84AD
 146+ 84AD 00           	db 0 											; (Columnas).
 147+ 84AE 00 00        	defw 0											; (Limite_horizontal).
 148+ 84B0 00           	db 0											; (Limite_vertical).
 149+ 84B1
 150+ 84B1              ; ---------- ---------- ---------- ---------- ----------
 151+ 84B1
 152+ 84B1 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 153+ 84B3 00 00        	defw 0											; (Posicion_actual).
 154+ 84B5 00 00        	defw 0 											; (Puntero_objeto).
 155+ 84B7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 84BA
 157+ 84BA 00           	db %00000000 									; (Attr).
 158+ 84BB
 159+ 84BB 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 84BD 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 84C3
 164+ 84C3 00 00        	defw 0											; (Posicion_inicio).
 165+ 84C5 00           	db 0											; (Cuad_objeto).
 166+ 84C6
 167+ 84C6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 84CA
 169+ 84CA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 84CB
 171+ 84CB 00 00        	db 0,0										    ; Variables_de_borrado
 172+ 84CD 00 00        	defw 0											;	" " " " " " "
 173+ 84CF 00 00        	defw 0											;	" " " " " " "
 174+ 84D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 84D5
 176+ 84D5 00 00        	db 0,0											; Variables_de_pintado
 177+ 84D7 00 00        	defw 0											;	" " " " " " "
 178+ 84D9 00 00        	defw 0											;	" " " " " " "
 179+ 84DB 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 84DF
 181+ 84DF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 182+ 84E1
 183+ 84E1 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 184+ 84E5 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 185+ 84E8
 186+ 84E8 00           	db 0 											; (Columnas).
 187+ 84E9 00 00        	defw 0											; (Limite_horizontal).
 188+ 84EB 00           	db 0											; (Limite_vertical).
 189+ 84EC
 190+ 84EC              ; ---------- ---------- ---------- ---------- ----------
 191+ 84EC
 192+ 84EC 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 193+ 84EE 00 00        	defw 0                                          ; (Posicion_actual).
 194+ 84F0 00 00        	defw 0											; (Puntero_objeto).
 195+ 84F2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 196+ 84F5
 197+ 84F5 02           	db %00000010									; (Attr).
 198+ 84F6
 199+ 84F6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 200+ 84F8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 201+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 202+ 84FC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 203+ 84FE
 204+ 84FE 5E 48        	defw $485e                                      ; (Posicion_inicio).
 205+ 8500 02           	db 2											; (Cuad_objeto).
 206+ 8501
 207+ 8501 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 208+ 8505
 209+ 8505 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 210+ 8506
 211+ 8506 00 00        	db 0,0											; Variables_de_borrado
 212+ 8508 00 00        	defw 0										 	;	" " " " " " "
 213+ 850A 00 00        	defw 0											;	" " " " " " "
 214+ 850C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 215+ 8510
 216+ 8510 00 00        	db 0,0											; Variables_de_pintado
 217+ 8512 00 00        	defw 0											;	" " " " " " "
 218+ 8514 00 00        	defw 0											;	" " " " " " "
 219+ 8516 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 851A
 221+ 851A 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 222+ 851C
 223+ 851C 6A 97 00 00  	defw Indice_mov_Izquierda_y_derecha,0			; (Puntero_indice_mov) / (Puntero_mov).
 224+ 8520
 225+ 8520 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 226+ 8523
 227+ 8523 00           	db 0 											; (Columnas).
 228+ 8524 00 00        	defw 0											; (Limite_horizontal).
 229+ 8526 00           	db 0											; (Limite_vertical).
 230+ 8527
 231+ 8527              ; ---------- ---------- ---------- ---------- ----------
 232+ 8527
 233+ 8527 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 234+ 8529 00 00        	defw 0                                          ; (Posicion_actual).
 235+ 852B 00 00        	defw 0											; (Puntero_objeto).
 236+ 852D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 237+ 8530
 238+ 8530 04           	db %00000100									; (Attr).
 239+ 8531
 240+ 8531 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 241+ 8533 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 242+ 8535
 243+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8537 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8539
 246+ 8539 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 247+ 853B 01           	db 1											; (Cuad_objeto).
 248+ 853C
 249+ 853C 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8540
 251+ 8540 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8541
 253+ 8541 00 00        	db 0,0											; Variables_de_borrado
 254+ 8543 00 00        	defw 0										 	;	" " " " " " "
 255+ 8545 00 00        	defw 0											;	" " " " " " "
 256+ 8547 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 854B
 258+ 854B 00 00        	db 0,0											; Variables_de_pintado
 259+ 854D 00 00        	defw 0											;	" " " " " " "
 260+ 854F 00 00        	defw 0											;	" " " " " " "
 261+ 8551 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8555
 263+ 8555 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 264+ 8557
 265+ 8557 70 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 266+ 855B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 855E
 268+ 855E 00           	db 0 											; (Columnas).
 269+ 855F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8561 00           	db 0											; (Limite_vertical).
 271+ 8562
 272+ 8562              ; ---------- ---------- ---------- ---------- ----------
 273+ 8562
 274+ 8562 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 275+ 8564 00 00        	defw 0                                          ; (Posicion_actual).
 276+ 8566 00 00        	defw 0 											; (Puntero_objeto).
 277+ 8568 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 856B
 279+ 856B 01           	db %00000001									; (Attr).
 280+ 856C
 281+ 856C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 282+ 856E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 283+ 8570
 284+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 8572 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 8574
 287+ 8574 BE 47        	defw $47be                                      ; (Posicion_inicio).
 288+ 8576 00           	db 0											; (Cuad_objeto).
 289+ 8577
 290+ 8577 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 857B
 292+ 857B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 857C
 294+ 857C 00 00        	db 0,0											; Variables_de_borrado
 295+ 857E 00 00        	defw 0										 	;	" " " " " " "
 296+ 8580 00 00        	defw 0											;	" " " " " " "
 297+ 8582 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 8586
 299+ 8586 00 00        	db 0,0											; Variables_de_pintado
 300+ 8588 00 00        	defw 0											;	" " " " " " "
 301+ 858A 00 00        	defw 0											;	" " " " " " "
 302+ 858C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 303+ 8590
 304+ 8590 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 305+ 8592
 306+ 8592 6E 97 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 307+ 8596 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 308+ 8599
 309+ 8599 00           	db 0 											; (Columnas).
 310+ 859A 00 00        	defw 0											; (Limite_horizontal).
 311+ 859C 00           	db 0											; (Limite_vertical).
 312+ 859D
 313+ 859D              ; ---------- ---------- ---------- ---------- ----------
 314+ 859D
 315+ 859D 02 02        Entidad_5 db 2,2                                  	; (Filas) / (Columns).
 316+ 859F 00 00        	defw 0                                          ; (Posicion_actual).
 317+ 85A1 00 00        	defw 0 											; (Puntero_objeto).
 318+ 85A3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 319+ 85A6
 320+ 85A6 01           	db %00000001									; (Attr).
 321+ 85A7
 322+ 85A7 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 323+ 85A9 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 324+ 85AB
 325+ 85AB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 85AD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 85AF
 328+ 85AF 00 40        	defw $4000                                      ; (Posicion_inicio).
 329+ 85B1 01           	db 1											; (Cuad_objeto).
 330+ 85B2
 331+ 85B2 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 85B6
 333+ 85B6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 85B7
 335+ 85B7 00 00        	db 0,0											; Variables_de_borrado
 336+ 85B9 00 00        	defw 0										 	;	" " " " " " "
 337+ 85BB 00 00        	defw 0											;	" " " " " " "
 338+ 85BD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 85C1
 340+ 85C1 00 00        	db 0,0											; Variables_de_pintado
 341+ 85C3 00 00        	defw 0											;	" " " " " " "
 342+ 85C5 00 00        	defw 0											;	" " " " " " "
 343+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 344+ 85CB
 345+ 85CB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 346+ 85CD
 347+ 85CD 72 97 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 348+ 85D1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 349+ 85D4
 350+ 85D4 00           	db 0 											; (Columnas).
 351+ 85D5 00 00        	defw 0											; (Limite_horizontal).
 352+ 85D7 00           	db 0											; (Limite_vertical).
# file closed: Entidades_y_disparos.asm
  21  85D8
  22  85D8              ; ******************************************************************************************************************************************************************************************
  23  85D8              ; Constantes.
  24  85D8              ; ******************************************************************************************************************************************************************************************
  25  85D8              ;
  26  85D8              ; 8/11/22
  27  85D8              ;
  28  85D8              ; Constantes generales.
  29  85D8              ;
  30  85D8
  31  85D8              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  85D8              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  85D8              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  85D8              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  85D8
  36  85D8              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  85D8              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  85D8              ;                               				        ; De momento situamos este almacén en $7000.
  39  85D8              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  85D8              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  85D8              ;                               				        ; De momento situamos este almacén en $7060.
  42  85D8
  43  85D8              ; ******************************************************************************************************************************************************************************************
  44  85D8              ; Variables.
  45  85D8              ; ******************************************************************************************************************************************************************************************
  46  85D8              ;
  47  85D8              ; 10/11/22
  48  85D8              ;
  49  85D8              ; Variables de DRAW. (Motor principal).
  50  85D8              ;
  51  85D8              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  85D8
  53  85D8 02           Filas db 2												; Filas. [DRAW]
  54  85D9 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  85DA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  85DC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85DE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85DF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85E0
  60  85E0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85E0
  62  85E0 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85E1              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85E1              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85E1 04           Attr db %00000100										; Atributos de la entidad:
  66  85E2
  67  85E2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85E2              ;
  69  85E2              ;	COLORES: 0 ..... NEGRO
  70  85E2              ;    		 1 ..... AZUL
  71  85E2              ; 			 2 ..... ROJO
  72  85E2              ;			 3 ..... MAGENTA
  73  85E2              ; 			 4 ..... VERDE
  74  85E2              ; 			 5 ..... CIAN
  75  85E2              ;			 6 ..... AMARILLO
  76  85E2              ; 			 7 ..... BLANCO
  77  85E2
  78  85E2 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85E4 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85E6 00 00        Puntero_DESPLZ_der defw 0
  81  85E8 00 00        Puntero_DESPLZ_izq defw 0
  82  85EA
  83  85EA 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85EC 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85ED
  86  85ED              ; Variables de objeto. (Características).
  87  85ED
  88  85ED 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85EE 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85EF 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85F0 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85F1
  93  85F1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85F2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85F2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85F2 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85F4 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85F6 00 00        	defw 0
  99  85F8 00 00 00 00  	db 0,0,0,0
 100  85FC
 101  85FC 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85FE 00 00        	defw 0
 103  8600 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  8602 00 00 00 00  	db 0,0,0,0
 105  8606
 106  8606              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  8606
 108  8606 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  8607              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  8607              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  8607              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  8607              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  8607              ;
 114  8607              ; 														DESCRIPCIÖN:
 115  8607              ;
 116  8607              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  8607              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  8607              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  8607              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  8607              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  8607              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  8607              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  8607              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  8607              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  8607              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  8607              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  8607              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  8607              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  8607              ;
 130  8607              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  8607              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  8607              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  8607
 134  8607 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  8608
 136  8608              ; Movimiento.
 137  8608
 138  8608 7E 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  860A 00 00        Puntero_mov defw 0
 140  860C 00           Contador_db_mov db 0
 141  860D 00           Incrementa_puntero db 0
 142  860E 00           Repetimos_db db 0
 143  860F
 144  860F              ; Variables de funcionamiento. [DRAW].
 145  860F
 146  860F 00           Columnas db 0
 147  8610 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  8612              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  8612 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  8613
 151  8613              ; 59 Bytes por entidad.
 152  8613              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  8613              ;					         		---------;      ;---------
 154  8613
 155  8613
 156  8613              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  8613
 158  8613 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  8614
 160  8614              ;														DESCRIPCIÓN:
 161  8614              ;
 162  8614              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  8614              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  8614              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  8614              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  8614              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad, hay que confirmarlo_
 167  8614              ; 															_ comparando las coordenadas del disparo con las de la entidad almacenada en DRAW.
 168  8614
 169  8614              ; Gestión de ENTIDADES.
 170  8614
 171  8614 00 00        Puntero_store_entidades defw 0
 172  8616 00 00        Puntero_restore_entidades defw 0
 173  8618 00 00        Indice_restore defw 0
 174  861A 03           Numero_de_entidades db 3								; Nº de entidades en pantalla, (contando con Amadeus).
 175  861B 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 176  861C              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 177  861C              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 178  861C              ;														; _ (Numero_de_malotes)="0".
 179  861C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 180  861E              ;														; _variable para almacenar lo posición del puntero_
 181  861E              ; 														; _de pila, SP.
 182  861E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 183  8620              ;														; La utiliza la rutina [Extrae_foto_registros].
 184  8620 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 185  8622              ;														; _el snapshot de los registros de la siguiente entidad.
 186  8622              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 187  8622 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 188  8624              ;														; _el snapshot de los registros del siguiente disparo.
 189  8624              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 190  8624
 191  8624              ;---------------------------------------------------------------------------------------------------------------
 192  8624
 193  8624              ; Gestión de Disparos.
 194  8624
 195  8624 00           Numero_de_disparotes db 0
 196  8625 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 197  8627 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 198  8629 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 199  862A              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 200  862A              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 201  862A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 202  862C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 203  862C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 204  862C              ;														; _produzca colisión.
 205  862C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 206  862E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 207  862E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 208  8631              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 209  8631 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 210  8634              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 211  8634
 212  8634              ;---------------------------------------------------------------------------------------------------------------
 213  8634
 214  8634              ; Relojes y temporizaciones.
 215  8634
 216  8634 01           Habilita_disparo_Amadeus db 1
 217  8635 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 218  8636 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 219  8637
 220  8637 01           Habilita_disparo_entidad db 1
 221  8638 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 222  8639 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 223  863A
 224  863A              ;---------------------------------------------------------------------------------------------------------------
 225  863A
 226  863A              ; Gestión de FRAMES.
 227  863A
 228  863A 00           Switch db 0
 229  863B
 230  863B              ; Variables de Raster y localización en pantalla.
 231  863B
 232  863B 00 FF        Temp_Raster defw $ff00
 233  863D
 234  863D              ; Rutina principal *************************************************************************************************************************************************************************
 235  863D              ;
 236  863D              ;	14/11/22
 237  863D
 238  863D 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 239  8640
 240  8640 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 241  8642 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 242  8644 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 243  8646 F3           	DI
 244  8647
 245  8647 3E 07        	ld a,%00000111
 246  8649 CD 92 93     	call Cls
 247  864C
 248  864C              ;	call Pinta_FILAS
 249  864C
 250  864C CD 42 89     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 251  864F
 252  864F 21 1A 86     	ld hl,Numero_de_entidades
 253  8652 46           	ld b,(hl)
 254  8653 04           	inc b
 255  8654 05           	dec b
 256  8655 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 257  8657
 258  8657 CD 00 88     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 259  865A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 260  865A
 261  865A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 262  865A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 263  865A              ;	Pintamos el resto de entidades:
 264  865A
 265  865A              ;	INICIA ENTIDADES !!!!!
 266  865A
 267  865A C5           1 push bc  												; Guardo el contador de entidades.
 268  865B CD 5A 88      	call Inicia_Puntero_objeto
 269  865E CD E2 8D     	call Draw
 270  8661 CD A0 7F     	call Guarda_foto_registros
 271  8664 CD A2 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 272  8667 C1           	pop bc
 273  8668 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 274  866A
 275  866A              ; 	INICIA AMADEUS !!!!!
 276  866A
 277  866A CD 19 89     3 call Restore_Amadeus
 278  866D CD 5A 88     	call Inicia_Puntero_objeto
 279  8670 CD E2 8D     	call Draw
 280  8673 CD A0 7F     	call Guarda_foto_registros
 281  8676
 282  8676 11 76 84     	ld de,Amadeus_db
 283  8679 CD 2B 89     	call Store_Amadeus
 284  867C
 285  867C              ; 	INICIA DISPAROS !!!!!
 286  867C
 287  867C CD 16 88     	call Inicia_Puntero_Disparo_Entidades
 288  867F CD 1D 88     	call Inicia_Puntero_Disparo_Amadeus
 289  8682
 290  8682              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 291  8682
 292  8682 CD 00 88     	call Inicia_punteros_de_entidades
 293  8685 CD 07 89     	call Restore_Primera_entidad
 294  8688
 295  8688 3A 1A 86     	ld a,(Numero_de_entidades)
 296  868B 3C           	inc a
 297  868C 32 1B 86     	ld (Numero_de_malotes),a
 298  868F
 299  868F FB           2 ei
 300  8690 18 FD        	jr 2B
 301  8692
 302  8692              ; -----------------------------------------------------------------------------------
 303  8692
 304  8692              Frame
 305  8692
 306  8692              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 307  8692              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 308  8692
 309  8692              ; PINTAMOS.
 310  8692
 311  8692 3E 02            ld a,2
 312  8694 D3 FE            out ($fe),a
 313  8696 CD E6 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 314  8699 CD 1F 91     	call Extrae_foto_disparos
 315  869C 3E 01            ld a,1
 316  869E D3 FE            out ($fe),a
 317  86A0
 318  86A0              ; ----------------------------------------------------------------------
 319  86A0
 320  86A0              ; RELOJES.
 321  86A0
 322  86A0 21 34 86     	ld hl,Habilita_disparo_Amadeus
 323  86A3 11 36 86     	ld de,Temporiza_disparo_Amadeus
 324  86A6 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 325  86A9
 326  86A9 21 37 86     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 327  86AC 11 39 86     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 328  86AF CD D5 7F     	call Habilita_disparos
 329  86B2
 330  86B2              ; COLISIONES.
 331  86B2
 332  86B2 CD 84 8D     	call Selector_de_impactos
 333  86B5
 334  86B5              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 335  86B5              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 336  86B5              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 337  86B5
 338  86B5 AF           	xor a
 339  86B6 32 29 86     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 340  86B9
 341  86B9 CD 00 88     	call Inicia_punteros_de_entidades
 342  86BC CD 07 89     	call Restore_Primera_entidad
 343  86BF
 344  86BF 3A D8 85     	ld a,(Filas)
 345  86C2 A7           	and a
 346  86C3 20 03        	jr nz,10F 											; Si la 1ª entidad está vacía, saltamos a la siguiente.
 347  86C5
 348  86C5 CD A2 88     	call Store_Restore_entidades
 349  86C8
 350  86C8              ; ---------------------------------------------------------------------------------------
 351  86C8
 352  86C8 CD 04 8C     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 353  86CB 21 00 70     	ld hl,Album_de_fotos
 354  86CE 22 20 86         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 355  86D1              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 356  86D1 3A 1A 86     	ld a,(Numero_de_entidades)
 357  86D4 47               ld b,a
 358  86D5 A7           	and a
 359  86D6 28 5D        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 360  86D8
 361  86D8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 362  86D8
 363  86D8              ; Código que ejecutamos con cada entidad:
 364  86D8
 365  86D8              ; Impacto ???
 366  86D8
 367  86D8 3A F1 85     2 ld a,(Impacto)
 368  86DB A7           	and a
 369  86DC 28 15        	jr z,8F
 370  86DE
 371  86DE              ; Hay Impacto en esta entidad.
 372  86DE
 373  86DE C5           	push bc
 374  86DF CD B7 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 375  86E2 CD 34 89     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 376  86E5 2A 14 86     	ld hl,(Puntero_store_entidades)
 377  86E8 54           	ld d,h
 378  86E9 5D           	ld e,l
 379  86EA CD 2B 89     	call Store_Amadeus									; Limpiamos `su base de datos´.
 380  86ED 21 1A 86     	ld hl,Numero_de_entidades							; Una alimaña menos.
 381  86F0 35           	dec (hl)
 382  86F1 18 3C        	jr 6F
 383  86F3
 384  86F3              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 385  86F3              ; _con las coordenadas de la entidad almacenada en DRAW.
 386  86F3
 387  86F3 3A 13 86     8 ld a,(Ctrl_1)
 388  86F6 CB 57        	bit 2,a
 389  86F8 28 1B        	jr z,7F
 390  86FA
 391  86FA 2A 2C 86     	ld hl,(Coordenadas_disparo_certero)
 392  86FD EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 393  86FE              ;														; E contiene la coordenada_X del disparo.
 394  86FE 2A DE 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 395  8701              ;														; H Coordenado_y de la entidad.
 396  8701 A7           	and a
 397  8702 ED 52        	sbc hl,de
 398  8704 CD BB 8D     	call Determina_resultado_comparativa
 399  8707 04           	inc b
 400  8708 05           	dec b
 401  8709 28 0A        	jr z,7F
 402  870B
 403  870B              ; ----- ----- -----
 404  870B
 405  870B 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 406  870D 32 F1 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 407  8710 21 13 86     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 408  8713 CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 409  8715
 410  8715 C5           7 push bc
 411  8716
 412  8716 CD 68 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 413  8719
 414  8719 3A 06 86     	ld a,(Ctrl_0)
 415  871C CB 67        	bit 4,a
 416  871E 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 417  8720
 418  8720              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 419  8720              ; [[[
 420  8720 CD 8D 89     	call Detecta_disparo_entidad
 421  8723              ; ]]]
 422  8723 CD C7 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 423  8726
 424  8726 21 06 86     	ld hl,Ctrl_0
 425  8729 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 426  872B AF           	xor a
 427  872C 32 07 86     	ld (Obj_dibujado),a
 428  872F
 429  872F CD A2 88     6 call Store_Restore_entidades
 430  8732 C1           	pop bc
 431  8733 10 A3        	djnz 2B
 432  8735
 433  8735              ; Tras la gestión de las entidades, ... AMADEUS.
 434  8735
 435  8735 CD 19 89     4 call Restore_Amadeus
 436  8738
 437  8738 3A F1 85     	ld a,(Impacto)
 438  873B A7           	and a
 439  873C 20 FE        	jr nz,$
 440  873E
 441  873E              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 442  873E
 443  873E CD 98 87     	call Mov_Amadeus
 444  8741
 445  8741 3A 06 86     	ld a,(Ctrl_0)
 446  8744 CB 67        	bit 4,a
 447  8746 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 448  8748
 449  8748 CD C7 87     	call Guarda_foto_entidad_a_pintar
 450  874B
 451  874B 21 06 86     3 ld hl,Ctrl_0
 452  874E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 453  8750 AF           	xor a
 454  8751 32 07 86     	ld (Obj_dibujado),a
 455  8754
 456  8754 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 457  8757 CD 2B 89     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 458  875A
 459  875A CD 22 8C     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 460  875D
 461  875D              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 462  875D
 463  875D CD 3C 88     	call Calcula_numero_de_disparotes
 464  8760 CD 24 88     9 call Calcula_numero_de_malotes
 465  8763
 466  8763 3E 04        	ld a,4
 467  8765 D3 FE        	out ($fe),a
 468  8767
 469  8767 C9           	ret
 470  8768
 471  8768              ; --------------------------------------------------------------------------------------------------------------
 472  8768              ;
 473  8768              ;	27/03/23
 474  8768
 475  8768              Mov_obj
 476  8768
 477  8768              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 478  8768
 479  8768 AF           	xor a
 480  8769 32 07 86     	ld (Obj_dibujado),a
 481  876C 32 06 86     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 482  876F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 483  876F              ; 														; _de la entidad.
 484  876F CD D1 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 485  8772              ;														; Obj_dibujado="0".
 486  8772              ; Movemos Entidades malignas.
 487  8772
 488  8772 2A 08 86     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 489  8775 24           	inc h                                               ; Salimos de la rutina.
 490  8776 25           	dec h
 491  8777 C8           	ret z
 492  8778
 493  8778 CD 80 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 494  877B
 495  877B 3A 06 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 496  877E CB 67        	bit 4,a
 497  8780 C8           	ret z
 498  8781
 499  8781              ; Ha habido desplazamiento de la entidad maligna.
 500  8781              ; Ha llegado a zona de AMADEUS ???
 501  8781
 502  8781 3A DF 85     	ld a,(Coordenada_y)
 503  8784 FE 14        	cp $14
 504  8786 D4 53 8B     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 505  8789              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 506  8789              ; ---------
 507  8789
 508  8789 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 509  878B 32 07 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 510  878E CD D1 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 511  8791 CD E8 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 512  8794 CD B7 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 513  8797 C9           	ret													; _de la misma.
 514  8798
 515  8798              ; --------------------------------------------------------------------------------------------------------------
 516  8798              ;
 517  8798              ;	29/1/23
 518  8798
 519  8798              Mov_Amadeus
 520  8798
 521  8798 AF           	xor a
 522  8799 32 07 86     	ld (Obj_dibujado),a
 523  879C CD D1 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 524  879F              ;														; Obj_dibujado="0".
 525  879F              ; Movemos Amadeus.
 526  879F
 527  879F CD 56 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 528  87A2 3A 06 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 529  87A5 CB 67        	bit 4,a
 530  87A7 C8           	ret z
 531  87A8
 532  87A8              ; ---------
 533  87A8
 534  87A8 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 535  87AA 32 07 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 536  87AD CD D1 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 537  87B0 CD E8 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 538  87B3 CD B7 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 539  87B6 C9           	ret													; _de la nave.
 540  87B7
 541  87B7              ; --------------------------------------------------------------------------------------------------------------
 542  87B7              ;
 543  87B7              ;	31/01/23
 544  87B7              ;
 545  87B7              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 546  87B7
 547  87B7              Guarda_foto_entidad_a_borrar
 548  87B7
 549  87B7 CD BC 90     	call Prepara_draw
 550  87BA CD F6 8F     	call calcula_CColumnass
 551  87BD CD 2D 90     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 552  87C0 CD 82 90     	call Define_rutina_de_impresion
 553  87C3 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 554  87C6 C9           	ret
 555  87C7
 556  87C7              ; --------------------------------------------------------------------------------------------------------------
 557  87C7              ;
 558  87C7              ;	31/01/23
 559  87C7              ;
 560  87C7              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 561  87C7              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 562  87C7
 563  87C7              Guarda_foto_entidad_a_pintar
 564  87C7
 565  87C7 CD F4 87     	call Repone_pintar
 566  87CA CD E2 8D     	call Draw
 567  87CD CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 568  87D0 C9           	ret
 569  87D1
 570  87D1              ; --------------------------------------------------------------------------------------------------------------
 571  87D1              ;
 572  87D1              ;
 573  87D1
 574  87D1 21 D8 85     Prepara_var_pintado_borrado	ld hl,Filas
 575  87D4 3A 07 86     	ld a,(Obj_dibujado)
 576  87D7 A7           	and a
 577  87D8 28 05        	jr z,1F
 578  87DA 11 FC 85     	ld de,Variables_de_pintado
 579  87DD 18 03        	jr 2F
 580  87DF 11 F2 85     1 ld de,Variables_de_borrado
 581  87E2 01 08 00     2 ld bc,8
 582  87E5 ED B0        	ldir
 583  87E7 C9           	ret
 584  87E8
 585  87E8              ; --------------------------------------------------------------------------------------------------------------
 586  87E8
 587  87E8 21 F2 85     Repone_borrar ld hl,Variables_de_borrado
 588  87EB 11 D8 85     	ld de,Filas
 589  87EE 01 08 00     	ld bc,8
 590  87F1 ED B0        	ldir
 591  87F3 C9           	ret
 592  87F4
 593  87F4 21 FC 85     Repone_pintar ld hl,Variables_de_pintado
 594  87F7 11 D8 85     	ld de,Filas
 595  87FA 01 08 00     	ld bc,8
 596  87FD ED B0        	ldir
 597  87FF C9           	ret
 598  8800
 599  8800              ; *************************************************************************************************************************************************************
 600  8800              ;
 601  8800              ; 8/1/23
 602  8800              ;
 603  8800              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 604  8800              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 605  8800              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 606  8800
 607  8800              ; Destruye HL y DE !!!!!
 608  8800
 609  8800              Inicia_punteros_de_entidades
 610  8800
 611  8800 21 68 84     	ld hl,Indice_de_entidades
 612  8803 CD 54 88         call Extrae_address
 613  8806 22 14 86         ld (Puntero_store_entidades),hl
 614  8809 21 6A 84     	ld hl,Indice_de_entidades+2
 615  880C 22 18 86     	ld (Indice_restore),hl
 616  880F CD 54 88     	call Extrae_address
 617  8812 22 16 86     	ld (Puntero_restore_entidades),hl
 618  8815 C9               ret
 619  8816
 620  8816              ; *************************************************************************************************************************************************************
 621  8816              ;
 622  8816              ; 8/1/23
 623  8816              ;
 624  8816              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 625  8816
 626  8816 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 627  8819 22 25 86     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 628  881C C9           	ret
 629  881D 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 630  8820 22 27 86     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 631  8823 C9           	ret
 632  8824
 633  8824              ; -------------------------------------------------------------------------------------------------------------
 634  8824              ;
 635  8824              ; 28/2/23
 636  8824              ;
 637  8824
 638  8824              Calcula_numero_de_malotes
 639  8824
 640  8824 21 00 70     	ld hl,Album_de_fotos
 641  8827 EB           	ex de,hl
 642  8828 2A 20 86     	ld hl,(Stack_snapshot)
 643  882B
 644  882B 06 00        	ld b,0
 645  882D 7D           	ld a,l
 646  882E 93           	sub e
 647  882F 28 07        	jr z,1F
 648  8831
 649  8831              ; Nº de malotes no es "0".
 650  8831
 651  8831 D6 06        2 sub 6
 652  8833 04           	inc b
 653  8834 A7           	and a
 654  8835 20 FA        	jr nz,2B
 655  8837 78           	ld a,b
 656  8838
 657  8838 32 1B 86     1 ld (Numero_de_malotes),a
 658  883B C9           	ret
 659  883C
 660  883C              ; -------------------------------------------------------------------------------------------------------------
 661  883C              ;
 662  883C              ; 28/2/23
 663  883C              ;
 664  883C
 665  883C              Calcula_numero_de_disparotes
 666  883C
 667  883C 21 60 70     	ld hl,Album_de_fotos_disparos
 668  883F EB           	ex de,hl
 669  8840 2A 22 86     	ld hl,(Stack_snapshot_disparos)
 670  8843
 671  8843 06 00        	ld b,0
 672  8845 7D           	ld a,l
 673  8846 93           	sub e
 674  8847 28 07        	jr z,1F
 675  8849
 676  8849              ; Nº de malotes no es "0".
 677  8849
 678  8849 D6 06        2 sub 6
 679  884B 04           	inc b
 680  884C A7           	and a
 681  884D 20 FA        	jr nz,2B
 682  884F 78           	ld a,b
 683  8850
 684  8850 32 24 86     1 ld (Numero_de_disparotes),a
 685  8853 C9           	ret
 686  8854              ; *************************************************************************************************************************************************************
 687  8854              ;
 688  8854              ; 20/10/22
 689  8854              ;
 690  8854              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 691  8854              ;
 692  8854              ; Destruye el puntero y DE !!!!!
 693  8854
 694  8854 5E           Extrae_address ld e,(hl)
 695  8855 23           	inc hl
 696  8856 56           	ld d,(hl)
 697  8857 2B           	dec hl
 698  8858 EB           	ex de,hl
 699  8859 C9           	ret
 700  885A
 701  885A              ; *************************************************************************************************************************************************************
 702  885A              ;
 703  885A              ;	7/2/23
 704  885A              ;
 705  885A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 706  885A              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 707  885A              ;
 708  885A              ;   Destruye HL y BC !!!!!,
 709  885A              ;
 710  885A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 711  885A              ;					"0" ..... Izquierda.
 712  885A
 713  885A              Inicia_Puntero_objeto
 714  885A
 715  885A 3A EC 85     	ld a,(Cuad_objeto)
 716  885D E6 01        	and 1
 717  885F F5           	push af
 718  8860 CC 7E 88     	call z,Inicia_puntero_objeto_izq
 719  8863 F1           	pop af
 720  8864 28 2B        	jr z,1F
 721  8866 CD 6B 88     	call Inicia_puntero_objeto_der
 722  8869 18 26        	jr 1F
 723  886B
 724  886B              ; Arrancamos desde la parte izquierda de la pantalla.
 725  886B              ; Iniciamos (Indice_Sprite_der).
 726  886B
 727  886B 2A E2 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 728  886E 22 E6 85     	ld (Puntero_DESPLZ_der),hl
 729  8871 CD 54 88     	call Extrae_address
 730  8874 22 DC 85     	ld (Puntero_objeto),hl
 731  8877
 732  8877 2A E4 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 733  887A 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 734  887D C9           	ret
 735  887E
 736  887E              ; Arrancamos desde la parte derecha de la pantalla.
 737  887E              ; Iniciamos (Indice_Sprite_izq).
 738  887E
 739  887E 2A E4 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 740  8881 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 741  8884 CD 54 88     	call Extrae_address
 742  8887 22 DC 85     	ld (Puntero_objeto),hl
 743  888A
 744  888A 2A E2 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 745  888D 22 E6 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 746  8890 C9           	ret
 747  8891
 748  8891              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 749  8891
 750  8891 21 38 83     1 ld hl,Amadeus
 751  8894 ED 4B DC 85  	ld bc,(Puntero_objeto)
 752  8898 B7 ED 42     	sub hl,bc
 753  889B C0           	ret nz
 754  889C 21 06 86     	ld hl,Ctrl_0
 755  889F CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 756  88A1 C9           	ret 												; _de nuestra nave en los extremos.
 757  88A2
 758  88A2              ; *************************************************************************************************************************************************************
 759  88A2              ;
 760  88A2              ;	8/1/23
 761  88A2              ;
 762  88A2              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 763  88A2              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 764  88A2
 765  88A2              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 766  88A2              ;	_de la 2ª y 3ª entidad respectivamente.
 767  88A2
 768  88A2              Store_Restore_entidades
 769  88A2
 770  88A2 3A 1A 86     	ld a,(Numero_de_entidades)
 771  88A5 A7           	and a
 772  88A6 C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 773  88A7
 774  88A7 E5           	push hl
 775  88A8 D5           	push de
 776  88A9 C5            	push bc
 777  88AA
 778  88AA CD FC 88     	call Comprueba_fin_de_indice
 779  88AD CC 00 88     	call z,Inicia_punteros_de_entidades
 780  88B0 CD 07 89     	call Restore_Primera_entidad
 781  88B3 18 43        	jr 4F
 782  88B5
 783  88B5              ;	STORE !!!!!
 784  88B5              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 785  88B5
 786  88B5 21 D8 85     2 ld hl,Filas
 787  88B8 ED 5B 14 86  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 788  88BC 01 3B 00     	ld bc,59
 789  88BF ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 790  88C1
 791  88C1              ; 	Entidad_sospechosa. 20/4/23
 792  88C1
 793  88C1 3A F1 85     	ld a,(Impacto)
 794  88C4 A7           	and a
 795  88C5 28 0C        	jr z,1F
 796  88C7
 797  88C7 2A 14 86     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 798  88CA 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 799  88CD A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 800  88CE ED 4A        	adc hl,bc 											; _ "0" más adelante.
 801  88D0 22 2A 86     	ld (Entidad_sospechosa_de_colision),hl
 802  88D3
 803  88D3              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 804  88D3
 805  88D3 2A 16 86     1 ld hl,(Puntero_restore_entidades)
 806  88D6 22 14 86     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 807  88D9
 808  88D9 7E           	ld a,(hl)
 809  88DA A7           	and a
 810  88DB F5           	push af
 811  88DC 28 08        	jr z,3F
 812  88DE
 813  88DE 11 D8 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 814  88E1 01 3B 00     	ld bc,59
 815  88E4 ED B0        	ldir
 816  88E6
 817  88E6              ;	Incrementa RESTORE !!!!!
 818  88E6
 819  88E6 2A 18 86     3 ld hl,(Indice_restore)
 820  88E9 23           	inc hl
 821  88EA 23           	inc hl
 822  88EB 22 18 86     	ld (Indice_restore),hl
 823  88EE CD 54 88         call Extrae_address
 824  88F1 22 16 86         ld (Puntero_restore_entidades),hl
 825  88F4
 826  88F4 F1           	pop af
 827  88F5 A7           	and a
 828  88F6 28 DB        	jr z,1B
 829  88F8
 830  88F8 C1           4 pop bc
 831  88F9 D1           	pop de
 832  88FA E1           	pop hl
 833  88FB C9           	ret
 834  88FC
 835  88FC              ; --------------------------------------------------------
 836  88FC
 837  88FC 2A 14 86     Comprueba_fin_de_indice	ld hl,(Puntero_store_entidades)
 838  88FF 11 9D 85     	ld de,Entidad_5
 839  8902 EB           	ex de,hl
 840  8903 A7           	and a
 841  8904 ED 52        	sbc hl,de
 842  8906 C9           	ret
 843  8907
 844  8907              ; **************************************************************************************************
 845  8907              ;
 846  8907              ;	29/10/22
 847  8907              ;
 848  8907              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 849  8907
 850  8907 E5           Restore_Primera_entidad push hl
 851  8908 D5           	push de
 852  8909 C5            	push bc
 853  890A 2A 14 86     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 854  890D 11 D8 85     	ld de,Filas
 855  8910 01 3B 00     	ld bc,59
 856  8913 ED B0        	ldir
 857  8915 C1           	pop bc
 858  8916 D1           	pop de
 859  8917 E1           	pop hl
 860  8918 C9           	ret
 861  8919
 862  8919              ; **************************************************************************************************
 863  8919              ;
 864  8919              ;	25/01/23
 865  8919              ;
 866  8919              ;	Restore_Amadeus
 867  8919              ;
 868  8919              ;	Cargamos en DRAW los parámetros de Amadeus.
 869  8919              ;
 870  8919
 871  8919 E5           Restore_Amadeus	push hl
 872  891A D5           	push de
 873  891B C5            	push bc
 874  891C 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 875  891F 11 D8 85     	ld de,Filas
 876  8922 01 3B 00     	ld bc,59
 877  8925 ED B0        	ldir
 878  8927 C1           	pop bc
 879  8928 D1           	pop de
 880  8929 E1           	pop hl
 881  892A C9           	ret
 882  892B
 883  892B              ; *************************************************************************************************************************************************************
 884  892B              ;
 885  892B              ;	29/04/23
 886  892B              ;
 887  892B              ;	Store_Amadeus
 888  892B              ;
 889  892B              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 890  892B              ;
 891  892B              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 892  892B              ;
 893  892B              ;	DESTRUYE: HL y BC y DE.
 894  892B
 895  892B 21 D8 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 896  892E 01 3B 00     	ld bc,59
 897  8931 ED B0        	ldir
 898  8933 C9           	ret
 899  8934
 900  8934              ; -----------------------------------------------------------
 901  8934              ;
 902  8934              ;	27/04/23
 903  8934              ;
 904  8934              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 905  8934              ;
 906  8934              ;	Destruye: HL,BC,DE,A
 907  8934
 908  8934 21 D8 85     Borra_datos_entidad ld hl,Filas
 909  8937 01 3A 00     	ld bc,58
 910  893A AF           	xor a
 911  893B 77           	ld (hl),a
 912  893C 11 D9 85     	ld de,Filas+1
 913  893F ED B0        	ldir
 914  8941 C9           	ret
 915  8942
 916  8942              ; -----------------------------------------------------------
 917  8942
 918  8942              ; Teclado.
 919  8942
 920  8942 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 921  8944 DB FE        	in a,($fe)
 922  8946 E6 01        	and $01
 923  8948 28 02        	jr z,1f
 924  894A 18 F6        	jr Pulsa_ENTER
 925  894C C9           1 ret
 926  894D
 927  894D              ; **************************************************************************************************
 928  894D              ;
 929  894D              ; Temporización.
 930  894D
 931  894D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 932  894D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 933  894D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 934  894D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 935  894D
 936  894D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 937  894D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 938  894D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 939  894D
 940  894D              ; A partir de $4f61 no hace falta DELAY.
 941  894D
 942  894D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 943  894D
 944  894D 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 945  8950 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 946  8951 78           	LD A,B
 947  8952 A7           	AND A
 948  8953 20 FB        	JR NZ,wait
 949  8955 C9           	RET
 950  8956
 951  8956              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 952  8956              ;
 953  8956              ;	5/3/23
 954  8956              ;
 955  8956              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 956  8956
 957  8956              Movimiento_Amadeus
 958  8956
 959  8956              ; Disparo.
 960  8956
 961  8956 3A 34 86     	ld a,(Habilita_disparo_Amadeus)
 962  8959 A7           	and a
 963  895A 20 02        	jr nz,1F
 964  895C 18 15        	jr 2F
 965  895E
 966  895E 3E F7        1 ld a,$f7													; "5" para disparar.
 967  8960 DB FE        	in a,($fe)
 968  8962 E6 10        	and $10
 969  8964
 970  8964 F5           	push af
 971  8965 CC CF 89     	call z,Genera_disparo
 972  8968 F1           	pop af
 973  8969 20 08        	jr nz,2F
 974  896B
 975  896B 3A 34 86     	ld a,(Habilita_disparo_Amadeus)
 976  896E EE 01        	xor 1
 977  8970 32 34 86     	ld (Habilita_disparo_Amadeus),a
 978  8973
 979  8973 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 980  8975 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 981  8977 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 982  8979 CC 20 95         call z,Mov_left											;			"			"			"			"			"			"			"			"
 983  897C 3E F7        	ld a,$f7
 984  897E DB FE        	in a,($fe)
 985  8980 E6 01        	and $01
 986  8982 C8           	ret z
 987  8983
 988  8983 3E F7        	ld a,$f7
 989  8985 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 990  8987 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 991  8989 CC 02 94     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 992  898C C9           	ret
 993  898D
 994  898D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 995  898D              ;
 996  898D              ;	Rutina provisional para que los malotes cagen balas.
 997  898D
 998  898D              Detecta_disparo_entidad
 999  898D
1000  898D 3A 37 86     	ld a,(Habilita_disparo_entidad)
1001  8990 A7           	and a
1002  8991 C8           	ret z
1003  8992 3E 7F        	ld a,$7f
1004  8994 DB FE        	in a,($fe)
1005  8996 E6 01        	and 1
1006  8998 C0           	ret nz
1007  8999 CD CF 89     	call Genera_disparo
1008  899C C9           	ret
1009  899D
1010  899D              ; Pinta indicadores de FILAS. ------------------------------------------------------
1011  899D
1012  899D 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1013  89A0
1014  89A0              ; ----------
1015  89A0 06 20        	ld b,32
1016  89A2 E5           2 push hl
1017  89A3 C5           	push bc
1018  89A4              ; ----------
1019  89A4
1020  89A4 06 BF        	ld b,$bf
1021  89A6 36 80        1 ld (hl),%10000000
1022  89A8 CD C8 90     	call NextScan
1023  89AB 10 F9        	djnz 1B
1024  89AD
1025  89AD              ; ----------
1026  89AD C1           	pop bc
1027  89AE E1           	pop hl
1028  89AF 2C           	inc l
1029  89B0 10 F0        	djnz 2B
1030  89B2              ; ----------
1031  89B2
1032  89B2 06 03        	ld b,3
1033  89B4 21 00 47         ld hl,$4700
1034  89B7 CD BD 89     3 call Bucle_1
1035  89BA 10 FB            djnz 3B
1036  89BC C9               ret
1037  89BD
1038  89BD C5           Bucle_1 push bc
1039  89BE E5                   push hl
1040  89BF D1                   pop de
1041  89C0 13                   inc de
1042  89C1 01 FF 00             ld bc,255
1043  89C4 36 FF                ld (hl),255
1044  89C6 ED B0                ldir
1045  89C8 23                   inc hl
1046  89C9 3E 07                ld a,7
1047  89CB 84                   add a,h
1048  89CC 67                   ld h,a
1049  89CD C1                   pop bc
1050  89CE C9                   ret
1051  89CF
1052  89CF              ; ---------------------------------------------------------------
1053  89CF
1054  89CF              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 89CF              ; ******************************************************************************************************************************************************************************************
   2+ 89CF              ;
   3+ 89CF              ;   17/04/23
   4+ 89CF              ;
   5+ 89CF              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 89CF              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 89CF              ;
   8+ 89CF              ;
   9+ 89CF              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 89CF              ;
  11+ 89CF              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 89CF              ;               _ hacen las entidades hacia abajo.
  13+ 89CF              ;
  14+ 89CF              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 89CF              ;
  16+ 89CF              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 89CF              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 89CF              ;
  19+ 89CF              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 89CF              ;           _ la bala.
  21+ 89CF              ;
  22+ 89CF              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 89CF              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 89CF              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 89CF              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 89CF              ;           _ en el momento de generarse la bala)).
  27+ 89CF
  28+ 89CF              Genera_disparo
  29+ 89CF
  30+ 89CF              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 89CF              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 89CF              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 89CF              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 89CF              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 89CF              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 89CF              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 89CF
  38+ 89CF              ; Exclusiones:
  39+ 89CF
  40+ 89CF 3A 0F 86         ld a,(Columnas)
  41+ 89D2 47               ld b,a
  42+ 89D3 3A D9 85         ld a,(Columns)
  43+ 89D6 B8               cp b
  44+ 89D7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 89D8
  46+ 89D8              ; ----- ----- -----
  47+ 89D8
  48+ 89D8 3A 06 86         ld a,(Ctrl_0)
  49+ 89DB CB 77            bit 6,a
  50+ 89DD 20 06            jr nz,14F
  51+ 89DF
  52+ 89DF 3A DF 85         ld a,(Coordenada_y)
  53+ 89E2 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 89E4 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 89E5
  56+ 89E5 21 00 80     14 ld hl,Indice_disparo
  57+ 89E8 3A E0 85         ld a,(CTRL_DESPLZ)
  58+ 89EB 4F               ld c,a
  59+ 89EC 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 89EE              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 89EE              ;                                            ""        ""       "f9", B="1"
  62+ 89EE              ;                                            ""        ""       "fb", B="2"
  63+ 89EE              ;                                            ""        ""       "fb", B="3"
  64+ 89EE A7               and a
  65+ 89EF 28 10            jr z,1F
  66+ 89F1 E6 01            and 1
  67+ 89F3 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 89F4
  69+ 89F4 79               ld a,c
  70+ 89F5 16 F9            ld d,$f9
  71+ 89F7 23           2 inc hl
  72+ 89F8 23               inc hl
  73+ 89F9 04               inc b
  74+ 89FA BA               cp d
  75+ 89FB 28 04            jr z,1F
  76+ 89FD 14               inc d
  77+ 89FE 14               inc d
  78+ 89FF 18 F6            jr 2B
  79+ 8A01
  80+ 8A01 CD 54 88     1 call Extrae_address
  81+ 8A04 E5               push hl
  82+ 8A05 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8A07 DD 21 5B 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8A0B
  85+ 8A0B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8A0B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8A0B
  88+ 8A0B 3A 06 86         ld a,(Ctrl_0)
  89+ 8A0E CB 77            bit 6,a
  90+ 8A10 20 04            jr nz,19F
  91+ 8A12
  92+ 8A12 AF               xor a
  93+ 8A13 32 37 86         ld (Habilita_disparo_entidad),a
  94+ 8A16
  95+ 8A16 3A EC 85     19 ld a,(Cuad_objeto)
  96+ 8A19 FE 02            cp 2
  97+ 8A1B 38 66            jr c,3F
  98+ 8A1D 28 64            jr z,3F
  99+ 8A1F
 100+ 8A1F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8A1F
 102+ 8A1F E6 01            and 1
 103+ 8A21 28 30            jr z,4F
 104+ 8A23
 105+ 8A23              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8A23              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8A23              ;
 108+ 8A23              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8A23              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8A23              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8A23
 112+ 8A23 2A DA 85     	ld hl,(Posicion_actual)
 113+ 8A26
 114+ 8A26              ;   Amadeus o entidad ???.
 115+ 8A26
 116+ 8A26 3A 06 86         ld a,(Ctrl_0)
 117+ 8A29 CB 77            bit 6,a
 118+ 8A2B 28 0A            jr z,8F
 119+ 8A2D
 120+ 8A2D              ; 	Dispara Amadeus.
 121+ 8A2D
 122+ 8A2D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8A2F CD D7 90         call PreviousScan
 124+ 8A32 CD D7 90         call PreviousScan
 125+ 8A35
 126+ 8A35              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8A35              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8A35              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8A35              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8A35
 131+ 8A35 18 11            jr 10F
 132+ 8A37
 133+ 8A37              ; 	Dispara Entidad.
 134+ 8A37
 135+ 8A37 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8A3A              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8A3A
 138+ 8A3A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8A3A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8A3A
 141+ 8A3A C5               push bc
 142+ 8A3B 06 10            ld b,16
 143+ 8A3D CD C8 90     9 call NextScan
 144+ 8A40 10 FB            djnz 9B
 145+ 8A42 C1               pop bc
 146+ 8A43 CD AD 8A         call Ajusta_disparo_parte_izquierda
 147+ 8A46 18 06            jr 17F
 148+ 8A48
 149+ 8A48              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8A48              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8A48              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8A48              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8A48
 154+ 8A48 CD AD 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 8A4B CD 22 8B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8A4E              ;                                                      ; _al generar el disparo.
 157+ 8A4E
 158+ 8A4E              ; 	LLegados a este punto tendremos:
 159+ 8A4E              ;
 160+ 8A4E              ;       Puntero_objeto_disparo en IY.
 161+ 8A4E              ;       Rutinas_de_impresion en IX.
 162+ 8A4E              ;       Puntero_de_impresion en HL.
 163+ 8A4E              ;       Impacto/Dirección en BC.
 164+ 8A4E
 165+ 8A4E CD B5 8A     17 call Almacena_disparo
 166+ 8A51 18 52            jr 6F                                             ; RET.
 167+ 8A53
 168+ 8A53              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8A53              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8A53              ;
 171+ 8A53              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8A53              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8A53              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8A53
 175+ 8A53 2A DA 85     4 ld hl,(Posicion_actual)
 176+ 8A56
 177+ 8A56              ;   Amadeus o entidad ???.
 178+ 8A56
 179+ 8A56 3A 06 86         ld a,(Ctrl_0)
 180+ 8A59 CB 77            bit 6,a
 181+ 8A5B 28 0A            jr z,11F
 182+ 8A5D
 183+ 8A5D              ; 	Dispara Amadeus.
 184+ 8A5D
 185+ 8A5D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A5F CD D7 90         call PreviousScan
 187+ 8A62 CD D7 90         call PreviousScan
 188+ 8A65
 189+ 8A65              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A65              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A65              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A65              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A65
 194+ 8A65 18 11            jr 13F
 195+ 8A67
 196+ 8A67              ; 	Dispara Entidad.
 197+ 8A67
 198+ 8A67 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A6A              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A6A
 201+ 8A6A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A6A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A6A
 204+ 8A6A C5               push bc
 205+ 8A6B 06 10            ld b,16
 206+ 8A6D CD C8 90     12 call NextScan
 207+ 8A70 10 FB            djnz 12B
 208+ 8A72 C1               pop bc
 209+ 8A73
 210+ 8A73 CD A6 8A         call Ajusta_disparo_parte_derecha
 211+ 8A76 18 06            jr 18F
 212+ 8A78
 213+ 8A78              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A78              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A78              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A78              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A78
 218+ 8A78 CD A6 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A7B CD 22 8B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A7E              ;                                                       ; _al generar el disparo.
 221+ 8A7E
 222+ 8A7E              ; LLegados a este punto tendremos:
 223+ 8A7E              ;
 224+ 8A7E              ;       Puntero_objeto_disparo en IY.
 225+ 8A7E              ;       Rutinas_de_impresion en IX.
 226+ 8A7E              ;       Puntero_de_impresion en HL.
 227+ 8A7E              ;       Impacto/Dirección en BC.
 228+ 8A7E
 229+ 8A7E CD B5 8A     18 call Almacena_disparo
 230+ 8A81 18 22            jr 6F                                               ; RET.
 231+ 8A83
 232+ 8A83              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A83
 234+ 8A83 28 11        3 jr z,5F
 235+ 8A85
 236+ 8A85              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A85              ;
 238+ 8A85              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A85              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A85              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A85              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A85
 243+ 8A85              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A85              ;	   ""        ""       "f9", B="1"
 245+ 8A85              ;	   ""        ""       "fb", B="2"
 246+ 8A85              ; 	   ""        ""       "fb", B="3"
 247+ 8A85
 248+ 8A85 2A DA 85     	ld hl,(Posicion_actual)
 249+ 8A88 CD C8 90     	call NextScan
 250+ 8A8B
 251+ 8A8B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A8B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A8B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A8B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A8B
 256+ 8A8B CD AD 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A8E
 258+ 8A8E              ; 	No se produce impacto. B="$80"
 259+ 8A8E              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A8E
 261+ 8A8E 01 80 80         ld bc,$8080
 262+ 8A91
 263+ 8A91              ; 	LLegados a este punto tendremos:
 264+ 8A91              ;
 265+ 8A91              ;       Puntero_objeto_disparo en IY.
 266+ 8A91              ;       Rutinas_de_impresion en IX.
 267+ 8A91              ;       Puntero_de_impresion en HL.
 268+ 8A91              ;       Impacto/Dirección en BC.
 269+ 8A91
 270+ 8A91 CD B5 8A         call Almacena_disparo
 271+ 8A94 18 0F            jr 6F                                           ; RET.
 272+ 8A96
 273+ 8A96              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A96              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A96              ;
 276+ 8A96              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A96              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A96              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A96              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A96
 281+ 8A96 2A DA 85     5 ld hl,(Posicion_actual)
 282+ 8A99 CD C8 90     	call NextScan
 283+ 8A9C
 284+ 8A9C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A9C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A9C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A9C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A9C
 289+ 8A9C CD A6 8A         call Ajusta_disparo_parte_derecha
 290+ 8A9F
 291+ 8A9F              ; 	No se produce impacto. B="$80"
 292+ 8A9F              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A9F
 294+ 8A9F 01 80 80     15 ld bc,$8080
 295+ 8AA2
 296+ 8AA2              ; 	LLegados a este punto tendremos:
 297+ 8AA2              ;
 298+ 8AA2              ;       Puntero_objeto_disparo en IY.
 299+ 8AA2              ;       Rutinas_de_impresion en IX.
 300+ 8AA2              ;       Puntero_de_impresion en HL.
 301+ 8AA2              ;       Impacto/Dirección en BC.
 302+ 8AA2
 303+ 8AA2 CD B5 8A         call Almacena_disparo
 304+ 8AA5
 305+ 8AA5 C9           6 ret
 306+ 8AA6
 307+ 8AA6              ; ----------------------------------------------------------------
 308+ 8AA6              ;
 309+ 8AA6              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8AA6              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8AA6              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8AA6
 313+ 8AA6 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8AA7 FE 02            cp 2
 315+ 8AA9 38 01            jr c,1F
 316+ 8AAB 23               inc hl
 317+ 8AAC C9           1 ret
 318+ 8AAD
 319+ 8AAD 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8AAE FE 01        	cp 1
 321+ 8AB0 20 01        	jr nz,1F
 322+ 8AB2 2B           	dec hl
 323+ 8AB3 2B           1 dec hl
 324+ 8AB4 C9               ret
 325+ 8AB5
 326+ 8AB5              ; ----------------------------------------------------------------
 327+ 8AB5              ;
 328+ 8AB5              ;   25/02/23
 329+ 8AB5              ;
 330+ 8AB5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8AB5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8AB5              ;
 333+ 8AB5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8AB5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8AB5
 336+ 8AB5              Almacena_disparo
 337+ 8AB5
 338+ 8AB5 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8AB6 F1               pop af
 340+ 8AB7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8AB8
 342+ 8AB8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8AB9 E6 01            and 1
 344+ 8ABB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8ABD              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8ABD              ; 	Dispara AMADEUS.
 347+ 8ABD
 348+ 8ABD              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8ABD              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8ABD              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8ABD              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8ABD
 353+ 8ABD C5               push bc
 354+ 8ABE 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8AC1 2A 27 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8AC4 A7               and a
 357+ 8AC5 ED 42            sbc hl,bc
 358+ 8AC7 CC 1D 88         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8ACA C1               pop bc
 360+ 8ACB 28 54            jr z,4F
 361+ 8ACD
 362+ 8ACD 2A 27 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8AD0 23               inc hl
 364+ 8AD1 23               inc hl
 365+ 8AD2 22 27 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8AD5              ;                                                   ; _ Disparo_(+1).
 367+ 8AD5 18 18            jr 2F
 368+ 8AD7
 369+ 8AD7              ; Dispara una entidad.
 370+ 8AD7
 371+ 8AD7 C5           1 push bc
 372+ 8AD8 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8ADB 2A 25 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8ADE A7               and a
 375+ 8ADF ED 42            sbc hl,bc
 376+ 8AE1 CC 16 88         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8AE4 C1               pop bc
 378+ 8AE5 28 3A            jr z,4F
 379+ 8AE7
 380+ 8AE7 2A 25 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8AEA 23               inc hl
 382+ 8AEB 23               inc hl
 383+ 8AEC 22 25 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8AEF              ;                                                   ; _ Disparo_(+1).
 385+ 8AEF CD 54 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8AF2              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8AF2              ;
 388+ 8AF2              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8AF2              ;                                                     Rutinas_de_impresion en IX.
 390+ 8AF2              ;                                                     Puntero_de_impresion en HL.
 391+ 8AF2              ;                                                     Impacto/Dirección en BC.
 392+ 8AF2
 393+ 8AF2 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8AF3 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8AF4 23               inc hl                                          ; _ al siguiente.
 396+ 8AF5 A7               and a
 397+ 8AF6 20 C0            jr nz,3B
 398+ 8AF8
 399+ 8AF8 08               ex af,af
 400+ 8AF9 ED 73 1C 86      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AFD F9               ld sp,hl
 402+ 8AFE
 403+ 8AFE DD E5            push ix                                         ; Rutina de impresión.
 404+ 8B00 F5               push af                                         ; Puntero de impresión.
 405+ 8B01 FD E5            push iy                                         ; Puntero objeto.
 406+ 8B03 C5               push bc                                         ; Control.
 407+ 8B04
 408+ 8B04 ED 7B 1C 86      ld sp,(Stack)
 409+ 8B08
 410+ 8B08              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8B08
 412+ 8B08 21 13 86     	ld hl,Ctrl_1
 413+ 8B0B CB C6        	set 0,(hl)
 414+ 8B0D
 415+ 8B0D DD E5        	push ix
 416+ 8B0F E1               pop hl
 417+ 8B10 F5               push af
 418+ 8B11 DD E1            pop ix
 419+ 8B13
 420+ 8B13 CD A0 7F     	call Guarda_foto_registros
 421+ 8B16
 422+ 8B16 21 13 86     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8B19 CB 86        	res 0,(hl)
 424+ 8B1B
 425+ 8B1B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8B1B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8B1B
 428+ 8B1B CD 1D 88         call Inicia_Puntero_Disparo_Amadeus
 429+ 8B1E CD 16 88         call Inicia_Puntero_Disparo_Entidades
 430+ 8B21
 431+ 8B21 C9           4 ret
 432+ 8B22
 433+ 8B22              ; ----------------------------------------------------------------
 434+ 8B22              ;
 435+ 8B22              ;   4/3/23
 436+ 8B22              ;
 437+ 8B22              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8B22              ;   _ al generarse el disparo.
 439+ 8B22              ;
 440+ 8B22              ;       "$80" ..... No se produce colisión.
 441+ 8B22              ;       "$81" ..... Se produce colisión.
 442+ 8B22
 443+ 8B22              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8B22              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8B22
 446+ 8B22
 447+ 8B22 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8B24 E5               push hl                                        ; Puntero de impresión.
 449+ 8B25 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8B27 CD 43 8B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8B2A
 452+ 8B2A 7B               ld a,e
 453+ 8B2B E6 01            and 1
 454+ 8B2D 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8B2F
 456+ 8B2F E1               pop hl
 457+ 8B30 E5               push hl
 458+ 8B31 CD C8 90         call NextScan
 459+ 8B34
 460+ 8B34 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8B35 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8B37 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8B39              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8B39 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8B3B CD 43 8B         call Bucle_2
 466+ 8B3E
 467+ 8B3E 43           2 ld b,e
 468+ 8B3F E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8B40 FD E1            pop iy
 470+ 8B42 C9               ret
 471+ 8B43
 472+ 8B43               ; ---------- ----------
 473+ 8B43
 474+ 8B43 06 02        Bucle_2 ld b,2
 475+ 8B45 FD 7E 00     2 ld a,(iy)
 476+ 8B48 A6               and (hl)
 477+ 8B49 28 02            jr z,1F
 478+ 8B4B 1E 81            ld e,$81
 479+ 8B4D 23           1 inc hl
 480+ 8B4E FD 23            inc iy
 481+ 8B50 10 F3            djnz 2B
 482+ 8B52 C9               ret
 483+ 8B53
 484+ 8B53              ; -------------------------------------------------------------------------------------------------------------
 485+ 8B53              ;
 486+ 8B53              ;   11/04/23
 487+ 8B53              ;
 488+ 8B53              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8B53              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8B53              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8B53              ;
 492+ 8B53              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8B53
 494+ 8B53              Compara_coordenadas_X
 495+ 8B53
 496+ 8B53              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8B53              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8B53
 499+ 8B53              ; Preparamos registros:
 500+ 8B53
 501+ 8B53 21 DE 85         ld hl,Filas+6
 502+ 8B56 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8B57 23               inc hl
 504+ 8B58 23               inc hl
 505+ 8B59 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8B5A 43               ld b,e
 507+ 8B5B 21 EC 85         ld hl,Filas+20
 508+ 8B5E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8B5F 21 31 86         ld hl,Coordenadas_X_Entidad
 510+ 8B62 CD 71 8D         call Guarda_coordenadas_X
 511+ 8B65
 512+ 8B65              ; Preparamos registros:
 513+ 8B65
 514+ 8B65 21 7C 84         ld hl,Amadeus_db+6
 515+ 8B68 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B69 23               inc hl
 517+ 8B6A 23               inc hl
 518+ 8B6B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B6C 7B               ld a,e
 520+ 8B6D 08               ex af,af'
 521+ 8B6E 21 8A 84         ld hl,Amadeus_db+20
 522+ 8B71 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B72 21 2E 86         ld hl,Coordenadas_X_Amadeus
 524+ 8B75 CD 71 8D         call Guarda_coordenadas_X
 525+ 8B78
 526+ 8B78              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B78              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B78
 529+ 8B78 04               inc b
 530+ 8B79 05               dec b
 531+ 8B7A 28 04            jr z,1F
 532+ 8B7C 06 03            ld b,3
 533+ 8B7E 18 02            jr 2F
 534+ 8B80 06 02        1 ld b,2
 535+ 8B82 08           2 ex af,af'
 536+ 8B83 3C               inc a
 537+ 8B84 3D               dec a
 538+ 8B85 28 04            jr z,5F
 539+ 8B87 0E 03            ld c,3
 540+ 8B89 18 02            jr 6F
 541+ 8B8B 0E 02        5 ld c,2
 542+ 8B8D 79           6 ld a,c
 543+ 8B8E 08               ex af,af'
 544+ 8B8F 11 31 86         ld de,Coordenadas_X_Entidad
 545+ 8B92 1A           4 ld a,(de)
 546+ 8B93 21 2E 86         ld hl,Coordenadas_X_Amadeus
 547+ 8B96 BE           3 cp (hl)
 548+ 8B97 28 0E            jr z,7F
 549+ 8B99 23               inc hl
 550+ 8B9A 0D               dec c
 551+ 8B9B 20 F9            jr nz,3B
 552+ 8B9D 13               inc de
 553+ 8B9E 08               ex af,af'
 554+ 8B9F 4F               ld c,a
 555+ 8BA0 08               ex af,af'
 556+ 8BA1 10 EF            djnz 4B
 557+ 8BA3
 558+ 8BA3              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8BA3
 560+ 8BA3 CD B0 8D     8 call Limpia_Coordenadas_X
 561+ 8BA6 C9               ret
 562+ 8BA7
 563+ 8BA7              7
 564+ 8BA7 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 565+ 8BA9 32 F1 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 566+ 8BAC 21 29 86         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 567+ 8BAF CB D6            set 2,(hl)
 568+ 8BB1 18 F0            jr 8B
 569+ 8BB3
 570+ 8BB3              ; -----------------------------------------------------------------------
 571+ 8BB3              ;
 572+ 8BB3              ;   17/04/23
 573+ 8BB3              ;
 574+ 8BB3
 575+ 8BB3              Detecta_colision_nave_entidad
 576+ 8BB3
 577+ 8BB3              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8BB3
 579+ 8BB3 2A DA 85         ld hl,(Posicion_actual)
 580+ 8BB6 CD 2D 90         call Calcula_puntero_de_impresion
 581+ 8BB9
 582+ 8BB9              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 583+ 8BB9              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 584+ 8BB9
 585+ 8BB9 DD E5            push ix
 586+ 8BBB E1               pop hl
 587+ 8BBC E5               push hl
 588+ 8BBD
 589+ 8BBD              ; ----- ----- -----
 590+ 8BBD 1E 00            ld e,0                                         ; Indica impacto.
 591+ 8BBF 06 0A            ld b,10
 592+ 8BC1 CD F1 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 593+ 8BC4 7B               ld a,e
 594+ 8BC5 FE 05            cp 5
 595+ 8BC7 38 0E            jr c,3F
 596+ 8BC9
 597+ 8BC9              ; LLegados a este punto:
 598+ 8BC9              ;
 599+ 8BC9              ;   HAY COLISIÓN !!!!!.
 600+ 8BC9              ;
 601+ 8BC9              ;   .db (Impacto) de Amadeus a "1".
 602+ 8BC9              ;   SET el bit3 de (Impacto2).
 603+ 8BC9              ;
 604+ 8BC9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 605+ 8BC9
 606+ 8BC9 21 8F 84         ld hl,Amadeus_db+25
 607+ 8BCC 36 01            ld (hl),1
 608+ 8BCE 21 29 86         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 609+ 8BD1 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 610+ 8BD3 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 611+ 8BD5 18 18            jr 1F
 612+ 8BD7
 613+ 8BD7              ; -----
 614+ 8BD7
 615+ 8BD7 E1           3 pop hl
 616+ 8BD8 CD C8 90         call NextScan
 617+ 8BDB E5               push hl
 618+ 8BDC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 619+ 8BDD FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 620+ 8BDF 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 621+ 8BE1 30 0C            jr nc,1F
 622+ 8BE3              ;                                                  ; _ 2º scanline si esto es así.
 623+ 8BE3 10 DC            djnz 2B
 624+ 8BE5
 625+ 8BE5              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 626+ 8BE5
 627+ 8BE5              ; LLegados a este punto:
 628+ 8BE5              ;
 629+ 8BE5              ;   NO HAY COLISIÓN !!!!!.
 630+ 8BE5              ;
 631+ 8BE5              ;   .db (Impacto) de Amadeus a "0".
 632+ 8BE5              ;   RES el bit2 de (Impacto2).
 633+ 8BE5              ;
 634+ 8BE5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 635+ 8BE5              ;   Lo colocamos a "0".
 636+ 8BE5
 637+ 8BE5 21 29 86         ld hl,Impacto2
 638+ 8BE8 CB 96            res 2,(hl)
 639+ 8BEA 2A 2A 86         ld hl,(Entidad_sospechosa_de_colision)
 640+ 8BED 36 00            ld (hl),0
 641+ 8BEF
 642+ 8BEF E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8BF0 C9               ret
 644+ 8BF1
 645+ 8BF1               ; ---------- ----------
 646+ 8BF1
 647+ 8BF1 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 648+ 8BF2 3A D9 85         ld a,(Columns)
 649+ 8BF5 47               ld b,a
 650+ 8BF6 FD 7E 00     2 ld a,(iy)
 651+ 8BF9 BE               cp (hl)
 652+ 8BFA 28 01            jr z,1F
 653+ 8BFC
 654+ 8BFC 1C               inc e
 655+ 8BFD
 656+ 8BFD 23           1 inc hl
 657+ 8BFE FD 23            inc iy
 658+ 8C00 10 F4            djnz 2B
 659+ 8C02 C1               pop bc
 660+ 8C03 C9               ret
 661+ 8C04
 662+ 8C04              ; -------------------------------------------------------------------------------------------------------------
 663+ 8C04              ;
 664+ 8C04              ;   13/03/23
 665+ 8C04              ;
 666+ 8C04              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 667+ 8C04              ;
 668+ 8C04              ;   DESTRUYE: HL,BC,DE y A.
 669+ 8C04
 670+ 8C04 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 671+ 8C07 7E               ld a,(hl)
 672+ 8C08 A7               and a
 673+ 8C09 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 674+ 8C0A
 675+ 8C0A 44               ld b,h
 676+ 8C0B 4D               ld c,l
 677+ 8C0C 2A 22 86         ld hl,(Stack_snapshot_disparos)
 678+ 8C0F E5               push hl
 679+ 8C10 A7               and a
 680+ 8C11 ED 42            sbc hl,bc
 681+ 8C13 E5               push hl
 682+ 8C14 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 683+ 8C15
 684+ 8C15 E1               pop hl
 685+ 8C16 54               ld d,h
 686+ 8C17 5D               ld e,l
 687+ 8C18 1B               dec de
 688+ 8C19 ED B8            lddr                                                ; Limpiamos.
 689+ 8C1B
 690+ 8C1B 21 60 70         ld hl,Album_de_fotos_disparos
 691+ 8C1E 22 22 86         ld (Stack_snapshot_disparos),hl
 692+ 8C21
 693+ 8C21 C9               ret
 694+ 8C22
 695+ 8C22              ; -------------------------------------------------------------------------------------------------------------
 696+ 8C22              ;
 697+ 8C22              ;   28/03/23
 698+ 8C22              ;
 699+ 8C22
 700+ 8C22 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 701+ 8C25 2A 27 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 702+ 8C28
 703+ 8C28 CD 54 88     2 call Extrae_address
 704+ 8C2B 7E               ld a,(hl)
 705+ 8C2C A7               and a
 706+ 8C2D 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 707+ 8C2F
 708+ 8C2F              ; ----- ----- ----- ----- ----- -----
 709+ 8C2F
 710+ 8C2F C5               push bc
 711+ 8C30 CD EC 8C         call foto_disparo_a_borrar
 712+ 8C33
 713+ 8C33              ; Existe colisión con este disparo???
 714+ 8C33
 715+ 8C33 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 716+ 8C34 7E               ld a,(hl)
 717+ 8C35 2B               dec hl
 718+ 8C36 E6 01            and 1
 719+ 8C38 28 1D            jr z,9F
 720+ 8C3A
 721+ 8C3A              ;   En este punto:
 722+ 8C3A              ;
 723+ 8C3A              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 724+ 8C3A              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 725+ 8C3A              ;   _con la entidad).
 726+ 8C3A              ;
 727+ 8C3A              ;   Disparo_2A defw 0                                ; Control.
 728+ 8C3A              ;    defw 0                                          ; Puntero objeto.
 729+ 8C3A              ;    defw 0                                          ; Puntero de impresión.
 730+ 8C3A              ;    defw 0                                          ; Rutina de impresión.
 731+ 8C3A
 732+ 8C3A E5               push hl
 733+ 8C3B
 734+ 8C3B 06 04            ld b,4
 735+ 8C3D 23           19 inc hl
 736+ 8C3E 10 FD            djnz 19B
 737+ 8C40
 738+ 8C40 CD 54 88         call Extrae_address
 739+ 8C43 CD DF 96         call Genera_coordenadas_disparo
 740+ 8C46
 741+ 8C46              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 742+ 8C46
 743+ 8C46 21 2C 86         ld hl,Coordenadas_disparo_certero
 744+ 8C49 72               ld (hl),d
 745+ 8C4A 23               inc hl
 746+ 8C4B 73               ld (hl),e
 747+ 8C4C
 748+ 8C4C              ; Elimino el disparo de la base de datos.
 749+ 8C4C
 750+ 8C4C E1               pop hl
 751+ 8C4D CD 66 8D         call Elimina_disparo_de_base_de_datos
 752+ 8C50 21 29 86         ld hl,Impacto2
 753+ 8C53 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 754+ 8C55
 755+ 8C55 18 06            jr 11F
 756+ 8C57
 757+ 8C57 CD 15 8D     9 call Mueve_disparo
 758+ 8C5A CD EC 8C         call foto_disparo_a_borrar
 759+ 8C5D
 760+ 8C5D C1           11 pop bc
 761+ 8C5E 18 04            jr 7F
 762+ 8C60
 763+ 8C60              ; ----- ----- ----- ----- ----- -----
 764+ 8C60
 765+ 8C60 ED 42        1 sbc hl,bc
 766+ 8C62 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 767+ 8C64
 768+ 8C64 2A 27 86     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C67 23               inc hl
 770+ 8C68 23               inc hl
 771+ 8C69 22 27 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C6C 18 BA            jr 2B
 773+ 8C6E
 774+ 8C6E CD 1D 88     3 call Inicia_Puntero_Disparo_Amadeus
 775+ 8C71 01 66 84         ld bc,Disparo_11
 776+ 8C74 2A 25 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C77
 778+ 8C77 CD 54 88     5 call Extrae_address
 779+ 8C7A 7E               ld a,(hl)
 780+ 8C7B A7               and a
 781+ 8C7C 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C7E
 783+ 8C7E              ; ----- ----- ----- ----- ----- -----
 784+ 8C7E
 785+ 8C7E C5               push bc
 786+ 8C7F CD EC 8C         call foto_disparo_a_borrar
 787+ 8C82
 788+ 8C82              ; Existe colisión con este disparo???
 789+ 8C82
 790+ 8C82 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C83 7E               ld a,(hl)
 792+ 8C84 2B               dec hl
 793+ 8C85 E6 01            and 1
 794+ 8C87 28 48            jr z,10F
 795+ 8C89
 796+ 8C89              ; La colisión se produce con Amadeus???
 797+ 8C89              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C89
 799+ 8C89 E5               push hl
 800+ 8C8A
 801+ 8C8A 06 04            ld b,4
 802+ 8C8C 23           16 inc hl
 803+ 8C8D 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C8F CD 54 88         call Extrae_address
 805+ 8C92 CD DF 96         call Genera_coordenadas_disparo
 806+ 8C95
 807+ 8C95 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C96 FE 16            cp $16
 809+ 8C98 38 22            jr c,15F
 810+ 8C9A
 811+ 8C9A              ; (Colisiones en filas 16 y 17).
 812+ 8C9A
 813+ 8C9A D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C9B
 815+ 8C9B              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C9B
 817+ 8C9B 21 7C 84         ld hl,Amadeus_db+6
 818+ 8C9E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C9F 23               inc hl
 820+ 8CA0 23               inc hl
 821+ 8CA1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8CA2 21 8A 84         ld hl,Amadeus_db+20
 823+ 8CA5 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8CA6 21 2E 86         ld hl,Coordenadas_X_Amadeus
 825+ 8CA9 CD 71 8D         call Guarda_coordenadas_X
 826+ 8CAC
 827+ 8CAC D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8CAD
 829+ 8CAD              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8CAD
 831+ 8CAD 06 03            ld b,3
 832+ 8CAF 21 2E 86         ld hl,Coordenadas_X_Amadeus
 833+ 8CB2 7E           18 ld a,(hl)
 834+ 8CB3 BA               cp d
 835+ 8CB4 20 03            jr nz,17F
 836+ 8CB6
 837+ 8CB6              ; Colisión Amadeus !!!!!!!!!!
 838+ 8CB6
 839+ 8CB6 E1               pop hl
 840+ 8CB7 18 09            jr 14F
 841+ 8CB9
 842+ 8CB9 23           17 inc hl
 843+ 8CBA 10 F6            djnz 18B
 844+ 8CBC
 845+ 8CBC              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8CBC              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8CBC
 848+ 8CBC E1           15 pop hl
 849+ 8CBD 23               inc hl
 850+ 8CBE 35               dec (hl)
 851+ 8CBF 2B               dec hl
 852+ 8CC0 18 0F            jr 10F
 853+ 8CC2
 854+ 8CC2              ; -----------------------debug
 855+ 8CC2
 856+ 8CC2              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8CC2              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8CC2
 859+ 8CC2 E5           14 push hl
 860+ 8CC3 CD 66 8D         call Elimina_disparo_de_base_de_datos
 861+ 8CC6 21 29 86         ld hl,Impacto2
 862+ 8CC9 CB CE            set 1,(hl)
 863+ 8CCB CD B0 8D         call Limpia_Coordenadas_X
 864+ 8CCE
 865+ 8CCE E1               pop hl
 866+ 8CCF 18 06            jr 12F
 867+ 8CD1
 868+ 8CD1 CD 15 8D     10 call Mueve_disparo
 869+ 8CD4 CD EC 8C         call foto_disparo_a_borrar
 870+ 8CD7 C1           12 pop bc
 871+ 8CD8
 872+ 8CD8 18 04            jr 8F
 873+ 8CDA
 874+ 8CDA              ; ----- ----- ----- ----- ----- -----
 875+ 8CDA
 876+ 8CDA ED 42        4 sbc hl,bc
 877+ 8CDC 28 0A            jr z,6F
 878+ 8CDE
 879+ 8CDE 2A 25 86     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8CE1 23               inc hl
 881+ 8CE2 23               inc hl
 882+ 8CE3 22 25 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8CE6 18 8F            jr 5B
 884+ 8CE8
 885+ 8CE8 CD 16 88     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8CEB C9               ret
 887+ 8CEC
 888+ 8CEC              ; ------------------------------------------------------------------
 889+ 8CEC
 890+ 8CEC              foto_disparo_a_borrar
 891+ 8CEC
 892+ 8CEC 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8CED A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8CEE C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8CEF
 896+ 8CEF E5               push hl
 897+ 8CF0 23               inc hl
 898+ 8CF1 23               inc hl
 899+ 8CF2 ED 73 1C 86      ld (Stack),sp
 900+ 8CF6 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8CF7 FD E1            pop iy
 902+ 8CF9 DD E1            pop ix
 903+ 8CFB E1               pop hl
 904+ 8CFC ED 7B 1C 86      ld sp,(Stack)
 905+ 8D00 3A 13 86         ld a,(Ctrl_1)
 906+ 8D03 CB C7            set 0,a
 907+ 8D05 32 13 86         ld (Ctrl_1),a
 908+ 8D08 CD A0 7F         call Guarda_foto_registros
 909+ 8D0B 3A 13 86         ld a,(Ctrl_1)
 910+ 8D0E CB 87            res 0,a
 911+ 8D10 32 13 86         ld (Ctrl_1),a
 912+ 8D13 E1               pop hl
 913+ 8D14 C9               ret
 914+ 8D15
 915+ 8D15 E5           Mueve_disparo push hl
 916+ 8D16 7E               ld a,(hl)
 917+ 8D17 06 04            ld b,4
 918+ 8D19 23           1 inc hl
 919+ 8D1A 10 FD            djnz 1B
 920+ 8D1C
 921+ 8D1C              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8D1C
 923+ 8D1C CD 54 88         call Extrae_address
 924+ 8D1F
 925+ 8D1F E6 01            and 1
 926+ 8D21 28 2A            jr z,2F
 927+ 8D23
 928+ 8D23              ; Disparo hacia arriba, (Amadeus).
 929+ 8D23
 930+ 8D23              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8D23              ; _ de la dificultad.
 932+ 8D23
 933+ 8D23 CD D7 90         call PreviousScan
 934+ 8D26 CD D7 90         call PreviousScan
 935+ 8D29 CD D7 90         call PreviousScan
 936+ 8D2C
 937+ 8D2C              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8D2C
 939+ 8D2C 7C               ld a,h
 940+ 8D2D FE 40            cp $40
 941+ 8D2F 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8D31
 943+ 8D31              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8D31
 945+ 8D31 EB               ex de,hl
 946+ 8D32 06 04            ld b,4
 947+ 8D34 2B           6 dec hl
 948+ 8D35 10 FD            djnz 6B
 949+ 8D37
 950+ 8D37 CD 66 8D         call Elimina_disparo_de_base_de_datos
 951+ 8D3A
 952+ 8D3A 18 0C            jr 4F
 953+ 8D3C
 954+ 8D3C              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8D3C
 956+ 8D3C D5           3 push de
 957+ 8D3D C5               push bc
 958+ 8D3E CD 22 8B         call Comprueba_Colision
 959+ 8D41 78               ld a,b
 960+ 8D42 C1               pop bc
 961+ 8D43 D1               pop de
 962+ 8D44
 963+ 8D44 EB               ex de,hl
 964+ 8D45
 965+ 8D45 73               ld (hl),e
 966+ 8D46 23               inc hl
 967+ 8D47 72               ld (hl),d
 968+ 8D48
 969+ 8D48 E1           4 pop hl
 970+ 8D49 23               inc hl
 971+ 8D4A 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 972+ 8D4B 2B               dec hl
 973+ 8D4C C9               ret
 974+ 8D4D
 975+ 8D4D              ; Disparo hacia abajo, (Entidad).
 976+ 8D4D
 977+ 8D4D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 8D4D              ; _ de la dificultad.
 979+ 8D4D
 980+ 8D4D CD C8 90     2 call NextScan
 981+ 8D50 CD C8 90         call NextScan
 982+ 8D53 CD C8 90         call NextScan
 983+ 8D56
 984+ 8D56              ; Detecta si el disparo de la entidad sale de la pantalla.
 985+ 8D56
 986+ 8D56 7C               ld a,h
 987+ 8D57 FE 58            cp $58
 988+ 8D59 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 989+ 8D5B
 990+ 8D5B EB               ex de,hl
 991+ 8D5C 06 04            ld b,4
 992+ 8D5E 2B           5 dec hl
 993+ 8D5F 10 FD            djnz 5B
 994+ 8D61
 995+ 8D61 CD 66 8D         call Elimina_disparo_de_base_de_datos
 996+ 8D64
 997+ 8D64 18 E2            jr 4B
 998+ 8D66
 999+ 8D66              ; HL apunta al primer byte de la base de datos del disparo.
1000+ 8D66
1001+ 8D66 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1002+ 8D69 AF               xor a
1003+ 8D6A 77               ld (hl),a
1004+ 8D6B 54               ld d,h
1005+ 8D6C 5D               ld e,l
1006+ 8D6D 13               inc de
1007+ 8D6E ED B0            ldir
1008+ 8D70 C9               ret
1009+ 8D71
1010+ 8D71              ; -----------------------------------------------------------------
1011+ 8D71              ;
1012+ 8D71              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1013+ 8D71              ;
1014+ 8D71              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1015+ 8D71              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1016+ 8D71              ;
1017+ 8D71              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1018+ 8D71              ;
1019+ 8D71              ;   INPUTS:
1020+ 8D71              ;
1021+ 8D71              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1022+ 8D71              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1023+ 8D71              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1024+ 8D71
1025+ 8D71              ;   MODIFICA: A, HL, DE y C
1026+ 8D71
1027+ 8D71 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1028+ 8D72 79               ld a,c
1029+ 8D73 E6 01            and 1
1030+ 8D75 20 03            jr nz,1F
1031+ 8D77 14               inc d
1032+ 8D78 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1033+ 8D7A
1034+ 8D7A              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D7A              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1036+ 8D7A
1037+ 8D7A 15           1 dec d
1038+ 8D7B 23           2 inc hl
1039+ 8D7C 72               ld (hl),d
1040+ 8D7D
1041+ 8D7D 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1042+ 8D7E A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1043+ 8D7F C8               ret z
1044+ 8D80
1045+ 8D80 AF               xor a
1046+ 8D81 5F               ld e,a
1047+ 8D82 18 ED            jr Guarda_coordenadas_X
1048+ 8D84
1049+ 8D84              ; -----------------------------------------------------------------
1050+ 8D84              ;
1051+ 8D84              ;   12/04/23
1052+ 8D84              ;
1053+ 8D84
1054+ 8D84 3A 29 86     Selector_de_impactos ld a,(Impacto2)
1055+ 8D87 A7               and a
1056+ 8D88 C8               ret z
1057+ 8D89
1058+ 8D89 FE 04            cp 4
1059+ 8D8B 20 09            jr nz,1F
1060+ 8D8D
1061+ 8D8D
1062+ 8D8D              ; La colisión se produce por contacto entre Amadeus y una entidad.
1063+ 8D8D
1064+ 8D8D CD B3 8B         call Detecta_colision_nave_entidad
1065+ 8D90
1066+ 8D90 21 29 86         ld hl,Impacto2
1067+ 8D93 CB 5E            bit 3,(hl)
1068+ 8D95 C0               ret nz                                               ; Existe colisión, RET.
1069+ 8D96
1070+ 8D96              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1071+ 8D96              ; Primero analizamos si algún disparo impacta en Amadeus.
1072+ 8D96
1073+ 8D96 21 29 86     1 ld hl,Impacto2
1074+ 8D99 CB 4E            bit 1,(hl)
1075+ 8D9B 28 07            jr z,2F
1076+ 8D9D
1077+ 8D9D 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1078+ 8DA0 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1079+ 8DA2 18 0B            jr 3F
1080+ 8DA4
1081+ 8DA4 21 29 86     2 ld hl,Impacto2
1082+ 8DA7 CB 46            bit 0,(hl)
1083+ 8DA9 C8               ret z
1084+ 8DAA
1085+ 8DAA              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1086+ 8DAA
1087+ 8DAA 21 13 86         ld hl,Ctrl_1
1088+ 8DAD CB D6            set 2,(hl)
1089+ 8DAF
1090+ 8DAF C9           3 ret
1091+ 8DB0
1092+ 8DB0              ; -----------------------------------------------------------------
1093+ 8DB0              ;
1094+ 8DB0              ;   16/04/23
1095+ 8DB0              ;
1096+ 8DB0
1097+ 8DB0 AF           Limpia_Coordenadas_X xor a
1098+ 8DB1 06 06            ld b,6
1099+ 8DB3 21 2E 86         ld hl,Coordenadas_X_Amadeus
1100+ 8DB6 77           1 ld (hl),a
1101+ 8DB7 23               inc hl
1102+ 8DB8 10 FC            djnz 1B
1103+ 8DBA C9               ret
1104+ 8DBB
1105+ 8DBB              ; -----------------------------------------------------------------
1106+ 8DBB              ;
1107+ 8DBB              ;   25/04/23
1108+ 8DBB              ;
1109+ 8DBB
1110+ 8DBB              Determina_resultado_comparativa
1111+ 8DBB
1112+ 8DBB 7C               ld a,h
1113+ 8DBC 06 00            ld b,0
1114+ 8DBE
1115+ 8DBE CD D6 8D         call Compara_cositas
1116+ 8DC1 04               inc b
1117+ 8DC2 05               dec b
1118+ 8DC3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1119+ 8DC4
1120+ 8DC4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1121+ 8DC5 06 00            ld b,0
1122+ 8DC7 FE 02            cp $02
1123+ 8DC9 28 09            jr z,1F
1124+ 8DCB FE FE            cp $fe
1125+ 8DCD 28 05            jr z,1F
1126+ 8DCF
1127+ 8DCF CD D6 8D         call Compara_cositas
1128+ 8DD2 18 01            jr 2F
1129+ 8DD4
1130+ 8DD4 04           1 inc b
1131+ 8DD5 C9           2 ret
1132+ 8DD6
1133+ 8DD6 A7           Compara_cositas and a
1134+ 8DD7 28 07            jr z,1F
1135+ 8DD9 FE FF            cp $ff
1136+ 8DDB 28 03            jr z,1F
1137+ 8DDD FE 01            cp $01
1138+ 8DDF C0               ret nz
1139+ 8DE0 04           1 inc b
1140+ 8DE1 C9               ret
1141+ 8DE2
# file closed: Disparo.asm
1055  8DE2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DE2              ; ******************************************************************************************************************************************************************************************
   2+ 8DE2              ;
   3+ 8DE2              ; 01/23
   4+ 8DE2              ;
   5+ 8DE2              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DE2
   7+ 8DE2 CD BC 90     Draw call Prepara_draw
   8+ 8DE5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8DE6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8DE7 28 05        	jr z,2F
  11+ 8DE9
  12+ 8DE9 3A EC 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8DEC 18 0C        	jr 1F
  14+ 8DEE 2A EA 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8DF1 22 DA 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8DF4 CD 83 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8DF7              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8DF7 CD 02 98     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8DFA 3A 06 86     1 ld a,(Ctrl_0)
  20+ 8DFD CB 6F        	bit 5,a
  21+ 8DFF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8E01
  23+ 8E01 CD 19 8E     	call Comprueba_limite_horizontal
  24+ 8E04 CD A9 8E     	call Comprueba_limite_vertical
  25+ 8E07
  26+ 8E07              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8E07
  28+ 8E07 CD F6 8F     3 call calcula_CColumnass
  29+ 8E0A CD 2D 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8E0D CD 82 90     	call Define_rutina_de_impresion
  31+ 8E10
  32+ 8E10 3A 06 86     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8E13 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8E15 32 06 86     	ld (Ctrl_0),a
  35+ 8E18
  36+ 8E18 C9           	ret
  37+ 8E19
  38+ 8E19              ; *******************************************************************************************************************************************************************************************
  39+ 8E19              ;	21/01/23
  40+ 8E19              ;
  41+ 8E19              ; 	Comprueba_limite_horizontal.
  42+ 8E19              ;
  43+ 8E19              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8E19              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8E19              ;
  46+ 8E19              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8E19              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8E19              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8E19              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8E19
  51+ 8E19
  52+ 8E19
  53+ 8E19 3A 06 86     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8E1C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8E1E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8E20 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8E22 32 06 86     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8E25 18 09            jr 6F
  59+ 8E27 CB 5F        1 bit 3,a
  60+ 8E29 28 0A            jr z,2F
  61+ 8E2B E6 F7            and $f7
  62+ 8E2D 32 06 86         ld (Ctrl_0),a
  63+ 8E30 CD 83 8F     6 call Inicializacion
  64+ 8E33 18 5B            jr 5F
  65+ 8E35 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8E36
  67+ 8E36              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8E36              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8E36
  70+ 8E36 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8E37 2A 10 86     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8E3A CD 88 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8E3D 67           	ld h,a
  74+ 8E3E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8E3F CD 88 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8E42 67           	ld h,a
  77+ 8E43 A7           	and a
  78+ 8E44 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8E46 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8E47 3A EC 85     	ld a,(Cuad_objeto)
  81+ 8E4A FE 02        	cp 2
  82+ 8E4C 38 1E        	jr c,3F
  83+ 8E4E 28 1C        	jr z,3F
  84+ 8E50 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8E51 28 23            jr z,7F
  86+ 8E53 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8E55 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E57 E1           	pop hl
  89+ 8E58
  90+ 8E58              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E58              ; _para indicar con E="2" en caso necesario.
  92+ 8E58
  93+ 8E58 E5               push hl
  94+ 8E59 C5               push bc
  95+ 8E5A CD 88 93     	call calcula_tercio
  96+ 8E5D FE 01        	cp 1
  97+ 8E5F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E61 CD 91 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E64 28 26            jr z,9F
 100+ 8E66 38 24            jr c,9F
 101+ 8E68 1E 00        11 ld e,0
 102+ 8E6A 18 22            jr 8F
 103+ 8E6C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E6D 28 07        	jr z, 7F
 105+ 8E6F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E71 1E 00         	ld e,0
 107+ 8E73 E1           	pop hl
 108+ 8E74 18 04        	jr 4F
 109+ 8E76 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E78 18 15            jr 10F
 111+ 8E7A
 112+ 8E7A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E7A              ; _para indicar con E="2" en caso necesario.
 114+ 8E7A
 115+ 8E7A E5           4 push hl
 116+ 8E7B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E7C CD 88 93     	call calcula_tercio
 118+ 8E7F FE 01        	cp 1
 119+ 8E81 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E83 CD 91 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E86 28 04            jr z,9F
 122+ 8E88 30 02            jr nc,9F
 123+ 8E8A 18 02        	jr 8F
 124+ 8E8C 1E 02        9 ld e,2
 125+ 8E8E C1           8 pop bc
 126+ 8E8F E1           10 pop hl
 127+ 8E90 C9           5 ret
 128+ 8E91
 129+ 8E91              ; --------------------
 130+ 8E91              ;
 131+ 8E91              ; 25/08/22
 132+ 8E91
 133+ 8E91 CD 88 93     Comprueba_centro call calcula_tercio
 134+ 8E94 67               ld h,a
 135+ 8E95 08           	ex af,af
 136+ 8E96 FE 02        	cp 2
 137+ 8E98 38 07        	jr c,1F
 138+ 8E9A 28 05        	jr z,1F
 139+ 8E9C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E9F 18 03        	jr 2F
 141+ 8EA1 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8EA4 08           2 ex af,af
 143+ 8EA5 A7               and a
 144+ 8EA6 ED 42            sbc hl,bc
 145+ 8EA8 C9               ret
 146+ 8EA9
 147+ 8EA9              ; *********************************************************************************************************************************************************************************************
 148+ 8EA9              ;
 149+ 8EA9              ;   16/8/22
 150+ 8EA9              ;
 151+ 8EA9              ;	Comprueba_limite_vertical
 152+ 8EA9              ;
 153+ 8EA9              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8EA9              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8EA9              ;
 156+ 8EA9
 157+ 8EA9 2A DA 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8EAC 7D           	ld a,l
 159+ 8EAD E6 1F        	and $1F
 160+ 8EAF 57           	ld d,a
 161+ 8EB0 3A 12 86     	ld a,(Limite_vertical)
 162+ 8EB3 BA           	cp d 											; Límite - Posición.
 163+ 8EB4 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8EB5 3A EC 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8EB8 CB 47        	bit 0,a
 166+ 8EBA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8EBC
 168+ 8EBC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8EBC
 170+ 8EBC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8EBD 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8EBF
 173+ 8EBF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8EBF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8EBF
 176+ 8EBF 3A DE 85         ld a,(Coordenada_X)
 177+ 8EC2 16 0F            ld d,Centro_izquierda
 178+ 8EC4 A7               and a
 179+ 8EC5 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8EC6 28 1E            jr z,3F
 181+ 8EC8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8ECA              ;                                                    ; _salimos sin modificar nada.
 183+ 8ECA 18 0E            jr 2F
 184+ 8ECC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8ECD 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8ECF
 187+ 8ECF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8ECF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8ECF
 190+ 8ECF 3A DE 85         ld a,(Coordenada_X)
 191+ 8ED2 16 10            ld d,Centro_derecha
 192+ 8ED4 A7               and a
 193+ 8ED5 92               sub d
 194+ 8ED6 28 0E            jr z,3F
 195+ 8ED8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8EDA              ;                                                    ; _salimos sin modificar nada.
 197+ 8EDA CB 43        2 bit 0,e
 198+ 8EDC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8EDE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8EDF CD 73 8F         call Modificaccionne
 201+ 8EE2 C1           	pop bc
 202+ 8EE3 CD 83 8F         call Inicializacion
 203+ 8EE6 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8EE7
 205+ 8EE7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8EE7
 207+ 8EE7 C5           4 push bc
 208+ 8EE8 01 D9 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8EEB 0A           	ld a,(bc)
 210+ 8EEC 3D           	dec a
 211+ 8EED 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8EEE 7D           	ld a,l
 213+ 8EEF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8EF0 CB 47        	bit 0,a
 215+ 8EF2 28 03        	jr z,5F
 216+ 8EF4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8EF5 18 2E        	jr 7F
 218+ 8EF7
 219+ 8EF7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8EF7
 221+ 8EF7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8EF8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8EF9 3A 06 86     	ld a,(Ctrl_0)
 224+ 8EFC CB 4F        	bit 1,a
 225+ 8EFE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8F00 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8F01
 228+ 8F01              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8F01
 230+ 8F01 1C               inc e
 231+ 8F02 1D               dec e
 232+ 8F03 20 07            jr nz,12F
 233+ 8F05 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8F06 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8F07 22 DA 85     	ld (Posicion_actual),hl
 236+ 8F0A 18 44        13 jr 9F
 237+ 8F0C CB 43        12 bit 0,e
 238+ 8F0E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8F10              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8F10 C1           	pop bc
 241+ 8F11 18 D3        	jr 3B
 242+ 8F13 80           14 add b
 243+ 8F14 6F               ld l,a
 244+ 8F15 22 DA 85     	ld (Posicion_actual),hl
 245+ 8F18 CD 73 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8F1B 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8F1D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8F1F 32 06 86         ld (Ctrl_0),a
 249+ 8F22 F1           	pop af
 250+ 8F23 18 2B        	jr 9F
 251+ 8F25
 252+ 8F25              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8F25
 254+ 8F25 F5           7 push af
 255+ 8F26 3A 06 86     	ld a,(Ctrl_0)
 256+ 8F29 CB 47        	bit 0,a
 257+ 8F2B 20 1D        	jr nz,8F
 258+ 8F2D F1           	pop af
 259+ 8F2E
 260+ 8F2E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8F2E
 262+ 8F2E 1C           	inc e
 263+ 8F2F 1D               dec e
 264+ 8F30 20 07            jr nz,10F
 265+ 8F32 90           	sub b
 266+ 8F33 6F               ld l,a
 267+ 8F34 22 DA 85     	ld (Posicion_actual),hl
 268+ 8F37 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8F39              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8F39 CB 43        10 bit 0,e
 271+ 8F3B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8F3D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8F3D C1           	pop bc
 274+ 8F3E 18 A6        	jr 3B
 275+ 8F40 90           16 sub b
 276+ 8F41 6F               ld l,a
 277+ 8F42 22 DA 85     	ld (Posicion_actual),hl
 278+ 8F45 CD 73 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8F48 18 06            jr 9F
 280+ 8F4A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8F4C 32 06 86         ld (Ctrl_0),a
 282+ 8F4F F1           	pop af
 283+ 8F50 C1           9 pop bc
 284+ 8F51 1E 00        	ld e,0
 285+ 8F53 CD 83 8F         call Inicializacion
 286+ 8F56 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F57 08           	ex af,af
 288+ 8F58 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F59 18 8B            jr 3B
 290+ 8F5B
 291+ 8F5B              ; --------------------
 292+ 8F5B
 293+ 8F5B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F5D CD D7 90     1 call PreviousScan
 295+ 8F60 10 FB            djnz 1B
 296+ 8F62 22 DA 85     	ld (Posicion_actual),hl
 297+ 8F65 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F66 C9           	ret
 299+ 8F67
 300+ 8F67              ; --------------------
 301+ 8F67
 302+ 8F67 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F69 CD C8 90     1 call NextScan
 304+ 8F6C 10 FB            djnz 1B
 305+ 8F6E 22 DA 85     	ld (Posicion_actual),hl
 306+ 8F71 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F72 C9           	ret
 308+ 8F73
 309+ 8F73              ; --------------------
 310+ 8F73              ;
 311+ 8F73              ;	22/01/23
 312+ 8F73              ;
 313+ 8F73              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F73              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F73              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F73
 317+ 8F73
 318+ 8F73              Modificaccionne
 319+ 8F73
 320+ 8F73 3A EC 85     	ld a,(Cuad_objeto)
 321+ 8F76 FE 02        	cp 2
 322+ 8F78 CC 5B 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F7B DC 5B 8F         call c,Modifica_Pos_actual
 324+ 8F7E C8           	ret z
 325+ 8F7F CD 67 8F         call Modifica_Pos_actual2
 326+ 8F82 C9               ret
 327+ 8F83
 328+ 8F83              ; *************************************************************************************************************************************************************************************************
 329+ 8F83              ;
 330+ 8F83              ;	13/8/22
 331+ 8F83              ;
 332+ 8F83              ;	Inicializacion
 333+ 8F83              ;
 334+ 8F83              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F83              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F83              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F83              ;
 338+ 8F83              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F83              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F83              ;	_ desaparece/aparece.
 341+ 8F83
 342+ 8F83              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F83              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F83              ;
 345+ 8F83              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F83              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F83              ; 		   [E] ="0"
 348+ 8F83
 349+ 8F83              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F83
 351+ 8F83 CD 88 93     Inicializacion call calcula_tercio
 352+ 8F86 28 36        	jr z,primit
 353+ 8F88 E6 02        	and 2
 354+ 8F8A 20 07        	jr nz,segmit
 355+ 8F8C 7D           	ld a,l
 356+ 8F8D FE 7F        	cp $7f
 357+ 8F8F 38 2D        	jr c,primit
 358+ 8F91 28 2B        	jr z,primit
 359+ 8F93 CD F0 8F     segmit call column
 360+ 8F96 38 13        	jr c,tercuad
 361+ 8F98 3E 04        cuarcuad ld a,4
 362+ 8F9A 32 EC 85     	ld (Cuad_objeto),a
 363+ 8F9D 21 20 48     	ld hl,$4820
 364+ 8FA0 22 10 86     	ld (Limite_horizontal),hl
 365+ 8FA3 21 12 86     	ld hl,Limite_vertical
 366+ 8FA6 36 0D        	ld (hl),$0d
 367+ 8FA8 08           	ex af,af
 368+ 8FA9 18 3C        	jr 1F
 369+ 8FAB              tercuad
 370+ 8FAB 3E 03        	ld a,3
 371+ 8FAD 32 EC 85     	ld (Cuad_objeto),a
 372+ 8FB0 21 20 48     	ld hl,$4820
 373+ 8FB3 22 10 86     	ld (Limite_horizontal),hl
 374+ 8FB6 21 12 86     	ld hl,Limite_vertical
 375+ 8FB9 36 12        	ld (hl),$12
 376+ 8FBB 08           	ex af,af
 377+ 8FBC 18 29        	jr 1F
 378+ 8FBE CD F0 8F     primit call column
 379+ 8FC1 38 13        	jr c, primcuad
 380+ 8FC3              segcuad
 381+ 8FC3 3E 02        	ld a,2
 382+ 8FC5 32 EC 85     	ld (Cuad_objeto),a
 383+ 8FC8 21 C0 4F     	ld hl,$4fc0
 384+ 8FCB 22 10 86     	ld (Limite_horizontal),hl
 385+ 8FCE 21 12 86     	ld hl,Limite_vertical
 386+ 8FD1 36 0D        	ld (hl),$0d
 387+ 8FD3 08           	ex af,af
 388+ 8FD4 18 11        	jr 1F
 389+ 8FD6              primcuad
 390+ 8FD6 3E 01        	ld a,1
 391+ 8FD8 32 EC 85     	ld (Cuad_objeto),a
 392+ 8FDB 21 C0 4F     	ld hl,$4fc0
 393+ 8FDE 22 10 86     	ld (Limite_horizontal),hl
 394+ 8FE1 21 12 86     	ld hl,Limite_vertical
 395+ 8FE4 36 12        	ld (hl),$12
 396+ 8FE6 08           	ex af,af
 397+ 8FE7 CD B4 96     1 call Genera_coordenadas
 398+ 8FEA 21 06 86     	ld hl,Ctrl_0
 399+ 8FED CB EE        	set 5,(hl)
 400+ 8FEF C9           	ret
 401+ 8FF0
 402+ 8FF0              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8FF0
 404+ 8FF0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8FF0              ;
 406+ 8FF0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8FF0
 408+ 8FF0 7D           column ld a,l
 409+ 8FF1 E6 1F        	and $1f
 410+ 8FF3 FE 10         	cp $10
 411+ 8FF5 C9            	ret
 412+ 8FF6
 413+ 8FF6              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8FF6              ;
 415+ 8FF6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8FF6              ;
 417+ 8FF6              ; 14/12/22
 418+ 8FF6              ;
 419+ 8FF6              ;	Modifica: A y BC.
 420+ 8FF6
 421+ 8FF6 3A EC 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8FF9 E6 01        	and 1
 423+ 8FFB 28 17        	jr z,1F
 424+ 8FFD
 425+ 8FFD              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FFD
 427+ 8FFD 3A DE 85     	ld a,(Coordenada_X)
 428+ 9000 47           	ld b,a
 429+ 9001 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9002 79           	ld a,c
 431+ 9003 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9004 38 08        	jr c,2F
 433+ 9006 47           	ld b,a
 434+ 9007 79           	ld a,c
 435+ 9008 90           	sub b
 436+ 9009 32 0F 86     	ld (Columnas),a
 437+ 900C 18 1B        	jr 4F
 438+ 900E 79           2 ld a,c
 439+ 900F 32 0F 86     	ld (Columnas),a
 440+ 9012 18 15        	jr 4F
 441+ 9014
 442+ 9014              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9014
 444+ 9014 3A DE 85     1 ld a,(Coordenada_X)
 445+ 9017 81           	add c
 446+ 9018 3D           	dec a
 447+ 9019 D6 1F        	sub $1f
 448+ 901B 38 08        	jr c,3F
 449+ 901D 47           	ld b,a
 450+ 901E 79           	ld a,c
 451+ 901F 90           	sub b
 452+ 9020 32 0F 86     	ld (Columnas),a
 453+ 9023 18 04        	jr 4F
 454+ 9025 79           3 ld a,c
 455+ 9026 32 0F 86     	ld (Columnas),a
 456+ 9029 D9           4 exx
 457+ 902A 4F           	ld c,a
 458+ 902B D9           	exx
 459+ 902C C9            ret
 460+ 902D
 461+ 902D              ; --------------------------------------------------------------------------------------------------------------------
 462+ 902D              ;
 463+ 902D              ; 7/1/23
 464+ 902D              ;
 465+ 902D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 902D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 902D              ;
 468+ 902D              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 902D              ;	DESTRUYE: HL,B Y A.
 470+ 902D
 471+ 902D 3A EC 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9030 FE 02        	cp 2
 473+ 9032 38 18        	jr c,1F
 474+ 9034 28 16        	jr z,1F
 475+ 9036 E6 01        	and 1
 476+ 9038 28 0D        	jr z,3F
 477+ 903A
 478+ 903A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 903A
 480+ 903A CD 76 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 903D
 482+ 903D 7D           9 ld a,l
 483+ 903E E6 1F        	and $1f
 484+ 9040 28 2A        	jr z,7F
 485+ 9042 2B           	dec hl
 486+ 9043 10 F8        	djnz 9B
 487+ 9045 18 25        	jr 7F
 488+ 9047
 489+ 9047              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9047
 491+ 9047 2A DA 85     3 ld hl,(Posicion_actual)
 492+ 904A 18 20        	jr 7F
 493+ 904C
 494+ 904C 28 14        1 jr z,2F
 495+ 904E
 496+ 904E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 904E
 498+ 904E CD 76 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9051 7D           4 ld a,l
 500+ 9052 E6 1F        	and $1f
 501+ 9054 28 03        	jr z,6F
 502+ 9056 2B           	dec hl
 503+ 9057 10 F8        	djnz 4B
 504+ 9059 06 0F        6 ld b,15
 505+ 905B CD D7 90     5 call PreviousScan
 506+ 905E 10 FB        	djnz 5B
 507+ 9060 18 0A        	jr 7F
 508+ 9062
 509+ 9062              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9062
 511+ 9062 CD 76 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9065 06 0F        	ld b,15
 513+ 9067 CD D7 90     8 call PreviousScan
 514+ 906A 10 FB        	djnz 8B
 515+ 906C
 516+ 906C E5           7 push hl
 517+ 906D DD E1        	pop ix
 518+ 906F
 519+ 906F 2A DC 85     	ld hl,(Puntero_objeto)
 520+ 9072 E5           	push hl
 521+ 9073 FD E1        	pop iy
 522+ 9075
 523+ 9075 C9           	ret
 524+ 9076
 525+ 9076              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9076              ;
 527+ 9076              ;	2/1/23
 528+ 9076              ;
 529+ 9076              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9076              ;
 531+ 9076              ;	Tras esta rutina tenemos:
 532+ 9076              ;
 533+ 9076              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9076              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9076              ;
 536+ 9076              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9076
 538+ 9076 2A DA 85     Operandos ld hl,(Posicion_actual)
 539+ 9079 3A 0F 86     	ld a,(Columnas)
 540+ 907C 3D           	dec a
 541+ 907D 20 01        	jr nz,1F
 542+ 907F 3C           	inc a
 543+ 9080 47           1 ld b,a
 544+ 9081 C9           	ret
 545+ 9082
 546+ 9082              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9082              ;
 548+ 9082              ;	3/1/23
 549+ 9082              ;
 550+ 9082              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9082              ;
 552+ 9082              ;	Destruye: A,B,HL y DE.
 553+ 9082
 554+ 9082              Define_rutina_de_impresion
 555+ 9082
 556+ 9082 3A D9 85     	ld a,(Columns)
 557+ 9085 47           	ld b,a
 558+ 9086 3A 0F 86     	ld a,(Columnas)
 559+ 9089 B8           	cp b
 560+ 908A 20 0D        	jr nz,2f
 561+ 908C
 562+ 908C              ;	La entidad se imprime entera.
 563+ 908C
 564+ 908C 21 58 91     	ld hl, Indice_entidades_completas
 565+ 908F E6 01        	and 1
 566+ 9091 28 02        	jr z,1F
 567+ 9093
 568+ 9093 23           	inc hl
 569+ 9094 23           	inc hl
 570+ 9095
 571+ 9095 CD 54 88     1 call Extrae_address
 572+ 9098 C9           	ret		;	ret
 573+ 9099
 574+ 9099              ;	La entidad no se imprime entera en pantalla.
 575+ 9099
 576+ 9099 3A EC 85     2 ld a,(Cuad_objeto)
 577+ 909C E6 01        	and 1
 578+ 909E 28 17        	jr z,3F
 579+ 90A0
 580+ 90A0              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 90A0
 582+ 90A0 21 5C 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 90A3 3A D9 85     4 ld a,(Columns)
 584+ 90A6 E6 01        	and 1
 585+ 90A8 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 90AA
 587+ 90AA 23           	inc hl
 588+ 90AB 23           	inc hl
 589+ 90AC
 590+ 90AC 3A 0F 86     	ld a,(Columnas)
 591+ 90AF E6 01        	and 1
 592+ 90B1 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 90B3
 594+ 90B3 23           	inc hl
 595+ 90B4 23           	inc hl
 596+ 90B5
 597+ 90B5 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 90B7
 599+ 90B7 21 62 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 90BA 18 E7        	jr 4B
 601+ 90BC
 602+ 90BC              ; --------------------------------------------------------------------------------------------------------------------
 603+ 90BC              ;
 604+ 90BC              ;	Prepara_draw
 605+ 90BC              ;
 606+ 90BC              ;	Es una rutina de carga.
 607+ 90BC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 90BC              ;
 609+ 90BC              ;	FUNCIONAMIENTO:
 610+ 90BC              ;
 611+ 90BC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 90BC              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 90BC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 90BC              ;
 615+ 90BC              ;	DESTRUYE:
 616+ 90BC              ;
 617+ 90BC              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 90BC
 619+ 90BC 21 D8 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 90BF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 90C0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 90C1 4E           	ld c,(hl)
 623+ 90C2 2A DA 85     	ld hl,(Posicion_actual)
 624+ 90C5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 90C7 C9           	ret
 626+ 90C8
 627+ 90C8              ;----------------------------------------------------------------------------------------------------------------
 628+ 90C8              ;
 629+ 90C8              ;	5/08/22
 630+ 90C8              ;
 631+ 90C8              ;   NextScan.
 632+ 90C8              ;
 633+ 90C8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 90C8              ;
 635+ 90C8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 90C8              ;
 637+ 90C8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 90C8              ;
 639+ 90C8              ;       DESTRUIDOS: AF y HL !!!
 640+ 90C8              ;
 641+ 90C8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 90C8              ;
 643+ 90C8
 644+ 90C8 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 90C9 7C               ld a,h
 646+ 90CA E6 07            and 7
 647+ 90CC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 90CD
 649+ 90CD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 90CE C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 90D0 6F               ld l,a
 652+ 90D1 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 90D2
 654+ 90D2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 90D3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 90D5 67               ld h,a
 657+ 90D6 C9               ret
 658+ 90D7
 659+ 90D7              ;----------------------------------------------------------------------------------------------------------------
 660+ 90D7              ;
 661+ 90D7              ;	5/08/22
 662+ 90D7              ;
 663+ 90D7              ;   PreviousScan.
 664+ 90D7              ;
 665+ 90D7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 90D7              ;
 667+ 90D7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 90D7              ;
 669+ 90D7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 90D7              ;
 671+ 90D7              ;       DESTRUIDOS: AF y HL !!!
 672+ 90D7              ;
 673+ 90D7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 90D7              ;
 675+ 90D7
 676+ 90D7 7C           PreviousScan ld a,h
 677+ 90D8 25               dec h               ; Dec H.
 678+ 90D9 E6 07            and 7
 679+ 90DB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 90DC
 681+ 90DC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 90DD D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 90DF 6F               ld l,a
 684+ 90E0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 90E1
 686+ 90E1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 90E2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 90E4 67               ld h,a
 689+ 90E5 C9               ret
 690+ 90E6
 691+ 90E6              ; -----------------------------------------------------------------------------------
 692+ 90E6              ;
 693+ 90E6              ;	28/2/23
 694+ 90E6              ;
 695+ 90E6              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 90E6              ;	Extrae fotos de Album_de_fotos.
 697+ 90E6
 698+ 90E6              Extrae_foto_entidades
 699+ 90E6
 700+ 90E6 3A 1B 86     	ld a,(Numero_de_malotes)
 701+ 90E9 A7           	and a
 702+ 90EA C8           	ret z
 703+ 90EB ED 73 1C 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 90EF 31 00 70     	ld sp,Album_de_fotos
 705+ 90F2
 706+ 90F2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 90F4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 90F5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 90F6
 710+ 90F6 ED 73 1E 86  	ld (Stack_2),sp
 711+ 90FA ED 7B 1C 86  	ld sp,(Stack)
 712+ 90FE
 713+ 90FE              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 90FE
 715+ 90FE 3E CD        	ld a,$cd
 716+ 9100 32 08 91     	ld (Imprime),a
 717+ 9103 EB           	ex de,hl
 718+ 9104 22 09 91     	ld (Imprime+1),hl
 719+ 9107 EB           	ex de,hl
 720+ 9108
 721+ 9108              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 9108
 723+ 9108 00 00 00     Imprime db 0,0,0
 724+ 910B
 725+ 910B 3A 1B 86     	ld a,(Numero_de_malotes)
 726+ 910E 3D           	dec a
 727+ 910F 28 09        	jr z,1F
 728+ 9111 32 1B 86      	ld (Numero_de_malotes),a
 729+ 9114
 730+ 9114 ED 7B 1E 86   	ld sp,(Stack_2)
 731+ 9118 18 D8        	jr 2B
 732+ 911A
 733+ 911A AF           1 xor a
 734+ 911B 32 1E 86     	ld (Stack_2),a
 735+ 911E C9           	ret
 736+ 911F
 737+ 911F              ; -----------------------------------------------------------------------------------
 738+ 911F              ;
 739+ 911F              ;	28/2/23
 740+ 911F              ;
 741+ 911F              ;	Pinta los disparos generados.
 742+ 911F
 743+ 911F              Extrae_foto_disparos
 744+ 911F
 745+ 911F 3A 24 86     	ld a,(Numero_de_disparotes)
 746+ 9122 A7           	and a
 747+ 9123 C8           	ret z
 748+ 9124 ED 73 1C 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 9128 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 912B
 751+ 912B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 912D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 912E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 912F
 755+ 912F ED 73 1E 86  	ld (Stack_2),sp
 756+ 9133 ED 7B 1C 86  	ld sp,(Stack)
 757+ 9137
 758+ 9137              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 9137
 760+ 9137 3E CD        	ld a,$cd
 761+ 9139 32 41 91     	ld (Imprime2),a
 762+ 913C EB           	ex de,hl
 763+ 913D 22 42 91     	ld (Imprime2+1),hl
 764+ 9140 EB           	ex de,hl
 765+ 9141
 766+ 9141              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9141
 768+ 9141 00 00 00     Imprime2 db 0,0,0
 769+ 9144
 770+ 9144 3A 24 86     	ld a,(Numero_de_disparotes)
 771+ 9147 3D           	dec a
 772+ 9148 28 09        	jr z,1F
 773+ 914A 32 24 86      	ld (Numero_de_disparotes),a
 774+ 914D
 775+ 914D ED 7B 1E 86  	ld sp,(Stack_2)
 776+ 9151 18 D8        	jr 2B
 777+ 9153
 778+ 9153 AF           1 xor a
 779+ 9154 32 1E 86     	ld (Stack_2),a
 780+ 9157 C9           	ret
 781+ 9158
# file closed: Draw_XOR.asm
1056  9158              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9158              ;   índices de Rutinas de impresión.
   2+ 9158
   3+ 9158 68 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 915A 95 91            defw Pinta_Amadeus_3x2
   5+ 915C
   6+ 915C EB 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 915E 8B 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9160 3F 92            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9162
  10+ 9162 15 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9164 19 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9166 CD 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9168
  14+ 9168
  15+ 9168              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9168              ;
  17+ 9168              ;   12/12/22
  18+ 9168              ;
  19+ 9168              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9168              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9168              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9168              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9168              ;
  24+ 9168              ;   Modifica: DE y HL.
  25+ 9168
  26+ 9168 ED 73 1C 86  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 916C FD F9        	ld sp,iy
  28+ 916E 06 10            ld b,16
  29+ 9170 D1           1 pop de
  30+ 9171 7B               ld a,e
  31+ 9172 AE               xor (hl)
  32+ 9173 77           	ld (hl),a
  33+ 9174 23           	inc hl
  34+ 9175 7A               ld a,d
  35+ 9176 AE               xor (hl)
  36+ 9177 77           	ld (hl),a
  37+ 9178 2B           	dec hl
  38+ 9179 24           	inc h
  39+ 917A 7C               ld a,h
  40+ 917B E6 07            and 7
  41+ 917D 20 0A            jr nz,2F
  42+ 917F 7D               ld a,l
  43+ 9180 C6 20            add a,$20
  44+ 9182 6F               ld l,a
  45+ 9183 38 04            jr c,2F
  46+ 9185 7C               ld a,h
  47+ 9186 D6 08            sub 8
  48+ 9188 67               ld h,a
  49+ 9189 7C           2 ld a,h
  50+ 918A FE 58            cp $58
  51+ 918C 28 02            jr z,3F
  52+ 918E 10 E0            djnz 1B
  53+ 9190 ED 7B 1C 86  3 ld sp,(Stack)
  54+ 9194 C9           	ret
  55+ 9195
  56+ 9195 ED 73 1C 86  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9199 FD F9        	ld sp,iy
  58+ 919B 06 08            ld b,8
  59+ 919D D1           1 pop de
  60+ 919E 7B               ld a,e
  61+ 919F AE               xor (hl)
  62+ 91A0 77           	ld (hl),a
  63+ 91A1 23           	inc hl
  64+ 91A2 7A               ld a,d
  65+ 91A3 AE               xor (hl)
  66+ 91A4 77           	ld (hl),a
  67+ 91A5 23           	inc hl
  68+ 91A6 D1           	pop de
  69+ 91A7 7B               ld a,e
  70+ 91A8 AE               xor (hl)
  71+ 91A9 77           	ld (hl),a
  72+ 91AA 2B           	dec hl
  73+ 91AB 2B           	dec hl
  74+ 91AC 24           	inc h
  75+ 91AD 7C               ld a,h
  76+ 91AE E6 07            and 7
  77+ 91B0 20 0A            jr nz,2F
  78+ 91B2 7D               ld a,l
  79+ 91B3 C6 20            add a,$20
  80+ 91B5 6F               ld l,a
  81+ 91B6 38 04            jr c,2F
  82+ 91B8 7C               ld a,h
  83+ 91B9 D6 08            sub 8
  84+ 91BB 67               ld h,a
  85+ 91BC 7C           2 ld a,h
  86+ 91BD FE 58            cp $58
  87+ 91BF 28 25            jr z,4F
  88+ 91C1 7A               ld a,d
  89+ 91C2 AE               xor (hl)
  90+ 91C3 77               ld (hl),a
  91+ 91C4 D1           	pop de
  92+ 91C5 23           	inc hl
  93+ 91C6 7B               ld a,e
  94+ 91C7 AE               xor (hl)
  95+ 91C8 77           	ld (hl),a
  96+ 91C9 23           	inc hl
  97+ 91CA 7A               ld a,d
  98+ 91CB AE               xor (hl)
  99+ 91CC 77           	ld (hl),a
 100+ 91CD 2B           	dec hl
 101+ 91CE 2B           	dec hl
 102+ 91CF 24           	inc h
 103+ 91D0 7C               ld a,h
 104+ 91D1 E6 07            and 7
 105+ 91D3 20 0A            jr nz,3F
 106+ 91D5 7D               ld a,l
 107+ 91D6 C6 20            add a,$20
 108+ 91D8 6F               ld l,a
 109+ 91D9 38 04            jr c,3F
 110+ 91DB 7C               ld a,h
 111+ 91DC D6 08            sub 8
 112+ 91DE 67               ld h,a
 113+ 91DF 7C           3 ld a,h
 114+ 91E0 FE 58            cp $58
 115+ 91E2 28 02            jr z,4F
 116+ 91E4 10 B7            djnz 1B
 117+ 91E6 ED 7B 1C 86  4 ld sp,(Stack)
 118+ 91EA C9           	ret
 119+ 91EB
 120+ 91EB              ; ---------------------------------------------------
 121+ 91EB
 122+ 91EB ED 73 1C 86  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 91EF FD F9        	ld sp,iy
 124+ 91F1
 125+ 91F1              ; >>>
 126+ 91F1
 127+ 91F1 06 10            ld b,16
 128+ 91F3 D1           1 pop de
 129+ 91F4 7A           	ld a,d
 130+ 91F5 AE           	xor (hl)
 131+ 91F6 77           	ld (hl),a
 132+ 91F7 24           	inc h
 133+ 91F8 7C               ld a,h
 134+ 91F9 E6 07            and 7
 135+ 91FB 20 0C            jr nz,2F
 136+ 91FD 7D               ld a,l
 137+ 91FE C6 20            add a,$20
 138+ 9200 6F               ld l,a
 139+ 9201 38 06            jr c,2F
 140+ 9203 7C               ld a,h
 141+ 9204 D6 08            sub 8
 142+ 9206 67               ld h,a
 143+ 9207 18 00            jr 2F
 144+ 9209 7C           2 ld a,h
 145+ 920A FE 58            cp $58
 146+ 920C 28 02            jr z,3F
 147+ 920E 10 E3            djnz 1B
 148+ 9210 ED 7B 1C 86  3 ld sp,(Stack)
 149+ 9214 C9           	ret
 150+ 9215
 151+ 9215 ED 73 1C 86  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9219 FD F9        	ld sp,iy
 153+ 921B
 154+ 921B              ; >>>
 155+ 921B
 156+ 921B 06 10            ld b,16
 157+ 921D D1           1 pop de
 158+ 921E 7B           	ld a,e
 159+ 921F AE           	xor (hl)
 160+ 9220 77           	ld (hl),a
 161+ 9221 24           	inc h
 162+ 9222 7C               ld a,h
 163+ 9223 E6 07            and 7
 164+ 9225 20 0C            jr nz,2F
 165+ 9227 7D               ld a,l
 166+ 9228 C6 20            add a,$20
 167+ 922A 6F               ld l,a
 168+ 922B 38 06            jr c,2F
 169+ 922D 7C               ld a,h
 170+ 922E D6 08            sub 8
 171+ 9230 67               ld h,a
 172+ 9231 18 00            jr 2F
 173+ 9233 7C           2 ld a,h
 174+ 9234 FE 58            cp $58
 175+ 9236 28 02            jr z,3F
 176+ 9238 10 E3            djnz 1B
 177+ 923A ED 7B 1C 86  3 ld sp,(Stack)
 178+ 923E C9           	ret
 179+ 923F
 180+ 923F              ; ---------------------------------------------------
 181+ 923F
 182+ 923F ED 73 1C 86  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9243 FD F9        	ld sp,iy
 184+ 9245 06 08            ld b,8
 185+ 9247 D1           1 pop de
 186+ 9248 7A           	ld a,d
 187+ 9249 AE           	xor (hl)
 188+ 924A 77           	ld (hl),a
 189+ 924B 23           	inc hl
 190+ 924C D1           	pop de
 191+ 924D 7B           	ld a,e
 192+ 924E AE           	xor (hl)
 193+ 924F 77           	ld (hl),a
 194+ 9250 2B           	dec hl
 195+ 9251 24            	inc h
 196+ 9252 7C               ld a,h
 197+ 9253 E6 07            and 7
 198+ 9255 20 0A            jr nz,2F
 199+ 9257 7D               ld a,l
 200+ 9258 C6 20            add a,$20
 201+ 925A 6F               ld l,a
 202+ 925B 38 04            jr c,2F
 203+ 925D 7C               ld a,h
 204+ 925E D6 08            sub 8
 205+ 9260 67               ld h,a
 206+ 9261 7C           2 ld a,h
 207+ 9262 FE 58            cp $58
 208+ 9264 28 20            jr z,4F
 209+ 9266 D1               pop de
 210+ 9267 7B           	ld a,e
 211+ 9268 AE           	xor (hl)
 212+ 9269 77           	ld (hl),a
 213+ 926A 23           	inc hl
 214+ 926B 7A           	ld a,d
 215+ 926C AE           	xor (hl)
 216+ 926D 77           	ld (hl),a
 217+ 926E 2B           	dec hl
 218+ 926F 24           	inc h
 219+ 9270 7C               ld a,h
 220+ 9271 E6 07            and 7
 221+ 9273 20 0A            jr nz,3F
 222+ 9275 7D               ld a,l
 223+ 9276 C6 20            add a,$20
 224+ 9278 6F               ld l,a
 225+ 9279 38 04            jr c,3F
 226+ 927B 7C               ld a,h
 227+ 927C D6 08            sub 8
 228+ 927E 67               ld h,a
 229+ 927F 7C           3 ld a,h
 230+ 9280 FE 58            cp $58
 231+ 9282 28 02            jr z,4F
 232+ 9284 10 C1            djnz 1B
 233+ 9286 ED 7B 1C 86  4 ld sp,(Stack)
 234+ 928A C9           	ret
 235+ 928B
 236+ 928B ED 73 1C 86  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 928F FD F9        	ld sp,iy
 238+ 9291 06 08            ld b,8
 239+ 9293 D1           1 pop de
 240+ 9294 D1           	pop de
 241+ 9295 7B           	ld a,e
 242+ 9296 AE           	xor (hl)
 243+ 9297 77           	ld (hl),a
 244+ 9298 24            	inc h
 245+ 9299 7C               ld a,h
 246+ 929A E6 07            and 7
 247+ 929C 20 0A            jr nz,2F
 248+ 929E 7D               ld a,l
 249+ 929F C6 20            add a,$20
 250+ 92A1 6F               ld l,a
 251+ 92A2 38 04            jr c,2F
 252+ 92A4 7C               ld a,h
 253+ 92A5 D6 08            sub 8
 254+ 92A7 67               ld h,a
 255+ 92A8 7C           2 ld a,h
 256+ 92A9 FE 58            cp $58
 257+ 92AB 28 1B            jr z,4F
 258+ 92AD D1               pop de
 259+ 92AE 7A           	ld a,d
 260+ 92AF AE           	xor (hl)
 261+ 92B0 77           	ld (hl),a
 262+ 92B1 24           	inc h
 263+ 92B2 7C               ld a,h
 264+ 92B3 E6 07            and 7
 265+ 92B5 20 0A            jr nz,3F
 266+ 92B7 7D               ld a,l
 267+ 92B8 C6 20            add a,$20
 268+ 92BA 6F               ld l,a
 269+ 92BB 38 04            jr c,3F
 270+ 92BD 7C               ld a,h
 271+ 92BE D6 08            sub 8
 272+ 92C0 67               ld h,a
 273+ 92C1 7C           3 ld a,h
 274+ 92C2 FE 58            cp $58
 275+ 92C4 28 02            jr z,4F
 276+ 92C6 10 CB            djnz 1B
 277+ 92C8 ED 7B 1C 86  4 ld sp,(Stack)
 278+ 92CC C9           	ret
 279+ 92CD
 280+ 92CD ED 73 1C 86  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 92D1 FD F9        	ld sp,iy
 282+ 92D3 06 08            ld b,8
 283+ 92D5 D1           1 pop de
 284+ 92D6 7B           	ld a,e
 285+ 92D7 AE           	xor (hl)
 286+ 92D8 77           	ld (hl),a
 287+ 92D9 23           	inc hl
 288+ 92DA 7A           	ld a,d
 289+ 92DB AE           	xor (hl)
 290+ 92DC 77           	ld (hl),a
 291+ 92DD 2B           	dec hl
 292+ 92DE 24             	inc h
 293+ 92DF 7C               ld a,h
 294+ 92E0 E6 07            and 7
 295+ 92E2 20 0A            jr nz,2F
 296+ 92E4 7D               ld a,l
 297+ 92E5 C6 20            add a,$20
 298+ 92E7 6F               ld l,a
 299+ 92E8 38 04            jr c,2F
 300+ 92EA 7C               ld a,h
 301+ 92EB D6 08            sub 8
 302+ 92ED 67               ld h,a
 303+ 92EE 7C           2 ld a,h
 304+ 92EF FE 58            cp $58
 305+ 92F1 28 21            jr z,4F
 306+ 92F3 D1               pop de
 307+ 92F4 7A           	ld a,d
 308+ 92F5 AE           	xor (hl)
 309+ 92F6 77           	ld (hl),a
 310+ 92F7 23           	inc hl
 311+ 92F8 D1               pop de
 312+ 92F9 7B           	ld a,e
 313+ 92FA AE           	xor (hl)
 314+ 92FB 77           	ld (hl),a
 315+ 92FC 2B           	dec hl
 316+ 92FD 24           	inc h
 317+ 92FE 7C               ld a,h
 318+ 92FF E6 07            and 7
 319+ 9301 20 0A            jr nz,3F
 320+ 9303 7D               ld a,l
 321+ 9304 C6 20            add a,$20
 322+ 9306 6F               ld l,a
 323+ 9307 38 04            jr c,3F
 324+ 9309 7C               ld a,h
 325+ 930A D6 08            sub 8
 326+ 930C 67               ld h,a
 327+ 930D 7C           3 ld a,h
 328+ 930E FE 58            cp $58
 329+ 9310 28 02            jr z,4F
 330+ 9312 10 C1            djnz 1B
 331+ 9314 ED 7B 1C 86  4 ld sp,(Stack)
 332+ 9318 C9           	ret
 333+ 9319
 334+ 9319 ED 73 1C 86  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 931D FD F9        	ld sp,iy
 336+ 931F 06 08            ld b,8
 337+ 9321 D1           1 pop de
 338+ 9322 7B           	ld a,e
 339+ 9323 AE           	xor (hl)
 340+ 9324 77           	ld (hl),a
 341+ 9325 24            	inc h
 342+ 9326 7C               ld a,h
 343+ 9327 E6 07            and 7
 344+ 9329 20 0A            jr nz,2F
 345+ 932B 7D               ld a,l
 346+ 932C C6 20            add a,$20
 347+ 932E 6F               ld l,a
 348+ 932F 38 04            jr c,2F
 349+ 9331 7C               ld a,h
 350+ 9332 D6 08            sub 8
 351+ 9334 67               ld h,a
 352+ 9335 7C           2 ld a,h
 353+ 9336 FE 58            cp $58
 354+ 9338 28 1C            jr z,4F
 355+ 933A D1               pop de
 356+ 933B 7A           	ld a,d
 357+ 933C AE           	xor (hl)
 358+ 933D 77           	ld (hl),a
 359+ 933E 24           	inc h
 360+ 933F 7C               ld a,h
 361+ 9340 E6 07            and 7
 362+ 9342 20 0A            jr nz,3F
 363+ 9344 7D               ld a,l
 364+ 9345 C6 20            add a,$20
 365+ 9347 6F               ld l,a
 366+ 9348 38 04            jr c,3F
 367+ 934A 7C               ld a,h
 368+ 934B D6 08            sub 8
 369+ 934D 67               ld h,a
 370+ 934E 7C           3 ld a,h
 371+ 934F FE 58            cp $58
 372+ 9351 28 03            jr z,4F
 373+ 9353 D1               pop de
 374+ 9354 10 CB            djnz 1B
 375+ 9356 ED 7B 1C 86  4 ld sp,(Stack)
 376+ 935A C9           	ret
 377+ 935B
 378+ 935B              ; ---------------------------------------------------
 379+ 935B              ;
 380+ 935B              ;   27/02/23
 381+ 935B              ;
 382+ 935B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 935B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 935B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 935B
 386+ 935B ED 73 1C 86  Pinta_Disparo ld (Stack),sp
 387+ 935F FD F9            ld sp,iy
 388+ 9361 06 02            ld b,2
 389+ 9363 D1           1 pop de
 390+ 9364 7B               ld a,e
 391+ 9365 AE               xor (hl)
 392+ 9366 77               ld (hl),a
 393+ 9367 23               inc hl
 394+ 9368 7A               ld a,d
 395+ 9369 AE               xor (hl)
 396+ 936A 77               ld (hl),a
 397+ 936B 2B               dec hl
 398+ 936C
 399+ 936C 24               inc h
 400+ 936D 7C               ld a,h
 401+ 936E E6 07            and 7
 402+ 9370 20 0A            jr nz,2F
 403+ 9372 7D               ld a,l
 404+ 9373 C6 20            add a,$20
 405+ 9375 6F               ld l,a
 406+ 9376 38 04            jr c,2F
 407+ 9378 7C               ld a,h
 408+ 9379 D6 08            sub 8
 409+ 937B 67               ld h,a
 410+ 937C 7C           2 ld a,h
 411+ 937D FE 58            cp $58
 412+ 937F 28 02            jr z,3F
 413+ 9381
 414+ 9381 10 E0            djnz 1B
 415+ 9383 ED 7B 1C 86  3 ld sp,(Stack)
 416+ 9387 C9               ret
 417+ 9388
# file closed: Rutinas_de_impresion_sprites.asm
1057  9388              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9388              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9388              ;
   3+ 9388              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9388              ;
   5+ 9388              ; *****************************************************************************************************************************************************************************************
   6+ 9388              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9388
   8+ 9388 7C           calcula_tercio ld a,h
   9+ 9389 E6 18        	and $18
  10+ 938B CB 2F        	sra a
  11+ 938D CB 2F        	sra a
  12+ 938F CB 2F        	sra a
  13+ 9391 C9           	ret
  14+ 9392
# file closed: calcula_tercio.asm
1058  9392              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9392              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9392              ;
   3+ 9392              ;
   4+ 9392              ;	CLS.
   5+ 9392              ;
   6+ 9392              ;	Limpia la pantalla y define sus atributos.
   7+ 9392              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9392              ;
   9+ 9392              ;	COLORES: 0 ..... NEGRO
  10+ 9392              ;    		 1 ..... AZUL
  11+ 9392              ; 			 2 ..... ROJO
  12+ 9392              ;			 3 ..... MAGENTA
  13+ 9392              ; 			 4 ..... VERDE
  14+ 9392              ; 			 5 ..... CIAN
  15+ 9392              ;			 6 ..... AMARILLO
  16+ 9392              ; 			 7 ..... BLANCO
  17+ 9392              ;
  18+ 9392              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9392              ;
  20+ 9392              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9392
  22+ 9392
  23+ 9392 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9395 11 01 40     	LD DE,$4001
  25+ 9398 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 939B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 939D ED B0        	LDIR
  28+ 939F 01 FF 02     	LD BC,767
  29+ 93A2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 93A3 ED B0        	LDIR
  31+ 93A5 C9           	ret
  32+ 93A6
# file closed: Cls.asm
1059  93A6              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 93A6              ; ******************************************************************************************************************************************************************************************
   2+ 93A6              ;
   3+ 93A6              ;   22/01/23
   4+ 93A6              ;
   5+ 93A6              ;	Mov_down
   6+ 93A6              ;
   7+ 93A6              ; 	Mueve el Sprite X px hacia abajo.
   8+ 93A6              ;
   9+ 93A6              ;
  10+ 93A6 21 06 86     Mov_down ld hl,Ctrl_0
  11+ 93A9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 93AB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 93AB              ; 																	; _ en el caso de que no lo haya.
  14+ 93AB 3A F0 85     	ld a,(Vel_down)
  15+ 93AE 47           	ld b,a
  16+ 93AF 2A DA 85         ld hl,(Posicion_actual)
  17+ 93B2 CD 88 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 93B5 E6 02        	and 2
  19+ 93B7 28 0F        	jr z,1F
  20+ 93B9
  21+ 93B9              ; Nos encontramos en el último tercio de pantalla.
  22+ 93B9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 93B9
  24+ 93B9 7C           	ld a,h
  25+ 93BA FE 57        	cp $57
  26+ 93BC 20 0A        	jr nz,1F
  27+ 93BE 7D           	ld a,l
  28+ 93BF C6 20        	add $20
  29+ 93C1 30 05        	jr nc,1F
  30+ 93C3
  31+ 93C3              ; ------------------------------
  32+ 93C3 CD 9E 96     	call Reaparece_arriba
  33+ 93C6              ;	call Reinicio
  34+ 93C6              ; ------------------------------
  35+ 93C6
  36+ 93C6 18 08        	jr 3F
  37+ 93C8 CD C8 90     1 call NextScan
  38+ 93CB 22 DA 85     	ld (Posicion_actual),hl
  39+ 93CE 10 E2            djnz 2B
  40+ 93D0 CD B4 96     3 call Genera_coordenadas
  41+ 93D3 C9           	ret
  42+ 93D4
  43+ 93D4              ; ******************************************************************************************************************************************************************************************
  44+ 93D4              ;
  45+ 93D4              ;   22/01/23
  46+ 93D4              ;
  47+ 93D4              ;	Mov_up
  48+ 93D4              ;
  49+ 93D4              ; 	Mueve el Sprite hacia arriba.
  50+ 93D4              ;
  51+ 93D4              ;
  52+ 93D4 21 06 86     Mov_up ld hl,Ctrl_0
  53+ 93D7 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 93D9              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 93D9              ; 																		; _ en el caso de que no lo haya.
  56+ 93D9 3A EF 85     	ld a,(Vel_up)
  57+ 93DC 47           	ld b,a
  58+ 93DD 2A DA 85     	ld hl,(Posicion_actual)
  59+ 93E0 CD 88 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 93E3 A7           	and a
  61+ 93E4 20 10        	jr nz,1F
  62+ 93E6
  63+ 93E6              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 93E6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 93E6
  66+ 93E6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 93E7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 93E9 20 0B            jr nz,1F
  69+ 93EB 7D               ld a,l
  70+ 93EC D6 20            sub $20
  71+ 93EE 30 06            jr nc,1F
  72+ 93F0 25               dec h
  73+ 93F1
  74+ 93F1              ; -----------------------------
  75+ 93F1 CD 8E 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 93F4              ;	call Reinicio
  77+ 93F4              ; -----------------------------
  78+ 93F4
  79+ 93F4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 93F6 CD D7 90     1 call PreviousScan
  81+ 93F9 22 DA 85     	ld (Posicion_actual),hl
  82+ 93FC 10 E2            djnz 3B
  83+ 93FE CD B4 96     2 call Genera_coordenadas
  84+ 9401 C9           	ret
  85+ 9402
  86+ 9402              ; ******************************************************************************************************************************************************************************************
  87+ 9402              ;
  88+ 9402              ;	19/10/22
  89+ 9402              ;
  90+ 9402              ;	Mov_right.
  91+ 9402              ;
  92+ 9402              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9402              ;
  94+ 9402
  95+ 9402 21 06 86     Mov_right ld hl,Ctrl_0
  96+ 9405 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9407              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9407              ; 																	; _ en el caso de que no lo haya.
  99+ 9407 3A 06 86     	ld a,(Ctrl_0)
 100+ 940A CB 77        	bit 6,a
 101+ 940C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 940E
 103+ 940E CD 3C 96     	call Stop_Amadeus_right
 104+ 9411 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9412 18 4D        	jr 8F
 106+ 9414
 107+ 9414 3A DE 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9417 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9419 20 46        	jr nz,8F
 110+ 941B
 111+ 941B 3A E0 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 941E A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 941F 28 40        	jr z,8F
 114+ 9421
 115+ 9421              ; ---------- ---------- ----------
 116+ 9421              ;
 117+ 9421              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9421
 119+ 9421 3A EE 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 9424 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 9426 28 11        	jr z,1F
 122+ 9428 38 06        	jr c,6F
 123+ 942A FE 04        	cp 4
 124+ 942C 28 14        	jr z,7F
 125+ 942E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9430
 127+ 9430              ; ---------- ---------- ----------
 128+ 9430              ;
 129+ 9430              ; Perfiles de velocidad
 130+ 9430              ;
 131+ 9430
 132+ 9430 3A E0 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 9433 FE FE        	cp $fe
 134+ 9435 20 2A        	jr nz,8F
 135+ 9437 18 10        	jr 3F
 136+ 9439 3A E0 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 943C FE FD        	cp $fd
 138+ 943E 20 21        	jr nz,8F
 139+ 9440 18 07        	jr 3F
 140+ 9442 3A E0 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 9445 FE FB        	cp $fb
 142+ 9447 20 18        	jr nz,8F
 143+ 9449
 144+ 9449              ; ---------- ---------- ----------
 145+ 9449
 146+ 9449              3
 147+ 9449 CD 7C 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 944C              ;	call Reinicio
 149+ 944C
 150+ 944C              ; ---------- ---------- ----------
 151+ 944C              ;
 152+ 944C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 944C
 154+ 944C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 944E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 944F CD 68 94     	call DESPLZ_DER
 157+ 9452 C1           	pop bc
 158+ 9453 10 F9        	djnz 5B
 159+ 9455 2A DA 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9458 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9459 22 DA 85     	ld (Posicion_actual),hl
 162+ 945C CD B4 96     	call Genera_coordenadas
 163+ 945F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9461
 165+ 9461              ; ---------- ---------- ----------
 166+ 9461
 167+ 9461 2A DA 85     8 ld hl,(Posicion_actual)
 168+ 9464 CD 68 94     	call DESPLZ_DER
 169+ 9467 C9           2 ret
 170+ 9468
 171+ 9468              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9468              ;
 173+ 9468              ;	22/9/22
 174+ 9468              ;
 175+ 9468
 176+ 9468 CD 77 94     DESPLZ_DER call Desplaza_derecha
 177+ 946B CD C3 94         call modifica_parametros_1er_DESPLZ_2
 178+ 946E CD EC 94         call Ciclo_completo
 179+ 9471 21 06 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9474 CB FE        	set 7,(hl)
 181+ 9476 C9           	ret
 182+ 9477
 183+ 9477              ; ******************************************************************************************************************************************************************************************
 184+ 9477              ;	15/02/23
 185+ 9477              ;
 186+ 9477
 187+ 9477 3A EE 85     Desplaza_derecha ld a,(Vel_right)
 188+ 947A 47           	ld b,a
 189+ 947B 2A E6 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 947E 23           1 inc hl
 191+ 947F 23           	inc hl
 192+ 9480 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9482 22 E6 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9485 CD 54 88     	call Extrae_address
 195+ 9488 22 DC 85     	ld (Puntero_objeto),hl
 196+ 948B
 197+ 948B              ; Modifica (Puntero_DESPLZ_izq).
 198+ 948B
 199+ 948B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 948B              ; Cuántos movimientos hemos hecho ??
 201+ 948B              ; DE contiene (Puntero_DESPLZ_der).
 202+ 948B
 203+ 948B 2A E2 85     7 ld hl,(Indice_Sprite_der)
 204+ 948E EB           	ex de,hl
 205+ 948F A7           	and a
 206+ 9490 ED 52        	sbc hl,de
 207+ 9492 CB 3D        	srl l
 208+ 9494 3E 08        6 ld a,8
 209+ 9496 95           	sub l
 210+ 9497 30 1E        	jr nc,3F
 211+ 9499
 212+ 9499              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9499              ; B="0".
 214+ 9499
 215+ 9499 04           4 inc b
 216+ 949A 3C           	inc a
 217+ 949B 20 FC        	jr nz,4B
 218+ 949D 78           	ld a,b
 219+ 949E 08           	ex af,af
 220+ 949F 2A E2 85     	ld hl,(Indice_Sprite_der)
 221+ 94A2 23           5 inc hl
 222+ 94A3 23           	inc hl
 223+ 94A4 10 FC        	djnz 5B
 224+ 94A6 22 E6 85     	ld (Puntero_DESPLZ_der),hl
 225+ 94A9 CD 54 88     	call Extrae_address
 226+ 94AC 22 DC 85     	ld (Puntero_objeto),hl
 227+ 94AF
 228+ 94AF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 94AF              ; _(Posicion_actual).
 230+ 94AF
 231+ 94AF 21 DA 85     	ld hl,Posicion_actual
 232+ 94B2 34           	inc (hl)
 233+ 94B3 08               ex af,af
 234+ 94B4 6F           	ld l,a
 235+ 94B5 18 DD        	jr 6B
 236+ 94B7
 237+ 94B7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 94B7
 239+ 94B7 47           3 ld b,a
 240+ 94B8 2A E4 85     	ld hl,(Indice_Sprite_izq)
 241+ 94BB 23           2 inc hl
 242+ 94BC 23           	inc hl
 243+ 94BD 10 FC        	djnz 2B
 244+ 94BF 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 94C2 C9           8 ret
 246+ 94C3
 247+ 94C3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 94C3              ;
 249+ 94C3              ;	24/7/22
 250+ 94C3              ;
 251+ 94C3              ;	modifica_parametros_1er_DESPLZ_2
 252+ 94C3              ;
 253+ 94C3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 94C3              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 94C3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 94C3
 257+ 94C3 3A E0 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 94C6 A7           	and a
 259+ 94C7 20 1F        	jr nz,1F
 260+ 94C9 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 94CB 32 E0 85         ld (CTRL_DESPLZ),a
 262+ 94CE
 263+ 94CE 21 D9 85     	ld hl,Columns
 264+ 94D1 34           	inc (hl)
 265+ 94D2 3A EC 85     	ld a,(Cuad_objeto)
 266+ 94D5 E6 01        	and 1
 267+ 94D7 28 0F        	jr z,1F
 268+ 94D9 2A DA 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 94DC 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 94DD 22 DA 85     	ld (Posicion_actual),hl
 271+ 94E0 CD B4 96     	call Genera_coordenadas
 272+ 94E3 CD 48 96     	call Inc_CTRL_DESPLZ
 273+ 94E6 18 03        	jr 2F
 274+ 94E8 CD 48 96     1 call Inc_CTRL_DESPLZ
 275+ 94EB C9           2 ret
 276+ 94EC
 277+ 94EC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 94EC              ;
 279+ 94EC              ;	24/7/22
 280+ 94EC              ;
 281+ 94EC              ;	Ciclo_completo.
 282+ 94EC              ;
 283+ 94EC              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 94EC              ;
 285+ 94EC              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 94EC              ; 	Decrementamos (Columns).
 287+ 94EC              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 94EC              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 94EC
 290+ 94EC
 291+ 94EC 3A E0 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 94EF FE FF        	cp $ff
 293+ 94F1 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 94F3 E6 F0        	and $f0
 295+ 94F5 20 28        	jr nz,3F
 296+ 94F7
 297+ 94F7              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 94F7
 299+ 94F7 3A E0 85     	ld a,(CTRL_DESPLZ)
 300+ 94FA 47           	ld b,a
 301+ 94FB 3E F8        	ld a,$f8
 302+ 94FD 80           	add b
 303+ 94FE 32 E0 85     	ld (CTRL_DESPLZ),a
 304+ 9501 18 1C        	jr 3F
 305+ 9503 21 D9 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9506 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9507 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9508 32 E0 85     	ld (CTRL_DESPLZ),a
 309+ 950B 3A EC 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 950E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9510 20 0A        	jr nz,2F
 312+ 9512 2A DA 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 9515 23           	inc hl
 314+ 9516 22 DA 85     	ld (Posicion_actual),hl
 315+ 9519 CD B4 96     	call Genera_coordenadas
 316+ 951C
 317+ 951C              ; Inicia el puntero de Sprite.
 318+ 951C
 319+ 951C CD 6B 88     2 call Inicia_puntero_objeto_der
 320+ 951F C9           3 ret
 321+ 9520
 322+ 9520              ; ******************************************************************************************************************************************************************************************
 323+ 9520              ;
 324+ 9520              ;	15/02/23
 325+ 9520              ;
 326+ 9520              ;	Mov_left.
 327+ 9520              ;
 328+ 9520              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9520              ;
 330+ 9520              Mov_left
 331+ 9520
 332+ 9520 21 06 86     	ld hl,Ctrl_0
 333+ 9523 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 9525              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 9525              ; 																	; _ en el caso de que no lo haya.
 336+ 9525 3A 06 86     	ld a,(Ctrl_0)
 337+ 9528 CB 77        	bit 6,a
 338+ 952A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 952C
 340+ 952C CD 42 96     	call Stop_Amadeus_left
 341+ 952F C8           	ret z
 342+ 9530 20 4A        	jr nz,8F
 343+ 9532
 344+ 9532 3A DE 85     11 ld a,(Coordenada_X)
 345+ 9535 A7           	and a
 346+ 9536 20 44        	jr nz,8F
 347+ 9538
 348+ 9538 3A E0 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 953B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 953C 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 953E
 352+ 953E              ; ---------- ---------- ----------
 353+ 953E
 354+ 953E 3A ED 85     	ld a,(Vel_left)
 355+ 9541 FE 02        	cp 2
 356+ 9543 28 0F        	jr z,1F
 357+ 9545 38 04        	jr c,6F
 358+ 9547 FE 04        	cp 4
 359+ 9549 28 12        	jr z,7F
 360+ 954B
 361+ 954B              ; ---------- ---------- ----------
 362+ 954B
 363+ 954B 3A E0 85     6 ld a,(CTRL_DESPLZ)
 364+ 954E FE F8        	cp $f8
 365+ 9550 20 2A        	jr nz,8F
 366+ 9552 18 10        	jr 4F
 367+ 9554 3A E0 85     1 ld a,(CTRL_DESPLZ)
 368+ 9557 FE F9        	cp $f9
 369+ 9559 20 21        	jr nz,8F
 370+ 955B 18 07        	jr 4F
 371+ 955D 3A E0 85     7 ld a,(CTRL_DESPLZ)
 372+ 9560 FE FB        	cp $fb
 373+ 9562 20 18        	jr nz,8F
 374+ 9564
 375+ 9564              ; ---------- ---------- ----------
 376+ 9564
 377+ 9564              4
 378+ 9564 CD 6A 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9567              ;	call Reinicio
 380+ 9567
 381+ 9567              ; ---------- ---------- ----------
 382+ 9567
 383+ 9567 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9569 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 956A
 386+ 956A              ;	ld hl,(Indice_Sprite_izq)
 387+ 956A              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 956A
 389+ 956A CD 83 95     	call DESPLZ_IZQ
 390+ 956D C1           	pop bc
 391+ 956E 10 F9        	djnz 5B
 392+ 9570 2A DA 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9573 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9574 22 DA 85     	ld (Posicion_actual),hl
 395+ 9577 CD B4 96     	call Genera_coordenadas
 396+ 957A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 957C
 398+ 957C              ; ---------- ---------- ----------
 399+ 957C
 400+ 957C              ; Movemos, no hay recolocación.
 401+ 957C
 402+ 957C 2A DA 85     8 ld hl,(Posicion_actual)
 403+ 957F CD 83 95     	call DESPLZ_IZQ
 404+ 9582 C9           2 ret
 405+ 9583
 406+ 9583              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9583              ;
 408+ 9583              ;	22/9/22
 409+ 9583
 410+ 9583              DESPLZ_IZQ
 411+ 9583
 412+ 9583 CD 92 95     	call Desplaza_izquierda
 413+ 9586 CD DE 95         call modifica_parametros_1er_DESPLZ
 414+ 9589 CD 06 96     	call Ciclo_completo_2
 415+ 958C 21 06 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 958F CB BE        	res 7,(hl)
 417+ 9591 C9           	ret
 418+ 9592
 419+ 9592              Desplaza_izquierda
 420+ 9592
 421+ 9592 3A ED 85     	ld a,(Vel_left)
 422+ 9595 47           	ld b,a
 423+ 9596 2A E8 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9599 23           1 inc hl
 425+ 959A 23           	inc hl
 426+ 959B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 959D 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 95A0 CD 54 88     	call Extrae_address
 429+ 95A3 22 DC 85     	ld (Puntero_objeto),hl
 430+ 95A6
 431+ 95A6              ; Modifica (Puntero_DESPLZ_der).
 432+ 95A6
 433+ 95A6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 95A6              ; Cuántos movimientos hemos hecho ??
 435+ 95A6              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 95A6
 437+ 95A6 2A E4 85     7 ld hl,(Indice_Sprite_izq)
 438+ 95A9 EB           	ex de,hl
 439+ 95AA A7           	and a
 440+ 95AB ED 52        	sbc hl,de
 441+ 95AD CB 3D        	srl l
 442+ 95AF 3E 08        6 ld a,8
 443+ 95B1 95           	sub l
 444+ 95B2 30 1E        	jr nc,3F
 445+ 95B4
 446+ 95B4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 95B4              ; B="0".
 448+ 95B4
 449+ 95B4 04           4 inc b
 450+ 95B5 3C           	inc a
 451+ 95B6 20 FC        	jr nz,4B
 452+ 95B8 78           	ld a,b
 453+ 95B9 08           	ex af,af
 454+ 95BA 2A E4 85     	ld hl,(Indice_Sprite_izq)
 455+ 95BD 23           5 inc hl
 456+ 95BE 23           	inc hl
 457+ 95BF 10 FC        	djnz 5B
 458+ 95C1 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 95C4 CD 54 88     	call Extrae_address
 460+ 95C7 22 DC 85     	ld (Puntero_objeto),hl
 461+ 95CA
 462+ 95CA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 95CA              ; _(Posicion_actual).
 464+ 95CA
 465+ 95CA 21 DA 85     	ld hl,Posicion_actual
 466+ 95CD 35           	dec (hl)
 467+ 95CE 08           	ex af,af
 468+ 95CF 6F           	ld l,a
 469+ 95D0 18 DD        	jr 6B
 470+ 95D2
 471+ 95D2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 95D2
 473+ 95D2 47           3 ld b,a
 474+ 95D3 2A E2 85     	ld hl,(Indice_Sprite_der)
 475+ 95D6 23           2 inc hl
 476+ 95D7 23           	inc hl
 477+ 95D8 10 FC        	djnz 2B
 478+ 95DA 22 E6 85     	ld (Puntero_DESPLZ_der),hl
 479+ 95DD C9           8 ret
 480+ 95DE
 481+ 95DE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 95DE              ;
 483+ 95DE              ;	modifica_parametros_1er_DESPLZ
 484+ 95DE              ;
 485+ 95DE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 95DE              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 95DE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 95DE
 489+ 95DE 3A E0 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 95E1 A7           	and a
 491+ 95E2 20 1E        	jr nz,1F
 492+ 95E4 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 95E5 32 E0 85         ld (CTRL_DESPLZ),a
 494+ 95E8 21 D9 85     	ld hl,Columns
 495+ 95EB 34           	inc (hl)
 496+ 95EC 3A EC 85     	ld a,(Cuad_objeto)
 497+ 95EF E6 01        	and 1
 498+ 95F1 20 0F        	jr nz,1F
 499+ 95F3 2A DA 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 95F6 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 95F7 22 DA 85     	ld (Posicion_actual),hl
 502+ 95FA CD B4 96     	call Genera_coordenadas
 503+ 95FD CD 59 96     	call Dec_CTRL_DESPLZ
 504+ 9600 18 03        	jr 2F
 505+ 9602 CD 59 96     1 call Dec_CTRL_DESPLZ
 506+ 9605 C9           2 ret
 507+ 9606
 508+ 9606              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9606
 510+ 9606 3A E0 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9609 FE F7        	cp $f7
 512+ 960B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 960D 30 2C        	jr nc,3F
 514+ 960F
 515+ 960F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 960F
 517+ 960F 06 00        	ld b,0
 518+ 9611 04           4 inc b
 519+ 9612 3C           	inc a
 520+ 9613 FE F7        	cp $f7
 521+ 9615 20 FA        	jr nz,4B
 522+ 9617 3E FF        	ld a,$ff
 523+ 9619 90           	sub b
 524+ 961A 32 E0 85     	ld (CTRL_DESPLZ),a
 525+ 961D 18 1C        	jr 3F
 526+ 961F
 527+ 961F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 961F
 529+ 961F 21 D9 85     1 ld hl,Columns
 530+ 9622 35           	dec (hl)
 531+ 9623 AF           	xor a
 532+ 9624 32 E0 85     	ld (CTRL_DESPLZ),a
 533+ 9627 3A EC 85     	ld a,(Cuad_objeto)
 534+ 962A E6 01        	and 1
 535+ 962C 28 0A        	jr z,2F
 536+ 962E 2A DA 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9631 2B           	dec hl
 538+ 9632 22 DA 85     	ld (Posicion_actual),hl
 539+ 9635 CD B4 96     	call Genera_coordenadas
 540+ 9638
 541+ 9638              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9638
 543+ 9638 CD 7E 88     2 call Inicia_puntero_objeto_izq
 544+ 963B C9           3 ret
 545+ 963C
 546+ 963C              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 963C              ;
 548+ 963C              ;	19/10/22
 549+ 963C              ;
 550+ 963C              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 963C              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 963C
 553+ 963C 3A DE 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 963F FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9641 C9           	ret
 556+ 9642
 557+ 9642              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9642              ;
 559+ 9642              ;	19/10/22
 560+ 9642              ;
 561+ 9642              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9642              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9642
 564+ 9642 3A DE 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 9645 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 9647 C9           	ret
 567+ 9648
 568+ 9648              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 9648              ;
 570+ 9648              ;	24/7/22
 571+ 9648              ;
 572+ 9648              ;	Inc_CTRL_DESPLZ
 573+ 9648              ;
 574+ 9648              ;
 575+ 9648              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 9648
 577+ 9648 21 E0 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 964B 3A EE 85     	ld a,(Vel_right)
 579+ 964E A7           	and a
 580+ 964F 28 06        	jr z,1F
 581+ 9651 47           	ld b,a
 582+ 9652 34           3 inc (hl)
 583+ 9653 10 FD        	djnz 3B
 584+ 9655 18 01        	jr 2F
 585+ 9657 34           1 inc (hl)
 586+ 9658 C9           2 ret
 587+ 9659
 588+ 9659              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9659              ;
 590+ 9659              ;	5/2/23
 591+ 9659              ;
 592+ 9659              ;	Dec_CTRL_DESPLZ
 593+ 9659              ;
 594+ 9659              ;
 595+ 9659              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9659
 597+ 9659 21 E0 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 965C 3A ED 85     	ld a,(Vel_left)
 599+ 965F A7           	and a
 600+ 9660 28 06        	jr z,1F
 601+ 9662 47           	ld b,a
 602+ 9663 35           3 dec (hl)
 603+ 9664 10 FD        	djnz 3B
 604+ 9666 18 01        	jr 2F
 605+ 9668 35           1 dec (hl)
 606+ 9669 C9           2 ret
 607+ 966A
 608+ 966A              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 966A
 610+ 966A 2A DA 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 966D 01 1F 00     	ld bc,31
 612+ 9670 A7           	and a
 613+ 9671 ED 4A        	adc hl,bc
 614+ 9673 22 DA 85     	ld (Posicion_actual),hl
 615+ 9676 21 06 86     	ld hl,Ctrl_0														; $xxx1
 616+ 9679 CB C6        	set 0,(hl)
 617+ 967B C9           	ret
 618+ 967C
 619+ 967C              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 967C
 621+ 967C 2A DA 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 967F 01 1F 00     	ld bc,31
 623+ 9682 A7           	and a
 624+ 9683 ED 42        	sbc hl,bc
 625+ 9685 22 DA 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9688 21 06 86     	ld hl,Ctrl_0
 627+ 968B CB CE        	set 1,(hl)
 628+ 968D C9           	ret
 629+ 968E
 630+ 968E              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 968E
 632+ 968E 24           Reaparece_abajo inc h
 633+ 968F 01 E0 17     	ld bc,$17e0
 634+ 9692 A7           	and a
 635+ 9693 ED 4A        	adc hl,bc
 636+ 9695 22 DA 85     	ld (Posicion_actual),hl
 637+ 9698 21 06 86     	ld hl,Ctrl_0
 638+ 969B CB D6        	set 2,(hl)
 639+ 969D C9           	ret
 640+ 969E
 641+ 969E              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 969E
 643+ 969E 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 96A1 A7           	and a
 645+ 96A2 ED 42        	sbc hl,bc
 646+ 96A4 22 DA 85     	ld (Posicion_actual),hl
 647+ 96A7 21 06 86     	ld hl,Ctrl_0
 648+ 96AA CB DE        	set 3,(hl)
 649+ 96AC C9           	ret
 650+ 96AD
 651+ 96AD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 96AD
 653+ 96AD 2A EA 85     Reinicio ld hl,(Posicion_inicio)
 654+ 96B0 22 DA 85     	ld (Posicion_actual),hl
 655+ 96B3 C9           	ret
# file closed: Direcciones.asm
1060  96B4              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 96B4              ; ------------------------------------------------------------------------
   2+ 96B4              ;
   3+ 96B4              ;	02/04/23
   4+ 96B4              ;
   5+ 96B4              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 96B4              ;	Fila superior "0", Columna izquierda "0".
   7+ 96B4              ;
   8+ 96B4              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 96B4              ;
  10+ 96B4              ;	Modifica: A,BC y DE.
  11+ 96B4
  12+ 96B4 C5           Genera_coordenadas push bc
  13+ 96B5 E5           	push hl
  14+ 96B6 D5           	push de
  15+ 96B7
  16+ 96B7 2A DA 85     	ld hl,(Posicion_actual)
  17+ 96BA
  18+ 96BA 7D           	ld a,l
  19+ 96BB E6 1F        	and $1f
  20+ 96BD 32 DE 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 96C0
  22+ 96C0 CD 88 93     	call calcula_tercio
  23+ 96C3 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 96C4
  25+ 96C4 1E 00        	ld e,0
  26+ 96C6 7D           	ld a,l
  27+ 96C7 E6 E0        	and $e0
  28+ 96C9 28 01        	jr z,1F
  29+ 96CB 04           	inc b
  30+ 96CC
  31+ 96CC 04           1 inc b
  32+ 96CD 05           	dec b
  33+ 96CE 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 96D0              ;														; _ , salimos.
  35+ 96D0 1C           3 inc e
  36+ 96D1 D6 20        	sub 32
  37+ 96D3 20 FB        	jr nz,3B
  38+ 96D5 10 F5        	djnz 1B
  39+ 96D7
  40+ 96D7 7B           2 ld a,e
  41+ 96D8 32 DF 85     	ld (Coordenada_y),a
  42+ 96DB
  43+ 96DB D1           	pop de
  44+ 96DC E1           	pop hl
  45+ 96DD C1           	pop bc
  46+ 96DE
  47+ 96DE C9           	ret
  48+ 96DF
  49+ 96DF              ; ------------------------------------------------------------------------
  50+ 96DF              ;	28/03/23
  51+ 96DF              ;
  52+ 96DF              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 96DF              ;	Fila superior "0", Columna izquierda "0".
  54+ 96DF              ;
  55+ 96DF              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 96DF              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 96DF              ;
  58+ 96DF              ;		DE="$120d"
  59+ 96DF              ;
  60+ 96DF              ;		D, (Coordenada_X), Columnas, $12
  61+ 96DF              ;		E, (Coordenada_y), Filas, $0d
  62+ 96DF              ;
  63+ 96DF              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 96DF
  65+ 96DF              ;	Modifica: A,BC y DE.
  66+ 96DF
  67+ 96DF
  68+ 96DF              Genera_coordenadas_disparo
  69+ 96DF
  70+ 96DF              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 96DF
  72+ 96DF 7D           	ld a,l
  73+ 96E0 E6 1F        	and $1f
  74+ 96E2 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 96E3 CD 88 93     	call calcula_tercio
  76+ 96E6 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 96E7 1E 00        	ld e,0
  78+ 96E9 7D           	ld a,l
  79+ 96EA E6 E0        	and $e0
  80+ 96EC 28 01        	jr z,1F
  81+ 96EE 04           	inc b
  82+ 96EF 1C           1 inc e
  83+ 96F0 D6 20        	sub 32
  84+ 96F2 20 FB        	jr nz,1B
  85+ 96F4 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 96F6 C9           	ret
  87+ 96F7
# file closed: Genera_coordenadas.asm
1061  96F7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 96F7
   2+ 96F7
   3+ 96F7              ;   11/8/22
   4+ 96F7              ;
   5+ 96F7              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 96F7              ;
   7+ 96F7              ;   Mov_obj.asm
   8+ 96F7              ;
   9+ 96F7              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 96F7              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 96F7              ;
  12+ 96F7              ;   Codificación:
  13+ 96F7              ;
  14+ 96F7              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 96F7
  16+ 96F7              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 96F7
  18+ 96F7 02 40 00     Arriba db 2,%01000000,0
  19+ 96FA 02 80 00     Abajo db 2,%10000000,0
  20+ 96FD 02 20 00     Derecha db 2,%00100000,0
  21+ 9700 02 10 00     Izquierda db 2,%00010000,0
  22+ 9703 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9707 60 42 60 40
  22+ 970B 63
  23+ 970C 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9710 22 A3 80 A0
  24+ 9714 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9718 84 A0 83 A0
  25+ 971C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9720 80 A3 22 A0
  26+ 9724 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9728 40 60 42 60
  27+ 972C 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9730
  29+ 9730 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9734 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9738 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 973C 84 00
  32+ 973E 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9742 84 00
  33+ 9744 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9748 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 974C 1F 1F 1F 1F
  35+ 9750 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9754 1F 1F 1F 1F
  35+ 9758 1F
  36+ 9759 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 975D 2F 2F 2F 2F
  36+ 9761 2F 2F
  37+ 9763 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9767 2F 2F 00
  38+ 976A
  39+ 976A              ; ----- ----- ----- ----- -----
  40+ 976A
  41+ 976A 48 97        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 976C 44 97        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 976E 00 97        Indice_mov_Izquierda defw Izquierda
  44+ 9770 FD 96        Indice_mov_Derecha defw Derecha
  45+ 9772 FA 96        Indice_mov_Abajo defw Abajo
  46+ 9774 F7 96        Indice_mov_Arriba defw Arriba
  47+ 9776 34 97        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9778 38 97        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 977A 30 97        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 977C 3E 97        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 977E 03 97        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9780              ; ----- ----- ----- ----- -----
  53+ 9780
  54+ 9780 3A 0C 86     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9783 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9784 28 02            jr z,1F
  57+ 9786 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9788 3A 0D 86     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 978B C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 978D 32 0D 86         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9790              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9790 2A 0A 86         ld hl,(Puntero_mov)
  63+ 9793 7E               ld a,(hl)
  64+ 9794 32 0C 86         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9797 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9798 22 0A 86         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 979B
  68+ 979B 3A 0E 86     Decoder ld a,(Repetimos_db)
  69+ 979E A7               and a
  70+ 979F 20 0C            jr nz,12F
  71+ 97A1 2A 0A 86         ld hl,(Puntero_mov)
  72+ 97A4 7E               ld a,(hl)
  73+ 97A5 A7               and a
  74+ 97A6 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 97A8 E6 0F            and $0f
  76+ 97AA 32 0E 86         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 97AD              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 97AD 2A 0A 86     12 ld hl,(Puntero_mov)
  79+ 97B0 CB 7E            bit 7,(hl)
  80+ 97B2 28 03            jr z,2F
  81+ 97B4 CD A6 93         call Mov_down
  82+ 97B7 2A 0A 86     2 ld hl, (Puntero_mov)
  83+ 97BA CB 76            bit 6,(hl)
  84+ 97BC 28 03            jr z,3F
  85+ 97BE CD D4 93         call Mov_up
  86+ 97C1 2A 0A 86     3 ld hl, (Puntero_mov)
  87+ 97C4 CB 6E            bit 5,(hl)
  88+ 97C6 28 03            jr z,4F
  89+ 97C8 CD 02 94         call Mov_right
  90+ 97CB 2A 0A 86     4 ld hl, (Puntero_mov)
  91+ 97CE CB 66            bit 4,(hl)
  92+ 97D0 28 03            jr z,5F
  93+ 97D2 CD 20 95         call Mov_left
  94+ 97D5
  95+ 97D5              ; ---------- --------- --------- ---------- ----------
  96+ 97D5
  97+ 97D5 3A 0E 86     5 ld a,(Repetimos_db)
  98+ 97D8 A7               and a
  99+ 97D9 28 07            jr z,6F
 100+ 97DB 3D               dec a
 101+ 97DC 32 0E 86         ld (Repetimos_db),a
 102+ 97DF 28 01            jr z,6f
 103+ 97E1 C9           11 ret
 104+ 97E2 21 0C 86     6 ld hl,Contador_db_mov
 105+ 97E5 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 97E6 2A 0A 86         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 97E9 23               inc hl
 108+ 97EA 22 0A 86         ld (Puntero_mov),hl
 109+ 97ED 18 F2            jr 11B
 110+ 97EF 2A 08 86     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 97F2 3A 0D 86         ld a,(Incrementa_puntero)
 112+ 97F5 47               ld b,a
 113+ 97F6 23           8 inc hl
 114+ 97F7 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 97F9 5E               ld e,(hl)
 116+ 97FA 23               inc hl
 117+ 97FB 56               ld d,(hl)
 118+ 97FC EB               ex de,hl
 119+ 97FD 22 0A 86         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9800 18 DF            jr 11B
 121+ 9802
 122+ 9802              ; ---------- --------- --------- ---------- ----------
 123+ 9802              ;
 124+ 9802              ;   11/8/22
 125+ 9802              ;
 126+ 9802              ;   Prepara_Puntero_mov
 127+ 9802
 128+ 9802 E5           Prepara_Puntero_mov push hl
 129+ 9803 D5               push de
 130+ 9804 2A 08 86         ld hl,(Puntero_indice_mov)
 131+ 9807 5E               ld e,(hl)
 132+ 9808 23               inc hl
 133+ 9809 56               ld d,(hl)
 134+ 980A EB               ex de,hl
 135+ 980B 22 0A 86         ld (Puntero_mov),hl
 136+ 980E D1               pop de
 137+ 980F E1               pop hl
 138+ 9810 C9               ret
 139+ 9811
 140+ 9811              ; ---------- --------- --------- ---------- ----------
 141+ 9811              ;
 142+ 9811              ;   11/8/22
 143+ 9811              ;
 144+ 9811              ;   Reinicia_el_movimiento
 145+ 9811
 146+ 9811 CD 02 98     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9814 AF               xor a
 148+ 9815 32 0C 86         ld (Contador_db_mov),a
 149+ 9818 32 0D 86         ld (Incrementa_puntero),a
 150+ 981B C3 80 97         jp Movimiento
 151+ 981E C9               ret
 152+ 981F              ; ---------- --------- --------- ---------- ----------
 153+ 981F
 154+ 981F
 155+ 981F
 156+ 981F
 157+ 981F
 158+ 981F
 159+ 981F
 160+ 981F
 161+ 981F
 162+ 981F
 163+ 981F
 164+ 981F
 165+ 981F
 166+ 981F
 167+ 981F
 168+ 981F
 169+ 981F
 170+ 981F
# file closed: Patrones_de_mov.asm
1062  981F              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 981F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 981F              ;
   3+ 981F              ;	3/1/23
   4+ 981F              ;
   5+ 981F              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 981F
   7+ 981F              ;	ADC HL,SP	LD (addr),SP
   8+ 981F              ;	ADD HL,SP	LD SP,(addr)
   9+ 981F              ;	ADD IX,SP	LD SP,nn
  10+ 981F              ; 	ADD IY,SP	LD SP,HL
  11+ 981F              ;				LD SP,IX
  12+ 981F              ;	DEC SP		LD SP,IY
  13+ 981F
  14+ 981F              ;	EX (SP),HL
  15+ 981F              ;	EX (SP),IX
  16+ 981F              ;	EX (SP),IY
  17+ 981F
  18+ 981F              ;	INC SP
  19+ 981F
  20+ 981F
  21+ 981F                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 1C 86      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 13 86         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 22 86         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 20 86     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 22 86         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 20 86     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 1C 86  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1063  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1064  7FE6
1065  7FE6              	SAVESNA "Pruebas.sna", START
1066  7FE6
1067  7FE6
1068  7FE6
# file closed: Banco_de_pruebas.asm
