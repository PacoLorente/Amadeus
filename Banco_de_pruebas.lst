# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 DB 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD 3C 8E     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD 4C 8E     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 E5 88     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B DB 88  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 11/01/24
   6+ 84EC
   7+ 84EC 37 9D        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE 00 00        	defw 0
   9+ 84F0
  10+ 84F0              ; Control. %00000001 00000001
  11+ 84F0              ;
  12+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  13+ 84F0              ;                    _ hacen las entidades hacia abajo.
  14+ 84F0              ;
  15+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  16+ 84F0
  17+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  18+ 84F2 FE 84        	defw Disparo_2A
  19+ 84F4 06 85        	defw Disparo_3A
  20+ 84F6
  21+ 84F6 00 00        Disparo_1A defw 0									; Control.
  22+ 84F8 00 00        	defw 0											; Puntero objeto.
  23+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  24+ 84FC 00 00        	defw 0											; Rutina de impresión.
  25+ 84FE
  26+ 84FE 00 00        Disparo_2A defw 0									; Control.
  27+ 8500 00 00        	defw 0											; Puntero objeto.
  28+ 8502 00 00        	defw 0											; Puntero de impresión.
  29+ 8504 00 00        	defw 0											; Rutina de impresión.
  30+ 8506
  31+ 8506 00 00        Disparo_3A defw 0
  32+ 8508
  33+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  34+ 850A 26 85        	defw Disparo_2
  35+ 850C 2E 85        	defw Disparo_3
  36+ 850E 36 85        	defw Disparo_4
  37+ 8510 3E 85        	defw Disparo_5
  38+ 8512 46 85        	defw Disparo_6
  39+ 8514 4E 85        	defw Disparo_7
  40+ 8516 56 85        	defw Disparo_8
  41+ 8518 5E 85        	defw Disparo_9
  42+ 851A 66 85        	defw Disparo_10
  43+ 851C 6E 85        	defw Disparo_11
  44+ 851E
  45+ 851E 00 00        Disparo_1 defw 0									; Control.
  46+ 8520 00 00        	defw 0											; Puntero objeto.
  47+ 8522 00 00        	defw 0											; Puntero de impresión.
  48+ 8524 00 00        	defw 0											; Rutina de impresión.
  49+ 8526
  50+ 8526 00 00        Disparo_2 defw 0									; Control.
  51+ 8528 00 00        	defw 0											; Puntero objeto.
  52+ 852A 00 00        	defw 0											; Puntero de impresión.
  53+ 852C 00 00        	defw 0											; Rutina de impresión.
  54+ 852E
  55+ 852E 00 00        Disparo_3 defw 0									; Control.
  56+ 8530 00 00        	defw 0											; Puntero objeto.
  57+ 8532 00 00        	defw 0											; Puntero de impresión.
  58+ 8534 00 00        	defw 0											; Rutina de impresión.
  59+ 8536
  60+ 8536 00 00        Disparo_4 defw 0									; Control.
  61+ 8538 00 00        	defw 0											; Puntero objeto.
  62+ 853A 00 00        	defw 0											; Puntero de impresión.
  63+ 853C 00 00        	defw 0											; Rutina de impresión.
  64+ 853E
  65+ 853E 00 00        Disparo_5 defw 0									; Control.
  66+ 8540 00 00        	defw 0											; Puntero objeto.
  67+ 8542 00 00        	defw 0											; Puntero de impresión.
  68+ 8544 00 00        	defw 0											; Rutina de impresión.
  69+ 8546
  70+ 8546 00 00        Disparo_6 defw 0									; Control.
  71+ 8548 00 00        	defw 0											; Puntero objeto.
  72+ 854A 00 00        	defw 0											; Puntero de impresión.
  73+ 854C 00 00        	defw 0											; Rutina de impresión.
  74+ 854E
  75+ 854E 00 00        Disparo_7 defw 0									; Control.
  76+ 8550 00 00        	defw 0											; Puntero objeto.
  77+ 8552 00 00        	defw 0											; Puntero de impresión.
  78+ 8554 00 00        	defw 0											; Rutina de impresión.
  79+ 8556
  80+ 8556 00 00        Disparo_8 defw 0									; Control.
  81+ 8558 00 00        	defw 0											; Puntero objeto.
  82+ 855A 00 00        	defw 0											; Puntero de impresión.
  83+ 855C 00 00        	defw 0											; Rutina de impresión.
  84+ 855E
  85+ 855E 00 00        Disparo_9 defw 0									; Control.
  86+ 8560 00 00        	defw 0											; Puntero objeto.
  87+ 8562 00 00        	defw 0											; Puntero de impresión.
  88+ 8564 00 00        	defw 0											; Rutina de impresión.
  89+ 8566
  90+ 8566 00 00        Disparo_10 defw 0									; Control.
  91+ 8568 00 00        	defw 0											; Puntero objeto.
  92+ 856A 00 00        	defw 0											; Puntero de impresión.
  93+ 856C 00 00        	defw 0											; Rutina de impresión.
  94+ 856E
  95+ 856E 00 00        Disparo_11 defw 0
  96+ 8570
  97+ 8570              ; -------------------------------------------------------------------------------------
  98+ 8570              ;
  99+ 8570              ;	Índice de cajas de entidades.
 100+ 8570              ;
 101+ 8570              ;	9/1/24
 102+ 8570              ;
 103+ 8570
 104+ 8570              Indice_de_cajas_de_entidades						; ! 56 Bytes por entidad.
 105+ 8570
 106+ 8570 C6 85        	defw Caja_1
 107+ 8572 FE 85        	defw Caja_2
 108+ 8574 36 86        	defw Caja_3
 109+ 8576 6E 86        	defw Caja_4
 110+ 8578 A6 86        	defw Caja_5
 111+ 857A DE 86        	defw Caja_6
 112+ 857C 16 87        	defw Caja_7
 113+ 857E
 114+ 857E 00 00        	defw 0
 115+ 8580 00 00        	defw 0
 116+ 8582
 117+ 8582              ; ---------- ---------- ---------- ---------- ----------
 118+ 8582
 119+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 120+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 121+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 122+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 123+ 858B
 124+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 125+ 858C
 126+ 858C 05           	db %00000101										; (Attr).
 127+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 128+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 129+ 8591
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595
 133+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 134+ 8597 04           	db 4 												; (Cuad_objeto).
 135+ 8598 02 02 00 00  	db 2,2,0,0											; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 136+ 859C
 137+ 859C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 138+ 859D
 139+ 859D 00 00 00...  	ds 6												; Variables_de_borrado
 140+ 85A3
 141+ 85A3 00 00        	db 0,0												; Variables_de_pintado
 142+ 85A5 00 00        	defw 0												;	" " " " " " "
 143+ 85A7 00 00        	defw 0												;	" " " " " " "
 144+ 85A9 00 00 00 00  	db 0,0,0,0											;	" " " " " " "
 145+ 85AD
 146+ 85AD 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 147+ 85AF
 148+ 85AF 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 149+ 85B1 00 00        	defw 0 												; Contador_de_mov_masticados
 150+ 85B3
 151+ 85B3 40           	db $40												; (Ctrl_0).
 152+ 85B4
 153+ 85B4 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 153+ 85B8 00 00
 154+ 85BA 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 155+ 85BD
 156+ 85BD 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 157+ 85BF 00           	db 0												; (Cola_de_desplazamiento).
 158+ 85C0
 159+ 85C0 00           	db 0 												; (Columnas).
 160+ 85C1 00 00        	defw 0												; (Limite_horizontal).
 161+ 85C3 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 162+ 85C6
 163+ 85C6              ; ---------- ---------- ---------- ---------- ----------
 164+ 85C6
 165+ 85C6 00 00 00     Caja_1 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 166+ 85C9 00 00        	defw 0											; (Posicion_actual).
 167+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 168+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 169+ 85D0
 170+ 85D0 00           	db %00000000 									; (Attr).
 171+ 85D1
 172+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 173+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 174+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 175+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 176+ 85D9
 177+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 178+ 85DB 00           	db 0											; (Cuad_objeto).
 179+ 85DC
 180+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 181+ 85E0
 182+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 183+ 85E1
 184+ 85E1 00 00 00...  	ds 6											; Variables_de_borrado
 185+ 85E7
 186+ 85E7 00 00        	db 0,0											; Variables_de_pintado
 187+ 85E9 00 00        	defw 0											;	" " " " " " "
 188+ 85EB 00 00        	defw 0											;	" " " " " " "
 189+ 85ED 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 190+ 85F1
 191+ 85F1 00 00        	defw 0 											; Puntero_de_impresion.
 192+ 85F3
 193+ 85F3 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 194+ 85F5 00 00        	defw 0 											; Contador_de_mov_masticados
 195+ 85F7
 196+ 85F7 00           	db 0											; (Ctrl_0).
 197+ 85F8
 198+ 85F8 00           	db 0 											; (Columnas).
 199+ 85F9 00 00        	defw 0											; (Limite_horizontal).
 200+ 85FB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 201+ 85FE
 202+ 85FE              ; ---------- ---------- ---------- ---------- ----------
 203+ 85FE
 204+ 85FE 00 00 00     Caja_2 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 205+ 8601 00 00        	defw 0											; (Posicion_actual).
 206+ 8603 00 00        	defw 0 											; (Puntero_objeto).
 207+ 8605 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 208+ 8608
 209+ 8608 00           	db %00000000 									; (Attr).
 210+ 8609
 211+ 8609 00 00        	defw 0											; (Indice_Sprite_der).
 212+ 860B 00 00        	defw 0											; (Indice_Sprite_izq).
 213+ 860D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 214+ 860F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 215+ 8611
 216+ 8611 00 00        	defw 0											; (Posicion_inicio).
 217+ 8613 00           	db 0											; (Cuad_objeto).
 218+ 8614
 219+ 8614 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 220+ 8618
 221+ 8618 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 222+ 8619
 223+ 8619 00 00 00...  	ds 6											; Variables_de_borrado
 224+ 861F
 225+ 861F 00 00        	db 0,0											; Variables_de_pintado
 226+ 8621 00 00        	defw 0											;	" " " " " " "
 227+ 8623 00 00        	defw 0											;	" " " " " " "
 228+ 8625 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 229+ 8629
 230+ 8629 00 00        	defw 0 											; Puntero_de_impresion.
 231+ 862B
 232+ 862B 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 233+ 862D 00 00        	defw 0 											; Contador_de_mov_masticados
 234+ 862F
 235+ 862F 00           	db 0											; (Ctrl_0).
 236+ 8630
 237+ 8630 00           	db 0 											; (Columnas).
 238+ 8631 00 00        	defw 0											; (Limite_horizontal).
 239+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 8636
 241+ 8636              ; ---------- ---------- ---------- ---------- ----------
 242+ 8636
 243+ 8636 00 00 00     Caja_3 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 244+ 8639 00 00        	defw 0											; (Posicion_actual).
 245+ 863B 00 00        	defw 0 											; (Puntero_objeto).
 246+ 863D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 8640
 248+ 8640 00           	db %00000000 									; (Attr).
 249+ 8641
 250+ 8641 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 8643 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 8645 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 8647 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 8649
 255+ 8649 00 00        	defw 0											; (Posicion_inicio).
 256+ 864B 00           	db 0											; (Cuad_objeto).
 257+ 864C
 258+ 864C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 8650
 260+ 8650 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 8651
 262+ 8651 00 00 00...  	ds 6											; Variables_de_borrado
 263+ 8657
 264+ 8657 00 00        	db 0,0											; Variables_de_pintado
 265+ 8659 00 00        	defw 0											;	" " " " " " "
 266+ 865B 00 00        	defw 0											;	" " " " " " "
 267+ 865D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 268+ 8661
 269+ 8661 00 00        	defw 0 											; Puntero_de_impresion.
 270+ 8663
 271+ 8663 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 272+ 8665 00 00        	defw 0 											; Contador_de_mov_masticados
 273+ 8667
 274+ 8667 00           	db 0											; (Ctrl_0).
 275+ 8668
 276+ 8668 00           	db 0 											; (Columnas).
 277+ 8669 00 00        	defw 0											; (Limite_horizontal).
 278+ 866B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 279+ 866E
 280+ 866E              ; ---------- ---------- ---------- ---------- ----------
 281+ 866E
 282+ 866E 00 00 00     Caja_4 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 283+ 8671 00 00        	defw 0											; (Posicion_actual).
 284+ 8673 00 00        	defw 0 											; (Puntero_objeto).
 285+ 8675 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 286+ 8678
 287+ 8678 00           	db %00000000 									; (Attr).
 288+ 8679
 289+ 8679 00 00        	defw 0											; (Indice_Sprite_der).
 290+ 867B 00 00        	defw 0											; (Indice_Sprite_izq).
 291+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 292+ 867F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 293+ 8681
 294+ 8681 00 00        	defw 0											; (Posicion_inicio).
 295+ 8683 00           	db 0											; (Cuad_objeto).
 296+ 8684
 297+ 8684 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 298+ 8688
 299+ 8688 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 300+ 8689
 301+ 8689 00 00 00...  	ds 6											; Variables_de_borrado
 302+ 868F
 303+ 868F 00 00        	db 0,0											; Variables_de_pintado
 304+ 8691 00 00        	defw 0											;	" " " " " " "
 305+ 8693 00 00        	defw 0											;	" " " " " " "
 306+ 8695 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 307+ 8699
 308+ 8699 00 00        	defw 0 											; Puntero_de_impresion.
 309+ 869B
 310+ 869B 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 311+ 869D 00 00        	defw 0 											; Contador_de_mov_masticados
 312+ 869F
 313+ 869F 00           	db 0											; (Ctrl_0).
 314+ 86A0
 315+ 86A0 00           	db 0 											; (Columnas).
 316+ 86A1 00 00        	defw 0											; (Limite_horizontal).
 317+ 86A3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 318+ 86A6
 319+ 86A6              ; ---------- ---------- ---------- ---------- ----------
 320+ 86A6
 321+ 86A6 00 00 00     Caja_5 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 322+ 86A9 00 00        	defw 0											; (Posicion_actual).
 323+ 86AB 00 00        	defw 0 											; (Puntero_objeto).
 324+ 86AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 325+ 86B0
 326+ 86B0 00           	db %00000000 									; (Attr).
 327+ 86B1
 328+ 86B1 00 00        	defw 0											; (Indice_Sprite_der).
 329+ 86B3 00 00        	defw 0											; (Indice_Sprite_izq).
 330+ 86B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 331+ 86B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 332+ 86B9
 333+ 86B9 00 00        	defw 0											; (Posicion_inicio).
 334+ 86BB 00           	db 0											; (Cuad_objeto).
 335+ 86BC
 336+ 86BC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 337+ 86C0
 338+ 86C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 339+ 86C1
 340+ 86C1 00 00 00...  	ds 6											; Variables_de_borrado
 341+ 86C7
 342+ 86C7 00 00        	db 0,0											; Variables_de_pintado
 343+ 86C9 00 00        	defw 0											;	" " " " " " "
 344+ 86CB 00 00        	defw 0											;	" " " " " " "
 345+ 86CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 346+ 86D1
 347+ 86D1 00 00        	defw 0 											; Puntero_de_impresion.
 348+ 86D3
 349+ 86D3 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 350+ 86D5 00 00        	defw 0 											; Contador_de_mov_masticados
 351+ 86D7
 352+ 86D7 00           	db 0											; (Ctrl_0).
 353+ 86D8
 354+ 86D8 00           	db 0 											; (Columnas).
 355+ 86D9 00 00        	defw 0											; (Limite_horizontal).
 356+ 86DB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 357+ 86DE
 358+ 86DE              ; ---------- ---------- ---------- ---------- ----------
 359+ 86DE
 360+ 86DE 00 00 00     Caja_6 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 361+ 86E1 00 00        	defw 0											; (Posicion_actual).
 362+ 86E3 00 00        	defw 0 											; (Puntero_objeto).
 363+ 86E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 364+ 86E8
 365+ 86E8 00           	db %00000000 									; (Attr).
 366+ 86E9
 367+ 86E9 00 00        	defw 0											; (Indice_Sprite_der).
 368+ 86EB 00 00        	defw 0											; (Indice_Sprite_izq).
 369+ 86ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 370+ 86EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 371+ 86F1
 372+ 86F1 00 00        	defw 0											; (Posicion_inicio).
 373+ 86F3 00           	db 0											; (Cuad_objeto).
 374+ 86F4
 375+ 86F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 376+ 86F8
 377+ 86F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 378+ 86F9
 379+ 86F9 00 00 00...  	ds 6											; Variables_de_borrado
 380+ 86FF
 381+ 86FF 00 00        	db 0,0											; Variables_de_pintado
 382+ 8701 00 00        	defw 0											;	" " " " " " "
 383+ 8703 00 00        	defw 0											;	" " " " " " "
 384+ 8705 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 385+ 8709
 386+ 8709 00 00        	defw 0 											; Puntero_de_impresion.
 387+ 870B
 388+ 870B 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 389+ 870D 00 00        	defw 0 											; Contador_de_mov_masticados
 390+ 870F
 391+ 870F 00           	db 0											; (Ctrl_0).
 392+ 8710
 393+ 8710 00           	db 0 											; (Columnas).
 394+ 8711 00 00        	defw 0											; (Limite_horizontal).
 395+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 396+ 8716
 397+ 8716              ; ---------- ---------- ---------- ---------- ----------
 398+ 8716
 399+ 8716 00 00 00     Caja_7 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 400+ 8719 00 00        	defw 0											; (Posicion_actual).
 401+ 871B 00 00        	defw 0 											; (Puntero_objeto).
 402+ 871D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 403+ 8720
 404+ 8720 00           	db %00000000 									; (Attr).
 405+ 8721
 406+ 8721 00 00        	defw 0											; (Indice_Sprite_der).
 407+ 8723 00 00        	defw 0											; (Indice_Sprite_izq).
 408+ 8725 00 00        	defw 0											; (Puntero_DESPLZ_der).
 409+ 8727 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 410+ 8729
 411+ 8729 00 00        	defw 0											; (Posicion_inicio).
 412+ 872B 00           	db 0											; (Cuad_objeto).
 413+ 872C
 414+ 872C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 415+ 8730
 416+ 8730 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 417+ 8731
 418+ 8731 00 00 00...  	ds 6											; Variables_de_borrado
 419+ 8737
 420+ 8737 00 00        	db 0,0											; Variables_de_pintado
 421+ 8739 00 00        	defw 0											;	" " " " " " "
 422+ 873B 00 00        	defw 0											;	" " " " " " "
 423+ 873D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 424+ 8741
 425+ 8741 00 00        	defw 0 											; Puntero_de_impresion.
 426+ 8743
 427+ 8743 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 428+ 8745 00 00        	defw 0 											; Contador_de_mov_masticados
 429+ 8747
 430+ 8747 00           	db 0											; (Ctrl_0).
 431+ 8748
 432+ 8748 00           	db 0 											; (Columnas).
 433+ 8749 00 00        	defw 0											; (Limite_horizontal).
 434+ 874B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 435+ 874E
 436+ 874E              ; -------------------------------------------------------------------------------------
 437+ 874E              ;
 438+ 874E              ;	11/1/24
 439+ 874E              ;
 440+ 874E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 441+ 874E              ;
 442+ 874E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 443+ 874E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 444+ 874E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 445+ 874E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 446+ 874E
 447+ 874E              Indice_de_entidades
 448+ 874E
 449+ 874E 52 87        	defw Entidad_1
 450+ 8750 64 87        	defw Entidad_2
 451+ 8752
 452+ 8752              ;	BADSAT, (Satélite malvado).
 453+ 8752
 454+ 8752 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 455+ 8755 04           	db %00000100										; (Attr).
 456+ 8756 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 457+ 8758 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 458+ 875A 03 40        	defw $4003	                             	    	; (Posicion_inicio).
 459+ 875C 01           	db 1												; (Cuad_objeto).
 460+ 875D 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 461+ 8761 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 462+ 8763 03           	db 3												; (Frames_explosion).
 463+ 8764
 464+ 8764 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 465+ 8767 02           	db %00000010										; (Attr).
 466+ 8768 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 467+ 876A 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 468+ 876C 40 50        	defw $5040                                      	; (Posicion_inicio).
 469+ 876E 01           	db 1												; (Cuad_objeto).
 470+ 876F 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 8773 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 472+ 8775 03           	db 3												; (Frames_explosion).
# file closed: Cajas_y_disparos.asm
 105  8776              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8776              ; 13/05/23
   2+ 8776
   3+ 8776              Indice_de_niveles
   4+ 8776
   5+ 8776 84 87        	defw Nivel_1
   6+ 8778 87 87        	defw Nivel_2
   7+ 877A 94 87        	defw Nivel_3
   8+ 877C A4 87        	defw Nivel_4
   9+ 877E B6 87        	defw Nivel_5
  10+ 8780              ;	...
  11+ 8780              ;	...
  12+ 8780              ;	+ Niveles ...
  13+ 8780
  14+ 8780 00 00        	defw 0
  15+ 8782 00 00        	defw 0
  16+ 8784
  17+ 8784 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 8785 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8787 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8788 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 878C 01 02
  21+ 878E 02 01 01 01  	db 2,1,1,1,1,2
  21+ 8792 01 02
  22+ 8794 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 8795 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 8799 01
  24+ 879A 03 01 01 01  	db 3,1,1,1,1
  24+ 879E 01
  25+ 879F 03 01 01 01  	db 3,1,1,1,1
  25+ 87A3 01
  26+ 87A4 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87A5 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87A9 01
  28+ 87AA 04 01 01 01  	db 4,1,1,1,1
  28+ 87AE 01
  29+ 87AF 04 01 01 01  	db 4,1,1,1,1
  29+ 87B3 01
  30+ 87B4 02 03        	db 2,3
  31+ 87B6 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87B7 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87BB 01
  33+ 87BC 05 01 01 01  	db 5,1,1,1,1
  33+ 87C0 01
  34+ 87C1 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87C5 01
  35+ 87C6 05 01 01 01  	db 5,1,1,1,1
  35+ 87CA 01
  36+ 87CB
  37+ 87CB              ;---------------------------------------------------------------------------------------------------------------
  38+ 87CB              ;
  39+ 87CB              ;   5/1/24
  40+ 87CB              ;
  41+ 87CB              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87CB              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87CB              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87CB              ;	_en la caja DRAW correspondiente.
  45+ 87CB              ;
  46+ 87CB              ;	MODIFICA: HL,DE y A.
  47+ 87CB              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87CB
  49+ 87CB              Inicializa_Punteros_de_nivel
  50+ 87CB
  51+ 87CB 21 76 87     	ld hl,Indice_de_niveles
  52+ 87CE 22 04 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 87D1 CD CE 8C     	call Extrae_address
  54+ 87D4 7E           	ld a,(hl)
  55+ 87D5 32 CF 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 87D8 23           	inc hl
  57+ 87D9 22 06 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 87DC C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 87DD
  60+ 87DD              ;---------------------------------------------------------------------------------------------------------------
  61+ 87DD              ;
  62+ 87DD              ;   5/1/24
  63+ 87DD              ;
  64+ 87DD              ;	Destruye A,BC,HL,DE
  65+ 87DD
  66+ 87DD              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 87DD              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 87DD
  69+ 87DD              Prepara_cajas_de_entidades
  70+ 87DD
  71+ 87DD              ; Preparamos los punteros de las cajas de entidades:
  72+ 87DD
  73+ 87DD 21 70 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 87E0 CD CE 8C     	call Extrae_address
  75+ 87E3 CD 20 88     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 87E6              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 87E6
  78+ 87E6 CD 63 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 87E9
  80+ 87E9 2A 06 89     	ld hl,(Datos_de_nivel)
  81+ 87EC
  82+ 87EC              ; En este punto:
  83+ 87EC              ;
  84+ 87EC              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  85+ 87EC              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  86+ 87EC
  87+ 87EC C5           1 push bc 										; Guardo el nº de cajas a rellenar.
  88+ 87ED
  89+ 87ED 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  90+ 87EE CD 0E 88     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
  91+ 87F1
  92+ 87F1 21 4E 87     	ld hl,Indice_de_entidades
  93+ 87F4 CD 16 88     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
  94+ 87F7              ;												; Actualiza (Datos_de_entidad) con esa dirección.
  95+ 87F7
  96+ 87F7 CD 2A 88     	call Datos_de_entidad_a_caja				; Vuelca los datos de la entidad en la caja.
  97+ 87FA
  98+ 87FA 2A CD 88     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
  99+ 87FD CD CE 8C     	call Extrae_address
 100+ 8800 CD 20 88     	call Avanza_caja_de_entidades
 101+ 8803
 102+ 8803 2A 06 89     	ld hl,(Datos_de_nivel)
 103+ 8806 23           	inc hl
 104+ 8807 22 06 89     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 105+ 880A
 106+ 880A C1           	pop bc
 107+ 880B 10 DF        	djnz 1B
 108+ 880D
 109+ 880D C9           	ret
 110+ 880E
 111+ 880E              ;	------------------------------------------------------------------------------------
 112+ 880E              ;
 113+ 880E              ;	12/01/24
 114+ 880E              ;
 115+ 880E              ;	INPUTS:	A contiene el (Tipo) de entidad.
 116+ 880E              ;
 117+ 880E              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 118+ 880E              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 119+ 880E
 120+ 880E CB 27        Calcula_salto_en_BC sla a
 121+ 8810 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 122+ 8812 4F           	ld c,a
 123+ 8813 06 00        	ld b,0
 124+ 8815 C9           	ret
 125+ 8816
 126+ 8816              ; ------------------------------------------------------------------
 127+ 8816              ;
 128+ 8816              ;	5/1/24
 129+ 8816              ;
 130+ 8816              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 131+ 8816              ;	Actualiza (Datos_de_entidad) con esa dirección.
 132+ 8816
 133+ 8816 A7           Situa_en_datos_de_entidad and a
 134+ 8817 ED 4A        	adc hl,bc
 135+ 8819 CD CE 8C     	call Extrae_address
 136+ 881C 22 D5 88         ld (Datos_de_entidad),hl
 137+ 881F C9           	ret
 138+ 8820
 139+ 8820              ; ------------------------------------------------------------------
 140+ 8820
 141+ 8820 22 C9 88     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 142+ 8823 13           	inc de
 143+ 8824 13           	inc de
 144+ 8825 EB           	ex de,hl
 145+ 8826 22 CD 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 146+ 8829 C9           	ret
 147+ 882A
 148+ 882A              ; ----------------------------------------------------------------------------------------------------------
 149+ 882A              ;
 150+ 882A              ;	11/1/24
 151+ 882A              ;
 152+ 882A              ;	Vuelca los .db significativos del tipo de entidad a la caja de entidades.
 153+ 882A
 154+ 882A              Datos_de_entidad_a_caja
 155+ 882A
 156+ 882A              ; En este punto:
 157+ 882A              ; HL apunta al 1er .db de DATOS de la entidad que tenemos que volcar en la caja DRAW.
 158+ 882A
 159+ 882A ED 5B C9 88  	ld de,(Puntero_store_caja) 					; DE apunta al 1er .db de la caja de entidades vacía.
 160+ 882E
 161+ 882E 01 03 00     	ld bc,3
 162+ 8831 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 163+ 8833              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 164+ 8833 01 07 00     	ld bc,7
 165+ 8836 CD 5D 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 166+ 8839
 167+ 8839 01 05 00     	ld bc,5
 168+ 883C ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 169+ 883E              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 170+ 883E 01 04 00     	ld bc,4
 171+ 8841 CD 5D 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 172+ 8844
 173+ 8844 01 07 00     	ld bc,7
 174+ 8847 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 175+ 8849              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 176+ 8849
 177+ 8849 01 13 00     	ld bc,19
 178+ 884C CD 5D 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 179+ 884F
 180+ 884F 01 02 00     	ld bc,2
 181+ 8852 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 182+ 8854              ;												; HL, (origen), apunta ahora al .db (Frames_explosion), hay que situar DE.
 183+ 8854
 184+ 8854 01 08 00     	ld bc,8
 185+ 8857 CD 5D 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 186+ 885A
 187+ 885A 7E           	ld a,(hl)
 188+ 885B 12           	ld (de),a 									; Vuelco (Frames_explosion).
 189+ 885C
 190+ 885C C9           	ret
 191+ 885D
 192+ 885D              ; ---------- -------------- ----------------
 193+ 885D
 194+ 885D EB           Situa_DE ex de,hl
 195+ 885E A7           	and a
 196+ 885F ED 4A        	adc hl,bc
 197+ 8861 EB           	ex de,hl
 198+ 8862 C9           	ret
 199+ 8863
 200+ 8863              ;---------------------------------------------------------------------------------------------------------------
 201+ 8863              ;
 202+ 8863              ;	5/1/24
 203+ 8863              ;
 204+ 8863              ;	INICIALIZA (Numero_parcial_de_entidades).
 205+ 8863              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 206+ 8863              ;
 207+ 8863              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 208+ 8863              ;
 209+ 8863              ;	(Numero_parcial_de_entidades)="7".
 210+ 8863              ;
 211+ 8863              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 212+ 8863              ;
 213+ 8863              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 214+ 8863              ;
 215+ 8863              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 216+ 8863              ;	MODIFICA: A y B.
 217+ 8863              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 218+ 8863
 219+ 8863              Inicializa_Numero_parcial_de_entidades
 220+ 8863
 221+ 8863              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 222+ 8863
 223+ 8863 3A CF 88     	ld a,(Numero_de_entidades)
 224+ 8866 A7           	and a
 225+ 8867
 226+ 8867              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 227+ 8867              ;	jr z,$
 228+ 8867              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 229+ 8867
 230+ 8867 20 03        	jr nz,3F
 231+ 8869
 232+ 8869              ; ---------- ---------- ----------
 233+ 8869
 234+ 8869              ;! RESET para pruebas. Omitir esta línea en modo normal.
 235+ 8869              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 236+ 8869
 237+ 8869 CD CB 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 238+ 886C
 239+ 886C              ; ---------- ---------- ----------
 240+ 886C
 241+ 886C 3A CF 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 242+ 886F FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 243+ 8871 38 08        	jr c,1F
 244+ 8873
 245+ 8873              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 246+ 8873              ; Actualizamos variables.
 247+ 8873
 248+ 8873 3E 07        	ld a,7
 249+ 8875 32 D0 88     	ld (Numero_parcial_de_entidades),a
 250+ 8878 47           	ld b,a
 251+ 8879 18 04        	jr 2F
 252+ 887B
 253+ 887B              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 254+ 887B              ; (Numero_de_entidades)="0".
 255+ 887B
 256+ 887B 32 D0 88     1 ld (Numero_parcial_de_entidades),a
 257+ 887E 47           	ld b,a
 258+ 887F C9           2 ret
# file closed: Niveles.asm
 106  8880
 107  8880              ; ******************************************************************************************************************************************************************************************
 108  8880              ; Constantes.
 109  8880              ; ******************************************************************************************************************************************************************************************
 110  8880              ;
 111  8880              ; 25/12/23
 112  8880
 113  8880              ;
 114  8880              ; Constantes.
 115  8880              ;
 116  8880
 117  8880              Sprite_vacio equ $f000
 118  8880              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  8880              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  8880              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  8880              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  8880
 123  8880              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  8880              ;														;
 125  8880
 126  8880              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  8880
 128  8880
 129  8880
 130  8880
 131  8880              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 132  8880              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 133  8880              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 134  8880              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 135  8880              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 136  8880
 137  8880              ;														; 55 Bytes.
 138  8880              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 139  8880              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 140  8880
 141  8880              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 142  8880
 143  8880              ; ******************************************************************************************************************************************************************************************
 144  8880              ; Variables.
 145  8880              ; ******************************************************************************************************************************************************************************************
 146  8880              ;
 147  8880              ; 12/01/24
 148  8880              ;
 149  8880              ; Variables de DRAW. (Motor principal).
 150  8880              ;
 151  8880              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 152  8880
 153  8880              Variables_DRAW
 154  8880
 155  8880 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8881              ;															- Patrón de movimiento.
 157  8881              ;															- Aspecto
 158  8881 00           Filas db 0												; Filas. [DRAW]
 159  8882 00           Columns db 0  											; Nº de columnas. [DRAW]
 160  8883 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 161  8885 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 162  8887 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8888 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8889
 165  8889              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 166  8889
 167  8889 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 168  888A              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 169  888A              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 170  888A 00           Attr db 0												; Atributos de la entidad:
 171  888B
 172  888B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 173  888B              ;
 174  888B              ;	COLORES: 0 ..... NEGRO
 175  888B              ;    		 1 ..... AZUL
 176  888B              ; 			 2 ..... ROJO
 177  888B              ;			 3 ..... MAGENTA
 178  888B              ; 			 4 ..... VERDE
 179  888B              ; 			 5 ..... CIAN
 180  888B              ;			 6 ..... AMARILLO
 181  888B              ; 			 7 ..... BLANCO
 182  888B
 183  888B 00 00        Indice_Sprite_der defw 0
 184  888D 00 00        Indice_Sprite_izq defw 0
 185  888F 00 00        Puntero_DESPLZ_der defw 0
 186  8891 00 00        Puntero_DESPLZ_izq defw 0
 187  8893
 188  8893 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 189  8895 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 190  8896
 191  8896              ; Variables de objeto. (Características).
 192  8896
 193  8896 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 194  8897 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 195  8898 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 196  8899 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 197  889A
 198  889A 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 199  889B              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 200  889B              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 201  889B 00 00 00...  Variables_de_borrado ds 6
 202  88A1
 203  88A1 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 204  88A3 00 00        	defw 0
 205  88A5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 206  88A7 00 00 00 00  	db 0,0,0,0
 207  88AB
 208  88AB 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 209  88AD              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 210  88AD
 211  88AD 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 212  88AF
 213  88AF              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 214  88AF              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 215  88AF
 216  88AF 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 217  88B1              ;														; _palabras que componen el "movimiento_masticado".
 218  88B1
 219  88B1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 220  88B1
 221  88B1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 222  88B2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 223  88B2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 224  88B2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 225  88B2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 226  88B2              ;
 227  88B2              ; 														DESCRIPCIÖN:
 228  88B2              ;
 229  88B2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 230  88B2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 231  88B2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 232  88B2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 233  88B2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 234  88B2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 235  88B2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 236  88B2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 237  88B2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 238  88B2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 239  88B2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 240  88B2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 241  88B2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 242  88B2              ;
 243  88B2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 244  88B2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 245  88B2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 246  88B2
 247  88B2              ; Variables de funcionamiento. [DRAW].
 248  88B2
 249  88B2 00           Columnas db 0
 250  88B3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  88B5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88B5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  88B6
 254  88B6              ; variables de control general.
 255  88B6
 256  88B6 00           Ctrl_2 db 0
 257  88B7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  88B7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  88B7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  88B7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  88B7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  88B7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  88B7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  88B7              ;
 265  88B7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  88B7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  88B7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  88B7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  88B7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  88B7              ;														BIT 4, ???
 271  88B7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 272  88B7
 273  88B7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 274  88B8
 275  88B8              ;! 56 Bytes por entidad.
 276  88B8
 277  88B8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 278  88B8              ;					         		---------;      ;---------
 279  88B8
 280  88B8
 281  88B8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 282  88B8
 283  88B8              ; Movimiento. ------------------------------------------------------------------------------------------------------
 284  88B8
 285  88B8 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 286  88BA 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 287  88BC 00 00        Puntero_indice_mov_bucle defw 0							;
 288  88BE              ;
 289  88BE              ;
 290  88BE 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 291  88BF              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 292  88BF              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 293  88BF 00           Incrementa_puntero_backup db 0
 294  88C0 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 295  88C1              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 296  88C1 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 297  88C2 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 298  88C3 00           Cola_de_desplazamiento db 0								; Este byte indica:
 299  88C4              ;
 300  88C4              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 301  88C4              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 302  88C4              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 303  88C4              ;
 304  88C4              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 305  88C4              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 306  88C4              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 307  88C4              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 308  88C4              ;
 309  88C4              ;														;	"$ff" ..... Bucle infinito de repetición.
 310  88C4              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 311  88C4              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 312  88C4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 313  88C6
 314  88C6 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 315  88C7
 316  88C7              ;														DESCRIPCIÓN:
 317  88C7              ;
 318  88C7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 319  88C7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 320  88C7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 321  88C7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 322  88C7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 323  88C7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 324  88C7
 325  88C7              ;														BIT 3, Recarga de nueva oleada.
 326  88C7              ;														BIT 4, Recarga de nueva oleada.
 327  88C7              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 328  88C7              ;														BIT 6, **** Frame completo.
 329  88C7              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 330  88C7
 331  88C7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 332  88C9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 333  88C9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 334  88C9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 335  88C9
 336  88C9              ; Gestión de ENTIDADES y CAJAS.
 337  88C9
 338  88C9 00 00        Puntero_store_caja defw 0
 339  88CB 00 00        Puntero_restore_caja defw 0
 340  88CD 00 00        Indice_restore_caja defw 0
 341  88CF 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 342  88D0 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 343  88D1 00           Entidades_en_curso db 0									; ..... ..... .....
 344  88D2 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 345  88D3              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 346  88D3              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 347  88D3              ;														; _ (Numero_de_malotes)="0".
 348  88D3 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 349  88D5 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 350  88D7              ;														; _ puntero (Indice_entidades).
 351  88D7
 352  88D7              ;---------------------------------------------------------------------------------------------------------------
 353  88D7              ;
 354  88D7              ;	11/01/24
 355  88D7              ;
 356  88D7              ;	Álbumes.
 357  88D7
 358  88D7 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 359  88D9              ;														; _variable para almacenar lo posición del puntero_
 360  88D9              ; 														; _de pila, SP.
 361  88D9 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 362  88DB              ;														; La utiliza la rutina [Extrae_foto_registros].
 363  88DB 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 364  88DD 00 70        Stack_snapshot defw Album_de_fotos
 365  88DF 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 366  88E1
 367  88E1              ;End_Snapshot defw Album_de_fotos
 368  88E1              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 369  88E1 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 370  88E3              ;														; _el snapshot de los registros del siguiente disparo.
 371  88E3              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 372  88E3 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 373  88E5
 374  88E5 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 375  88E6              ;
 376  88E6              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 377  88E6              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 378  88E6              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 379  88E6
 380  88E6 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 381  88E7              ;
 382  88E7              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 383  88E7
 384  88E7              ; Gestión de Disparos.
 385  88E7
 386  88E7 00           Numero_de_disparotes db 0
 387  88E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 388  88EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 389  88EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 390  88ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 391  88ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 392  88ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 393  88EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 394  88EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 395  88EF              ;														; _produzca colisión.
 396  88EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 397  88F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 398  88F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 399  88F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 400  88F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 401  88F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 402  88F7 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 403  88F8
 404  88F8              ;---------------------------------------------------------------------------------------------------------------
 405  88F8
 406  88F8              ; Relojes y temporizaciones.
 407  88F8
 408  88F8 00           Contador_de_frames db 0
 409  88F9 00           Contador_de_frames_2 db 0
 410  88FA
 411  88FA 04           Clock_explosion db 4
 412  88FB 14           Clock_Entidades_en_curso db 20
 413  88FC 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 414  88FD              ;														; Repite la oleada de entidades.
 415  88FD 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 416  88FE 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 417  88FF 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 418  8900
 419  8900 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 420  8901 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 421  8902 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 422  8903
 423  8903              ;---------------------------------------------------------------------------------------------------------------
 424  8903
 425  8903              ; Gestión de NIVELES.
 426  8903
 427  8903 00           Nivel db 0												; Nivel actual del juego.
 428  8904 00 00        Puntero_indice_NIVELES defw 0
 429  8906 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 430  8908              ; 														; _ que definen el NIVEL.
 431  8908              ; Y todo comienza aquí .....
 432  8908              ;
 433  8908              ; 	INICIO  *************************************************************************************************************************************************************************
 434  8908              ;
 435  8908              ;	5/1/24
 436  8908
 437  8908              START
 438  8908
 439  8908 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 440  890B 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 441  890D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 442  890F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 443  8911 F3           	DI
 444  8912
 445  8912 3E 07        	ld a,%00000111
 446  8914 CD 57 99     	call Cls
 447  8917
 448  8917 CD AB 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 449  891A
 450  891A              ; INICIALIZACIÓN.
 451  891A
 452  891A CD CB 87     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 453  891D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 454  891D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 455  891D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 456  891D CD DD 87     4 call Prepara_cajas_de_entidades
 457  8920
 458  8920 CD 36 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 459  8923              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 460  8923 CD 5B 8D     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 461  8926
 462  8926 21 D0 88     	ld hl,Numero_parcial_de_entidades
 463  8929 46           	ld b,(hl)
 464  892A              ;	inc b
 465  892A              ;	dec b
 466  892A              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 467  892A
 468  892A              ;	INICIA ENTIDADES !!!!!
 469  892A
 470  892A C5           1 push bc  												; Guardo el contador de entidades.
 471  892B CD 2B 8B     	call Inicia_entidad
 472  892E C1           	pop bc
 473  892F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 474  8931
 475  8931              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 476  8931              ; (Esto se dá cuando se inicia una nueva oleada).
 477  8931
 478  8931              ;	ld a,(Ctrl_1)
 479  8931              ;	bit 3,a
 480  8931              ;	jr nz,5F											; Loop
 481  8931
 482  8931              ; 	INICIA AMADEUS !!!!!
 483  8931
 484  8931              ;3 call Restore_Amadeus
 485  8931              ;	call Inicia_Puntero_objeto
 486  8931              ;	call Draw
 487  8931
 488  8931              ;	call Guarda_movimiento_masticado	;! Provisional
 489  8931
 490  8931              ;	call Guarda_foto_registros
 491  8931              ;	call Guarda_datos_de_borrado_Amadeus
 492  8931
 493  8931              ;	ld de,Amadeus_db
 494  8931              ;	call Store_Amadeus
 495  8931
 496  8931              ; 	INICIA DISPAROS !!!!!
 497  8931
 498  8931              ;	call Inicia_Puntero_Disparo_Entidades
 499  8931              ;	call Inicia_Puntero_Disparo_Amadeus
 500  8931
 501  8931              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 502  8931
 503  8931 CD 36 8C     5 call Inicia_punteros_de_cajas
 504  8934 CD 5B 8D     	call Restore_entidad
 505  8937
 506  8937 3A C6 88     	ld a,(Ctrl_1)
 507  893A CB 5F        	bit 3,a
 508  893C 28 07        	jr z,6F
 509  893E
 510  893E              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 511  893E
 512  893E 21 C6 88     	ld hl,Ctrl_1
 513  8941 CB 9E        	res 3,(hl)
 514  8943 18 07        	jr Main
 515  8945
 516  8945              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 517  8945
 518  8945 21 E5 88     6 ld hl,Ctrl_3
 519  8948 CB C6        	set 0,(hl)											; Frame completo.
 520  894A FB           	ei
 521  894B 76           	halt
 522  894C
 523  894C              ; ------------------------------------
 524  894C
 525  894C              Main
 526  894C              ;
 527  894C              ;	11/12/23
 528  894C
 529  894C              ; Aparece nueva entidad ???
 530  894C
 531  894C              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 532  894C              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 533  894C              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 534  894C              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 535  894C              ;														; _un 2º bloque.
 536  894C
 537  894C 3E 01        	ld a,1
 538  894E D3 FE        	out ($fe),a
 539  8950
 540  8950 3A FB 88     	ld a,(Clock_Entidades_en_curso)
 541  8953 47           	ld b,a
 542  8954 3A F8 88     	ld a,(Contador_de_frames)
 543  8957 B8           	cp b
 544  8958 20 18        	jr nz,13F
 545  895A
 546  895A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 547  895A              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 548  895A
 549  895A 3A D0 88     21 ld a,(Numero_parcial_de_entidades)
 550  895D 47           	ld b,a
 551  895E 3A D1 88     	ld a,(Entidades_en_curso)
 552  8961 B8           	cp b
 553  8962 28 0E        	jr z,13F
 554  8964 30 0C        	jr nc,13F
 555  8966
 556  8966 3C           	inc a
 557  8967 32 D1 88     	ld (Entidades_en_curso),a
 558  896A
 559  896A              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 560  896A
 561  896A 3A FB 88     	ld a,(Clock_Entidades_en_curso)
 562  896D              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 563  896D              ;! _ IMPREDECIBLE !!!!
 564  896D C6 64        	add 100
 565  896F 32 FB 88     	ld (Clock_Entidades_en_curso),a
 566  8972
 567  8972              ; -------------------------------------------------------------------------------------------------------------
 568  8972
 569  8972              ; Habilita disparos.
 570  8972
 571  8972 21 FD 88     13 ld hl,Disparo_Amadeus
 572  8975 11 FF 88     	ld de,CLOCK_repone_disparo_Amadeus
 573  8978 CD 28 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 574  897B
 575  897B 21 00 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 576  897E 11 02 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 577  8981 CD 28 9D     	call Habilita_disparos
 578  8984
 579  8984              ; COLISIONES.
 580  8984
 581  8984 CD 4A 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 582  8987
 583  8987              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 584  8987              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 585  8987              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 586  8987
 587  8987 AF           	xor a
 588  8988 32 EC 88     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 589  898B
 590  898B CD 36 8C     	call Inicia_punteros_de_cajas
 591  898E CD 5B 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 592  8991              ; 														; _ en DRAW.
 593  8991 3A 81 88     	ld a,(Filas)
 594  8994 A7           	and a
 595  8995 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 596  8997 CD 6D 8D     	call Incrementa_punteros_de_cajas
 597  899A 18 F2        	jr 12B
 598  899C
 599  899C              ; ---------------------------------------------------------------------------------------
 600  899C
 601  899C 3A D0 88     10 ld a,(Numero_parcial_de_entidades)
 602  899F 47               ld b,a
 603  89A0 A7           	and a
 604  89A1 20 14        	jr nz,11F
 605  89A3
 606  89A3 21 C6 88     	ld hl,Ctrl_1
 607  89A6 CB 66        	bit 4,(hl)
 608  89A8 C2 50 8A     	jp nz,16F
 609  89AB
 610  89AB              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 611  89AB
 612  89AB 21 C6 88     	ld hl,Ctrl_1
 613  89AE CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 614  89B0
 615  89B0 3A F8 88     	ld a,(Contador_de_frames)
 616  89B3 3C           	inc a
 617  89B4 32 FC 88     	ld (Activa_recarga_cajas),a
 618  89B7
 619  89B7              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 620  89B7
 621  89B7 3A D1 88     11 ld a,(Entidades_en_curso)
 622  89BA A7           	and a
 623  89BB CA 50 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 624  89BE 47           	ld b,a												; No hay entidades que gestionar.
 625  89BF
 626  89BF              ; ( Código que ejecutamos con cada entidad: ).
 627  89BF
 628  89BF              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 629  89BF
 630  89BF C5           15 push bc 												; Nº de entidades en curso.
 631  89C0
 632  89C0              ; Existe "Entidad_guía" ???.
 633  89C0              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 634  89C0
 635  89C0 3A E5 88     	ld a,(Ctrl_3)
 636  89C3 CB 4F        	bit 1,a
 637  89C5 20 11        	jr nz,22F
 638  89C7
 639  89C7              ; Almacén de "Movimientos_masticados" lleno ???
 640  89C7              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 641  89C7              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 642  89C7
 643  89C7 3A E5 88     	ld a,(Ctrl_3)
 644  89CA CB 5F        	bit 3,a
 645  89CC 20 0A        	jr nz,22F
 646  89CE
 647  89CE              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 648  89CE
 649  89CE 21 B6 88     	ld hl,Ctrl_2
 650  89D1 CB EE        	set 5,(hl)
 651  89D3 21 E5 88     	ld hl,Ctrl_3
 652  89D6 CB CE        	set 1,(hl)
 653  89D8
 654  89D8              ; Impacto ???
 655  89D8
 656  89D8 3A 9A 88     22 ld a,(Impacto)
 657  89DB A7           	and a
 658  89DC 28 31        	jr z,8F
 659  89DE
 660  89DE              ; Hay Impacto en esta entidad.
 661  89DE
 662  89DE 21 FA 88     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 663  89E1 35           	dec (hl)
 664  89E2 C2 43 8A     	jp nz,17F
 665  89E5
 666  89E5              ;! Velocidad de la animación de la explosión.
 667  89E5
 668  89E5 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 669  89E7              ;														; _,(velocidad de la explosión).
 670  89E7              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 671  89E7
 672  89E7 CD 1F 8E     	call Repone_datos_de_borrado
 673  89EA CD 74 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 674  89ED
 675  89ED              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 676  89ED
 677  89ED 3A B6 88     	ld a,(Ctrl_2)
 678  89F0 CB 4F        	bit 1,a
 679  89F2 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 680  89F4
 681  89F4              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 682  89F4
 683  89F4 3A 89 88     	ld a,(CTRL_DESPLZ)
 684  89F7 A7           	and a
 685  89F8 20 08        	jr nz,18F
 686  89FA
 687  89FA 21 84 84     	ld hl,Indice_Explosion_2x2-2
 688  89FD 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 689  8A00 18 06        	jr 19F
 690  8A02
 691  8A02 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 692  8A05 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 693  8A08
 694  8A08 21 B6 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 695  8A0B CB CE        	set 1,(hl)
 696  8A0D 18 22        	jr 7F
 697  8A0F
 698  8A0F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 699  8A0F              ; _con las coordenadas de la entidad almacenada en DRAW.
 700  8A0F
 701  8A0F 3A C6 88     8 ld a,(Ctrl_1)
 702  8A12 CB 57        	bit 2,a
 703  8A14 28 1B        	jr z,7F
 704  8A16
 705  8A16 2A EF 88     	ld hl,(Coordenadas_disparo_certero)
 706  8A19 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 707  8A1A              ;														; E contiene la coordenada_X del disparo.
 708  8A1A 2A 87 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 709  8A1D              ;														; H FILA, (Coordenada_y de la entidad).
 710  8A1D A7           	and a
 711  8A1E ED 52        	sbc hl,de
 712  8A20
 713  8A20 CD 63 92     	call Determina_resultado_comparativa
 714  8A23
 715  8A23 78           	ld a,b
 716  8A24 A7           	and a
 717  8A25 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 718  8A27
 719  8A27              ; ----- ----- -----
 720  8A27
 721  8A27 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 722  8A29 32 9A 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 723  8A2C
 724  8A2C 21 C6 88     	ld hl,Ctrl_1
 725  8A2F CB 96        	res 2,(hl)
 726  8A31
 727  8A31 CD A1 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 728  8A34
 729  8A34 3A B1 88     	ld a,(Ctrl_0)
 730  8A37 CB 67        	bit 4,a
 731  8A39 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 732  8A3B
 733  8A3B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 734  8A3B              ; [[[
 735  8A3B              ;	call Detecta_disparo_entidad
 736  8A3B              ; ]]]
 737  8A3B
 738  8A3B CD 9F 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 739  8A3E
 740  8A3E 21 B1 88     	ld hl,Ctrl_0
 741  8A41 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 742  8A43
 743  8A43 CD 1C 8D     17 call Store_Restore_cajas
 744  8A46
 745  8A46 C1           	pop bc
 746  8A47
 747  8A47 05           	dec b
 748  8A48 C2 BF 89     	jp nz,15B
 749  8A4B
 750  8A4B              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 751  8A4B              ; Hemos gestionado todas las unidades.
 752  8A4B              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 753  8A4B
 754  8A4B 21 C6 88     	ld hl,Ctrl_1
 755  8A4E CB 96        	res 2,(hl)
 756  8A50
 757  8A50 21 E5 88     16 ld hl,Ctrl_3
 758  8A53 CB C6        	set 0,(hl)											; Frame completo.
 759  8A55
 760  8A55 AF           	xor a
 761  8A56 D3 FE        	out ($fe),a
 762  8A58
 763  8A58 FB           	ei
 764  8A59 76           	halt
 765  8A5A
 766  8A5A              ; ----------------------------------------
 767  8A5A
 768  8A5A 3A C6 88     	ld a,(Ctrl_1) 										; Existe Loop?
 769  8A5D CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 770  8A5F CA 4C 89     	jp z,Main
 771  8A62
 772  8A62              ; RECARGA DE NUEVA OLEADA.
 773  8A62
 774  8A62 3A F8 88     	ld a,(Contador_de_frames)
 775  8A65 47           	ld b,a
 776  8A66 3A FC 88     	ld a,(Activa_recarga_cajas)
 777  8A69 B8           	cp b
 778  8A6A 28 08        	jr z,20F
 779  8A6C
 780  8A6C 21 C6 88     	ld hl,Ctrl_1
 781  8A6F CB E6        	set 4,(hl)
 782  8A71 C3 4C 89     	jp Main
 783  8A74
 784  8A74 21 C6 88     20 ld hl,Ctrl_1
 785  8A77 CB A6        	res 4,(hl)
 786  8A79
 787  8A79 3A F8 88     	ld a,(Contador_de_frames)
 788  8A7C
 789  8A7C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 790  8A7C              ;! _ IMPREDECIBLE !!!!
 791  8A7C
 792  8A7C C6 0A        	add 10
 793  8A7E 32 FB 88     	ld (Clock_Entidades_en_curso),a
 794  8A81
 795  8A81 C3 1D 89     	jp 4B
 796  8A84
 797  8A84 C9           	ret
 798  8A85
 799  8A85              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 800  8A85              ;
 801  8A85              ;	16/11/23
 802  8A85
 803  8A85              Gestiona_Amadeus
 804  8A85
 805  8A85              ;! Activa/desactiva impacto con Amadeus.
 806  8A85
 807  8A85              ;	ld a,(Impacto)
 808  8A85              ;	and a
 809  8A85              ;	jr nz,2F
 810  8A85
 811  8A85 CD 18 8B     	call Mov_Amadeus
 812  8A88
 813  8A88 3A B1 88     2 ld a,(Ctrl_0)
 814  8A8B CB 67        	bit 4,a
 815  8A8D 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 816  8A8F
 817  8A8F CD 9F 8B     	call Guarda_foto_entidad_a_pintar
 818  8A92 CD FF 8D     	call Guarda_datos_de_borrado_Amadeus
 819  8A95
 820  8A95 21 B1 88     1 ld hl,Ctrl_0
 821  8A98 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 822  8A9A
 823  8A9A CD EE 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 824  8A9D
 825  8A9D              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 826  8A9D
 827  8A9D CD B6 8C     	call Calcula_numero_de_disparotes
 828  8AA0
 829  8AA0 C9           	ret
 830  8AA1
 831  8AA1              ; --------------------------------------------------------------------------------------------------------------
 832  8AA1              ;
 833  8AA1              ;	15/12/23
 834  8AA1
 835  8AA1              Mov_obj
 836  8AA1
 837  8AA1 3A B6 88     	ld a,(Ctrl_2)
 838  8AA4 CB 4F        	bit 1,a
 839  8AA6 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 840  8AA8
 841  8AA8              ; Explosión:
 842  8AA8
 843  8AA8 3A B7 88     	ld a,(Frames_explosion)
 844  8AAB A7           	and a
 845  8AAC 20 1D        	jr nz,4F
 846  8AAE
 847  8AAE              ;!  Una alimaña menos!!!!!!!!!1
 848  8AAE
 849  8AAE              ; Se trataba de una Entidad_guía ???
 850  8AAE
 851  8AAE 3A B6 88     	ld a,(Ctrl_2)
 852  8AB1 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 853  8AB3 28 05        	jr z,5F
 854  8AB5
 855  8AB5 21 E5 88     	ld hl,Ctrl_3
 856  8AB8 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 857  8ABA
 858  8ABA              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 859  8ABA              ;!! _generado puede ser distinto, (aletoriedad).
 860  8ABA
 861  8ABA CD 9D 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 862  8ABD 21 D0 88     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 863  8AC0 35           	dec (hl)
 864  8AC1 21 D1 88     	ld hl,Entidades_en_curso
 865  8AC4 35           	dec (hl)
 866  8AC5 21 CF 88     	ld hl,Numero_de_entidades
 867  8AC8 35           	dec (hl)
 868  8AC9 18 4C        	jr 3F
 869  8ACB
 870  8ACB              ; -----
 871  8ACB
 872  8ACB              ;	`Movemos´ la explosión.
 873  8ACB
 874  8ACB 2A 8F 88     4 ld hl,(Puntero_DESPLZ_der)
 875  8ACE 23           	inc hl
 876  8ACF 23           	inc hl
 877  8AD0 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 878  8AD3 CD CE 8C     	call Extrae_address
 879  8AD6 22 85 88     	ld (Puntero_objeto),hl
 880  8AD9
 881  8AD9 21 B7 88     	ld hl,Frames_explosion
 882  8ADC 35           	dec (hl)
 883  8ADD
 884  8ADD 21 B1 88     	ld hl,Ctrl_0
 885  8AE0 CB E6        	set 4,(hl)
 886  8AE2
 887  8AE2 18 33        	jr 3F
 888  8AE4
 889  8AE4              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 890  8AE4
 891  8AE4 AF           2 xor a
 892  8AE5 32 B1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 893  8AE8
 894  8AE8              ; Movemos Entidades malignas.
 895  8AE8              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 896  8AE8
 897  8AE8 3A B6 88     	ld a,(Ctrl_2)
 898  8AEB CB 6F        	bit 5,a
 899  8AED 20 07        	jr nz,8F
 900  8AEF
 901  8AEF 21 B1 88     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 902  8AF2 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 903  8AF4 18 09        	jr 7F
 904  8AF6
 905  8AF6 CD D3 9E     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 906  8AF9
 907  8AF9 3A B1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 908  8AFC CB 67        	bit 4,a
 909  8AFE C8           	ret z
 910  8AFF
 911  8AFF              ; Ha habido desplazamiento de la entidad maligna.
 912  8AFF              ; Ha llegado a zona de AMADEUS ???
 913  8AFF
 914  8AFF 3A 88 88     7 ld a,(Coordenada_y)
 915  8B02 FE 14        	cp $14
 916  8B04 38 08        	jr c,1F
 917  8B06
 918  8B06              ; ---------
 919  8B06
 920  8B06              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 921  8B06              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 922  8B06
 923  8B06 F3           	di
 924  8B07 CD 13 90     	call Genera_coordenadas_X
 925  8B0A CD 4F 90     	call Compara_coordenadas_X
 926  8B0D FB           	ei
 927  8B0E
 928  8B0E              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 929  8B0E
 930  8B0E              ; ---------
 931  8B0E
 932  8B0E CD 1E 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 933  8B11 CD 1F 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 934  8B14 CD 74 8C     	call Limpia_Variables_de_borrado
 935  8B17
 936  8B17 C9           3 ret
 937  8B18
 938  8B18              ; --------------------------------------------------------------------------------------------------------------
 939  8B18              ;
 940  8B18              ;	29/1/23
 941  8B18
 942  8B18              Mov_Amadeus
 943  8B18
 944  8B18              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 945  8B18
 946  8B18 CD 0F 9A     	call Mov_right
 947  8B1B
 948  8B1B 3A B1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 949  8B1E CB 67        	bit 4,a
 950  8B20 C8           	ret z
 951  8B21
 952  8B21              ; ---------
 953  8B21
 954  8B21 CD 1E 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 955  8B24 CD 0F 8E     	call Repone_datos_de_borrado_Amadeus
 956  8B27 CD 74 8C     	call Limpia_Variables_de_borrado
 957  8B2A
 958  8B2A C9           	ret
 959  8B2B
 960  8B2B              ; -----------------------------------------------------------------------------------
 961  8B2B              ;
 962  8B2B              ;	12/12/23
 963  8B2B              ;
 964  8B2B              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 965  8B2B
 966  8B2B              Inicia_entidad
 967  8B2B
 968  8B2B              ; Averiguamos el tipo de entidad.
 969  8B2B
 970  8B2B 3A 80 88     	ld a,(Tipo)
 971  8B2E 3D           	dec a
 972  8B2F 28 02        	jr z,Entidad_tipo_1
 973  8B31 18 FE        	jr $
 974  8B33
 975  8B33              Entidad_tipo_1
 976  8B33
 977  8B33 21 E6 88     	ld hl,Ctrl_4
 978  8B36 CB 46        	bit 0,(hl)
 979  8B38 20 FE        	jr nz,$
 980  8B3A
 981  8B3A CB E6        	set 4,(hl)											; Activa FLAG. Indica que el Almacen_de_mov_masticados de la Entidad_1 está completo.
 982  8B3C
 983  8B3C              ; Inicializa el puntero (Puntero_indice_mov).
 984  8B3C
 985  8B3C CD 44 A0     	call Inicializa_Puntero_indice_mov
 986  8B3F
 987  8B3F              ; Construimos los movimientos masticados de este tipo de entidad.
 988  8B3F
 989  8B3F CD 4C 8B     	call Construye_movimientos_masticados_entidad
 990  8B42
 991  8B42 18 FE        	jr $
 992  8B44
 993  8B44
 994  8B44 CD 16 71     	call Guarda_foto_registros
 995  8B47 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 996  8B48              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 997  8B48              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 998  8B48 CD 1C 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 999  8B4B C9           	ret
1000  8B4C
1001  8B4C              ; -----------------------------------------------------------------------------------
1002  8B4C              ;
1003  8B4C              ;	10/01/24
1004  8B4C              ;
1005  8B4C              ;
1006  8B4C
1007  8B4C              Construye_movimientos_masticados_entidad
1008  8B4C
1009  8B4C 2A AD 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1010  8B4F E5           	push hl
1011  8B50
1012  8B50 CD 92 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1013  8B53              ;															; _ el (Contador_de_mov_masticados).
1014  8B53 CD D4 8C     	call Inicia_Puntero_objeto
1015  8B56 CD 6B 99     	call Recompone_posicion_inicio
1016  8B59 CD 4A 93     1 call Draw
1017  8B5C CD 76 8B     	call Guarda_movimiento_masticado
1018  8B5F CD D3 9E     	call Movimiento
1019  8B62
1020  8B62 3A E5 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1021  8B65 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1022  8B67 28 F0        	jr z,1B
1023  8B69
1024  8B69              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1025  8B69              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1026  8B69
1027  8B69
1028  8B69 18 FE        	jr $
1029  8B6B
1030  8B6B E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1031  8B6C 22 AD 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1032  8B6F
1033  8B6F              ;	Reinicializamos el (Contador_de_mov_masticados).
1034  8B6F
1035  8B6F 21 00 00     	ld hl,0
1036  8B72 22 AF 88     	ld (Contador_de_mov_masticados),hl
1037  8B75
1038  8B75 C9           	ret
1039  8B76
1040  8B76              ; -----------------------------------------------------------------------------------
1041  8B76              ;
1042  8B76              ;	28/12/23
1043  8B76              ;
1044  8B76              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1045  8B76              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1046  8B76
1047  8B76              Guarda_movimiento_masticado
1048  8B76
1049  8B76 ED 73 D7 88  	ld (Stack),sp
1050  8B7A ED 7B AD 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1051  8B7E
1052  8B7E E5           	push hl
1053  8B7F DD E5            push ix
1054  8B81 FD E5            push iy
1055  8B83
1056  8B83 ED 7B D7 88      ld sp,(Stack)
1057  8B87
1058  8B87              ;    push hl
1059  8B87
1060  8B87 2A AF 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1061  8B8A 23           	inc hl
1062  8B8B 22 AF 88     	ld (Contador_de_mov_masticados),hl
1063  8B8E
1064  8B8E              ;	pop hl
1065  8B8E
1066  8B8E CD 92 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1067  8B91              ;															; _ el (Contador_de_mov_masticados).
1068  8B91 C9               ret
1069  8B92
1070  8B92              ; --------------------------------------------------------------------------------------------------------------
1071  8B92              ;
1072  8B92              ;	12/1/24
1073  8B92              ;
1074  8B92              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1075  8B92
1076  8B92              Actualiza_Puntero_de_almacen_de_mov_masticados
1077  8B92
1078  8B92              ;	push hl
1079  8B92              ;	push bc
1080  8B92
1081  8B92 2A AD 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1082  8B95 01 06 00     	ld bc,6
1083  8B98 A7           	and a
1084  8B99 ED 4A        	adc hl,bc
1085  8B9B 22 AD 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1086  8B9E
1087  8B9E              ;	pop bc
1088  8B9E              ;	pop hl
1089  8B9E
1090  8B9E C9           	ret
1091  8B9F
1092  8B9F              ; --------------------------------------------------------------------------------------------------------------
1093  8B9F              ;
1094  8B9F              ;	28/12/23
1095  8B9F              ;
1096  8B9F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1097  8B9F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1098  8B9F
1099  8B9F              Guarda_foto_entidad_a_pintar
1100  8B9F
1101  8B9F 3A B1 88     	ld a,(Ctrl_0)
1102  8BA2 CB 77        	bit 6,a
1103  8BA4 28 0A        	jr z,5F
1104  8BA6
1105  8BA6              ; Guarda la foto de Amadeus.
1106  8BA6
1107  8BA6 CD 4A 93     	call Draw
1108  8BA9
1109  8BA9 CD 76 8B     	call Guarda_movimiento_masticado	;! Provisional
1110  8BAC
1111  8BAC CD 16 71     	call Guarda_foto_registros
1112  8BAF
1113  8BAF              ;	di
1114  8BAF              ;	jr $
1115  8BAF              ;	ei
1116  8BAF
1117  8BAF C9           	ret
1118  8BB0
1119  8BB0              ; ENTIDADES!
1120  8BB0              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1121  8BB0
1122  8BB0 3A E5 88     5 ld a,(Ctrl_3)
1123  8BB3 CB 5F        	bit 3,a
1124  8BB5 28 04        	jr z,1F
1125  8BB7
1126  8BB7              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1127  8BB7
1128  8BB7 CD F2 8B     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1129  8BBA C9           	ret
1130  8BBB
1131  8BBB              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1132  8BBB
1133  8BBB 3A E5 88     1 ld a,(Ctrl_3)
1134  8BBE CB 57        	bit 2,a
1135  8BC0 20 10        	jr nz,6F
1136  8BC2
1137  8BC2              ; Entidad guía o fantasma ???
1138  8BC2
1139  8BC2 3A B6 88     	ld a,(Ctrl_2)
1140  8BC5 CB 6F        	bit 5,a
1141  8BC7 20 10        	jr nz,3F
1142  8BC9
1143  8BC9              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1144  8BC9
1145  8BC9 18 EC        	jr 4B
1146  8BCB
1147  8BCB              ; ENTIDAD_GUÍA:
1148  8BCB              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1149  8BCB              ; _guardando "movimientos_masticados".
1150  8BCB
1151  8BCB 3A E5 88     2 ld a,(Ctrl_3)
1152  8BCE CB 57        	bit 2,a
1153  8BD0 28 07        	jr z,3F
1154  8BD2
1155  8BD2              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1156  8BD2              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1157  8BD2
1158  8BD2 CB 97        6 res 2,a
1159  8BD4 CB DF        	set 3,a
1160  8BD6 32 E5 88     	ld (Ctrl_3),a
1161  8BD9
1162  8BD9
1163  8BD9              ;	Esto sólo lo ejecuta una entidad guía.
1164  8BD9
1165  8BD9 CD 4A 93     3 	call Draw
1166  8BDC CD 76 8B     	call Guarda_movimiento_masticado
1167  8BDF CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1168  8BE2
1169  8BE2              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1170  8BE2              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1171  8BE2
1172  8BE2 CD E6 8B     	call Convierte_guia_en_fantasma
1173  8BE5 C9           	ret
1174  8BE6
1175  8BE6              ; --------------------------------------------------------------------------------------------------------------
1176  8BE6              ;
1177  8BE6              ;	28/12/23
1178  8BE6              ;
1179  8BE6
1180  8BE6 3A E5 88     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1181  8BE9 CB 5F        	bit 3,a
1182  8BEB C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1183  8BEC
1184  8BEC              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1185  8BEC
1186  8BEC 21 B6 88     	ld hl,Ctrl_2
1187  8BEF CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1188  8BF1
1189  8BF1 C9           	ret
1190  8BF2
1191  8BF2              ; --------------------------------------------------------------------------------------------------------------
1192  8BF2              ;
1193  8BF2              ;	21/12/23
1194  8BF2              ;
1195  8BF2              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1196  8BF2              ;
1197  8BF2              ;		IY contiene (Puntero_objeto).
1198  8BF2              ;		IX contiene el puntero de impresión.
1199  8BF2              ;		HL contiene la dirección de la rutina de impresión.
1200  8BF2              ;
1201  8BF2              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1202  8BF2              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1203  8BF2              ;	Decrementa el (Contador_de_mov_masticados)
1204  8BF2              ;
1205  8BF2              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1206  8BF2              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1207  8BF2              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1208  8BF2
1209  8BF2
1210  8BF2 ED 73 D7 88  Prepara_registros_con_mov_masticados ld (Stack),sp
1211  8BF6 ED 7B AD 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1212  8BFA
1213  8BFA FD E1        	pop iy
1214  8BFC DD E1        	pop ix
1215  8BFE E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1216  8BFF
1217  8BFF ED 73 AD 88  	ld (Puntero_de_almacen_de_mov_masticados),sp
1218  8C03 ED 7B D7 88  	ld sp,(Stack)
1219  8C07
1220  8C07 CD 16 71     	call Guarda_foto_registros
1221  8C0A
1222  8C0A E5           	push hl
1223  8C0B
1224  8C0B 2A AF 88     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1225  8C0E 23           	inc hl
1226  8C0F 22 AF 88     	ld (Contador_de_mov_masticados),hl
1227  8C12
1228  8C12              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1229  8C12
1230  8C12 ED 4B C4 88  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1231  8C16 A7           	and a
1232  8C17 ED 42        	sbc hl,bc
1233  8C19 CC E6 8B     	call z,Convierte_guia_en_fantasma
1234  8C1C
1235  8C1C E1           	pop hl
1236  8C1D
1237  8C1D C9           	ret
1238  8C1E
1239  8C1E              ; --------------------------------------------------------------------------------------------------------------
1240  8C1E              ;
1241  8C1E              ;	19/9/23
1242  8C1E
1243  8C1E              Prepara_var_pintado
1244  8C1E
1245  8C1E 21 81 88     	ld hl,Filas
1246  8C21 11 A1 88     	ld de,Variables_de_pintado
1247  8C24 01 08 00     	ld bc,8
1248  8C27 ED B0        	ldir
1249  8C29 C9           	ret
1250  8C2A
1251  8C2A              ; --------------------------------------------------------------------------------------------------------------
1252  8C2A
1253  8C2A              Repone_pintar
1254  8C2A
1255  8C2A 21 A1 88     	ld hl,Variables_de_pintado
1256  8C2D 11 81 88     	ld de,Filas
1257  8C30 01 08 00     	ld bc,8
1258  8C33 ED B0        	ldir
1259  8C35 C9           	ret
1260  8C36
1261  8C36              ; *************************************************************************************************************************************************************
1262  8C36              ;
1263  8C36              ; 8/1/23
1264  8C36              ;
1265  8C36              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1266  8C36              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1267  8C36              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1268  8C36
1269  8C36              ; Destruye HL y DE !!!!!
1270  8C36
1271  8C36              Inicia_punteros_de_cajas
1272  8C36
1273  8C36 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1274  8C39 CD CE 8C         call Extrae_address
1275  8C3C 22 C9 88         ld (Puntero_store_caja),hl
1276  8C3F 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1277  8C42 22 CD 88     	ld (Indice_restore_caja),hl
1278  8C45 CD CE 8C     	call Extrae_address
1279  8C48 22 CB 88     	ld (Puntero_restore_caja),hl
1280  8C4B C9               ret
1281  8C4C
1282  8C4C              ; *************************************************************************************************************************************************************
1283  8C4C              ;
1284  8C4C              ; 8/1/23
1285  8C4C              ;
1286  8C4C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1287  8C4C
1288  8C4C 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1289  8C4F 22 E8 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1290  8C52 C9           	ret
1291  8C53 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1292  8C56 22 EA 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1293  8C59 C9           	ret
1294  8C5A
1295  8C5A              ; -------------------------------------------------------------------------------------------------------------
1296  8C5A              ;
1297  8C5A              ; 21/9/23
1298  8C5A              ;
1299  8C5A
1300  8C5A              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1301  8C5A
1302  8C5A              Limpia_album_Amadeus
1303  8C5A
1304  8C5A 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1305  8C5D 7E           	ld a,(hl)
1306  8C5E A7           	and a
1307  8C5F C8           	ret z
1308  8C60
1309  8C60 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1310  8C63 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1311  8C66 01 0B 00     	ld bc,11
1312  8C69 AF           	xor a
1313  8C6A 77           	ld (hl),a
1314  8C6B ED B0        	ldir
1315  8C6D
1316  8C6D 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1317  8C70 22 E3 88     	ld (End_Snapshot_Amadeus),hl
1318  8C73
1319  8C73 C9           	ret
1320  8C74
1321  8C74 21 9B 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1322  8C77 11 9C 88     	ld de,Variables_de_borrado+1
1323  8C7A 01 05 00     	ld bc,5
1324  8C7D AF           	xor a
1325  8C7E 77           	ld (hl),a
1326  8C7F ED B0        	ldir
1327  8C81 C9           	ret
1328  8C82
1329  8C82              ; -------------------------------------------------------------------------------------------------------------
1330  8C82              ;
1331  8C82              ; 8/9/23
1332  8C82              ;
1333  8C82
1334  8C82              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1335  8C82              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1336  8C82
1337  8C82              Calcula_numero_de_malotes
1338  8C82
1339  8C82 21 00 70     	ld hl,Album_de_fotos
1340  8C85 EB           	ex de,hl
1341  8C86 2A DD 88     	ld hl,(Stack_snapshot)
1342  8C89
1343  8C89 06 00        	ld b,0
1344  8C8B 7D           	ld a,l
1345  8C8C 93           	sub e
1346  8C8D 28 07        	jr z,1F
1347  8C8F
1348  8C8F              ; Nº de malotes no es "0".
1349  8C8F
1350  8C8F D6 06        2 sub 6
1351  8C91 04           	inc b
1352  8C92 A7           	and a
1353  8C93 20 FA        	jr nz,2B
1354  8C95 78           	ld a,b
1355  8C96
1356  8C96 32 D2 88     1 ld (Numero_de_malotes),a
1357  8C99 C9           	ret
1358  8C9A
1359  8C9A              ; -------------------------------------------------------------------------------------------------------------
1360  8C9A              ;
1361  8C9A              ; 8/9/23
1362  8C9A              ;
1363  8C9A
1364  8C9A              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1365  8C9A              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1366  8C9A
1367  8C9A              Calcula_malotes_Amadeus
1368  8C9A
1369  8C9A 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1370  8C9D EB           	ex de,hl
1371  8C9E 2A E3 88     	ld hl,(End_Snapshot_Amadeus)
1372  8CA1
1373  8CA1 7C           	ld a,h
1374  8CA2 A7           	and a
1375  8CA3 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1376  8CA5
1377  8CA5 06 00        	ld b,0
1378  8CA7 7D           	ld a,l
1379  8CA8 93           	sub e
1380  8CA9 28 07        	jr z,1F
1381  8CAB
1382  8CAB              ; Nº de malotes no es "0".
1383  8CAB
1384  8CAB D6 06        2 sub 6
1385  8CAD 04           	inc b
1386  8CAE A7           	and a
1387  8CAF 20 FA        	jr nz,2B
1388  8CB1 78           	ld a,b
1389  8CB2
1390  8CB2 32 D2 88     1 ld (Numero_de_malotes),a
1391  8CB5 C9           	ret
1392  8CB6
1393  8CB6              ; -------------------------------------------------------------------------------------------------------------
1394  8CB6              ;
1395  8CB6              ; 28/2/23
1396  8CB6              ;
1397  8CB6
1398  8CB6              Calcula_numero_de_disparotes
1399  8CB6
1400  8CB6 21 56 70     	ld hl,Album_de_fotos_disparos
1401  8CB9 EB           	ex de,hl
1402  8CBA 2A E1 88     	ld hl,(End_Snapshot_disparos)
1403  8CBD
1404  8CBD 06 00        	ld b,0
1405  8CBF 7D           	ld a,l
1406  8CC0 93           	sub e
1407  8CC1 28 07        	jr z,1F
1408  8CC3
1409  8CC3              ; Nº de malotes no es "0".
1410  8CC3
1411  8CC3 D6 06        2 sub 6
1412  8CC5 04           	inc b
1413  8CC6 A7           	and a
1414  8CC7 20 FA        	jr nz,2B
1415  8CC9 78           	ld a,b
1416  8CCA
1417  8CCA 32 E7 88     1 ld (Numero_de_disparotes),a
1418  8CCD C9           	ret
1419  8CCE
1420  8CCE              ; *************************************************************************************************************************************************************
1421  8CCE              ;
1422  8CCE              ; 20/10/22
1423  8CCE              ;
1424  8CCE              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1425  8CCE              ;
1426  8CCE              ; Destruye el puntero y DE !!!!!
1427  8CCE
1428  8CCE 5E           Extrae_address ld e,(hl)
1429  8CCF 23           	inc hl
1430  8CD0 56           	ld d,(hl)
1431  8CD1 2B           	dec hl
1432  8CD2 EB           	ex de,hl
1433  8CD3 C9           	ret
1434  8CD4
1435  8CD4              ; *************************************************************************************************************************************************************
1436  8CD4              ;
1437  8CD4              ;	7/2/23
1438  8CD4              ;
1439  8CD4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1440  8CD4              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1441  8CD4              ;
1442  8CD4              ;   Destruye HL y BC !!!!!,
1443  8CD4              ;
1444  8CD4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1445  8CD4              ;					"0" ..... Izquierda.
1446  8CD4
1447  8CD4              Inicia_Puntero_objeto
1448  8CD4
1449  8CD4 3A 95 88     	ld a,(Cuad_objeto)
1450  8CD7 E6 01        	and 1
1451  8CD9 F5           	push af
1452  8CDA CC F8 8C     	call z,Inicia_puntero_objeto_izq
1453  8CDD F1           	pop af
1454  8CDE 28 2B        	jr z,1F
1455  8CE0 CD E5 8C     	call Inicia_puntero_objeto_der
1456  8CE3 18 26        	jr 1F
1457  8CE5
1458  8CE5              ; Arrancamos desde la parte izquierda de la pantalla.
1459  8CE5              ; Iniciamos (Indice_Sprite_der).
1460  8CE5
1461  8CE5 2A 8B 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1462  8CE8 22 8F 88     	ld (Puntero_DESPLZ_der),hl
1463  8CEB CD CE 8C     	call Extrae_address
1464  8CEE 22 85 88     	ld (Puntero_objeto),hl
1465  8CF1
1466  8CF1 2A 8D 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1467  8CF4 22 91 88     	ld (Puntero_DESPLZ_izq),hl
1468  8CF7 C9           	ret
1469  8CF8
1470  8CF8              ; Arrancamos desde la parte derecha de la pantalla.
1471  8CF8              ; Iniciamos (Indice_Sprite_izq).
1472  8CF8
1473  8CF8 2A 8D 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1474  8CFB 22 91 88     	ld (Puntero_DESPLZ_izq),hl
1475  8CFE CD CE 8C     	call Extrae_address
1476  8D01 22 85 88     	ld (Puntero_objeto),hl
1477  8D04
1478  8D04 2A 8B 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1479  8D07 22 8F 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1480  8D0A C9           	ret
1481  8D0B
1482  8D0B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1483  8D0B
1484  8D0B 21 40 83     1 ld hl,Amadeus
1485  8D0E ED 4B 85 88  	ld bc,(Puntero_objeto)
1486  8D12 B7 ED 42     	sub hl,bc
1487  8D15 C0           	ret nz
1488  8D16 21 B1 88     	ld hl,Ctrl_0
1489  8D19 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1490  8D1B C9           	ret 												; _de nuestra nave en los extremos.
1491  8D1C
1492  8D1C              ; *************************************************************************************************************************************************************
1493  8D1C              ;
1494  8D1C              ;	21/12/23
1495  8D1C              ;
1496  8D1C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1497  8D1C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1498  8D1C
1499  8D1C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1500  8D1C              ;	_de la 2ª y 3ª entidad respectivamente.
1501  8D1C
1502  8D1C              Store_Restore_cajas
1503  8D1C
1504  8D1C E5           	push hl
1505  8D1D D5           	push de
1506  8D1E C5            	push bc
1507  8D1F
1508  8D1F              ;	STORE !!!!!
1509  8D1F              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1510  8D1F
1511  8D1F F3           	di
1512  8D20 21 81 88     	ld hl,Filas
1513  8D23 ED 5B C9 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1514  8D27 01 38 00     	ld bc,56
1515  8D2A ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1516  8D2C FB           	ei
1517  8D2D
1518  8D2D              ; 	Entidad_sospechosa. 20/4/23
1519  8D2D
1520  8D2D 3A 9A 88     	ld a,(Impacto)
1521  8D30 A7           	and a
1522  8D31 28 0C        	jr z,1F
1523  8D33
1524  8D33 2A C9 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1525  8D36 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1526  8D39 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1527  8D3A ED 4A        	adc hl,bc 											; _ "0" más adelante.
1528  8D3C 22 ED 88     	ld (Entidad_sospechosa_de_colision),hl
1529  8D3F
1530  8D3F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1531  8D3F
1532  8D3F 2A CB 88     1 ld hl,(Puntero_restore_caja)
1533  8D42 7E           	ld a,(hl)
1534  8D43 A7           	and a
1535  8D44 F5           	push af
1536  8D45 28 0A        	jr z,2F
1537  8D47
1538  8D47 F3           	di
1539  8D48 11 81 88     	ld de,Filas
1540  8D4B 01 38 00     	ld bc,56
1541  8D4E ED B0        	ldir
1542  8D50 FB           	ei
1543  8D51
1544  8D51 CD 6D 8D     2 call Incrementa_punteros_de_cajas
1545  8D54
1546  8D54 F1           	pop af
1547  8D55 28 E8        	jr z,1B
1548  8D57
1549  8D57 C1           	pop bc
1550  8D58 D1           	pop de
1551  8D59 E1           	pop hl
1552  8D5A
1553  8D5A C9           	ret
1554  8D5B
1555  8D5B              ; **************************************************************************************************
1556  8D5B              ;
1557  8D5B              ;	21/12/23
1558  8D5B              ;
1559  8D5B              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1560  8D5B
1561  8D5B E5           Restore_entidad push hl
1562  8D5C D5           	push de
1563  8D5D C5            	push bc
1564  8D5E
1565  8D5E 2A C9 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1566  8D61 11 80 88     	ld de,Variables_DRAW
1567  8D64 01 38 00     	ld bc,56
1568  8D67 ED B0        	ldir
1569  8D69
1570  8D69 C1           	pop bc
1571  8D6A D1           	pop de
1572  8D6B E1           	pop hl
1573  8D6C C9           	ret
1574  8D6D
1575  8D6D              ; **************************************************************************************************
1576  8D6D              ;
1577  8D6D              ;	08/05/23
1578  8D6D              ;
1579  8D6D              ;	Incrementamos los dos punteros de entidades. (+1).
1580  8D6D
1581  8D6D              Incrementa_punteros_de_cajas
1582  8D6D
1583  8D6D 2A CB 88     	ld hl,(Puntero_restore_caja)
1584  8D70 22 C9 88     	ld (Puntero_store_caja),hl
1585  8D73 2A CD 88     	ld hl,(Indice_restore_caja)
1586  8D76 23           	inc hl
1587  8D77 23           	inc hl
1588  8D78 22 CD 88     	ld (Indice_restore_caja),hl
1589  8D7B CD CE 8C         call Extrae_address
1590  8D7E 22 CB 88         ld (Puntero_restore_caja),hl
1591  8D81 C9               ret
1592  8D82
1593  8D82              ; **************************************************************************************************
1594  8D82              ;
1595  8D82              ;	21/12/23
1596  8D82              ;
1597  8D82              ;	Restore_Amadeus
1598  8D82              ;
1599  8D82              ;	Cargamos en DRAW los parámetros de Amadeus.
1600  8D82              ;
1601  8D82
1602  8D82 E5           Restore_Amadeus	push hl
1603  8D83 D5           	push de
1604  8D84 C5            	push bc
1605  8D85 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1606  8D88 11 81 88     	ld de,Filas
1607  8D8B 01 38 00     	ld bc,56
1608  8D8E ED B0        	ldir
1609  8D90 C1           	pop bc
1610  8D91 D1           	pop de
1611  8D92 E1           	pop hl
1612  8D93 C9           	ret
1613  8D94
1614  8D94              ; *************************************************************************************************************************************************************
1615  8D94              ;
1616  8D94              ;	21/12/23
1617  8D94              ;
1618  8D94              ;	Store_Amadeus
1619  8D94              ;
1620  8D94              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1621  8D94              ;
1622  8D94              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1623  8D94              ;
1624  8D94              ;	DESTRUYE: HL y BC y DE.
1625  8D94
1626  8D94 21 81 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1627  8D97 01 38 00     	ld bc,56
1628  8D9A ED B0        	ldir
1629  8D9C C9           	ret
1630  8D9D
1631  8D9D              ; -----------------------------------------------------------
1632  8D9D              ;
1633  8D9D              ;	21/12/23
1634  8D9D              ;
1635  8D9D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1636  8D9D              ;
1637  8D9D              ;	Destruye: HL,BC,DE,A
1638  8D9D
1639  8D9D 21 81 88     Borra_datos_entidad ld hl,Filas
1640  8DA0 01 37 00     	ld bc,55
1641  8DA3 AF           	xor a
1642  8DA4 77           	ld (hl),a
1643  8DA5 11 82 88     	ld de,Filas+1
1644  8DA8 ED B0        	ldir
1645  8DAA C9           	ret
1646  8DAB
1647  8DAB              ; -----------------------------------------------------------
1648  8DAB
1649  8DAB              ; Teclado.
1650  8DAB
1651  8DAB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1652  8DAD DB FE        	in a,($fe)
1653  8DAF E6 01        	and $01
1654  8DB1 28 02        	jr z,1f
1655  8DB3 18 F6        	jr Pulsa_ENTER
1656  8DB5 C9           1 ret
1657  8DB6
1658  8DB6              ; **************************************************************************************************
1659  8DB6              ;
1660  8DB6              ; Temporización.
1661  8DB6
1662  8DB6              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1663  8DB6              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1664  8DB6              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1665  8DB6              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1666  8DB6
1667  8DB6              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1668  8DB6              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1669  8DB6              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1670  8DB6
1671  8DB6              ; A partir de $4f61 no hace falta DELAY.
1672  8DB6
1673  8DB6              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1674  8DB6
1675  8DB6 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1676  8DB9 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1677  8DBA 78           	LD A,B
1678  8DBB A7           	AND A
1679  8DBC 20 FB        	JR NZ,wait
1680  8DBE C9           	RET
1681  8DBF
1682  8DBF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1683  8DBF              ;
1684  8DBF              ;	5/3/23
1685  8DBF              ;
1686  8DBF              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1687  8DBF
1688  8DBF              Movimiento_Amadeus
1689  8DBF
1690  8DBF              ; Disparo.
1691  8DBF
1692  8DBF 3A FD 88     	ld a,(Disparo_Amadeus)
1693  8DC2 A7           	and a
1694  8DC3 20 02        	jr nz,1F
1695  8DC5 18 15        	jr 2F
1696  8DC7
1697  8DC7 3E F7        1 ld a,$f7													; "5" para disparar.
1698  8DC9 DB FE        	in a,($fe)
1699  8DCB E6 10        	and $10
1700  8DCD
1701  8DCD F5           	push af
1702  8DCE CC 76 8E     	call z,Genera_disparo
1703  8DD1 F1           	pop af
1704  8DD2 20 08        	jr nz,2F
1705  8DD4
1706  8DD4 3A FD 88     	ld a,(Disparo_Amadeus)
1707  8DD7 EE 01        	xor 1
1708  8DD9 32 FD 88     	ld (Disparo_Amadeus),a
1709  8DDC 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1710  8DDE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1711  8DE0 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1712  8DE2 CC 32 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1713  8DE5
1714  8DE5 3E F7        	ld a,$f7
1715  8DE7 DB FE        	in a,($fe)
1716  8DE9 E6 01        	and $01
1717  8DEB C8           	ret z
1718  8DEC
1719  8DEC 3E F7        	ld a,$f7
1720  8DEE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1721  8DF0 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1722  8DF2 CC 0F 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1723  8DF5 C9           	ret
1724  8DF6
1725  8DF6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1726  8DF6              ;
1727  8DF6              ;	Rutina provisional para que los malotes cagen balas.
1728  8DF6
1729  8DF6              Detecta_disparo_entidad
1730  8DF6
1731  8DF6 3A 00 89     	ld a,(Disparo_entidad)
1732  8DF9 A7           	and a
1733  8DFA C8           	ret z
1734  8DFB
1735  8DFB              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1736  8DFB
1737  8DFB              ;	ld a,$7f				; Detecta SPACE.
1738  8DFB              ;	in a,($fe)
1739  8DFB              ;	and 1
1740  8DFB              ;	ret nz
1741  8DFB
1742  8DFB CD 76 8E     	call Genera_disparo
1743  8DFE C9           	ret
1744  8DFF
1745  8DFF              ; ----------------------------------------------------------------------
1746  8DFF              ;
1747  8DFF              ;	8/9/23
1748  8DFF
1749  8DFF 2A E3 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1750  8E02 2B            	dec hl
1751  8E03 7E           	ld a,(hl)
1752  8E04 A7           	and a
1753  8E05 C8           	ret z										; Salimos si es álbum está vacío.
1754  8E06
1755  8E06 11 A0 88     	ld de,Variables_de_borrado+5
1756  8E09 01 06 00     	ld bc,6
1757  8E0C ED B8        	lddr
1758  8E0E C9           	ret
1759  8E0F
1760  8E0F              ; ----------------------------------------------------------------------
1761  8E0F              ;
1762  8E0F              ;	9/9/23
1763  8E0F
1764  8E0F              Repone_datos_de_borrado_Amadeus
1765  8E0F
1766  8E0F 21 9B 88     	ld hl,Variables_de_borrado
1767  8E12 11 AC 70     	ld de,Album_de_fotos_Amadeus
1768  8E15 01 06 00     	ld bc,6
1769  8E18 ED B0        	ldir
1770  8E1A
1771  8E1A EB           	ex de,hl
1772  8E1B 22 E3 88     	ld (End_Snapshot_Amadeus),hl
1773  8E1E
1774  8E1E C9           	ret
1775  8E1F
1776  8E1F              ; ----------------------------------------------------------------------
1777  8E1F              ;
1778  8E1F              ;	27/10/23
1779  8E1F              ;
1780  8E1F
1781  8E1F              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1782  8E1F              ;	_ Album_de_fotos correspondiente.
1783  8E1F
1784  8E1F              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1785  8E1F              ;	_ durante el proceso de escritura.
1786  8E1F
1787  8E1F              Repone_datos_de_borrado
1788  8E1F
1789  8E1F F3           	di
1790  8E20 ED 5B DD 88  	ld de,(Stack_snapshot)
1791  8E24 21 9B 88     	ld hl,Variables_de_borrado
1792  8E27 01 06 00     	ld bc,6
1793  8E2A ED B0        	ldir
1794  8E2C FB           	ei
1795  8E2D
1796  8E2D EB           	ex de,hl
1797  8E2E 22 DD 88     	ld (Stack_snapshot),hl
1798  8E31
1799  8E31 C9           	ret
1800  8E32
1801  8E32              ; --------------------------------------------------------------------------------------
1802  8E32
1803  8E32              Pinta_Amadeus
1804  8E32
1805  8E32 CD 9A 8C        	call Calcula_malotes_Amadeus
1806  8E35 CD DA 96     	call Extrae_foto_Amadeus
1807  8E38 CD 5A 8C     	call Limpia_album_Amadeus
1808  8E3B
1809  8E3B C9           	ret
1810  8E3C
1811  8E3C              Pinta_entidades
1812  8E3C
1813  8E3C              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1814  8E3C
1815  8E3C 3A E5 88     	ld a,(Ctrl_3)
1816  8E3F CB 47        	bit 0,a
1817  8E41 C8           	ret z
1818  8E42
1819  8E42 CD 82 8C     	call Calcula_numero_de_malotes
1820  8E45 CD 58 96     	call Extrae_foto_entidades
1821  8E48 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1822  8E4B
1823  8E4B C9           	ret
1824  8E4C
1825  8E4C              ; -----------------------------------------------------------------------------------
1826  8E4C              ;
1827  8E4C              ;	10/12/23
1828  8E4C              ;
1829  8E4C              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1830  8E4C
1831  8E4C              Actualiza_relojes
1832  8E4C
1833  8E4C 3A E5 88     	ld a,(Ctrl_3)
1834  8E4F CB 47        	bit 0,a
1835  8E51 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1836  8E52
1837  8E52 21 F8 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1838  8E55 34           	inc (hl)
1839  8E56
1840  8E56 34           	inc (hl)
1841  8E57 35           	dec (hl)
1842  8E58 C0           	ret nz
1843  8E59
1844  8E59 21 F9 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1845  8E5C 34           	inc (hl)
1846  8E5D C9           	ret
1847  8E5E
1848  8E5E              ; ---------------------------------------------------------------
1849  8E5E              ;
1850  8E5E              ;	21/12/23
1851  8E5E
1852  8E5E              Guarda_parametros_DRAW
1853  8E5E
1854  8E5E 21 81 88     	ld hl,Filas
1855  8E61 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1856  8E64 01 38 00     	ld bc,56
1857  8E67 ED B0        	ldir
1858  8E69 C9           	ret
1859  8E6A
1860  8E6A              Recupera_parametros_DRAW
1861  8E6A
1862  8E6A 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1863  8E6D 11 81 88     	ld de,Filas
1864  8E70 01 38 00     	ld bc,56
1865  8E73 ED B0        	ldir
1866  8E75 C9           	ret
1867  8E76
1868  8E76              ; ---------------------------------------------------------------
1869  8E76
1870  8E76              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E76              ; ******************************************************************************************************************************************************************************************
   2+ 8E76              ;
   3+ 8E76              ;   21/07/23
   4+ 8E76              ;
   5+ 8E76              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E76              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E76              ;
   8+ 8E76              ;
   9+ 8E76              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E76              ;
  11+ 8E76              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E76              ;               _ hacen las entidades hacia abajo.
  13+ 8E76              ;
  14+ 8E76              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E76              ;
  16+ 8E76              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E76              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E76              ;
  19+ 8E76              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E76              ;           _ la bala.
  21+ 8E76              ;
  22+ 8E76              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E76              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E76              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E76              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E76              ;           _ en el momento de generarse la bala)).
  27+ 8E76
  28+ 8E76              Genera_disparo
  29+ 8E76
  30+ 8E76              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E76              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E76              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E76              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E76              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E76              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E76              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E76
  38+ 8E76              ; Exclusiones:
  39+ 8E76
  40+ 8E76 3A 99 88         ld a,(Vel_down)
  41+ 8E79 47               ld b,a
  42+ 8E7A 3A F7 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E7D B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E7E D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E7F 3A B2 88         ld a,(Columnas)
  46+ 8E82 47               ld b,a
  47+ 8E83 3A 82 88         ld a,(Columns)
  48+ 8E86 B8               cp b
  49+ 8E87 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E88
  51+ 8E88              ; ----- ----- -----
  52+ 8E88
  53+ 8E88 3A B1 88         ld a,(Ctrl_0)
  54+ 8E8B CB 77            bit 6,a
  55+ 8E8D 20 06            jr nz,14F
  56+ 8E8F
  57+ 8E8F 3A 88 88         ld a,(Coordenada_y)
  58+ 8E92 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E94 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E95
  61+ 8E95 21 00 80     14 ld hl,Indice_disparo
  62+ 8E98 3A 89 88         ld a,(CTRL_DESPLZ)
  63+ 8E9B 4F               ld c,a
  64+ 8E9C 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E9E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E9E              ;                                            ""        ""       "f9", B="1"
  67+ 8E9E              ;                                            ""        ""       "fb", B="2"
  68+ 8E9E              ;                                            ""        ""       "fb", B="3"
  69+ 8E9E A7               and a
  70+ 8E9F 28 10            jr z,1F
  71+ 8EA1 E6 01            and 1
  72+ 8EA3 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EA4
  74+ 8EA4 79               ld a,c
  75+ 8EA5 16 F9            ld d,$f9
  76+ 8EA7 23           2 inc hl
  77+ 8EA8 23               inc hl
  78+ 8EA9 04               inc b
  79+ 8EAA BA               cp d
  80+ 8EAB 28 04            jr z,1F
  81+ 8EAD 14               inc d
  82+ 8EAE 14               inc d
  83+ 8EAF 18 F6            jr 2B
  84+ 8EB1
  85+ 8EB1 CD CE 8C     1 call Extrae_address
  86+ 8EB4 E5               push hl
  87+ 8EB5 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EB7 DD 21 20 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EBB
  90+ 8EBB              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EBB              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EBB
  93+ 8EBB 3A B1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EBE CB 77            bit 6,a
  95+ 8EC0 20 04            jr nz,19F
  96+ 8EC2
  97+ 8EC2 AF               xor a
  98+ 8EC3 32 00 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EC6
 100+ 8EC6 3A 95 88     19 ld a,(Cuad_objeto)
 101+ 8EC9 FE 02            cp 2
 102+ 8ECB 38 66            jr c,3F
 103+ 8ECD 28 64            jr z,3F
 104+ 8ECF
 105+ 8ECF              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8ECF
 107+ 8ECF E6 01            and 1
 108+ 8ED1 28 30            jr z,4F
 109+ 8ED3
 110+ 8ED3              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8ED3              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8ED3              ;
 113+ 8ED3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8ED3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8ED3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8ED3
 117+ 8ED3 2A 83 88     	ld hl,(Posicion_actual)
 118+ 8ED6
 119+ 8ED6              ;   Amadeus o entidad ???.
 120+ 8ED6
 121+ 8ED6 3A B1 88         ld a,(Ctrl_0)
 122+ 8ED9 CB 77            bit 6,a
 123+ 8EDB 28 0A            jr z,8F
 124+ 8EDD
 125+ 8EDD              ; 	Dispara Amadeus.
 126+ 8EDD
 127+ 8EDD 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EDF CD 49 96         call PreviousScan
 129+ 8EE2 CD 49 96         call PreviousScan
 130+ 8EE5
 131+ 8EE5              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EE5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EE5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EE5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EE5
 136+ 8EE5 18 11            jr 10F
 137+ 8EE7
 138+ 8EE7              ; 	Dispara Entidad.
 139+ 8EE7
 140+ 8EE7 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EEA              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EEA
 143+ 8EEA              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EEA              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EEA
 146+ 8EEA C5               push bc
 147+ 8EEB 06 10            ld b,16
 148+ 8EED CD 3A 96     9 call NextScan
 149+ 8EF0 10 FB            djnz 9B
 150+ 8EF2 C1               pop bc
 151+ 8EF3 CD 5D 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EF6 18 06            jr 17F
 153+ 8EF8
 154+ 8EF8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EF8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EF8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EF8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EF8
 159+ 8EF8 CD 5D 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EFB CD D2 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EFE              ;                                                      ; _al generar el disparo.
 162+ 8EFE
 163+ 8EFE              ; 	LLegados a este punto tendremos:
 164+ 8EFE              ;
 165+ 8EFE              ;       Puntero_objeto_disparo en IY.
 166+ 8EFE              ;       Rutinas_de_impresion en IX.
 167+ 8EFE              ;       Puntero_de_impresion en HL.
 168+ 8EFE              ;       Impacto/Dirección en BC.
 169+ 8EFE
 170+ 8EFE CD 65 8F     17 call Almacena_disparo
 171+ 8F01 18 52            jr 6F                                             ; RET.
 172+ 8F03
 173+ 8F03              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F03              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F03              ;
 176+ 8F03              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F03              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F03              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F03
 180+ 8F03 2A 83 88     4 ld hl,(Posicion_actual)
 181+ 8F06
 182+ 8F06              ;   Amadeus o entidad ???.
 183+ 8F06
 184+ 8F06 3A B1 88         ld a,(Ctrl_0)
 185+ 8F09 CB 77            bit 6,a
 186+ 8F0B 28 0A            jr z,11F
 187+ 8F0D
 188+ 8F0D              ; 	Dispara Amadeus.
 189+ 8F0D
 190+ 8F0D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F0F CD 49 96         call PreviousScan
 192+ 8F12 CD 49 96         call PreviousScan
 193+ 8F15
 194+ 8F15              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F15              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F15              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F15              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F15
 199+ 8F15 18 11            jr 13F
 200+ 8F17
 201+ 8F17              ; 	Dispara Entidad.
 202+ 8F17
 203+ 8F17 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F1A              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F1A
 206+ 8F1A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F1A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F1A
 209+ 8F1A C5               push bc
 210+ 8F1B 06 10            ld b,16
 211+ 8F1D CD 3A 96     12 call NextScan
 212+ 8F20 10 FB            djnz 12B
 213+ 8F22 C1               pop bc
 214+ 8F23
 215+ 8F23 CD 56 8F         call Ajusta_disparo_parte_derecha
 216+ 8F26 18 06            jr 18F
 217+ 8F28
 218+ 8F28              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F28              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F28              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F28              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F28
 223+ 8F28 CD 56 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F2B CD D2 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F2E              ;                                                       ; _al generar el disparo.
 226+ 8F2E
 227+ 8F2E              ; LLegados a este punto tendremos:
 228+ 8F2E              ;
 229+ 8F2E              ;       Puntero_objeto_disparo en IY.
 230+ 8F2E              ;       Rutinas_de_impresion en IX.
 231+ 8F2E              ;       Puntero_de_impresion en HL.
 232+ 8F2E              ;       Impacto/Dirección en BC.
 233+ 8F2E
 234+ 8F2E CD 65 8F     18 call Almacena_disparo
 235+ 8F31 18 22            jr 6F                                               ; RET.
 236+ 8F33
 237+ 8F33              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F33
 239+ 8F33 28 11        3 jr z,5F
 240+ 8F35
 241+ 8F35              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F35              ;
 243+ 8F35              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F35              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F35              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F35              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F35
 248+ 8F35              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F35              ;	   ""        ""       "f9", B="1"
 250+ 8F35              ;	   ""        ""       "fb", B="2"
 251+ 8F35              ; 	   ""        ""       "fb", B="3"
 252+ 8F35
 253+ 8F35 2A 83 88     	ld hl,(Posicion_actual)
 254+ 8F38 CD 3A 96     	call NextScan
 255+ 8F3B
 256+ 8F3B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F3B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F3B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F3B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F3B
 261+ 8F3B CD 5D 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F3E
 263+ 8F3E              ; 	No se produce impacto. B="$80"
 264+ 8F3E              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F3E
 266+ 8F3E 01 80 80         ld bc,$8080
 267+ 8F41
 268+ 8F41              ; 	LLegados a este punto tendremos:
 269+ 8F41              ;
 270+ 8F41              ;       Puntero_objeto_disparo en IY.
 271+ 8F41              ;       Rutinas_de_impresion en IX.
 272+ 8F41              ;       Puntero_de_impresion en HL.
 273+ 8F41              ;       Impacto/Dirección en BC.
 274+ 8F41
 275+ 8F41 CD 65 8F         call Almacena_disparo
 276+ 8F44 18 0F            jr 6F                                           ; RET.
 277+ 8F46
 278+ 8F46              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F46              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F46              ;
 281+ 8F46              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F46              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F46              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F46              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F46
 286+ 8F46 2A 83 88     5 ld hl,(Posicion_actual)
 287+ 8F49 CD 3A 96     	call NextScan
 288+ 8F4C
 289+ 8F4C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F4C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F4C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F4C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F4C
 294+ 8F4C CD 56 8F         call Ajusta_disparo_parte_derecha
 295+ 8F4F
 296+ 8F4F              ; 	No se produce impacto. B="$80"
 297+ 8F4F              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F4F
 299+ 8F4F 01 80 80     15 ld bc,$8080
 300+ 8F52
 301+ 8F52              ; 	LLegados a este punto tendremos:
 302+ 8F52              ;
 303+ 8F52              ;       Puntero_objeto_disparo en IY.
 304+ 8F52              ;       Rutinas_de_impresion en IX.
 305+ 8F52              ;       Puntero_de_impresion en HL.
 306+ 8F52              ;       Impacto/Dirección en BC.
 307+ 8F52
 308+ 8F52 CD 65 8F         call Almacena_disparo
 309+ 8F55
 310+ 8F55 C9           6 ret
 311+ 8F56
 312+ 8F56              ; ----------------------------------------------------------------
 313+ 8F56              ;
 314+ 8F56              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F56              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F56              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F56
 318+ 8F56 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F57 FE 02            cp 2
 320+ 8F59 38 01            jr c,1F
 321+ 8F5B 23               inc hl
 322+ 8F5C C9           1 ret
 323+ 8F5D
 324+ 8F5D 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F5E FE 01        	cp 1
 326+ 8F60 20 01        	jr nz,1F
 327+ 8F62 2B           	dec hl
 328+ 8F63 2B           1 dec hl
 329+ 8F64 C9               ret
 330+ 8F65
 331+ 8F65              ; ----------------------------------------------------------------
 332+ 8F65              ;
 333+ 8F65              ;   25/02/23
 334+ 8F65              ;
 335+ 8F65              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F65              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F65              ;
 338+ 8F65              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F65              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F65
 341+ 8F65              Almacena_disparo
 342+ 8F65
 343+ 8F65 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F66 F1               pop af
 345+ 8F67 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F68
 347+ 8F68 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F69 E6 01            and 1
 349+ 8F6B 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F6D              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F6D              ; 	Dispara AMADEUS.
 352+ 8F6D
 353+ 8F6D              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F6D              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F6D              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F6D              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F6D
 358+ 8F6D C5               push bc
 359+ 8F6E 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F71 2A EA 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F74 A7               and a
 362+ 8F75 ED 42            sbc hl,bc
 363+ 8F77 CC 53 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F7A C1               pop bc
 365+ 8F7B 28 54            jr z,4F
 366+ 8F7D
 367+ 8F7D 2A EA 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F80 23               inc hl
 369+ 8F81 23               inc hl
 370+ 8F82 22 EA 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F85              ;                                                   ; _ Disparo_(+1).
 372+ 8F85 18 18            jr 2F
 373+ 8F87
 374+ 8F87              ; Dispara una entidad.
 375+ 8F87
 376+ 8F87 C5           1 push bc
 377+ 8F88 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F8B 2A E8 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F8E A7               and a
 380+ 8F8F ED 42            sbc hl,bc
 381+ 8F91 CC 4C 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F94 C1               pop bc
 383+ 8F95 28 3A            jr z,4F
 384+ 8F97
 385+ 8F97 2A E8 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F9A 23               inc hl
 387+ 8F9B 23               inc hl
 388+ 8F9C 22 E8 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F9F              ;                                                   ; _ Disparo_(+1).
 390+ 8F9F CD CE 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FA2              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FA2              ;
 393+ 8FA2              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FA2              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FA2              ;                                                     Puntero_de_impresion en HL.
 396+ 8FA2              ;                                                     Impacto/Dirección en BC.
 397+ 8FA2
 398+ 8FA2 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FA3 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FA4 23               inc hl                                          ; _ al siguiente.
 401+ 8FA5 A7               and a
 402+ 8FA6 20 C0            jr nz,3B
 403+ 8FA8
 404+ 8FA8 08               ex af,af
 405+ 8FA9 ED 73 D7 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FAD F9               ld sp,hl
 407+ 8FAE
 408+ 8FAE DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FB0 F5               push af                                         ; Puntero de impresión.
 410+ 8FB1 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FB3 C5               push bc                                         ; Control.
 412+ 8FB4
 413+ 8FB4 ED 7B D7 88      ld sp,(Stack)
 414+ 8FB8
 415+ 8FB8              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FB8
 417+ 8FB8 21 C6 88     	ld hl,Ctrl_1
 418+ 8FBB CB C6        	set 0,(hl)
 419+ 8FBD
 420+ 8FBD DD E5        	push ix
 421+ 8FBF E1               pop hl
 422+ 8FC0 F5               push af
 423+ 8FC1 DD E1            pop ix
 424+ 8FC3
 425+ 8FC3 CD 16 71     	call Guarda_foto_registros
 426+ 8FC6
 427+ 8FC6 21 C6 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FC9 CB 86        	res 0,(hl)
 429+ 8FCB
 430+ 8FCB              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FCB              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FCB
 433+ 8FCB CD 53 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FCE CD 4C 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FD1
 436+ 8FD1 C9           4 ret
 437+ 8FD2
 438+ 8FD2              ; ----------------------------------------------------------------
 439+ 8FD2              ;
 440+ 8FD2              ;   4/3/23
 441+ 8FD2              ;
 442+ 8FD2              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FD2              ;   _ al generarse el disparo.
 444+ 8FD2              ;
 445+ 8FD2              ;       "$80" ..... No se produce colisión.
 446+ 8FD2              ;       "$81" ..... Se produce colisión.
 447+ 8FD2              ;
 448+ 8FD2              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FD2              ;         _ que forman el disparo.
 450+ 8FD2
 451+ 8FD2
 452+ 8FD2              Comprueba_Colision
 453+ 8FD2
 454+ 8FD2              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FD2
 456+ 8FD2 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FD4 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FD5
 459+ 8FD5 CD 0B 90         call Modifica_H_Velocidad_disparo
 460+ 8FD8
 461+ 8FD8 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FD9 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FDB 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FDD
 465+ 8FDD 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FDF CD FB 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FE2
 468+ 8FE2 7B               ld a,e
 469+ 8FE3 E6 01            and 1
 470+ 8FE5 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FE7              ;                                                  ; _ para activar IMPACTO.
 472+ 8FE7 E1               pop hl
 473+ 8FE8 E5               push hl
 474+ 8FE9 CD 3A 96         call NextScan
 475+ 8FEC
 476+ 8FEC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FED FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FEF 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FF1              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FF1 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FF3 CD FB 8F         call Bucle_2
 482+ 8FF6
 483+ 8FF6 43           1 ld b,e
 484+ 8FF7 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FF8 FD E1            pop iy
 486+ 8FFA C9               ret
 487+ 8FFB
 488+ 8FFB              ; ---------- ----------
 489+ 8FFB
 490+ 8FFB 06 02        Bucle_2 ld b,2
 491+ 8FFD FD 7E 00     2 ld a,(iy)
 492+ 9000 A6               and (hl)
 493+ 9001 28 02            jr z,1F
 494+ 9003 1E 81            ld e,$81
 495+ 9005 23           1 inc hl
 496+ 9006 FD 23            inc iy
 497+ 9008 10 F3            djnz 2B
 498+ 900A C9               ret
 499+ 900B
 500+ 900B              ; ---------- ----------
 501+ 900B              ;
 502+ 900B              ;   21/7/23
 503+ 900B
 504+ 900B              Modifica_H_Velocidad_disparo
 505+ 900B
 506+ 900B 3A F7 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 900E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9010 D0               ret nc                                         ; _ incrementamos H.
 509+ 9011 24               inc h
 510+ 9012
 511+ 9012 C9               ret
 512+ 9013
 513+ 9013              ; -------------------------------------------------------------------------------------------------------------
 514+ 9013              ;
 515+ 9013              ;   04/12/23
 516+ 9013              ;
 517+ 9013              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9013              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9013              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9013              ;
 521+ 9013              ;   MODIFICA: HL,DE,B y A.
 522+ 9013
 523+ 9013              Genera_coordenadas_X
 524+ 9013
 525+ 9013              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9013              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9013
 528+ 9013              ;   Limpiamos almacenes.
 529+ 9013
 530+ 9013 CD 44 90         call Limpia_Coordenadas_X
 531+ 9016
 532+ 9016              ;   Almacenamos coordenadas X.
 533+ 9016
 534+ 9016              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9016
 536+ 9016 2A AB 88         ld hl,(Puntero_de_impresion)
 537+ 9019 11 F4 88         ld de,Coordenadas_X_Entidad
 538+ 901C 06 02            ld b,2
 539+ 901E
 540+ 901E 3A 89 88         ld a,(CTRL_DESPLZ)
 541+ 9021 A7               and a
 542+ 9022 28 01            jr z,1F
 543+ 9024 04               inc b
 544+ 9025
 545+ 9025 CD 3B 90     1 call Guarda_coordenadas_X
 546+ 9028
 547+ 9028              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9028
 549+ 9028 2A AD 85         ld hl,(p.imp.amadeus)
 550+ 902B 11 F1 88         ld de,Coordenadas_X_Amadeus
 551+ 902E 06 02            ld b,2
 552+ 9030
 553+ 9030 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 9033 A7               and a
 555+ 9034 28 01            jr z,2F
 556+ 9036 04               inc b
 557+ 9037
 558+ 9037 CD 3B 90     2 call Guarda_coordenadas_X
 559+ 903A
 560+ 903A              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 903A
 562+ 903A C9               ret
 563+ 903B
 564+ 903B              ; ----- ----- ----- ----- -----
 565+ 903B
 566+ 903B 7D           Guarda_coordenadas_X  ld a,l
 567+ 903C E6 1F            and $1f
 568+ 903E 12           1 ld (de),a
 569+ 903F 3C               inc a
 570+ 9040 13               inc de
 571+ 9041 10 FB            djnz 1B
 572+ 9043 C9               ret
 573+ 9044
 574+ 9044 AF           Limpia_Coordenadas_X xor a
 575+ 9045 06 06            ld b,6
 576+ 9047 21 F1 88         ld hl,Coordenadas_X_Amadeus
 577+ 904A 77           1 ld (hl),a
 578+ 904B 23               inc hl
 579+ 904C 10 FC            djnz 1B
 580+ 904E C9               ret
 581+ 904F
 582+ 904F              ; ----- ----- ----- ----- -----
 583+ 904F
 584+ 904F              Compara_coordenadas_X
 585+ 904F
 586+ 904F 06 03            ld b,3
 587+ 9051 11 F6 88         ld de,Coordenadas_X_Entidad+2
 588+ 9054
 589+ 9054 1A               ld a,(de)
 590+ 9055 A7               and a
 591+ 9056 20 01            jr nz,2F
 592+ 9058 05               dec b
 593+ 9059
 594+ 9059 1B           2 dec de
 595+ 905A 1B               dec de
 596+ 905B 21 F1 88         ld hl,Coordenadas_X_Amadeus
 597+ 905E
 598+ 905E D5           1 push de
 599+ 905F E5               push hl
 600+ 9060 C5               push bc
 601+ 9061
 602+ 9061 CD 6B 90         call Comparando
 603+ 9064
 604+ 9064 C1               pop bc
 605+ 9065 E1               pop hl
 606+ 9066 D1               pop de
 607+ 9067
 608+ 9067 13               inc de
 609+ 9068 10 F4            djnz 1B
 610+ 906A
 611+ 906A C9               ret
 612+ 906B
 613+ 906B              ; ----- ----- ----- ----- -----
 614+ 906B              ;
 615+ 906B              ;   4/12/23
 616+ 906B              ;
 617+ 906B              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 906B
 619+ 906B 06 03        Comparando ld b,3
 620+ 906D 1A               ld a,(de)
 621+ 906E 4E           2 ld c,(hl)
 622+ 906F B9               cp c
 623+ 9070 28 04            jr z,1F
 624+ 9072 23               inc hl
 625+ 9073 10 F9            djnz 2B
 626+ 9075 C9               ret
 627+ 9076
 628+ 9076 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9078 32 9A 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 907B 21 EC 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 907E CB D6            set 2,(hl)
 632+ 9080 C9               ret
 633+ 9081
 634+ 9081              ; -----------------------------------------------------------------------
 635+ 9081              ;
 636+ 9081              ;   7/12/23
 637+ 9081              ;
 638+ 9081
 639+ 9081              Detecta_colision_nave_entidad
 640+ 9081
 641+ 9081              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9081
 643+ 9081 FD 2A 85 88      ld iy,(Puntero_objeto)
 644+ 9085 2A AB 88         ld hl,(Puntero_de_impresion)
 645+ 9088
 646+ 9088 E5               push hl
 647+ 9089
 648+ 9089              ; ----- ----- -----
 649+ 9089 1E 00            ld e,0                                         ; Indica impacto.
 650+ 908B 06 0A            ld b,10
 651+ 908D CD BD 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9090 7B               ld a,e
 653+ 9091 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9093 38 0E            jr c,3F
 655+ 9095
 656+ 9095              ; LLegados a este punto:
 657+ 9095              ;
 658+ 9095              ;   HAY COLISIÓN !!!!!.
 659+ 9095              ;
 660+ 9095              ;   .db (Impacto) de Amadeus a "1".
 661+ 9095              ;   SET el bit3 de (Impacto2).
 662+ 9095              ;
 663+ 9095              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9095
 665+ 9095 21 9A 88         ld hl,Impacto
 666+ 9098 36 01            ld (hl),1
 667+ 909A 21 EC 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 909D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 909F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 90A1
 671+ 90A1 18 18            jr 1F
 672+ 90A3
 673+ 90A3              ; -----
 674+ 90A3
 675+ 90A3 E1           3 pop hl
 676+ 90A4 CD 3A 96         call NextScan
 677+ 90A7 E5               push hl
 678+ 90A8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 90A9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 90AB 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 90AD 30 0C            jr nc,1F
 682+ 90AF              ;                                                  ; _ 2º scanline si esto es así.
 683+ 90AF 10 DC            djnz 2B
 684+ 90B1
 685+ 90B1              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 90B1
 687+ 90B1              ; LLegados a este punto:
 688+ 90B1              ;
 689+ 90B1              ;   NO HAY COLISIÓN !!!!!.
 690+ 90B1              ;
 691+ 90B1              ;   .db (Impacto) de Amadeus a "0".
 692+ 90B1              ;   RES el bit2 de (Impacto2).
 693+ 90B1              ;
 694+ 90B1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 90B1              ;   Lo colocamos a "0".
 696+ 90B1
 697+ 90B1 21 EC 88         ld hl,Impacto2
 698+ 90B4 CB 96            res 2,(hl)
 699+ 90B6 2A ED 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 90B9 36 00            ld (hl),0
 701+ 90BB
 702+ 90BB E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 90BC C9               ret
 704+ 90BD
 705+ 90BD               ; ---------- ----------
 706+ 90BD
 707+ 90BD C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 90BE 3A 82 88         ld a,(Columns)
 709+ 90C1 47               ld b,a
 710+ 90C2 FD 7E 00     2 ld a,(iy)
 711+ 90C5 BE               cp (hl)
 712+ 90C6 28 01            jr z,1F
 713+ 90C8
 714+ 90C8 1C               inc e
 715+ 90C9
 716+ 90C9 23           1 inc hl
 717+ 90CA FD 23            inc iy
 718+ 90CC 10 F4            djnz 2B
 719+ 90CE C1               pop bc
 720+ 90CF C9               ret
 721+ 90D0
 722+ 90D0              ; -------------------------------------------------------------------------------------------------------------
 723+ 90D0              ;
 724+ 90D0              ;   13/03/23
 725+ 90D0              ;
 726+ 90D0              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 90D0              ;
 728+ 90D0              ;   DESTRUYE: HL,BC,DE y A.
 729+ 90D0
 730+ 90D0 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 90D3 7E               ld a,(hl)
 732+ 90D4 A7               and a
 733+ 90D5 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 90D6
 735+ 90D6 44               ld b,h
 736+ 90D7 4D               ld c,l
 737+ 90D8 2A DF 88         ld hl,(Stack_snapshot_disparos)
 738+ 90DB E5               push hl
 739+ 90DC A7               and a
 740+ 90DD ED 42            sbc hl,bc
 741+ 90DF E5               push hl
 742+ 90E0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 90E1
 744+ 90E1 E1               pop hl
 745+ 90E2 54               ld d,h
 746+ 90E3 5D               ld e,l
 747+ 90E4 1B               dec de
 748+ 90E5 ED B8            lddr                                                ; Limpiamos.
 749+ 90E7
 750+ 90E7 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 90EA 22 DF 88         ld (Stack_snapshot_disparos),hl
 752+ 90ED
 753+ 90ED C9               ret
 754+ 90EE
 755+ 90EE              ; -------------------------------------------------------------------------------------------------------------
 756+ 90EE              ;
 757+ 90EE              ;   18/07/23
 758+ 90EE              ;
 759+ 90EE
 760+ 90EE              Motor_de_disparos
 761+ 90EE
 762+ 90EE              ; Gestiona DISPAROS DE AMADEUS.
 763+ 90EE
 764+ 90EE 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 90F1 2A EA 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 90F4
 767+ 90F4 CD CE 8C     2 call Extrae_address
 768+ 90F7 7E               ld a,(hl)
 769+ 90F8 A7               and a
 770+ 90F9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 90FB
 772+ 90FB              ; ----- ----- ----- ----- ----- -----
 773+ 90FB
 774+ 90FB C5               push bc
 775+ 90FC CD C0 91         call foto_disparo_a_borrar
 776+ 90FF
 777+ 90FF              ; Existe colisión con este disparo???
 778+ 90FF
 779+ 90FF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9100 7E               ld a,(hl)
 781+ 9101 2B               dec hl
 782+ 9102 E6 01            and 1
 783+ 9104 28 1D            jr z,9F
 784+ 9106
 785+ 9106              ;   En este punto:
 786+ 9106              ;
 787+ 9106              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9106              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9106              ;   _con la entidad).
 790+ 9106              ;
 791+ 9106              ;   Disparo_2A defw 0                                ; Control.
 792+ 9106              ;    defw 0                                          ; Puntero objeto.
 793+ 9106              ;    defw 0                                          ; Puntero de impresión.
 794+ 9106              ;    defw 0                                          ; Rutina de impresión.
 795+ 9106
 796+ 9106 E5               push hl
 797+ 9107
 798+ 9107 06 04            ld b,4
 799+ 9109 23           19 inc hl
 800+ 910A 10 FD            djnz 19B
 801+ 910C
 802+ 910C CD CE 8C         call Extrae_address
 803+ 910F CD 10 9D         call Genera_coordenadas_disparo
 804+ 9112
 805+ 9112              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9112
 807+ 9112 21 EF 88         ld hl,Coordenadas_disparo_certero
 808+ 9115 72               ld (hl),d
 809+ 9116 23               inc hl
 810+ 9117 73               ld (hl),e
 811+ 9118
 812+ 9118              ; Elimino el disparo de la base de datos.
 813+ 9118
 814+ 9118 E1               pop hl
 815+ 9119 CD 3F 92         call Elimina_disparo_de_base_de_datos
 816+ 911C 21 EC 88         ld hl,Impacto2
 817+ 911F CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9121
 819+ 9121 18 06            jr 11F
 820+ 9123
 821+ 9123 CD E9 91     9 call Mueve_disparo
 822+ 9126 CD C0 91         call foto_disparo_a_borrar
 823+ 9129
 824+ 9129 C1           11 pop bc
 825+ 912A 18 04            jr 7F
 826+ 912C
 827+ 912C              ; ----- ----- ----- ----- ----- -----
 828+ 912C
 829+ 912C ED 42        1 sbc hl,bc
 830+ 912E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9130
 832+ 9130 2A EA 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9133 23               inc hl
 834+ 9134 23               inc hl
 835+ 9135 22 EA 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9138 18 BA            jr 2B
 837+ 913A
 838+ 913A CD 53 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 913D              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 913D
 841+ 913D              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 913D
 843+ 913D 01 6E 85         ld bc,Disparo_11
 844+ 9140 2A E8 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9143
 846+ 9143 CD CE 8C     5 call Extrae_address
 847+ 9146 7E               ld a,(hl)
 848+ 9147 A7               and a
 849+ 9148 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 914A
 851+ 914A              ; ----- ----- ----- ----- ----- -----
 852+ 914A
 853+ 914A C5               push bc
 854+ 914B CD C0 91         call foto_disparo_a_borrar
 855+ 914E
 856+ 914E              ; Existe colisión con este disparo???
 857+ 914E
 858+ 914E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 914F 7E               ld a,(hl)
 860+ 9150 2B               dec hl
 861+ 9151 E6 01            and 1
 862+ 9153 28 4D            jr z,10F
 863+ 9155
 864+ 9155              ;! La colisión se produce con Amadeus???
 865+ 9155              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9155
 867+ 9155 E5               push hl
 868+ 9156
 869+ 9156 06 04            ld b,4
 870+ 9158 23           16 inc hl
 871+ 9159 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 915B
 873+ 915B CD CE 8C         call Extrae_address
 874+ 915E CD 10 9D         call Genera_coordenadas_disparo
 875+ 9161
 876+ 9161 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9162 FE 16            cp $16
 878+ 9164 38 2A            jr c,15F
 879+ 9166
 880+ 9166
 881+ 9166              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9166
 883+ 9166 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9167
 885+ 9167              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9167
 887+ 9167 2A AD 85         ld hl,(p.imp.amadeus)
 888+ 916A
 889+ 916A              ; Coordenada X de Amadeus en D.
 890+ 916A
 891+ 916A 7D               ld a,l
 892+ 916B E6 1F            and $1F
 893+ 916D 57               ld d,a
 894+ 916E
 895+ 916E 21 8A 85         ld hl,Amadeus_db+8
 896+ 9171 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9172
 898+ 9172 21 F1 88         ld hl,Coordenadas_X_Amadeus
 899+ 9175 CD 3B 90         call Guarda_coordenadas_X
 900+ 9178
 901+ 9178 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9179
 903+ 9179              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9179
 905+ 9179 06 02            ld b,2
 906+ 917B C5           20 push bc
 907+ 917C
 908+ 917C 06 03            ld b,3
 909+ 917E 21 F1 88         ld hl,Coordenadas_X_Amadeus
 910+ 9181 7E           18 ld a,(hl)
 911+ 9182 BA               cp d
 912+ 9183 20 04            jr nz,17F
 913+ 9185
 914+ 9185              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9185
 916+ 9185 C1               pop bc
 917+ 9186 E1               pop hl
 918+ 9187 18 0D            jr 14F
 919+ 9189
 920+ 9189 23           17 inc hl
 921+ 918A 10 F5            djnz 18B
 922+ 918C
 923+ 918C 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 918D
 925+ 918D C1               pop bc
 926+ 918E 10 EB            djnz 20B
 927+ 9190
 928+ 9190
 929+ 9190              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9190              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9190
 932+ 9190 E1           15 pop hl
 933+ 9191 23               inc hl
 934+ 9192 35               dec (hl)
 935+ 9193 2B               dec hl
 936+ 9194 18 0C            jr 10F
 937+ 9196
 938+ 9196              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9196              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9196
 941+ 9196 E5           14 push hl
 942+ 9197 CD 3F 92         call Elimina_disparo_de_base_de_datos
 943+ 919A 21 EC 88         ld hl,Impacto2
 944+ 919D CB CE            set 1,(hl)
 945+ 919F E1               pop hl
 946+ 91A0 18 06            jr 12F
 947+ 91A2
 948+ 91A2              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 91A2
 950+ 91A2 CD E9 91     10 call Mueve_disparo
 951+ 91A5 CD C0 91         call foto_disparo_a_borrar
 952+ 91A8 C1           12 pop bc
 953+ 91A9
 954+ 91A9 18 04            jr 8F
 955+ 91AB
 956+ 91AB              ; ----- ----- ----- ----- ----- -----
 957+ 91AB
 958+ 91AB ED 42        4 sbc hl,bc
 959+ 91AD 28 0A            jr z,6F
 960+ 91AF
 961+ 91AF 2A E8 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 91B2 23               inc hl
 963+ 91B3 23               inc hl
 964+ 91B4 22 E8 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 91B7 18 8A            jr 5B
 966+ 91B9
 967+ 91B9 CD 4C 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 91BC CD 44 90         call Limpia_Coordenadas_X
 969+ 91BF C9               ret
 970+ 91C0
 971+ 91C0              ; ------------------------------------------------------------------
 972+ 91C0
 973+ 91C0              foto_disparo_a_borrar
 974+ 91C0
 975+ 91C0 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 91C1 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 91C2 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 91C3
 979+ 91C3 E5               push hl
 980+ 91C4 23               inc hl
 981+ 91C5 23               inc hl
 982+ 91C6 ED 73 D7 88      ld (Stack),sp
 983+ 91CA F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 91CB FD E1            pop iy
 985+ 91CD DD E1            pop ix
 986+ 91CF E1               pop hl
 987+ 91D0 ED 7B D7 88      ld sp,(Stack)
 988+ 91D4 3A C6 88         ld a,(Ctrl_1)
 989+ 91D7 CB C7            set 0,a
 990+ 91D9 32 C6 88         ld (Ctrl_1),a
 991+ 91DC CD 16 71         call Guarda_foto_registros
 992+ 91DF 3A C6 88         ld a,(Ctrl_1)
 993+ 91E2 CB 87            res 0,a
 994+ 91E4 32 C6 88         ld (Ctrl_1),a
 995+ 91E7 E1               pop hl
 996+ 91E8 C9               ret
 997+ 91E9
 998+ 91E9              ;---------------------------------------------------
 999+ 91E9              ;
1000+ 91E9              ;   18/07/23
1001+ 91E9              ;
1002+ 91E9
1003+ 91E9              Mueve_disparo
1004+ 91E9
1005+ 91E9              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 91E9              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 91E9              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 91E9
1009+ 91E9 E5               push hl
1010+ 91EA
1011+ 91EA 7E               ld a,(hl)
1012+ 91EB
1013+ 91EB 06 04            ld b,4
1014+ 91ED 23           1 inc hl
1015+ 91EE 10 FD            djnz 1B
1016+ 91F0
1017+ 91F0              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 91F0
1019+ 91F0 CD CE 8C         call Extrae_address
1020+ 91F3
1021+ 91F3 E6 01            and 1
1022+ 91F5 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 91F7
1024+ 91F7              ; Disparo hacia arriba, (Amadeus).
1025+ 91F7
1026+ 91F7              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 91F7              ; _ de la dificultad.
1028+ 91F7
1029+ 91F7 CD 49 96         call PreviousScan
1030+ 91FA CD 49 96         call PreviousScan
1031+ 91FD CD 49 96         call PreviousScan
1032+ 9200 CD 49 96         call PreviousScan
1033+ 9203
1034+ 9203              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9203
1036+ 9203 7C               ld a,h
1037+ 9204 FE 40            cp $40
1038+ 9206 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9208
1040+ 9208              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9208
1042+ 9208 EB               ex de,hl
1043+ 9209 06 04            ld b,4
1044+ 920B 2B           6 dec hl
1045+ 920C 10 FD            djnz 6B
1046+ 920E
1047+ 920E CD 3F 92         call Elimina_disparo_de_base_de_datos
1048+ 9211 E1               pop hl
1049+ 9212 18 10            jr 7F
1050+ 9214
1051+ 9214              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9214              ; HL contiene el puntero de impresión del disparo.
1053+ 9214              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9214
1055+ 9214 D5           3 push de
1056+ 9215 C5               push bc
1057+ 9216
1058+ 9216 CD D2 8F         call Comprueba_Colision
1059+ 9219
1060+ 9219              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9219
1062+ 9219 78               ld a,b
1063+ 921A
1064+ 921A C1               pop bc
1065+ 921B D1               pop de
1066+ 921C
1067+ 921C EB               ex de,hl
1068+ 921D
1069+ 921D 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 921E 23               inc hl                                      ; _ movimiento.
1071+ 921F 72               ld (hl),d
1072+ 9220
1073+ 9220 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9221
1075+ 9221 23               inc hl                                      ; _ en curso.
1076+ 9222 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9223 2B               dec hl
1078+ 9224
1079+ 9224 C9           7 ret
1080+ 9225
1081+ 9225              ; Disparo hacia abajo, (Entidad).
1082+ 9225
1083+ 9225 3A F7 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 9228 47               ld b,a
1085+ 9229
1086+ 9229 CD 3A 96     4 call NextScan
1087+ 922C 10 FB            djnz 4B
1088+ 922E
1089+ 922E              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 922E
1091+ 922E 7C               ld a,h
1092+ 922F FE 58            cp $58
1093+ 9231 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9233
1095+ 9233 EB               ex de,hl
1096+ 9234 06 04            ld b,4
1097+ 9236 2B           5 dec hl
1098+ 9237 10 FD            djnz 5B
1099+ 9239
1100+ 9239 CD 3F 92         call Elimina_disparo_de_base_de_datos
1101+ 923C E1               pop hl
1102+ 923D 18 E5            jr 7B
1103+ 923F
1104+ 923F              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 923F
1106+ 923F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9242 AF               xor a
1108+ 9243 77               ld (hl),a
1109+ 9244 54               ld d,h
1110+ 9245 5D               ld e,l
1111+ 9246 13               inc de
1112+ 9247 ED B0            ldir
1113+ 9249 C9               ret
1114+ 924A
1115+ 924A              ; -----------------------------------------------------------------
1116+ 924A              ;
1117+ 924A              ;   7/12/23
1118+ 924A              ;
1119+ 924A
1120+ 924A 3A EC 88     Selector_de_impactos ld a,(Impacto2)
1121+ 924D A7               and a
1122+ 924E C8               ret z
1123+ 924F
1124+ 924F              ; Analizamos si hay impacto por disparos.
1125+ 924F
1126+ 924F              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 924F
1128+ 924F CB 4F            bit 1,a
1129+ 9251 28 07            jr z,1F
1130+ 9253
1131+ 9253 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9256 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9258 18 08            jr 2F
1134+ 925A
1135+ 925A CB 47        1 bit 0,a
1136+ 925C C8               ret z
1137+ 925D
1138+ 925D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 925D
1140+ 925D 21 C6 88         ld hl,Ctrl_1
1141+ 9260 CB D6            set 2,(hl)
1142+ 9262
1143+ 9262 C9           2 ret
1144+ 9263
1145+ 9263              ; -----------------------------------------------------------------
1146+ 9263              ;
1147+ 9263              ;   25/04/23
1148+ 9263              ;
1149+ 9263
1150+ 9263              Determina_resultado_comparativa
1151+ 9263
1152+ 9263              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9263              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9263              ;
1155+ 9263              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9263              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9263              ;
1158+ 9263              ;   SBC HL,DE
1159+ 9263
1160+ 9263              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9263              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9263
1163+ 9263              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9263              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9263
1166+ 9263
1167+ 9263 3A 95 88         ld a,(Cuad_objeto)
1168+ 9266 FE 02            cp 2
1169+ 9268 28 26            jr z,2F
1170+ 926A 38 24            jr c,2F
1171+ 926C
1172+ 926C              ; Cuadrantes 3º y 4º
1173+ 926C
1174+ 926C E6 01            and 1
1175+ 926E 28 10            jr z,4F
1176+ 9270
1177+ 9270              ; Cuadrante 3º
1178+ 9270
1179+ 9270 7C               ld a,h
1180+ 9271 06 00            ld b,0
1181+ 9273
1182+ 9273 CD FE 92         call Compara_cositas_H3
1183+ 9276
1184+ 9276 04               inc b
1185+ 9277 05               dec b
1186+ 9278 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9279
1188+ 9279 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 927A 06 00            ld b,0
1190+ 927C
1191+ 927C CD 10 93         call Compara_cositas_L3
1192+ 927F C9               ret
1193+ 9280
1194+ 9280              ; Cuadrante 4º
1195+ 9280
1196+ 9280 7C           4 ld a,h
1197+ 9281 06 00            ld b,0
1198+ 9283
1199+ 9283 CD 22 93         call Compara_cositas_H4
1200+ 9286
1201+ 9286 04               inc b
1202+ 9287 05               dec b
1203+ 9288 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9289
1205+ 9289 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 928A 06 00            ld b,0
1207+ 928C
1208+ 928C CD 38 93         call Compara_cositas_L4
1209+ 928F C9               ret
1210+ 9290
1211+ 9290              ; Cuadrantes 1º y 2º.
1212+ 9290
1213+ 9290 28 10        2 jr z,3F
1214+ 9292
1215+ 9292              ; 1er Cuadrante
1216+ 9292
1217+ 9292 7C               ld a,h
1218+ 9293 06 00            ld b,0
1219+ 9295
1220+ 9295 CD D6 92         call Compara_cositas_H1
1221+ 9298
1222+ 9298 04               inc b
1223+ 9299 05               dec b
1224+ 929A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 929B
1226+ 929B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 929C 06 00            ld b,0
1228+ 929E
1229+ 929E CD EC 92         call Compara_cositas_L1
1230+ 92A1 C9               ret
1231+ 92A2
1232+ 92A2
1233+ 92A2              ; 2º Cuadrante
1234+ 92A2
1235+ 92A2 7C           3 ld a,h
1236+ 92A3 06 00            ld b,0
1237+ 92A5
1238+ 92A5 CD B2 92         call Compara_cositas_H2
1239+ 92A8
1240+ 92A8 04               inc b
1241+ 92A9 05               dec b
1242+ 92AA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 92AB
1244+ 92AB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 92AC 06 00            ld b,0
1246+ 92AE
1247+ 92AE CD C4 92         call Compara_cositas_L2
1248+ 92B1 C9               ret
1249+ 92B2
1250+ 92B2 A7           Compara_cositas_H2 and a
1251+ 92B3 28 0D            jr z,1F
1252+ 92B5              ;    cp $fd
1253+ 92B5              ;    jr z,1F
1254+ 92B5              ;    cp $fe
1255+ 92B5              ;    jr z,1F
1256+ 92B5 FE FF            cp $ff
1257+ 92B7 28 09            jr z,1F
1258+ 92B9 FE 01            cp $01
1259+ 92BB 28 05            jr z,1F
1260+ 92BD FE 02            cp $02
1261+ 92BF 28 01            jr z,1F
1262+ 92C1 C0               ret nz
1263+ 92C2 04           1 inc b
1264+ 92C3 C9               ret
1265+ 92C4
1266+ 92C4 A7           Compara_cositas_L2 and a
1267+ 92C5 28 0D            jr z,1F
1268+ 92C7              ;    cp $fd
1269+ 92C7              ;    jr z,1F
1270+ 92C7 FE FE            cp $fe
1271+ 92C9 28 09            jr z,1F
1272+ 92CB FE FF            cp $ff
1273+ 92CD 28 05            jr z,1F
1274+ 92CF FE 01            cp $01
1275+ 92D1 28 01            jr z,1F
1276+ 92D3              ;    cp $02
1277+ 92D3              ;    jr z,1F
1278+ 92D3 C0               ret nz
1279+ 92D4 04           1 inc b
1280+ 92D5 C9               ret
1281+ 92D6
1282+ 92D6 A7           Compara_cositas_H1 and a
1283+ 92D7 28 11            jr z,1F
1284+ 92D9              ;    cp $fd
1285+ 92D9              ;    jr z,1F
1286+ 92D9              ;    cp $fe
1287+ 92D9              ;    jr z,1F
1288+ 92D9 FE FF            cp $ff
1289+ 92DB 28 0D            jr z,1F
1290+ 92DD FE 01            cp $01
1291+ 92DF 28 09            jr z,1F
1292+ 92E1 FE 02            cp $02
1293+ 92E3 28 05            jr z,1F
1294+ 92E5 FE 03            cp $03
1295+ 92E7 28 01            jr z,1F
1296+ 92E9 C0               ret nz
1297+ 92EA 04           1 inc b
1298+ 92EB C9               ret
1299+ 92EC
1300+ 92EC A7           Compara_cositas_L1 and a
1301+ 92ED 28 0D            jr z,1F
1302+ 92EF              ;    cp $fd
1303+ 92EF              ;    jr z,1F
1304+ 92EF              ;    cp $fe
1305+ 92EF              ;    jr z,1F
1306+ 92EF              ;    cp $ff
1307+ 92EF              ;    jr z,1F
1308+ 92EF FE 01            cp $01
1309+ 92F1 28 09            jr z,1F
1310+ 92F3 FE 02            cp $02
1311+ 92F5 28 05            jr z,1F
1312+ 92F7 FE 03            cp $03
1313+ 92F9 28 01            jr z,1F
1314+ 92FB C0               ret nz
1315+ 92FC 04           1 inc b
1316+ 92FD C9               ret
1317+ 92FE
1318+ 92FE A7           Compara_cositas_H3 and a
1319+ 92FF 28 0D            jr z,1F
1320+ 9301              ;    cp $fd
1321+ 9301              ;    jr z,1F
1322+ 9301 FE FE            cp $fe
1323+ 9303 28 09            jr z,1F
1324+ 9305 FE FF            cp $ff
1325+ 9307 28 05            jr z,1F
1326+ 9309 FE 01            cp $01
1327+ 930B 28 01            jr z,1F
1328+ 930D              ;    cp $02
1329+ 930D              ;    jr z,1F
1330+ 930D              ;    cp $03
1331+ 930D              ;    jr z,1F
1332+ 930D C0               ret nz
1333+ 930E 04           1 inc b
1334+ 930F C9               ret
1335+ 9310
1336+ 9310 A7           Compara_cositas_L3 and a
1337+ 9311 28 0D            jr z,1F
1338+ 9313              ;    cp $fd
1339+ 9313              ;    jr z,1F
1340+ 9313              ;    cp $fe
1341+ 9313              ;    jr z,1F
1342+ 9313              ;    cp $ff
1343+ 9313              ;    jr z,1F
1344+ 9313 FE 01            cp $01
1345+ 9315 28 09            jr z,1F
1346+ 9317 FE 02            cp $02
1347+ 9319 28 05            jr z,1F
1348+ 931B FE 03            cp $03
1349+ 931D 28 01            jr z,1F
1350+ 931F C0               ret nz
1351+ 9320 04           1 inc b
1352+ 9321 C9               ret
1353+ 9322
1354+ 9322 A7           Compara_cositas_H4 and a
1355+ 9323 28 11            jr z,1F
1356+ 9325 FE FD            cp $fd
1357+ 9327 28 0D            jr z,1F
1358+ 9329 FE FE            cp $fe
1359+ 932B 28 09            jr z,1F
1360+ 932D FE FF            cp $ff
1361+ 932F 28 05            jr z,1F
1362+ 9331 FE 01            cp $01
1363+ 9333 28 01            jr z,1F
1364+ 9335              ;    cp $02
1365+ 9335              ;    jr z,1F
1366+ 9335              ;    cp $03
1367+ 9335              ;    jr z,1F
1368+ 9335 C0               ret nz
1369+ 9336 04           1 inc b
1370+ 9337 C9               ret
1371+ 9338
1372+ 9338 A7           Compara_cositas_L4 and a
1373+ 9339 28 0D            jr z,1F
1374+ 933B              ;    cp $fd
1375+ 933B              ;    jr z,1F
1376+ 933B FE FE            cp $fe
1377+ 933D 28 09            jr z,1F
1378+ 933F FE FF            cp $ff
1379+ 9341 28 05            jr z,1F
1380+ 9343 FE 01            cp $01
1381+ 9345 28 01            jr z,1F
1382+ 9347              ;    cp $02
1383+ 9347              ;    jr z,1F
1384+ 9347              ;    cp $03
1385+ 9347              ;    jr z,1F
1386+ 9347 C0               ret nz
1387+ 9348 04           1 inc b
1388+ 9349 C9               ret
# file closed: Disparo.asm
1871  934A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 934A              ; ******************************************************************************************************************************************************************************************
   2+ 934A              ;
   3+ 934A              ; 26/06/23
   4+ 934A              ;
   5+ 934A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 934A
   7+ 934A              Draw
   8+ 934A
   9+ 934A CD 2E 96     	call Prepara_draw
  10+ 934D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 934E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 934F 28 05        	jr z,2F
  13+ 9351
  14+ 9351 3A 95 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9354 18 0C        	jr 1F
  16+ 9356
  17+ 9356 2A 93 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9359 22 83 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 935C CD EB 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 935F              ;													; _la esquina superior izquierda de la pantalla.
  21+ 935F CD A1 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 9362
  23+ 9362 3A B1 88     1 ld a,(Ctrl_0)
  24+ 9365 CB 6F        	bit 5,a
  25+ 9367 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 9369
  27+ 9369 CD 81 93     	call Comprueba_limite_horizontal
  28+ 936C CD 11 94     	call Comprueba_limite_vertical
  29+ 936F
  30+ 936F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 936F              ; -----------------------
  32+ 936F              ; -----------------------
  33+ 936F              ; -----------------------
  34+ 936F
  35+ 936F CD 5E 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 9372 CD 95 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 9375 CD F4 95     	call Define_rutina_de_impresion
  38+ 9378
  39+ 9378 3A B1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 937B CB AF        	res 5,a											; _a ser de utilidad.
  41+ 937D 32 B1 88     	ld (Ctrl_0),a
  42+ 9380
  43+ 9380 C9           	ret
  44+ 9381
  45+ 9381              ; *******************************************************************************************************************************************************************************************
  46+ 9381              ;	21/01/23
  47+ 9381              ;
  48+ 9381              ; 	Comprueba_limite_horizontal.
  49+ 9381              ;
  50+ 9381              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9381              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9381              ;
  53+ 9381              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9381              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9381              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9381              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9381
  58+ 9381
  59+ 9381
  60+ 9381 3A B1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9384 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9386 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9388 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 938A 32 B1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 938D 18 09            jr 6F
  66+ 938F CB 5F        1 bit 3,a
  67+ 9391 28 0A            jr z,2F
  68+ 9393 E6 F7            and $f7
  69+ 9395 32 B1 88         ld (Ctrl_0),a
  70+ 9398 CD EB 94     6 call Inicializacion
  71+ 939B 18 5B            jr 5F
  72+ 939D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 939E
  74+ 939E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 939E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 939E
  77+ 939E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 939F 2A B3 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 93A2 CD 4D 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 93A5 67           	ld h,a
  81+ 93A6 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 93A7 CD 4D 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 93AA 67           	ld h,a
  84+ 93AB A7           	and a
  85+ 93AC ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 93AE 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 93AF 3A 95 88     	ld a,(Cuad_objeto)
  88+ 93B2 FE 02        	cp 2
  89+ 93B4 38 1E        	jr c,3F
  90+ 93B6 28 1C        	jr z,3F
  91+ 93B8 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 93B9 28 23            jr z,7F
  93+ 93BB 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 93BD 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 93BF E1           	pop hl
  96+ 93C0
  97+ 93C0              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 93C0              ; _para indicar con E="2" en caso necesario.
  99+ 93C0
 100+ 93C0 E5               push hl
 101+ 93C1 C5               push bc
 102+ 93C2 CD 4D 99     	call calcula_tercio
 103+ 93C5 FE 01        	cp 1
 104+ 93C7 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 93C9 CD F9 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 93CC 28 26            jr z,9F
 107+ 93CE 38 24            jr c,9F
 108+ 93D0 1E 00        11 ld e,0
 109+ 93D2 18 22            jr 8F
 110+ 93D4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 93D5 28 07        	jr z, 7F
 112+ 93D7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 93D9 1E 00         	ld e,0
 114+ 93DB E1           	pop hl
 115+ 93DC 18 04        	jr 4F
 116+ 93DE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 93E0 18 15            jr 10F
 118+ 93E2
 119+ 93E2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 93E2              ; _para indicar con E="2" en caso necesario.
 121+ 93E2
 122+ 93E2 E5           4 push hl
 123+ 93E3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 93E4 CD 4D 99     	call calcula_tercio
 125+ 93E7 FE 01        	cp 1
 126+ 93E9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 93EB CD F9 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 93EE 28 04            jr z,9F
 129+ 93F0 30 02            jr nc,9F
 130+ 93F2 18 02        	jr 8F
 131+ 93F4 1E 02        9 ld e,2
 132+ 93F6 C1           8 pop bc
 133+ 93F7 E1           10 pop hl
 134+ 93F8 C9           5 ret
 135+ 93F9
 136+ 93F9              ; --------------------
 137+ 93F9              ;
 138+ 93F9              ; 25/08/22
 139+ 93F9
 140+ 93F9 CD 4D 99     Comprueba_centro call calcula_tercio
 141+ 93FC 67               ld h,a
 142+ 93FD 08           	ex af,af
 143+ 93FE FE 02        	cp 2
 144+ 9400 38 07        	jr c,1F
 145+ 9402 28 05        	jr z,1F
 146+ 9404 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9407 18 03        	jr 2F
 148+ 9409 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 940C 08           2 ex af,af
 150+ 940D A7               and a
 151+ 940E ED 42            sbc hl,bc
 152+ 9410 C9               ret
 153+ 9411
 154+ 9411              ; *********************************************************************************************************************************************************************************************
 155+ 9411              ;
 156+ 9411              ;   16/8/22
 157+ 9411              ;
 158+ 9411              ;	Comprueba_limite_vertical
 159+ 9411              ;
 160+ 9411              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9411              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9411              ;
 163+ 9411
 164+ 9411 2A 83 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9414 7D           	ld a,l
 166+ 9415 E6 1F        	and $1F
 167+ 9417 57           	ld d,a
 168+ 9418 3A B5 88     	ld a,(Limite_vertical)
 169+ 941B BA           	cp d 											; Límite - Posición.
 170+ 941C 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 941D 3A 95 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9420 CB 47        	bit 0,a
 173+ 9422 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9424
 175+ 9424              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9424
 177+ 9424 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9425 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9427
 180+ 9427              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9427              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9427
 183+ 9427 3A 87 88         ld a,(Coordenada_X)
 184+ 942A 16 0F            ld d,Centro_izquierda
 185+ 942C A7               and a
 186+ 942D 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 942E 28 1E            jr z,3F
 188+ 9430 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9432              ;                                                    ; _salimos sin modificar nada.
 190+ 9432 18 0E            jr 2F
 191+ 9434 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9435 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9437
 194+ 9437              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9437              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9437
 197+ 9437 3A 87 88         ld a,(Coordenada_X)
 198+ 943A 16 10            ld d,Centro_derecha
 199+ 943C A7               and a
 200+ 943D 92               sub d
 201+ 943E 28 0E            jr z,3F
 202+ 9440 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9442              ;                                                    ; _salimos sin modificar nada.
 204+ 9442 CB 43        2 bit 0,e
 205+ 9444 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9446 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9447 CD DB 94         call Modificaccionne
 208+ 944A C1           	pop bc
 209+ 944B CD EB 94         call Inicializacion
 210+ 944E C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 944F
 212+ 944F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 944F
 214+ 944F C5           4 push bc
 215+ 9450 01 82 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9453 0A           	ld a,(bc)
 217+ 9454 3D           	dec a
 218+ 9455 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9456 7D           	ld a,l
 220+ 9457 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9458 CB 47        	bit 0,a
 222+ 945A 28 03        	jr z,5F
 223+ 945C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 945D 18 2E        	jr 7F
 225+ 945F
 226+ 945F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 945F
 228+ 945F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9460 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9461 3A B1 88     	ld a,(Ctrl_0)
 231+ 9464 CB 4F        	bit 1,a
 232+ 9466 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9468 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9469
 235+ 9469              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9469
 237+ 9469 1C               inc e
 238+ 946A 1D               dec e
 239+ 946B 20 07            jr nz,12F
 240+ 946D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 946E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 946F 22 83 88     	ld (Posicion_actual),hl
 243+ 9472 18 44        13 jr 9F
 244+ 9474 CB 43        12 bit 0,e
 245+ 9476 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9478              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9478 C1           	pop bc
 248+ 9479 18 D3        	jr 3B
 249+ 947B 80           14 add b
 250+ 947C 6F               ld l,a
 251+ 947D 22 83 88     	ld (Posicion_actual),hl
 252+ 9480 CD DB 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9483 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9485 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9487 32 B1 88         ld (Ctrl_0),a
 256+ 948A F1           	pop af
 257+ 948B 18 2B        	jr 9F
 258+ 948D
 259+ 948D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 948D
 261+ 948D F5           7 push af
 262+ 948E 3A B1 88     	ld a,(Ctrl_0)
 263+ 9491 CB 47        	bit 0,a
 264+ 9493 20 1D        	jr nz,8F
 265+ 9495 F1           	pop af
 266+ 9496
 267+ 9496              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9496
 269+ 9496 1C           	inc e
 270+ 9497 1D               dec e
 271+ 9498 20 07            jr nz,10F
 272+ 949A 90           	sub b
 273+ 949B 6F               ld l,a
 274+ 949C 22 83 88     	ld (Posicion_actual),hl
 275+ 949F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 94A1              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 94A1 CB 43        10 bit 0,e
 278+ 94A3 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 94A5              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 94A5 C1           	pop bc
 281+ 94A6 18 A6        	jr 3B
 282+ 94A8 90           16 sub b
 283+ 94A9 6F               ld l,a
 284+ 94AA 22 83 88     	ld (Posicion_actual),hl
 285+ 94AD CD DB 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 94B0 18 06            jr 9F
 287+ 94B2 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 94B4 32 B1 88         ld (Ctrl_0),a
 289+ 94B7 F1           	pop af
 290+ 94B8 C1           9 pop bc
 291+ 94B9 1E 00        	ld e,0
 292+ 94BB CD EB 94         call Inicializacion
 293+ 94BE F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 94BF 08           	ex af,af
 295+ 94C0 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 94C1 18 8B            jr 3B
 297+ 94C3
 298+ 94C3              ; --------------------
 299+ 94C3
 300+ 94C3 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 94C5 CD 49 96     1 call PreviousScan
 302+ 94C8 10 FB            djnz 1B
 303+ 94CA 22 83 88     	ld (Posicion_actual),hl
 304+ 94CD AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 94CE C9           	ret
 306+ 94CF
 307+ 94CF              ; --------------------
 308+ 94CF
 309+ 94CF 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 94D1 CD 3A 96     1 call NextScan
 311+ 94D4 10 FB            djnz 1B
 312+ 94D6 22 83 88     	ld (Posicion_actual),hl
 313+ 94D9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 94DA C9           	ret
 315+ 94DB
 316+ 94DB              ; --------------------
 317+ 94DB              ;
 318+ 94DB              ;	22/01/23
 319+ 94DB              ;
 320+ 94DB              ;	E="1". Hemos cambiado de cuadrante.
 321+ 94DB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 94DB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 94DB
 324+ 94DB
 325+ 94DB              Modificaccionne
 326+ 94DB
 327+ 94DB 3A 95 88     	ld a,(Cuad_objeto)
 328+ 94DE FE 02        	cp 2
 329+ 94E0 CC C3 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 94E3 DC C3 94         call c,Modifica_Pos_actual
 331+ 94E6 C8           	ret z
 332+ 94E7 CD CF 94         call Modifica_Pos_actual2
 333+ 94EA C9               ret
 334+ 94EB
 335+ 94EB              ; *************************************************************************************************************************************************************************************************
 336+ 94EB              ;
 337+ 94EB              ;	13/8/22
 338+ 94EB              ;
 339+ 94EB              ;	Inicializacion
 340+ 94EB              ;
 341+ 94EB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 94EB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 94EB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 94EB              ;
 345+ 94EB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 94EB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 94EB              ;	_ desaparece/aparece.
 348+ 94EB
 349+ 94EB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 94EB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 94EB              ;
 352+ 94EB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 94EB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 94EB              ; 		   [E] ="0"
 355+ 94EB
 356+ 94EB              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 94EB
 358+ 94EB CD 4D 99     Inicializacion call calcula_tercio
 359+ 94EE 28 36        	jr z,primit
 360+ 94F0 E6 02        	and 2
 361+ 94F2 20 07        	jr nz,segmit
 362+ 94F4 7D           	ld a,l
 363+ 94F5 FE 7F        	cp $7f
 364+ 94F7 38 2D        	jr c,primit
 365+ 94F9 28 2B        	jr z,primit
 366+ 94FB CD 58 95     segmit call column
 367+ 94FE 38 13        	jr c,tercuad
 368+ 9500 3E 04        cuarcuad ld a,4
 369+ 9502 32 95 88     	ld (Cuad_objeto),a
 370+ 9505 21 20 48     	ld hl,$4820
 371+ 9508 22 B3 88     	ld (Limite_horizontal),hl
 372+ 950B 21 B5 88     	ld hl,Limite_vertical
 373+ 950E 36 0D        	ld (hl),$0d
 374+ 9510 08           	ex af,af
 375+ 9511 18 3C        	jr 1F
 376+ 9513              tercuad
 377+ 9513 3E 03        	ld a,3
 378+ 9515 32 95 88     	ld (Cuad_objeto),a
 379+ 9518 21 20 48     	ld hl,$4820
 380+ 951B 22 B3 88     	ld (Limite_horizontal),hl
 381+ 951E 21 B5 88     	ld hl,Limite_vertical
 382+ 9521 36 12        	ld (hl),$12
 383+ 9523 08           	ex af,af
 384+ 9524 18 29        	jr 1F
 385+ 9526 CD 58 95     primit call column
 386+ 9529 38 13        	jr c, primcuad
 387+ 952B              segcuad
 388+ 952B 3E 02        	ld a,2
 389+ 952D 32 95 88     	ld (Cuad_objeto),a
 390+ 9530 21 C0 4F     	ld hl,$4fc0
 391+ 9533 22 B3 88     	ld (Limite_horizontal),hl
 392+ 9536 21 B5 88     	ld hl,Limite_vertical
 393+ 9539 36 0D        	ld (hl),$0d
 394+ 953B 08           	ex af,af
 395+ 953C 18 11        	jr 1F
 396+ 953E              primcuad
 397+ 953E 3E 01        	ld a,1
 398+ 9540 32 95 88     	ld (Cuad_objeto),a
 399+ 9543 21 C0 4F     	ld hl,$4fc0
 400+ 9546 22 B3 88     	ld (Limite_horizontal),hl
 401+ 9549 21 B5 88     	ld hl,Limite_vertical
 402+ 954C 36 12        	ld (hl),$12
 403+ 954E 08           	ex af,af
 404+ 954F CD E5 9C     1 call Genera_coordenadas
 405+ 9552 21 B1 88     	ld hl,Ctrl_0
 406+ 9555 CB EE        	set 5,(hl)
 407+ 9557 C9           	ret
 408+ 9558
 409+ 9558              ; ------------------------------------------------------------------------------------------------------------------
 410+ 9558
 411+ 9558              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 9558              ;
 413+ 9558              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 9558
 415+ 9558 7D           column ld a,l
 416+ 9559 E6 1F        	and $1f
 417+ 955B FE 10         	cp $10
 418+ 955D C9            	ret
 419+ 955E
 420+ 955E              ; --------------------------------------------------------------------------------------------------------------------
 421+ 955E              ;
 422+ 955E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 955E              ;
 424+ 955E              ; 14/12/22
 425+ 955E              ;
 426+ 955E              ;	Modifica: A y BC.
 427+ 955E
 428+ 955E 3A 95 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 9561 E6 01        	and 1
 430+ 9563 28 17        	jr z,1F
 431+ 9565
 432+ 9565              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 9565
 434+ 9565 3A 87 88     	ld a,(Coordenada_X)
 435+ 9568 47           	ld b,a
 436+ 9569 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 956A 79           	ld a,c
 438+ 956B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 956C 38 08        	jr c,2F
 440+ 956E 47           	ld b,a
 441+ 956F 79           	ld a,c
 442+ 9570 90           	sub b
 443+ 9571 32 B2 88     	ld (Columnas),a
 444+ 9574 18 1B        	jr 4F
 445+ 9576 79           2 ld a,c
 446+ 9577 32 B2 88     	ld (Columnas),a
 447+ 957A 18 15        	jr 4F
 448+ 957C
 449+ 957C              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 957C
 451+ 957C 3A 87 88     1 ld a,(Coordenada_X)
 452+ 957F 81           	add c
 453+ 9580 3D           	dec a
 454+ 9581 D6 1F        	sub $1f
 455+ 9583 38 08        	jr c,3F
 456+ 9585 47           	ld b,a
 457+ 9586 79           	ld a,c
 458+ 9587 90           	sub b
 459+ 9588 32 B2 88     	ld (Columnas),a
 460+ 958B 18 04        	jr 4F
 461+ 958D 79           3 ld a,c
 462+ 958E 32 B2 88     	ld (Columnas),a
 463+ 9591 D9           4 exx
 464+ 9592 4F           	ld c,a
 465+ 9593 D9           	exx
 466+ 9594 C9            ret
 467+ 9595
 468+ 9595              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9595              ;
 470+ 9595              ;   19/7/23
 471+ 9595              ;
 472+ 9595              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9595              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9595              ;
 475+ 9595              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9595              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9595              ;
 478+ 9595              ;	DESTRUYE: HL,B Y A.
 479+ 9595
 480+ 9595 3A 95 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 9598 FE 02        	cp 2
 482+ 959A 38 18        	jr c,1F
 483+ 959C 28 16        	jr z,1F
 484+ 959E E6 01        	and 1
 485+ 95A0 28 0D        	jr z,3F
 486+ 95A2
 487+ 95A2              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 95A2
 489+ 95A2 CD E8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 95A5
 491+ 95A5 7D           9 ld a,l
 492+ 95A6 E6 1F        	and $1f
 493+ 95A8 28 2A        	jr z,7F
 494+ 95AA 2B           	dec hl
 495+ 95AB 10 F8        	djnz 9B
 496+ 95AD 18 25        	jr 7F
 497+ 95AF
 498+ 95AF              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 95AF
 500+ 95AF 2A 83 88     3 ld hl,(Posicion_actual)
 501+ 95B2 18 20        	jr 7F
 502+ 95B4
 503+ 95B4 28 14        1 jr z,2F
 504+ 95B6
 505+ 95B6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 95B6
 507+ 95B6 CD E8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 95B9
 509+ 95B9 7D           4 ld a,l
 510+ 95BA E6 1F        	and $1f
 511+ 95BC 28 03        	jr z,6F
 512+ 95BE 2B           	dec hl
 513+ 95BF 10 F8        	djnz 4B
 514+ 95C1 06 0F        6 ld b,15
 515+ 95C3 CD 49 96     5 call PreviousScan
 516+ 95C6 10 FB        	djnz 5B
 517+ 95C8 18 0A        	jr 7F
 518+ 95CA
 519+ 95CA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 95CA
 521+ 95CA CD E8 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 95CD 06 0F        	ld b,15
 523+ 95CF CD 49 96     8 call PreviousScan
 524+ 95D2 10 FB        	djnz 8B
 525+ 95D4
 526+ 95D4 E5           7 push hl
 527+ 95D5 DD E1        	pop ix
 528+ 95D7
 529+ 95D7 2A 85 88     	ld hl,(Puntero_objeto)
 530+ 95DA E5           	push hl
 531+ 95DB FD E1        	pop iy
 532+ 95DD
 533+ 95DD              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 95DD
 535+ 95DD 3A B1 88     	ld a,(Ctrl_0)
 536+ 95E0 CB 77        	bit 6,a
 537+ 95E2 C8           	ret z
 538+ 95E3
 539+ 95E3              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 95E3              ; _ entidad / Amadeus´.
 541+ 95E3
 542+ 95E3 DD 22 AD 85  	ld (p.imp.amadeus),ix
 543+ 95E7
 544+ 95E7 C9           	ret
 545+ 95E8
 546+ 95E8              ; --------------------------------------------------------------------------------------------------------------------
 547+ 95E8              ;
 548+ 95E8              ;	2/1/23
 549+ 95E8              ;
 550+ 95E8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 95E8              ;
 552+ 95E8              ;	Tras esta rutina tenemos:
 553+ 95E8              ;
 554+ 95E8              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 95E8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 95E8              ;
 557+ 95E8              ;	DESTRUYE!!!!! HL,B y A.
 558+ 95E8
 559+ 95E8 2A 83 88     Operandos ld hl,(Posicion_actual)
 560+ 95EB 3A B2 88     	ld a,(Columnas)
 561+ 95EE 3D           	dec a
 562+ 95EF 20 01        	jr nz,1F
 563+ 95F1 3C           	inc a
 564+ 95F2 47           1 ld b,a
 565+ 95F3 C9           	ret
 566+ 95F4
 567+ 95F4              ; --------------------------------------------------------------------------------------------------------------------
 568+ 95F4              ;
 569+ 95F4              ;	3/1/23
 570+ 95F4              ;
 571+ 95F4              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 95F4              ;
 573+ 95F4              ;	Destruye: A,B,HL y DE.
 574+ 95F4
 575+ 95F4              Define_rutina_de_impresion
 576+ 95F4
 577+ 95F4 3A 82 88     	ld a,(Columns)
 578+ 95F7 47           	ld b,a
 579+ 95F8 3A B2 88     	ld a,(Columnas)
 580+ 95FB B8           	cp b
 581+ 95FC 20 0D        	jr nz,2f
 582+ 95FE
 583+ 95FE              ;	La entidad se imprime entera.
 584+ 95FE
 585+ 95FE 21 1D 97     	ld hl, Indice_entidades_completas
 586+ 9601 E6 01        	and 1
 587+ 9603 28 02        	jr z,1F
 588+ 9605
 589+ 9605 23           	inc hl
 590+ 9606 23           	inc hl
 591+ 9607
 592+ 9607 CD CE 8C     1 call Extrae_address
 593+ 960A C9           	ret		;	ret
 594+ 960B
 595+ 960B              ;	La entidad no se imprime entera en pantalla.
 596+ 960B
 597+ 960B 3A 95 88     2 ld a,(Cuad_objeto)
 598+ 960E E6 01        	and 1
 599+ 9610 28 17        	jr z,3F
 600+ 9612
 601+ 9612              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 9612
 603+ 9612 21 21 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9615 3A 82 88     4 ld a,(Columns)
 605+ 9618 E6 01        	and 1
 606+ 961A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 961C
 608+ 961C 23           	inc hl
 609+ 961D 23           	inc hl
 610+ 961E
 611+ 961E 3A B2 88     	ld a,(Columnas)
 612+ 9621 E6 01        	and 1
 613+ 9623 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9625
 615+ 9625 23           	inc hl
 616+ 9626 23           	inc hl
 617+ 9627
 618+ 9627 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9629
 620+ 9629 21 27 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 962C 18 E7        	jr 4B
 622+ 962E
 623+ 962E              ; --------------------------------------------------------------------------------------------------------------------
 624+ 962E              ;
 625+ 962E              ;	Prepara_draw
 626+ 962E              ;
 627+ 962E              ;	Es una rutina de carga.
 628+ 962E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 962E              ;
 630+ 962E              ;	FUNCIONAMIENTO:
 631+ 962E              ;
 632+ 962E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 962E              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 962E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 962E              ;
 636+ 962E              ;	DESTRUYE:
 637+ 962E              ;
 638+ 962E              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 962E
 640+ 962E 21 81 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 9631 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 9632 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 9633 4E           	ld c,(hl)
 644+ 9634 2A 83 88     	ld hl,(Posicion_actual)
 645+ 9637 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 9639 C9           	ret
 647+ 963A
 648+ 963A              ;----------------------------------------------------------------------------------------------------------------
 649+ 963A              ;
 650+ 963A              ;	5/08/22
 651+ 963A              ;
 652+ 963A              ;   NextScan.
 653+ 963A              ;
 654+ 963A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 963A              ;
 656+ 963A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 963A              ;
 658+ 963A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 963A              ;
 660+ 963A              ;       DESTRUIDOS: AF y HL !!!
 661+ 963A              ;
 662+ 963A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 963A              ;
 664+ 963A
 665+ 963A 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 963B 7C               ld a,h
 667+ 963C E6 07            and 7
 668+ 963E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 963F
 670+ 963F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 9640 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 9642 6F               ld l,a
 673+ 9643 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 9644
 675+ 9644 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 9645 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 9647 67               ld h,a
 678+ 9648 C9               ret
 679+ 9649
 680+ 9649              ;----------------------------------------------------------------------------------------------------------------
 681+ 9649              ;
 682+ 9649              ;	5/08/22
 683+ 9649              ;
 684+ 9649              ;   PreviousScan.
 685+ 9649              ;
 686+ 9649              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 9649              ;
 688+ 9649              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 9649              ;
 690+ 9649              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 9649              ;
 692+ 9649              ;       DESTRUIDOS: AF y HL !!!
 693+ 9649              ;
 694+ 9649              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 9649              ;
 696+ 9649
 697+ 9649 7C           PreviousScan ld a,h
 698+ 964A 25               dec h               ; Dec H.
 699+ 964B E6 07            and 7
 700+ 964D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 964E
 702+ 964E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 964F D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 9651 6F               ld l,a
 705+ 9652 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 9653
 707+ 9653 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 9654 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 9656 67               ld h,a
 710+ 9657 C9               ret
 711+ 9658
 712+ 9658              ; -----------------------------------------------------------------------------------
 713+ 9658              ;
 714+ 9658              ;	31/7/23
 715+ 9658              ;
 716+ 9658              ;	Rutina principal de pintado de entidades.
 717+ 9658              ;	Extrae la foto del frame, (entidades).
 718+ 9658
 719+ 9658              Extrae_foto_entidades
 720+ 9658
 721+ 9658 21 01 70     	ld hl,Album_de_fotos+1
 722+ 965B 7E           	ld a,(hl)
 723+ 965C A7           	and a
 724+ 965D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 965E
 726+ 965E              ;	No hay datos, (entidades para pintar en este frame).
 727+ 965E
 728+ 965E 3A D2 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 9661 A7           	and a
 730+ 9662 C8           	ret z
 731+ 9663
 732+ 9663              ; -----------------------------------
 733+ 9663
 734+ 9663 ED 73 D7 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9667 31 00 70     	ld sp,Album_de_fotos
 736+ 966A
 737+ 966A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 966C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 966D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 966E
 741+ 966E ED 73 D9 88  	ld (Stack_2),sp
 742+ 9672 ED 7B D7 88  	ld sp,(Stack)
 743+ 9676
 744+ 9676              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9676
 746+ 9676 3E CD        	ld a,$cd
 747+ 9678 32 80 96     	ld (Imprime),a
 748+ 967B EB           	ex de,hl
 749+ 967C 22 81 96     	ld (Imprime+1),hl
 750+ 967F EB           	ex de,hl
 751+ 9680
 752+ 9680              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 9680
 754+ 9680 00 00 00     Imprime db 0,0,0
 755+ 9683
 756+ 9683 ED 73 D7 88  	ld (Stack),sp
 757+ 9687
 758+ 9687 3A D2 88     	ld a,(Numero_de_malotes)
 759+ 968A 3D           	dec a
 760+ 968B 28 09        	jr z,1F
 761+ 968D 32 D2 88      	ld (Numero_de_malotes),a
 762+ 9690
 763+ 9690 ED 7B D9 88  	ld sp,(Stack_2)
 764+ 9694 18 D4        	jr 2B
 765+ 9696
 766+ 9696 AF           1 xor a
 767+ 9697 32 D9 88     	ld (Stack_2),a
 768+ 969A
 769+ 969A C9           	ret
 770+ 969B
 771+ 969B              ; -----------------------------------------------------------------------------------
 772+ 969B              ;
 773+ 969B              ;	28/2/23
 774+ 969B              ;
 775+ 969B              ;	Pinta los disparos generados.
 776+ 969B
 777+ 969B              Extrae_foto_disparos
 778+ 969B
 779+ 969B 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 969E 7E               ld a,(hl)
 781+ 969F A7               and a
 782+ 96A0 C8               ret z
 783+ 96A1
 784+ 96A1 3A E7 88     	ld a,(Numero_de_disparotes)
 785+ 96A4 A7           	and a
 786+ 96A5 C8           	ret z
 787+ 96A6 ED 73 D7 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 96AA 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 96AD
 790+ 96AD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 96AF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 96B0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 96B1
 794+ 96B1 ED 73 D9 88  	ld (Stack_2),sp
 795+ 96B5 ED 7B D7 88  	ld sp,(Stack)
 796+ 96B9
 797+ 96B9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 96B9
 799+ 96B9 3E CD        	ld a,$cd
 800+ 96BB 32 C3 96     	ld (Imprime2),a
 801+ 96BE EB           	ex de,hl
 802+ 96BF 22 C4 96     	ld (Imprime2+1),hl
 803+ 96C2 EB           	ex de,hl
 804+ 96C3
 805+ 96C3              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 96C3
 807+ 96C3 00 00 00     Imprime2 db 0,0,0
 808+ 96C6
 809+ 96C6 3A E7 88     	ld a,(Numero_de_disparotes)
 810+ 96C9 3D           	dec a
 811+ 96CA 28 09        	jr z,1F
 812+ 96CC 32 E7 88      	ld (Numero_de_disparotes),a
 813+ 96CF
 814+ 96CF ED 7B D9 88  	ld sp,(Stack_2)
 815+ 96D3 18 D8        	jr 2B
 816+ 96D5
 817+ 96D5 AF           1 xor a
 818+ 96D6 32 D9 88     	ld (Stack_2),a
 819+ 96D9 C9           	ret
 820+ 96DA
 821+ 96DA              ; -----------------------------------------------------------------------------------
 822+ 96DA              ;
 823+ 96DA              ;	4/9/23
 824+ 96DA              ;
 825+ 96DA              ;	Rutina principal de pintado de Amadeus.
 826+ 96DA              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 96DA
 828+ 96DA 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 96DD 7E           	ld a,(hl)
 830+ 96DE A7           	and a
 831+ 96DF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 96E0
 833+ 96E0 3A D2 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 96E3 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 96E4 C8           	ret z
 836+ 96E5
 837+ 96E5              ; -----------------------------------
 838+ 96E5
 839+ 96E5 ED 73 D7 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 96E9 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 96EC
 842+ 96EC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 96EE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 96EF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 96F0
 846+ 96F0 ED 73 D9 88  	ld (Stack_2),sp
 847+ 96F4 ED 7B D7 88  	ld sp,(Stack)
 848+ 96F8
 849+ 96F8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 96F8
 851+ 96F8 3E CD        	ld a,$cd
 852+ 96FA 32 02 97     	ld (Imprime_Amadeus),a
 853+ 96FD EB           	ex de,hl
 854+ 96FE 22 03 97     	ld (Imprime_Amadeus+1),hl
 855+ 9701 EB           	ex de,hl
 856+ 9702
 857+ 9702              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9702
 859+ 9702 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9705
 861+ 9705 ED 73 D7 88  	ld (Stack),sp
 862+ 9709
 863+ 9709 3A D2 88     	ld a,(Numero_de_malotes)
 864+ 970C 3D           	dec a
 865+ 970D 28 09        	jr z,1F
 866+ 970F 32 D2 88      	ld (Numero_de_malotes),a
 867+ 9712
 868+ 9712 ED 7B D9 88  	ld sp,(Stack_2)
 869+ 9716 18 D4        	jr 2B
 870+ 9718
 871+ 9718 AF           1 xor a
 872+ 9719 32 D9 88     	ld (Stack_2),a
 873+ 971C
 874+ 971C C9           	ret
# file closed: Draw_XOR.asm
1872  971D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 971D              ;   índices de Rutinas de impresión.
   2+ 971D
   3+ 971D 2D 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 971F 5A 97            defw Pinta_Amadeus_3x2
   5+ 9721
   6+ 9721 B0 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9723 50 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9725 04 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9727
  10+ 9727 DA 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9729 DE 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 972B 92 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 972D
  14+ 972D
  15+ 972D              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 972D              ;
  17+ 972D              ;   12/12/22
  18+ 972D              ;
  19+ 972D              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 972D              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 972D              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 972D              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 972D              ;
  24+ 972D              ;   Modifica: DE y HL.
  25+ 972D
  26+ 972D ED 73 D7 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9731 FD F9        	ld sp,iy
  28+ 9733 06 10            ld b,16
  29+ 9735 D1           1 pop de
  30+ 9736 7B               ld a,e
  31+ 9737 AE               xor (hl)
  32+ 9738 77           	ld (hl),a
  33+ 9739 23           	inc hl
  34+ 973A 7A               ld a,d
  35+ 973B AE               xor (hl)
  36+ 973C 77           	ld (hl),a
  37+ 973D 2B           	dec hl
  38+ 973E 24           	inc h
  39+ 973F 7C               ld a,h
  40+ 9740 E6 07            and 7
  41+ 9742 20 0A            jr nz,2F
  42+ 9744 7D               ld a,l
  43+ 9745 C6 20            add a,$20
  44+ 9747 6F               ld l,a
  45+ 9748 38 04            jr c,2F
  46+ 974A 7C               ld a,h
  47+ 974B D6 08            sub 8
  48+ 974D 67               ld h,a
  49+ 974E 7C           2 ld a,h
  50+ 974F FE 58            cp $58
  51+ 9751 28 02            jr z,3F
  52+ 9753 10 E0            djnz 1B
  53+ 9755 ED 7B D7 88  3 ld sp,(Stack)
  54+ 9759 C9           	ret
  55+ 975A
  56+ 975A ED 73 D7 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 975E FD F9        	ld sp,iy
  58+ 9760 06 08            ld b,8
  59+ 9762 D1           1 pop de
  60+ 9763 7B               ld a,e
  61+ 9764 AE               xor (hl)
  62+ 9765 77           	ld (hl),a
  63+ 9766 23           	inc hl
  64+ 9767 7A               ld a,d
  65+ 9768 AE               xor (hl)
  66+ 9769 77           	ld (hl),a
  67+ 976A 23           	inc hl
  68+ 976B D1           	pop de
  69+ 976C 7B               ld a,e
  70+ 976D AE               xor (hl)
  71+ 976E 77           	ld (hl),a
  72+ 976F 2B           	dec hl
  73+ 9770 2B           	dec hl
  74+ 9771 24           	inc h
  75+ 9772 7C               ld a,h
  76+ 9773 E6 07            and 7
  77+ 9775 20 0A            jr nz,2F
  78+ 9777 7D               ld a,l
  79+ 9778 C6 20            add a,$20
  80+ 977A 6F               ld l,a
  81+ 977B 38 04            jr c,2F
  82+ 977D 7C               ld a,h
  83+ 977E D6 08            sub 8
  84+ 9780 67               ld h,a
  85+ 9781 7C           2 ld a,h
  86+ 9782 FE 58            cp $58
  87+ 9784 28 25            jr z,4F
  88+ 9786 7A               ld a,d
  89+ 9787 AE               xor (hl)
  90+ 9788 77               ld (hl),a
  91+ 9789 D1           	pop de
  92+ 978A 23           	inc hl
  93+ 978B 7B               ld a,e
  94+ 978C AE               xor (hl)
  95+ 978D 77           	ld (hl),a
  96+ 978E 23           	inc hl
  97+ 978F 7A               ld a,d
  98+ 9790 AE               xor (hl)
  99+ 9791 77           	ld (hl),a
 100+ 9792 2B           	dec hl
 101+ 9793 2B           	dec hl
 102+ 9794 24           	inc h
 103+ 9795 7C               ld a,h
 104+ 9796 E6 07            and 7
 105+ 9798 20 0A            jr nz,3F
 106+ 979A 7D               ld a,l
 107+ 979B C6 20            add a,$20
 108+ 979D 6F               ld l,a
 109+ 979E 38 04            jr c,3F
 110+ 97A0 7C               ld a,h
 111+ 97A1 D6 08            sub 8
 112+ 97A3 67               ld h,a
 113+ 97A4 7C           3 ld a,h
 114+ 97A5 FE 58            cp $58
 115+ 97A7 28 02            jr z,4F
 116+ 97A9 10 B7            djnz 1B
 117+ 97AB ED 7B D7 88  4 ld sp,(Stack)
 118+ 97AF C9           	ret
 119+ 97B0
 120+ 97B0              ; ---------------------------------------------------
 121+ 97B0
 122+ 97B0 ED 73 D7 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97B4 FD F9        	ld sp,iy
 124+ 97B6
 125+ 97B6              ; >>>
 126+ 97B6
 127+ 97B6 06 10            ld b,16
 128+ 97B8 D1           1 pop de
 129+ 97B9 7A           	ld a,d
 130+ 97BA AE           	xor (hl)
 131+ 97BB 77           	ld (hl),a
 132+ 97BC 24           	inc h
 133+ 97BD 7C               ld a,h
 134+ 97BE E6 07            and 7
 135+ 97C0 20 0C            jr nz,2F
 136+ 97C2 7D               ld a,l
 137+ 97C3 C6 20            add a,$20
 138+ 97C5 6F               ld l,a
 139+ 97C6 38 06            jr c,2F
 140+ 97C8 7C               ld a,h
 141+ 97C9 D6 08            sub 8
 142+ 97CB 67               ld h,a
 143+ 97CC 18 00            jr 2F
 144+ 97CE 7C           2 ld a,h
 145+ 97CF FE 58            cp $58
 146+ 97D1 28 02            jr z,3F
 147+ 97D3 10 E3            djnz 1B
 148+ 97D5 ED 7B D7 88  3 ld sp,(Stack)
 149+ 97D9 C9           	ret
 150+ 97DA
 151+ 97DA ED 73 D7 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97DE FD F9        	ld sp,iy
 153+ 97E0
 154+ 97E0              ; >>>
 155+ 97E0
 156+ 97E0 06 10            ld b,16
 157+ 97E2 D1           1 pop de
 158+ 97E3 7B           	ld a,e
 159+ 97E4 AE           	xor (hl)
 160+ 97E5 77           	ld (hl),a
 161+ 97E6 24           	inc h
 162+ 97E7 7C               ld a,h
 163+ 97E8 E6 07            and 7
 164+ 97EA 20 0C            jr nz,2F
 165+ 97EC 7D               ld a,l
 166+ 97ED C6 20            add a,$20
 167+ 97EF 6F               ld l,a
 168+ 97F0 38 06            jr c,2F
 169+ 97F2 7C               ld a,h
 170+ 97F3 D6 08            sub 8
 171+ 97F5 67               ld h,a
 172+ 97F6 18 00            jr 2F
 173+ 97F8 7C           2 ld a,h
 174+ 97F9 FE 58            cp $58
 175+ 97FB 28 02            jr z,3F
 176+ 97FD 10 E3            djnz 1B
 177+ 97FF ED 7B D7 88  3 ld sp,(Stack)
 178+ 9803 C9           	ret
 179+ 9804
 180+ 9804              ; ---------------------------------------------------
 181+ 9804
 182+ 9804 ED 73 D7 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9808 FD F9        	ld sp,iy
 184+ 980A 06 08            ld b,8
 185+ 980C D1           1 pop de
 186+ 980D 7A           	ld a,d
 187+ 980E AE           	xor (hl)
 188+ 980F 77           	ld (hl),a
 189+ 9810 23           	inc hl
 190+ 9811 D1           	pop de
 191+ 9812 7B           	ld a,e
 192+ 9813 AE           	xor (hl)
 193+ 9814 77           	ld (hl),a
 194+ 9815 2B           	dec hl
 195+ 9816 24            	inc h
 196+ 9817 7C               ld a,h
 197+ 9818 E6 07            and 7
 198+ 981A 20 0A            jr nz,2F
 199+ 981C 7D               ld a,l
 200+ 981D C6 20            add a,$20
 201+ 981F 6F               ld l,a
 202+ 9820 38 04            jr c,2F
 203+ 9822 7C               ld a,h
 204+ 9823 D6 08            sub 8
 205+ 9825 67               ld h,a
 206+ 9826 7C           2 ld a,h
 207+ 9827 FE 58            cp $58
 208+ 9829 28 20            jr z,4F
 209+ 982B D1               pop de
 210+ 982C 7B           	ld a,e
 211+ 982D AE           	xor (hl)
 212+ 982E 77           	ld (hl),a
 213+ 982F 23           	inc hl
 214+ 9830 7A           	ld a,d
 215+ 9831 AE           	xor (hl)
 216+ 9832 77           	ld (hl),a
 217+ 9833 2B           	dec hl
 218+ 9834 24           	inc h
 219+ 9835 7C               ld a,h
 220+ 9836 E6 07            and 7
 221+ 9838 20 0A            jr nz,3F
 222+ 983A 7D               ld a,l
 223+ 983B C6 20            add a,$20
 224+ 983D 6F               ld l,a
 225+ 983E 38 04            jr c,3F
 226+ 9840 7C               ld a,h
 227+ 9841 D6 08            sub 8
 228+ 9843 67               ld h,a
 229+ 9844 7C           3 ld a,h
 230+ 9845 FE 58            cp $58
 231+ 9847 28 02            jr z,4F
 232+ 9849 10 C1            djnz 1B
 233+ 984B ED 7B D7 88  4 ld sp,(Stack)
 234+ 984F C9           	ret
 235+ 9850
 236+ 9850 ED 73 D7 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9854 FD F9        	ld sp,iy
 238+ 9856 06 08            ld b,8
 239+ 9858 D1           1 pop de
 240+ 9859 D1           	pop de
 241+ 985A 7B           	ld a,e
 242+ 985B AE           	xor (hl)
 243+ 985C 77           	ld (hl),a
 244+ 985D 24            	inc h
 245+ 985E 7C               ld a,h
 246+ 985F E6 07            and 7
 247+ 9861 20 0A            jr nz,2F
 248+ 9863 7D               ld a,l
 249+ 9864 C6 20            add a,$20
 250+ 9866 6F               ld l,a
 251+ 9867 38 04            jr c,2F
 252+ 9869 7C               ld a,h
 253+ 986A D6 08            sub 8
 254+ 986C 67               ld h,a
 255+ 986D 7C           2 ld a,h
 256+ 986E FE 58            cp $58
 257+ 9870 28 1B            jr z,4F
 258+ 9872 D1               pop de
 259+ 9873 7A           	ld a,d
 260+ 9874 AE           	xor (hl)
 261+ 9875 77           	ld (hl),a
 262+ 9876 24           	inc h
 263+ 9877 7C               ld a,h
 264+ 9878 E6 07            and 7
 265+ 987A 20 0A            jr nz,3F
 266+ 987C 7D               ld a,l
 267+ 987D C6 20            add a,$20
 268+ 987F 6F               ld l,a
 269+ 9880 38 04            jr c,3F
 270+ 9882 7C               ld a,h
 271+ 9883 D6 08            sub 8
 272+ 9885 67               ld h,a
 273+ 9886 7C           3 ld a,h
 274+ 9887 FE 58            cp $58
 275+ 9889 28 02            jr z,4F
 276+ 988B 10 CB            djnz 1B
 277+ 988D ED 7B D7 88  4 ld sp,(Stack)
 278+ 9891 C9           	ret
 279+ 9892
 280+ 9892 ED 73 D7 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9896 FD F9        	ld sp,iy
 282+ 9898 06 08            ld b,8
 283+ 989A D1           1 pop de
 284+ 989B 7B           	ld a,e
 285+ 989C AE           	xor (hl)
 286+ 989D 77           	ld (hl),a
 287+ 989E 23           	inc hl
 288+ 989F 7A           	ld a,d
 289+ 98A0 AE           	xor (hl)
 290+ 98A1 77           	ld (hl),a
 291+ 98A2 2B           	dec hl
 292+ 98A3 24             	inc h
 293+ 98A4 7C               ld a,h
 294+ 98A5 E6 07            and 7
 295+ 98A7 20 0A            jr nz,2F
 296+ 98A9 7D               ld a,l
 297+ 98AA C6 20            add a,$20
 298+ 98AC 6F               ld l,a
 299+ 98AD 38 04            jr c,2F
 300+ 98AF 7C               ld a,h
 301+ 98B0 D6 08            sub 8
 302+ 98B2 67               ld h,a
 303+ 98B3 7C           2 ld a,h
 304+ 98B4 FE 58            cp $58
 305+ 98B6 28 21            jr z,4F
 306+ 98B8 D1               pop de
 307+ 98B9 7A           	ld a,d
 308+ 98BA AE           	xor (hl)
 309+ 98BB 77           	ld (hl),a
 310+ 98BC 23           	inc hl
 311+ 98BD D1               pop de
 312+ 98BE 7B           	ld a,e
 313+ 98BF AE           	xor (hl)
 314+ 98C0 77           	ld (hl),a
 315+ 98C1 2B           	dec hl
 316+ 98C2 24           	inc h
 317+ 98C3 7C               ld a,h
 318+ 98C4 E6 07            and 7
 319+ 98C6 20 0A            jr nz,3F
 320+ 98C8 7D               ld a,l
 321+ 98C9 C6 20            add a,$20
 322+ 98CB 6F               ld l,a
 323+ 98CC 38 04            jr c,3F
 324+ 98CE 7C               ld a,h
 325+ 98CF D6 08            sub 8
 326+ 98D1 67               ld h,a
 327+ 98D2 7C           3 ld a,h
 328+ 98D3 FE 58            cp $58
 329+ 98D5 28 02            jr z,4F
 330+ 98D7 10 C1            djnz 1B
 331+ 98D9 ED 7B D7 88  4 ld sp,(Stack)
 332+ 98DD C9           	ret
 333+ 98DE
 334+ 98DE ED 73 D7 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98E2 FD F9        	ld sp,iy
 336+ 98E4 06 08            ld b,8
 337+ 98E6 D1           1 pop de
 338+ 98E7 7B           	ld a,e
 339+ 98E8 AE           	xor (hl)
 340+ 98E9 77           	ld (hl),a
 341+ 98EA 24            	inc h
 342+ 98EB 7C               ld a,h
 343+ 98EC E6 07            and 7
 344+ 98EE 20 0A            jr nz,2F
 345+ 98F0 7D               ld a,l
 346+ 98F1 C6 20            add a,$20
 347+ 98F3 6F               ld l,a
 348+ 98F4 38 04            jr c,2F
 349+ 98F6 7C               ld a,h
 350+ 98F7 D6 08            sub 8
 351+ 98F9 67               ld h,a
 352+ 98FA 7C           2 ld a,h
 353+ 98FB FE 58            cp $58
 354+ 98FD 28 1C            jr z,4F
 355+ 98FF D1               pop de
 356+ 9900 7A           	ld a,d
 357+ 9901 AE           	xor (hl)
 358+ 9902 77           	ld (hl),a
 359+ 9903 24           	inc h
 360+ 9904 7C               ld a,h
 361+ 9905 E6 07            and 7
 362+ 9907 20 0A            jr nz,3F
 363+ 9909 7D               ld a,l
 364+ 990A C6 20            add a,$20
 365+ 990C 6F               ld l,a
 366+ 990D 38 04            jr c,3F
 367+ 990F 7C               ld a,h
 368+ 9910 D6 08            sub 8
 369+ 9912 67               ld h,a
 370+ 9913 7C           3 ld a,h
 371+ 9914 FE 58            cp $58
 372+ 9916 28 03            jr z,4F
 373+ 9918 D1               pop de
 374+ 9919 10 CB            djnz 1B
 375+ 991B ED 7B D7 88  4 ld sp,(Stack)
 376+ 991F C9           	ret
 377+ 9920
 378+ 9920              ; ---------------------------------------------------
 379+ 9920              ;
 380+ 9920              ;   27/02/23
 381+ 9920              ;
 382+ 9920              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9920              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9920              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9920
 386+ 9920 ED 73 D7 88  Pinta_Disparo ld (Stack),sp
 387+ 9924 FD F9            ld sp,iy
 388+ 9926 06 03            ld b,3
 389+ 9928 D1           1 pop de
 390+ 9929 7B               ld a,e
 391+ 992A AE               xor (hl)
 392+ 992B 77               ld (hl),a
 393+ 992C 23               inc hl
 394+ 992D 7A               ld a,d
 395+ 992E AE               xor (hl)
 396+ 992F 77               ld (hl),a
 397+ 9930 2B               dec hl
 398+ 9931
 399+ 9931 24               inc h
 400+ 9932 7C               ld a,h
 401+ 9933 E6 07            and 7
 402+ 9935 20 0A            jr nz,2F
 403+ 9937 7D               ld a,l
 404+ 9938 C6 20            add a,$20
 405+ 993A 6F               ld l,a
 406+ 993B 38 04            jr c,2F
 407+ 993D 7C               ld a,h
 408+ 993E D6 08            sub 8
 409+ 9940 67               ld h,a
 410+ 9941 7C           2 ld a,h
 411+ 9942 FE 58            cp $58
 412+ 9944 28 02            jr z,3F
 413+ 9946
 414+ 9946 10 E0            djnz 1B
 415+ 9948 ED 7B D7 88  3 ld sp,(Stack)
 416+ 994C C9               ret
 417+ 994D
# file closed: Rutinas_de_impresion_sprites.asm
1873  994D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 994D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 994D              ;
   3+ 994D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 994D              ;
   5+ 994D              ; *****************************************************************************************************************************************************************************************
   6+ 994D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 994D
   8+ 994D 7C           calcula_tercio ld a,h
   9+ 994E E6 18        	and $18
  10+ 9950 CB 2F        	sra a
  11+ 9952 CB 2F        	sra a
  12+ 9954 CB 2F        	sra a
  13+ 9956 C9           	ret
  14+ 9957
# file closed: calcula_tercio.asm
1874  9957              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9957              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9957              ;
   3+ 9957              ;
   4+ 9957              ;	CLS.
   5+ 9957              ;
   6+ 9957              ;	Limpia la pantalla y define sus atributos.
   7+ 9957              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9957              ;
   9+ 9957              ;	COLORES: 0 ..... NEGRO
  10+ 9957              ;    		 1 ..... AZUL
  11+ 9957              ; 			 2 ..... ROJO
  12+ 9957              ;			 3 ..... MAGENTA
  13+ 9957              ; 			 4 ..... VERDE
  14+ 9957              ; 			 5 ..... CIAN
  15+ 9957              ;			 6 ..... AMARILLO
  16+ 9957              ; 			 7 ..... BLANCO
  17+ 9957              ;
  18+ 9957              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9957              ;
  20+ 9957              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9957
  22+ 9957
  23+ 9957 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 995A 11 01 40     	LD DE,$4001
  25+ 995D 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9960 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9962 ED B0        	LDIR
  28+ 9964 01 FF 02     	LD BC,767
  29+ 9967 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9968 ED B0        	LDIR
  31+ 996A C9           	ret
  32+ 996B
# file closed: Cls.asm
1875  996B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 996B              ; ******************************************************************************************************************************************************************************************
   2+ 996B              ;
   3+ 996B              ;   20/05/23
   4+ 996B              ;
   5+ 996B              ;	Recompone_posicion_inicio
   6+ 996B              ;
   7+ 996B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 996B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 996B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 996B              ;	_ a una u otra rutina.
  11+ 996B
  12+ 996B              Recompone_posicion_inicio
  13+ 996B
  14+ 996B 2A 93 88     	ld hl,(Posicion_inicio)
  15+ 996E 7D           	ld a,l
  16+ 996F E6 1F        	and $1f
  17+ 9971 28 16        	jr z,1F
  18+ 9973
  19+ 9973 FE 1F        	cp $1f
  20+ 9975 28 0D        	jr z,3F
  21+ 9977
  22+ 9977 21 B6 88     	ld hl,Ctrl_2
  23+ 997A CB C6        	set 0,(hl)
  24+ 997C 2A 85 88     	ld hl,(Puntero_objeto)
  25+ 997F 22 C7 88     	ld (Repone_puntero_objeto),hl
  26+ 9982 18 08        	jr 2F
  27+ 9984
  28+ 9984 CD 32 9B     3 call Mov_left
  29+ 9987 18 03        	jr 2F
  30+ 9989
  31+ 9989 CD 0F 9A     1 call Mov_right
  32+ 998C 21 00 F0     2 ld hl,Sprite_vacio
  33+ 998F 22 85 88     	ld (Puntero_objeto),hl
  34+ 9992 C9           	ret
  35+ 9993
  36+ 9993              ; ******************************************************************************************************************************************************************************************
  37+ 9993              ;
  38+ 9993              ;   27/05/23
  39+ 9993              ;
  40+ 9993              ;	Mov_down
  41+ 9993              ;
  42+ 9993              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9993              ;
  44+ 9993              ;
  45+ 9993              Mov_down
  46+ 9993
  47+ 9993 CD FD 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9996              ;																	; _ repone (Puntero_objeto).
  49+ 9996 21 B1 88     	ld hl,Ctrl_0
  50+ 9999 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 999B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 999B              ; 																	; _ en el caso de que no lo haya.
  53+ 999B 3A 99 88     	ld a,(Vel_down)
  54+ 999E 47           	ld b,a
  55+ 999F 2A 83 88         ld hl,(Posicion_actual)
  56+ 99A2 CD 4D 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99A5 E6 02        	and 2
  58+ 99A7 28 17        	jr z,1F
  59+ 99A9
  60+ 99A9              ; Nos encontramos en el último tercio de pantalla.
  61+ 99A9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99A9
  63+ 99A9 7C           	ld a,h
  64+ 99AA FE 57        	cp $57
  65+ 99AC 20 12        	jr nz,1F
  66+ 99AE
  67+ 99AE 7D           	ld a,l
  68+ 99AF C6 20        	add $20
  69+ 99B1 30 0D        	jr nc,1F
  70+ 99B3
  71+ 99B3              ; ------------------------------
  72+ 99B3              ;
  73+ 99B3              ;	12/01/24
  74+ 99B3
  75+ 99B3              ;	call Reaparece_arriba
  76+ 99B3 CD BF 9C     	call Reinicio
  77+ 99B6
  78+ 99B6              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 99B6
  80+ 99B6 3A E5 88     	ld a,(Ctrl_3)
  81+ 99B9 CB CF        	set 1,a
  82+ 99BB 32 E5 88     	ld (Ctrl_3),a
  83+ 99BE
  84+ 99BE 18 08        	jr 3F
  85+ 99C0              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  86+ 99C0              ;															; _a la siguiente entidad como "Entidad_guía".
  87+ 99C0              ; ------------------------------
  88+ 99C0
  89+ 99C0 CD 3A 96     1 call NextScan
  90+ 99C3 22 83 88     	ld (Posicion_actual),hl
  91+ 99C6 10 DA            djnz 2B
  92+ 99C8 CD E5 9C     3 call Genera_coordenadas
  93+ 99CB C9           	ret
  94+ 99CC
  95+ 99CC              ; ******************************************************************************************************************************************************************************************
  96+ 99CC              ;
  97+ 99CC              ;   27/05/23
  98+ 99CC              ;
  99+ 99CC              ;	Mov_up
 100+ 99CC              ;
 101+ 99CC              ; 	Mueve el Sprite hacia arriba.
 102+ 99CC              ;
 103+ 99CC              ;
 104+ 99CC              Mov_up
 105+ 99CC
 106+ 99CC CD FD 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 107+ 99CF              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 108+ 99CF 21 B1 88     	ld hl,Ctrl_0
 109+ 99D2 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 110+ 99D4              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 111+ 99D4              ; 																		; _ en el caso de que no lo haya.
 112+ 99D4 3A 98 88     	ld a,(Vel_up)
 113+ 99D7 47           	ld b,a
 114+ 99D8 2A 83 88     	ld hl,(Posicion_actual)
 115+ 99DB CD 4D 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 116+ 99DE A7           	and a
 117+ 99DF 20 10        	jr nz,1F
 118+ 99E1
 119+ 99E1              ; Nos encontramos en el 1er tercio de pantalla.
 120+ 99E1              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 121+ 99E1
 122+ 99E1 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 123+ 99E2 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 124+ 99E4 20 0B            jr nz,1F
 125+ 99E6 7D               ld a,l
 126+ 99E7 D6 20            sub $20
 127+ 99E9 30 06            jr nc,1F
 128+ 99EB 25               dec h
 129+ 99EC
 130+ 99EC              ; -----------------------------
 131+ 99EC CD A0 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 132+ 99EF              ;	call Reinicio
 133+ 99EF              ; -----------------------------
 134+ 99EF
 135+ 99EF 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 136+ 99F1 CD 49 96     1 call PreviousScan
 137+ 99F4 22 83 88     	ld (Posicion_actual),hl
 138+ 99F7 10 E2            djnz 3B
 139+ 99F9 CD E5 9C     2 call Genera_coordenadas
 140+ 99FC C9           	ret
 141+ 99FD
 142+ 99FD              ; -----------------------------
 143+ 99FD              ;
 144+ 99FD              ;	27/5/23
 145+ 99FD              ;
 146+ 99FD              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 147+ 99FD              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 148+ 99FD              ;
 149+ 99FD              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 150+ 99FD              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 151+ 99FD              ;
 152+ 99FD              ;	Modifica: A y (Puntero_objeto).
 153+ 99FD
 154+ 99FD 3A B6 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 155+ 9A00 CB 47        	bit 0,a
 156+ 9A02 C8           	ret z
 157+ 9A03 CB 87        	res 0,a
 158+ 9A05 32 B6 88     	ld (Ctrl_2),a
 159+ 9A08 2A C7 88     	ld hl,(Repone_puntero_objeto)
 160+ 9A0B 22 85 88     	ld (Puntero_objeto),hl
 161+ 9A0E C9           	ret
 162+ 9A0F
 163+ 9A0F              ; ******************************************************************************************************************************************************************************************
 164+ 9A0F              ;
 165+ 9A0F              ;	19/10/22
 166+ 9A0F              ;
 167+ 9A0F              ;	Mov_right.
 168+ 9A0F              ;
 169+ 9A0F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 170+ 9A0F              ;
 171+ 9A0F
 172+ 9A0F 3A B1 88     Mov_right ld a,(Ctrl_0)
 173+ 9A12 CB 77        	bit 6,a
 174+ 9A14 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 175+ 9A16
 176+ 9A16 CD 4E 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 177+ 9A19 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 178+ 9A1A
 179+ 9A1A 21 B1 88     	ld hl,Ctrl_0
 180+ 9A1D CB E6        	set 4,(hl)
 181+ 9A1F 18 52        	jr 8F
 182+ 9A21
 183+ 9A21 21 B1 88     10 ld hl,Ctrl_0
 184+ 9A24 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 185+ 9A26              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 186+ 9A26              ; 																	; _ en el caso de que no lo haya.
 187+ 9A26 3A 87 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 188+ 9A29 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 189+ 9A2B 20 46        	jr nz,8F
 190+ 9A2D
 191+ 9A2D 3A 89 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 192+ 9A30 A7           	and a 															; _[3] para continuar con el DESPLZ.
 193+ 9A31 28 40        	jr z,8F
 194+ 9A33
 195+ 9A33              ; ---------- ---------- ----------
 196+ 9A33              ;
 197+ 9A33              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 198+ 9A33
 199+ 9A33 3A 97 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 200+ 9A36 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 201+ 9A38 28 11        	jr z,1F
 202+ 9A3A 38 06        	jr c,6F
 203+ 9A3C FE 04        	cp 4
 204+ 9A3E 28 14        	jr z,7F
 205+ 9A40 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 206+ 9A42
 207+ 9A42              ; ---------- ---------- ----------
 208+ 9A42              ;
 209+ 9A42              ; Perfiles de velocidad
 210+ 9A42              ;
 211+ 9A42
 212+ 9A42 3A 89 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 213+ 9A45 FE FE        	cp $fe
 214+ 9A47 20 2A        	jr nz,8F
 215+ 9A49 18 10        	jr 3F
 216+ 9A4B 3A 89 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 217+ 9A4E FE FD        	cp $fd
 218+ 9A50 20 21        	jr nz,8F
 219+ 9A52 18 07        	jr 3F
 220+ 9A54 3A 89 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 221+ 9A57 FE FB        	cp $fb
 222+ 9A59 20 18        	jr nz,8F
 223+ 9A5B
 224+ 9A5B              ; ---------- ---------- ----------
 225+ 9A5B
 226+ 9A5B              3
 227+ 9A5B CD 8E 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 228+ 9A5E              ;	call Reinicio
 229+ 9A5E
 230+ 9A5E              ; ---------- ---------- ----------
 231+ 9A5E              ;
 232+ 9A5E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 233+ 9A5E
 234+ 9A5E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 235+ 9A60 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 236+ 9A61 CD 7A 9A     	call DESPLZ_DER
 237+ 9A64 C1           	pop bc
 238+ 9A65 10 F9        	djnz 5B
 239+ 9A67 2A 83 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 240+ 9A6A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 241+ 9A6B 22 83 88     	ld (Posicion_actual),hl
 242+ 9A6E CD E5 9C     	call Genera_coordenadas
 243+ 9A71 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 244+ 9A73
 245+ 9A73              ; ---------- ---------- ----------
 246+ 9A73
 247+ 9A73 2A 83 88     8 ld hl,(Posicion_actual)
 248+ 9A76 CD 7A 9A     	call DESPLZ_DER
 249+ 9A79 C9           2 ret
 250+ 9A7A
 251+ 9A7A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 252+ 9A7A              ;
 253+ 9A7A              ;	22/9/22
 254+ 9A7A              ;
 255+ 9A7A
 256+ 9A7A CD 89 9A     DESPLZ_DER call Desplaza_derecha
 257+ 9A7D CD D5 9A         call modifica_parametros_1er_DESPLZ_2
 258+ 9A80 CD FE 9A         call Ciclo_completo
 259+ 9A83 21 B1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 260+ 9A86 CB FE        	set 7,(hl)
 261+ 9A88 C9           	ret
 262+ 9A89
 263+ 9A89              ; ******************************************************************************************************************************************************************************************
 264+ 9A89              ;	15/02/23
 265+ 9A89              ;
 266+ 9A89
 267+ 9A89 3A 97 88     Desplaza_derecha ld a,(Vel_right)
 268+ 9A8C 47           	ld b,a
 269+ 9A8D 2A 8F 88     	ld hl,(Puntero_DESPLZ_der)
 270+ 9A90 23           1 inc hl
 271+ 9A91 23           	inc hl
 272+ 9A92 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 273+ 9A94 22 8F 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 274+ 9A97 CD CE 8C     	call Extrae_address
 275+ 9A9A 22 85 88     	ld (Puntero_objeto),hl
 276+ 9A9D
 277+ 9A9D              ; Modifica (Puntero_DESPLZ_izq).
 278+ 9A9D
 279+ 9A9D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 280+ 9A9D              ; Cuántos movimientos hemos hecho ??
 281+ 9A9D              ; DE contiene (Puntero_DESPLZ_der).
 282+ 9A9D
 283+ 9A9D 2A 8B 88     7 ld hl,(Indice_Sprite_der)
 284+ 9AA0 EB           	ex de,hl
 285+ 9AA1 A7           	and a
 286+ 9AA2 ED 52        	sbc hl,de
 287+ 9AA4 CB 3D        	srl l
 288+ 9AA6 3E 08        6 ld a,8
 289+ 9AA8 95           	sub l
 290+ 9AA9 30 1E        	jr nc,3F
 291+ 9AAB
 292+ 9AAB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 293+ 9AAB              ; B="0".
 294+ 9AAB
 295+ 9AAB 04           4 inc b
 296+ 9AAC 3C           	inc a
 297+ 9AAD 20 FC        	jr nz,4B
 298+ 9AAF 78           	ld a,b
 299+ 9AB0 08           	ex af,af
 300+ 9AB1 2A 8B 88     	ld hl,(Indice_Sprite_der)
 301+ 9AB4 23           5 inc hl
 302+ 9AB5 23           	inc hl
 303+ 9AB6 10 FC        	djnz 5B
 304+ 9AB8 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 305+ 9ABB CD CE 8C     	call Extrae_address
 306+ 9ABE 22 85 88     	ld (Puntero_objeto),hl
 307+ 9AC1
 308+ 9AC1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 309+ 9AC1              ; _(Posicion_actual).
 310+ 9AC1
 311+ 9AC1 21 83 88     	ld hl,Posicion_actual
 312+ 9AC4 34           	inc (hl)
 313+ 9AC5 08               ex af,af
 314+ 9AC6 6F           	ld l,a
 315+ 9AC7 18 DD        	jr 6B
 316+ 9AC9
 317+ 9AC9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 318+ 9AC9
 319+ 9AC9 47           3 ld b,a
 320+ 9ACA 2A 8D 88     	ld hl,(Indice_Sprite_izq)
 321+ 9ACD 23           2 inc hl
 322+ 9ACE 23           	inc hl
 323+ 9ACF 10 FC        	djnz 2B
 324+ 9AD1 22 91 88     	ld (Puntero_DESPLZ_izq),hl
 325+ 9AD4 C9           8 ret
 326+ 9AD5
 327+ 9AD5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 328+ 9AD5              ;
 329+ 9AD5              ;	24/7/22
 330+ 9AD5              ;
 331+ 9AD5              ;	modifica_parametros_1er_DESPLZ_2
 332+ 9AD5              ;
 333+ 9AD5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 334+ 9AD5              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9AD5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 336+ 9AD5
 337+ 9AD5 3A 89 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 338+ 9AD8 A7           	and a
 339+ 9AD9 20 1F        	jr nz,1F
 340+ 9ADB D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 341+ 9ADD 32 89 88         ld (CTRL_DESPLZ),a
 342+ 9AE0
 343+ 9AE0 21 82 88     	ld hl,Columns
 344+ 9AE3 34           	inc (hl)
 345+ 9AE4 3A 95 88     	ld a,(Cuad_objeto)
 346+ 9AE7 E6 01        	and 1
 347+ 9AE9 28 0F        	jr z,1F
 348+ 9AEB 2A 83 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 349+ 9AEE 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 350+ 9AEF 22 83 88     	ld (Posicion_actual),hl
 351+ 9AF2 CD E5 9C     	call Genera_coordenadas
 352+ 9AF5 CD 5A 9C     	call Inc_CTRL_DESPLZ
 353+ 9AF8 18 03        	jr 2F
 354+ 9AFA CD 5A 9C     1 call Inc_CTRL_DESPLZ
 355+ 9AFD C9           2 ret
 356+ 9AFE
 357+ 9AFE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 358+ 9AFE              ;
 359+ 9AFE              ;	24/7/22
 360+ 9AFE              ;
 361+ 9AFE              ;	Ciclo_completo.
 362+ 9AFE              ;
 363+ 9AFE              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 364+ 9AFE              ;
 365+ 9AFE              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 366+ 9AFE              ; 	Decrementamos (Columns).
 367+ 9AFE              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 368+ 9AFE              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 369+ 9AFE
 370+ 9AFE
 371+ 9AFE 3A 89 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 372+ 9B01 FE FF        	cp $ff
 373+ 9B03 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 374+ 9B05 E6 F0        	and $f0
 375+ 9B07 20 28        	jr nz,3F
 376+ 9B09
 377+ 9B09              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 378+ 9B09
 379+ 9B09 3A 89 88     	ld a,(CTRL_DESPLZ)
 380+ 9B0C 47           	ld b,a
 381+ 9B0D 3E F8        	ld a,$f8
 382+ 9B0F 80           	add b
 383+ 9B10 32 89 88     	ld (CTRL_DESPLZ),a
 384+ 9B13 18 1C        	jr 3F
 385+ 9B15 21 82 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 386+ 9B18 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 387+ 9B19 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 388+ 9B1A 32 89 88     	ld (CTRL_DESPLZ),a
 389+ 9B1D 3A 95 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 390+ 9B20 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 391+ 9B22 20 0A        	jr nz,2F
 392+ 9B24 2A 83 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 393+ 9B27 23           	inc hl
 394+ 9B28 22 83 88     	ld (Posicion_actual),hl
 395+ 9B2B CD E5 9C     	call Genera_coordenadas
 396+ 9B2E
 397+ 9B2E              ; Inicia el puntero de Sprite.
 398+ 9B2E
 399+ 9B2E CD E5 8C     2 call Inicia_puntero_objeto_der
 400+ 9B31 C9           3 ret
 401+ 9B32
 402+ 9B32              ; ******************************************************************************************************************************************************************************************
 403+ 9B32              ;
 404+ 9B32              ;	15/02/23
 405+ 9B32              ;
 406+ 9B32              ;	Mov_left.
 407+ 9B32              ;
 408+ 9B32              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 409+ 9B32              ;
 410+ 9B32              Mov_left
 411+ 9B32
 412+ 9B32 21 B1 88     	ld hl,Ctrl_0
 413+ 9B35 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 414+ 9B37              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 415+ 9B37              ; 																	; _ en el caso de que no lo haya.
 416+ 9B37 3A B1 88     	ld a,(Ctrl_0)
 417+ 9B3A CB 77        	bit 6,a
 418+ 9B3C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 419+ 9B3E
 420+ 9B3E CD 54 9C     	call Stop_Amadeus_left
 421+ 9B41 C8           	ret z
 422+ 9B42 20 4A        	jr nz,8F
 423+ 9B44
 424+ 9B44 3A 87 88     11 ld a,(Coordenada_X)
 425+ 9B47 A7           	and a
 426+ 9B48 20 44        	jr nz,8F
 427+ 9B4A
 428+ 9B4A 3A 89 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 429+ 9B4D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 430+ 9B4E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 431+ 9B50
 432+ 9B50              ; ---------- ---------- ----------
 433+ 9B50
 434+ 9B50 3A 96 88     	ld a,(Vel_left)
 435+ 9B53 FE 02        	cp 2
 436+ 9B55 28 0F        	jr z,1F
 437+ 9B57 38 04        	jr c,6F
 438+ 9B59 FE 04        	cp 4
 439+ 9B5B 28 12        	jr z,7F
 440+ 9B5D
 441+ 9B5D              ; ---------- ---------- ----------
 442+ 9B5D
 443+ 9B5D 3A 89 88     6 ld a,(CTRL_DESPLZ)
 444+ 9B60 FE F8        	cp $f8
 445+ 9B62 20 2A        	jr nz,8F
 446+ 9B64 18 10        	jr 4F
 447+ 9B66 3A 89 88     1 ld a,(CTRL_DESPLZ)
 448+ 9B69 FE F9        	cp $f9
 449+ 9B6B 20 21        	jr nz,8F
 450+ 9B6D 18 07        	jr 4F
 451+ 9B6F 3A 89 88     7 ld a,(CTRL_DESPLZ)
 452+ 9B72 FE FB        	cp $fb
 453+ 9B74 20 18        	jr nz,8F
 454+ 9B76
 455+ 9B76              ; ---------- ---------- ----------
 456+ 9B76
 457+ 9B76              4
 458+ 9B76 CD 7C 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 459+ 9B79              ;	call Reinicio
 460+ 9B79
 461+ 9B79              ; ---------- ---------- ----------
 462+ 9B79
 463+ 9B79 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 464+ 9B7B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 465+ 9B7C
 466+ 9B7C              ;	ld hl,(Indice_Sprite_izq)
 467+ 9B7C              ;	ld (Puntero_DESPLZ_izq),hl
 468+ 9B7C
 469+ 9B7C CD 95 9B     	call DESPLZ_IZQ
 470+ 9B7F C1           	pop bc
 471+ 9B80 10 F9        	djnz 5B
 472+ 9B82 2A 83 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 473+ 9B85 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 474+ 9B86 22 83 88     	ld (Posicion_actual),hl
 475+ 9B89 CD E5 9C     	call Genera_coordenadas
 476+ 9B8C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 477+ 9B8E
 478+ 9B8E              ; ---------- ---------- ----------
 479+ 9B8E
 480+ 9B8E              ; Movemos, no hay recolocación.
 481+ 9B8E
 482+ 9B8E 2A 83 88     8 ld hl,(Posicion_actual)
 483+ 9B91 CD 95 9B     	call DESPLZ_IZQ
 484+ 9B94 C9           2 ret
 485+ 9B95
 486+ 9B95              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 487+ 9B95              ;
 488+ 9B95              ;	22/9/22
 489+ 9B95
 490+ 9B95              DESPLZ_IZQ
 491+ 9B95
 492+ 9B95 CD A4 9B     	call Desplaza_izquierda
 493+ 9B98 CD F0 9B         call modifica_parametros_1er_DESPLZ
 494+ 9B9B CD 18 9C     	call Ciclo_completo_2
 495+ 9B9E 21 B1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 496+ 9BA1 CB BE        	res 7,(hl)
 497+ 9BA3 C9           	ret
 498+ 9BA4
 499+ 9BA4              Desplaza_izquierda
 500+ 9BA4
 501+ 9BA4 3A 96 88     	ld a,(Vel_left)
 502+ 9BA7 47           	ld b,a
 503+ 9BA8 2A 91 88     	ld hl,(Puntero_DESPLZ_izq)
 504+ 9BAB 23           1 inc hl
 505+ 9BAC 23           	inc hl
 506+ 9BAD 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 507+ 9BAF 22 91 88     	ld (Puntero_DESPLZ_izq),hl
 508+ 9BB2 CD CE 8C     	call Extrae_address
 509+ 9BB5 22 85 88     	ld (Puntero_objeto),hl
 510+ 9BB8
 511+ 9BB8              ; Modifica (Puntero_DESPLZ_der).
 512+ 9BB8
 513+ 9BB8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 514+ 9BB8              ; Cuántos movimientos hemos hecho ??
 515+ 9BB8              ; DE contiene (Puntero_DESPLZ_izq).
 516+ 9BB8
 517+ 9BB8 2A 8D 88     7 ld hl,(Indice_Sprite_izq)
 518+ 9BBB EB           	ex de,hl
 519+ 9BBC A7           	and a
 520+ 9BBD ED 52        	sbc hl,de
 521+ 9BBF CB 3D        	srl l
 522+ 9BC1 3E 08        6 ld a,8
 523+ 9BC3 95           	sub l
 524+ 9BC4 30 1E        	jr nc,3F
 525+ 9BC6
 526+ 9BC6              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 527+ 9BC6              ; B="0".
 528+ 9BC6
 529+ 9BC6 04           4 inc b
 530+ 9BC7 3C           	inc a
 531+ 9BC8 20 FC        	jr nz,4B
 532+ 9BCA 78           	ld a,b
 533+ 9BCB 08           	ex af,af
 534+ 9BCC 2A 8D 88     	ld hl,(Indice_Sprite_izq)
 535+ 9BCF 23           5 inc hl
 536+ 9BD0 23           	inc hl
 537+ 9BD1 10 FC        	djnz 5B
 538+ 9BD3 22 91 88     	ld (Puntero_DESPLZ_izq),hl
 539+ 9BD6 CD CE 8C     	call Extrae_address
 540+ 9BD9 22 85 88     	ld (Puntero_objeto),hl
 541+ 9BDC
 542+ 9BDC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 543+ 9BDC              ; _(Posicion_actual).
 544+ 9BDC
 545+ 9BDC 21 83 88     	ld hl,Posicion_actual
 546+ 9BDF 35           	dec (hl)
 547+ 9BE0 08           	ex af,af
 548+ 9BE1 6F           	ld l,a
 549+ 9BE2 18 DD        	jr 6B
 550+ 9BE4
 551+ 9BE4              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 552+ 9BE4
 553+ 9BE4 47           3 ld b,a
 554+ 9BE5 2A 8B 88     	ld hl,(Indice_Sprite_der)
 555+ 9BE8 23           2 inc hl
 556+ 9BE9 23           	inc hl
 557+ 9BEA 10 FC        	djnz 2B
 558+ 9BEC 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 559+ 9BEF C9           8 ret
 560+ 9BF0
 561+ 9BF0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 562+ 9BF0              ;
 563+ 9BF0              ;	modifica_parametros_1er_DESPLZ
 564+ 9BF0              ;
 565+ 9BF0              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 566+ 9BF0              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 567+ 9BF0              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 568+ 9BF0
 569+ 9BF0 3A 89 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 570+ 9BF3 A7           	and a
 571+ 9BF4 20 1E        	jr nz,1F
 572+ 9BF6 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 573+ 9BF7 32 89 88         ld (CTRL_DESPLZ),a
 574+ 9BFA 21 82 88     	ld hl,Columns
 575+ 9BFD 34           	inc (hl)
 576+ 9BFE 3A 95 88     	ld a,(Cuad_objeto)
 577+ 9C01 E6 01        	and 1
 578+ 9C03 20 0F        	jr nz,1F
 579+ 9C05 2A 83 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 580+ 9C08 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 581+ 9C09 22 83 88     	ld (Posicion_actual),hl
 582+ 9C0C CD E5 9C     	call Genera_coordenadas
 583+ 9C0F CD 6B 9C     	call Dec_CTRL_DESPLZ
 584+ 9C12 18 03        	jr 2F
 585+ 9C14 CD 6B 9C     1 call Dec_CTRL_DESPLZ
 586+ 9C17 C9           2 ret
 587+ 9C18
 588+ 9C18              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 589+ 9C18
 590+ 9C18 3A 89 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 591+ 9C1B FE F7        	cp $f7
 592+ 9C1D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 593+ 9C1F 30 2C        	jr nc,3F
 594+ 9C21
 595+ 9C21              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 596+ 9C21
 597+ 9C21 06 00        	ld b,0
 598+ 9C23 04           4 inc b
 599+ 9C24 3C           	inc a
 600+ 9C25 FE F7        	cp $f7
 601+ 9C27 20 FA        	jr nz,4B
 602+ 9C29 3E FF        	ld a,$ff
 603+ 9C2B 90           	sub b
 604+ 9C2C 32 89 88     	ld (CTRL_DESPLZ),a
 605+ 9C2F 18 1C        	jr 3F
 606+ 9C31
 607+ 9C31              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 608+ 9C31
 609+ 9C31 21 82 88     1 ld hl,Columns
 610+ 9C34 35           	dec (hl)
 611+ 9C35 AF           	xor a
 612+ 9C36 32 89 88     	ld (CTRL_DESPLZ),a
 613+ 9C39 3A 95 88     	ld a,(Cuad_objeto)
 614+ 9C3C E6 01        	and 1
 615+ 9C3E 28 0A        	jr z,2F
 616+ 9C40 2A 83 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 617+ 9C43 2B           	dec hl
 618+ 9C44 22 83 88     	ld (Posicion_actual),hl
 619+ 9C47 CD E5 9C     	call Genera_coordenadas
 620+ 9C4A
 621+ 9C4A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 622+ 9C4A
 623+ 9C4A CD F8 8C     2 call Inicia_puntero_objeto_izq
 624+ 9C4D C9           3 ret
 625+ 9C4E
 626+ 9C4E              ; ---------- ---------- ---------- ---------- ---------- ----------
 627+ 9C4E              ;
 628+ 9C4E              ;	19/10/22
 629+ 9C4E              ;
 630+ 9C4E              ;	(cp 29) para un Amadeus de 3 Columns.
 631+ 9C4E              ;	(cp 30)   ""  ""    ""     2 Columns.
 632+ 9C4E
 633+ 9C4E 3A 87 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 634+ 9C51 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 635+ 9C53 C9           	ret
 636+ 9C54
 637+ 9C54              ; ---------- ---------- ---------- ---------- ---------- ----------
 638+ 9C54              ;
 639+ 9C54              ;	19/10/22
 640+ 9C54              ;
 641+ 9C54              ;	(cp 2) para un Amadeus de 3 Columns.
 642+ 9C54              ;	(cp 1)   ""  ""    ""     2 Columns.
 643+ 9C54
 644+ 9C54 3A 87 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 645+ 9C57 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 646+ 9C59 C9           	ret
 647+ 9C5A
 648+ 9C5A              ; ---------- ---------- ---------- ---------- ---------- ----------
 649+ 9C5A              ;
 650+ 9C5A              ;	24/7/22
 651+ 9C5A              ;
 652+ 9C5A              ;	Inc_CTRL_DESPLZ
 653+ 9C5A              ;
 654+ 9C5A              ;
 655+ 9C5A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 656+ 9C5A
 657+ 9C5A 21 89 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 658+ 9C5D 3A 97 88     	ld a,(Vel_right)
 659+ 9C60 A7           	and a
 660+ 9C61 28 06        	jr z,1F
 661+ 9C63 47           	ld b,a
 662+ 9C64 34           3 inc (hl)
 663+ 9C65 10 FD        	djnz 3B
 664+ 9C67 18 01        	jr 2F
 665+ 9C69 34           1 inc (hl)
 666+ 9C6A C9           2 ret
 667+ 9C6B
 668+ 9C6B              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 9C6B              ;
 670+ 9C6B              ;	5/2/23
 671+ 9C6B              ;
 672+ 9C6B              ;	Dec_CTRL_DESPLZ
 673+ 9C6B              ;
 674+ 9C6B              ;
 675+ 9C6B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 676+ 9C6B
 677+ 9C6B 21 89 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 678+ 9C6E 3A 96 88     	ld a,(Vel_left)
 679+ 9C71 A7           	and a
 680+ 9C72 28 06        	jr z,1F
 681+ 9C74 47           	ld b,a
 682+ 9C75 35           3 dec (hl)
 683+ 9C76 10 FD        	djnz 3B
 684+ 9C78 18 01        	jr 2F
 685+ 9C7A 35           1 dec (hl)
 686+ 9C7B C9           2 ret
 687+ 9C7C
 688+ 9C7C              ; ---------- ---------- ---------- ---------- ---------- ----------
 689+ 9C7C
 690+ 9C7C 2A 83 88     Reaparece_derecha ld hl,(Posicion_actual)
 691+ 9C7F 01 1F 00     	ld bc,31
 692+ 9C82 A7           	and a
 693+ 9C83 ED 4A        	adc hl,bc
 694+ 9C85 22 83 88     	ld (Posicion_actual),hl
 695+ 9C88 21 B1 88     	ld hl,Ctrl_0														; $xxx1
 696+ 9C8B CB C6        	set 0,(hl)
 697+ 9C8D C9           	ret
 698+ 9C8E
 699+ 9C8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 700+ 9C8E
 701+ 9C8E 2A 83 88     Reaparece_izquierda ld hl,(Posicion_actual)
 702+ 9C91 01 1F 00     	ld bc,31
 703+ 9C94 A7           	and a
 704+ 9C95 ED 42        	sbc hl,bc
 705+ 9C97 22 83 88     	ld (Posicion_actual),hl 											; $xx1x
 706+ 9C9A 21 B1 88     	ld hl,Ctrl_0
 707+ 9C9D CB CE        	set 1,(hl)
 708+ 9C9F C9           	ret
 709+ 9CA0
 710+ 9CA0              ; ---------- ---------- ---------- ---------- ---------- ----------
 711+ 9CA0
 712+ 9CA0 24           Reaparece_abajo inc h
 713+ 9CA1 01 E0 17     	ld bc,$17e0
 714+ 9CA4 A7           	and a
 715+ 9CA5 ED 4A        	adc hl,bc
 716+ 9CA7 22 83 88     	ld (Posicion_actual),hl
 717+ 9CAA 21 B1 88     	ld hl,Ctrl_0
 718+ 9CAD CB D6        	set 2,(hl)
 719+ 9CAF C9           	ret
 720+ 9CB0
 721+ 9CB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 722+ 9CB0
 723+ 9CB0 01 E0 17     Reaparece_arriba ld bc,$17e0
 724+ 9CB3 A7           	and a
 725+ 9CB4 ED 42        	sbc hl,bc
 726+ 9CB6 22 83 88     	ld (Posicion_actual),hl
 727+ 9CB9 21 B1 88     	ld hl,Ctrl_0
 728+ 9CBC CB DE        	set 3,(hl)
 729+ 9CBE C9           	ret
 730+ 9CBF
 731+ 9CBF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 732+ 9CBF              ;
 733+ 9CBF              ;	15/07/23
 734+ 9CBF
 735+ 9CBF              Reinicio
 736+ 9CBF
 737+ 9CBF              ; Vamos a reiniciar los punteros y variables de movimiento.
 738+ 9CBF
 739+ 9CBF AF           	xor a
 740+ 9CC0 21 BC 88     	ld hl,Puntero_indice_mov_bucle
 741+ 9CC3 CD E1 9C     	call Limpia_contenido_hl
 742+ 9CC6
 743+ 9CC6 21 83 88     	ld hl,Posicion_actual
 744+ 9CC9 CD E1 9C     	call Limpia_contenido_hl
 745+ 9CCC
 746+ 9CCC CD 44 A0     	call Inicializa_Puntero_indice_mov
 747+ 9CCF CD A1 9F     	call Inicia_Puntero_mov
 748+ 9CD2
 749+ 9CD2 21 BE 88     	ld hl,Incrementa_puntero
 750+ 9CD5 06 05        	ld b,5
 751+ 9CD7 77           1 ld (hl),a
 752+ 9CD8 23           	inc hl
 753+ 9CD9 10 FC        	djnz 1B
 754+ 9CDB
 755+ 9CDB 21 B6 88     	ld hl,Ctrl_2
 756+ 9CDE CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 757+ 9CE0
 758+ 9CE0 C9           	ret
 759+ 9CE1
 760+ 9CE1 77           Limpia_contenido_hl	ld (hl),a
 761+ 9CE2 23           	inc hl
 762+ 9CE3 77           	ld (hl),a
 763+ 9CE4 C9           	ret
 764+ 9CE5
 765+ 9CE5
# file closed: Direcciones.asm
1876  9CE5              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CE5              ; ------------------------------------------------------------------------
   2+ 9CE5              ;
   3+ 9CE5              ;	02/04/23
   4+ 9CE5              ;
   5+ 9CE5              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CE5              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CE5              ;
   8+ 9CE5              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CE5              ;
  10+ 9CE5              ;	Modifica: A,BC y DE.
  11+ 9CE5
  12+ 9CE5 C5           Genera_coordenadas push bc
  13+ 9CE6 E5           	push hl
  14+ 9CE7 D5           	push de
  15+ 9CE8
  16+ 9CE8 2A 83 88     	ld hl,(Posicion_actual)
  17+ 9CEB
  18+ 9CEB 7D           	ld a,l
  19+ 9CEC E6 1F        	and $1f
  20+ 9CEE 32 87 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CF1
  22+ 9CF1 CD 4D 99     	call calcula_tercio
  23+ 9CF4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CF5
  25+ 9CF5 1E 00        	ld e,0
  26+ 9CF7 7D           	ld a,l
  27+ 9CF8 E6 E0        	and $e0
  28+ 9CFA 28 01        	jr z,1F
  29+ 9CFC 04           	inc b
  30+ 9CFD
  31+ 9CFD 04           1 inc b
  32+ 9CFE 05           	dec b
  33+ 9CFF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D01              ;														; _ , salimos.
  35+ 9D01 1C           3 inc e
  36+ 9D02 D6 20        	sub 32
  37+ 9D04 20 FB        	jr nz,3B
  38+ 9D06 10 F5        	djnz 1B
  39+ 9D08
  40+ 9D08 7B           2 ld a,e
  41+ 9D09 32 88 88     	ld (Coordenada_y),a
  42+ 9D0C
  43+ 9D0C D1           	pop de
  44+ 9D0D E1           	pop hl
  45+ 9D0E C1           	pop bc
  46+ 9D0F
  47+ 9D0F C9           	ret
  48+ 9D10
  49+ 9D10              ; ------------------------------------------------------------------------
  50+ 9D10              ;	28/05/23
  51+ 9D10              ;
  52+ 9D10              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D10              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D10              ;
  55+ 9D10              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D10              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D10              ;
  58+ 9D10              ;		DE="$120d"
  59+ 9D10              ;
  60+ 9D10              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D10              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D10              ;
  63+ 9D10              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D10
  65+ 9D10              ;	Modifica: A,BC y DE.
  66+ 9D10
  67+ 9D10
  68+ 9D10              Genera_coordenadas_disparo
  69+ 9D10
  70+ 9D10              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D10
  72+ 9D10 7D           	ld a,l
  73+ 9D11 E6 1F        	and $1f
  74+ 9D13 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D14 CD 4D 99     	call calcula_tercio
  76+ 9D17 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D18 1E 00        	ld e,0
  78+ 9D1A 7D           	ld a,l
  79+ 9D1B E6 E0        	and $e0
  80+ 9D1D 28 01        	jr z,1F
  81+ 9D1F 04           	inc b
  82+ 9D20 1C           1 inc e
  83+ 9D21 D6 20        	sub 32
  84+ 9D23 20 FB        	jr nz,1B
  85+ 9D25 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D27 C9           	ret
  87+ 9D28
# file closed: Genera_coordenadas.asm
1877  9D28              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D28              ; Relojes y temporizaciones.
   2+ 9D28
   3+ 9D28              ; ------------------------------------------------------
   4+ 9D28              ;
   5+ 9D28              ;	16/7/23
   6+ 9D28              ;
   7+ 9D28              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D28              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D28              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D28              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D28              ;
  12+ 9D28              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D28              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D28
  15+ 9D28              ; Disparo_entidad db 1
  16+ 9D28              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D28              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D28
  19+ 9D28              Habilita_disparos
  20+ 9D28
  21+ 9D28 7E           	ld a,(hl)
  22+ 9D29 A7           	and a
  23+ 9D2A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D2B
  25+ 9D2B EB           	ex de,hl
  26+ 9D2C
  27+ 9D2C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D2D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D2E
  30+ 9D2E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D2E
  32+ 9D2E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D2F 7E           	ld a,(hl)
  34+ 9D30 23           	inc hl
  35+ 9D31 77           	ld (hl),a
  36+ 9D32
  37+ 9D32 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D33 3E 01        	ld a,1
  39+ 9D35 77           	ld (hl),a
  40+ 9D36 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1878  9D37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D37
   2+ 9D37
   3+ 9D37              ;   07/07/23
   4+ 9D37              ;
   5+ 9D37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D37              ;
   7+ 9D37              ;   Codificación:
   8+ 9D37              ;
   9+ 9D37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D37              ;
  11+ 9D37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D37              ;
  13+ 9D37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D37              ;
  15+ 9D37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D37              ;
  17+ 9D37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D37              ;                               ..... %01000010 Vel_up 4
  19+ 9D37              ;                                               Vel_down 2
  20+ 9D37              ;                               ..... $42
  21+ 9D37              ;
  22+ 9D37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D37              ;
  24+ 9D37              ;                               ..... %01000010 Vel_left 4
  25+ 9D37              ;                                               Vel_right 2
  26+ 9D37              ;                               ..... $42
  27+ 9D37              ;
  28+ 9D37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D37              ;
  30+ 9D37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D37              ;
  32+ 9D37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D37              ;
  34+ 9D37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D37              ;                                     $53
  36+ 9D37              ;
  37+ 9D37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D37              ;
  39+ 9D37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D37              ;
  42+ 9D37              ;                       Arriba ..... $81
  43+ 9D37              ;                       Arriba - izquierda ..... $a1
  44+ 9D37              ;                       Arriba - derecha ..... $91
  45+ 9D37              ;
  46+ 9D37              ;                       Abajo ..... $41
  47+ 9D37              ;                       Abajo - izquierda ..... $61
  48+ 9D37              ;                       Abajo - derecha ..... $51
  49+ 9D37              ;
  50+ 9D37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D37              ;
  52+ 9D37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D37              ;
  56+ 9D37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D37              ;
  61+ 9D37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D37              ;
  65+ 9D37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D37
  70+ 9D37              ; ----- ----- ----- ----- -----
  71+ 9D37
  72+ 9D37 63 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D39 6B 9D            defw F_1
  74+ 9D3B 75 9D            defw F_2
  75+ 9D3D 7F 9D            defw Codo_abajo_derecha
  76+ 9D3F B3 9D            defw Derecha_y_subiendo
  77+ 9D41 BD 9D            defw Derecha_y_subiendo_1
  78+ 9D43 C7 9D            defw F_3
  79+ 9D45 D1 9D            defw F_4
  80+ 9D47 DB 9D            defw Derecha_y_bajando
  81+ 9D49 E5 9D            defw Derecha_y_bajando_1
  82+ 9D4B EF 9D            defw Derecha_y_bajando_2
  83+ 9D4D F9 9D            defw Codo_derecha_abajo
  84+ 9D4F 29 9E            defw Codo_abajo_izq.
  85+ 9D51 5D 9E            defw Izquierda_y_subiendo
  86+ 9D53 67 9E            defw Izquierda_y_subiendo_1
  87+ 9D55 71 9E            defw F_5
  88+ 9D57 7B 9E            defw F_6
  89+ 9D59 85 9E            defw Izquierda_y_bajando
  90+ 9D5B 8F 9E            defw Izquierda_y_bajando_1
  91+ 9D5D 99 9E            defw Izquierda_y_bajando_2
  92+ 9D5F A3 9E            defw Codo_izquierda_abajo
  93+ 9D61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D63
  95+ 9D63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D6B
  98+ 9D6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D73 08 00
 100+ 9D75 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D7D 0F FE
 102+ 9D7F
 103+ 9D7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DB3
 117+ 9DB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DBB 06 00
 119+ 9DBD
 120+ 9DBD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DC5 02 00
 122+ 9DC7
 123+ 9DC7 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DCB 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DCF 04 00
 125+ 9DD1 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DD5 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DD9 08 00
 127+ 9DDB
 128+ 9DDB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DDF 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DE3 02 00
 130+ 9DE5
 131+ 9DE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DE9 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DED 06 00
 133+ 9DEF
 134+ 9DEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DF3 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DF7 06 00
 136+ 9DF9
 137+ 9DF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DF9
 139+ 9DF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E29
 152+ 9E29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E5D
 166+ 9E5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E65 06 00
 168+ 9E67
 169+ 9E67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E6F 02 00
 171+ 9E71
 172+ 9E71 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E75 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E79 04 00
 174+ 9E7B 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E7F 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E83 08 00
 176+ 9E85
 177+ 9E85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E89 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E8D 02 00
 179+ 9E8F
 180+ 9E8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E93 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E97 06 00
 182+ 9E99
 183+ 9E99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E9D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EA1 06 00
 185+ 9EA3
 186+ 9EA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9ECB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9ECF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9ED3
 199+ 9ED3              ; ----- ----- ----- ----- -----
 200+ 9ED3              ;
 201+ 9ED3              ;   28/12/23
 202+ 9ED3
 203+ 9ED3              Movimiento
 204+ 9ED3
 205+ 9ED3              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9ED3
 207+ 9ED3 3A B6 88         ld a,(Ctrl_2)
 208+ 9ED6 CB 57            bit 2,a
 209+ 9ED8 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9EDA
 211+ 9EDA 2A BA 88         ld hl,(Puntero_mov)
 212+ 9EDD 7E               ld a,(hl)
 213+ 9EDE
 214+ 9EDE              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9EDE
 216+ 9EDE              Inicia_desplazamiento.
 217+ 9EDE
 218+ 9EDE              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9EDE
 220+ 9EDE CD DE 9F         call Ajusta_velocidad_desplazamiento
 221+ 9EE1
 222+ 9EE1              ; Iniciamos (Repetimos_mov).
 223+ 9EE1
 224+ 9EE1 7E               ld a,(hl)
 225+ 9EE2 E6 0F            and $0f
 226+ 9EE4 32 C0 88         ld (Repetimos_desplazamiento),a
 227+ 9EE7 32 C1 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9EEA
 229+ 9EEA              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9EEA
 231+ 9EEA 23               inc hl
 232+ 9EEB 7E               ld a,(hl)
 233+ 9EEC 32 C3 88         ld (Cola_de_desplazamiento),a
 234+ 9EEF 2B               dec hl
 235+ 9EF0
 236+ 9EF0 21 B6 88         ld hl,Ctrl_2
 237+ 9EF3 CB D6            set 2,(hl)
 238+ 9EF5
 239+ 9EF5              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9EF5              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9EF5
 242+ 9EF5              Desplazamiento_iniciado
 243+ 9EF5
 244+ 9EF5 CD AC 9F         call Aplica_desplazamiento
 245+ 9EF8
 246+ 9EF8              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9EF8
 248+ 9EF8 3A E5 88         ld a,(Ctrl_3)
 249+ 9EFB CB 57            bit 2,a
 250+ 9EFD C0               ret nz
 251+ 9EFE
 252+ 9EFE 3A B6 88         ld a,(Ctrl_2)
 253+ 9F01 CB 67            bit 4,a
 254+ 9F03 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9F04
 256+ 9F04 21 C0 88     3 ld hl,Repetimos_desplazamiento
 257+ 9F07 35               dec (hl)
 258+ 9F08 C0               ret nz
 259+ 9F09
 260+ 9F09              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9F09              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9F09              ; Analiza (Cola_de_desplazamiento).
 263+ 9F09
 264+ 9F09 3A C3 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9F0C A7               and a
 266+ 9F0D CC 07 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9F10 28 30            jr z,Reinicia_el_movimiento
 268+ 9F12
 269+ 9F12 FE FF            cp $ff
 270+ 9F14 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9F16
 272+ 9F16 FE FE            cp $fe
 273+ 9F18 CC 85 9F         call z,Fijamos_bucle
 274+ 9F1B 28 25            jr z,Reinicia_el_movimiento
 275+ 9F1D
 276+ 9F1D FE FD            cp $fd
 277+ 9F1F 20 11            jr nz,1F
 278+ 9F21
 279+ 9F21              ; ---
 280+ 9F21              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9F21
 282+ 9F21 3A B6 88         ld a,(Ctrl_2)
 283+ 9F24 CB 5F            bit 3,a
 284+ 9F26 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9F28
 286+ 9F28              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9F28
 288+ 9F28 21 B6 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9F2B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9F2D
 291+ 9F2D CD 96 9F         call Inicia_Repetimos_movimiento
 292+ 9F30 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9F32              ; ---
 294+ 9F32
 295+ 9F32 FE 01        1 cp 1
 296+ 9F34 CA 6F 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9F37
 298+ 9F37 3D               dec a
 299+ 9F38 32 C3 88         ld (Cola_de_desplazamiento),a
 300+ 9F3B
 301+ 9F3B 3A C1 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9F3E 32 C0 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9F41              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9F41 C9               ret
 305+ 9F42
 306+ 9F42              Reinicia_el_movimiento
 307+ 9F42
 308+ 9F42 3A B6 88         ld a,(Ctrl_2)
 309+ 9F45 CB 5F            bit 3,a
 310+ 9F47 28 1B            jr z,2F
 311+ 9F49
 312+ 9F49              ; (Cola_de_desplazamiento)="254".
 313+ 9F49
 314+ 9F49 21 C2 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F4C 35               dec (hl)
 316+ 9F4D 20 15            jr nz,2F
 317+ 9F4F
 318+ 9F4F              ; Fin de las repeticiones del último movimiento.
 319+ 9F4F
 320+ 9F4F 21 B6 88         ld hl,Ctrl_2
 321+ 9F52 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F54
 323+ 9F54 2A BA 88         ld hl,(Puntero_mov)
 324+ 9F57 23               inc hl
 325+ 9F58 23               inc hl
 326+ 9F59 23               inc hl
 327+ 9F5A 22 BA 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F5D              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F5D 7E               ld a,(hl)
 330+ 9F5E 32 C3 88         ld (Cola_de_desplazamiento),a
 331+ 9F61
 332+ 9F61 C3 09 9F         jp Cola
 333+ 9F64
 334+ 9F64 CD A1 9F     2 call Inicia_Puntero_mov
 335+ 9F67
 336+ 9F67 21 B6 88         ld hl,Ctrl_2
 337+ 9F6A CB 96            res 2,(hl)
 338+ 9F6C
 339+ 9F6C C3 D3 9E         jp Movimiento
 340+ 9F6F
 341+ 9F6F              Siguiente_desplazamiento
 342+ 9F6F
 343+ 9F6F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F6F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F6F
 346+ 9F6F 21 B6 88         ld hl,Ctrl_2
 347+ 9F72 CB 96            res 2,(hl)
 348+ 9F74
 349+ 9F74 2A BA 88         ld hl,(Puntero_mov)
 350+ 9F77 23               inc hl
 351+ 9F78 23               inc hl
 352+ 9F79 22 BA 88         ld (Puntero_mov),hl
 353+ 9F7C
 354+ 9F7C 7E               ld a,(hl)
 355+ 9F7D A7               and a
 356+ 9F7E CC 07 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9F81 CA 42 9F         jp z,Reinicia_el_movimiento
 358+ 9F84
 359+ 9F84 C9               ret
 360+ 9F85
 361+ 9F85              ; Subrutinas -----------------------------------------
 362+ 9F85              ; ---------- --------- --------- ---------- ----------
 363+ 9F85              ;
 364+ 9F85              ;   24/07/23
 365+ 9F85              ;
 366+ 9F85              ;   Fijamos_bucle
 367+ 9F85              ;
 368+ 9F85              ;
 369+ 9F85
 370+ 9F85              Fijamos_bucle
 371+ 9F85
 372+ 9F85 3A BE 88         ld a,(Incrementa_puntero)
 373+ 9F88 3C               inc a
 374+ 9F89 32 BF 88         ld (Incrementa_puntero_backup),a
 375+ 9F8C
 376+ 9F8C CD 07 A0         call Incrementa_Puntero_indice_mov
 377+ 9F8F 2A B8 88         ld hl,(Puntero_indice_mov)
 378+ 9F92 22 BC 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9F95 C9               ret
 380+ 9F96
 381+ 9F96              ; ---------- --------- --------- ---------- ----------
 382+ 9F96              ;
 383+ 9F96              ;   07/7/23
 384+ 9F96              ;
 385+ 9F96              ;   Inicia_Repetimos_movimiento
 386+ 9F96              ;
 387+ 9F96              ;
 388+ 9F96
 389+ 9F96              Inicia_Repetimos_movimiento
 390+ 9F96
 391+ 9F96              ; Iniciamos (Repetimos_movimiento).
 392+ 9F96
 393+ 9F96 DD 2A BA 88      ld ix,(Puntero_mov)
 394+ 9F9A DD 7E 02         ld a,(ix+2)
 395+ 9F9D 32 C2 88         ld (Repetimos_movimiento),a
 396+ 9FA0
 397+ 9FA0 C9               ret
 398+ 9FA1
 399+ 9FA1              ; ---------- --------- --------- ---------- ----------
 400+ 9FA1              ;
 401+ 9FA1              ;   26/6/23
 402+ 9FA1              ;
 403+ 9FA1              ;   Inicia_Puntero_mov
 404+ 9FA1              ;
 405+ 9FA1              ;
 406+ 9FA1
 407+ 9FA1 2A B8 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9FA4 5E               ld e,(hl)
 409+ 9FA5 23               inc hl
 410+ 9FA6 56               ld d,(hl)
 411+ 9FA7 EB               ex de,hl
 412+ 9FA8 22 BA 88         ld (Puntero_mov),hl
 413+ 9FAB C9               ret
 414+ 9FAC
 415+ 9FAC              ; ---------- --------- --------- ---------- ----------
 416+ 9FAC              ;
 417+ 9FAC              ;   27/06/23
 418+ 9FAC              ;
 419+ 9FAC              ;   Aplica_movimiento.
 420+ 9FAC
 421+ 9FAC              Aplica_desplazamiento
 422+ 9FAC
 423+ 9FAC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9FAC
 425+ 9FAC 2A BA 88         ld hl, (Puntero_mov)
 426+ 9FAF
 427+ 9FAF 7E               ld a,(hl)
 428+ 9FB0 E6 F0            and $f0
 429+ 9FB2 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9FB3
 431+ 9FB3 CB 7E            bit 7,(hl)
 432+ 9FB5 28 03            jr z,1F
 433+ 9FB7 CD CC 99         call Mov_up
 434+ 9FBA 2A BA 88     1 ld hl, (Puntero_mov)
 435+ 9FBD CB 76            bit 6,(hl)
 436+ 9FBF 28 09            jr z,2F
 437+ 9FC1 CD 93 99         call Mov_down
 438+ 9FC4
 439+ 9FC4              ; Se ha aplicado reinicio ???
 440+ 9FC4              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9FC4
 442+ 9FC4 3A E5 88         ld a,(Ctrl_3)
 443+ 9FC7 CB 57            bit 2,a
 444+ 9FC9 C0               ret nz
 445+ 9FCA
 446+ 9FCA 2A BA 88     2 ld hl, (Puntero_mov)
 447+ 9FCD CB 6E            bit 5,(hl)
 448+ 9FCF 28 03            jr z,3F
 449+ 9FD1 CD 32 9B         call Mov_left
 450+ 9FD4 2A BA 88     3 ld hl, (Puntero_mov)
 451+ 9FD7 CB 66            bit 4,(hl)
 452+ 9FD9 C8               ret z
 453+ 9FDA CD 0F 9A         call Mov_right
 454+ 9FDD C9               ret
 455+ 9FDE
 456+ 9FDE              ; ---------- --------- --------- ---------- ----------
 457+ 9FDE              ;
 458+ 9FDE              ;   26/06/23
 459+ 9FDE              ;
 460+ 9FDE              ;   Ajusta_velocidad_desplazamiento.
 461+ 9FDE
 462+ 9FDE              Ajusta_velocidad_desplazamiento
 463+ 9FDE
 464+ 9FDE              ; 1er byte de la cadena de movimiento.
 465+ 9FDE              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9FDE
 467+ 9FDE CD FC 9F         call Extrae_nibble_alto
 468+ 9FE1
 469+ 9FE1 32 98 88         ld (Vel_up),a
 470+ 9FE4 79               ld a,c
 471+ 9FE5 E6 0F            and $0f
 472+ 9FE7 32 99 88         ld (Vel_down),a
 473+ 9FEA
 474+ 9FEA              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9FEA              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9FEA
 477+ 9FEA 23               inc hl
 478+ 9FEB CD FC 9F         call Extrae_nibble_alto
 479+ 9FEE
 480+ 9FEE 32 96 88         ld (Vel_left),a
 481+ 9FF1 79               ld a,c
 482+ 9FF2 E6 0F            and $0f
 483+ 9FF4 32 97 88         ld (Vel_right),a
 484+ 9FF7
 485+ 9FF7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9FF7
 487+ 9FF7 23               inc hl
 488+ 9FF8 22 BA 88         ld (Puntero_mov),hl
 489+ 9FFB C9               ret
 490+ 9FFC
 491+ 9FFC 06 04        Extrae_nibble_alto ld b,4
 492+ 9FFE 7E               ld a,(hl)
 493+ 9FFF 4F               ld c,a
 494+ A000 E6 F0            and $f0
 495+ A002 CB 3F        1 srl a
 496+ A004 10 FC            djnz 1B
 497+ A006 C9               ret
 498+ A007
 499+ A007              ; ---------- --------- --------- ---------- ----------
 500+ A007              ;
 501+ A007              ;   5/7/23
 502+ A007              ;
 503+ A007              ;   Incrementa_Puntero_indice_mov
 504+ A007
 505+ A007              Incrementa_Puntero_indice_mov
 506+ A007
 507+ A007 21 BE 88         ld hl,Incrementa_puntero
 508+ A00A 34               inc (hl)
 509+ A00B
 510+ A00B 2A B8 88         ld hl,(Puntero_indice_mov)
 511+ A00E 01 02 00         ld bc,2
 512+ A011 A7               and a
 513+ A012 09               add hl,bc
 514+ A013 22 B8 88         ld (Puntero_indice_mov),hl
 515+ A016
 516+ A016 7E               ld a,(hl)
 517+ A017 A7               and a
 518+ A018
 519+ A018              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ A018
 521+ A018              ;    jr z,$
 522+ A018
 523+ A018              ;! Reinicia el Patrón de movimiento.
 524+ A018
 525+ A018 CC 1D A0         call z,Inicializa_Puntero_indice_mov_2
 526+ A01B
 527+ A01B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ A01C
 529+ A01C C9               ret
 530+ A01D
 531+ A01D
 532+ A01D              ; ---------- --------- --------- ---------- ----------
 533+ A01D              ;
 534+ A01D              ;   24/07/23
 535+ A01D              ;
 536+ A01D              ;   Inicializa_Puntero_indice_mov
 537+ A01D
 538+ A01D              Inicializa_Puntero_indice_mov_2
 539+ A01D
 540+ A01D              ; Existe etiqueta de bucle principal???
 541+ A01D
 542+ A01D 2A BC 88         ld hl,(Puntero_indice_mov_bucle)
 543+ A020 24               inc h
 544+ A021 25               dec h
 545+ A022 28 05            jr z,2F
 546+ A024
 547+ A024 22 B8 88         ld (Puntero_indice_mov),hl
 548+ A027 18 14            jr 3F
 549+ A029
 550+ A029              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ A029
 552+ A029 3A BE 88     2 ld a,(Incrementa_puntero)
 553+ A02C 47               ld b,a
 554+ A02D
 555+ A02D 2A B8 88         ld hl,(Puntero_indice_mov)
 556+ A030 2B           1 dec hl
 557+ A031 2B               dec hl
 558+ A032 10 FC            djnz 1B
 559+ A034 22 B8 88         ld (Puntero_indice_mov),hl
 560+ A037
 561+ A037 AF               xor a
 562+ A038 32 BE 88         ld (Incrementa_puntero),a
 563+ A03B 18 06            jr 4F
 564+ A03D
 565+ A03D 3A BF 88     3 ld a,(Incrementa_puntero_backup)
 566+ A040 32 BE 88         ld (Incrementa_puntero),a
 567+ A043 C9           4 ret
 568+ A044
 569+ A044 3A 80 88     Inicializa_Puntero_indice_mov ld a,(Tipo)
 570+ A047 CD 0E 88         call Calcula_salto_en_BC
 571+ A04A 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
 572+ A04D A7               and a
 573+ A04E ED 4A            adc hl,bc
 574+ A050 CD CE 8C         call Extrae_address
 575+ A053 22 B8 88         ld (Puntero_indice_mov),hl
 576+ A056 C9               ret
 577+ A057
# file closed: Patrones_de_mov.asm
1879  A057              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A057              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A057              ;
   3+ A057              ;	12/12/23
   4+ A057              ;
   5+ A057              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A057
   7+ A057              ;	ADC HL,SP	LD (addr),SP
   8+ A057              ;	ADD HL,SP	LD SP,(addr)
   9+ A057              ;	ADD IX,SP	LD SP,nn
  10+ A057              ; 	ADD IY,SP	LD SP,HL
  11+ A057              ;				LD SP,IX
  12+ A057              ;	DEC SP		LD SP,IY
  13+ A057
  14+ A057              ;	EX (SP),HL
  15+ A057              ;	EX (SP),IX
  16+ A057              ;	EX (SP),IY
  17+ A057
  18+ A057              ;	INC SP
  19+ A057
  20+ A057                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 D7 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 A1 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 AD 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A C6 88         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A DF 88         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A B1 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A E3 88         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A DD 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A C6 88         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 DF 88         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A B1 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 E3 88         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B D7 88      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 DD 88     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B D7 88  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A DD 88         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 DD 88         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1880  718B
1881  718B              	SAVESNA "Pruebas.sna", START
1882  718B
1883  718B
1884  718B
1885  718B
# file closed: Banco_de_pruebas.asm
