# file opened: Banco_de_Pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 19 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15 CD 4E 8E     	call Frame
  34  AA18              ;	call Pinta_Amadeus
  35  AA18              ;	call Gestiona_Amadeus
  36  AA18
  37  AA18 FD E1        	pop iy
  38  AA1A DD E1        	pop ix
  39  AA1C F1           	pop af
  40  AA1D C1           	pop bc
  41  AA1E D1           	pop de
  42  AA1F E1           	pop hl
  43  AA20 D9           	exx
  44  AA21 C1           	pop bc
  45  AA22 D1           	pop de
  46  AA23 E1           	pop hl
  47  AA24 08           	ex af,af'
  48  AA25 F1           	pop af
  49  AA26 08           	ex af,af'
  50  AA27 D9           	exx
  51  AA28
  52  AA28 ED 7B 19 89  	ld sp,(Stack_3)
  53  AA2C
  54  AA2C FB           	ei
  55  AA2D ED 4D        	reti
  56  AA2F
  57  AA2F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  58  AA2F
  59  AA2F              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA2F              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA2F              ;
   3+ AA2F              ;	17/02/23
   4+ AA2F              ;
   5+ AA2F              ;	Sprites e índices.
   6+ AA2F
   7+ AA2F              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  60  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 97 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 97 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  61  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD D5 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD D5 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD D5 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD D5 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 18 00     	ld bc,24
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 0A        	cp 10
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 0A        	ld a,10
 209+ 88BA 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  62  88C5
  63  88C5              ; ******************************************************************************************************************************************************************************************
  64  88C5              ; Constantes.
  65  88C5              ; ******************************************************************************************************************************************************************************************
  66  88C5              ;
  67  88C5              ; 4/9/23
  68  88C5              ;
  69  88C5              ; Constantes generales.
  70  88C5              ;
  71  88C5
  72  88C5              Sprite_vacio equ $f000
  73  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  74  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  75  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  76  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  77  88C5
  78  88C5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  79  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  80  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  81  88C5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  82  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  83  88C5              ;
  84  88C5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  85  88C5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  86  88C5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  87  88C5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  88  88C5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  89  88C5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  90  88C5
  91  88C5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
  92  88C5
  93  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  94  88C5
  95  88C5              ; ******************************************************************************************************************************************************************************************
  96  88C5              ; Variables.
  97  88C5              ; ******************************************************************************************************************************************************************************************
  98  88C5              ;
  99  88C5              ; 28/07/23
 100  88C5              ;
 101  88C5              ; Variables de DRAW. (Motor principal).
 102  88C5              ;
 103  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 104  88C5
 105  88C5 00           Filas db 0												; Filas. [DRAW]
 106  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 107  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 108  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 109  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 110  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 111  88CD
 112  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 113  88CD
 114  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 115  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 116  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 117  88CE 00           Attr db 0												; Atributos de la entidad:
 118  88CF
 119  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 120  88CF              ;
 121  88CF              ;	COLORES: 0 ..... NEGRO
 122  88CF              ;    		 1 ..... AZUL
 123  88CF              ; 			 2 ..... ROJO
 124  88CF              ;			 3 ..... MAGENTA
 125  88CF              ; 			 4 ..... VERDE
 126  88CF              ; 			 5 ..... CIAN
 127  88CF              ;			 6 ..... AMARILLO
 128  88CF              ; 			 7 ..... BLANCO
 129  88CF
 130  88CF 00 00        Indice_Sprite_der defw 0
 131  88D1 00 00        Indice_Sprite_izq defw 0
 132  88D3 00 00        Puntero_DESPLZ_der defw 0
 133  88D5 00 00        Puntero_DESPLZ_izq defw 0
 134  88D7
 135  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 136  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 137  88DA
 138  88DA              ; Variables de objeto. (Características).
 139  88DA
 140  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 141  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 142  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 143  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 144  88DE
 145  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 146  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 147  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 148  88DF 00 00 00...  Variables_de_borrado ds 6
 149  88E5
 150  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 151  88E7 00 00        	defw 0
 152  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 153  88EB 00 00 00 00  	db 0,0,0,0
 154  88EF
 155  88EF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 156  88EF
 157  88EF 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 158  88F0              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 159  88F0              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 160  88F0              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 161  88F0              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 162  88F0              ;
 163  88F0              ; 														DESCRIPCIÖN:
 164  88F0              ;
 165  88F0              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 166  88F0              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 167  88F0              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 168  88F0              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 169  88F0              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 170  88F0              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 171  88F0              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 172  88F0              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 173  88F0              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 174  88F0              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 175  88F0              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 176  88F0              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 177  88F0              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 178  88F0              ;
 179  88F0              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 180  88F0              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 181  88F0              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 182  88F0
 183  88F0 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 184  88F1
 185  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 186  88F1
 187  88F1 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 188  88F2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 189  88F4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 190  88F6 00 00        Puntero_indice_mov_bucle defw 0							;
 191  88F8              ;
 192  88F8              ;
 193  88F8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 194  88F9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 195  88F9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 196  88F9 00           Incrementa_puntero_backup db 0
 197  88FA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 198  88FB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 199  88FB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 200  88FC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 201  88FD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 202  88FE              ;
 203  88FE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 204  88FE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 205  88FE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 206  88FE              ;
 207  88FE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 208  88FE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 209  88FE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 210  88FE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 211  88FE              ;
 212  88FE              ;														;	"$ff" ..... Bucle infinito de repetición.
 213  88FE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 214  88FE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 215  88FE
 216  88FE
 217  88FE              ; Variables de funcionamiento. [DRAW].
 218  88FE
 219  88FE 00           Columnas db 0
 220  88FF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 221  8901              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 222  8901 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 223  8902
 224  8902              ; variables de control general.
 225  8902
 226  8902 00           Ctrl_2 db 0
 227  8903              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 228  8903              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 229  8903              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 230  8903              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 231  8903              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 232  8903              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 233  8903              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 234  8903              ;
 235  8903              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 236  8903              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 237  8903              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 238  8903              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 239  8903              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 240  8903
 241  8903 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 242  8904
 243  8904              ;! 63 Bytes por entidad.
 244  8904
 245  8904              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 246  8904              ;					         		---------;      ;---------
 247  8904
 248  8904
 249  8904              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 250  8904
 251  8904 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 252  8905
 253  8905              ;														DESCRIPCIÓN:
 254  8905              ;
 255  8905              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 256  8905              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 257  8905              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 258  8905              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 259  8905              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 260  8905              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 261  8905
 262  8905              ;														BIT 3, Recarga de nueva oleada.
 263  8905              ;														BIT 4, Recarga de nueva oleada.
 264  8905              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 265  8905              ;														BIT 6, **** Frame completo.
 266  8905              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 267  8905
 268  8905 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 269  8907              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 270  8907              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 271  8907              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 272  8907
 273  8907
 274  8907
 275  8907              ; Gestión de ENTIDADES y CAJAS.
 276  8907
 277  8907 00 00        Puntero_store_caja defw 0
 278  8909 00 00        Puntero_restore_caja defw 0
 279  890B 00 00        Indice_restore_caja defw 0
 280  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 281  890E 00           Numero_parcial_de_entidades db 0
 282  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 283  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 284  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 285  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 286  8911              ;														; _ (Numero_de_malotes)="0".
 287  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 288  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 289  8915              ;														; _ puntero (Indice_entidades).
 290  8915
 291  8915
 292  8915              ;---------------------------------------------------------------------------------------------------------------
 293  8915              ;
 294  8915              ;	2/9/23
 295  8915              ;
 296  8915              ;	Álbumes.
 297  8915
 298  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 299  8917              ;														; _variable para almacenar lo posición del puntero_
 300  8917              ; 														; _de pila, SP.
 301  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 302  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 303  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 304  891B 00 00        Stack_snapshot defw 0
 305  891D 00 00        Stack_snapshot_disparos defw 0
 306  891F
 307  891F 00 00        End_Snapshot defw 0
 308  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 309  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 310  8923              ;														; _el snapshot de los registros del siguiente disparo.
 311  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 312  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 313  8925 00 00        End_Snapshot_1 defw 0
 314  8927 00 00        End_Snapshot_disparos_1 defw 0
 315  8929 00 00        End_Snapshot_2 defw 0
 316  892B 00 00        End_Snapshot_disparos_2 defw 0
 317  892D 00 00        End_Snapshot_3 defw 0
 318  892F 00 00        End_Snapshot_disparos_3 defw 0
 319  8931
 320  8931 00 00        Puntero_indice_album_de_fotos defw 0
 321  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 322  8935
 323  8935 00 00        Puntero_indice_End_Snapshot defw 0
 324  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 325  8939 00 00        Puntero_de_End_Snapshot defw 0
 326  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 327  893D
 328  893D              ;---------------------------------------------------------------------------------------------------------------
 329  893D
 330  893D              ; Gestión de Disparos.
 331  893D
 332  893D 00           Numero_de_disparotes db 0
 333  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 334  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 335  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 336  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 337  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 338  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 339  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 340  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 341  8945              ;														; _produzca colisión.
 342  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 343  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 344  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 345  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 346  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 347  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 348  894D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 349  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 350  8950
 351  8950              ;---------------------------------------------------------------------------------------------------------------
 352  8950
 353  8950              ; Relojes y temporizaciones.
 354  8950
 355  8950 00           Contador_de_frames db 0
 356  8951 00           Contador_de_frames_2 db 0
 357  8952
 358  8952 04           Clock_explosion db 4
 359  8953 1E           Clock_Entidades_en_curso db 30
 360  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 361  8955              ;														; Repite la oleada de entidades.
 362  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 363  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 364  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 365  8958
 366  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 367  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 368  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 369  895B
 370  895B              ;---------------------------------------------------------------------------------------------------------------
 371  895B
 372  895B              ; Gestión de NIVELES.
 373  895B
 374  895B 00           Nivel db 0												; Nivel actual del juego.
 375  895C 00 00        Puntero_indice_NIVELES defw 0
 376  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 377  8960              ; 														; _ que definen el NIVEL.
 378  8960              ; Y todo comienza aquí .....
 379  8960              ;
 380  8960              ; Rutina principal *************************************************************************************************************************************************************************
 381  8960              ;
 382  8960              ;	14/11/22
 383  8960
 384  8960              START
 385  8960
 386  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 387  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 388  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 389  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 390  8969 F3           	DI
 391  896A
 392  896A 3E 07        	ld a,%00000111
 393  896C CD C4 99     	call Cls
 394  896F
 395  896F CD AE 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 396  8972
 397  8972              ; INICIALIZACIÓN.
 398  8972
 399  8972 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 400  8975
 401  8975 CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 402  8978
 403  8978 CD D7 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 404  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 405  897B CD ED 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 406  897E              ;													     ; _ malotes antes de guardar ninguna foto.
 407  897E              ; ----------
 408  897E
 409  897E CD 5E 8D     	call Restore_entidad
 410  8981
 411  8981 21 0E 89     	ld hl,Numero_parcial_de_entidades
 412  8984 46           	ld b,(hl)
 413  8985 04           	inc b
 414  8986 05           	dec b
 415  8987 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 416  8989
 417  8989              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 418  8989              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 419  8989              ;	Pintamos el resto de entidades:
 420  8989
 421  8989              ;	INICIA ENTIDADES !!!!!
 422  8989
 423  8989 C5           1 push bc  												; Guardo el contador de entidades.
 424  898A CD 7A 8B     	call Inicia_entidad
 425  898D C1           	pop bc
 426  898E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 427  8990
 428  8990              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 429  8990              ; (Esto se dá cuando se inicia una nueva oleada).
 430  8990
 431  8990 3A 04 89     	ld a,(Ctrl_1)
 432  8993 CB 5F        	bit 3,a
 433  8995 20 15        	jr nz,5F											; Loop
 434  8997
 435  8997              ; 	INICIA AMADEUS !!!!!
 436  8997
 437  8997 CD 85 8D     3 call Restore_Amadeus
 438  899A CD DB 8C     	call Inicia_Puntero_objeto
 439  899D CD B7 93     	call Draw
 440  89A0 CD A0 7F     	call Guarda_foto_registros
 441  89A3 CD 14 8E     	call Guarda_datos_de_borrado_Amadeus
 442  89A6
 443  89A6 11 9E 85     	ld de,Amadeus_db
 444  89A9 CD 97 8D     	call Store_Amadeus
 445  89AC
 446  89AC              ; 	INICIA DISPAROS !!!!!
 447  89AC
 448  89AC              ;	call Inicia_Puntero_Disparo_Entidades
 449  89AC              ;	call Inicia_Puntero_Disparo_Amadeus
 450  89AC
 451  89AC              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 452  89AC
 453  89AC CD D7 8B     5 call Inicia_punteros_de_cajas
 454  89AF CD 5E 8D     	call Restore_entidad
 455  89B2
 456  89B2 3A 04 89     	ld a,(Ctrl_1)
 457  89B5 CB 5F        	bit 3,a
 458  89B7 28 07        	jr z,6F
 459  89B9
 460  89B9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 461  89B9
 462  89B9 21 04 89     	ld hl,Ctrl_1
 463  89BC CB 9E        	res 3,(hl)
 464  89BE 18 04        	jr Main
 465  89C0
 466  89C0
 467  89C0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 468  89C0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 469  89C0              ; _ para situarnos en el siguiente album.
 470  89C0
 471  89C0 CD 1E 8C     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 472  89C3 F3           	di
 473  89C4
 474  89C4              ; ------------------------------------
 475  89C4
 476  89C4              Main
 477  89C4              ;
 478  89C4              ;	3/8/23
 479  89C4
 480  89C4 3E 01            ld a,1
 481  89C6 D3 FE        	out ($fe),a											; Azul.
 482  89C8
 483  89C8 FB           	ei
 484  89C9
 485  89C9 3A 53 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 486  89CC 47           	ld b,a
 487  89CD 3A 50 89     	ld a,(Contador_de_frames)
 488  89D0 B8           	cp b
 489  89D1 20 18        	jr nz,13F
 490  89D3
 491  89D3 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 492  89D6 47           	ld b,a
 493  89D7 3A 0F 89     	ld a,(Entidades_en_curso)
 494  89DA B8           	cp b
 495  89DB 28 0E        	jr z,13F
 496  89DD 30 0C        	jr nc,13F
 497  89DF
 498  89DF 3C           	inc a
 499  89E0 32 0F 89     	ld (Entidades_en_curso),a
 500  89E3
 501  89E3 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 502  89E6
 503  89E6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 504  89E6              ;! _ IMPREDECIBLE !!!!
 505  89E6
 506  89E6 C6 64        	add 100
 507  89E8 32 53 89     	ld (Clock_Entidades_en_curso),a
 508  89EB
 509  89EB              ; Habilita disparos.
 510  89EB
 511  89EB 21 55 89     13 ld hl,Disparo_Amadeus
 512  89EE 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 513  89F1 CD 88 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 514  89F4
 515  89F4 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 516  89F7 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 517  89FA CD 88 9D     	call Habilita_disparos
 518  89FD
 519  89FD              ; COLISIONES.
 520  89FD
 521  89FD CD 99 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 522  8A00
 523  8A00              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 524  8A00              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 525  8A00              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 526  8A00
 527  8A00 AF           	xor a
 528  8A01 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 529  8A04
 530  8A04 CD D7 8B     	call Inicia_punteros_de_cajas
 531  8A07 CD 5E 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 532  8A0A              ; 														; _ en DRAW.
 533  8A0A 3A C5 88     	ld a,(Filas)
 534  8A0D A7           	and a
 535  8A0E 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 536  8A10 CD 70 8D     	call Incrementa_punteros_de_cajas
 537  8A13 18 F2        	jr 12B
 538  8A15
 539  8A15              ; ---------------------------------------------------------------------------------------
 540  8A15
 541  8A15 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 542  8A18 47               ld b,a
 543  8A19 A7           	and a
 544  8A1A 20 14        	jr nz,11F
 545  8A1C
 546  8A1C 21 04 89     	ld hl,Ctrl_1
 547  8A1F CB 66        	bit 4,(hl)
 548  8A21 C2 AD 8A     	jp nz,16F
 549  8A24
 550  8A24 21 04 89     	ld hl,Ctrl_1
 551  8A27 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 552  8A29
 553  8A29 3A 50 89     	ld a,(Contador_de_frames)
 554  8A2C 3C           	inc a
 555  8A2D 32 54 89     	ld (Activa_recarga_cajas),a
 556  8A30
 557  8A30              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 558  8A30
 559  8A30 3A 0F 89     11 ld a,(Entidades_en_curso)
 560  8A33 A7           	and a
 561  8A34 CA AD 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 562  8A37 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 563  8A38
 564  8A38              ; Código que ejecutamos con cada entidad:
 565  8A38              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 566  8A38
 567  8A38 C5           15 push bc 												; Nº de entidades en curso.
 568  8A39
 569  8A39              ; Impacto ???
 570  8A39
 571  8A39 3A DE 88     	ld a,(Impacto)
 572  8A3C A7           	and a
 573  8A3D 28 2D        	jr z,8F
 574  8A3F
 575  8A3F              ; Hay Impacto en esta entidad.
 576  8A3F
 577  8A3F 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 578  8A42 35           	dec (hl)
 579  8A43 20 62        	jr nz,17F
 580  8A45
 581  8A45              ;! Velocidad de la animación de la explosión.
 582  8A45
 583  8A45 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 584  8A47              ;														; _,(velocidad de la explosión).
 585  8A47 CD 8E 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 586  8A4A
 587  8A4A              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 588  8A4A
 589  8A4A 3A 02 89     	ld a,(Ctrl_2)
 590  8A4D CB 4F        	bit 1,a
 591  8A4F 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 592  8A51
 593  8A51              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 594  8A51
 595  8A51 3A CD 88     	ld a,(CTRL_DESPLZ)
 596  8A54 A7           	and a
 597  8A55 20 08        	jr nz,18F
 598  8A57
 599  8A57 21 84 84     	ld hl,Indice_Explosion_2x2-2
 600  8A5A 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 601  8A5D 18 06        	jr 19F
 602  8A5F
 603  8A5F 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 604  8A62 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 605  8A65
 606  8A65 21 02 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 607  8A68 CB CE        	set 1,(hl)
 608  8A6A 18 22        	jr 7F
 609  8A6C
 610  8A6C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 611  8A6C              ; _con las coordenadas de la entidad almacenada en DRAW.
 612  8A6C
 613  8A6C 3A 04 89     8 ld a,(Ctrl_1)
 614  8A6F CB 57        	bit 2,a
 615  8A71 28 1B        	jr z,7F
 616  8A73
 617  8A73 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 618  8A76 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 619  8A77              ;														; E contiene la coordenada_X del disparo.
 620  8A77 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 621  8A7A              ;														; H FILA, (Coordenada_y de la entidad).
 622  8A7A A7           	and a
 623  8A7B ED 52        	sbc hl,de
 624  8A7D
 625  8A7D CD D0 92     	call Determina_resultado_comparativa
 626  8A80
 627  8A80 78           	ld a,b
 628  8A81 A7           	and a
 629  8A82 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 630  8A84
 631  8A84              ; ----- ----- -----
 632  8A84
 633  8A84 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 634  8A86 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 635  8A89
 636  8A89 21 04 89     	ld hl,Ctrl_1
 637  8A8C CB 96        	res 2,(hl)
 638  8A8E
 639  8A8E CD 09 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 640  8A91
 641  8A91 3A EF 88     	ld a,(Ctrl_0)
 642  8A94 CB 67        	bit 4,a
 643  8A96 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 644  8A98
 645  8A98              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 646  8A98              ; [[[
 647  8A98 CD F9 8D     	call Detecta_disparo_entidad
 648  8A9B              ; ]]]
 649  8A9B CD 9E 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 650  8A9E
 651  8A9E 21 EF 88     	ld hl,Ctrl_0
 652  8AA1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 653  8AA3 AF           	xor a
 654  8AA4 32 F0 88     	ld (Obj_dibujado),a
 655  8AA7
 656  8AA7 CD 23 8D     17 call Store_Restore_cajas
 657  8AAA
 658  8AAA C1           	pop bc
 659  8AAB 10 8B        	djnz 15B
 660  8AAD
 661  8AAD              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 662  8AAD              ; Hemos gestionado todas las unidades.
 663  8AAD              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 664  8AAD
 665  8AAD              ;	ld hl,Ctrl_1
 666  8AAD              ;	res 2,(hl)
 667  8AAD
 668  8AAD CD 1E 8C     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 669  8AB0              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 670  8AB0              ;														; _ interrupción.
 671  8AB0              ; ----------------------------------------
 672  8AB0
 673  8AB0 3A 04 89     	ld a,(Ctrl_1) 										; Existe Loop?
 674  8AB3 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 675  8AB5 CA C4 89     	jp z,Main
 676  8AB8
 677  8AB8 3A 50 89     	ld a,(Contador_de_frames)
 678  8ABB 47           	ld b,a
 679  8ABC 3A 54 89     	ld a,(Activa_recarga_cajas)
 680  8ABF B8           	cp b
 681  8AC0 28 08        	jr z,20F
 682  8AC2
 683  8AC2 21 04 89     	ld hl,Ctrl_1
 684  8AC5 CB E6        	set 4,(hl)
 685  8AC7 C3 C4 89     	jp Main
 686  8ACA
 687  8ACA 21 04 89     20 ld hl,Ctrl_1
 688  8ACD CB A6        	res 4,(hl)
 689  8ACF
 690  8ACF F3           	di
 691  8AD0
 692  8AD0 3A 50 89     	ld a,(Contador_de_frames)
 693  8AD3
 694  8AD3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 695  8AD3              ;! _ IMPREDECIBLE !!!!
 696  8AD3
 697  8AD3 C6 0A        	add 10
 698  8AD5 32 53 89     	ld (Clock_Entidades_en_curso),a
 699  8AD8
 700  8AD8 C3 75 89     	jp 4B
 701  8ADB
 702  8ADB C9           	ret
 703  8ADC
 704  8ADC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 705  8ADC
 706  8ADC              Gestiona_Amadeus
 707  8ADC
 708  8ADC 3E 04            ld a,4
 709  8ADE D3 FE        	out ($fe),a											; Azul.
 710  8AE0
 711  8AE0
 712  8AE0 CD 85 8D     	call Restore_Amadeus
 713  8AE3
 714  8AE3              ;! Activa/desactiva impacto con Amadeus.
 715  8AE3
 716  8AE3 3A DE 88     	ld a,(Impacto)
 717  8AE6 A7           	and a
 718  8AE7 20 FE        	jr nz,$
 719  8AE9
 720  8AE9 CD 62 8B     	call Mov_Amadeus
 721  8AEC
 722  8AEC 3A EF 88     	ld a,(Ctrl_0)
 723  8AEF CB 67        	bit 4,a
 724  8AF1 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 725  8AF3
 726  8AF3 CD 9E 8B     	call Guarda_foto_entidad_a_pintar
 727  8AF6 CD 14 8E     	call Guarda_datos_de_borrado_Amadeus
 728  8AF9
 729  8AF9 21 EF 88     14 ld hl,Ctrl_0
 730  8AFC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 731  8AFE
 732  8AFE AF           	xor a
 733  8AFF 32 F0 88     	ld (Obj_dibujado),a
 734  8B02
 735  8B02 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 736  8B05 CD 97 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 737  8B08
 738  8B08              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 739  8B08
 740  8B08              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 741  8B08
 742  8B08              ;	call Calcula_numero_de_disparotes
 743  8B08
 744  8B08 C9           	ret
 745  8B09
 746  8B09              ; --------------------------------------------------------------------------------------------------------------
 747  8B09              ;
 748  8B09              ;	27/05/23
 749  8B09
 750  8B09              Mov_obj
 751  8B09
 752  8B09 3A 02 89     	ld a,(Ctrl_2)
 753  8B0C CB 4F        	bit 1,a
 754  8B0E 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 755  8B10
 756  8B10              ; Explosión:
 757  8B10
 758  8B10 3A 03 89     	ld a,(Frames_explosion)
 759  8B13 A7           	and a
 760  8B14 20 11        	jr nz,4F
 761  8B16
 762  8B16              ; Una alimaña menos!!!!!!!!!1
 763  8B16
 764  8B16 CD A0 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 765  8B19 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 766  8B1C 35           	dec (hl)
 767  8B1D 21 0F 89     	ld hl,Entidades_en_curso
 768  8B20 35           	dec (hl)
 769  8B21 21 0D 89     	ld hl,Numero_de_entidades
 770  8B24 35           	dec (hl)
 771  8B25 18 3A        	jr 3F
 772  8B27
 773  8B27              ; -----
 774  8B27
 775  8B27              ;	`Movemos´ la explosión.
 776  8B27
 777  8B27 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 778  8B2A 23           	inc hl
 779  8B2B 23           	inc hl
 780  8B2C 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 781  8B2F CD D5 8C     	call Extrae_address
 782  8B32 22 C9 88     	ld (Puntero_objeto),hl
 783  8B35
 784  8B35 21 03 89     	ld hl,Frames_explosion
 785  8B38 35           	dec (hl)
 786  8B39
 787  8B39 CD 8E 8B     	call Guarda_foto_entidad_a_borrar
 788  8B3C 18 23        	jr 3F
 789  8B3E
 790  8B3E AF           2 xor a
 791  8B3F 32 EF 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 792  8B42
 793  8B42              ; Movemos Entidades malignas.
 794  8B42
 795  8B42 CD 33 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 796  8B45
 797  8B45 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 798  8B48 CB 67        	bit 4,a
 799  8B4A C8           	ret z
 800  8B4B
 801  8B4B              ; Ha habido desplazamiento de la entidad maligna.
 802  8B4B              ; Ha llegado a zona de AMADEUS ???
 803  8B4B
 804  8B4B 3A CC 88     	ld a,(Coordenada_y)
 805  8B4E FE 14        	cp $14
 806  8B50 D4 5E 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 807  8B53              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 808  8B53              ; ---------
 809  8B53
 810  8B53 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 811  8B55 32 F0 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 812  8B58 CD A8 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 813  8B5B
 814  8B5B CD 34 8E     	call Repone_datos_de_borrado
 815  8B5E CD 77 8C     	call Limpia_Variables_de_borrado
 816  8B61
 817  8B61 C9           3 ret													; _de la misma.
 818  8B62
 819  8B62              ; --------------------------------------------------------------------------------------------------------------
 820  8B62              ;
 821  8B62              ;	29/1/23
 822  8B62
 823  8B62              Mov_Amadeus
 824  8B62
 825  8B62 CD C2 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 826  8B65
 827  8B65 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 828  8B68 CB 67        	bit 4,a
 829  8B6A C8           	ret z
 830  8B6B
 831  8B6B              ; ---------
 832  8B6B
 833  8B6B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 834  8B6D 32 F0 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 835  8B70 CD A8 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 836  8B73
 837  8B73 CD 24 8E     	call Repone_datos_de_borrado_Amadeus
 838  8B76 CD 77 8C     	call Limpia_Variables_de_borrado
 839  8B79
 840  8B79 C9           	ret
 841  8B7A
 842  8B7A              ; -----------------------------------------------------------------------------------
 843  8B7A
 844  8B7A CD DB 8C     Inicia_entidad	call Inicia_Puntero_objeto
 845  8B7D CD D8 99     	call Recompone_posicion_inicio
 846  8B80 CD B7 93     	call Draw
 847  8B83 CD A0 7F     	call Guarda_foto_registros
 848  8B86 CD FF 8D     	call Guarda_datos_de_borrado
 849  8B89 F3           	di
 850  8B8A CD 23 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 851  8B8D C9           	ret
 852  8B8E
 853  8B8E              ; --------------------------------------------------------------------------------------------------------------
 854  8B8E              ;
 855  8B8E              ;	31/8/23
 856  8B8E              ;
 857  8B8E              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 858  8B8E
 859  8B8E              Guarda_foto_entidad_a_borrar
 860  8B8E
 861  8B8E CD 9B 96     	call Prepara_draw
 862  8B91 CD CB 95     	call calcula_CColumnass
 863  8B94 CD 02 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 864  8B97 CD 61 96     	call Define_rutina_de_impresion
 865  8B9A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 866  8B9D C9           	ret
 867  8B9E
 868  8B9E              ; --------------------------------------------------------------------------------------------------------------
 869  8B9E              ;
 870  8B9E              ;	31/08/23
 871  8B9E              ;
 872  8B9E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 873  8B9E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 874  8B9E
 875  8B9E              Guarda_foto_entidad_a_pintar
 876  8B9E
 877  8B9E CD CB 8B     	call Repone_pintar
 878  8BA1 CD B7 93     	call Draw
 879  8BA4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 880  8BA7 C9           	ret
 881  8BA8
 882  8BA8              ; --------------------------------------------------------------------------------------------------------------
 883  8BA8              ;
 884  8BA8              ;
 885  8BA8
 886  8BA8 21 C5 88     Prepara_var_pintado_borrado	ld hl,Filas
 887  8BAB 3A F0 88     	ld a,(Obj_dibujado)
 888  8BAE A7           	and a
 889  8BAF 28 05        	jr z,1F
 890  8BB1 11 E5 88     	ld de,Variables_de_pintado
 891  8BB4 18 03        	jr 2F
 892  8BB6 11 DF 88     1 ld de,Variables_de_borrado
 893  8BB9 01 08 00     2 ld bc,8
 894  8BBC ED B0        	ldir
 895  8BBE C9           	ret
 896  8BBF
 897  8BBF              ; --------------------------------------------------------------------------------------------------------------
 898  8BBF
 899  8BBF 21 DF 88     Repone_borrar ld hl,Variables_de_borrado
 900  8BC2 11 C5 88     	ld de,Filas
 901  8BC5 01 08 00     	ld bc,8
 902  8BC8 ED B0        	ldir
 903  8BCA C9           	ret
 904  8BCB
 905  8BCB 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
 906  8BCE 11 C5 88     	ld de,Filas
 907  8BD1 01 08 00     	ld bc,8
 908  8BD4 ED B0        	ldir
 909  8BD6 C9           	ret
 910  8BD7
 911  8BD7              ; *************************************************************************************************************************************************************
 912  8BD7              ;
 913  8BD7              ; 8/1/23
 914  8BD7              ;
 915  8BD7              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 916  8BD7              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 917  8BD7              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 918  8BD7
 919  8BD7              ; Destruye HL y DE !!!!!
 920  8BD7
 921  8BD7              Inicia_punteros_de_cajas
 922  8BD7
 923  8BD7 21 8C 85     	ld hl,Indice_de_cajas
 924  8BDA CD D5 8C         call Extrae_address
 925  8BDD 22 07 89         ld (Puntero_store_caja),hl
 926  8BE0 21 8E 85     	ld hl,Indice_de_cajas+2
 927  8BE3 22 0B 89     	ld (Indice_restore_caja),hl
 928  8BE6 CD D5 8C     	call Extrae_address
 929  8BE9 22 09 89     	ld (Puntero_restore_caja),hl
 930  8BEC C9               ret
 931  8BED
 932  8BED              ; ---------------------------------------------------------------
 933  8BED              ;
 934  8BED              ;	9/8/23
 935  8BED              ;
 936  8BED              ;	Inicialización y gestión de álbumes de fotos y cajas.
 937  8BED
 938  8BED              Inicia_punteros_de_albumes_y_malotes
 939  8BED
 940  8BED 21 EC 84     	ld hl,Indice_album_de_fotos
 941  8BF0 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 942  8BF3 CD D5 8C     	call Extrae_address
 943  8BF6 22 1B 89     	ld (Stack_snapshot),hl
 944  8BF9
 945  8BF9 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 946  8BFC 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 947  8BFF CD D5 8C     	call Extrae_address
 948  8C02 22 1D 89     	ld (Stack_snapshot_disparos),hl
 949  8C05
 950  8C05 21 FC 84     	ld hl,Indice_End_Snapshot
 951  8C08 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 952  8C0B CD D5 8C     	call Extrae_address
 953  8C0E 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 954  8C11
 955  8C11 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 956  8C14 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 957  8C17 CD D5 8C     	call Extrae_address
 958  8C1A 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 959  8C1D
 960  8C1D C9           	ret
 961  8C1E
 962  8C1E              ;	2/9/23
 963  8C1E
 964  8C1E              Avanza_puntero_de_album_de_fotos_y_malotes
 965  8C1E
 966  8C1E              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 967  8C1E
 968  8C1E              ; Estamos en el último álbum del índice???.
 969  8C1E
 970  8C1E 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 971  8C21 01 F2 84     	ld bc,Indice_album_de_fotos+6
 972  8C24 A7           	and a
 973  8C25 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 974  8C27 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 975  8C29
 976  8C29 21 04 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 977  8C2C CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 978  8C2E 76           	halt
 979  8C2F C9           	ret
 980  8C30
 981  8C30 F3           1 di
 982  8C31 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 983  8C34 23           	inc hl
 984  8C35 23           	inc hl
 985  8C36 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 986  8C39 CD D5 8C     	call Extrae_address
 987  8C3C 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 988  8C3F
 989  8C3F 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
 990  8C42 23           	inc hl
 991  8C43 23           	inc hl
 992  8C44 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 993  8C47 CD D5 8C     	call Extrae_address
 994  8C4A 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 995  8C4D FB           	ei
 996  8C4E
 997  8C4E C9           	ret
 998  8C4F
 999  8C4F              ; *************************************************************************************************************************************************************
1000  8C4F              ;
1001  8C4F              ; 8/1/23
1002  8C4F              ;
1003  8C4F              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1004  8C4F
1005  8C4F 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1006  8C52 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1007  8C55 C9           	ret
1008  8C56 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1009  8C59 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1010  8C5C C9           	ret
1011  8C5D
1012  8C5D              ; -------------------------------------------------------------------------------------------------------------
1013  8C5D              ;
1014  8C5D              ; 4/9/23
1015  8C5D              ;
1016  8C5D
1017  8C5D              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1018  8C5D
1019  8C5D 21 A0 72     Limpia_album_Amadeus ld hl,Album_de_fotos_Amadeus
1020  8C60 7E           	ld a,(hl)
1021  8C61 A7           	and a
1022  8C62 C8           	ret z
1023  8C63
1024  8C63 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1025  8C66 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1026  8C69 01 0C 00     	ld bc,12
1027  8C6C AF           	xor a
1028  8C6D 77           	ld (hl),a
1029  8C6E ED B0        	ldir
1030  8C70
1031  8C70 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1032  8C73 22 23 89     	ld (End_Snapshot_Amadeus),hl
1033  8C76
1034  8C76 C9           	ret
1035  8C77
1036  8C77 21 DF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1037  8C7A 11 E0 88     	ld de,Variables_de_borrado+1
1038  8C7D 01 05 00     	ld bc,5
1039  8C80 AF           	xor a
1040  8C81 77           	ld (hl),a
1041  8C82 ED B0        	ldir
1042  8C84 C9           	ret
1043  8C85
1044  8C85              ; -------------------------------------------------------------------------------------------------------------
1045  8C85              ;
1046  8C85              ; 8/9/23
1047  8C85              ;
1048  8C85
1049  8C85              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1050  8C85              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1051  8C85
1052  8C85              Calcula_numero_de_malotes
1053  8C85
1054  8C85 21 00 70     	ld hl,Album_de_fotos
1055  8C88 EB           	ex de,hl
1056  8C89 2A 1F 89     	ld hl,(End_Snapshot)
1057  8C8C
1058  8C8C 7C           	ld a,h
1059  8C8D A7           	and a
1060  8C8E 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1061  8C90
1062  8C90 06 00        4 ld b,0
1063  8C92 7D           	ld a,l
1064  8C93 93           	sub e
1065  8C94 28 07        	jr z,1F
1066  8C96
1067  8C96              ; Nº de malotes no es "0".
1068  8C96
1069  8C96 D6 06        2 sub 6
1070  8C98 04           	inc b
1071  8C99 A7           	and a
1072  8C9A 20 FA        	jr nz,2B
1073  8C9C 78           	ld a,b
1074  8C9D
1075  8C9D 32 10 89     1 ld (Numero_de_malotes),a
1076  8CA0 C9           	ret
1077  8CA1
1078  8CA1              ; -------------------------------------------------------------------------------------------------------------
1079  8CA1              ;
1080  8CA1              ; 8/9/23
1081  8CA1              ;
1082  8CA1
1083  8CA1              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1084  8CA1              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1085  8CA1
1086  8CA1              Calcula_malotes_Amadeus
1087  8CA1
1088  8CA1 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1089  8CA4 EB           	ex de,hl
1090  8CA5 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1091  8CA8
1092  8CA8 7C           	ld a,h
1093  8CA9 A7           	and a
1094  8CAA 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1095  8CAC
1096  8CAC 06 00        	ld b,0
1097  8CAE 7D           	ld a,l
1098  8CAF 93           	sub e
1099  8CB0 28 07        	jr z,1F
1100  8CB2
1101  8CB2              ; Nº de malotes no es "0".
1102  8CB2
1103  8CB2 D6 06        2 sub 6
1104  8CB4 04           	inc b
1105  8CB5 A7           	and a
1106  8CB6 20 FA        	jr nz,2B
1107  8CB8 78           	ld a,b
1108  8CB9
1109  8CB9 32 10 89     1 ld (Numero_de_malotes),a
1110  8CBC C9           	ret
1111  8CBD
1112  8CBD              ; -------------------------------------------------------------------------------------------------------------
1113  8CBD              ;
1114  8CBD              ; 28/2/23
1115  8CBD              ;
1116  8CBD
1117  8CBD              Calcula_numero_de_disparotes
1118  8CBD
1119  8CBD 21 50 71     	ld hl,Album_de_fotos_disparos
1120  8CC0 EB           	ex de,hl
1121  8CC1 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1122  8CC4
1123  8CC4 06 00        	ld b,0
1124  8CC6 7D           	ld a,l
1125  8CC7 93           	sub e
1126  8CC8 28 07        	jr z,1F
1127  8CCA
1128  8CCA              ; Nº de malotes no es "0".
1129  8CCA
1130  8CCA D6 06        2 sub 6
1131  8CCC 04           	inc b
1132  8CCD A7           	and a
1133  8CCE 20 FA        	jr nz,2B
1134  8CD0 78           	ld a,b
1135  8CD1
1136  8CD1 32 3D 89     1 ld (Numero_de_disparotes),a
1137  8CD4 C9           	ret
1138  8CD5
1139  8CD5              ; *************************************************************************************************************************************************************
1140  8CD5              ;
1141  8CD5              ; 20/10/22
1142  8CD5              ;
1143  8CD5              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1144  8CD5              ;
1145  8CD5              ; Destruye el puntero y DE !!!!!
1146  8CD5
1147  8CD5 5E           Extrae_address ld e,(hl)
1148  8CD6 23           	inc hl
1149  8CD7 56           	ld d,(hl)
1150  8CD8 2B           	dec hl
1151  8CD9 EB           	ex de,hl
1152  8CDA C9           	ret
1153  8CDB
1154  8CDB              ; *************************************************************************************************************************************************************
1155  8CDB              ;
1156  8CDB              ;	7/2/23
1157  8CDB              ;
1158  8CDB              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1159  8CDB              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1160  8CDB              ;
1161  8CDB              ;   Destruye HL y BC !!!!!,
1162  8CDB              ;
1163  8CDB              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1164  8CDB              ;					"0" ..... Izquierda.
1165  8CDB
1166  8CDB              Inicia_Puntero_objeto
1167  8CDB
1168  8CDB 3A D9 88     	ld a,(Cuad_objeto)
1169  8CDE E6 01        	and 1
1170  8CE0 F5           	push af
1171  8CE1 CC FF 8C     	call z,Inicia_puntero_objeto_izq
1172  8CE4 F1           	pop af
1173  8CE5 28 2B        	jr z,1F
1174  8CE7 CD EC 8C     	call Inicia_puntero_objeto_der
1175  8CEA 18 26        	jr 1F
1176  8CEC
1177  8CEC              ; Arrancamos desde la parte izquierda de la pantalla.
1178  8CEC              ; Iniciamos (Indice_Sprite_der).
1179  8CEC
1180  8CEC 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1181  8CEF 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1182  8CF2 CD D5 8C     	call Extrae_address
1183  8CF5 22 C9 88     	ld (Puntero_objeto),hl
1184  8CF8
1185  8CF8 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1186  8CFB 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1187  8CFE C9           	ret
1188  8CFF
1189  8CFF              ; Arrancamos desde la parte derecha de la pantalla.
1190  8CFF              ; Iniciamos (Indice_Sprite_izq).
1191  8CFF
1192  8CFF 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1193  8D02 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1194  8D05 CD D5 8C     	call Extrae_address
1195  8D08 22 C9 88     	ld (Puntero_objeto),hl
1196  8D0B
1197  8D0B 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1198  8D0E 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1199  8D11 C9           	ret
1200  8D12
1201  8D12              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1202  8D12
1203  8D12 21 40 83     1 ld hl,Amadeus
1204  8D15 ED 4B C9 88  	ld bc,(Puntero_objeto)
1205  8D19 B7 ED 42     	sub hl,bc
1206  8D1C C0           	ret nz
1207  8D1D 21 EF 88     	ld hl,Ctrl_0
1208  8D20 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1209  8D22 C9           	ret 												; _de nuestra nave en los extremos.
1210  8D23
1211  8D23              ; *************************************************************************************************************************************************************
1212  8D23              ;
1213  8D23              ;	14/5/23
1214  8D23              ;
1215  8D23              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1216  8D23              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1217  8D23
1218  8D23              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1219  8D23              ;	_de la 2ª y 3ª entidad respectivamente.
1220  8D23
1221  8D23              Store_Restore_cajas
1222  8D23
1223  8D23 E5           	push hl
1224  8D24 D5           	push de
1225  8D25 C5            	push bc
1226  8D26
1227  8D26              ;	STORE !!!!!
1228  8D26              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1229  8D26
1230  8D26 21 C5 88     	ld hl,Filas
1231  8D29 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1232  8D2D 01 3F 00     	ld bc,63
1233  8D30 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1234  8D32
1235  8D32              ; 	Entidad_sospechosa. 20/4/23
1236  8D32
1237  8D32 3A DE 88     	ld a,(Impacto)
1238  8D35 A7           	and a
1239  8D36 28 0C        	jr z,1F
1240  8D38
1241  8D38 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1242  8D3B 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1243  8D3E A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1244  8D3F ED 4A        	adc hl,bc 											; _ "0" más adelante.
1245  8D41 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1246  8D44
1247  8D44              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1248  8D44
1249  8D44 2A 09 89     1 ld hl,(Puntero_restore_caja)
1250  8D47 7E           	ld a,(hl)
1251  8D48 A7           	and a
1252  8D49 F5           	push af
1253  8D4A 28 08        	jr z,2F
1254  8D4C
1255  8D4C 11 C5 88     	ld de,Filas
1256  8D4F 01 3F 00     	ld bc,63
1257  8D52 ED B0        	ldir
1258  8D54
1259  8D54 CD 70 8D     2 call Incrementa_punteros_de_cajas
1260  8D57 F1           	pop af
1261  8D58 28 EA        	jr z,1B
1262  8D5A
1263  8D5A C1           	pop bc
1264  8D5B D1           	pop de
1265  8D5C E1           	pop hl
1266  8D5D
1267  8D5D C9           	ret
1268  8D5E
1269  8D5E              ; **************************************************************************************************
1270  8D5E              ;
1271  8D5E              ;	12/05/23
1272  8D5E              ;
1273  8D5E              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1274  8D5E
1275  8D5E E5           Restore_entidad push hl
1276  8D5F D5           	push de
1277  8D60 C5            	push bc
1278  8D61
1279  8D61 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1280  8D64 11 C5 88     	ld de,Filas
1281  8D67 01 3F 00     	ld bc,63
1282  8D6A ED B0        	ldir
1283  8D6C
1284  8D6C C1           	pop bc
1285  8D6D D1           	pop de
1286  8D6E E1           	pop hl
1287  8D6F C9           	ret
1288  8D70
1289  8D70
1290  8D70              ; **************************************************************************************************
1291  8D70              ;
1292  8D70              ;	08/05/23
1293  8D70              ;
1294  8D70              ;	Incrementamos los dos punteros de entidades. (+1).
1295  8D70
1296  8D70 2A 09 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1297  8D73 22 07 89     	ld (Puntero_store_caja),hl
1298  8D76 2A 0B 89     	ld hl,(Indice_restore_caja)
1299  8D79 23           	inc hl
1300  8D7A 23           	inc hl
1301  8D7B 22 0B 89     	ld (Indice_restore_caja),hl
1302  8D7E CD D5 8C         call Extrae_address
1303  8D81 22 09 89         ld (Puntero_restore_caja),hl
1304  8D84 C9               ret
1305  8D85
1306  8D85              ; **************************************************************************************************
1307  8D85              ;
1308  8D85              ;	25/01/23
1309  8D85              ;
1310  8D85              ;	Restore_Amadeus
1311  8D85              ;
1312  8D85              ;	Cargamos en DRAW los parámetros de Amadeus.
1313  8D85              ;
1314  8D85
1315  8D85 E5           Restore_Amadeus	push hl
1316  8D86 D5           	push de
1317  8D87 C5            	push bc
1318  8D88 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1319  8D8B 11 C5 88     	ld de,Filas
1320  8D8E 01 3F 00     	ld bc,63
1321  8D91 ED B0        	ldir
1322  8D93 C1           	pop bc
1323  8D94 D1           	pop de
1324  8D95 E1           	pop hl
1325  8D96 C9           	ret
1326  8D97
1327  8D97              ; *************************************************************************************************************************************************************
1328  8D97              ;
1329  8D97              ;	29/04/23
1330  8D97              ;
1331  8D97              ;	Store_Amadeus
1332  8D97              ;
1333  8D97              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1334  8D97              ;
1335  8D97              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1336  8D97              ;
1337  8D97              ;	DESTRUYE: HL y BC y DE.
1338  8D97
1339  8D97 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1340  8D9A 01 3F 00     	ld bc,63
1341  8D9D ED B0        	ldir
1342  8D9F C9           	ret
1343  8DA0
1344  8DA0              ; -----------------------------------------------------------
1345  8DA0              ;
1346  8DA0              ;	27/04/23
1347  8DA0              ;
1348  8DA0              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1349  8DA0              ;
1350  8DA0              ;	Destruye: HL,BC,DE,A
1351  8DA0
1352  8DA0 21 C5 88     Borra_datos_entidad ld hl,Filas
1353  8DA3 01 3E 00     	ld bc,62
1354  8DA6 AF           	xor a
1355  8DA7 77           	ld (hl),a
1356  8DA8 11 C6 88     	ld de,Filas+1
1357  8DAB ED B0        	ldir
1358  8DAD C9           	ret
1359  8DAE
1360  8DAE              ; -----------------------------------------------------------
1361  8DAE
1362  8DAE              ; Teclado.
1363  8DAE
1364  8DAE 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1365  8DB0 DB FE        	in a,($fe)
1366  8DB2 E6 01        	and $01
1367  8DB4 28 02        	jr z,1f
1368  8DB6 18 F6        	jr Pulsa_ENTER
1369  8DB8 C9           1 ret
1370  8DB9
1371  8DB9              ; **************************************************************************************************
1372  8DB9              ;
1373  8DB9              ; Temporización.
1374  8DB9
1375  8DB9              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1376  8DB9              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1377  8DB9              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1378  8DB9              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1379  8DB9
1380  8DB9              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1381  8DB9              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1382  8DB9              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1383  8DB9
1384  8DB9              ; A partir de $4f61 no hace falta DELAY.
1385  8DB9
1386  8DB9              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1387  8DB9
1388  8DB9 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1389  8DBC 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1390  8DBD 78           	LD A,B
1391  8DBE A7           	AND A
1392  8DBF 20 FB        	JR NZ,wait
1393  8DC1 C9           	RET
1394  8DC2
1395  8DC2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1396  8DC2              ;
1397  8DC2              ;	5/3/23
1398  8DC2              ;
1399  8DC2              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1400  8DC2
1401  8DC2              Movimiento_Amadeus
1402  8DC2
1403  8DC2              ; Disparo.
1404  8DC2
1405  8DC2 3A 55 89     	ld a,(Disparo_Amadeus)
1406  8DC5 A7           	and a
1407  8DC6 20 02        	jr nz,1F
1408  8DC8 18 15        	jr 2F
1409  8DCA
1410  8DCA 3E F7        1 ld a,$f7													; "5" para disparar.
1411  8DCC DB FE        	in a,($fe)
1412  8DCE E6 10        	and $10
1413  8DD0
1414  8DD0 F5           	push af
1415  8DD1 CC C1 8E     	call z,Genera_disparo
1416  8DD4 F1           	pop af
1417  8DD5 20 08        	jr nz,2F
1418  8DD7
1419  8DD7 3A 55 89     	ld a,(Disparo_Amadeus)
1420  8DDA EE 01        	xor 1
1421  8DDC 32 55 89     	ld (Disparo_Amadeus),a
1422  8DDF
1423  8DDF 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1424  8DE1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1425  8DE3 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1426  8DE5 CC 92 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1427  8DE8
1428  8DE8 3E F7        	ld a,$f7
1429  8DEA DB FE        	in a,($fe)
1430  8DEC E6 01        	and $01
1431  8DEE C8           	ret z
1432  8DEF
1433  8DEF 3E F7        	ld a,$f7
1434  8DF1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1435  8DF3 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1436  8DF5 CC 74 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1437  8DF8 C9           	ret
1438  8DF9
1439  8DF9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1440  8DF9              ;
1441  8DF9              ;	Rutina provisional para que los malotes cagen balas.
1442  8DF9
1443  8DF9              Detecta_disparo_entidad
1444  8DF9
1445  8DF9 3A 58 89     	ld a,(Disparo_entidad)
1446  8DFC A7           	and a
1447  8DFD C8           	ret z
1448  8DFE
1449  8DFE              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1450  8DFE
1451  8DFE              ;	ld a,$7f				; Detecta SPACE.
1452  8DFE              ;	in a,($fe)
1453  8DFE              ;	and 1
1454  8DFE              ;	ret nz
1455  8DFE
1456  8DFE              ;	call Genera_disparo
1457  8DFE C9           	ret
1458  8DFF
1459  8DFF              ; ----------------------------------------------------------------------
1460  8DFF              ;
1461  8DFF              ;	8/9/23
1462  8DFF
1463  8DFF              Guarda_datos_de_borrado
1464  8DFF
1465  8DFF F3           	di
1466  8E00
1467  8E00 2A 39 89     	ld hl,(Puntero_de_End_Snapshot)
1468  8E03 CD D5 8C     	call Extrae_address
1469  8E06
1470  8E06 2B           	dec hl
1471  8E07 7E           	ld a,(hl)
1472  8E08 A7           	and a
1473  8E09 C8           	ret z										; Salimos si es álbum está vacío.
1474  8E0A
1475  8E0A 11 E4 88     	ld de,Variables_de_borrado+5
1476  8E0D 01 06 00     	ld bc,6
1477  8E10 ED B8        	lddr
1478  8E12
1479  8E12 FB           	ei
1480  8E13
1481  8E13 C9           	ret
1482  8E14
1483  8E14              ; ----------------------------------------------------------------------
1484  8E14              ;
1485  8E14              ;	8/9/23
1486  8E14
1487  8E14 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1488  8E17 2B            	dec hl
1489  8E18 7E           	ld a,(hl)
1490  8E19 A7           	and a
1491  8E1A C8           	ret z										; Salimos si es álbum está vacío.
1492  8E1B
1493  8E1B 11 E4 88     	ld de,Variables_de_borrado+5
1494  8E1E 01 06 00     	ld bc,6
1495  8E21 ED B8        	lddr
1496  8E23 C9           	ret
1497  8E24
1498  8E24              ; ----------------------------------------------------------------------
1499  8E24              ;
1500  8E24              ;	9/9/23
1501  8E24
1502  8E24              Repone_datos_de_borrado_Amadeus
1503  8E24
1504  8E24 21 DF 88     	ld hl,Variables_de_borrado
1505  8E27 11 A0 72     	ld de,Album_de_fotos_Amadeus
1506  8E2A 01 06 00     	ld bc,6
1507  8E2D ED B0        	ldir
1508  8E2F
1509  8E2F EB           	ex de,hl
1510  8E30 22 23 89     	ld (End_Snapshot_Amadeus),hl
1511  8E33
1512  8E33 C9           	ret
1513  8E34
1514  8E34              ; ----------------------------------------------------------------------
1515  8E34              ;
1516  8E34              ;	9/9/23
1517  8E34
1518  8E34              Repone_datos_de_borrado
1519  8E34
1520  8E34 F3           	di
1521  8E35
1522  8E35 11 DF 88     	ld de,Variables_de_borrado
1523  8E38 2A 39 89     	ld hl,(Puntero_de_End_Snapshot)
1524  8E3B CD D5 8C     	call Extrae_address
1525  8E3E
1526  8E3E
1527  8E3E 21 DF 88     	ld hl,Variables_de_borrado
1528  8E41 11 A0 72     	ld de,Album_de_fotos_Amadeus
1529  8E44 01 06 00     	ld bc,6
1530  8E47 ED B0        	ldir
1531  8E49
1532  8E49 EB           	ex de,hl
1533  8E4A 22 23 89     	ld (End_Snapshot_Amadeus),hl
1534  8E4D
1535  8E4D C9           	ret
1536  8E4E
1537  8E4E              ; ----------------------------------------------------------------------
1538  8E4E              ;
1539  8E4E              ;	11/8/23
1540  8E4E
1541  8E4E              Frame
1542  8E4E
1543  8E4E              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1544  8E4E              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1545  8E4E
1546  8E4E              ; PINTAMOS.
1547  8E4E
1548  8E4E 3E 02        	ld a,2
1549  8E50 D3 FE            out ($fe),a											; Rojo.
1550  8E52
1551  8E52              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1552  8E52              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1553  8E52
1554  8E52 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1555  8E55 01 EC 84     	ld bc,Indice_album_de_fotos
1556  8E58 A7           	and a
1557  8E59 ED 42        	sbc hl,bc
1558  8E5B
1559  8E5B 28 FE        	jr z,$
1560  8E5D 28 4E        	jr z,6F
1561  8E5F
1562  8E5F CD 85 8C     	call Calcula_numero_de_malotes
1563  8E62 CD C5 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1564  8E65
1565  8E65              ;	call Extrae_foto_disparos
1566  8E65 3E 01            ld a,1
1567  8E67 D3 FE            out ($fe),a											; Azul.
1568  8E69
1569  8E69              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1570  8E69 CD AC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1571  8E6C
1572  8E6C              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1573  8E6C
1574  8E6C 3A 04 89     	ld a,(Ctrl_1)
1575  8E6F CB 6F        	bit 5,a
1576  8E71 20 24        	jr nz,1F
1577  8E73
1578  8E73              ; No hemos terminado de guardar el último FRAME.
1579  8E73
1580  8E73 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1581  8E76 2B           	dec hl
1582  8E77 2B           	dec hl
1583  8E78 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1584  8E7B
1585  8E7B 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1586  8E7E 2B           	dec hl
1587  8E7F 2B           	dec hl
1588  8E80 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1589  8E83 CD D5 8C     	call Extrae_address
1590  8E86 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1591  8E89
1592  8E89 CD D5 8C     	call Extrae_address
1593  8E8C
1594  8E8C              ; Esta vacío este album???
1595  8E8C
1596  8E8C 24           	inc h
1597  8E8D 25           	dec h
1598  8E8E 20 02        	jr nz,5F
1599  8E90
1600  8E90              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1601  8E90
1602  8E90 18 05        	jr 1F
1603  8E92
1604  8E92 22 1B 89     5 ld (Stack_snapshot),hl
1605  8E95 18 09        	jr 2F
1606  8E97
1607  8E97              ; FRAME completo.
1608  8E97
1609  8E97 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1610  8E9A CD D5 8C     	call Extrae_address
1611  8E9D 22 1B 89     	ld (Stack_snapshot),hl
1612  8EA0
1613  8EA0              ;	En este punto:
1614  8EA0
1615  8EA0              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1616  8EA0              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1617  8EA0
1618  8EA0              ; RELOJES.
1619  8EA0
1620  8EA0 21 50 89     2 ld hl,Contador_de_frames
1621  8EA3 7E           	ld a,(hl)
1622  8EA4 FE FF        	cp $ff
1623  8EA6 20 04        	jr nz,3F
1624  8EA8 34           	inc (hl)
1625  8EA9 21 51 89     	ld hl,Contador_de_frames_2
1626  8EAC 34           3 inc (hl)											; 0 - 255
1627  8EAD
1628  8EAD 21 04 89     6 ld hl,Ctrl_1
1629  8EB0 CB AE        	res 5,(hl)
1630  8EB2 C9           	ret
1631  8EB3
1632  8EB3              Pinta_Amadeus
1633  8EB3
1634  8EB3 3E 06        	ld a,6
1635  8EB5 D3 FE            out ($fe),a										; Amarillo
1636  8EB7
1637  8EB7 CD A1 8C     	call Calcula_malotes_Amadeus
1638  8EBA CD 47 97     	call Extrae_foto_Amadeus
1639  8EBD CD 5D 8C     	call Limpia_album_Amadeus
1640  8EC0 C9           	ret
1641  8EC1
1642  8EC1              ; ---------------------------------------------------------------
1643  8EC1
1644  8EC1              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EC1              ; ******************************************************************************************************************************************************************************************
   2+ 8EC1              ;
   3+ 8EC1              ;   21/07/23
   4+ 8EC1              ;
   5+ 8EC1              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EC1              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EC1              ;
   8+ 8EC1              ;
   9+ 8EC1              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EC1              ;
  11+ 8EC1              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EC1              ;               _ hacen las entidades hacia abajo.
  13+ 8EC1              ;
  14+ 8EC1              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EC1              ;
  16+ 8EC1              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EC1              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EC1              ;
  19+ 8EC1              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EC1              ;           _ la bala.
  21+ 8EC1              ;
  22+ 8EC1              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EC1              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EC1              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EC1              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EC1              ;           _ en el momento de generarse la bala)).
  27+ 8EC1
  28+ 8EC1              Genera_disparo
  29+ 8EC1
  30+ 8EC1              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EC1              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EC1              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EC1              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EC1              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EC1              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EC1              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EC1
  38+ 8EC1              ; Exclusiones:
  39+ 8EC1
  40+ 8EC1 3A DD 88         ld a,(Vel_down)
  41+ 8EC4 47               ld b,a
  42+ 8EC5 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EC8 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EC9 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8ECA 3A FE 88         ld a,(Columnas)
  46+ 8ECD 47               ld b,a
  47+ 8ECE 3A C6 88         ld a,(Columns)
  48+ 8ED1 B8               cp b
  49+ 8ED2 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8ED3
  51+ 8ED3              ; ----- ----- -----
  52+ 8ED3
  53+ 8ED3 3A EF 88         ld a,(Ctrl_0)
  54+ 8ED6 CB 77            bit 6,a
  55+ 8ED8 20 06            jr nz,14F
  56+ 8EDA
  57+ 8EDA 3A CC 88         ld a,(Coordenada_y)
  58+ 8EDD FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EDF D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EE0
  61+ 8EE0 21 00 80     14 ld hl,Indice_disparo
  62+ 8EE3 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8EE6 4F               ld c,a
  64+ 8EE7 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EE9              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EE9              ;                                            ""        ""       "f9", B="1"
  67+ 8EE9              ;                                            ""        ""       "fb", B="2"
  68+ 8EE9              ;                                            ""        ""       "fb", B="3"
  69+ 8EE9 A7               and a
  70+ 8EEA 28 10            jr z,1F
  71+ 8EEC E6 01            and 1
  72+ 8EEE C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EEF
  74+ 8EEF 79               ld a,c
  75+ 8EF0 16 F9            ld d,$f9
  76+ 8EF2 23           2 inc hl
  77+ 8EF3 23               inc hl
  78+ 8EF4 04               inc b
  79+ 8EF5 BA               cp d
  80+ 8EF6 28 04            jr z,1F
  81+ 8EF8 14               inc d
  82+ 8EF9 14               inc d
  83+ 8EFA 18 F6            jr 2B
  84+ 8EFC
  85+ 8EFC CD D5 8C     1 call Extrae_address
  86+ 8EFF E5               push hl
  87+ 8F00 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F02 DD 21 8D 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F06
  90+ 8F06              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F06              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F06
  93+ 8F06 3A EF 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F09 CB 77            bit 6,a
  95+ 8F0B 20 04            jr nz,19F
  96+ 8F0D
  97+ 8F0D AF               xor a
  98+ 8F0E 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F11
 100+ 8F11 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8F14 FE 02            cp 2
 102+ 8F16 38 66            jr c,3F
 103+ 8F18 28 64            jr z,3F
 104+ 8F1A
 105+ 8F1A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F1A
 107+ 8F1A E6 01            and 1
 108+ 8F1C 28 30            jr z,4F
 109+ 8F1E
 110+ 8F1E              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F1E              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F1E              ;
 113+ 8F1E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F1E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F1E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F1E
 117+ 8F1E 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8F21
 119+ 8F21              ;   Amadeus o entidad ???.
 120+ 8F21
 121+ 8F21 3A EF 88         ld a,(Ctrl_0)
 122+ 8F24 CB 77            bit 6,a
 123+ 8F26 28 0A            jr z,8F
 124+ 8F28
 125+ 8F28              ; 	Dispara Amadeus.
 126+ 8F28
 127+ 8F28 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F2A CD B6 96         call PreviousScan
 129+ 8F2D CD B6 96         call PreviousScan
 130+ 8F30
 131+ 8F30              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F30              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F30              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F30              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F30
 136+ 8F30 18 11            jr 10F
 137+ 8F32
 138+ 8F32              ; 	Dispara Entidad.
 139+ 8F32
 140+ 8F32 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F35              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F35
 143+ 8F35              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F35              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F35
 146+ 8F35 C5               push bc
 147+ 8F36 06 10            ld b,16
 148+ 8F38 CD A7 96     9 call NextScan
 149+ 8F3B 10 FB            djnz 9B
 150+ 8F3D C1               pop bc
 151+ 8F3E CD A8 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F41 18 06            jr 17F
 153+ 8F43
 154+ 8F43              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F43              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F43              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F43              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F43
 159+ 8F43 CD A8 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F46 CD 1D 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F49              ;                                                      ; _al generar el disparo.
 162+ 8F49
 163+ 8F49              ; 	LLegados a este punto tendremos:
 164+ 8F49              ;
 165+ 8F49              ;       Puntero_objeto_disparo en IY.
 166+ 8F49              ;       Rutinas_de_impresion en IX.
 167+ 8F49              ;       Puntero_de_impresion en HL.
 168+ 8F49              ;       Impacto/Dirección en BC.
 169+ 8F49
 170+ 8F49 CD B0 8F     17 call Almacena_disparo
 171+ 8F4C 18 52            jr 6F                                             ; RET.
 172+ 8F4E
 173+ 8F4E              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F4E              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F4E              ;
 176+ 8F4E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F4E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F4E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F4E
 180+ 8F4E 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8F51
 182+ 8F51              ;   Amadeus o entidad ???.
 183+ 8F51
 184+ 8F51 3A EF 88         ld a,(Ctrl_0)
 185+ 8F54 CB 77            bit 6,a
 186+ 8F56 28 0A            jr z,11F
 187+ 8F58
 188+ 8F58              ; 	Dispara Amadeus.
 189+ 8F58
 190+ 8F58 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F5A CD B6 96         call PreviousScan
 192+ 8F5D CD B6 96         call PreviousScan
 193+ 8F60
 194+ 8F60              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F60              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F60              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F60              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F60
 199+ 8F60 18 11            jr 13F
 200+ 8F62
 201+ 8F62              ; 	Dispara Entidad.
 202+ 8F62
 203+ 8F62 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F65              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F65
 206+ 8F65              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F65              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F65
 209+ 8F65 C5               push bc
 210+ 8F66 06 10            ld b,16
 211+ 8F68 CD A7 96     12 call NextScan
 212+ 8F6B 10 FB            djnz 12B
 213+ 8F6D C1               pop bc
 214+ 8F6E
 215+ 8F6E CD A1 8F         call Ajusta_disparo_parte_derecha
 216+ 8F71 18 06            jr 18F
 217+ 8F73
 218+ 8F73              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F73              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F73              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F73              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F73
 223+ 8F73 CD A1 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F76 CD 1D 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F79              ;                                                       ; _al generar el disparo.
 226+ 8F79
 227+ 8F79              ; LLegados a este punto tendremos:
 228+ 8F79              ;
 229+ 8F79              ;       Puntero_objeto_disparo en IY.
 230+ 8F79              ;       Rutinas_de_impresion en IX.
 231+ 8F79              ;       Puntero_de_impresion en HL.
 232+ 8F79              ;       Impacto/Dirección en BC.
 233+ 8F79
 234+ 8F79 CD B0 8F     18 call Almacena_disparo
 235+ 8F7C 18 22            jr 6F                                               ; RET.
 236+ 8F7E
 237+ 8F7E              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F7E
 239+ 8F7E 28 11        3 jr z,5F
 240+ 8F80
 241+ 8F80              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F80              ;
 243+ 8F80              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F80              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F80              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F80              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F80
 248+ 8F80              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F80              ;	   ""        ""       "f9", B="1"
 250+ 8F80              ;	   ""        ""       "fb", B="2"
 251+ 8F80              ; 	   ""        ""       "fb", B="3"
 252+ 8F80
 253+ 8F80 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8F83 CD A7 96     	call NextScan
 255+ 8F86
 256+ 8F86              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F86              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F86              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F86              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F86
 261+ 8F86 CD A8 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F89
 263+ 8F89              ; 	No se produce impacto. B="$80"
 264+ 8F89              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F89
 266+ 8F89 01 80 80         ld bc,$8080
 267+ 8F8C
 268+ 8F8C              ; 	LLegados a este punto tendremos:
 269+ 8F8C              ;
 270+ 8F8C              ;       Puntero_objeto_disparo en IY.
 271+ 8F8C              ;       Rutinas_de_impresion en IX.
 272+ 8F8C              ;       Puntero_de_impresion en HL.
 273+ 8F8C              ;       Impacto/Dirección en BC.
 274+ 8F8C
 275+ 8F8C CD B0 8F         call Almacena_disparo
 276+ 8F8F 18 0F            jr 6F                                           ; RET.
 277+ 8F91
 278+ 8F91              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F91              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F91              ;
 281+ 8F91              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F91              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F91              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F91              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F91
 286+ 8F91 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8F94 CD A7 96     	call NextScan
 288+ 8F97
 289+ 8F97              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F97              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F97              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F97              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F97
 294+ 8F97 CD A1 8F         call Ajusta_disparo_parte_derecha
 295+ 8F9A
 296+ 8F9A              ; 	No se produce impacto. B="$80"
 297+ 8F9A              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F9A
 299+ 8F9A 01 80 80     15 ld bc,$8080
 300+ 8F9D
 301+ 8F9D              ; 	LLegados a este punto tendremos:
 302+ 8F9D              ;
 303+ 8F9D              ;       Puntero_objeto_disparo en IY.
 304+ 8F9D              ;       Rutinas_de_impresion en IX.
 305+ 8F9D              ;       Puntero_de_impresion en HL.
 306+ 8F9D              ;       Impacto/Dirección en BC.
 307+ 8F9D
 308+ 8F9D CD B0 8F         call Almacena_disparo
 309+ 8FA0
 310+ 8FA0 C9           6 ret
 311+ 8FA1
 312+ 8FA1              ; ----------------------------------------------------------------
 313+ 8FA1              ;
 314+ 8FA1              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FA1              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FA1              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FA1
 318+ 8FA1 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FA2 FE 02            cp 2
 320+ 8FA4 38 01            jr c,1F
 321+ 8FA6 23               inc hl
 322+ 8FA7 C9           1 ret
 323+ 8FA8
 324+ 8FA8 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FA9 FE 01        	cp 1
 326+ 8FAB 20 01        	jr nz,1F
 327+ 8FAD 2B           	dec hl
 328+ 8FAE 2B           1 dec hl
 329+ 8FAF C9               ret
 330+ 8FB0
 331+ 8FB0              ; ----------------------------------------------------------------
 332+ 8FB0              ;
 333+ 8FB0              ;   25/02/23
 334+ 8FB0              ;
 335+ 8FB0              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FB0              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FB0              ;
 338+ 8FB0              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FB0              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FB0
 341+ 8FB0              Almacena_disparo
 342+ 8FB0
 343+ 8FB0 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FB1 F1               pop af
 345+ 8FB2 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FB3
 347+ 8FB3 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FB4 E6 01            and 1
 349+ 8FB6 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FB8              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FB8              ; 	Dispara AMADEUS.
 352+ 8FB8
 353+ 8FB8              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FB8              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FB8              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FB8              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FB8
 358+ 8FB8 C5               push bc
 359+ 8FB9 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FBC 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FBF A7               and a
 362+ 8FC0 ED 42            sbc hl,bc
 363+ 8FC2 CC 56 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FC5 C1               pop bc
 365+ 8FC6 28 54            jr z,4F
 366+ 8FC8
 367+ 8FC8 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FCB 23               inc hl
 369+ 8FCC 23               inc hl
 370+ 8FCD 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FD0              ;                                                   ; _ Disparo_(+1).
 372+ 8FD0 18 18            jr 2F
 373+ 8FD2
 374+ 8FD2              ; Dispara una entidad.
 375+ 8FD2
 376+ 8FD2 C5           1 push bc
 377+ 8FD3 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FD6 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FD9 A7               and a
 380+ 8FDA ED 42            sbc hl,bc
 381+ 8FDC CC 4F 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FDF C1               pop bc
 383+ 8FE0 28 3A            jr z,4F
 384+ 8FE2
 385+ 8FE2 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FE5 23               inc hl
 387+ 8FE6 23               inc hl
 388+ 8FE7 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FEA              ;                                                   ; _ Disparo_(+1).
 390+ 8FEA CD D5 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FED              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FED              ;
 393+ 8FED              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FED              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FED              ;                                                     Puntero_de_impresion en HL.
 396+ 8FED              ;                                                     Impacto/Dirección en BC.
 397+ 8FED
 398+ 8FED 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FEE 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FEF 23               inc hl                                          ; _ al siguiente.
 401+ 8FF0 A7               and a
 402+ 8FF1 20 C0            jr nz,3B
 403+ 8FF3
 404+ 8FF3 08               ex af,af
 405+ 8FF4 ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FF8 F9               ld sp,hl
 407+ 8FF9
 408+ 8FF9 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FFB F5               push af                                         ; Puntero de impresión.
 410+ 8FFC FD E5            push iy                                         ; Puntero objeto.
 411+ 8FFE C5               push bc                                         ; Control.
 412+ 8FFF
 413+ 8FFF ED 7B 15 89      ld sp,(Stack)
 414+ 9003
 415+ 9003              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9003
 417+ 9003 21 04 89     	ld hl,Ctrl_1
 418+ 9006 CB C6        	set 0,(hl)
 419+ 9008
 420+ 9008 DD E5        	push ix
 421+ 900A E1               pop hl
 422+ 900B F5               push af
 423+ 900C DD E1            pop ix
 424+ 900E
 425+ 900E CD A0 7F     	call Guarda_foto_registros
 426+ 9011
 427+ 9011 21 04 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9014 CB 86        	res 0,(hl)
 429+ 9016
 430+ 9016              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9016              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9016
 433+ 9016 CD 56 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9019 CD 4F 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 901C
 436+ 901C C9           4 ret
 437+ 901D
 438+ 901D              ; ----------------------------------------------------------------
 439+ 901D              ;
 440+ 901D              ;   4/3/23
 441+ 901D              ;
 442+ 901D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 901D              ;   _ al generarse el disparo.
 444+ 901D              ;
 445+ 901D              ;       "$80" ..... No se produce colisión.
 446+ 901D              ;       "$81" ..... Se produce colisión.
 447+ 901D              ;
 448+ 901D              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 901D              ;         _ que forman el disparo.
 450+ 901D
 451+ 901D
 452+ 901D              Comprueba_Colision
 453+ 901D
 454+ 901D              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 901D
 456+ 901D FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 901F E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9020
 459+ 9020 CD 56 90         call Modifica_H_Velocidad_disparo
 460+ 9023
 461+ 9023 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9024 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9026 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9028
 465+ 9028 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 902A CD 46 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 902D
 468+ 902D 7B               ld a,e
 469+ 902E E6 01            and 1
 470+ 9030 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9032              ;                                                  ; _ para activar IMPACTO.
 472+ 9032 E1               pop hl
 473+ 9033 E5               push hl
 474+ 9034 CD A7 96         call NextScan
 475+ 9037
 476+ 9037 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9038 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 903A 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 903C              ;                                                  ; _ 2º scanline si esto es así.
 480+ 903C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 903E CD 46 90         call Bucle_2
 482+ 9041
 483+ 9041 43           1 ld b,e
 484+ 9042 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9043 FD E1            pop iy
 486+ 9045 C9               ret
 487+ 9046
 488+ 9046              ; ---------- ----------
 489+ 9046
 490+ 9046 06 02        Bucle_2 ld b,2
 491+ 9048 FD 7E 00     2 ld a,(iy)
 492+ 904B A6               and (hl)
 493+ 904C 28 02            jr z,1F
 494+ 904E 1E 81            ld e,$81
 495+ 9050 23           1 inc hl
 496+ 9051 FD 23            inc iy
 497+ 9053 10 F3            djnz 2B
 498+ 9055 C9               ret
 499+ 9056
 500+ 9056              ; ---------- ----------
 501+ 9056              ;
 502+ 9056              ;   21/7/23
 503+ 9056
 504+ 9056              Modifica_H_Velocidad_disparo
 505+ 9056
 506+ 9056 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9059 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 905B D0               ret nc                                         ; _ incrementamos H.
 509+ 905C 24               inc h
 510+ 905D
 511+ 905D C9               ret
 512+ 905E
 513+ 905E              ; -------------------------------------------------------------------------------------------------------------
 514+ 905E              ;
 515+ 905E              ;   11/04/23
 516+ 905E              ;
 517+ 905E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 905E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 905E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 905E              ;
 521+ 905E              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 905E
 523+ 905E              Compara_coordenadas_X
 524+ 905E
 525+ 905E              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 905E              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 905E
 528+ 905E              ; Preparamos registros:
 529+ 905E
 530+ 905E 21 CB 88         ld hl,Filas+6
 531+ 9061 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9062 23               inc hl
 533+ 9063 23               inc hl
 534+ 9064 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9065 43               ld b,e
 536+ 9066
 537+ 9066 21 D9 88         ld hl,Filas+20
 538+ 9069 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 906A 21 4A 89         ld hl,Coordenadas_X_Entidad
 540+ 906D CD 89 92         call Guarda_coordenadas_X
 541+ 9070
 542+ 9070              ; Preparamos registros:
 543+ 9070
 544+ 9070 21 A4 85         ld hl,Amadeus_db+6
 545+ 9073 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9074 23               inc hl
 547+ 9075 23               inc hl
 548+ 9076 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9077 7B               ld a,e
 550+ 9078 08               ex af,af'
 551+ 9079 21 B2 85         ld hl,Amadeus_db+20
 552+ 907C 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 907D 21 47 89         ld hl,Coordenadas_X_Amadeus
 554+ 9080 CD 89 92         call Guarda_coordenadas_X
 555+ 9083
 556+ 9083              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9083              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9083
 559+ 9083 04               inc b
 560+ 9084 05               dec b
 561+ 9085 28 04            jr z,1F
 562+ 9087 06 03            ld b,3
 563+ 9089 18 02            jr 2F
 564+ 908B 06 02        1 ld b,2
 565+ 908D 08           2 ex af,af'
 566+ 908E 3C               inc a
 567+ 908F 3D               dec a
 568+ 9090 28 04            jr z,5F
 569+ 9092 0E 03            ld c,3
 570+ 9094 18 02            jr 6F
 571+ 9096 0E 02        5 ld c,2
 572+ 9098 79           6 ld a,c
 573+ 9099 08               ex af,af'
 574+ 909A 11 4A 89         ld de,Coordenadas_X_Entidad
 575+ 909D 1A           4 ld a,(de)
 576+ 909E 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 90A1 BE           3 cp (hl)
 578+ 90A2 28 0E            jr z,7F
 579+ 90A4 23               inc hl
 580+ 90A5 0D               dec c
 581+ 90A6 20 F9            jr nz,3B
 582+ 90A8 13               inc de
 583+ 90A9 08               ex af,af'
 584+ 90AA 4F               ld c,a
 585+ 90AB 08               ex af,af'
 586+ 90AC 10 EF            djnz 4B
 587+ 90AE
 588+ 90AE              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90AE
 590+ 90AE CD C5 92     8 call Limpia_Coordenadas_X
 591+ 90B1 C9               ret
 592+ 90B2
 593+ 90B2 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90B4 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90B7 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90BA CB D6            set 2,(hl)
 597+ 90BC 18 F0            jr 8B
 598+ 90BE
 599+ 90BE              ; -----------------------------------------------------------------------
 600+ 90BE              ;
 601+ 90BE              ;   17/04/23
 602+ 90BE              ;
 603+ 90BE
 604+ 90BE              Detecta_colision_nave_entidad
 605+ 90BE
 606+ 90BE              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90BE
 608+ 90BE 2A C7 88         ld hl,(Posicion_actual)
 609+ 90C1 CD 02 96         call Calcula_puntero_de_impresion
 610+ 90C4
 611+ 90C4              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90C4              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90C4
 614+ 90C4 DD E5            push ix
 615+ 90C6 E1               pop hl
 616+ 90C7 E5               push hl
 617+ 90C8
 618+ 90C8              ; ----- ----- -----
 619+ 90C8 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90CA 06 0A            ld b,10
 621+ 90CC CD FC 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90CF 7B               ld a,e
 623+ 90D0 FE 05            cp 5
 624+ 90D2 38 0E            jr c,3F
 625+ 90D4
 626+ 90D4              ; LLegados a este punto:
 627+ 90D4              ;
 628+ 90D4              ;   HAY COLISIÓN !!!!!.
 629+ 90D4              ;
 630+ 90D4              ;   .db (Impacto) de Amadeus a "1".
 631+ 90D4              ;   SET el bit3 de (Impacto2).
 632+ 90D4              ;
 633+ 90D4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90D4
 635+ 90D4 21 B7 85         ld hl,Amadeus_db+25
 636+ 90D7 36 01            ld (hl),1
 637+ 90D9 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90DC CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90DE CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90E0 18 18            jr 1F
 641+ 90E2
 642+ 90E2              ; -----
 643+ 90E2
 644+ 90E2 E1           3 pop hl
 645+ 90E3 CD A7 96         call NextScan
 646+ 90E6 E5               push hl
 647+ 90E7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90E8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90EA 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90EC 30 0C            jr nc,1F
 651+ 90EE              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90EE 10 DC            djnz 2B
 653+ 90F0
 654+ 90F0              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90F0
 656+ 90F0              ; LLegados a este punto:
 657+ 90F0              ;
 658+ 90F0              ;   NO HAY COLISIÓN !!!!!.
 659+ 90F0              ;
 660+ 90F0              ;   .db (Impacto) de Amadeus a "0".
 661+ 90F0              ;   RES el bit2 de (Impacto2).
 662+ 90F0              ;
 663+ 90F0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90F0              ;   Lo colocamos a "0".
 665+ 90F0
 666+ 90F0 21 42 89         ld hl,Impacto2
 667+ 90F3 CB 96            res 2,(hl)
 668+ 90F5 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90F8 36 00            ld (hl),0
 670+ 90FA
 671+ 90FA E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90FB C9               ret
 673+ 90FC
 674+ 90FC               ; ---------- ----------
 675+ 90FC
 676+ 90FC C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90FD 3A C6 88         ld a,(Columns)
 678+ 9100 47               ld b,a
 679+ 9101 FD 7E 00     2 ld a,(iy)
 680+ 9104 BE               cp (hl)
 681+ 9105 28 01            jr z,1F
 682+ 9107
 683+ 9107 1C               inc e
 684+ 9108
 685+ 9108 23           1 inc hl
 686+ 9109 FD 23            inc iy
 687+ 910B 10 F4            djnz 2B
 688+ 910D C1               pop bc
 689+ 910E C9               ret
 690+ 910F
 691+ 910F              ; -------------------------------------------------------------------------------------------------------------
 692+ 910F              ;
 693+ 910F              ;   13/03/23
 694+ 910F              ;
 695+ 910F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 910F              ;
 697+ 910F              ;   DESTRUYE: HL,BC,DE y A.
 698+ 910F
 699+ 910F 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9112 7E               ld a,(hl)
 701+ 9113 A7               and a
 702+ 9114 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9115
 704+ 9115 44               ld b,h
 705+ 9116 4D               ld c,l
 706+ 9117 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 911A E5               push hl
 708+ 911B A7               and a
 709+ 911C ED 42            sbc hl,bc
 710+ 911E E5               push hl
 711+ 911F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9120
 713+ 9120 E1               pop hl
 714+ 9121 54               ld d,h
 715+ 9122 5D               ld e,l
 716+ 9123 1B               dec de
 717+ 9124 ED B8            lddr                                                ; Limpiamos.
 718+ 9126
 719+ 9126 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9129 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 912C
 722+ 912C C9               ret
 723+ 912D
 724+ 912D              ; -------------------------------------------------------------------------------------------------------------
 725+ 912D              ;
 726+ 912D              ;   18/07/23
 727+ 912D              ;
 728+ 912D
 729+ 912D              Motor_de_disparos
 730+ 912D
 731+ 912D              ; Gestiona DISPAROS DE AMADEUS.
 732+ 912D
 733+ 912D 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9130 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9133
 736+ 9133 CD D5 8C     2 call Extrae_address
 737+ 9136 7E               ld a,(hl)
 738+ 9137 A7               and a
 739+ 9138 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 913A
 741+ 913A              ; ----- ----- ----- ----- ----- -----
 742+ 913A
 743+ 913A C5               push bc
 744+ 913B CD FF 91         call foto_disparo_a_borrar
 745+ 913E
 746+ 913E              ; Existe colisión con este disparo???
 747+ 913E
 748+ 913E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 913F 7E               ld a,(hl)
 750+ 9140 2B               dec hl
 751+ 9141 E6 01            and 1
 752+ 9143 28 1D            jr z,9F
 753+ 9145
 754+ 9145              ;   En este punto:
 755+ 9145              ;
 756+ 9145              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9145              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9145              ;   _con la entidad).
 759+ 9145              ;
 760+ 9145              ;   Disparo_2A defw 0                                ; Control.
 761+ 9145              ;    defw 0                                          ; Puntero objeto.
 762+ 9145              ;    defw 0                                          ; Puntero de impresión.
 763+ 9145              ;    defw 0                                          ; Rutina de impresión.
 764+ 9145
 765+ 9145 E5               push hl
 766+ 9146
 767+ 9146 06 04            ld b,4
 768+ 9148 23           19 inc hl
 769+ 9149 10 FD            djnz 19B
 770+ 914B
 771+ 914B CD D5 8C         call Extrae_address
 772+ 914E CD 70 9D         call Genera_coordenadas_disparo
 773+ 9151
 774+ 9151              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9151
 776+ 9151 21 45 89         ld hl,Coordenadas_disparo_certero
 777+ 9154 72               ld (hl),d
 778+ 9155 23               inc hl
 779+ 9156 73               ld (hl),e
 780+ 9157
 781+ 9157              ; Elimino el disparo de la base de datos.
 782+ 9157
 783+ 9157 E1               pop hl
 784+ 9158 CD 7E 92         call Elimina_disparo_de_base_de_datos
 785+ 915B 21 42 89         ld hl,Impacto2
 786+ 915E CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9160
 788+ 9160 18 06            jr 11F
 789+ 9162
 790+ 9162 CD 28 92     9 call Mueve_disparo
 791+ 9165 CD FF 91         call foto_disparo_a_borrar
 792+ 9168
 793+ 9168 C1           11 pop bc
 794+ 9169 18 04            jr 7F
 795+ 916B
 796+ 916B              ; ----- ----- ----- ----- ----- -----
 797+ 916B
 798+ 916B ED 42        1 sbc hl,bc
 799+ 916D 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 916F
 801+ 916F 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9172 23               inc hl
 803+ 9173 23               inc hl
 804+ 9174 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9177 18 BA            jr 2B
 806+ 9179
 807+ 9179 CD 56 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 917C              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 917C
 810+ 917C              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 917C
 812+ 917C 01 8A 85         ld bc,Disparo_11
 813+ 917F 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9182
 815+ 9182 CD D5 8C     5 call Extrae_address
 816+ 9185 7E               ld a,(hl)
 817+ 9186 A7               and a
 818+ 9187 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9189
 820+ 9189              ; ----- ----- ----- ----- ----- -----
 821+ 9189
 822+ 9189 C5               push bc
 823+ 918A CD FF 91         call foto_disparo_a_borrar
 824+ 918D
 825+ 918D              ; Existe colisión con este disparo???
 826+ 918D
 827+ 918D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 918E 7E               ld a,(hl)
 829+ 918F 2B               dec hl
 830+ 9190 E6 01            and 1
 831+ 9192 28 4D            jr z,10F
 832+ 9194
 833+ 9194              ;! La colisión se produce con Amadeus???
 834+ 9194              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9194
 836+ 9194 E5               push hl
 837+ 9195
 838+ 9195 06 04            ld b,4
 839+ 9197 23           16 inc hl
 840+ 9198 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 919A
 842+ 919A CD D5 8C         call Extrae_address
 843+ 919D CD 70 9D         call Genera_coordenadas_disparo
 844+ 91A0
 845+ 91A0 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91A1 FE 16            cp $16
 847+ 91A3 38 2A            jr c,15F
 848+ 91A5
 849+ 91A5
 850+ 91A5              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91A5
 852+ 91A5 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91A6
 854+ 91A6              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91A6
 856+ 91A6
 857+ 91A6 2A 4D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91A9
 859+ 91A9              ; Coordenada X de Amadeus en D.
 860+ 91A9
 861+ 91A9 7D               ld a,l
 862+ 91AA E6 1F            and $1F
 863+ 91AC 57               ld d,a
 864+ 91AD
 865+ 91AD 21 A6 85         ld hl,Amadeus_db+8
 866+ 91B0 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91B1
 868+ 91B1 21 47 89         ld hl,Coordenadas_X_Amadeus
 869+ 91B4 CD 89 92         call Guarda_coordenadas_X
 870+ 91B7
 871+ 91B7 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91B8
 873+ 91B8              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91B8
 875+ 91B8 06 02            ld b,2
 876+ 91BA C5           20 push bc
 877+ 91BB
 878+ 91BB 06 03            ld b,3
 879+ 91BD 21 47 89         ld hl,Coordenadas_X_Amadeus
 880+ 91C0 7E           18 ld a,(hl)
 881+ 91C1 BA               cp d
 882+ 91C2 20 04            jr nz,17F
 883+ 91C4
 884+ 91C4              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91C4
 886+ 91C4 C1               pop bc
 887+ 91C5 E1               pop hl
 888+ 91C6 18 0D            jr 14F
 889+ 91C8
 890+ 91C8 23           17 inc hl
 891+ 91C9 10 F5            djnz 18B
 892+ 91CB
 893+ 91CB 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91CC
 895+ 91CC C1               pop bc
 896+ 91CD 10 EB            djnz 20B
 897+ 91CF
 898+ 91CF
 899+ 91CF              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91CF              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91CF
 902+ 91CF E1           15 pop hl
 903+ 91D0 23               inc hl
 904+ 91D1 35               dec (hl)
 905+ 91D2 2B               dec hl
 906+ 91D3 18 0C            jr 10F
 907+ 91D5
 908+ 91D5              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91D5              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91D5
 911+ 91D5 E5           14 push hl
 912+ 91D6 CD 7E 92         call Elimina_disparo_de_base_de_datos
 913+ 91D9 21 42 89         ld hl,Impacto2
 914+ 91DC CB CE            set 1,(hl)
 915+ 91DE E1               pop hl
 916+ 91DF 18 06            jr 12F
 917+ 91E1
 918+ 91E1              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91E1
 920+ 91E1 CD 28 92     10 call Mueve_disparo
 921+ 91E4 CD FF 91         call foto_disparo_a_borrar
 922+ 91E7 C1           12 pop bc
 923+ 91E8
 924+ 91E8 18 04            jr 8F
 925+ 91EA
 926+ 91EA              ; ----- ----- ----- ----- ----- -----
 927+ 91EA
 928+ 91EA ED 42        4 sbc hl,bc
 929+ 91EC 28 0A            jr z,6F
 930+ 91EE
 931+ 91EE 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91F1 23               inc hl
 933+ 91F2 23               inc hl
 934+ 91F3 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91F6 18 8A            jr 5B
 936+ 91F8
 937+ 91F8 CD 4F 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91FB CD C5 92         call Limpia_Coordenadas_X
 939+ 91FE C9               ret
 940+ 91FF
 941+ 91FF              ; ------------------------------------------------------------------
 942+ 91FF
 943+ 91FF              foto_disparo_a_borrar
 944+ 91FF
 945+ 91FF 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9200 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9201 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9202
 949+ 9202 E5               push hl
 950+ 9203 23               inc hl
 951+ 9204 23               inc hl
 952+ 9205 ED 73 15 89      ld (Stack),sp
 953+ 9209 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 920A FD E1            pop iy
 955+ 920C DD E1            pop ix
 956+ 920E E1               pop hl
 957+ 920F ED 7B 15 89      ld sp,(Stack)
 958+ 9213 3A 04 89         ld a,(Ctrl_1)
 959+ 9216 CB C7            set 0,a
 960+ 9218 32 04 89         ld (Ctrl_1),a
 961+ 921B CD A0 7F         call Guarda_foto_registros
 962+ 921E 3A 04 89         ld a,(Ctrl_1)
 963+ 9221 CB 87            res 0,a
 964+ 9223 32 04 89         ld (Ctrl_1),a
 965+ 9226 E1               pop hl
 966+ 9227 C9               ret
 967+ 9228
 968+ 9228              ;---------------------------------------------------
 969+ 9228              ;
 970+ 9228              ;   18/07/23
 971+ 9228              ;
 972+ 9228
 973+ 9228              Mueve_disparo
 974+ 9228
 975+ 9228              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9228              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9228              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9228
 979+ 9228 E5               push hl
 980+ 9229
 981+ 9229 7E               ld a,(hl)
 982+ 922A
 983+ 922A 06 04            ld b,4
 984+ 922C 23           1 inc hl
 985+ 922D 10 FD            djnz 1B
 986+ 922F
 987+ 922F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 922F
 989+ 922F CD D5 8C         call Extrae_address
 990+ 9232
 991+ 9232 E6 01            and 1
 992+ 9234 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9236
 994+ 9236              ; Disparo hacia arriba, (Amadeus).
 995+ 9236
 996+ 9236              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9236              ; _ de la dificultad.
 998+ 9236
 999+ 9236 CD B6 96         call PreviousScan
1000+ 9239 CD B6 96         call PreviousScan
1001+ 923C CD B6 96         call PreviousScan
1002+ 923F CD B6 96         call PreviousScan
1003+ 9242
1004+ 9242              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9242
1006+ 9242 7C               ld a,h
1007+ 9243 FE 40            cp $40
1008+ 9245 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9247
1010+ 9247              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9247
1012+ 9247 EB               ex de,hl
1013+ 9248 06 04            ld b,4
1014+ 924A 2B           6 dec hl
1015+ 924B 10 FD            djnz 6B
1016+ 924D
1017+ 924D CD 7E 92         call Elimina_disparo_de_base_de_datos
1018+ 9250 E1               pop hl
1019+ 9251 18 10            jr 7F
1020+ 9253
1021+ 9253              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9253              ; HL contiene el puntero de impresión del disparo.
1023+ 9253              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9253
1025+ 9253 D5           3 push de
1026+ 9254 C5               push bc
1027+ 9255
1028+ 9255 CD 1D 90         call Comprueba_Colision
1029+ 9258
1030+ 9258              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9258
1032+ 9258 78               ld a,b
1033+ 9259
1034+ 9259 C1               pop bc
1035+ 925A D1               pop de
1036+ 925B
1037+ 925B EB               ex de,hl
1038+ 925C
1039+ 925C 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 925D 23               inc hl                                      ; _ movimiento.
1041+ 925E 72               ld (hl),d
1042+ 925F
1043+ 925F E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9260
1045+ 9260 23               inc hl                                      ; _ en curso.
1046+ 9261 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9262 2B               dec hl
1048+ 9263
1049+ 9263 C9           7 ret
1050+ 9264
1051+ 9264              ; Disparo hacia abajo, (Entidad).
1052+ 9264
1053+ 9264 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9267 47               ld b,a
1055+ 9268
1056+ 9268 CD A7 96     4 call NextScan
1057+ 926B 10 FB            djnz 4B
1058+ 926D
1059+ 926D              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 926D
1061+ 926D 7C               ld a,h
1062+ 926E FE 58            cp $58
1063+ 9270 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9272
1065+ 9272 EB               ex de,hl
1066+ 9273 06 04            ld b,4
1067+ 9275 2B           5 dec hl
1068+ 9276 10 FD            djnz 5B
1069+ 9278
1070+ 9278 CD 7E 92         call Elimina_disparo_de_base_de_datos
1071+ 927B E1               pop hl
1072+ 927C 18 E5            jr 7B
1073+ 927E
1074+ 927E              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 927E
1076+ 927E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9281 AF               xor a
1078+ 9282 77               ld (hl),a
1079+ 9283 54               ld d,h
1080+ 9284 5D               ld e,l
1081+ 9285 13               inc de
1082+ 9286 ED B0            ldir
1083+ 9288 C9               ret
1084+ 9289
1085+ 9289              ; -----------------------------------------------------------------
1086+ 9289              ;
1087+ 9289              ;   19/7/23
1088+ 9289              ;
1089+ 9289              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9289              ;
1091+ 9289              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9289              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9289              ;
1094+ 9289              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9289              ;
1096+ 9289              ;   INPUTS:
1097+ 9289              ;
1098+ 9289              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9289              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9289
1101+ 9289              ;   MODIFICA: A, HL, BC y DE.
1102+ 9289
1103+ 9289              Guarda_coordenadas_X
1104+ 9289
1105+ 9289 7B               ld a,e
1106+ 928A A7               and a
1107+ 928B 20 04            jr nz,1F
1108+ 928D
1109+ 928D 06 02            ld b,2
1110+ 928F 18 02            jr 2F
1111+ 9291
1112+ 9291 06 03        1 ld b,3
1113+ 9293 72           2 ld (hl),d
1114+ 9294 23               inc hl
1115+ 9295 14               inc d
1116+ 9296 10 FB            djnz 2B
1117+ 9298
1118+ 9298 C9               ret
1119+ 9299
1120+ 9299              ; -----------------------------------------------------------------
1121+ 9299              ;
1122+ 9299              ;   12/04/23
1123+ 9299              ;
1124+ 9299
1125+ 9299 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1126+ 929C A7               and a
1127+ 929D C8               ret z
1128+ 929E
1129+ 929E FE 04            cp 4
1130+ 92A0 20 09            jr nz,1F
1131+ 92A2
1132+ 92A2
1133+ 92A2              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92A2
1135+ 92A2 CD BE 90         call Detecta_colision_nave_entidad
1136+ 92A5
1137+ 92A5 21 42 89         ld hl,Impacto2
1138+ 92A8 CB 5E            bit 3,(hl)
1139+ 92AA C0               ret nz                                               ; Existe colisión, RET.
1140+ 92AB
1141+ 92AB              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92AB              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92AB
1144+ 92AB 21 42 89     1 ld hl,Impacto2
1145+ 92AE CB 4E            bit 1,(hl)
1146+ 92B0 28 07            jr z,2F
1147+ 92B2
1148+ 92B2 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92B5 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92B7 18 0B            jr 3F
1151+ 92B9
1152+ 92B9 21 42 89     2 ld hl,Impacto2
1153+ 92BC CB 46            bit 0,(hl)
1154+ 92BE C8               ret z
1155+ 92BF
1156+ 92BF              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92BF
1158+ 92BF 21 04 89         ld hl,Ctrl_1
1159+ 92C2 CB D6            set 2,(hl)
1160+ 92C4
1161+ 92C4 C9           3 ret
1162+ 92C5
1163+ 92C5              ; -----------------------------------------------------------------
1164+ 92C5              ;
1165+ 92C5              ;   19/7/23
1166+ 92C5              ;
1167+ 92C5              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92C5
1169+ 92C5 AF           Limpia_Coordenadas_X xor a
1170+ 92C6 06 06            ld b,6
1171+ 92C8 21 47 89         ld hl,Coordenadas_X_Amadeus
1172+ 92CB 77           1 ld (hl),a
1173+ 92CC 23               inc hl
1174+ 92CD 10 FC            djnz 1B
1175+ 92CF C9               ret
1176+ 92D0
1177+ 92D0              ; -----------------------------------------------------------------
1178+ 92D0              ;
1179+ 92D0              ;   25/04/23
1180+ 92D0              ;
1181+ 92D0
1182+ 92D0              Determina_resultado_comparativa
1183+ 92D0
1184+ 92D0              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92D0              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92D0              ;
1187+ 92D0              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92D0              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92D0              ;
1190+ 92D0              ;   SBC HL,DE
1191+ 92D0
1192+ 92D0              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92D0              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92D0
1195+ 92D0              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92D0              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92D0
1198+ 92D0
1199+ 92D0 3A D9 88         ld a,(Cuad_objeto)
1200+ 92D3 FE 02            cp 2
1201+ 92D5 28 26            jr z,2F
1202+ 92D7 38 24            jr c,2F
1203+ 92D9
1204+ 92D9              ; Cuadrantes 3º y 4º
1205+ 92D9
1206+ 92D9 E6 01            and 1
1207+ 92DB 28 10            jr z,4F
1208+ 92DD
1209+ 92DD              ; Cuadrante 3º
1210+ 92DD
1211+ 92DD 7C               ld a,h
1212+ 92DE 06 00            ld b,0
1213+ 92E0
1214+ 92E0 CD 6B 93         call Compara_cositas_H3
1215+ 92E3
1216+ 92E3 04               inc b
1217+ 92E4 05               dec b
1218+ 92E5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92E6
1220+ 92E6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92E7 06 00            ld b,0
1222+ 92E9
1223+ 92E9 CD 7D 93         call Compara_cositas_L3
1224+ 92EC C9               ret
1225+ 92ED
1226+ 92ED              ; Cuadrante 4º
1227+ 92ED
1228+ 92ED 7C           4 ld a,h
1229+ 92EE 06 00            ld b,0
1230+ 92F0
1231+ 92F0 CD 8F 93         call Compara_cositas_H4
1232+ 92F3
1233+ 92F3 04               inc b
1234+ 92F4 05               dec b
1235+ 92F5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92F6
1237+ 92F6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92F7 06 00            ld b,0
1239+ 92F9
1240+ 92F9 CD A5 93         call Compara_cositas_L4
1241+ 92FC C9               ret
1242+ 92FD
1243+ 92FD              ; Cuadrantes 1º y 2º.
1244+ 92FD
1245+ 92FD 28 10        2 jr z,3F
1246+ 92FF
1247+ 92FF              ; 1er Cuadrante
1248+ 92FF
1249+ 92FF 7C               ld a,h
1250+ 9300 06 00            ld b,0
1251+ 9302
1252+ 9302 CD 43 93         call Compara_cositas_H1
1253+ 9305
1254+ 9305 04               inc b
1255+ 9306 05               dec b
1256+ 9307 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9308
1258+ 9308 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9309 06 00            ld b,0
1260+ 930B
1261+ 930B CD 59 93         call Compara_cositas_L1
1262+ 930E C9               ret
1263+ 930F
1264+ 930F
1265+ 930F              ; 2º Cuadrante
1266+ 930F
1267+ 930F 7C           3 ld a,h
1268+ 9310 06 00            ld b,0
1269+ 9312
1270+ 9312 CD 1F 93         call Compara_cositas_H2
1271+ 9315
1272+ 9315 04               inc b
1273+ 9316 05               dec b
1274+ 9317 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9318
1276+ 9318 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9319 06 00            ld b,0
1278+ 931B
1279+ 931B CD 31 93         call Compara_cositas_L2
1280+ 931E C9               ret
1281+ 931F
1282+ 931F A7           Compara_cositas_H2 and a
1283+ 9320 28 0D            jr z,1F
1284+ 9322              ;    cp $fd
1285+ 9322              ;    jr z,1F
1286+ 9322              ;    cp $fe
1287+ 9322              ;    jr z,1F
1288+ 9322 FE FF            cp $ff
1289+ 9324 28 09            jr z,1F
1290+ 9326 FE 01            cp $01
1291+ 9328 28 05            jr z,1F
1292+ 932A FE 02            cp $02
1293+ 932C 28 01            jr z,1F
1294+ 932E C0               ret nz
1295+ 932F 04           1 inc b
1296+ 9330 C9               ret
1297+ 9331
1298+ 9331 A7           Compara_cositas_L2 and a
1299+ 9332 28 0D            jr z,1F
1300+ 9334              ;    cp $fd
1301+ 9334              ;    jr z,1F
1302+ 9334 FE FE            cp $fe
1303+ 9336 28 09            jr z,1F
1304+ 9338 FE FF            cp $ff
1305+ 933A 28 05            jr z,1F
1306+ 933C FE 01            cp $01
1307+ 933E 28 01            jr z,1F
1308+ 9340              ;    cp $02
1309+ 9340              ;    jr z,1F
1310+ 9340 C0               ret nz
1311+ 9341 04           1 inc b
1312+ 9342 C9               ret
1313+ 9343
1314+ 9343 A7           Compara_cositas_H1 and a
1315+ 9344 28 11            jr z,1F
1316+ 9346              ;    cp $fd
1317+ 9346              ;    jr z,1F
1318+ 9346              ;    cp $fe
1319+ 9346              ;    jr z,1F
1320+ 9346 FE FF            cp $ff
1321+ 9348 28 0D            jr z,1F
1322+ 934A FE 01            cp $01
1323+ 934C 28 09            jr z,1F
1324+ 934E FE 02            cp $02
1325+ 9350 28 05            jr z,1F
1326+ 9352 FE 03            cp $03
1327+ 9354 28 01            jr z,1F
1328+ 9356 C0               ret nz
1329+ 9357 04           1 inc b
1330+ 9358 C9               ret
1331+ 9359
1332+ 9359 A7           Compara_cositas_L1 and a
1333+ 935A 28 0D            jr z,1F
1334+ 935C              ;    cp $fd
1335+ 935C              ;    jr z,1F
1336+ 935C              ;    cp $fe
1337+ 935C              ;    jr z,1F
1338+ 935C              ;    cp $ff
1339+ 935C              ;    jr z,1F
1340+ 935C FE 01            cp $01
1341+ 935E 28 09            jr z,1F
1342+ 9360 FE 02            cp $02
1343+ 9362 28 05            jr z,1F
1344+ 9364 FE 03            cp $03
1345+ 9366 28 01            jr z,1F
1346+ 9368 C0               ret nz
1347+ 9369 04           1 inc b
1348+ 936A C9               ret
1349+ 936B
1350+ 936B A7           Compara_cositas_H3 and a
1351+ 936C 28 0D            jr z,1F
1352+ 936E              ;    cp $fd
1353+ 936E              ;    jr z,1F
1354+ 936E FE FE            cp $fe
1355+ 9370 28 09            jr z,1F
1356+ 9372 FE FF            cp $ff
1357+ 9374 28 05            jr z,1F
1358+ 9376 FE 01            cp $01
1359+ 9378 28 01            jr z,1F
1360+ 937A              ;    cp $02
1361+ 937A              ;    jr z,1F
1362+ 937A              ;    cp $03
1363+ 937A              ;    jr z,1F
1364+ 937A C0               ret nz
1365+ 937B 04           1 inc b
1366+ 937C C9               ret
1367+ 937D
1368+ 937D A7           Compara_cositas_L3 and a
1369+ 937E 28 0D            jr z,1F
1370+ 9380              ;    cp $fd
1371+ 9380              ;    jr z,1F
1372+ 9380              ;    cp $fe
1373+ 9380              ;    jr z,1F
1374+ 9380              ;    cp $ff
1375+ 9380              ;    jr z,1F
1376+ 9380 FE 01            cp $01
1377+ 9382 28 09            jr z,1F
1378+ 9384 FE 02            cp $02
1379+ 9386 28 05            jr z,1F
1380+ 9388 FE 03            cp $03
1381+ 938A 28 01            jr z,1F
1382+ 938C C0               ret nz
1383+ 938D 04           1 inc b
1384+ 938E C9               ret
1385+ 938F
1386+ 938F A7           Compara_cositas_H4 and a
1387+ 9390 28 11            jr z,1F
1388+ 9392 FE FD            cp $fd
1389+ 9394 28 0D            jr z,1F
1390+ 9396 FE FE            cp $fe
1391+ 9398 28 09            jr z,1F
1392+ 939A FE FF            cp $ff
1393+ 939C 28 05            jr z,1F
1394+ 939E FE 01            cp $01
1395+ 93A0 28 01            jr z,1F
1396+ 93A2              ;    cp $02
1397+ 93A2              ;    jr z,1F
1398+ 93A2              ;    cp $03
1399+ 93A2              ;    jr z,1F
1400+ 93A2 C0               ret nz
1401+ 93A3 04           1 inc b
1402+ 93A4 C9               ret
1403+ 93A5
1404+ 93A5 A7           Compara_cositas_L4 and a
1405+ 93A6 28 0D            jr z,1F
1406+ 93A8              ;    cp $fd
1407+ 93A8              ;    jr z,1F
1408+ 93A8 FE FE            cp $fe
1409+ 93AA 28 09            jr z,1F
1410+ 93AC FE FF            cp $ff
1411+ 93AE 28 05            jr z,1F
1412+ 93B0 FE 01            cp $01
1413+ 93B2 28 01            jr z,1F
1414+ 93B4              ;    cp $02
1415+ 93B4              ;    jr z,1F
1416+ 93B4              ;    cp $03
1417+ 93B4              ;    jr z,1F
1418+ 93B4 C0               ret nz
1419+ 93B5 04           1 inc b
1420+ 93B6 C9               ret
# file closed: Disparo.asm
1645  93B7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93B7              ; ******************************************************************************************************************************************************************************************
   2+ 93B7              ;
   3+ 93B7              ; 26/06/23
   4+ 93B7              ;
   5+ 93B7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93B7
   7+ 93B7 CD 9B 96     Draw call Prepara_draw
   8+ 93BA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93BB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93BC 28 05        	jr z,2F
  11+ 93BE
  12+ 93BE 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93C1 18 0C        	jr 1F
  14+ 93C3
  15+ 93C3 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93C6 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93C9 CD 58 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93CC              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93CC CD FD 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93CF
  21+ 93CF 3A EF 88     1 ld a,(Ctrl_0)
  22+ 93D2 CB 6F        	bit 5,a
  23+ 93D4 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93D6
  25+ 93D6 CD EE 93     	call Comprueba_limite_horizontal
  26+ 93D9 CD 7E 94     	call Comprueba_limite_vertical
  27+ 93DC
  28+ 93DC              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93DC              ; -----------------------
  30+ 93DC              ; -----------------------
  31+ 93DC              ; -----------------------
  32+ 93DC
  33+ 93DC CD CB 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93DF CD 02 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93E2 CD 61 96     	call Define_rutina_de_impresion
  36+ 93E5
  37+ 93E5 3A EF 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93E8 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93EA 32 EF 88     	ld (Ctrl_0),a
  40+ 93ED
  41+ 93ED C9           	ret
  42+ 93EE
  43+ 93EE              ; *******************************************************************************************************************************************************************************************
  44+ 93EE              ;	21/01/23
  45+ 93EE              ;
  46+ 93EE              ; 	Comprueba_limite_horizontal.
  47+ 93EE              ;
  48+ 93EE              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93EE              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93EE              ;
  51+ 93EE              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93EE              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93EE              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93EE              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93EE
  56+ 93EE
  57+ 93EE
  58+ 93EE 3A EF 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93F1 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93F3 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93F5 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93F7 32 EF 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93FA 18 09            jr 6F
  64+ 93FC CB 5F        1 bit 3,a
  65+ 93FE 28 0A            jr z,2F
  66+ 9400 E6 F7            and $f7
  67+ 9402 32 EF 88         ld (Ctrl_0),a
  68+ 9405 CD 58 95     6 call Inicializacion
  69+ 9408 18 5B            jr 5F
  70+ 940A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 940B
  72+ 940B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 940B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 940B
  75+ 940B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 940C 2A FF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 940F CD BA 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9412 67           	ld h,a
  79+ 9413 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9414 CD BA 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9417 67           	ld h,a
  82+ 9418 A7           	and a
  83+ 9419 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 941B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 941C 3A D9 88     	ld a,(Cuad_objeto)
  86+ 941F FE 02        	cp 2
  87+ 9421 38 1E        	jr c,3F
  88+ 9423 28 1C        	jr z,3F
  89+ 9425 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9426 28 23            jr z,7F
  91+ 9428 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 942A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 942C E1           	pop hl
  94+ 942D
  95+ 942D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 942D              ; _para indicar con E="2" en caso necesario.
  97+ 942D
  98+ 942D E5               push hl
  99+ 942E C5               push bc
 100+ 942F CD BA 99     	call calcula_tercio
 101+ 9432 FE 01        	cp 1
 102+ 9434 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9436 CD 66 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9439 28 26            jr z,9F
 105+ 943B 38 24            jr c,9F
 106+ 943D 1E 00        11 ld e,0
 107+ 943F 18 22            jr 8F
 108+ 9441 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9442 28 07        	jr z, 7F
 110+ 9444 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9446 1E 00         	ld e,0
 112+ 9448 E1           	pop hl
 113+ 9449 18 04        	jr 4F
 114+ 944B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 944D 18 15            jr 10F
 116+ 944F
 117+ 944F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 944F              ; _para indicar con E="2" en caso necesario.
 119+ 944F
 120+ 944F E5           4 push hl
 121+ 9450 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9451 CD BA 99     	call calcula_tercio
 123+ 9454 FE 01        	cp 1
 124+ 9456 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9458 CD 66 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 945B 28 04            jr z,9F
 127+ 945D 30 02            jr nc,9F
 128+ 945F 18 02        	jr 8F
 129+ 9461 1E 02        9 ld e,2
 130+ 9463 C1           8 pop bc
 131+ 9464 E1           10 pop hl
 132+ 9465 C9           5 ret
 133+ 9466
 134+ 9466              ; --------------------
 135+ 9466              ;
 136+ 9466              ; 25/08/22
 137+ 9466
 138+ 9466 CD BA 99     Comprueba_centro call calcula_tercio
 139+ 9469 67               ld h,a
 140+ 946A 08           	ex af,af
 141+ 946B FE 02        	cp 2
 142+ 946D 38 07        	jr c,1F
 143+ 946F 28 05        	jr z,1F
 144+ 9471 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9474 18 03        	jr 2F
 146+ 9476 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9479 08           2 ex af,af
 148+ 947A A7               and a
 149+ 947B ED 42            sbc hl,bc
 150+ 947D C9               ret
 151+ 947E
 152+ 947E              ; *********************************************************************************************************************************************************************************************
 153+ 947E              ;
 154+ 947E              ;   16/8/22
 155+ 947E              ;
 156+ 947E              ;	Comprueba_limite_vertical
 157+ 947E              ;
 158+ 947E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 947E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 947E              ;
 161+ 947E
 162+ 947E 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9481 7D           	ld a,l
 164+ 9482 E6 1F        	and $1F
 165+ 9484 57           	ld d,a
 166+ 9485 3A 01 89     	ld a,(Limite_vertical)
 167+ 9488 BA           	cp d 											; Límite - Posición.
 168+ 9489 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 948A 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 948D CB 47        	bit 0,a
 171+ 948F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9491
 173+ 9491              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9491
 175+ 9491 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9492 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9494
 178+ 9494              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9494              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9494
 181+ 9494 3A CB 88         ld a,(Coordenada_X)
 182+ 9497 16 0F            ld d,Centro_izquierda
 183+ 9499 A7               and a
 184+ 949A 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 949B 28 1E            jr z,3F
 186+ 949D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 949F              ;                                                    ; _salimos sin modificar nada.
 188+ 949F 18 0E            jr 2F
 189+ 94A1 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94A2 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94A4
 192+ 94A4              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94A4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94A4
 195+ 94A4 3A CB 88         ld a,(Coordenada_X)
 196+ 94A7 16 10            ld d,Centro_derecha
 197+ 94A9 A7               and a
 198+ 94AA 92               sub d
 199+ 94AB 28 0E            jr z,3F
 200+ 94AD 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94AF              ;                                                    ; _salimos sin modificar nada.
 202+ 94AF CB 43        2 bit 0,e
 203+ 94B1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94B3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94B4 CD 48 95         call Modificaccionne
 206+ 94B7 C1           	pop bc
 207+ 94B8 CD 58 95         call Inicializacion
 208+ 94BB C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94BC
 210+ 94BC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94BC
 212+ 94BC C5           4 push bc
 213+ 94BD 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94C0 0A           	ld a,(bc)
 215+ 94C1 3D           	dec a
 216+ 94C2 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94C3 7D           	ld a,l
 218+ 94C4 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94C5 CB 47        	bit 0,a
 220+ 94C7 28 03        	jr z,5F
 221+ 94C9 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94CA 18 2E        	jr 7F
 223+ 94CC
 224+ 94CC              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94CC
 226+ 94CC 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94CD F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94CE 3A EF 88     	ld a,(Ctrl_0)
 229+ 94D1 CB 4F        	bit 1,a
 230+ 94D3 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94D5 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94D6
 233+ 94D6              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94D6
 235+ 94D6 1C               inc e
 236+ 94D7 1D               dec e
 237+ 94D8 20 07            jr nz,12F
 238+ 94DA 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94DB 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94DC 22 C7 88     	ld (Posicion_actual),hl
 241+ 94DF 18 44        13 jr 9F
 242+ 94E1 CB 43        12 bit 0,e
 243+ 94E3 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94E5              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94E5 C1           	pop bc
 246+ 94E6 18 D3        	jr 3B
 247+ 94E8 80           14 add b
 248+ 94E9 6F               ld l,a
 249+ 94EA 22 C7 88     	ld (Posicion_actual),hl
 250+ 94ED CD 48 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94F0 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94F2 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94F4 32 EF 88         ld (Ctrl_0),a
 254+ 94F7 F1           	pop af
 255+ 94F8 18 2B        	jr 9F
 256+ 94FA
 257+ 94FA              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94FA
 259+ 94FA F5           7 push af
 260+ 94FB 3A EF 88     	ld a,(Ctrl_0)
 261+ 94FE CB 47        	bit 0,a
 262+ 9500 20 1D        	jr nz,8F
 263+ 9502 F1           	pop af
 264+ 9503
 265+ 9503              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9503
 267+ 9503 1C           	inc e
 268+ 9504 1D               dec e
 269+ 9505 20 07            jr nz,10F
 270+ 9507 90           	sub b
 271+ 9508 6F               ld l,a
 272+ 9509 22 C7 88     	ld (Posicion_actual),hl
 273+ 950C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 950E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 950E CB 43        10 bit 0,e
 276+ 9510 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9512              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9512 C1           	pop bc
 279+ 9513 18 A6        	jr 3B
 280+ 9515 90           16 sub b
 281+ 9516 6F               ld l,a
 282+ 9517 22 C7 88     	ld (Posicion_actual),hl
 283+ 951A CD 48 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 951D 18 06            jr 9F
 285+ 951F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9521 32 EF 88         ld (Ctrl_0),a
 287+ 9524 F1           	pop af
 288+ 9525 C1           9 pop bc
 289+ 9526 1E 00        	ld e,0
 290+ 9528 CD 58 95         call Inicializacion
 291+ 952B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 952C 08           	ex af,af
 293+ 952D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 952E 18 8B            jr 3B
 295+ 9530
 296+ 9530              ; --------------------
 297+ 9530
 298+ 9530 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9532 CD B6 96     1 call PreviousScan
 300+ 9535 10 FB            djnz 1B
 301+ 9537 22 C7 88     	ld (Posicion_actual),hl
 302+ 953A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 953B C9           	ret
 304+ 953C
 305+ 953C              ; --------------------
 306+ 953C
 307+ 953C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 953E CD A7 96     1 call NextScan
 309+ 9541 10 FB            djnz 1B
 310+ 9543 22 C7 88     	ld (Posicion_actual),hl
 311+ 9546 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9547 C9           	ret
 313+ 9548
 314+ 9548              ; --------------------
 315+ 9548              ;
 316+ 9548              ;	22/01/23
 317+ 9548              ;
 318+ 9548              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9548              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9548              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9548
 322+ 9548
 323+ 9548              Modificaccionne
 324+ 9548
 325+ 9548 3A D9 88     	ld a,(Cuad_objeto)
 326+ 954B FE 02        	cp 2
 327+ 954D CC 30 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9550 DC 30 95         call c,Modifica_Pos_actual
 329+ 9553 C8           	ret z
 330+ 9554 CD 3C 95         call Modifica_Pos_actual2
 331+ 9557 C9               ret
 332+ 9558
 333+ 9558              ; *************************************************************************************************************************************************************************************************
 334+ 9558              ;
 335+ 9558              ;	13/8/22
 336+ 9558              ;
 337+ 9558              ;	Inicializacion
 338+ 9558              ;
 339+ 9558              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9558              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9558              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9558              ;
 343+ 9558              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9558              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9558              ;	_ desaparece/aparece.
 346+ 9558
 347+ 9558              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9558              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9558              ;
 350+ 9558              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9558              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9558              ; 		   [E] ="0"
 353+ 9558
 354+ 9558              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9558
 356+ 9558 CD BA 99     Inicializacion call calcula_tercio
 357+ 955B 28 36        	jr z,primit
 358+ 955D E6 02        	and 2
 359+ 955F 20 07        	jr nz,segmit
 360+ 9561 7D           	ld a,l
 361+ 9562 FE 7F        	cp $7f
 362+ 9564 38 2D        	jr c,primit
 363+ 9566 28 2B        	jr z,primit
 364+ 9568 CD C5 95     segmit call column
 365+ 956B 38 13        	jr c,tercuad
 366+ 956D 3E 04        cuarcuad ld a,4
 367+ 956F 32 D9 88     	ld (Cuad_objeto),a
 368+ 9572 21 20 48     	ld hl,$4820
 369+ 9575 22 FF 88     	ld (Limite_horizontal),hl
 370+ 9578 21 01 89     	ld hl,Limite_vertical
 371+ 957B 36 0D        	ld (hl),$0d
 372+ 957D 08           	ex af,af
 373+ 957E 18 3C        	jr 1F
 374+ 9580              tercuad
 375+ 9580 3E 03        	ld a,3
 376+ 9582 32 D9 88     	ld (Cuad_objeto),a
 377+ 9585 21 20 48     	ld hl,$4820
 378+ 9588 22 FF 88     	ld (Limite_horizontal),hl
 379+ 958B 21 01 89     	ld hl,Limite_vertical
 380+ 958E 36 12        	ld (hl),$12
 381+ 9590 08           	ex af,af
 382+ 9591 18 29        	jr 1F
 383+ 9593 CD C5 95     primit call column
 384+ 9596 38 13        	jr c, primcuad
 385+ 9598              segcuad
 386+ 9598 3E 02        	ld a,2
 387+ 959A 32 D9 88     	ld (Cuad_objeto),a
 388+ 959D 21 C0 4F     	ld hl,$4fc0
 389+ 95A0 22 FF 88     	ld (Limite_horizontal),hl
 390+ 95A3 21 01 89     	ld hl,Limite_vertical
 391+ 95A6 36 0D        	ld (hl),$0d
 392+ 95A8 08           	ex af,af
 393+ 95A9 18 11        	jr 1F
 394+ 95AB              primcuad
 395+ 95AB 3E 01        	ld a,1
 396+ 95AD 32 D9 88     	ld (Cuad_objeto),a
 397+ 95B0 21 C0 4F     	ld hl,$4fc0
 398+ 95B3 22 FF 88     	ld (Limite_horizontal),hl
 399+ 95B6 21 01 89     	ld hl,Limite_vertical
 400+ 95B9 36 12        	ld (hl),$12
 401+ 95BB 08           	ex af,af
 402+ 95BC CD 45 9D     1 call Genera_coordenadas
 403+ 95BF 21 EF 88     	ld hl,Ctrl_0
 404+ 95C2 CB EE        	set 5,(hl)
 405+ 95C4 C9           	ret
 406+ 95C5
 407+ 95C5              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95C5
 409+ 95C5              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95C5              ;
 411+ 95C5              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95C5
 413+ 95C5 7D           column ld a,l
 414+ 95C6 E6 1F        	and $1f
 415+ 95C8 FE 10         	cp $10
 416+ 95CA C9            	ret
 417+ 95CB
 418+ 95CB              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95CB              ;
 420+ 95CB              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95CB              ;
 422+ 95CB              ; 14/12/22
 423+ 95CB              ;
 424+ 95CB              ;	Modifica: A y BC.
 425+ 95CB
 426+ 95CB 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95CE E6 01        	and 1
 428+ 95D0 28 17        	jr z,1F
 429+ 95D2
 430+ 95D2              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95D2
 432+ 95D2 3A CB 88     	ld a,(Coordenada_X)
 433+ 95D5 47           	ld b,a
 434+ 95D6 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95D7 79           	ld a,c
 436+ 95D8 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95D9 38 08        	jr c,2F
 438+ 95DB 47           	ld b,a
 439+ 95DC 79           	ld a,c
 440+ 95DD 90           	sub b
 441+ 95DE 32 FE 88     	ld (Columnas),a
 442+ 95E1 18 1B        	jr 4F
 443+ 95E3 79           2 ld a,c
 444+ 95E4 32 FE 88     	ld (Columnas),a
 445+ 95E7 18 15        	jr 4F
 446+ 95E9
 447+ 95E9              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95E9
 449+ 95E9 3A CB 88     1 ld a,(Coordenada_X)
 450+ 95EC 81           	add c
 451+ 95ED 3D           	dec a
 452+ 95EE D6 1F        	sub $1f
 453+ 95F0 38 08        	jr c,3F
 454+ 95F2 47           	ld b,a
 455+ 95F3 79           	ld a,c
 456+ 95F4 90           	sub b
 457+ 95F5 32 FE 88     	ld (Columnas),a
 458+ 95F8 18 04        	jr 4F
 459+ 95FA 79           3 ld a,c
 460+ 95FB 32 FE 88     	ld (Columnas),a
 461+ 95FE D9           4 exx
 462+ 95FF 4F           	ld c,a
 463+ 9600 D9           	exx
 464+ 9601 C9            ret
 465+ 9602
 466+ 9602              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9602              ;
 468+ 9602              ;   19/7/23
 469+ 9602              ;
 470+ 9602              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9602              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9602              ;
 473+ 9602              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9602              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9602              ;
 476+ 9602              ;	DESTRUYE: HL,B Y A.
 477+ 9602
 478+ 9602 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9605 FE 02        	cp 2
 480+ 9607 38 18        	jr c,1F
 481+ 9609 28 16        	jr z,1F
 482+ 960B E6 01        	and 1
 483+ 960D 28 0D        	jr z,3F
 484+ 960F
 485+ 960F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 960F
 487+ 960F CD 55 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9612
 489+ 9612 7D           9 ld a,l
 490+ 9613 E6 1F        	and $1f
 491+ 9615 28 2A        	jr z,7F
 492+ 9617 2B           	dec hl
 493+ 9618 10 F8        	djnz 9B
 494+ 961A 18 25        	jr 7F
 495+ 961C
 496+ 961C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 961C
 498+ 961C 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 961F 18 20        	jr 7F
 500+ 9621
 501+ 9621 28 14        1 jr z,2F
 502+ 9623
 503+ 9623              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9623
 505+ 9623 CD 55 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9626
 507+ 9626 7D           4 ld a,l
 508+ 9627 E6 1F        	and $1f
 509+ 9629 28 03        	jr z,6F
 510+ 962B 2B           	dec hl
 511+ 962C 10 F8        	djnz 4B
 512+ 962E 06 0F        6 ld b,15
 513+ 9630 CD B6 96     5 call PreviousScan
 514+ 9633 10 FB        	djnz 5B
 515+ 9635 18 0A        	jr 7F
 516+ 9637
 517+ 9637              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9637
 519+ 9637 CD 55 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 963A 06 0F        	ld b,15
 521+ 963C CD B6 96     8 call PreviousScan
 522+ 963F 10 FB        	djnz 8B
 523+ 9641
 524+ 9641 E5           7 push hl
 525+ 9642 DD E1        	pop ix
 526+ 9644
 527+ 9644 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 9647 E5           	push hl
 529+ 9648 FD E1        	pop iy
 530+ 964A
 531+ 964A              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 964A
 533+ 964A 3A EF 88     	ld a,(Ctrl_0)
 534+ 964D CB 77        	bit 6,a
 535+ 964F C8           	ret z
 536+ 9650
 537+ 9650              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9650              ; _ entidad / Amadeus´.
 539+ 9650
 540+ 9650 DD 22 4D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9654
 542+ 9654 C9           	ret
 543+ 9655
 544+ 9655              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9655              ;
 546+ 9655              ;	2/1/23
 547+ 9655              ;
 548+ 9655              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9655              ;
 550+ 9655              ;	Tras esta rutina tenemos:
 551+ 9655              ;
 552+ 9655              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9655              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9655              ;
 555+ 9655              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9655
 557+ 9655 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 9658 3A FE 88     	ld a,(Columnas)
 559+ 965B 3D           	dec a
 560+ 965C 20 01        	jr nz,1F
 561+ 965E 3C           	inc a
 562+ 965F 47           1 ld b,a
 563+ 9660 C9           	ret
 564+ 9661
 565+ 9661              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9661              ;
 567+ 9661              ;	3/1/23
 568+ 9661              ;
 569+ 9661              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9661              ;
 571+ 9661              ;	Destruye: A,B,HL y DE.
 572+ 9661
 573+ 9661              Define_rutina_de_impresion
 574+ 9661
 575+ 9661 3A C6 88     	ld a,(Columns)
 576+ 9664 47           	ld b,a
 577+ 9665 3A FE 88     	ld a,(Columnas)
 578+ 9668 B8           	cp b
 579+ 9669 20 0D        	jr nz,2f
 580+ 966B
 581+ 966B              ;	La entidad se imprime entera.
 582+ 966B
 583+ 966B 21 8A 97     	ld hl, Indice_entidades_completas
 584+ 966E E6 01        	and 1
 585+ 9670 28 02        	jr z,1F
 586+ 9672
 587+ 9672 23           	inc hl
 588+ 9673 23           	inc hl
 589+ 9674
 590+ 9674 CD D5 8C     1 call Extrae_address
 591+ 9677 C9           	ret		;	ret
 592+ 9678
 593+ 9678              ;	La entidad no se imprime entera en pantalla.
 594+ 9678
 595+ 9678 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 967B E6 01        	and 1
 597+ 967D 28 17        	jr z,3F
 598+ 967F
 599+ 967F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 967F
 601+ 967F 21 8E 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9682 3A C6 88     4 ld a,(Columns)
 603+ 9685 E6 01        	and 1
 604+ 9687 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9689
 606+ 9689 23           	inc hl
 607+ 968A 23           	inc hl
 608+ 968B
 609+ 968B 3A FE 88     	ld a,(Columnas)
 610+ 968E E6 01        	and 1
 611+ 9690 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9692
 613+ 9692 23           	inc hl
 614+ 9693 23           	inc hl
 615+ 9694
 616+ 9694 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9696
 618+ 9696 21 94 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9699 18 E7        	jr 4B
 620+ 969B
 621+ 969B              ; --------------------------------------------------------------------------------------------------------------------
 622+ 969B              ;
 623+ 969B              ;	Prepara_draw
 624+ 969B              ;
 625+ 969B              ;	Es una rutina de carga.
 626+ 969B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 969B              ;
 628+ 969B              ;	FUNCIONAMIENTO:
 629+ 969B              ;
 630+ 969B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 969B              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 969B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 969B              ;
 634+ 969B              ;	DESTRUYE:
 635+ 969B              ;
 636+ 969B              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 969B
 638+ 969B 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 969E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 969F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96A0 4E           	ld c,(hl)
 642+ 96A1 2A C7 88     	ld hl,(Posicion_actual)
 643+ 96A4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96A6 C9           	ret
 645+ 96A7
 646+ 96A7              ;----------------------------------------------------------------------------------------------------------------
 647+ 96A7              ;
 648+ 96A7              ;	5/08/22
 649+ 96A7              ;
 650+ 96A7              ;   NextScan.
 651+ 96A7              ;
 652+ 96A7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96A7              ;
 654+ 96A7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96A7              ;
 656+ 96A7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96A7              ;
 658+ 96A7              ;       DESTRUIDOS: AF y HL !!!
 659+ 96A7              ;
 660+ 96A7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96A7              ;
 662+ 96A7
 663+ 96A7 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96A8 7C               ld a,h
 665+ 96A9 E6 07            and 7
 666+ 96AB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96AC
 668+ 96AC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96AD C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96AF 6F               ld l,a
 671+ 96B0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96B1
 673+ 96B1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96B2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96B4 67               ld h,a
 676+ 96B5 C9               ret
 677+ 96B6
 678+ 96B6              ;----------------------------------------------------------------------------------------------------------------
 679+ 96B6              ;
 680+ 96B6              ;	5/08/22
 681+ 96B6              ;
 682+ 96B6              ;   PreviousScan.
 683+ 96B6              ;
 684+ 96B6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96B6              ;
 686+ 96B6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96B6              ;
 688+ 96B6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96B6              ;
 690+ 96B6              ;       DESTRUIDOS: AF y HL !!!
 691+ 96B6              ;
 692+ 96B6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96B6              ;
 694+ 96B6
 695+ 96B6 7C           PreviousScan ld a,h
 696+ 96B7 25               dec h               ; Dec H.
 697+ 96B8 E6 07            and 7
 698+ 96BA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96BB
 700+ 96BB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96BC D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96BE 6F               ld l,a
 703+ 96BF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96C0
 705+ 96C0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96C1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96C3 67               ld h,a
 708+ 96C4 C9               ret
 709+ 96C5
 710+ 96C5              ; -----------------------------------------------------------------------------------
 711+ 96C5              ;
 712+ 96C5              ;	31/7/23
 713+ 96C5              ;
 714+ 96C5              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96C5              ;	Extrae fotos de Album_de_fotos.
 716+ 96C5
 717+ 96C5              Extrae_foto_entidades
 718+ 96C5
 719+ 96C5 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96C8 7E           	ld a,(hl)
 721+ 96C9 A7           	and a
 722+ 96CA C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96CB
 724+ 96CB 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96CE A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96CF C8           	ret z
 727+ 96D0
 728+ 96D0              ; -----------------------------------
 729+ 96D0
 730+ 96D0 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96D4 31 00 70     	ld sp,Album_de_fotos
 732+ 96D7
 733+ 96D7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96D9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96DA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96DB
 737+ 96DB ED 73 17 89  	ld (Stack_2),sp
 738+ 96DF ED 7B 15 89  	ld sp,(Stack)
 739+ 96E3
 740+ 96E3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96E3
 742+ 96E3 3E CD        	ld a,$cd
 743+ 96E5 32 ED 96     	ld (Imprime),a
 744+ 96E8 EB           	ex de,hl
 745+ 96E9 22 EE 96     	ld (Imprime+1),hl
 746+ 96EC EB           	ex de,hl
 747+ 96ED
 748+ 96ED              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96ED
 750+ 96ED 00 00 00     Imprime db 0,0,0
 751+ 96F0
 752+ 96F0 ED 73 15 89  	ld (Stack),sp
 753+ 96F4
 754+ 96F4 3A 10 89     	ld a,(Numero_de_malotes)
 755+ 96F7 3D           	dec a
 756+ 96F8 28 09        	jr z,1F
 757+ 96FA 32 10 89      	ld (Numero_de_malotes),a
 758+ 96FD
 759+ 96FD ED 7B 17 89  	ld sp,(Stack_2)
 760+ 9701 18 D4        	jr 2B
 761+ 9703
 762+ 9703 AF           1 xor a
 763+ 9704 32 17 89     	ld (Stack_2),a
 764+ 9707
 765+ 9707 C9           	ret
 766+ 9708
 767+ 9708              ; -----------------------------------------------------------------------------------
 768+ 9708              ;
 769+ 9708              ;	28/2/23
 770+ 9708              ;
 771+ 9708              ;	Pinta los disparos generados.
 772+ 9708
 773+ 9708              Extrae_foto_disparos
 774+ 9708
 775+ 9708 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 970B 7E               ld a,(hl)
 777+ 970C A7               and a
 778+ 970D C8               ret z
 779+ 970E
 780+ 970E 3A 3D 89     	ld a,(Numero_de_disparotes)
 781+ 9711 A7           	and a
 782+ 9712 C8           	ret z
 783+ 9713 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9717 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 971A
 786+ 971A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 971C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 971D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 971E
 790+ 971E ED 73 17 89  	ld (Stack_2),sp
 791+ 9722 ED 7B 15 89  	ld sp,(Stack)
 792+ 9726
 793+ 9726              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9726
 795+ 9726 3E CD        	ld a,$cd
 796+ 9728 32 30 97     	ld (Imprime2),a
 797+ 972B EB           	ex de,hl
 798+ 972C 22 31 97     	ld (Imprime2+1),hl
 799+ 972F EB           	ex de,hl
 800+ 9730
 801+ 9730              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 9730
 803+ 9730 00 00 00     Imprime2 db 0,0,0
 804+ 9733
 805+ 9733 3A 3D 89     	ld a,(Numero_de_disparotes)
 806+ 9736 3D           	dec a
 807+ 9737 28 09        	jr z,1F
 808+ 9739 32 3D 89      	ld (Numero_de_disparotes),a
 809+ 973C
 810+ 973C ED 7B 17 89  	ld sp,(Stack_2)
 811+ 9740 18 D8        	jr 2B
 812+ 9742
 813+ 9742 AF           1 xor a
 814+ 9743 32 17 89     	ld (Stack_2),a
 815+ 9746 C9           	ret
 816+ 9747
 817+ 9747              ; -----------------------------------------------------------------------------------
 818+ 9747              ;
 819+ 9747              ;	4/9/23
 820+ 9747              ;
 821+ 9747              ;	Rutina principal de pintado de Amadeus.
 822+ 9747              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9747
 824+ 9747              Extrae_foto_Amadeus
 825+ 9747
 826+ 9747 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 827+ 974A 7E           	ld a,(hl)
 828+ 974B A7           	and a
 829+ 974C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 974D
 831+ 974D 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9750 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9751 C8           	ret z
 834+ 9752
 835+ 9752              ; -----------------------------------
 836+ 9752
 837+ 9752 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9756 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 9759
 840+ 9759 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 975B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 975C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 975D
 844+ 975D ED 73 17 89  	ld (Stack_2),sp
 845+ 9761 ED 7B 15 89  	ld sp,(Stack)
 846+ 9765
 847+ 9765              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9765
 849+ 9765 3E CD        	ld a,$cd
 850+ 9767 32 6F 97     	ld (Imprime_Amadeus),a
 851+ 976A EB           	ex de,hl
 852+ 976B 22 70 97     	ld (Imprime_Amadeus+1),hl
 853+ 976E EB           	ex de,hl
 854+ 976F
 855+ 976F              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 976F
 857+ 976F 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9772
 859+ 9772 ED 73 15 89  	ld (Stack),sp
 860+ 9776
 861+ 9776 3A 10 89     	ld a,(Numero_de_malotes)
 862+ 9779 3D           	dec a
 863+ 977A 28 09        	jr z,1F
 864+ 977C 32 10 89      	ld (Numero_de_malotes),a
 865+ 977F
 866+ 977F ED 7B 17 89  	ld sp,(Stack_2)
 867+ 9783 18 D4        	jr 2B
 868+ 9785
 869+ 9785 AF           1 xor a
 870+ 9786 32 17 89     	ld (Stack_2),a
 871+ 9789
 872+ 9789 C9           	ret
# file closed: Draw_XOR.asm
1646  978A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 978A              ;   índices de Rutinas de impresión.
   2+ 978A
   3+ 978A 9A 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 978C C7 97            defw Pinta_Amadeus_3x2
   5+ 978E
   6+ 978E 1D 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9790 BD 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9792 71 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9794
  10+ 9794 47 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9796 4B 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9798 FF 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 979A
  14+ 979A
  15+ 979A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 979A              ;
  17+ 979A              ;   12/12/22
  18+ 979A              ;
  19+ 979A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 979A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 979A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 979A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 979A              ;
  24+ 979A              ;   Modifica: DE y HL.
  25+ 979A
  26+ 979A ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 979E FD F9        	ld sp,iy
  28+ 97A0 06 10            ld b,16
  29+ 97A2 D1           1 pop de
  30+ 97A3 7B               ld a,e
  31+ 97A4 AE               xor (hl)
  32+ 97A5 77           	ld (hl),a
  33+ 97A6 23           	inc hl
  34+ 97A7 7A               ld a,d
  35+ 97A8 AE               xor (hl)
  36+ 97A9 77           	ld (hl),a
  37+ 97AA 2B           	dec hl
  38+ 97AB 24           	inc h
  39+ 97AC 7C               ld a,h
  40+ 97AD E6 07            and 7
  41+ 97AF 20 0A            jr nz,2F
  42+ 97B1 7D               ld a,l
  43+ 97B2 C6 20            add a,$20
  44+ 97B4 6F               ld l,a
  45+ 97B5 38 04            jr c,2F
  46+ 97B7 7C               ld a,h
  47+ 97B8 D6 08            sub 8
  48+ 97BA 67               ld h,a
  49+ 97BB 7C           2 ld a,h
  50+ 97BC FE 58            cp $58
  51+ 97BE 28 02            jr z,3F
  52+ 97C0 10 E0            djnz 1B
  53+ 97C2 ED 7B 15 89  3 ld sp,(Stack)
  54+ 97C6 C9           	ret
  55+ 97C7
  56+ 97C7 ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97CB FD F9        	ld sp,iy
  58+ 97CD 06 08            ld b,8
  59+ 97CF D1           1 pop de
  60+ 97D0 7B               ld a,e
  61+ 97D1 AE               xor (hl)
  62+ 97D2 77           	ld (hl),a
  63+ 97D3 23           	inc hl
  64+ 97D4 7A               ld a,d
  65+ 97D5 AE               xor (hl)
  66+ 97D6 77           	ld (hl),a
  67+ 97D7 23           	inc hl
  68+ 97D8 D1           	pop de
  69+ 97D9 7B               ld a,e
  70+ 97DA AE               xor (hl)
  71+ 97DB 77           	ld (hl),a
  72+ 97DC 2B           	dec hl
  73+ 97DD 2B           	dec hl
  74+ 97DE 24           	inc h
  75+ 97DF 7C               ld a,h
  76+ 97E0 E6 07            and 7
  77+ 97E2 20 0A            jr nz,2F
  78+ 97E4 7D               ld a,l
  79+ 97E5 C6 20            add a,$20
  80+ 97E7 6F               ld l,a
  81+ 97E8 38 04            jr c,2F
  82+ 97EA 7C               ld a,h
  83+ 97EB D6 08            sub 8
  84+ 97ED 67               ld h,a
  85+ 97EE 7C           2 ld a,h
  86+ 97EF FE 58            cp $58
  87+ 97F1 28 25            jr z,4F
  88+ 97F3 7A               ld a,d
  89+ 97F4 AE               xor (hl)
  90+ 97F5 77               ld (hl),a
  91+ 97F6 D1           	pop de
  92+ 97F7 23           	inc hl
  93+ 97F8 7B               ld a,e
  94+ 97F9 AE               xor (hl)
  95+ 97FA 77           	ld (hl),a
  96+ 97FB 23           	inc hl
  97+ 97FC 7A               ld a,d
  98+ 97FD AE               xor (hl)
  99+ 97FE 77           	ld (hl),a
 100+ 97FF 2B           	dec hl
 101+ 9800 2B           	dec hl
 102+ 9801 24           	inc h
 103+ 9802 7C               ld a,h
 104+ 9803 E6 07            and 7
 105+ 9805 20 0A            jr nz,3F
 106+ 9807 7D               ld a,l
 107+ 9808 C6 20            add a,$20
 108+ 980A 6F               ld l,a
 109+ 980B 38 04            jr c,3F
 110+ 980D 7C               ld a,h
 111+ 980E D6 08            sub 8
 112+ 9810 67               ld h,a
 113+ 9811 7C           3 ld a,h
 114+ 9812 FE 58            cp $58
 115+ 9814 28 02            jr z,4F
 116+ 9816 10 B7            djnz 1B
 117+ 9818 ED 7B 15 89  4 ld sp,(Stack)
 118+ 981C C9           	ret
 119+ 981D
 120+ 981D              ; ---------------------------------------------------
 121+ 981D
 122+ 981D ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9821 FD F9        	ld sp,iy
 124+ 9823
 125+ 9823              ; >>>
 126+ 9823
 127+ 9823 06 10            ld b,16
 128+ 9825 D1           1 pop de
 129+ 9826 7A           	ld a,d
 130+ 9827 AE           	xor (hl)
 131+ 9828 77           	ld (hl),a
 132+ 9829 24           	inc h
 133+ 982A 7C               ld a,h
 134+ 982B E6 07            and 7
 135+ 982D 20 0C            jr nz,2F
 136+ 982F 7D               ld a,l
 137+ 9830 C6 20            add a,$20
 138+ 9832 6F               ld l,a
 139+ 9833 38 06            jr c,2F
 140+ 9835 7C               ld a,h
 141+ 9836 D6 08            sub 8
 142+ 9838 67               ld h,a
 143+ 9839 18 00            jr 2F
 144+ 983B 7C           2 ld a,h
 145+ 983C FE 58            cp $58
 146+ 983E 28 02            jr z,3F
 147+ 9840 10 E3            djnz 1B
 148+ 9842 ED 7B 15 89  3 ld sp,(Stack)
 149+ 9846 C9           	ret
 150+ 9847
 151+ 9847 ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 984B FD F9        	ld sp,iy
 153+ 984D
 154+ 984D              ; >>>
 155+ 984D
 156+ 984D 06 10            ld b,16
 157+ 984F D1           1 pop de
 158+ 9850 7B           	ld a,e
 159+ 9851 AE           	xor (hl)
 160+ 9852 77           	ld (hl),a
 161+ 9853 24           	inc h
 162+ 9854 7C               ld a,h
 163+ 9855 E6 07            and 7
 164+ 9857 20 0C            jr nz,2F
 165+ 9859 7D               ld a,l
 166+ 985A C6 20            add a,$20
 167+ 985C 6F               ld l,a
 168+ 985D 38 06            jr c,2F
 169+ 985F 7C               ld a,h
 170+ 9860 D6 08            sub 8
 171+ 9862 67               ld h,a
 172+ 9863 18 00            jr 2F
 173+ 9865 7C           2 ld a,h
 174+ 9866 FE 58            cp $58
 175+ 9868 28 02            jr z,3F
 176+ 986A 10 E3            djnz 1B
 177+ 986C ED 7B 15 89  3 ld sp,(Stack)
 178+ 9870 C9           	ret
 179+ 9871
 180+ 9871              ; ---------------------------------------------------
 181+ 9871
 182+ 9871 ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9875 FD F9        	ld sp,iy
 184+ 9877 06 08            ld b,8
 185+ 9879 D1           1 pop de
 186+ 987A 7A           	ld a,d
 187+ 987B AE           	xor (hl)
 188+ 987C 77           	ld (hl),a
 189+ 987D 23           	inc hl
 190+ 987E D1           	pop de
 191+ 987F 7B           	ld a,e
 192+ 9880 AE           	xor (hl)
 193+ 9881 77           	ld (hl),a
 194+ 9882 2B           	dec hl
 195+ 9883 24            	inc h
 196+ 9884 7C               ld a,h
 197+ 9885 E6 07            and 7
 198+ 9887 20 0A            jr nz,2F
 199+ 9889 7D               ld a,l
 200+ 988A C6 20            add a,$20
 201+ 988C 6F               ld l,a
 202+ 988D 38 04            jr c,2F
 203+ 988F 7C               ld a,h
 204+ 9890 D6 08            sub 8
 205+ 9892 67               ld h,a
 206+ 9893 7C           2 ld a,h
 207+ 9894 FE 58            cp $58
 208+ 9896 28 20            jr z,4F
 209+ 9898 D1               pop de
 210+ 9899 7B           	ld a,e
 211+ 989A AE           	xor (hl)
 212+ 989B 77           	ld (hl),a
 213+ 989C 23           	inc hl
 214+ 989D 7A           	ld a,d
 215+ 989E AE           	xor (hl)
 216+ 989F 77           	ld (hl),a
 217+ 98A0 2B           	dec hl
 218+ 98A1 24           	inc h
 219+ 98A2 7C               ld a,h
 220+ 98A3 E6 07            and 7
 221+ 98A5 20 0A            jr nz,3F
 222+ 98A7 7D               ld a,l
 223+ 98A8 C6 20            add a,$20
 224+ 98AA 6F               ld l,a
 225+ 98AB 38 04            jr c,3F
 226+ 98AD 7C               ld a,h
 227+ 98AE D6 08            sub 8
 228+ 98B0 67               ld h,a
 229+ 98B1 7C           3 ld a,h
 230+ 98B2 FE 58            cp $58
 231+ 98B4 28 02            jr z,4F
 232+ 98B6 10 C1            djnz 1B
 233+ 98B8 ED 7B 15 89  4 ld sp,(Stack)
 234+ 98BC C9           	ret
 235+ 98BD
 236+ 98BD ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98C1 FD F9        	ld sp,iy
 238+ 98C3 06 08            ld b,8
 239+ 98C5 D1           1 pop de
 240+ 98C6 D1           	pop de
 241+ 98C7 7B           	ld a,e
 242+ 98C8 AE           	xor (hl)
 243+ 98C9 77           	ld (hl),a
 244+ 98CA 24            	inc h
 245+ 98CB 7C               ld a,h
 246+ 98CC E6 07            and 7
 247+ 98CE 20 0A            jr nz,2F
 248+ 98D0 7D               ld a,l
 249+ 98D1 C6 20            add a,$20
 250+ 98D3 6F               ld l,a
 251+ 98D4 38 04            jr c,2F
 252+ 98D6 7C               ld a,h
 253+ 98D7 D6 08            sub 8
 254+ 98D9 67               ld h,a
 255+ 98DA 7C           2 ld a,h
 256+ 98DB FE 58            cp $58
 257+ 98DD 28 1B            jr z,4F
 258+ 98DF D1               pop de
 259+ 98E0 7A           	ld a,d
 260+ 98E1 AE           	xor (hl)
 261+ 98E2 77           	ld (hl),a
 262+ 98E3 24           	inc h
 263+ 98E4 7C               ld a,h
 264+ 98E5 E6 07            and 7
 265+ 98E7 20 0A            jr nz,3F
 266+ 98E9 7D               ld a,l
 267+ 98EA C6 20            add a,$20
 268+ 98EC 6F               ld l,a
 269+ 98ED 38 04            jr c,3F
 270+ 98EF 7C               ld a,h
 271+ 98F0 D6 08            sub 8
 272+ 98F2 67               ld h,a
 273+ 98F3 7C           3 ld a,h
 274+ 98F4 FE 58            cp $58
 275+ 98F6 28 02            jr z,4F
 276+ 98F8 10 CB            djnz 1B
 277+ 98FA ED 7B 15 89  4 ld sp,(Stack)
 278+ 98FE C9           	ret
 279+ 98FF
 280+ 98FF ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9903 FD F9        	ld sp,iy
 282+ 9905 06 08            ld b,8
 283+ 9907 D1           1 pop de
 284+ 9908 7B           	ld a,e
 285+ 9909 AE           	xor (hl)
 286+ 990A 77           	ld (hl),a
 287+ 990B 23           	inc hl
 288+ 990C 7A           	ld a,d
 289+ 990D AE           	xor (hl)
 290+ 990E 77           	ld (hl),a
 291+ 990F 2B           	dec hl
 292+ 9910 24             	inc h
 293+ 9911 7C               ld a,h
 294+ 9912 E6 07            and 7
 295+ 9914 20 0A            jr nz,2F
 296+ 9916 7D               ld a,l
 297+ 9917 C6 20            add a,$20
 298+ 9919 6F               ld l,a
 299+ 991A 38 04            jr c,2F
 300+ 991C 7C               ld a,h
 301+ 991D D6 08            sub 8
 302+ 991F 67               ld h,a
 303+ 9920 7C           2 ld a,h
 304+ 9921 FE 58            cp $58
 305+ 9923 28 21            jr z,4F
 306+ 9925 D1               pop de
 307+ 9926 7A           	ld a,d
 308+ 9927 AE           	xor (hl)
 309+ 9928 77           	ld (hl),a
 310+ 9929 23           	inc hl
 311+ 992A D1               pop de
 312+ 992B 7B           	ld a,e
 313+ 992C AE           	xor (hl)
 314+ 992D 77           	ld (hl),a
 315+ 992E 2B           	dec hl
 316+ 992F 24           	inc h
 317+ 9930 7C               ld a,h
 318+ 9931 E6 07            and 7
 319+ 9933 20 0A            jr nz,3F
 320+ 9935 7D               ld a,l
 321+ 9936 C6 20            add a,$20
 322+ 9938 6F               ld l,a
 323+ 9939 38 04            jr c,3F
 324+ 993B 7C               ld a,h
 325+ 993C D6 08            sub 8
 326+ 993E 67               ld h,a
 327+ 993F 7C           3 ld a,h
 328+ 9940 FE 58            cp $58
 329+ 9942 28 02            jr z,4F
 330+ 9944 10 C1            djnz 1B
 331+ 9946 ED 7B 15 89  4 ld sp,(Stack)
 332+ 994A C9           	ret
 333+ 994B
 334+ 994B ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 994F FD F9        	ld sp,iy
 336+ 9951 06 08            ld b,8
 337+ 9953 D1           1 pop de
 338+ 9954 7B           	ld a,e
 339+ 9955 AE           	xor (hl)
 340+ 9956 77           	ld (hl),a
 341+ 9957 24            	inc h
 342+ 9958 7C               ld a,h
 343+ 9959 E6 07            and 7
 344+ 995B 20 0A            jr nz,2F
 345+ 995D 7D               ld a,l
 346+ 995E C6 20            add a,$20
 347+ 9960 6F               ld l,a
 348+ 9961 38 04            jr c,2F
 349+ 9963 7C               ld a,h
 350+ 9964 D6 08            sub 8
 351+ 9966 67               ld h,a
 352+ 9967 7C           2 ld a,h
 353+ 9968 FE 58            cp $58
 354+ 996A 28 1C            jr z,4F
 355+ 996C D1               pop de
 356+ 996D 7A           	ld a,d
 357+ 996E AE           	xor (hl)
 358+ 996F 77           	ld (hl),a
 359+ 9970 24           	inc h
 360+ 9971 7C               ld a,h
 361+ 9972 E6 07            and 7
 362+ 9974 20 0A            jr nz,3F
 363+ 9976 7D               ld a,l
 364+ 9977 C6 20            add a,$20
 365+ 9979 6F               ld l,a
 366+ 997A 38 04            jr c,3F
 367+ 997C 7C               ld a,h
 368+ 997D D6 08            sub 8
 369+ 997F 67               ld h,a
 370+ 9980 7C           3 ld a,h
 371+ 9981 FE 58            cp $58
 372+ 9983 28 03            jr z,4F
 373+ 9985 D1               pop de
 374+ 9986 10 CB            djnz 1B
 375+ 9988 ED 7B 15 89  4 ld sp,(Stack)
 376+ 998C C9           	ret
 377+ 998D
 378+ 998D              ; ---------------------------------------------------
 379+ 998D              ;
 380+ 998D              ;   27/02/23
 381+ 998D              ;
 382+ 998D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 998D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 998D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 998D
 386+ 998D ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 9991 FD F9            ld sp,iy
 388+ 9993 06 03            ld b,3
 389+ 9995 D1           1 pop de
 390+ 9996 7B               ld a,e
 391+ 9997 AE               xor (hl)
 392+ 9998 77               ld (hl),a
 393+ 9999 23               inc hl
 394+ 999A 7A               ld a,d
 395+ 999B AE               xor (hl)
 396+ 999C 77               ld (hl),a
 397+ 999D 2B               dec hl
 398+ 999E
 399+ 999E 24               inc h
 400+ 999F 7C               ld a,h
 401+ 99A0 E6 07            and 7
 402+ 99A2 20 0A            jr nz,2F
 403+ 99A4 7D               ld a,l
 404+ 99A5 C6 20            add a,$20
 405+ 99A7 6F               ld l,a
 406+ 99A8 38 04            jr c,2F
 407+ 99AA 7C               ld a,h
 408+ 99AB D6 08            sub 8
 409+ 99AD 67               ld h,a
 410+ 99AE 7C           2 ld a,h
 411+ 99AF FE 58            cp $58
 412+ 99B1 28 02            jr z,3F
 413+ 99B3
 414+ 99B3 10 E0            djnz 1B
 415+ 99B5 ED 7B 15 89  3 ld sp,(Stack)
 416+ 99B9 C9               ret
 417+ 99BA
# file closed: Rutinas_de_impresion_sprites.asm
1647  99BA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99BA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99BA              ;
   3+ 99BA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99BA              ;
   5+ 99BA              ; *****************************************************************************************************************************************************************************************
   6+ 99BA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99BA
   8+ 99BA 7C           calcula_tercio ld a,h
   9+ 99BB E6 18        	and $18
  10+ 99BD CB 2F        	sra a
  11+ 99BF CB 2F        	sra a
  12+ 99C1 CB 2F        	sra a
  13+ 99C3 C9           	ret
  14+ 99C4
# file closed: calcula_tercio.asm
1648  99C4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99C4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99C4              ;
   3+ 99C4              ;
   4+ 99C4              ;	CLS.
   5+ 99C4              ;
   6+ 99C4              ;	Limpia la pantalla y define sus atributos.
   7+ 99C4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99C4              ;
   9+ 99C4              ;	COLORES: 0 ..... NEGRO
  10+ 99C4              ;    		 1 ..... AZUL
  11+ 99C4              ; 			 2 ..... ROJO
  12+ 99C4              ;			 3 ..... MAGENTA
  13+ 99C4              ; 			 4 ..... VERDE
  14+ 99C4              ; 			 5 ..... CIAN
  15+ 99C4              ;			 6 ..... AMARILLO
  16+ 99C4              ; 			 7 ..... BLANCO
  17+ 99C4              ;
  18+ 99C4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99C4              ;
  20+ 99C4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99C4
  22+ 99C4
  23+ 99C4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99C7 11 01 40     	LD DE,$4001
  25+ 99CA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99CD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99CF ED B0        	LDIR
  28+ 99D1 01 FF 02     	LD BC,767
  29+ 99D4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99D5 ED B0        	LDIR
  31+ 99D7 C9           	ret
  32+ 99D8
# file closed: Cls.asm
1649  99D8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D8              ; ******************************************************************************************************************************************************************************************
   2+ 99D8              ;
   3+ 99D8              ;   20/05/23
   4+ 99D8              ;
   5+ 99D8              ;	Recompone_posicion_inicio
   6+ 99D8              ;
   7+ 99D8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99D8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99D8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99D8              ;	_ a una u otra rutina.
  11+ 99D8
  12+ 99D8              Recompone_posicion_inicio
  13+ 99D8
  14+ 99D8 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 99DB 7D           	ld a,l
  16+ 99DC E6 1F        	and $1f
  17+ 99DE 28 16        	jr z,1F
  18+ 99E0
  19+ 99E0 FE 1F        	cp $1f
  20+ 99E2 28 0D        	jr z,3F
  21+ 99E4
  22+ 99E4 21 02 89     	ld hl,Ctrl_2
  23+ 99E7 CB C6        	set 0,(hl)
  24+ 99E9 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 99EC 22 05 89     	ld (Repone_puntero_objeto),hl
  26+ 99EF 18 08        	jr 2F
  27+ 99F1
  28+ 99F1 CD 92 9B     3 call Mov_left
  29+ 99F4 18 03        	jr 2F
  30+ 99F6
  31+ 99F6 CD 74 9A     1 call Mov_right
  32+ 99F9 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99FC 22 C9 88     	ld (Puntero_objeto),hl
  34+ 99FF C9           	ret
  35+ 9A00
  36+ 9A00              ; ******************************************************************************************************************************************************************************************
  37+ 9A00              ;
  38+ 9A00              ;   27/05/23
  39+ 9A00              ;
  40+ 9A00              ;	Mov_down
  41+ 9A00              ;
  42+ 9A00              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A00              ;
  44+ 9A00              ;
  45+ 9A00              Mov_down
  46+ 9A00
  47+ 9A00 CD 62 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A03              ;																	; _ repone (Puntero_objeto).
  49+ 9A03 21 EF 88     	ld hl,Ctrl_0
  50+ 9A06 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A08              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A08              ; 																	; _ en el caso de que no lo haya.
  53+ 9A08 3A DD 88     	ld a,(Vel_down)
  54+ 9A0B 47           	ld b,a
  55+ 9A0C 2A C7 88         ld hl,(Posicion_actual)
  56+ 9A0F CD BA 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A12 E6 02        	and 2
  58+ 9A14 28 0F        	jr z,1F
  59+ 9A16
  60+ 9A16              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A16              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A16
  63+ 9A16 7C           	ld a,h
  64+ 9A17 FE 57        	cp $57
  65+ 9A19 20 0A        	jr nz,1F
  66+ 9A1B
  67+ 9A1B 7D           	ld a,l
  68+ 9A1C C6 20        	add $20
  69+ 9A1E 30 05        	jr nc,1F
  70+ 9A20
  71+ 9A20              ; ------------------------------
  72+ 9A20              ;	call Reaparece_arriba
  73+ 9A20 CD 1F 9D     	call Reinicio
  74+ 9A23              ; ------------------------------
  75+ 9A23
  76+ 9A23 18 08        	jr 3F
  77+ 9A25 CD A7 96     1 call NextScan
  78+ 9A28 22 C7 88     	ld (Posicion_actual),hl
  79+ 9A2B 10 E2            djnz 2B
  80+ 9A2D CD 45 9D     3 call Genera_coordenadas
  81+ 9A30 C9           	ret
  82+ 9A31
  83+ 9A31              ; ******************************************************************************************************************************************************************************************
  84+ 9A31              ;
  85+ 9A31              ;   27/05/23
  86+ 9A31              ;
  87+ 9A31              ;	Mov_up
  88+ 9A31              ;
  89+ 9A31              ; 	Mueve el Sprite hacia arriba.
  90+ 9A31              ;
  91+ 9A31              ;
  92+ 9A31              Mov_up
  93+ 9A31
  94+ 9A31 CD 62 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A34              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A34 21 EF 88     	ld hl,Ctrl_0
  97+ 9A37 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A39              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A39              ; 																		; _ en el caso de que no lo haya.
 100+ 9A39 3A DC 88     	ld a,(Vel_up)
 101+ 9A3C 47           	ld b,a
 102+ 9A3D 2A C7 88     	ld hl,(Posicion_actual)
 103+ 9A40 CD BA 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A43 A7           	and a
 105+ 9A44 20 10        	jr nz,1F
 106+ 9A46
 107+ 9A46              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A46              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A46
 110+ 9A46 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A47 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A49 20 0B            jr nz,1F
 113+ 9A4B 7D               ld a,l
 114+ 9A4C D6 20            sub $20
 115+ 9A4E 30 06            jr nc,1F
 116+ 9A50 25               dec h
 117+ 9A51
 118+ 9A51              ; -----------------------------
 119+ 9A51 CD 00 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A54              ;	call Reinicio
 121+ 9A54              ; -----------------------------
 122+ 9A54
 123+ 9A54 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A56 CD B6 96     1 call PreviousScan
 125+ 9A59 22 C7 88     	ld (Posicion_actual),hl
 126+ 9A5C 10 E2            djnz 3B
 127+ 9A5E CD 45 9D     2 call Genera_coordenadas
 128+ 9A61 C9           	ret
 129+ 9A62
 130+ 9A62              ; -----------------------------
 131+ 9A62              ;
 132+ 9A62              ;	27/5/23
 133+ 9A62              ;
 134+ 9A62              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A62              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A62              ;
 137+ 9A62              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A62              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A62              ;
 140+ 9A62              ;	Modifica: A y (Puntero_objeto).
 141+ 9A62
 142+ 9A62 3A 02 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A65 CB 47        	bit 0,a
 144+ 9A67 C8           	ret z
 145+ 9A68 CB 87        	res 0,a
 146+ 9A6A 32 02 89     	ld (Ctrl_2),a
 147+ 9A6D 2A 05 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A70 22 C9 88     	ld (Puntero_objeto),hl
 149+ 9A73 C9           	ret
 150+ 9A74
 151+ 9A74              ; ******************************************************************************************************************************************************************************************
 152+ 9A74              ;
 153+ 9A74              ;	19/10/22
 154+ 9A74              ;
 155+ 9A74              ;	Mov_right.
 156+ 9A74              ;
 157+ 9A74              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A74              ;
 159+ 9A74
 160+ 9A74 21 EF 88     Mov_right ld hl,Ctrl_0
 161+ 9A77 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A79              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A79              ; 																	; _ en el caso de que no lo haya.
 164+ 9A79 3A EF 88     	ld a,(Ctrl_0)
 165+ 9A7C CB 77        	bit 6,a
 166+ 9A7E 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A80
 168+ 9A80 CD AE 9C     	call Stop_Amadeus_right
 169+ 9A83 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A84 18 4D        	jr 8F
 171+ 9A86
 172+ 9A86 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A89 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A8B 20 46        	jr nz,8F
 175+ 9A8D
 176+ 9A8D 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A90 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A91 28 40        	jr z,8F
 179+ 9A93
 180+ 9A93              ; ---------- ---------- ----------
 181+ 9A93              ;
 182+ 9A93              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A93
 184+ 9A93 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A96 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A98 28 11        	jr z,1F
 187+ 9A9A 38 06        	jr c,6F
 188+ 9A9C FE 04        	cp 4
 189+ 9A9E 28 14        	jr z,7F
 190+ 9AA0 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AA2
 192+ 9AA2              ; ---------- ---------- ----------
 193+ 9AA2              ;
 194+ 9AA2              ; Perfiles de velocidad
 195+ 9AA2              ;
 196+ 9AA2
 197+ 9AA2 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AA5 FE FE        	cp $fe
 199+ 9AA7 20 2A        	jr nz,8F
 200+ 9AA9 18 10        	jr 3F
 201+ 9AAB 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AAE FE FD        	cp $fd
 203+ 9AB0 20 21        	jr nz,8F
 204+ 9AB2 18 07        	jr 3F
 205+ 9AB4 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AB7 FE FB        	cp $fb
 207+ 9AB9 20 18        	jr nz,8F
 208+ 9ABB
 209+ 9ABB              ; ---------- ---------- ----------
 210+ 9ABB
 211+ 9ABB              3
 212+ 9ABB CD EE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9ABE              ;	call Reinicio
 214+ 9ABE
 215+ 9ABE              ; ---------- ---------- ----------
 216+ 9ABE              ;
 217+ 9ABE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9ABE
 219+ 9ABE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AC0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AC1 CD DA 9A     	call DESPLZ_DER
 222+ 9AC4 C1           	pop bc
 223+ 9AC5 10 F9        	djnz 5B
 224+ 9AC7 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9ACA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9ACB 22 C7 88     	ld (Posicion_actual),hl
 227+ 9ACE CD 45 9D     	call Genera_coordenadas
 228+ 9AD1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AD3
 230+ 9AD3              ; ---------- ---------- ----------
 231+ 9AD3
 232+ 9AD3 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 9AD6 CD DA 9A     	call DESPLZ_DER
 234+ 9AD9 C9           2 ret
 235+ 9ADA
 236+ 9ADA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9ADA              ;
 238+ 9ADA              ;	22/9/22
 239+ 9ADA              ;
 240+ 9ADA
 241+ 9ADA CD E9 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9ADD CD 35 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AE0 CD 5E 9B         call Ciclo_completo
 244+ 9AE3 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AE6 CB FE        	set 7,(hl)
 246+ 9AE8 C9           	ret
 247+ 9AE9
 248+ 9AE9              ; ******************************************************************************************************************************************************************************************
 249+ 9AE9              ;	15/02/23
 250+ 9AE9              ;
 251+ 9AE9
 252+ 9AE9 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AEC 47           	ld b,a
 254+ 9AED 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AF0 23           1 inc hl
 256+ 9AF1 23           	inc hl
 257+ 9AF2 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AF4 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AF7 CD D5 8C     	call Extrae_address
 260+ 9AFA 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9AFD
 262+ 9AFD              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AFD
 264+ 9AFD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AFD              ; Cuántos movimientos hemos hecho ??
 266+ 9AFD              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AFD
 268+ 9AFD 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9B00 EB           	ex de,hl
 270+ 9B01 A7           	and a
 271+ 9B02 ED 52        	sbc hl,de
 272+ 9B04 CB 3D        	srl l
 273+ 9B06 3E 08        6 ld a,8
 274+ 9B08 95           	sub l
 275+ 9B09 30 1E        	jr nc,3F
 276+ 9B0B
 277+ 9B0B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B0B              ; B="0".
 279+ 9B0B
 280+ 9B0B 04           4 inc b
 281+ 9B0C 3C           	inc a
 282+ 9B0D 20 FC        	jr nz,4B
 283+ 9B0F 78           	ld a,b
 284+ 9B10 08           	ex af,af
 285+ 9B11 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9B14 23           5 inc hl
 287+ 9B15 23           	inc hl
 288+ 9B16 10 FC        	djnz 5B
 289+ 9B18 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B1B CD D5 8C     	call Extrae_address
 291+ 9B1E 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9B21
 293+ 9B21              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B21              ; _(Posicion_actual).
 295+ 9B21
 296+ 9B21 21 C7 88     	ld hl,Posicion_actual
 297+ 9B24 34           	inc (hl)
 298+ 9B25 08               ex af,af
 299+ 9B26 6F           	ld l,a
 300+ 9B27 18 DD        	jr 6B
 301+ 9B29
 302+ 9B29              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B29
 304+ 9B29 47           3 ld b,a
 305+ 9B2A 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B2D 23           2 inc hl
 307+ 9B2E 23           	inc hl
 308+ 9B2F 10 FC        	djnz 2B
 309+ 9B31 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B34 C9           8 ret
 311+ 9B35
 312+ 9B35              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B35              ;
 314+ 9B35              ;	24/7/22
 315+ 9B35              ;
 316+ 9B35              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B35              ;
 318+ 9B35              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B35              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B35              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B35
 322+ 9B35 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B38 A7           	and a
 324+ 9B39 20 1F        	jr nz,1F
 325+ 9B3B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B3D 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9B40
 328+ 9B40 21 C6 88     	ld hl,Columns
 329+ 9B43 34           	inc (hl)
 330+ 9B44 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9B47 E6 01        	and 1
 332+ 9B49 28 0F        	jr z,1F
 333+ 9B4B 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B4E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B4F 22 C7 88     	ld (Posicion_actual),hl
 336+ 9B52 CD 45 9D     	call Genera_coordenadas
 337+ 9B55 CD BA 9C     	call Inc_CTRL_DESPLZ
 338+ 9B58 18 03        	jr 2F
 339+ 9B5A CD BA 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B5D C9           2 ret
 341+ 9B5E
 342+ 9B5E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B5E              ;
 344+ 9B5E              ;	24/7/22
 345+ 9B5E              ;
 346+ 9B5E              ;	Ciclo_completo.
 347+ 9B5E              ;
 348+ 9B5E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B5E              ;
 350+ 9B5E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B5E              ; 	Decrementamos (Columns).
 352+ 9B5E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B5E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B5E
 355+ 9B5E
 356+ 9B5E 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B61 FE FF        	cp $ff
 358+ 9B63 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B65 E6 F0        	and $f0
 360+ 9B67 20 28        	jr nz,3F
 361+ 9B69
 362+ 9B69              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B69
 364+ 9B69 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9B6C 47           	ld b,a
 366+ 9B6D 3E F8        	ld a,$f8
 367+ 9B6F 80           	add b
 368+ 9B70 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9B73 18 1C        	jr 3F
 370+ 9B75 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B78 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B79 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B7A 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9B7D 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B80 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B82 20 0A        	jr nz,2F
 377+ 9B84 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B87 23           	inc hl
 379+ 9B88 22 C7 88     	ld (Posicion_actual),hl
 380+ 9B8B CD 45 9D     	call Genera_coordenadas
 381+ 9B8E
 382+ 9B8E              ; Inicia el puntero de Sprite.
 383+ 9B8E
 384+ 9B8E CD EC 8C     2 call Inicia_puntero_objeto_der
 385+ 9B91 C9           3 ret
 386+ 9B92
 387+ 9B92              ; ******************************************************************************************************************************************************************************************
 388+ 9B92              ;
 389+ 9B92              ;	15/02/23
 390+ 9B92              ;
 391+ 9B92              ;	Mov_left.
 392+ 9B92              ;
 393+ 9B92              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B92              ;
 395+ 9B92              Mov_left
 396+ 9B92
 397+ 9B92 21 EF 88     	ld hl,Ctrl_0
 398+ 9B95 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B97              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B97              ; 																	; _ en el caso de que no lo haya.
 401+ 9B97 3A EF 88     	ld a,(Ctrl_0)
 402+ 9B9A CB 77        	bit 6,a
 403+ 9B9C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B9E
 405+ 9B9E CD B4 9C     	call Stop_Amadeus_left
 406+ 9BA1 C8           	ret z
 407+ 9BA2 20 4A        	jr nz,8F
 408+ 9BA4
 409+ 9BA4 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9BA7 A7           	and a
 411+ 9BA8 20 44        	jr nz,8F
 412+ 9BAA
 413+ 9BAA 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9BAD A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9BAE 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9BB0
 417+ 9BB0              ; ---------- ---------- ----------
 418+ 9BB0
 419+ 9BB0 3A DA 88     	ld a,(Vel_left)
 420+ 9BB3 FE 02        	cp 2
 421+ 9BB5 28 0F        	jr z,1F
 422+ 9BB7 38 04        	jr c,6F
 423+ 9BB9 FE 04        	cp 4
 424+ 9BBB 28 12        	jr z,7F
 425+ 9BBD
 426+ 9BBD              ; ---------- ---------- ----------
 427+ 9BBD
 428+ 9BBD 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9BC0 FE F8        	cp $f8
 430+ 9BC2 20 2A        	jr nz,8F
 431+ 9BC4 18 10        	jr 4F
 432+ 9BC6 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BC9 FE F9        	cp $f9
 434+ 9BCB 20 21        	jr nz,8F
 435+ 9BCD 18 07        	jr 4F
 436+ 9BCF 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BD2 FE FB        	cp $fb
 438+ 9BD4 20 18        	jr nz,8F
 439+ 9BD6
 440+ 9BD6              ; ---------- ---------- ----------
 441+ 9BD6
 442+ 9BD6              4
 443+ 9BD6 CD DC 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BD9              ;	call Reinicio
 445+ 9BD9
 446+ 9BD9              ; ---------- ---------- ----------
 447+ 9BD9
 448+ 9BD9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BDB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BDC
 451+ 9BDC              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BDC              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BDC
 454+ 9BDC CD F5 9B     	call DESPLZ_IZQ
 455+ 9BDF C1           	pop bc
 456+ 9BE0 10 F9        	djnz 5B
 457+ 9BE2 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BE5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BE6 22 C7 88     	ld (Posicion_actual),hl
 460+ 9BE9 CD 45 9D     	call Genera_coordenadas
 461+ 9BEC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BEE
 463+ 9BEE              ; ---------- ---------- ----------
 464+ 9BEE
 465+ 9BEE              ; Movemos, no hay recolocación.
 466+ 9BEE
 467+ 9BEE 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9BF1 CD F5 9B     	call DESPLZ_IZQ
 469+ 9BF4 C9           2 ret
 470+ 9BF5
 471+ 9BF5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BF5              ;
 473+ 9BF5              ;	22/9/22
 474+ 9BF5
 475+ 9BF5              DESPLZ_IZQ
 476+ 9BF5
 477+ 9BF5 CD 04 9C     	call Desplaza_izquierda
 478+ 9BF8 CD 50 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BFB CD 78 9C     	call Ciclo_completo_2
 480+ 9BFE 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9C01 CB BE        	res 7,(hl)
 482+ 9C03 C9           	ret
 483+ 9C04
 484+ 9C04              Desplaza_izquierda
 485+ 9C04
 486+ 9C04 3A DA 88     	ld a,(Vel_left)
 487+ 9C07 47           	ld b,a
 488+ 9C08 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9C0B 23           1 inc hl
 490+ 9C0C 23           	inc hl
 491+ 9C0D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9C0F 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9C12 CD D5 8C     	call Extrae_address
 494+ 9C15 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9C18
 496+ 9C18              ; Modifica (Puntero_DESPLZ_der).
 497+ 9C18
 498+ 9C18              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9C18              ; Cuántos movimientos hemos hecho ??
 500+ 9C18              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9C18
 502+ 9C18 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9C1B EB           	ex de,hl
 504+ 9C1C A7           	and a
 505+ 9C1D ED 52        	sbc hl,de
 506+ 9C1F CB 3D        	srl l
 507+ 9C21 3E 08        6 ld a,8
 508+ 9C23 95           	sub l
 509+ 9C24 30 1E        	jr nc,3F
 510+ 9C26
 511+ 9C26              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C26              ; B="0".
 513+ 9C26
 514+ 9C26 04           4 inc b
 515+ 9C27 3C           	inc a
 516+ 9C28 20 FC        	jr nz,4B
 517+ 9C2A 78           	ld a,b
 518+ 9C2B 08           	ex af,af
 519+ 9C2C 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C2F 23           5 inc hl
 521+ 9C30 23           	inc hl
 522+ 9C31 10 FC        	djnz 5B
 523+ 9C33 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C36 CD D5 8C     	call Extrae_address
 525+ 9C39 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9C3C
 527+ 9C3C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C3C              ; _(Posicion_actual).
 529+ 9C3C
 530+ 9C3C 21 C7 88     	ld hl,Posicion_actual
 531+ 9C3F 35           	dec (hl)
 532+ 9C40 08           	ex af,af
 533+ 9C41 6F           	ld l,a
 534+ 9C42 18 DD        	jr 6B
 535+ 9C44
 536+ 9C44              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C44
 538+ 9C44 47           3 ld b,a
 539+ 9C45 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9C48 23           2 inc hl
 541+ 9C49 23           	inc hl
 542+ 9C4A 10 FC        	djnz 2B
 543+ 9C4C 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C4F C9           8 ret
 545+ 9C50
 546+ 9C50              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C50              ;
 548+ 9C50              ;	modifica_parametros_1er_DESPLZ
 549+ 9C50              ;
 550+ 9C50              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C50              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C50              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C50
 554+ 9C50 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C53 A7           	and a
 556+ 9C54 20 1E        	jr nz,1F
 557+ 9C56 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C57 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9C5A 21 C6 88     	ld hl,Columns
 560+ 9C5D 34           	inc (hl)
 561+ 9C5E 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9C61 E6 01        	and 1
 563+ 9C63 20 0F        	jr nz,1F
 564+ 9C65 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C68 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C69 22 C7 88     	ld (Posicion_actual),hl
 567+ 9C6C CD 45 9D     	call Genera_coordenadas
 568+ 9C6F CD CB 9C     	call Dec_CTRL_DESPLZ
 569+ 9C72 18 03        	jr 2F
 570+ 9C74 CD CB 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C77 C9           2 ret
 572+ 9C78
 573+ 9C78              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C78
 575+ 9C78 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C7B FE F7        	cp $f7
 577+ 9C7D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C7F 30 2C        	jr nc,3F
 579+ 9C81
 580+ 9C81              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C81
 582+ 9C81 06 00        	ld b,0
 583+ 9C83 04           4 inc b
 584+ 9C84 3C           	inc a
 585+ 9C85 FE F7        	cp $f7
 586+ 9C87 20 FA        	jr nz,4B
 587+ 9C89 3E FF        	ld a,$ff
 588+ 9C8B 90           	sub b
 589+ 9C8C 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9C8F 18 1C        	jr 3F
 591+ 9C91
 592+ 9C91              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C91
 594+ 9C91 21 C6 88     1 ld hl,Columns
 595+ 9C94 35           	dec (hl)
 596+ 9C95 AF           	xor a
 597+ 9C96 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9C99 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9C9C E6 01        	and 1
 600+ 9C9E 28 0A        	jr z,2F
 601+ 9CA0 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9CA3 2B           	dec hl
 603+ 9CA4 22 C7 88     	ld (Posicion_actual),hl
 604+ 9CA7 CD 45 9D     	call Genera_coordenadas
 605+ 9CAA
 606+ 9CAA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9CAA
 608+ 9CAA CD FF 8C     2 call Inicia_puntero_objeto_izq
 609+ 9CAD C9           3 ret
 610+ 9CAE
 611+ 9CAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9CAE              ;
 613+ 9CAE              ;	19/10/22
 614+ 9CAE              ;
 615+ 9CAE              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9CAE              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9CAE
 618+ 9CAE 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9CB1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9CB3 C9           	ret
 621+ 9CB4
 622+ 9CB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9CB4              ;
 624+ 9CB4              ;	19/10/22
 625+ 9CB4              ;
 626+ 9CB4              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9CB4              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9CB4
 629+ 9CB4 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9CB7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9CB9 C9           	ret
 632+ 9CBA
 633+ 9CBA              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9CBA              ;
 635+ 9CBA              ;	24/7/22
 636+ 9CBA              ;
 637+ 9CBA              ;	Inc_CTRL_DESPLZ
 638+ 9CBA              ;
 639+ 9CBA              ;
 640+ 9CBA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9CBA
 642+ 9CBA 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9CBD 3A DB 88     	ld a,(Vel_right)
 644+ 9CC0 A7           	and a
 645+ 9CC1 28 06        	jr z,1F
 646+ 9CC3 47           	ld b,a
 647+ 9CC4 34           3 inc (hl)
 648+ 9CC5 10 FD        	djnz 3B
 649+ 9CC7 18 01        	jr 2F
 650+ 9CC9 34           1 inc (hl)
 651+ 9CCA C9           2 ret
 652+ 9CCB
 653+ 9CCB              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CCB              ;
 655+ 9CCB              ;	5/2/23
 656+ 9CCB              ;
 657+ 9CCB              ;	Dec_CTRL_DESPLZ
 658+ 9CCB              ;
 659+ 9CCB              ;
 660+ 9CCB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CCB
 662+ 9CCB 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CCE 3A DA 88     	ld a,(Vel_left)
 664+ 9CD1 A7           	and a
 665+ 9CD2 28 06        	jr z,1F
 666+ 9CD4 47           	ld b,a
 667+ 9CD5 35           3 dec (hl)
 668+ 9CD6 10 FD        	djnz 3B
 669+ 9CD8 18 01        	jr 2F
 670+ 9CDA 35           1 dec (hl)
 671+ 9CDB C9           2 ret
 672+ 9CDC
 673+ 9CDC              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CDC
 675+ 9CDC 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CDF 01 1F 00     	ld bc,31
 677+ 9CE2 A7           	and a
 678+ 9CE3 ED 4A        	adc hl,bc
 679+ 9CE5 22 C7 88     	ld (Posicion_actual),hl
 680+ 9CE8 21 EF 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CEB CB C6        	set 0,(hl)
 682+ 9CED C9           	ret
 683+ 9CEE
 684+ 9CEE              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CEE
 686+ 9CEE 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CF1 01 1F 00     	ld bc,31
 688+ 9CF4 A7           	and a
 689+ 9CF5 ED 42        	sbc hl,bc
 690+ 9CF7 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CFA 21 EF 88     	ld hl,Ctrl_0
 692+ 9CFD CB CE        	set 1,(hl)
 693+ 9CFF C9           	ret
 694+ 9D00
 695+ 9D00              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9D00
 697+ 9D00 24           Reaparece_abajo inc h
 698+ 9D01 01 E0 17     	ld bc,$17e0
 699+ 9D04 A7           	and a
 700+ 9D05 ED 4A        	adc hl,bc
 701+ 9D07 22 C7 88     	ld (Posicion_actual),hl
 702+ 9D0A 21 EF 88     	ld hl,Ctrl_0
 703+ 9D0D CB D6        	set 2,(hl)
 704+ 9D0F C9           	ret
 705+ 9D10
 706+ 9D10              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9D10
 708+ 9D10 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9D13 A7           	and a
 710+ 9D14 ED 42        	sbc hl,bc
 711+ 9D16 22 C7 88     	ld (Posicion_actual),hl
 712+ 9D19 21 EF 88     	ld hl,Ctrl_0
 713+ 9D1C CB DE        	set 3,(hl)
 714+ 9D1E C9           	ret
 715+ 9D1F
 716+ 9D1F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9D1F              ;
 718+ 9D1F              ;	15/07/23
 719+ 9D1F
 720+ 9D1F              Reinicio
 721+ 9D1F
 722+ 9D1F              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9D1F
 724+ 9D1F AF           	xor a
 725+ 9D20 21 F6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D23 CD 41 9D     	call Limpia_contenido_hl
 727+ 9D26
 728+ 9D26 21 C7 88     	ld hl,Posicion_actual
 729+ 9D29 CD 41 9D     	call Limpia_contenido_hl
 730+ 9D2C
 731+ 9D2C CD 73 A0     	call Inicializa_Puntero_indice_mov
 732+ 9D2F CD FD 9F     	call Inicia_Puntero_mov
 733+ 9D32
 734+ 9D32 21 F8 88     	ld hl,Incrementa_puntero
 735+ 9D35 06 05        	ld b,5
 736+ 9D37 77           1 ld (hl),a
 737+ 9D38 23           	inc hl
 738+ 9D39 10 FC        	djnz 1B
 739+ 9D3B
 740+ 9D3B 21 02 89     	ld hl,Ctrl_2
 741+ 9D3E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D40
 743+ 9D40 C9           	ret
 744+ 9D41
 745+ 9D41 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D42 23           	inc hl
 747+ 9D43 77           	ld (hl),a
 748+ 9D44 C9           	ret
 749+ 9D45
 750+ 9D45
# file closed: Direcciones.asm
1650  9D45              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D45              ; ------------------------------------------------------------------------
   2+ 9D45              ;
   3+ 9D45              ;	02/04/23
   4+ 9D45              ;
   5+ 9D45              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D45              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D45              ;
   8+ 9D45              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D45              ;
  10+ 9D45              ;	Modifica: A,BC y DE.
  11+ 9D45
  12+ 9D45 C5           Genera_coordenadas push bc
  13+ 9D46 E5           	push hl
  14+ 9D47 D5           	push de
  15+ 9D48
  16+ 9D48 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9D4B
  18+ 9D4B 7D           	ld a,l
  19+ 9D4C E6 1F        	and $1f
  20+ 9D4E 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D51
  22+ 9D51 CD BA 99     	call calcula_tercio
  23+ 9D54 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D55
  25+ 9D55 1E 00        	ld e,0
  26+ 9D57 7D           	ld a,l
  27+ 9D58 E6 E0        	and $e0
  28+ 9D5A 28 01        	jr z,1F
  29+ 9D5C 04           	inc b
  30+ 9D5D
  31+ 9D5D 04           1 inc b
  32+ 9D5E 05           	dec b
  33+ 9D5F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D61              ;														; _ , salimos.
  35+ 9D61 1C           3 inc e
  36+ 9D62 D6 20        	sub 32
  37+ 9D64 20 FB        	jr nz,3B
  38+ 9D66 10 F5        	djnz 1B
  39+ 9D68
  40+ 9D68 7B           2 ld a,e
  41+ 9D69 32 CC 88     	ld (Coordenada_y),a
  42+ 9D6C
  43+ 9D6C D1           	pop de
  44+ 9D6D E1           	pop hl
  45+ 9D6E C1           	pop bc
  46+ 9D6F
  47+ 9D6F C9           	ret
  48+ 9D70
  49+ 9D70              ; ------------------------------------------------------------------------
  50+ 9D70              ;	28/05/23
  51+ 9D70              ;
  52+ 9D70              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D70              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D70              ;
  55+ 9D70              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D70              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D70              ;
  58+ 9D70              ;		DE="$120d"
  59+ 9D70              ;
  60+ 9D70              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D70              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D70              ;
  63+ 9D70              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D70
  65+ 9D70              ;	Modifica: A,BC y DE.
  66+ 9D70
  67+ 9D70
  68+ 9D70              Genera_coordenadas_disparo
  69+ 9D70
  70+ 9D70              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D70
  72+ 9D70 7D           	ld a,l
  73+ 9D71 E6 1F        	and $1f
  74+ 9D73 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D74 CD BA 99     	call calcula_tercio
  76+ 9D77 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D78 1E 00        	ld e,0
  78+ 9D7A 7D           	ld a,l
  79+ 9D7B E6 E0        	and $e0
  80+ 9D7D 28 01        	jr z,1F
  81+ 9D7F 04           	inc b
  82+ 9D80 1C           1 inc e
  83+ 9D81 D6 20        	sub 32
  84+ 9D83 20 FB        	jr nz,1B
  85+ 9D85 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D87 C9           	ret
  87+ 9D88
# file closed: Genera_coordenadas.asm
1651  9D88              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D88              ; Relojes y temporizaciones.
   2+ 9D88
   3+ 9D88              ; ------------------------------------------------------
   4+ 9D88              ;
   5+ 9D88              ;	16/7/23
   6+ 9D88              ;
   7+ 9D88              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D88              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D88              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D88              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D88              ;
  12+ 9D88              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D88              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D88
  15+ 9D88              ; Disparo_entidad db 1
  16+ 9D88              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D88              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D88
  19+ 9D88              Habilita_disparos
  20+ 9D88
  21+ 9D88 7E           	ld a,(hl)
  22+ 9D89 A7           	and a
  23+ 9D8A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D8B
  25+ 9D8B EB           	ex de,hl
  26+ 9D8C
  27+ 9D8C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D8D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D8E
  30+ 9D8E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D8E
  32+ 9D8E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D8F 7E           	ld a,(hl)
  34+ 9D90 23           	inc hl
  35+ 9D91 77           	ld (hl),a
  36+ 9D92
  37+ 9D92 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D93 3E 01        	ld a,1
  39+ 9D95 77           	ld (hl),a
  40+ 9D96 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1652  9D97              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D97
   2+ 9D97
   3+ 9D97              ;   07/07/23
   4+ 9D97              ;
   5+ 9D97              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D97              ;
   7+ 9D97              ;   Codificación:
   8+ 9D97              ;
   9+ 9D97              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D97              ;
  11+ 9D97              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D97              ;
  13+ 9D97              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D97              ;
  15+ 9D97              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D97              ;
  17+ 9D97              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D97              ;                               ..... %01000010 Vel_up 4
  19+ 9D97              ;                                               Vel_down 2
  20+ 9D97              ;                               ..... $42
  21+ 9D97              ;
  22+ 9D97              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D97              ;
  24+ 9D97              ;                               ..... %01000010 Vel_left 4
  25+ 9D97              ;                                               Vel_right 2
  26+ 9D97              ;                               ..... $42
  27+ 9D97              ;
  28+ 9D97              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D97              ;
  30+ 9D97              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D97              ;
  32+ 9D97              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D97              ;
  34+ 9D97              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D97              ;                                     $53
  36+ 9D97              ;
  37+ 9D97              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D97              ;
  39+ 9D97              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D97              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D97              ;
  42+ 9D97              ;                       Arriba ..... $81
  43+ 9D97              ;                       Arriba - izquierda ..... $a1
  44+ 9D97              ;                       Arriba - derecha ..... $91
  45+ 9D97              ;
  46+ 9D97              ;                       Abajo ..... $41
  47+ 9D97              ;                       Abajo - izquierda ..... $61
  48+ 9D97              ;                       Abajo - derecha ..... $51
  49+ 9D97              ;
  50+ 9D97              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D97              ;
  52+ 9D97              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D97              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D97              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D97              ;
  56+ 9D97              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D97              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D97              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D97              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D97              ;
  61+ 9D97              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D97              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D97              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D97              ;
  65+ 9D97              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D97              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D97              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D97              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D97
  70+ 9D97              ; ----- ----- ----- ----- -----
  71+ 9D97
  72+ 9D97 C3 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D99 CB 9D            defw F_1
  74+ 9D9B D5 9D            defw F_2
  75+ 9D9D DF 9D            defw Codo_abajo_derecha
  76+ 9D9F 13 9E            defw Derecha_y_subiendo
  77+ 9DA1 1D 9E            defw Derecha_y_subiendo_1
  78+ 9DA3 27 9E            defw F_3
  79+ 9DA5 31 9E            defw F_4
  80+ 9DA7 3B 9E            defw Derecha_y_bajando
  81+ 9DA9 45 9E            defw Derecha_y_bajando_1
  82+ 9DAB 4F 9E            defw Derecha_y_bajando_2
  83+ 9DAD 59 9E            defw Codo_derecha_abajo
  84+ 9DAF 89 9E            defw Codo_abajo_izq.
  85+ 9DB1 BD 9E            defw Izquierda_y_subiendo
  86+ 9DB3 C7 9E            defw Izquierda_y_subiendo_1
  87+ 9DB5 D1 9E            defw F_5
  88+ 9DB7 DB 9E            defw F_6
  89+ 9DB9 E5 9E            defw Izquierda_y_bajando
  90+ 9DBB EF 9E            defw Izquierda_y_bajando_1
  91+ 9DBD F9 9E            defw Izquierda_y_bajando_2
  92+ 9DBF 03 9F            defw Codo_izquierda_abajo
  93+ 9DC1 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DC3
  95+ 9DC3 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DC7 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DCB
  98+ 9DCB 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DCF 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DD3 08 00
 100+ 9DD5 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DD9 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DDD 0F FE
 102+ 9DDF
 103+ 9DDF 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DE3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DE7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DEB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DEF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DF3 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DF7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DFB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DFF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E03 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E07 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E0B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E0F 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E13
 117+ 9E13 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E17 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E1B 06 00
 119+ 9E1D
 120+ 9E1D 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E21 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E25 02 00
 122+ 9E27
 123+ 9E27 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E2B 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E2F 04 00
 125+ 9E31 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E35 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E39 08 00
 127+ 9E3B
 128+ 9E3B 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E3F 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E43 02 00
 130+ 9E45
 131+ 9E45 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E49 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E4D 06 00
 133+ 9E4F
 134+ 9E4F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E53 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E57 06 00
 136+ 9E59
 137+ 9E59              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E59
 139+ 9E59 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E5D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E61 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E65 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E69 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E6D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E71 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E75 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E79 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E7D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E81 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E85 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E89
 152+ 9E89 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E8D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E91 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E95 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E99 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E9D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EA1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EA5 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EA9 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EAD 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EB1 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EB5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EB9 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EBD
 166+ 9EBD 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EC1 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EC5 06 00
 168+ 9EC7
 169+ 9EC7 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9ECB 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9ECF 02 00
 171+ 9ED1
 172+ 9ED1 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ED5 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ED9 04 00
 174+ 9EDB 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EDF 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EE3 08 00
 176+ 9EE5
 177+ 9EE5 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EE9 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EED 02 00
 179+ 9EEF
 180+ 9EEF 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EF3 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EF7 06 00
 182+ 9EF9
 183+ 9EF9 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EFD 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F01 06 00
 185+ 9F03
 186+ 9F03 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F07 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F0B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F0F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F13 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F17 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F1B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F1F 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F23 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F27 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F2B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F2F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F33
 199+ 9F33              ; ----- ----- ----- ----- -----
 200+ 9F33              ;
 201+ 9F33              ;   27/06/23
 202+ 9F33
 203+ 9F33              Movimiento
 204+ 9F33
 205+ 9F33              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F33
 207+ 9F33              ;    ld hl,(Posicion_actual)
 208+ 9F33
 209+ 9F33 FB               ei
 210+ 9F34
 211+ 9F34 3A 02 89         ld a,(Ctrl_2)
 212+ 9F37 CB 57            bit 2,a
 213+ 9F39 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F3B
 215+ 9F3B 2A F4 88         ld hl,(Puntero_mov)
 216+ 9F3E 7E               ld a,(hl)
 217+ 9F3F
 218+ 9F3F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F3F
 220+ 9F3F              Inicia_desplazamiento.
 221+ 9F3F
 222+ 9F3F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F3F
 224+ 9F3F CD 34 A0         call Ajusta_velocidad_desplazamiento
 225+ 9F42
 226+ 9F42              ; Iniciamos (Repetimos_mov).
 227+ 9F42
 228+ 9F42 7E               ld a,(hl)
 229+ 9F43 E6 0F            and $0f
 230+ 9F45 32 FA 88         ld (Repetimos_desplazamiento),a
 231+ 9F48 32 FB 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F4B
 233+ 9F4B              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F4B
 235+ 9F4B 23               inc hl
 236+ 9F4C 7E               ld a,(hl)
 237+ 9F4D 32 FD 88         ld (Cola_de_desplazamiento),a
 238+ 9F50 2B               dec hl
 239+ 9F51
 240+ 9F51 21 02 89         ld hl,Ctrl_2
 241+ 9F54 CB D6            set 2,(hl)
 242+ 9F56
 243+ 9F56              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F56              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F56
 246+ 9F56              Desplazamiento_iniciado
 247+ 9F56
 248+ 9F56 CD 08 A0         call Aplica_desplazamiento
 249+ 9F59
 250+ 9F59 3A 02 89         ld a,(Ctrl_2)
 251+ 9F5C CB 67            bit 4,a
 252+ 9F5E C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F5F
 254+ 9F5F 21 FA 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F62 35               dec (hl)
 256+ 9F63 C0               ret nz
 257+ 9F64
 258+ 9F64              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F64              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F64              ; Analiza (Cola_de_desplazamiento).
 261+ 9F64
 262+ 9F64 3A FD 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F67 A7               and a
 264+ 9F68 CC 5D A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F6B 28 30            jr z,Reinicia_el_movimiento
 266+ 9F6D
 267+ 9F6D FE FF            cp $ff
 268+ 9F6F 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F71
 270+ 9F71 FE FE            cp $fe
 271+ 9F73 CC E1 9F         call z,Fijamos_bucle
 272+ 9F76 28 25            jr z,Reinicia_el_movimiento
 273+ 9F78
 274+ 9F78 FE FD            cp $fd
 275+ 9F7A 20 11            jr nz,1F
 276+ 9F7C
 277+ 9F7C              ; ---
 278+ 9F7C              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F7C
 280+ 9F7C 3A 02 89         ld a,(Ctrl_2)
 281+ 9F7F CB 5F            bit 3,a
 282+ 9F81 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F83
 284+ 9F83              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F83
 286+ 9F83 21 02 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F86 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F88
 289+ 9F88 CD F2 9F         call Inicia_Repetimos_movimiento
 290+ 9F8B 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F8D              ; ---
 292+ 9F8D
 293+ 9F8D FE 01        1 cp 1
 294+ 9F8F CA CB 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F92
 296+ 9F92 3D               dec a
 297+ 9F93 32 FD 88         ld (Cola_de_desplazamiento),a
 298+ 9F96
 299+ 9F96 3A FB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F99 32 FA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F9C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F9C C9               ret
 303+ 9F9D
 304+ 9F9D              Reinicia_el_movimiento
 305+ 9F9D
 306+ 9F9D F3               di
 307+ 9F9E
 308+ 9F9E 3A 02 89         ld a,(Ctrl_2)
 309+ 9FA1 CB 5F            bit 3,a
 310+ 9FA3 28 1B            jr z,2F
 311+ 9FA5
 312+ 9FA5              ; (Cola_de_desplazamiento)="254".
 313+ 9FA5
 314+ 9FA5 21 FC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FA8 35               dec (hl)
 316+ 9FA9 20 15            jr nz,2F
 317+ 9FAB
 318+ 9FAB              ; Fin de las repeticiones del último movimiento.
 319+ 9FAB
 320+ 9FAB 21 02 89         ld hl,Ctrl_2
 321+ 9FAE CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FB0
 323+ 9FB0 2A F4 88         ld hl,(Puntero_mov)
 324+ 9FB3 23               inc hl
 325+ 9FB4 23               inc hl
 326+ 9FB5 23               inc hl
 327+ 9FB6 22 F4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FB9              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FB9 7E               ld a,(hl)
 330+ 9FBA 32 FD 88         ld (Cola_de_desplazamiento),a
 331+ 9FBD
 332+ 9FBD C3 64 9F         jp Cola
 333+ 9FC0
 334+ 9FC0 CD FD 9F     2 call Inicia_Puntero_mov
 335+ 9FC3
 336+ 9FC3 21 02 89         ld hl,Ctrl_2
 337+ 9FC6 CB 96            res 2,(hl)
 338+ 9FC8
 339+ 9FC8 C3 33 9F         jp Movimiento
 340+ 9FCB
 341+ 9FCB              Siguiente_desplazamiento
 342+ 9FCB
 343+ 9FCB              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FCB              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FCB
 346+ 9FCB 21 02 89         ld hl,Ctrl_2
 347+ 9FCE CB 96            res 2,(hl)
 348+ 9FD0
 349+ 9FD0 2A F4 88         ld hl,(Puntero_mov)
 350+ 9FD3 23               inc hl
 351+ 9FD4 23               inc hl
 352+ 9FD5 22 F4 88         ld (Puntero_mov),hl
 353+ 9FD8
 354+ 9FD8 7E               ld a,(hl)
 355+ 9FD9 A7               and a
 356+ 9FDA CC 5D A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FDD CA 9D 9F         jp z,Reinicia_el_movimiento
 358+ 9FE0
 359+ 9FE0 C9               ret
 360+ 9FE1              ; Subrutinas -----------------------------------------
 361+ 9FE1              ; ---------- --------- --------- ---------- ----------
 362+ 9FE1              ;
 363+ 9FE1              ;   24/07/23
 364+ 9FE1              ;
 365+ 9FE1              ;   Fijamos_bucle
 366+ 9FE1              ;
 367+ 9FE1              ;
 368+ 9FE1
 369+ 9FE1              Fijamos_bucle
 370+ 9FE1
 371+ 9FE1 3A F8 88         ld a,(Incrementa_puntero)
 372+ 9FE4 3C               inc a
 373+ 9FE5 32 F9 88         ld (Incrementa_puntero_backup),a
 374+ 9FE8
 375+ 9FE8 CD 5D A0         call Incrementa_Puntero_indice_mov
 376+ 9FEB 2A F2 88         ld hl,(Puntero_indice_mov)
 377+ 9FEE 22 F6 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FF1 C9               ret
 379+ 9FF2
 380+ 9FF2              ; ---------- --------- --------- ---------- ----------
 381+ 9FF2              ;
 382+ 9FF2              ;   07/7/23
 383+ 9FF2              ;
 384+ 9FF2              ;   Inicia_Repetimos_movimiento
 385+ 9FF2              ;
 386+ 9FF2              ;
 387+ 9FF2
 388+ 9FF2              Inicia_Repetimos_movimiento
 389+ 9FF2
 390+ 9FF2              ; Iniciamos (Repetimos_movimiento).
 391+ 9FF2
 392+ 9FF2 DD 2A F4 88      ld ix,(Puntero_mov)
 393+ 9FF6 DD 7E 02         ld a,(ix+2)
 394+ 9FF9 32 FC 88         ld (Repetimos_movimiento),a
 395+ 9FFC
 396+ 9FFC C9               ret
 397+ 9FFD
 398+ 9FFD              ; ---------- --------- --------- ---------- ----------
 399+ 9FFD              ;
 400+ 9FFD              ;   26/6/23
 401+ 9FFD              ;
 402+ 9FFD              ;   Inicia_Puntero_mov
 403+ 9FFD              ;
 404+ 9FFD              ;
 405+ 9FFD
 406+ 9FFD 2A F2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ A000 5E               ld e,(hl)
 408+ A001 23               inc hl
 409+ A002 56               ld d,(hl)
 410+ A003 EB               ex de,hl
 411+ A004 22 F4 88         ld (Puntero_mov),hl
 412+ A007 C9               ret
 413+ A008
 414+ A008              ; ---------- --------- --------- ---------- ----------
 415+ A008              ;
 416+ A008              ;   27/06/23
 417+ A008              ;
 418+ A008              ;   Aplica_movimiento.
 419+ A008
 420+ A008              Aplica_desplazamiento
 421+ A008
 422+ A008              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ A008
 424+ A008 2A F4 88         ld hl, (Puntero_mov)
 425+ A00B
 426+ A00B 7E               ld a,(hl)
 427+ A00C E6 F0            and $f0
 428+ A00E C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ A00F
 430+ A00F CB 7E            bit 7,(hl)
 431+ A011 28 03            jr z,1F
 432+ A013 CD 31 9A         call Mov_up
 433+ A016 2A F4 88     1 ld hl, (Puntero_mov)
 434+ A019 CB 76            bit 6,(hl)
 435+ A01B 28 03            jr z,2F
 436+ A01D CD 00 9A         call Mov_down
 437+ A020 2A F4 88     2 ld hl, (Puntero_mov)
 438+ A023 CB 6E            bit 5,(hl)
 439+ A025 28 03            jr z,3F
 440+ A027 CD 92 9B         call Mov_left
 441+ A02A 2A F4 88     3 ld hl, (Puntero_mov)
 442+ A02D CB 66            bit 4,(hl)
 443+ A02F C8               ret z
 444+ A030 CD 74 9A         call Mov_right
 445+ A033 C9               ret
 446+ A034
 447+ A034              ; ---------- --------- --------- ---------- ----------
 448+ A034              ;
 449+ A034              ;   26/06/23
 450+ A034              ;
 451+ A034              ;   Ajusta_velocidad_desplazamiento.
 452+ A034
 453+ A034              Ajusta_velocidad_desplazamiento
 454+ A034
 455+ A034              ; 1er byte de la cadena de movimiento.
 456+ A034              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A034
 458+ A034 CD 52 A0         call Extrae_nibble_alto
 459+ A037
 460+ A037 32 DC 88         ld (Vel_up),a
 461+ A03A 79               ld a,c
 462+ A03B E6 0F            and $0f
 463+ A03D 32 DD 88         ld (Vel_down),a
 464+ A040
 465+ A040              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A040              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A040
 468+ A040 23               inc hl
 469+ A041 CD 52 A0         call Extrae_nibble_alto
 470+ A044
 471+ A044 32 DA 88         ld (Vel_left),a
 472+ A047 79               ld a,c
 473+ A048 E6 0F            and $0f
 474+ A04A 32 DB 88         ld (Vel_right),a
 475+ A04D
 476+ A04D              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A04D
 478+ A04D 23               inc hl
 479+ A04E 22 F4 88         ld (Puntero_mov),hl
 480+ A051 C9               ret
 481+ A052
 482+ A052 06 04        Extrae_nibble_alto ld b,4
 483+ A054 7E               ld a,(hl)
 484+ A055 4F               ld c,a
 485+ A056 E6 F0            and $f0
 486+ A058 CB 3F        1 srl a
 487+ A05A 10 FC            djnz 1B
 488+ A05C C9               ret
 489+ A05D
 490+ A05D              ; ---------- --------- --------- ---------- ----------
 491+ A05D              ;
 492+ A05D              ;   5/7/23
 493+ A05D              ;
 494+ A05D              ;   Incrementa_Puntero_indice_mov
 495+ A05D
 496+ A05D              Incrementa_Puntero_indice_mov
 497+ A05D
 498+ A05D 21 F8 88         ld hl,Incrementa_puntero
 499+ A060 34               inc (hl)
 500+ A061
 501+ A061 2A F2 88         ld hl,(Puntero_indice_mov)
 502+ A064 01 02 00         ld bc,2
 503+ A067 A7               and a
 504+ A068 09               add hl,bc
 505+ A069 22 F2 88         ld (Puntero_indice_mov),hl
 506+ A06C
 507+ A06C 7E               ld a,(hl)
 508+ A06D A7               and a
 509+ A06E
 510+ A06E              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A06E
 512+ A06E              ;    jr z,$
 513+ A06E
 514+ A06E              ;! Reinicia el Patrón de movimiento.
 515+ A06E
 516+ A06E CC 73 A0         call z,Inicializa_Puntero_indice_mov
 517+ A071
 518+ A071 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A072
 520+ A072 C9               ret
 521+ A073
 522+ A073
 523+ A073              ; ---------- --------- --------- ---------- ----------
 524+ A073              ;
 525+ A073              ;   24/07/23
 526+ A073              ;
 527+ A073              ;   Inicializa_Puntero_indice_mov
 528+ A073
 529+ A073              Inicializa_Puntero_indice_mov
 530+ A073
 531+ A073              ; Existe etiqueta de bucle principal???
 532+ A073
 533+ A073 2A F6 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A076 24               inc h
 535+ A077 25               dec h
 536+ A078 28 05            jr z,2F
 537+ A07A
 538+ A07A 22 F2 88         ld (Puntero_indice_mov),hl
 539+ A07D 18 14            jr 3F
 540+ A07F
 541+ A07F              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A07F
 543+ A07F 3A F8 88     2 ld a,(Incrementa_puntero)
 544+ A082 47               ld b,a
 545+ A083
 546+ A083 2A F2 88         ld hl,(Puntero_indice_mov)
 547+ A086 2B           1 dec hl
 548+ A087 2B               dec hl
 549+ A088 10 FC            djnz 1B
 550+ A08A 22 F2 88         ld (Puntero_indice_mov),hl
 551+ A08D
 552+ A08D AF               xor a
 553+ A08E 32 F8 88         ld (Incrementa_puntero),a
 554+ A091 18 06            jr 4F
 555+ A093
 556+ A093 3A F9 88     3 ld a,(Incrementa_puntero_backup)
 557+ A096 32 F8 88         ld (Incrementa_puntero),a
 558+ A099 C9           4 ret
 559+ A09A
 560+ A09A
 561+ A09A
# file closed: Patrones_de_mov.asm
1653  A09A              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A09A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A09A              ;
   3+ A09A              ;	4/9/23
   4+ A09A              ;
   5+ A09A              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A09A
   7+ A09A              ;	ADC HL,SP	LD (addr),SP
   8+ A09A              ;	ADD HL,SP	LD SP,(addr)
   9+ A09A              ;	ADD IX,SP	LD SP,nn
  10+ A09A              ; 	ADD IY,SP	LD SP,HL
  11+ A09A              ;				LD SP,IX
  12+ A09A              ;	DEC SP		LD SP,IY
  13+ A09A
  14+ A09A              ;	EX (SP),HL
  15+ A09A              ;	EX (SP),IX
  16+ A09A              ;	EX (SP),IY
  17+ A09A
  18+ A09A              ;	INC SP
  19+ A09A
  20+ A09A                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A 04 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 0F            jr 4F
  46+ 7FB9
  47+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  48+ 7FB9
  49+ 7FB9 3A EF 88     2 ld a,(Ctrl_0)
  50+ 7FBC CB 77            bit 6,a
  51+ 7FBE 28 05            jr z,7F
  52+ 7FC0
  53+ 7FC0              ; Guardamos foto de Amadeus.
  54+ 7FC0
  55+ 7FC0 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  56+ 7FC3 18 03            jr 4F
  57+ 7FC5
  58+ 7FC5 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  59+ 7FC8
  60+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  61+ 7FCA
  62+ 7FCA D1           1 pop de
  63+ 7FCB 73               ld (hl),e
  64+ 7FCC 23               inc hl
  65+ 7FCD 72               ld (hl),d
  66+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  67+ 7FCF 10 F9            djnz 1B
  68+ 7FD1
  69+ 7FD1 3A 04 89         ld a,(Ctrl_1)
  70+ 7FD4 CB 47            bit 0,a
  71+ 7FD6 28 05            jr z,5F
  72+ 7FD8
  73+ 7FD8 22 1D 89         ld (Stack_snapshot_disparos),hl
  74+ 7FDB 18 13            jr 6F
  75+ 7FDD
  76+ 7FDD 3A EF 88     5 ld a,(Ctrl_0)
  77+ 7FE0 CB 77            bit 6,a
  78+ 7FE2 28 09            jr z,8F
  79+ 7FE4
  80+ 7FE4 22 23 89         ld (End_Snapshot_Amadeus),hl
  81+ 7FE7 ED 7B 15 89      ld sp,(Stack)
  82+ 7FEB FB               ei
  83+ 7FEC C9               ret
  84+ 7FED
  85+ 7FED 22 1B 89     8 ld (Stack_snapshot),hl
  86+ 7FF0 ED 7B 15 89  6 ld sp,(Stack)
  87+ 7FF4
  88+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  89+ 7FF4
  90+ 7FF4 5D               ld e,l
  91+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  92+ 7FF6
  93+ 7FF6 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  94+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  95+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  96+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
  97+ 7FFC
  98+ 7FFC FB               ei
  99+ 7FFD C9               ret
 100+ 7FFE
 101+ 7FFE              ; ------------------------------------------------
 102+ 7FFE              ;
 103+ 7FFE              ;   3/08/23
 104+ 7FFE              ;
 105+ 7FFE              ;   La rutina estará situada justo después de:
 106+ 7FFE              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 107+ 7FFE              ;
 108+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 109+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 110+ 7FFE
 111+ 7FFE                  org $72ac
 112+ 72AC
 113+ 72AC              Gestiona_albumes_de_fotos
 114+ 72AC
 115+ 72AC              ;   En 1er lugar limpiamos el FRAME pintado.
 116+ 72AC              ;   Vaciamos Album_de_fotos.
 117+ 72AC
 118+ 72AC              ;   Album_de_fotos. Contiene datos ???
 119+ 72AC
 120+ 72AC 21 01 70         ld hl,Album_de_fotos+1
 121+ 72AF 7E               ld a,(hl)
 122+ 72B0 A7               and a
 123+ 72B1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 124+ 72B3
 125+ 72B3 2A 1F 89         ld hl,(End_Snapshot)
 126+ 72B6 01 00 70         ld bc,Album_de_fotos
 127+ 72B9 11 01 70         ld de,Album_de_fotos+1
 128+ 72BC AF               xor a
 129+ 72BD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 130+ 72BE
 131+ 72BE CD 4E 73         call Limpia_album
 132+ 72C1
 133+ 72C1 21 00 00         ld hl,0
 134+ 72C4 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 135+ 72C7
 136+ 72C7              ; ----- ----- ----- -----
 137+ 72C7
 138+ 72C7              ;   Album_de_fotos_1. Contiene datos ???
 139+ 72C7
 140+ 72C7 21 55 70     3 ld hl,Album_de_fotos_1+1
 141+ 72CA 7E               ld a,(hl)
 142+ 72CB A7               and a
 143+ 72CC 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 144+ 72CE              ;                               ; _ información del album2 al album1.
 145+ 72CE
 146+ 72CE              ; ----- ----- ----- -----
 147+ 72CE              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 148+ 72CE
 149+ 72CE 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 150+ 72D1 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 151+ 72D4 11 00 70         ld de,Album_de_fotos        ; Destino.
 152+ 72D7
 153+ 72D7 CD 4E 73         call Limpia_album
 154+ 72DA
 155+ 72DA              ;   Calculamos (End_Snapshot)
 156+ 72DA
 157+ 72DA A7               and a
 158+ 72DB ED 4A            adc hl,bc
 159+ 72DD 22 1F 89         ld (End_Snapshot),hl
 160+ 72E0
 161+ 72E0              ;   Limpiamos Album_de_fotos_1.
 162+ 72E0
 163+ 72E0 2A 25 89         ld hl,(End_Snapshot_1)
 164+ 72E3 01 54 70         ld bc,Album_de_fotos_1
 165+ 72E6 11 55 70         ld de,Album_de_fotos_1+1
 166+ 72E9 AF               xor a
 167+ 72EA 02               ld (bc),a
 168+ 72EB
 169+ 72EB CD 4E 73         call Limpia_album
 170+ 72EE
 171+ 72EE 21 00 00         ld hl,0
 172+ 72F1 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 173+ 72F4
 174+ 72F4              ; ----- ----- ----- -----
 175+ 72F4
 176+ 72F4              ;   Album_de_fotos_2. Contiene datos ???
 177+ 72F4
 178+ 72F4 21 A9 70     1 ld hl,Album_de_fotos_2+1
 179+ 72F7 7E               ld a,(hl)
 180+ 72F8 A7               and a
 181+ 72F9 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 182+ 72FB              ;                               ; _ información del album3 al album2.
 183+ 72FB              ; ----- ----- ----- -----
 184+ 72FB              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 185+ 72FB
 186+ 72FB 2A 29 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 187+ 72FE 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 188+ 7301 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 189+ 7304
 190+ 7304 CD 4E 73         call Limpia_album
 191+ 7307
 192+ 7307              ;   Calculamos (End_Snapshot_1):
 193+ 7307
 194+ 7307 A7               and a
 195+ 7308 ED 4A            adc hl,bc
 196+ 730A 22 25 89         ld (End_Snapshot_1),hl
 197+ 730D
 198+ 730D              ;   Limpiamos Album_de_fotos_2.
 199+ 730D
 200+ 730D 2A 29 89         ld hl,(End_Snapshot_2)
 201+ 7310 01 A8 70         ld bc,Album_de_fotos_2
 202+ 7313 11 A9 70         ld de,Album_de_fotos_2+1
 203+ 7316 AF               xor a
 204+ 7317 02               ld (bc),a
 205+ 7318
 206+ 7318 CD 4E 73         call Limpia_album
 207+ 731B
 208+ 731B 21 00 00         ld hl,0
 209+ 731E 22 29 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 210+ 7321
 211+ 7321              ; ----- ----- ----- -----
 212+ 7321
 213+ 7321              ;   Album_de_fotos_3. Contiene datos ???
 214+ 7321
 215+ 7321 21 FD 70     2 ld hl,Album_de_fotos_3+1
 216+ 7324 7E               ld a,(hl)
 217+ 7325 A7               and a
 218+ 7326 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 219+ 7327
 220+ 7327              ; ----- ----- ----- -----
 221+ 7327              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 222+ 7327
 223+ 7327 2A 2D 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 224+ 732A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 225+ 732D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 226+ 7330
 227+ 7330 CD 4E 73         call Limpia_album
 228+ 7333
 229+ 7333              ;   Calculamos (End_Snapshot_2):
 230+ 7333
 231+ 7333 A7               and a
 232+ 7334 ED 4A            adc hl,bc
 233+ 7336 22 29 89         ld (End_Snapshot_2),hl
 234+ 7339
 235+ 7339              ;   Limpiamos Album_de_fotos_3.
 236+ 7339
 237+ 7339 2A 2D 89         ld hl,(End_Snapshot_3)
 238+ 733C 01 FC 70         ld bc,Album_de_fotos_3
 239+ 733F 11 FD 70         ld de,Album_de_fotos_3+1
 240+ 7342 AF               xor a
 241+ 7343 02               ld (bc),a
 242+ 7344
 243+ 7344 CD 4E 73         call Limpia_album
 244+ 7347
 245+ 7347 21 00 00         ld hl,0
 246+ 734A 22 2D 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 247+ 734D C9               ret
 248+ 734E
 249+ 734E              ; ----------------------------------------------------
 250+ 734E              ;
 251+ 734E              ;   10/8/23
 252+ 734E              ;
 253+ 734E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 254+ 734E              ;
 255+ 734E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 256+ 734E              ;           BC ..... Dirección de inicio del álbum.
 257+ 734E              ;           DE ..... Dirección de inicio del álbum. +1
 258+ 734E
 259+ 734E              ;    ld hl,(End_Snapshot)
 260+ 734E              ;    ld bc,Album_de_fotos
 261+ 734E              ;    ld de,Album_de_fotos+1
 262+ 734E
 263+ 734E              ;   MODIFICA: A,HL,BC y DE.
 264+ 734E
 265+ 734E              Limpia_album
 266+ 734E D5               push de                     ; Guardo DESTINO.
 267+ 734F C5               push bc                     ; Guardo ORIGEN.
 268+ 7350 ED 42            sbc hl,bc
 269+ 7352 4D               ld c,l
 270+ 7353 44               ld b,h
 271+ 7354 E1               pop hl
 272+ 7355 C5               push bc
 273+ 7356 ED B0            ldir
 274+ 7358 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 275+ 7359 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 276+ 735A C9               ret                         ; _ a otro).
 277+ 735B              ;
 278+ 735B
 279+ 735B              ; -----------------------------------------------
 280+ 735B
 281+ 735B
 282+ 735B
 283+ 735B
 284+ 735B
# file closed: Guarda_foto_registros.asm
1654  735B
1655  735B              	SAVESNA "Pruebas.sna", START
1656  735B
1657  735B
1658  735B
1659  735B
# file closed: Banco_de_Pruebas.asm
