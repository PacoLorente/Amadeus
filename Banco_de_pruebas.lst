# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 F5           	push af
  15  A102 E5           	push hl
  16  A103
  17  A103 CD 90 8E     	call Frame
  18  A106
  19  A106 E1           	pop hl
  20  A107 F1           	pop af
  21  A108
  22  A108 ED 4D        	reti
  23  A10A
  24  A10A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A10A
  26  A10A              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10A              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10A              ;
   3+ A10A              ;	17/02/23
   4+ A10A              ;
   5+ A10A              ;	Sprites e índices.
   6+ A10A
   7+ A10A              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 4/8/23
 254+ 84EC
 255+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 256+ 84EE 84 70        	defw Album_de_fotos_1
 257+ 84F0 07 71        	defw Album_de_fotos_2
 258+ 84F2 8A 71        	defw Album_de_fotos_3
 259+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 260+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 261+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 262+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 263+ 84FC
 264+ 84FC
 265+ 84FC
 266+ 84FC
 267+ 84FC
# file closed: Sprites_e_indices.asm
  27  84FC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84FC
   2+ 84FC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84FC
   4+ 84FC              ; 13/05/23
   5+ 84FC
   6+ 84FC              ; Control. %00000001 00000001
   7+ 84FC              ;
   8+ 84FC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84FC              ;                    _ hacen las entidades hacia abajo.
  10+ 84FC              ;
  11+ 84FC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84FC
  13+ 84FC 02 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84FE 0A 85        	defw Disparo_2A
  15+ 8500 12 85        	defw Disparo_3A
  16+ 8502
  17+ 8502 00 00        Disparo_1A defw 0									; Control.
  18+ 8504 00 00        	defw 0											; Puntero objeto.
  19+ 8506 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8508 00 00        	defw 0											; Rutina de impresión.
  21+ 850A
  22+ 850A 00 00        Disparo_2A defw 0									; Control.
  23+ 850C 00 00        	defw 0											; Puntero objeto.
  24+ 850E 00 00        	defw 0											; Puntero de impresión.
  25+ 8510 00 00        	defw 0											; Rutina de impresión.
  26+ 8512
  27+ 8512 00 00        Disparo_3A defw 0
  28+ 8514
  29+ 8514 2A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8516 32 85        	defw Disparo_2
  31+ 8518 3A 85        	defw Disparo_3
  32+ 851A 42 85        	defw Disparo_4
  33+ 851C 4A 85        	defw Disparo_5
  34+ 851E 52 85        	defw Disparo_6
  35+ 8520 5A 85        	defw Disparo_7
  36+ 8522 62 85        	defw Disparo_8
  37+ 8524 6A 85        	defw Disparo_9
  38+ 8526 72 85        	defw Disparo_10
  39+ 8528 7A 85        	defw Disparo_11
  40+ 852A
  41+ 852A 00 00        Disparo_1 defw 0									; Control.
  42+ 852C 00 00        	defw 0											; Puntero objeto.
  43+ 852E 00 00        	defw 0											; Puntero de impresión.
  44+ 8530 00 00        	defw 0											; Rutina de impresión.
  45+ 8532
  46+ 8532 00 00        Disparo_2 defw 0									; Control.
  47+ 8534 00 00        	defw 0											; Puntero objeto.
  48+ 8536 00 00        	defw 0											; Puntero de impresión.
  49+ 8538 00 00        	defw 0											; Rutina de impresión.
  50+ 853A
  51+ 853A 00 00        Disparo_3 defw 0									; Control.
  52+ 853C 00 00        	defw 0											; Puntero objeto.
  53+ 853E 00 00        	defw 0											; Puntero de impresión.
  54+ 8540 00 00        	defw 0											; Rutina de impresión.
  55+ 8542
  56+ 8542 00 00        Disparo_4 defw 0									; Control.
  57+ 8544 00 00        	defw 0											; Puntero objeto.
  58+ 8546 00 00        	defw 0											; Puntero de impresión.
  59+ 8548 00 00        	defw 0											; Rutina de impresión.
  60+ 854A
  61+ 854A 00 00        Disparo_5 defw 0									; Control.
  62+ 854C 00 00        	defw 0											; Puntero objeto.
  63+ 854E 00 00        	defw 0											; Puntero de impresión.
  64+ 8550 00 00        	defw 0											; Rutina de impresión.
  65+ 8552
  66+ 8552 00 00        Disparo_6 defw 0									; Control.
  67+ 8554 00 00        	defw 0											; Puntero objeto.
  68+ 8556 00 00        	defw 0											; Puntero de impresión.
  69+ 8558 00 00        	defw 0											; Rutina de impresión.
  70+ 855A
  71+ 855A 00 00        Disparo_7 defw 0									; Control.
  72+ 855C 00 00        	defw 0											; Puntero objeto.
  73+ 855E 00 00        	defw 0											; Puntero de impresión.
  74+ 8560 00 00        	defw 0											; Rutina de impresión.
  75+ 8562
  76+ 8562 00 00        Disparo_8 defw 0									; Control.
  77+ 8564 00 00        	defw 0											; Puntero objeto.
  78+ 8566 00 00        	defw 0											; Puntero de impresión.
  79+ 8568 00 00        	defw 0											; Rutina de impresión.
  80+ 856A
  81+ 856A 00 00        Disparo_9 defw 0									; Control.
  82+ 856C 00 00        	defw 0											; Puntero objeto.
  83+ 856E 00 00        	defw 0											; Puntero de impresión.
  84+ 8570 00 00        	defw 0											; Rutina de impresión.
  85+ 8572
  86+ 8572 00 00        Disparo_10 defw 0									; Control.
  87+ 8574 00 00        	defw 0											; Puntero objeto.
  88+ 8576 00 00        	defw 0											; Puntero de impresión.
  89+ 8578 00 00        	defw 0											; Rutina de impresión.
  90+ 857A
  91+ 857A 00 00        Disparo_11 defw 0
  92+ 857C
  93+ 857C              ; -------------------------------------------------------------------------------------
  94+ 857C
  95+ 857C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 857C
  97+ 857C D7 85        	defw Caja_1
  98+ 857E 1A 86        	defw Caja_2
  99+ 8580 5D 86        	defw Caja_3
 100+ 8582 A0 86        	defw Caja_4
 101+ 8584 E3 86        	defw Caja_5
 102+ 8586 26 87        	defw Caja_6
 103+ 8588 69 87        	defw Caja_7
 104+ 858A AC 87        	defw Caja_8
 105+ 858C EF 87        	defw Caja_9
 106+ 858E 32 88        	defw Caja_10
 107+ 8590              ;	...
 108+ 8590              ;	...
 109+ 8590              ;	+ entidades ...
 110+ 8590 00 00        	defw 0
 111+ 8592 00 00        	defw 0
 112+ 8594
 113+ 8594              ; ---------- ---------- ---------- ---------- ----------
 114+ 8594
 115+ 8594 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8596 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8598 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 859A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 859D
 120+ 859D 05           	db %00000101									; (Attr).
 121+ 859E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85A0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85A2
 124+ 85A2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85A4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85A6
 127+ 85A6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A8 04           	db 4 											; (Cuad_objeto).
 129+ 85A9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85AD
 131+ 85AD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85AE
 133+ 85AE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85B0 00 00        	defw 0											;	" " " " " " "
 135+ 85B2 00 00        	defw 0											;	" " " " " " "
 136+ 85B4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B8
 138+ 85B8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85BA 00 00        	defw 0											;	" " " " " " "
 140+ 85BC 00 00        	defw 0											;	" " " " " " "
 141+ 85BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85C2
 143+ 85C2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85C4
 145+ 85C4 00           	db 0											; (Autoriza_movimiento).
 146+ 85C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85C9 00 00
 147+ 85CB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85CE
 149+ 85CE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85D0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85D1
 152+ 85D1 00           	db 0 											; (Columnas).
 153+ 85D2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85D4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85D7
 156+ 85D7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85D7
 158+ 85D7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85D9 00 00        	defw 0											; (Posicion_actual).
 160+ 85DB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85DD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85E0
 163+ 85E0 00           	db %00000000 									; (Attr).
 164+ 85E1
 165+ 85E1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85E3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85E5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85E7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85E9
 170+ 85E9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85EB 00           	db 0											; (Cuad_objeto).
 172+ 85EC
 173+ 85EC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 85F0
 175+ 85F0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 85F1
 177+ 85F1 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 85F3 00 00        	defw 0											;	" " " " " " "
 179+ 85F5 00 00        	defw 0											;	" " " " " " "
 180+ 85F7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85FB
 182+ 85FB 00 00        	db 0,0											; Variables_de_pintado
 183+ 85FD 00 00        	defw 0											;	" " " " " " "
 184+ 85FF 00 00        	defw 0											;	" " " " " " "
 185+ 8601 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8605
 187+ 8605 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8607
 189+ 8607 00           	db 0											; (Autoriza_movimiento).
 190+ 8608 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 860C 00 00
 191+ 860E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8611
 193+ 8611 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8613 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8614
 196+ 8614 00           	db 0 											; (Columnas).
 197+ 8615 00 00        	defw 0											; (Limite_horizontal).
 198+ 8617 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 861A
 200+ 861A              ; ---------- ---------- ---------- ---------- ----------
 201+ 861A
 202+ 861A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 861C 00 00        	defw 0											; (Posicion_actual).
 204+ 861E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8620 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8623
 207+ 8623 00           	db %00000000 									; (Attr).
 208+ 8624
 209+ 8624 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8626 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8628 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 862C
 214+ 862C 00 00        	defw 0											; (Posicion_inicio).
 215+ 862E 00           	db 0											; (Cuad_objeto).
 216+ 862F
 217+ 862F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8633
 219+ 8633 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8634
 221+ 8634 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8636 00 00        	defw 0											;	" " " " " " "
 223+ 8638 00 00        	defw 0											;	" " " " " " "
 224+ 863A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 863E
 226+ 863E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8640 00 00        	defw 0											;	" " " " " " "
 228+ 8642 00 00        	defw 0											;	" " " " " " "
 229+ 8644 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8648
 231+ 8648 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 864A
 233+ 864A 00           	db 0											; (Autoriza_movimiento).
 234+ 864B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 864F 00 00
 235+ 8651 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8654
 237+ 8654 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8656 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8657
 240+ 8657 00           	db 0 											; (Columnas).
 241+ 8658 00 00        	defw 0											; (Limite_horizontal).
 242+ 865A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 865D
 244+ 865D              ; ---------- ---------- ---------- ---------- ----------
 245+ 865D
 246+ 865D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 865F 00 00        	defw 0											; (Posicion_actual).
 248+ 8661 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8663 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8666
 251+ 8666 00           	db %00000000 									; (Attr).
 252+ 8667
 253+ 8667 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8669 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 866D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 866F
 258+ 866F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8671 00           	db 0											; (Cuad_objeto).
 260+ 8672
 261+ 8672 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8676
 263+ 8676 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8677
 265+ 8677 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8679 00 00        	defw 0											;	" " " " " " "
 267+ 867B 00 00        	defw 0											;	" " " " " " "
 268+ 867D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8681
 270+ 8681 00 00        	db 0,0											; Variables_de_pintado
 271+ 8683 00 00        	defw 0											;	" " " " " " "
 272+ 8685 00 00        	defw 0											;	" " " " " " "
 273+ 8687 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 868B
 275+ 868B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 868D
 277+ 868D 00           	db 0											; (Autoriza_movimiento).
 278+ 868E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 8692 00 00
 279+ 8694 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 8697
 281+ 8697 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 8699 00           	db 0											; (Cola_de_desplazamiento).
 283+ 869A
 284+ 869A 00           	db 0 											; (Columnas).
 285+ 869B 00 00        	defw 0											; (Limite_horizontal).
 286+ 869D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86A0
 288+ 86A0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86A0
 290+ 86A0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86A2 00 00        	defw 0											; (Posicion_actual).
 292+ 86A4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86A6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86A9
 295+ 86A9 00           	db %00000000 									; (Attr).
 296+ 86AA
 297+ 86AA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86AC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86AE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86B0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86B2
 302+ 86B2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86B4 00           	db 0											; (Cuad_objeto).
 304+ 86B5
 305+ 86B5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86B9
 307+ 86B9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86BA
 309+ 86BA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86BC 00 00        	defw 0											;	" " " " " " "
 311+ 86BE 00 00        	defw 0											;	" " " " " " "
 312+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86C4
 314+ 86C4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86C6 00 00        	defw 0											;	" " " " " " "
 316+ 86C8 00 00        	defw 0											;	" " " " " " "
 317+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86CE
 319+ 86CE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86D0
 321+ 86D0 00           	db 0											; (Autoriza_movimiento).
 322+ 86D1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86D5 00 00
 323+ 86D7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86DA
 325+ 86DA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86DC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86DD
 328+ 86DD 00           	db 0 											; (Columnas).
 329+ 86DE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86E0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86E3
 332+ 86E3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86E3
 334+ 86E3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86E5 00 00        	defw 0											; (Posicion_actual).
 336+ 86E7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86E9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86EC
 339+ 86EC 00           	db %00000000 									; (Attr).
 340+ 86ED
 341+ 86ED 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86EF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 86F1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 86F3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 86F5
 346+ 86F5 00 00        	defw 0											; (Posicion_inicio).
 347+ 86F7 00           	db 0											; (Cuad_objeto).
 348+ 86F8
 349+ 86F8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 86FC
 351+ 86FC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 86FD
 353+ 86FD 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 86FF 00 00        	defw 0											;	" " " " " " "
 355+ 8701 00 00        	defw 0											;	" " " " " " "
 356+ 8703 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8707
 358+ 8707 00 00        	db 0,0											; Variables_de_pintado
 359+ 8709 00 00        	defw 0											;	" " " " " " "
 360+ 870B 00 00        	defw 0											;	" " " " " " "
 361+ 870D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8711
 363+ 8711 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8713
 365+ 8713 00           	db 0											; (Autoriza_movimiento).
 366+ 8714 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8718 00 00
 367+ 871A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 871D
 369+ 871D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 871F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8720
 372+ 8720 00           	db 0 											; (Columnas).
 373+ 8721 00 00        	defw 0											; (Limite_horizontal).
 374+ 8723 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8726
 376+ 8726              ; ---------- ---------- ---------- ---------- ----------
 377+ 8726
 378+ 8726 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8728 00 00        	defw 0											; (Posicion_actual).
 380+ 872A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 872C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 872F
 383+ 872F 00           	db %00000000 									; (Attr).
 384+ 8730
 385+ 8730 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8732 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8734 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8736 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8738
 390+ 8738 00 00        	defw 0											; (Posicion_inicio).
 391+ 873A 00           	db 0											; (Cuad_objeto).
 392+ 873B
 393+ 873B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 873F
 395+ 873F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8740
 397+ 8740 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8742 00 00        	defw 0											;	" " " " " " "
 399+ 8744 00 00        	defw 0											;	" " " " " " "
 400+ 8746 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 874A
 402+ 874A 00 00        	db 0,0											; Variables_de_pintado
 403+ 874C 00 00        	defw 0											;	" " " " " " "
 404+ 874E 00 00        	defw 0											;	" " " " " " "
 405+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8754
 407+ 8754 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8756
 409+ 8756 00           	db 0											; (Autoriza_movimiento).
 410+ 8757 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 875B 00 00
 411+ 875D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8760
 413+ 8760 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8762 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8763
 416+ 8763 00           	db 0 											; (Columnas).
 417+ 8764 00 00        	defw 0											; (Limite_horizontal).
 418+ 8766 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8769
 420+ 8769              ; ---------- ---------- ---------- ---------- ----------
 421+ 8769
 422+ 8769 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 876B 00 00        	defw 0											; (Posicion_actual).
 424+ 876D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 876F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8772
 427+ 8772 00           	db %00000000 									; (Attr).
 428+ 8773
 429+ 8773 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8775 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8777 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8779 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 877B
 434+ 877B 00 00        	defw 0											; (Posicion_inicio).
 435+ 877D 00           	db 0											; (Cuad_objeto).
 436+ 877E
 437+ 877E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8782
 439+ 8782 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8783
 441+ 8783 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8785 00 00        	defw 0											;	" " " " " " "
 443+ 8787 00 00        	defw 0											;	" " " " " " "
 444+ 8789 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 878D
 446+ 878D 00 00        	db 0,0											; Variables_de_pintado
 447+ 878F 00 00        	defw 0											;	" " " " " " "
 448+ 8791 00 00        	defw 0											;	" " " " " " "
 449+ 8793 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 8797
 451+ 8797 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 8799
 453+ 8799 00           	db 0											; (Autoriza_movimiento).
 454+ 879A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 879E 00 00
 455+ 87A0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87A3
 457+ 87A3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87A5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87A6
 460+ 87A6 00           	db 0 											; (Columnas).
 461+ 87A7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87A9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87AC
 464+ 87AC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87AC
 466+ 87AC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87AE 00 00        	defw 0											; (Posicion_actual).
 468+ 87B0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87B2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87B5
 471+ 87B5 00           	db %00000000 									; (Attr).
 472+ 87B6
 473+ 87B6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87B8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87BC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87BE
 478+ 87BE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87C0 00           	db 0											; (Cuad_objeto).
 480+ 87C1
 481+ 87C1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87C5
 483+ 87C5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87C6
 485+ 87C6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87C8 00 00        	defw 0											;	" " " " " " "
 487+ 87CA 00 00        	defw 0											;	" " " " " " "
 488+ 87CC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87D0
 490+ 87D0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87D2 00 00        	defw 0											;	" " " " " " "
 492+ 87D4 00 00        	defw 0											;	" " " " " " "
 493+ 87D6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87DA
 495+ 87DA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87DC
 497+ 87DC 00           	db 0											; (Autoriza_movimiento).
 498+ 87DD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87E1 00 00
 499+ 87E3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87E6
 501+ 87E6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87E8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87E9
 504+ 87E9 00           	db 0 											; (Columnas).
 505+ 87EA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87EC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87EF
 508+ 87EF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87EF
 510+ 87EF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 87F1 00 00        	defw 0											; (Posicion_actual).
 512+ 87F3 00 00        	defw 0 											; (Puntero_objeto).
 513+ 87F5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 87F8
 515+ 87F8 00           	db %00000000 									; (Attr).
 516+ 87F9
 517+ 87F9 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 87FB 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 87FD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 87FF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8801
 522+ 8801 00 00        	defw 0											; (Posicion_inicio).
 523+ 8803 00           	db 0											; (Cuad_objeto).
 524+ 8804
 525+ 8804 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8808
 527+ 8808 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8809
 529+ 8809 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 880B 00 00        	defw 0											;	" " " " " " "
 531+ 880D 00 00        	defw 0											;	" " " " " " "
 532+ 880F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8813
 534+ 8813 00 00        	db 0,0											; Variables_de_pintado
 535+ 8815 00 00        	defw 0											;	" " " " " " "
 536+ 8817 00 00        	defw 0											;	" " " " " " "
 537+ 8819 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 881D
 539+ 881D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 881F
 541+ 881F 00           	db 0											; (Autoriza_movimiento).
 542+ 8820 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8824 00 00
 543+ 8826 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8829
 545+ 8829 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 882B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 882C
 548+ 882C 00           	db 0 											; (Columnas).
 549+ 882D 00 00        	defw 0											; (Limite_horizontal).
 550+ 882F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8832
 552+ 8832              ; ---------- ---------- ---------- ---------- ----------
 553+ 8832
 554+ 8832 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8834 00 00        	defw 0											; (Posicion_actual).
 556+ 8836 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8838 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 883B
 559+ 883B 00           	db %00000000 									; (Attr).
 560+ 883C
 561+ 883C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 883E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8840 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8842 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8844
 566+ 8844 00 00        	defw 0											; (Posicion_inicio).
 567+ 8846 00           	db 0											; (Cuad_objeto).
 568+ 8847
 569+ 8847 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 884B
 571+ 884B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 884C
 573+ 884C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 884E 00 00        	defw 0											;	" " " " " " "
 575+ 8850 00 00        	defw 0											;	" " " " " " "
 576+ 8852 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8856
 578+ 8856 00 00        	db 0,0											; Variables_de_pintado
 579+ 8858 00 00        	defw 0											;	" " " " " " "
 580+ 885A 00 00        	defw 0											;	" " " " " " "
 581+ 885C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8860
 583+ 8860 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8862
 585+ 8862 00           	db 0											; (Autoriza_movimiento).
 586+ 8863 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8867 00 00
 587+ 8869 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 886C
 589+ 886C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 886E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 886F
 592+ 886F 00           	db 0 											; (Columnas).
 593+ 8870 00 00        	defw 0											; (Limite_horizontal).
 594+ 8872 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8875
 596+ 8875              ; -------------------------------------------------------------------------------------
 597+ 8875              ;
 598+ 8875              ;	20/05/23
 599+ 8875              ;
 600+ 8875              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8875              ;
 602+ 8875              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8875              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8875              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8875              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8875
 607+ 8875              Indice_de_entidades
 608+ 8875
 609+ 8875 79 88        	defw Entidad_1
 610+ 8877 89 88        	defw Entidad_2
 611+ 8879
 612+ 8879              ;	BADSAT, (Satélite malvado).
 613+ 8879
 614+ 8879 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 887B 04           	db %00000100									; (Attr).
 616+ 887C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 887E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8880 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8882 01           	db 1											; (Cuad_objeto).
 620+ 8883 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8887 2F 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8889
 623+ 8889 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 888B 02           	db %00000010									; (Attr).
 625+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 8890 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 8892 01           	db 1											; (Cuad_objeto).
 629+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 8897 2F 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 8899
# file closed: Cajas_y_disparos.asm
  28  8899              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8899              ; 13/05/23
   2+ 8899
   3+ 8899              Indice_de_niveles
   4+ 8899
   5+ 8899 A7 88        	defw Nivel_1
   6+ 889B A9 88        	defw Nivel_2
   7+ 889D B6 88        	defw Nivel_3
   8+ 889F C6 88        	defw Nivel_4
   9+ 88A1 D8 88        	defw Nivel_5
  10+ 88A3
  11+ 88A3              ;	...
  12+ 88A3              ;	...
  13+ 88A3              ;	+ Niveles ...
  14+ 88A3
  15+ 88A3 00 00        	defw 0
  16+ 88A5 00 00        	defw 0
  17+ 88A7
  18+ 88A7 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88A8 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88A9 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88AA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88AE 01 02
  22+ 88B0 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88B4 01 02
  23+ 88B6 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88B7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88BB 01
  25+ 88BC 03 01 01 01  	db 3,1,1,1,1
  25+ 88C0 01
  26+ 88C1 03 01 01 01  	db 3,1,1,1,1
  26+ 88C5 01
  27+ 88C6 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88C7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88CB 01
  29+ 88CC 04 01 01 01  	db 4,1,1,1,1
  29+ 88D0 01
  30+ 88D1 04 01 01 01  	db 4,1,1,1,1
  30+ 88D5 01
  31+ 88D6 02 03        	db 2,3
  32+ 88D8 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88D9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88DD 01
  34+ 88DE 05 01 01 01  	db 5,1,1,1,1
  34+ 88E2 01
  35+ 88E3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88E7 01
  36+ 88E8 05 01 01 01  	db 5,1,1,1,1
  36+ 88EC 01
  37+ 88ED
  38+ 88ED              ;---------------------------------------------------------------------------------------------------------------
  39+ 88ED              ;
  40+ 88ED              ;   21/5/23
  41+ 88ED              ;
  42+ 88ED              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88ED              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88ED              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88ED              ;	_en la caja DRAW correspondiente.
  46+ 88ED              ;
  47+ 88ED              ;	MODIFICA: HL,DE y A.
  48+ 88ED              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88ED
  50+ 88ED              Inicializa_Punteros_de_nivel
  51+ 88ED
  52+ 88ED 21 99 88     	ld hl,Indice_de_niveles
  53+ 88F0 22 35 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 88F3 CD 66 8D     	call Extrae_address
  55+ 88F6 7E           	ld a,(hl)
  56+ 88F7 32 EF 89     	ld (Numero_de_entidades),a
  57+ 88FA 23           	inc hl
  58+ 88FB 22 37 8A     	ld (Datos_de_nivel),hl
  59+ 88FE C9           	ret
  60+ 88FF
  61+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  62+ 88FF              ;
  63+ 88FF              ;   13/5/23
  64+ 88FF              ;
  65+ 88FF              ;	Destruye A,BC,HL,DE
  66+ 88FF
  67+ 88FF              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 88FF              ;	_del juego.
  69+ 88FF
  70+ 88FF              Prepara_cajas
  71+ 88FF
  72+ 88FF              ; Preparamos los punteros de las cajas.
  73+ 88FF
  74+ 88FF 21 7C 85     	ld hl,Indice_de_cajas
  75+ 8902 CD 66 8D     	call Extrae_address
  76+ 8905 CD 42 89     	call Avanza_caja
  77+ 8908
  78+ 8908 CD 86 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 890B
  80+ 890B 2A 37 8A     	ld hl,(Datos_de_nivel)
  81+ 890E
  82+ 890E              ; HL está en los datos del nivel correspondiente.
  83+ 890E              ; B actuará como contador de cajas.
  84+ 890E
  85+ 890E C5           1 push bc
  86+ 890F
  87+ 890F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8910 CD 33 89     	call PreparaBC
  89+ 8913
  90+ 8913 21 75 88     	ld hl,Indice_de_entidades
  91+ 8916 CD 3B 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8919 22 F5 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 891C
  94+ 891C CD 4C 89     	call Datos_de_entidad_a_caja
  95+ 891F
  96+ 891F 2A ED 89     	ld hl,(Indice_restore_caja)
  97+ 8922 CD 66 8D     	call Extrae_address
  98+ 8925 CD 42 89     	call Avanza_caja
  99+ 8928
 100+ 8928 2A 37 8A     	ld hl,(Datos_de_nivel)
 101+ 892B 23           	inc hl
 102+ 892C 22 37 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 892F
 104+ 892F C1           	pop bc
 105+ 8930 10 DC        	djnz 1B
 106+ 8932 C9           	ret
 107+ 8933
 108+ 8933 CB 27        PreparaBC sla a
 109+ 8935 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8937 4F           	ld c,a
 111+ 8938 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 893A C9           	ret
 113+ 893B
 114+ 893B A7           SBC_HL_con_BC_y_Extrae and a
 115+ 893C ED 4A        	adc hl,bc
 116+ 893E CD 66 8D     	call Extrae_address
 117+ 8941 C9           	ret
 118+ 8942
 119+ 8942 22 E9 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8945 13           	inc de
 121+ 8946 13           	inc de
 122+ 8947 EB           	ex de,hl
 123+ 8948 22 ED 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 894B C9           	ret
 125+ 894C
 126+ 894C              Datos_de_entidad_a_caja
 127+ 894C
 128+ 894C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 894C
 130+ 894C
 131+ 894C ED 5B E9 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8950
 133+ 8950 01 02 00     	ld bc,2
 134+ 8953 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8955
 136+ 8955 01 07 00     	ld bc,7
 137+ 8958 CD 80 89     	call Situa_DE
 138+ 895B
 139+ 895B 01 05 00     	ld bc,5
 140+ 895E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8960
 142+ 8960 01 04 00     	ld bc,4
 143+ 8963 CD 80 89     	call Situa_DE
 144+ 8966
 145+ 8966 01 07 00     	ld bc,7
 146+ 8969 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 896B
 148+ 896B 01 18 00     	ld bc,24
 149+ 896E CD 80 89     	call Situa_DE
 150+ 8971
 151+ 8971 01 02 00     	ld bc,2
 152+ 8974 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8976
 154+ 8976              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8976              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8976
 157+ 8976 01 0F 00     	ld bc,15									; *****
 158+ 8979 CD 80 89     	call Situa_DE
 159+ 897C
 160+ 897C 3E 03        	ld a,3
 161+ 897E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 897F
 163+ 897F C9           	ret
 164+ 8980
 165+ 8980 EB           Situa_DE ex de,hl
 166+ 8981 A7           	and a
 167+ 8982 ED 4A        	adc hl,bc
 168+ 8984 EB           	ex de,hl
 169+ 8985 C9           	ret
 170+ 8986
 171+ 8986              ;---------------------------------------------------------------------------------------------------------------
 172+ 8986              ;
 173+ 8986              ;	21/5/23
 174+ 8986              ;
 175+ 8986              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8986              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8986              ;
 178+ 8986              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8986              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8986              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8986              ;
 182+ 8986              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8986              ;	MODIFICA: A y B.
 184+ 8986              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8986
 186+ 8986              Admin_num_entidades
 187+ 8986
 188+ 8986              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8986
 190+ 8986 3A EF 89     	ld a,(Numero_de_entidades)
 191+ 8989 A7           	and a
 192+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 898A              ;	jr z,$
 194+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 898A
 196+ 898A 20 03        	jr nz,3F
 197+ 898C
 198+ 898C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 898C
 200+ 898C CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 898F
 202+ 898F
 203+ 898F 3A EF 89     3 ld a,(Numero_de_entidades)
 204+ 8992 FE 0A        	cp 10
 205+ 8994 38 08        	jr c,1F
 206+ 8996
 207+ 8996              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 8996              ; Actualizamos variables.
 209+ 8996
 210+ 8996 3E 0A        	ld a,10
 211+ 8998 32 F0 89     	ld (Numero_parcial_de_entidades),a
 212+ 899B 47           	ld b,a
 213+ 899C 18 04        	jr 2F
 214+ 899E
 215+ 899E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 899E              ; (Numero_de_entidades)="0".
 217+ 899E
 218+ 899E 32 F0 89     1 ld (Numero_parcial_de_entidades),a
 219+ 89A1 47           	ld b,a
 220+ 89A2 C9           2 ret
# file closed: Niveles.asm
  29  89A3
  30  89A3              ; ******************************************************************************************************************************************************************************************
  31  89A3              ; Constantes.
  32  89A3              ; ******************************************************************************************************************************************************************************************
  33  89A3              ;
  34  89A3              ; 25/05/23
  35  89A3              ;
  36  89A3              ; Constantes generales.
  37  89A3              ;
  38  89A3
  39  89A3              Sprite_vacio equ $f000
  40  89A3              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89A3              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89A3              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89A3              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89A3
  45  89A3              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89A3              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89A3              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89A3              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89A3              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89A3              ;                               				        ; De momento situamos este almacén en $7060.
  51  89A3              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  52  89A3              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  53  89A3              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  54  89A3              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  55  89A3              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  56  89A3              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  57  89A3
  58  89A3              Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
  59  89A3              Caja_de_disparotes equ $741d ; (741dh - 7420h) 4 bytes.
  60  89A3
  61  89A3              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  62  89A3
  63  89A3              ; ******************************************************************************************************************************************************************************************
  64  89A3              ; Variables.
  65  89A3              ; ******************************************************************************************************************************************************************************************
  66  89A3              ;
  67  89A3              ; 28/07/23
  68  89A3              ;
  69  89A3              ; Variables de DRAW. (Motor principal).
  70  89A3              ;
  71  89A3              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  72  89A3
  73  89A3 00           Filas db 0												; Filas. [DRAW]
  74  89A4 00           Columns db 0  											; Nº de columnas. [DRAW]
  75  89A5 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  76  89A7 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  77  89A9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  78  89AA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  79  89AB
  80  89AB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  81  89AB
  82  89AB 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  83  89AC              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  84  89AC              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  85  89AC 00           Attr db 0												; Atributos de la entidad:
  86  89AD
  87  89AD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  88  89AD              ;
  89  89AD              ;	COLORES: 0 ..... NEGRO
  90  89AD              ;    		 1 ..... AZUL
  91  89AD              ; 			 2 ..... ROJO
  92  89AD              ;			 3 ..... MAGENTA
  93  89AD              ; 			 4 ..... VERDE
  94  89AD              ; 			 5 ..... CIAN
  95  89AD              ;			 6 ..... AMARILLO
  96  89AD              ; 			 7 ..... BLANCO
  97  89AD
  98  89AD 00 00        Indice_Sprite_der defw 0
  99  89AF 00 00        Indice_Sprite_izq defw 0
 100  89B1 00 00        Puntero_DESPLZ_der defw 0
 101  89B3 00 00        Puntero_DESPLZ_izq defw 0
 102  89B5
 103  89B5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 104  89B7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 105  89B8
 106  89B8              ; Variables de objeto. (Características).
 107  89B8
 108  89B8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 109  89B9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 110  89BA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 111  89BB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 112  89BC
 113  89BC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 114  89BD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 115  89BD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 116  89BD
 117  89BD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 118  89BF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 119  89C1 00 00        	defw 0
 120  89C3 00 00 00 00  	db 0,0,0,0
 121  89C7
 122  89C7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 123  89C9 00 00        	defw 0
 124  89CB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 125  89CD 00 00 00 00  	db 0,0,0,0
 126  89D1
 127  89D1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 128  89D1
 129  89D1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 130  89D2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 131  89D2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 132  89D2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 133  89D2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 134  89D2              ;
 135  89D2              ; 														DESCRIPCIÖN:
 136  89D2              ;
 137  89D2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 138  89D2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 139  89D2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 140  89D2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 141  89D2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 142  89D2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 143  89D2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 144  89D2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 145  89D2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 146  89D2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 147  89D2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 148  89D2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 149  89D2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 150  89D2              ;
 151  89D2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 152  89D2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 153  89D2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 154  89D2
 155  89D2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 156  89D3
 157  89D3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 158  89D3
 159  89D3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 160  89D4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 161  89D6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 162  89D8 00 00        Puntero_indice_mov_bucle defw 0							;
 163  89DA              ;
 164  89DA              ;
 165  89DA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 166  89DB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 167  89DB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 168  89DB 00           Incrementa_puntero_backup db 0
 169  89DC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 170  89DD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 171  89DD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 172  89DE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 173  89DF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 174  89E0              ;
 175  89E0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 176  89E0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 177  89E0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 178  89E0              ;
 179  89E0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 180  89E0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 181  89E0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 182  89E0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 183  89E0              ;
 184  89E0              ;														;	"$ff" ..... Bucle infinito de repetición.
 185  89E0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 186  89E0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 187  89E0
 188  89E0
 189  89E0              ; Variables de funcionamiento. [DRAW].
 190  89E0
 191  89E0 00           Columnas db 0
 192  89E1 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 193  89E3              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 194  89E3 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 195  89E4
 196  89E4              ; variables de control general.
 197  89E4
 198  89E4 00           Ctrl_2 db 0
 199  89E5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 200  89E5              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 201  89E5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 202  89E5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 203  89E5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 204  89E5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 205  89E5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 206  89E5              ;
 207  89E5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 208  89E5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 209  89E5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 210  89E5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 211  89E5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 212  89E5
 213  89E5 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 214  89E6
 215  89E6              ;! 67 Bytes por entidad.
 216  89E6
 217  89E6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 218  89E6              ;					         		---------;      ;---------
 219  89E6
 220  89E6
 221  89E6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 222  89E6
 223  89E6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 224  89E7
 225  89E7              ;														DESCRIPCIÓN:
 226  89E7              ;
 227  89E7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 228  89E7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 229  89E7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 230  89E7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 231  89E7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 232  89E7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 233  89E7
 234  89E7              ;														BIT 3, Recarga de nueva oleada.
 235  89E7              ;														BIT 4, Recarga de nueva oleada.
 236  89E7
 237  89E7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 238  89E9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 239  89E9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 240  89E9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 241  89E9
 242  89E9
 243  89E9
 244  89E9              ; Gestión de ENTIDADES y CAJAS.
 245  89E9
 246  89E9 00 00        Puntero_store_caja defw 0
 247  89EB 00 00        Puntero_restore_caja defw 0
 248  89ED 00 00        Indice_restore_caja defw 0
 249  89EF 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 250  89F0 00           Numero_parcial_de_entidades db 0
 251  89F1 00           Entidades_en_curso db 0									; ..... ..... .....
 252  89F2 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 253  89F3              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 254  89F3              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 255  89F3              ;														; _ (Numero_de_malotes)="0".
 256  89F3 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 257  89F5 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 258  89F7              ;														; _ puntero (Indice_entidades).
 259  89F7
 260  89F7
 261  89F7              ;---------------------------------------------------------------------------------------------------------------
 262  89F7              ;
 263  89F7              ;	4/8/23
 264  89F7              ;
 265  89F7              ;	Álbumes.
 266  89F7
 267  89F7 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 268  89F9              ;															; _variable para almacenar lo posición del puntero_
 269  89F9              ; 															; _de pila, SP.
 270  89F9 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 271  89FB              ;															; La utiliza la rutina [Extrae_foto_registros].
 272  89FB 00 00        Stack_snapshot defw 0										; Puntero que indica la posición de memoria donde vamos a guardar_
 273  89FD              ;															; _el snapshot de los registros de la siguiente entidad.
 274  89FD              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 275  89FD 00 00        Stack_snapshot_disparos defw 0								; Puntero que indica la posición de memoria donde vamos a guardar_
 276  89FF              ;															; _el snapshot de los registros del siguiente disparo.
 277  89FF              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 278  89FF 84 70        Stack_snapshot_1 defw Album_de_fotos_1
 279  8A01 90 72        Stack_snapshot_disparos_1 defw Album_de_fotos_disparos_1
 280  8A03 07 71        Stack_snapshot_2 defw Album_de_fotos_2
 281  8A05 19 73        Stack_snapshot_disparos_2 defw Album_de_fotos_disparos_2
 282  8A07 8A 71        Stack_snapshot_3 defw Album_de_fotos_3
 283  8A09 96 73        Stack_snapshot_disparos_3 defw Album_de_fotos_disparos_3
 284  8A0B
 285  8A0B 00 00        Puntero_indice_album_de_fotos defw 0
 286  8A0D 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 287  8A0F
 288  8A0F 00 00        Puntero_de_album_de_fotos defw 0
 289  8A11 00 00        Puntero_de_album_de_fotos_de_disparos defw 0
 290  8A13
 291  8A13 00 00        Puntero_de_caja_de_malotes defw 0
 292  8A15 00 00        Puntero_de_caja_de_disparotes defw 0
 293  8A17
 294  8A17              ;---------------------------------------------------------------------------------------------------------------
 295  8A17
 296  8A17              ; Gestión de Disparos.
 297  8A17
 298  8A17 00           Numero_de_disparotes db 0
 299  8A18 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 300  8A1A 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 301  8A1C 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 302  8A1D              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 303  8A1D              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 304  8A1D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 305  8A1F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 306  8A1F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 307  8A1F              ;														; _produzca colisión.
 308  8A1F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 309  8A21              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 310  8A21 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 311  8A24              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 312  8A24 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 313  8A27              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 314  8A27 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 315  8A29 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 316  8A2A
 317  8A2A              ;---------------------------------------------------------------------------------------------------------------
 318  8A2A
 319  8A2A              ; Relojes y temporizaciones.
 320  8A2A
 321  8A2A 00           Contador_de_frames db 0
 322  8A2B 04           Clock_explosion db 4
 323  8A2C 1E           Clock_Entidades_en_curso db 30
 324  8A2D 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 325  8A2E              ;														; Repite la oleada de entidades.
 326  8A2E 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 327  8A2F 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 328  8A30 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 329  8A31
 330  8A31 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 331  8A32 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 332  8A33 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 333  8A34
 334  8A34              ;---------------------------------------------------------------------------------------------------------------
 335  8A34
 336  8A34              ; Gestión de NIVELES.
 337  8A34
 338  8A34 00           Nivel db 0												; Nivel actual del juego.
 339  8A35 00 00        Puntero_indice_NIVELES defw 0
 340  8A37 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 341  8A39              ; 														; _ que definen el NIVEL.
 342  8A39              ; Y todo comienza aquí .....
 343  8A39              ;
 344  8A39              ; Rutina principal *************************************************************************************************************************************************************************
 345  8A39              ;
 346  8A39              ;	14/11/22
 347  8A39
 348  8A39              START
 349  8A39
 350  8A39 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 351  8A3C 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 352  8A3E ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 353  8A40 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 354  8A42 F3           	DI
 355  8A43
 356  8A43 3E 07        	ld a,%00000111
 357  8A45 CD 6B 99     	call Cls
 358  8A48
 359  8A48 CD 3F 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 360  8A4B
 361  8A4B              ; INICIALIZACIÓN.
 362  8A4B
 363  8A4B CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 364  8A4E
 365  8A4E CD FF 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 366  8A51
 367  8A51 CD CA 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 368  8A54              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 369  8A54 CD E0 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 370  8A57              ;													     ; _ malotes antes de guardar ninguna foto.
 371  8A57              ; ----------
 372  8A57
 373  8A57 CD EF 8D     	call Restore_entidad
 374  8A5A
 375  8A5A 21 F0 89     	ld hl,Numero_parcial_de_entidades
 376  8A5D 46           	ld b,(hl)
 377  8A5E 04           	inc b
 378  8A5F 05           	dec b
 379  8A60 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 380  8A62
 381  8A62              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 382  8A62              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 383  8A62              ;	Pintamos el resto de entidades:
 384  8A62
 385  8A62              ;	INICIA ENTIDADES !!!!!
 386  8A62
 387  8A62 C5           1 push bc  												; Guardo el contador de entidades.
 388  8A63
 389  8A63 CD 71 8C     	call Inicia_entidad
 390  8A66
 391  8A66 C1           	pop bc
 392  8A67 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 393  8A69
 394  8A69              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 395  8A69              ; (Esto se dá cuando se inicia una nueva oleada).
 396  8A69
 397  8A69 3A E6 89     	ld a,(Ctrl_1)
 398  8A6C CB 5F        	bit 3,a
 399  8A6E 20 18        	jr nz,5F											; Loop
 400  8A70
 401  8A70              ; 	INICIA AMADEUS !!!!!
 402  8A70
 403  8A70 CD 16 8E     3 call Restore_Amadeus
 404  8A73 CD 6C 8D     	call Inicia_Puntero_objeto
 405  8A76 CD A5 93     	call Draw
 406  8A79 CD A0 7F     	call Guarda_foto_registros
 407  8A7C 11 94 85     	ld de,Amadeus_db
 408  8A7F CD 28 8E     	call Store_Amadeus
 409  8A82
 410  8A82              ; 	INICIA DISPAROS !!!!!
 411  8A82
 412  8A82 CD 26 8D     	call Inicia_Puntero_Disparo_Entidades
 413  8A85 CD 2D 8D     	call Inicia_Puntero_Disparo_Amadeus
 414  8A88
 415  8A88              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 416  8A88
 417  8A88 CD CA 8C     5 call Inicia_punteros_de_cajas
 418  8A8B CD EF 8D     	call Restore_entidad
 419  8A8E
 420  8A8E 3A E6 89     	ld a,(Ctrl_1)
 421  8A91 CB 5F        	bit 3,a
 422  8A93 28 0A        	jr z,6F
 423  8A95
 424  8A95              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 425  8A95
 426  8A95 21 E6 89     	ld hl,Ctrl_1
 427  8A98 CB 9E        	res 3,(hl)
 428  8A9A CD 34 8D     	call Calcula_numero_de_malotes
 429  8A9D 18 07        	jr 21F
 430  8A9F
 431  8A9F              ; ----------
 432  8A9F
 433  8A9F 3A F0 89     6 ld a,(Numero_parcial_de_entidades)
 434  8AA2 3C           	inc a
 435  8AA3 32 F2 89     	ld (Numero_de_malotes),a
 436  8AA6
 437  8AA6 2A 13 8A     21 ld hl,(Puntero_de_caja_de_malotes)
 438  8AA9 77           	ld (hl),a
 439  8AAA
 440  8AAA              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y_
 441  8AAA              ; _ (Numero_de_malotes) en (Caja_de_malotes).
 442  8AAA
 443  8AAA              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 444  8AAA              ; _ para situarnos en el siguiente album y en la siguiente Caja_de_malotes.
 445  8AAA
 446  8AAA CD 05 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 447  8AAD
 448  8AAD              ; ------------------------------------
 449  8AAD
 450  8AAD FB           	ei ; Interrupciones habilitadas.
 451  8AAE
 452  8AAE              ; -----------------------------------------------------------------------
 453  8AAE              ;
 454  8AAE              ;	3/8/23
 455  8AAE
 456  8AAE 3A 2C 8A     Main ld a,(Clock_Entidades_en_curso)
 457  8AB1 47           	ld b,a
 458  8AB2 3A 2A 8A     	ld a,(Contador_de_frames)
 459  8AB5 B8           	cp b
 460  8AB6 20 18        	jr nz,13F
 461  8AB8
 462  8AB8 3A F0 89     	ld a,(Numero_parcial_de_entidades)
 463  8ABB 47           	ld b,a
 464  8ABC 3A F1 89     	ld a,(Entidades_en_curso)
 465  8ABF B8           	cp b
 466  8AC0 28 0E        	jr z,13F
 467  8AC2 30 0C        	jr nc,13F
 468  8AC4
 469  8AC4 3C           	inc a
 470  8AC5 32 F1 89     	ld (Entidades_en_curso),a
 471  8AC8
 472  8AC8 3A 2C 8A     	ld a,(Clock_Entidades_en_curso)
 473  8ACB
 474  8ACB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 475  8ACB              ;! _ IMPREDECIBLE !!!!
 476  8ACB
 477  8ACB C6 64        	add 100
 478  8ACD 32 2C 8A     	ld (Clock_Entidades_en_curso),a
 479  8AD0
 480  8AD0              ; Habilita disparos.
 481  8AD0
 482  8AD0 21 2E 8A     13 ld hl,Disparo_Amadeus
 483  8AD3 11 30 8A     	ld de,CLOCK_repone_disparo_Amadeus
 484  8AD6 CD 30 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 485  8AD9
 486  8AD9 21 31 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 487  8ADC 11 33 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 488  8ADF CD 30 A0     	call Habilita_disparos
 489  8AE2
 490  8AE2              ; COLISIONES.
 491  8AE2
 492  8AE2 CD 87 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 493  8AE5
 494  8AE5              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 495  8AE5              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 496  8AE5              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 497  8AE5
 498  8AE5 AF           	xor a
 499  8AE6 32 1C 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 500  8AE9
 501  8AE9 CD CA 8C     	call Inicia_punteros_de_cajas
 502  8AEC CD EF 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 503  8AEF              ; 														; _ en DRAW.
 504  8AEF 3A A3 89     	ld a,(Filas)
 505  8AF2 A7           	and a
 506  8AF3 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 507  8AF5 CD 01 8E     	call Incrementa_punteros_de_cajas
 508  8AF8 18 F2        	jr 12B
 509  8AFA
 510  8AFA              ; ---------------------------------------------------------------------------------------
 511  8AFA
 512  8AFA 3A F0 89     10 ld a,(Numero_parcial_de_entidades)
 513  8AFD 47               ld b,a
 514  8AFE A7           	and a
 515  8AFF 20 14        	jr nz,11F
 516  8B01
 517  8B01 21 E6 89     	ld hl,Ctrl_1
 518  8B04 CB 66        	bit 4,(hl)
 519  8B06 C2 92 8B     	jp nz,16F
 520  8B09
 521  8B09 21 E6 89     	ld hl,Ctrl_1
 522  8B0C CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 523  8B0E
 524  8B0E 3A 2A 8A     	ld a,(Contador_de_frames)
 525  8B11 3C           	inc a
 526  8B12 32 2D 8A     	ld (Activa_recarga_cajas),a
 527  8B15
 528  8B15              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 529  8B15
 530  8B15 3A F1 89     11 ld a,(Entidades_en_curso)
 531  8B18 A7           	and a
 532  8B19 CA 92 8B     	jp z,16F												; Si no hay entidades en curso, RESTORE AMADEUS.
 533  8B1C 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 534  8B1D
 535  8B1D              ; Código que ejecutamos con cada entidad:
 536  8B1D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 537  8B1D
 538  8B1D C5           15 push bc 												; Nº de entidades en curso.
 539  8B1E
 540  8B1E              ; Impacto ???
 541  8B1E
 542  8B1E 3A BC 89     	ld a,(Impacto)
 543  8B21 A7           	and a
 544  8B22 28 2D        	jr z,8F
 545  8B24
 546  8B24              ; Hay Impacto en esta entidad.
 547  8B24
 548  8B24 21 2B 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 549  8B27 35           	dec (hl)
 550  8B28 20 62        	jr nz,17F
 551  8B2A
 552  8B2A              ;! Velocidad de la animación de la explosión.
 553  8B2A
 554  8B2A 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 555  8B2C              ;														; _,(velocidad de la explosión).
 556  8B2C CD 81 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 557  8B2F
 558  8B2F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 559  8B2F
 560  8B2F 3A E4 89     	ld a,(Ctrl_2)
 561  8B32 CB 4F        	bit 1,a
 562  8B34 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 563  8B36
 564  8B36              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 565  8B36
 566  8B36 3A AB 89     	ld a,(CTRL_DESPLZ)
 567  8B39 A7           	and a
 568  8B3A 20 08        	jr nz,18F
 569  8B3C
 570  8B3C 21 84 84     	ld hl,Indice_Explosion_2x2-2
 571  8B3F 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 572  8B42 18 06        	jr 19F
 573  8B44
 574  8B44 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 575  8B47 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 576  8B4A
 577  8B4A 21 E4 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 578  8B4D CB CE        	set 1,(hl)
 579  8B4F 18 22        	jr 7F
 580  8B51
 581  8B51              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 582  8B51              ; _con las coordenadas de la entidad almacenada en DRAW.
 583  8B51
 584  8B51 3A E6 89     8 ld a,(Ctrl_1)
 585  8B54 CB 57        	bit 2,a
 586  8B56 28 1B        	jr z,7F
 587  8B58
 588  8B58 2A 1F 8A     	ld hl,(Coordenadas_disparo_certero)
 589  8B5B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 590  8B5C              ;														; E contiene la coordenada_X del disparo.
 591  8B5C 2A A9 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 592  8B5F              ;														; H FILA, (Coordenada_y de la entidad).
 593  8B5F A7           	and a
 594  8B60 ED 52        	sbc hl,de
 595  8B62
 596  8B62 CD BE 92     	call Determina_resultado_comparativa
 597  8B65
 598  8B65 78           	ld a,b
 599  8B66 A7           	and a
 600  8B67 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 601  8B69
 602  8B69              ; ----- ----- -----
 603  8B69
 604  8B69 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 605  8B6B 32 BC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 606  8B6E
 607  8B6E 21 E6 89     	ld hl,Ctrl_1
 608  8B71 CB 96        	res 2,(hl)
 609  8B73
 610  8B73 CD F3 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 611  8B76
 612  8B76 3A D1 89     	ld a,(Ctrl_0)
 613  8B79 CB 67        	bit 4,a
 614  8B7B 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 615  8B7D
 616  8B7D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 617  8B7D              ; [[[
 618  8B7D CD 8A 8E     	call Detecta_disparo_entidad
 619  8B80              ; ]]]
 620  8B80 CD 91 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 621  8B83
 622  8B83 21 D1 89     	ld hl,Ctrl_0
 623  8B86 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 624  8B88 AF           	xor a
 625  8B89 32 D2 89     	ld (Obj_dibujado),a
 626  8B8C
 627  8B8C CD B4 8D     17 call Store_Restore_cajas
 628  8B8F
 629  8B8F C1           	pop bc
 630  8B90 10 8B        	djnz 15B
 631  8B92
 632  8B92              ; ------------------------------------
 633  8B92              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 634  8B92              ; Hemos gestionado todas las unidades.
 635  8B92              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 636  8B92
 637  8B92              ;	ld hl,Ctrl_1
 638  8B92              ;	res 2,(hl)
 639  8B92
 640  8B92              ; ------------------------------------
 641  8B92
 642  8B92              ; Tras la gestión de las entidades, ... AMADEUS.
 643  8B92
 644  8B92 CD 16 8E     16 call Restore_Amadeus
 645  8B95
 646  8B95 3A BC 89     	ld a,(Impacto)
 647  8B98 A7           	and a
 648  8B99 20 FE        	jr nz,$
 649  8B9B
 650  8B9B CD 52 8C     	call Mov_Amadeus
 651  8B9E
 652  8B9E 3A D1 89     	ld a,(Ctrl_0)
 653  8BA1 CB 67        	bit 4,a
 654  8BA3 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 655  8BA5
 656  8BA5 CD 91 8C     	call Guarda_foto_entidad_a_pintar
 657  8BA8
 658  8BA8 21 D1 89     14 ld hl,Ctrl_0
 659  8BAB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 660  8BAD AF           	xor a
 661  8BAE 32 D2 89     	ld (Obj_dibujado),a
 662  8BB1
 663  8BB1 11 94 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 664  8BB4 CD 28 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 665  8BB7
 666  8BB7 CD 1B 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 667  8BBA
 668  8BBA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 669  8BBA
 670  8BBA CD 4D 8D     	call Calcula_numero_de_disparotes
 671  8BBD CD 34 8D     9 call Calcula_numero_de_malotes
 672  8BC0
 673  8BC0 CD 05 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 674  8BC3
 675  8BC3 3E 04        	ld a,4
 676  8BC5 D3 FE        	out ($fe),a
 677  8BC7
 678  8BC7              ; ----------------------------------------
 679  8BC7
 680  8BC7 3A E6 89     	ld a,(Ctrl_1) 										; Existe Loop?
 681  8BCA CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 682  8BCC CA AE 8A     	jp z,Main
 683  8BCF
 684  8BCF              ; -----
 685  8BCF              ;	(((
 686  8BCF
 687  8BCF 3A 2A 8A     	ld a,(Contador_de_frames)
 688  8BD2 47           	ld b,a
 689  8BD3 3A 2D 8A     	ld a,(Activa_recarga_cajas)
 690  8BD6 B8           	cp b
 691  8BD7 28 08        	jr z,20F
 692  8BD9
 693  8BD9 21 E6 89     	ld hl,Ctrl_1
 694  8BDC CB E6        	set 4,(hl)
 695  8BDE C3 AE 8A     	jp Main
 696  8BE1
 697  8BE1 21 E6 89     20 ld hl,Ctrl_1
 698  8BE4 CB A6        	res 4,(hl)
 699  8BE6 F3           	di
 700  8BE7
 701  8BE7 3A 2A 8A     	ld a,(Contador_de_frames)
 702  8BEA
 703  8BEA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 704  8BEA              ;! _ IMPREDECIBLE !!!!
 705  8BEA
 706  8BEA C6 0A        	add 10
 707  8BEC 32 2C 8A     	ld (Clock_Entidades_en_curso),a
 708  8BEF
 709  8BEF C3 4E 8A     	jp 4B
 710  8BF2
 711  8BF2 C9           	ret
 712  8BF3
 713  8BF3              ; --------------------------------------------------------------------------------------------------------------
 714  8BF3              ;
 715  8BF3              ;	27/05/23
 716  8BF3
 717  8BF3              Mov_obj
 718  8BF3
 719  8BF3              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 720  8BF3
 721  8BF3 3A E4 89     	ld a,(Ctrl_2)
 722  8BF6 CB 4F        	bit 1,a
 723  8BF8 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 724  8BFA
 725  8BFA              ; Explosión:
 726  8BFA
 727  8BFA 3A E5 89     	ld a,(Frames_explosion)
 728  8BFD A7           	and a
 729  8BFE 20 11        	jr nz,4F
 730  8C00
 731  8C00              ; Una alimaña menos!!!!!!!!!1
 732  8C00
 733  8C00 CD 31 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 734  8C03 21 F0 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 735  8C06 35           	dec (hl)
 736  8C07 21 F1 89     	ld hl,Entidades_en_curso
 737  8C0A 35           	dec (hl)
 738  8C0B 21 EF 89     	ld hl,Numero_de_entidades
 739  8C0E 35           	dec (hl)
 740  8C0F 18 40        	jr 3F
 741  8C11
 742  8C11              ; -----
 743  8C11
 744  8C11              ;	`Movemos´ la explosión.
 745  8C11
 746  8C11 2A B1 89     4 ld hl,(Puntero_DESPLZ_der)
 747  8C14 23           	inc hl
 748  8C15 23           	inc hl
 749  8C16 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 750  8C19 CD 66 8D     	call Extrae_address
 751  8C1C 22 A7 89     	ld (Puntero_objeto),hl
 752  8C1F
 753  8C1F 21 E5 89     	ld hl,Frames_explosion
 754  8C22 35           	dec (hl)
 755  8C23
 756  8C23 CD 81 8C     	call Guarda_foto_entidad_a_borrar
 757  8C26 18 29        	jr 3F
 758  8C28
 759  8C28 AF           2 xor a
 760  8C29 32 D2 89     	ld (Obj_dibujado),a
 761  8C2C 32 D1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 762  8C2F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 763  8C2F              ; 														; _de la entidad.
 764  8C2F CD 9B 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 765  8C32              ;														; Obj_dibujado="0".
 766  8C32              ; Movemos Entidades malignas.
 767  8C32
 768  8C32              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 769  8C32              ;	and a 												; _a movernos. (Limitador_de_entidades).
 770  8C32              ;	ret z
 771  8C32
 772  8C32 CD CB 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 773  8C35
 774  8C35 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 775  8C38 CB 67        	bit 4,a
 776  8C3A C8           	ret z
 777  8C3B
 778  8C3B              ; Ha habido desplazamiento de la entidad maligna.
 779  8C3B              ; Ha llegado a zona de AMADEUS ???
 780  8C3B
 781  8C3B 3A AA 89     	ld a,(Coordenada_y)
 782  8C3E FE 14        	cp $14
 783  8C40 D4 4C 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 784  8C43              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 785  8C43              ; ---------
 786  8C43
 787  8C43 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 788  8C45 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 789  8C48 CD 9B 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 790  8C4B CD B2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 791  8C4E CD 81 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 792  8C51 C9           3 ret													; _de la misma.
 793  8C52
 794  8C52              ; --------------------------------------------------------------------------------------------------------------
 795  8C52              ;
 796  8C52              ;	29/1/23
 797  8C52
 798  8C52              Mov_Amadeus
 799  8C52
 800  8C52 AF           	xor a
 801  8C53 32 D2 89     	ld (Obj_dibujado),a
 802  8C56 CD 9B 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 803  8C59              ;														; Obj_dibujado="0".
 804  8C59              ; Movemos Amadeus.
 805  8C59
 806  8C59 CD 53 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 807  8C5C 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 808  8C5F CB 67        	bit 4,a
 809  8C61 C8           	ret z
 810  8C62
 811  8C62              ; ---------
 812  8C62
 813  8C62 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 814  8C64 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 815  8C67 CD 9B 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 816  8C6A CD B2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 817  8C6D CD 81 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 818  8C70 C9           	ret													; _de la nave.
 819  8C71
 820  8C71              ; -----------------------------------------------------------------------------------
 821  8C71
 822  8C71 CD 6C 8D     Inicia_entidad	call Inicia_Puntero_objeto
 823  8C74 CD 7F 99     	call Recompone_posicion_inicio
 824  8C77 CD A5 93     	call Draw
 825  8C7A CD A0 7F     	call Guarda_foto_registros
 826  8C7D CD B4 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 827  8C80 C9           	ret
 828  8C81
 829  8C81              ; --------------------------------------------------------------------------------------------------------------
 830  8C81              ;
 831  8C81              ;	31/01/23
 832  8C81              ;
 833  8C81              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 834  8C81
 835  8C81              Guarda_foto_entidad_a_borrar
 836  8C81
 837  8C81 CD 89 96     	call Prepara_draw
 838  8C84 CD B9 95     	call calcula_CColumnass
 839  8C87 CD F0 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 840  8C8A CD 4F 96     	call Define_rutina_de_impresion
 841  8C8D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 842  8C90 C9           	ret
 843  8C91
 844  8C91              ; --------------------------------------------------------------------------------------------------------------
 845  8C91              ;
 846  8C91              ;	31/01/23
 847  8C91              ;
 848  8C91              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 849  8C91              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 850  8C91
 851  8C91              Guarda_foto_entidad_a_pintar
 852  8C91
 853  8C91 CD BE 8C     	call Repone_pintar
 854  8C94 CD A5 93     	call Draw
 855  8C97 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 856  8C9A C9           	ret
 857  8C9B
 858  8C9B              ; --------------------------------------------------------------------------------------------------------------
 859  8C9B              ;
 860  8C9B              ;
 861  8C9B
 862  8C9B 21 A3 89     Prepara_var_pintado_borrado	ld hl,Filas
 863  8C9E 3A D2 89     	ld a,(Obj_dibujado)
 864  8CA1 A7           	and a
 865  8CA2 28 05        	jr z,1F
 866  8CA4 11 C7 89     	ld de,Variables_de_pintado
 867  8CA7 18 03        	jr 2F
 868  8CA9 11 BD 89     1 ld de,Variables_de_borrado
 869  8CAC 01 08 00     2 ld bc,8
 870  8CAF ED B0        	ldir
 871  8CB1 C9           	ret
 872  8CB2
 873  8CB2              ; --------------------------------------------------------------------------------------------------------------
 874  8CB2
 875  8CB2 21 BD 89     Repone_borrar ld hl,Variables_de_borrado
 876  8CB5 11 A3 89     	ld de,Filas
 877  8CB8 01 08 00     	ld bc,8
 878  8CBB ED B0        	ldir
 879  8CBD C9           	ret
 880  8CBE
 881  8CBE 21 C7 89     Repone_pintar ld hl,Variables_de_pintado
 882  8CC1 11 A3 89     	ld de,Filas
 883  8CC4 01 08 00     	ld bc,8
 884  8CC7 ED B0        	ldir
 885  8CC9 C9           	ret
 886  8CCA
 887  8CCA              ; *************************************************************************************************************************************************************
 888  8CCA              ;
 889  8CCA              ; 8/1/23
 890  8CCA              ;
 891  8CCA              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 892  8CCA              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 893  8CCA              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 894  8CCA
 895  8CCA              ; Destruye HL y DE !!!!!
 896  8CCA
 897  8CCA              Inicia_punteros_de_cajas
 898  8CCA
 899  8CCA 21 7C 85     	ld hl,Indice_de_cajas
 900  8CCD CD 66 8D         call Extrae_address
 901  8CD0 22 E9 89         ld (Puntero_store_caja),hl
 902  8CD3 21 7E 85     	ld hl,Indice_de_cajas+2
 903  8CD6 22 ED 89     	ld (Indice_restore_caja),hl
 904  8CD9 CD 66 8D     	call Extrae_address
 905  8CDC 22 EB 89     	ld (Puntero_restore_caja),hl
 906  8CDF C9               ret
 907  8CE0
 908  8CE0              ; ---------------------------------------------------------------
 909  8CE0              ;
 910  8CE0              ;	4/8/23
 911  8CE0              ;
 912  8CE0
 913  8CE0              Inicia_punteros_de_albumes_y_malotes
 914  8CE0
 915  8CE0 21 EC 84     	ld hl,Indice_album_de_fotos
 916  8CE3 22 0B 8A     	ld (Puntero_indice_album_de_fotos),hl
 917  8CE6 CD 66 8D     	call Extrae_address
 918  8CE9 22 FB 89     	ld (Stack_snapshot),hl
 919  8CEC
 920  8CEC 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 921  8CEF 22 0D 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 922  8CF2 CD 66 8D     	call Extrae_address
 923  8CF5 22 FD 89     	ld (Stack_snapshot_disparos),hl
 924  8CF8
 925  8CF8 21 19 74     	ld hl,Caja_de_malotes
 926  8CFB 22 13 8A     	ld (Puntero_de_caja_de_malotes),hl
 927  8CFE 21 1D 74     	ld hl,Caja_de_disparotes
 928  8D01 22 15 8A     	ld (Puntero_de_caja_de_disparotes),hl
 929  8D04
 930  8D04 C9           	ret
 931  8D05
 932  8D05              Avanza_puntero_de_album_de_fotos_y_malotes
 933  8D05
 934  8D05              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 935  8D05
 936  8D05              ; Estamos en el último álbum del índice???.
 937  8D05
 938  8D05 2A 0B 8A     	ld hl,(Puntero_indice_album_de_fotos)
 939  8D08 01 F2 84     	ld bc,Indice_album_de_fotos+6
 940  8D0B A7           	and a
 941  8D0C ED 42        	sbc hl,bc
 942  8D0E 28 FE        	jr z,$				; Estamos en el último álbum del índice.
 943  8D10
 944  8D10 2A 0B 8A     	ld hl,(Puntero_indice_album_de_fotos)
 945  8D13 23           	inc hl
 946  8D14 23           	inc hl
 947  8D15 22 0B 8A     	ld (Puntero_indice_album_de_fotos),hl
 948  8D18 CD 66 8D     	call Extrae_address
 949  8D1B 22 FB 89     	ld (Stack_snapshot),hl
 950  8D1E
 951  8D1E 2A 13 8A     	ld hl,(Puntero_de_caja_de_malotes)
 952  8D21 23           	inc hl
 953  8D22 22 13 8A     	ld (Puntero_de_caja_de_malotes),hl
 954  8D25
 955  8D25 C9           	ret
 956  8D26
 957  8D26              ; *************************************************************************************************************************************************************
 958  8D26              ;
 959  8D26              ; 8/1/23
 960  8D26              ;
 961  8D26              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 962  8D26
 963  8D26 21 14 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 964  8D29 22 18 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965  8D2C C9           	ret
 966  8D2D 21 FC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 967  8D30 22 1A 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 968  8D33 C9           	ret
 969  8D34
 970  8D34              ; -------------------------------------------------------------------------------------------------------------
 971  8D34              ;
 972  8D34              ; 3/8/23
 973  8D34              ;
 974  8D34
 975  8D34              Calcula_numero_de_malotes
 976  8D34
 977  8D34 21 00 70     	ld hl,Album_de_fotos
 978  8D37 EB           	ex de,hl
 979  8D38 2A 0F 8A     	ld hl,(Puntero_de_album_de_fotos)
 980  8D3B
 981  8D3B 06 00        	ld b,0
 982  8D3D 7D           	ld a,l
 983  8D3E 93           	sub e
 984  8D3F 28 07        	jr z,1F
 985  8D41
 986  8D41              ; Nº de malotes no es "0".
 987  8D41
 988  8D41 D6 06        2 sub 6
 989  8D43 04           	inc b
 990  8D44 A7           	and a
 991  8D45 20 FA        	jr nz,2B
 992  8D47 78           	ld a,b
 993  8D48
 994  8D48 2A 13 8A     1 ld hl,(Puntero_de_caja_de_malotes)					; Guardamos nº de malotes en su correspondiente caja.
 995  8D4B 77           	ld (hl),a
 996  8D4C
 997  8D4C C9           	ret
 998  8D4D
 999  8D4D              ; -------------------------------------------------------------------------------------------------------------
1000  8D4D              ;
1001  8D4D              ; 28/2/23
1002  8D4D              ;
1003  8D4D
1004  8D4D              Calcula_numero_de_disparotes
1005  8D4D
1006  8D4D 21 0D 72     	ld hl,Album_de_fotos_disparos
1007  8D50 EB           	ex de,hl
1008  8D51 2A FD 89     	ld hl,(Stack_snapshot_disparos)
1009  8D54
1010  8D54 06 00        	ld b,0
1011  8D56 7D           	ld a,l
1012  8D57 93           	sub e
1013  8D58 28 07        	jr z,1F
1014  8D5A
1015  8D5A              ; Nº de malotes no es "0".
1016  8D5A
1017  8D5A D6 06        2 sub 6
1018  8D5C 04           	inc b
1019  8D5D A7           	and a
1020  8D5E 20 FA        	jr nz,2B
1021  8D60 78           	ld a,b
1022  8D61
1023  8D61 2A 15 8A     1 	ld hl,(Puntero_de_caja_de_disparotes)
1024  8D64 77           	ld (hl),a
1025  8D65
1026  8D65 C9           	ret
1027  8D66
1028  8D66              ; *************************************************************************************************************************************************************
1029  8D66              ;
1030  8D66              ; 20/10/22
1031  8D66              ;
1032  8D66              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1033  8D66              ;
1034  8D66              ; Destruye el puntero y DE !!!!!
1035  8D66
1036  8D66 5E           Extrae_address ld e,(hl)
1037  8D67 23           	inc hl
1038  8D68 56           	ld d,(hl)
1039  8D69 2B           	dec hl
1040  8D6A EB           	ex de,hl
1041  8D6B C9           	ret
1042  8D6C
1043  8D6C              ; *************************************************************************************************************************************************************
1044  8D6C              ;
1045  8D6C              ;	7/2/23
1046  8D6C              ;
1047  8D6C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1048  8D6C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1049  8D6C              ;
1050  8D6C              ;   Destruye HL y BC !!!!!,
1051  8D6C              ;
1052  8D6C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1053  8D6C              ;					"0" ..... Izquierda.
1054  8D6C
1055  8D6C              Inicia_Puntero_objeto
1056  8D6C
1057  8D6C 3A B7 89     	ld a,(Cuad_objeto)
1058  8D6F E6 01        	and 1
1059  8D71 F5           	push af
1060  8D72 CC 90 8D     	call z,Inicia_puntero_objeto_izq
1061  8D75 F1           	pop af
1062  8D76 28 2B        	jr z,1F
1063  8D78 CD 7D 8D     	call Inicia_puntero_objeto_der
1064  8D7B 18 26        	jr 1F
1065  8D7D
1066  8D7D              ; Arrancamos desde la parte izquierda de la pantalla.
1067  8D7D              ; Iniciamos (Indice_Sprite_der).
1068  8D7D
1069  8D7D 2A AD 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1070  8D80 22 B1 89     	ld (Puntero_DESPLZ_der),hl
1071  8D83 CD 66 8D     	call Extrae_address
1072  8D86 22 A7 89     	ld (Puntero_objeto),hl
1073  8D89
1074  8D89 2A AF 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1075  8D8C 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
1076  8D8F C9           	ret
1077  8D90
1078  8D90              ; Arrancamos desde la parte derecha de la pantalla.
1079  8D90              ; Iniciamos (Indice_Sprite_izq).
1080  8D90
1081  8D90 2A AF 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1082  8D93 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
1083  8D96 CD 66 8D     	call Extrae_address
1084  8D99 22 A7 89     	ld (Puntero_objeto),hl
1085  8D9C
1086  8D9C 2A AD 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1087  8D9F 22 B1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1088  8DA2 C9           	ret
1089  8DA3
1090  8DA3              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1091  8DA3
1092  8DA3 21 40 83     1 ld hl,Amadeus
1093  8DA6 ED 4B A7 89  	ld bc,(Puntero_objeto)
1094  8DAA B7 ED 42     	sub hl,bc
1095  8DAD C0           	ret nz
1096  8DAE 21 D1 89     	ld hl,Ctrl_0
1097  8DB1 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1098  8DB3 C9           	ret 												; _de nuestra nave en los extremos.
1099  8DB4
1100  8DB4              ; *************************************************************************************************************************************************************
1101  8DB4              ;
1102  8DB4              ;	14/5/23
1103  8DB4              ;
1104  8DB4              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1105  8DB4              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1106  8DB4
1107  8DB4              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1108  8DB4              ;	_de la 2ª y 3ª entidad respectivamente.
1109  8DB4
1110  8DB4              Store_Restore_cajas
1111  8DB4
1112  8DB4 E5           	push hl
1113  8DB5 D5           	push de
1114  8DB6 C5            	push bc
1115  8DB7
1116  8DB7              ;	STORE !!!!!
1117  8DB7              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1118  8DB7
1119  8DB7 21 A3 89     	ld hl,Filas
1120  8DBA ED 5B E9 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1121  8DBE 01 43 00     	ld bc,67
1122  8DC1 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1123  8DC3
1124  8DC3              ; 	Entidad_sospechosa. 20/4/23
1125  8DC3
1126  8DC3 3A BC 89     	ld a,(Impacto)
1127  8DC6 A7           	and a
1128  8DC7 28 0C        	jr z,1F
1129  8DC9
1130  8DC9 2A E9 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1131  8DCC 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1132  8DCF A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1133  8DD0 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1134  8DD2 22 1D 8A     	ld (Entidad_sospechosa_de_colision),hl
1135  8DD5
1136  8DD5              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1137  8DD5
1138  8DD5 2A EB 89     1 ld hl,(Puntero_restore_caja)
1139  8DD8 7E           	ld a,(hl)
1140  8DD9 A7           	and a
1141  8DDA F5           	push af
1142  8DDB 28 08        	jr z,2F
1143  8DDD
1144  8DDD 11 A3 89     	ld de,Filas
1145  8DE0 01 43 00     	ld bc,67
1146  8DE3 ED B0        	ldir
1147  8DE5
1148  8DE5 CD 01 8E     2 call Incrementa_punteros_de_cajas
1149  8DE8 F1           	pop af
1150  8DE9 28 EA        	jr z,1B
1151  8DEB
1152  8DEB C1           	pop bc
1153  8DEC D1           	pop de
1154  8DED E1           	pop hl
1155  8DEE
1156  8DEE C9           	ret
1157  8DEF
1158  8DEF              ; **************************************************************************************************
1159  8DEF              ;
1160  8DEF              ;	12/05/23
1161  8DEF              ;
1162  8DEF              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1163  8DEF
1164  8DEF E5           Restore_entidad push hl
1165  8DF0 D5           	push de
1166  8DF1 C5            	push bc
1167  8DF2
1168  8DF2 2A E9 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1169  8DF5 11 A3 89     	ld de,Filas
1170  8DF8 01 43 00     	ld bc,67
1171  8DFB ED B0        	ldir
1172  8DFD
1173  8DFD C1           	pop bc
1174  8DFE D1           	pop de
1175  8DFF E1           	pop hl
1176  8E00 C9           	ret
1177  8E01
1178  8E01
1179  8E01              ; **************************************************************************************************
1180  8E01              ;
1181  8E01              ;	08/05/23
1182  8E01              ;
1183  8E01              ;	Incrementamos los dos punteros de entidades. (+1).
1184  8E01
1185  8E01 2A EB 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1186  8E04 22 E9 89     	ld (Puntero_store_caja),hl
1187  8E07 2A ED 89     	ld hl,(Indice_restore_caja)
1188  8E0A 23           	inc hl
1189  8E0B 23           	inc hl
1190  8E0C 22 ED 89     	ld (Indice_restore_caja),hl
1191  8E0F CD 66 8D         call Extrae_address
1192  8E12 22 EB 89         ld (Puntero_restore_caja),hl
1193  8E15 C9               ret
1194  8E16
1195  8E16              ; **************************************************************************************************
1196  8E16              ;
1197  8E16              ;	25/01/23
1198  8E16              ;
1199  8E16              ;	Restore_Amadeus
1200  8E16              ;
1201  8E16              ;	Cargamos en DRAW los parámetros de Amadeus.
1202  8E16              ;
1203  8E16
1204  8E16 E5           Restore_Amadeus	push hl
1205  8E17 D5           	push de
1206  8E18 C5            	push bc
1207  8E19 21 94 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1208  8E1C 11 A3 89     	ld de,Filas
1209  8E1F 01 43 00     	ld bc,67
1210  8E22 ED B0        	ldir
1211  8E24 C1           	pop bc
1212  8E25 D1           	pop de
1213  8E26 E1           	pop hl
1214  8E27 C9           	ret
1215  8E28
1216  8E28              ; *************************************************************************************************************************************************************
1217  8E28              ;
1218  8E28              ;	29/04/23
1219  8E28              ;
1220  8E28              ;	Store_Amadeus
1221  8E28              ;
1222  8E28              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1223  8E28              ;
1224  8E28              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1225  8E28              ;
1226  8E28              ;	DESTRUYE: HL y BC y DE.
1227  8E28
1228  8E28 21 A3 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1229  8E2B 01 43 00     	ld bc,67
1230  8E2E ED B0        	ldir
1231  8E30 C9           	ret
1232  8E31
1233  8E31              ; -----------------------------------------------------------
1234  8E31              ;
1235  8E31              ;	27/04/23
1236  8E31              ;
1237  8E31              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1238  8E31              ;
1239  8E31              ;	Destruye: HL,BC,DE,A
1240  8E31
1241  8E31 21 A3 89     Borra_datos_entidad ld hl,Filas
1242  8E34 01 42 00     	ld bc,66
1243  8E37 AF           	xor a
1244  8E38 77           	ld (hl),a
1245  8E39 11 A4 89     	ld de,Filas+1
1246  8E3C ED B0        	ldir
1247  8E3E C9           	ret
1248  8E3F
1249  8E3F              ; -----------------------------------------------------------
1250  8E3F
1251  8E3F              ; Teclado.
1252  8E3F
1253  8E3F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1254  8E41 DB FE        	in a,($fe)
1255  8E43 E6 01        	and $01
1256  8E45 28 02        	jr z,1f
1257  8E47 18 F6        	jr Pulsa_ENTER
1258  8E49 C9           1 ret
1259  8E4A
1260  8E4A              ; **************************************************************************************************
1261  8E4A              ;
1262  8E4A              ; Temporización.
1263  8E4A
1264  8E4A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1265  8E4A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1266  8E4A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1267  8E4A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1268  8E4A
1269  8E4A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1270  8E4A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1271  8E4A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1272  8E4A
1273  8E4A              ; A partir de $4f61 no hace falta DELAY.
1274  8E4A
1275  8E4A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1276  8E4A
1277  8E4A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1278  8E4D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1279  8E4E 78           	LD A,B
1280  8E4F A7           	AND A
1281  8E50 20 FB        	JR NZ,wait
1282  8E52 C9           	RET
1283  8E53
1284  8E53              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1285  8E53              ;
1286  8E53              ;	5/3/23
1287  8E53              ;
1288  8E53              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1289  8E53
1290  8E53              Movimiento_Amadeus
1291  8E53
1292  8E53              ; Disparo.
1293  8E53
1294  8E53 3A 2E 8A     	ld a,(Disparo_Amadeus)
1295  8E56 A7           	and a
1296  8E57 20 02        	jr nz,1F
1297  8E59 18 15        	jr 2F
1298  8E5B
1299  8E5B 3E F7        1 ld a,$f7													; "5" para disparar.
1300  8E5D DB FE        	in a,($fe)
1301  8E5F E6 10        	and $10
1302  8E61
1303  8E61 F5           	push af
1304  8E62 CC AF 8E     	call z,Genera_disparo
1305  8E65 F1           	pop af
1306  8E66 20 08        	jr nz,2F
1307  8E68
1308  8E68 3A 2E 8A     	ld a,(Disparo_Amadeus)
1309  8E6B EE 01        	xor 1
1310  8E6D 32 2E 8A     	ld (Disparo_Amadeus),a
1311  8E70
1312  8E70 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1313  8E72 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1314  8E74 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1315  8E76 CC 39 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1316  8E79 3E F7        	ld a,$f7
1317  8E7B DB FE        	in a,($fe)
1318  8E7D E6 01        	and $01
1319  8E7F C8           	ret z
1320  8E80
1321  8E80 3E F7        	ld a,$f7
1322  8E82 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1323  8E84 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1324  8E86 CC 1B 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1325  8E89 C9           	ret
1326  8E8A
1327  8E8A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1328  8E8A              ;
1329  8E8A              ;	Rutina provisional para que los malotes cagen balas.
1330  8E8A
1331  8E8A              Detecta_disparo_entidad
1332  8E8A
1333  8E8A 3A 31 8A     	ld a,(Disparo_entidad)
1334  8E8D A7           	and a
1335  8E8E C8           	ret z
1336  8E8F
1337  8E8F              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1338  8E8F
1339  8E8F              ;	ld a,$7f				; Detecta SPACE.
1340  8E8F              ;	in a,($fe)
1341  8E8F              ;	and 1
1342  8E8F              ;	ret nz
1343  8E8F
1344  8E8F              ;	call Genera_disparo
1345  8E8F C9           	ret
1346  8E90
1347  8E90              ; ----------------------------------------------------------------------
1348  8E90              ;
1349  8E90              ;	3/8/23
1350  8E90
1351  8E90              Frame
1352  8E90
1353  8E90              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1354  8E90              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1355  8E90
1356  8E90              ; PINTAMOS.
1357  8E90
1358  8E90 3E 02            ld a,2
1359  8E92 D3 FE            out ($fe),a											; Rojo.
1360  8E94 CD B3 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1361  8E97 CD F2 96     	call Extrae_foto_disparos
1362  8E9A 3E 01            ld a,1
1363  8E9C D3 FE            out ($fe),a											; Azul.
1364  8E9E
1365  8E9E              ; Gestiona los álbumes de fotos.
1366  8E9E
1367  8E9E CD FD 90     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1368  8EA1
1369  8EA1 21 00 70     	ld hl,Album_de_fotos
1370  8EA4 22 FB 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
1371  8EA7              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
1372  8EA7
1373  8EA7 CD 5D 74     	call Gestiona_albumes_de_fotos
1374  8EAA
1375  8EAA              ; RELOJES.
1376  8EAA
1377  8EAA 21 2A 8A     	ld hl,Contador_de_frames
1378  8EAD 34           	inc (hl)											; 0 - 255
1379  8EAE
1380  8EAE C9           	ret
1381  8EAF
1382  8EAF              ; ---------------------------------------------------------------
1383  8EAF
1384  8EAF              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EAF              ; ******************************************************************************************************************************************************************************************
   2+ 8EAF              ;
   3+ 8EAF              ;   21/07/23
   4+ 8EAF              ;
   5+ 8EAF              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EAF              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EAF              ;
   8+ 8EAF              ;
   9+ 8EAF              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EAF              ;
  11+ 8EAF              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EAF              ;               _ hacen las entidades hacia abajo.
  13+ 8EAF              ;
  14+ 8EAF              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EAF              ;
  16+ 8EAF              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EAF              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EAF              ;
  19+ 8EAF              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EAF              ;           _ la bala.
  21+ 8EAF              ;
  22+ 8EAF              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EAF              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EAF              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EAF              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EAF              ;           _ en el momento de generarse la bala)).
  27+ 8EAF
  28+ 8EAF              Genera_disparo
  29+ 8EAF
  30+ 8EAF              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EAF              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EAF              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EAF              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EAF              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EAF              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EAF              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EAF
  38+ 8EAF              ; Exclusiones:
  39+ 8EAF
  40+ 8EAF 3A BB 89         ld a,(Vel_down)
  41+ 8EB2 47               ld b,a
  42+ 8EB3 3A 29 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EB6 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EB7 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EB8 3A E0 89         ld a,(Columnas)
  46+ 8EBB 47               ld b,a
  47+ 8EBC 3A A4 89         ld a,(Columns)
  48+ 8EBF B8               cp b
  49+ 8EC0 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EC1
  51+ 8EC1              ; ----- ----- -----
  52+ 8EC1
  53+ 8EC1 3A D1 89         ld a,(Ctrl_0)
  54+ 8EC4 CB 77            bit 6,a
  55+ 8EC6 20 06            jr nz,14F
  56+ 8EC8
  57+ 8EC8 3A AA 89         ld a,(Coordenada_y)
  58+ 8ECB FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8ECD D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8ECE
  61+ 8ECE 21 00 80     14 ld hl,Indice_disparo
  62+ 8ED1 3A AB 89         ld a,(CTRL_DESPLZ)
  63+ 8ED4 4F               ld c,a
  64+ 8ED5 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8ED7              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8ED7              ;                                            ""        ""       "f9", B="1"
  67+ 8ED7              ;                                            ""        ""       "fb", B="2"
  68+ 8ED7              ;                                            ""        ""       "fb", B="3"
  69+ 8ED7 A7               and a
  70+ 8ED8 28 10            jr z,1F
  71+ 8EDA E6 01            and 1
  72+ 8EDC C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EDD
  74+ 8EDD 79               ld a,c
  75+ 8EDE 16 F9            ld d,$f9
  76+ 8EE0 23           2 inc hl
  77+ 8EE1 23               inc hl
  78+ 8EE2 04               inc b
  79+ 8EE3 BA               cp d
  80+ 8EE4 28 04            jr z,1F
  81+ 8EE6 14               inc d
  82+ 8EE7 14               inc d
  83+ 8EE8 18 F6            jr 2B
  84+ 8EEA
  85+ 8EEA CD 66 8D     1 call Extrae_address
  86+ 8EED E5               push hl
  87+ 8EEE FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EF0 DD 21 34 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EF4
  90+ 8EF4              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EF4              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EF4
  93+ 8EF4 3A D1 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EF7 CB 77            bit 6,a
  95+ 8EF9 20 04            jr nz,19F
  96+ 8EFB
  97+ 8EFB AF               xor a
  98+ 8EFC 32 31 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EFF
 100+ 8EFF 3A B7 89     19 ld a,(Cuad_objeto)
 101+ 8F02 FE 02            cp 2
 102+ 8F04 38 66            jr c,3F
 103+ 8F06 28 64            jr z,3F
 104+ 8F08
 105+ 8F08              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F08
 107+ 8F08 E6 01            and 1
 108+ 8F0A 28 30            jr z,4F
 109+ 8F0C
 110+ 8F0C              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F0C              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F0C              ;
 113+ 8F0C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F0C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F0C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F0C
 117+ 8F0C 2A A5 89     	ld hl,(Posicion_actual)
 118+ 8F0F
 119+ 8F0F              ;   Amadeus o entidad ???.
 120+ 8F0F
 121+ 8F0F 3A D1 89         ld a,(Ctrl_0)
 122+ 8F12 CB 77            bit 6,a
 123+ 8F14 28 0A            jr z,8F
 124+ 8F16
 125+ 8F16              ; 	Dispara Amadeus.
 126+ 8F16
 127+ 8F16 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F18 CD A4 96         call PreviousScan
 129+ 8F1B CD A4 96         call PreviousScan
 130+ 8F1E
 131+ 8F1E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F1E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F1E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F1E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F1E
 136+ 8F1E 18 11            jr 10F
 137+ 8F20
 138+ 8F20              ; 	Dispara Entidad.
 139+ 8F20
 140+ 8F20 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F23              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F23
 143+ 8F23              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F23              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F23
 146+ 8F23 C5               push bc
 147+ 8F24 06 10            ld b,16
 148+ 8F26 CD 95 96     9 call NextScan
 149+ 8F29 10 FB            djnz 9B
 150+ 8F2B C1               pop bc
 151+ 8F2C CD 96 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F2F 18 06            jr 17F
 153+ 8F31
 154+ 8F31              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F31              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F31              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F31              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F31
 159+ 8F31 CD 96 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F34 CD 0B 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F37              ;                                                      ; _al generar el disparo.
 162+ 8F37
 163+ 8F37              ; 	LLegados a este punto tendremos:
 164+ 8F37              ;
 165+ 8F37              ;       Puntero_objeto_disparo en IY.
 166+ 8F37              ;       Rutinas_de_impresion en IX.
 167+ 8F37              ;       Puntero_de_impresion en HL.
 168+ 8F37              ;       Impacto/Dirección en BC.
 169+ 8F37
 170+ 8F37 CD 9E 8F     17 call Almacena_disparo
 171+ 8F3A 18 52            jr 6F                                             ; RET.
 172+ 8F3C
 173+ 8F3C              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F3C              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F3C              ;
 176+ 8F3C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F3C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F3C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F3C
 180+ 8F3C 2A A5 89     4 ld hl,(Posicion_actual)
 181+ 8F3F
 182+ 8F3F              ;   Amadeus o entidad ???.
 183+ 8F3F
 184+ 8F3F 3A D1 89         ld a,(Ctrl_0)
 185+ 8F42 CB 77            bit 6,a
 186+ 8F44 28 0A            jr z,11F
 187+ 8F46
 188+ 8F46              ; 	Dispara Amadeus.
 189+ 8F46
 190+ 8F46 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F48 CD A4 96         call PreviousScan
 192+ 8F4B CD A4 96         call PreviousScan
 193+ 8F4E
 194+ 8F4E              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F4E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F4E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F4E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F4E
 199+ 8F4E 18 11            jr 13F
 200+ 8F50
 201+ 8F50              ; 	Dispara Entidad.
 202+ 8F50
 203+ 8F50 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F53              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F53
 206+ 8F53              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F53              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F53
 209+ 8F53 C5               push bc
 210+ 8F54 06 10            ld b,16
 211+ 8F56 CD 95 96     12 call NextScan
 212+ 8F59 10 FB            djnz 12B
 213+ 8F5B C1               pop bc
 214+ 8F5C
 215+ 8F5C CD 8F 8F         call Ajusta_disparo_parte_derecha
 216+ 8F5F 18 06            jr 18F
 217+ 8F61
 218+ 8F61              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F61              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F61              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F61              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F61
 223+ 8F61 CD 8F 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F64 CD 0B 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F67              ;                                                       ; _al generar el disparo.
 226+ 8F67
 227+ 8F67              ; LLegados a este punto tendremos:
 228+ 8F67              ;
 229+ 8F67              ;       Puntero_objeto_disparo en IY.
 230+ 8F67              ;       Rutinas_de_impresion en IX.
 231+ 8F67              ;       Puntero_de_impresion en HL.
 232+ 8F67              ;       Impacto/Dirección en BC.
 233+ 8F67
 234+ 8F67 CD 9E 8F     18 call Almacena_disparo
 235+ 8F6A 18 22            jr 6F                                               ; RET.
 236+ 8F6C
 237+ 8F6C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F6C
 239+ 8F6C 28 11        3 jr z,5F
 240+ 8F6E
 241+ 8F6E              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F6E              ;
 243+ 8F6E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F6E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F6E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F6E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F6E
 248+ 8F6E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F6E              ;	   ""        ""       "f9", B="1"
 250+ 8F6E              ;	   ""        ""       "fb", B="2"
 251+ 8F6E              ; 	   ""        ""       "fb", B="3"
 252+ 8F6E
 253+ 8F6E 2A A5 89     	ld hl,(Posicion_actual)
 254+ 8F71 CD 95 96     	call NextScan
 255+ 8F74
 256+ 8F74              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F74              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F74              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F74              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F74
 261+ 8F74 CD 96 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F77
 263+ 8F77              ; 	No se produce impacto. B="$80"
 264+ 8F77              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F77
 266+ 8F77 01 80 80         ld bc,$8080
 267+ 8F7A
 268+ 8F7A              ; 	LLegados a este punto tendremos:
 269+ 8F7A              ;
 270+ 8F7A              ;       Puntero_objeto_disparo en IY.
 271+ 8F7A              ;       Rutinas_de_impresion en IX.
 272+ 8F7A              ;       Puntero_de_impresion en HL.
 273+ 8F7A              ;       Impacto/Dirección en BC.
 274+ 8F7A
 275+ 8F7A CD 9E 8F         call Almacena_disparo
 276+ 8F7D 18 0F            jr 6F                                           ; RET.
 277+ 8F7F
 278+ 8F7F              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F7F              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F7F              ;
 281+ 8F7F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F7F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F7F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F7F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F7F
 286+ 8F7F 2A A5 89     5 ld hl,(Posicion_actual)
 287+ 8F82 CD 95 96     	call NextScan
 288+ 8F85
 289+ 8F85              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F85              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F85              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F85              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F85
 294+ 8F85 CD 8F 8F         call Ajusta_disparo_parte_derecha
 295+ 8F88
 296+ 8F88              ; 	No se produce impacto. B="$80"
 297+ 8F88              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F88
 299+ 8F88 01 80 80     15 ld bc,$8080
 300+ 8F8B
 301+ 8F8B              ; 	LLegados a este punto tendremos:
 302+ 8F8B              ;
 303+ 8F8B              ;       Puntero_objeto_disparo en IY.
 304+ 8F8B              ;       Rutinas_de_impresion en IX.
 305+ 8F8B              ;       Puntero_de_impresion en HL.
 306+ 8F8B              ;       Impacto/Dirección en BC.
 307+ 8F8B
 308+ 8F8B CD 9E 8F         call Almacena_disparo
 309+ 8F8E
 310+ 8F8E C9           6 ret
 311+ 8F8F
 312+ 8F8F              ; ----------------------------------------------------------------
 313+ 8F8F              ;
 314+ 8F8F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F8F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F8F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F8F
 318+ 8F8F 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F90 FE 02            cp 2
 320+ 8F92 38 01            jr c,1F
 321+ 8F94 23               inc hl
 322+ 8F95 C9           1 ret
 323+ 8F96
 324+ 8F96 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F97 FE 01        	cp 1
 326+ 8F99 20 01        	jr nz,1F
 327+ 8F9B 2B           	dec hl
 328+ 8F9C 2B           1 dec hl
 329+ 8F9D C9               ret
 330+ 8F9E
 331+ 8F9E              ; ----------------------------------------------------------------
 332+ 8F9E              ;
 333+ 8F9E              ;   25/02/23
 334+ 8F9E              ;
 335+ 8F9E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F9E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F9E              ;
 338+ 8F9E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F9E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F9E
 341+ 8F9E              Almacena_disparo
 342+ 8F9E
 343+ 8F9E E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F9F F1               pop af
 345+ 8FA0 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FA1
 347+ 8FA1 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FA2 E6 01            and 1
 349+ 8FA4 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FA6              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FA6              ; 	Dispara AMADEUS.
 352+ 8FA6
 353+ 8FA6              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FA6              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FA6              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FA6              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FA6
 358+ 8FA6 C5               push bc
 359+ 8FA7 01 00 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FAA 2A 1A 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FAD A7               and a
 362+ 8FAE ED 42            sbc hl,bc
 363+ 8FB0 CC 2D 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FB3 C1               pop bc
 365+ 8FB4 28 54            jr z,4F
 366+ 8FB6
 367+ 8FB6 2A 1A 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FB9 23               inc hl
 369+ 8FBA 23               inc hl
 370+ 8FBB 22 1A 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FBE              ;                                                   ; _ Disparo_(+1).
 372+ 8FBE 18 18            jr 2F
 373+ 8FC0
 374+ 8FC0              ; Dispara una entidad.
 375+ 8FC0
 376+ 8FC0 C5           1 push bc
 377+ 8FC1 01 28 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FC4 2A 18 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FC7 A7               and a
 380+ 8FC8 ED 42            sbc hl,bc
 381+ 8FCA CC 26 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FCD C1               pop bc
 383+ 8FCE 28 3A            jr z,4F
 384+ 8FD0
 385+ 8FD0 2A 18 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FD3 23               inc hl
 387+ 8FD4 23               inc hl
 388+ 8FD5 22 18 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FD8              ;                                                   ; _ Disparo_(+1).
 390+ 8FD8 CD 66 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FDB              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FDB              ;
 393+ 8FDB              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FDB              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FDB              ;                                                     Puntero_de_impresion en HL.
 396+ 8FDB              ;                                                     Impacto/Dirección en BC.
 397+ 8FDB
 398+ 8FDB 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FDC 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FDD 23               inc hl                                          ; _ al siguiente.
 401+ 8FDE A7               and a
 402+ 8FDF 20 C0            jr nz,3B
 403+ 8FE1
 404+ 8FE1 08               ex af,af
 405+ 8FE2 ED 73 F7 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FE6 F9               ld sp,hl
 407+ 8FE7
 408+ 8FE7 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FE9 F5               push af                                         ; Puntero de impresión.
 410+ 8FEA FD E5            push iy                                         ; Puntero objeto.
 411+ 8FEC C5               push bc                                         ; Control.
 412+ 8FED
 413+ 8FED ED 7B F7 89      ld sp,(Stack)
 414+ 8FF1
 415+ 8FF1              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FF1
 417+ 8FF1 21 E6 89     	ld hl,Ctrl_1
 418+ 8FF4 CB C6        	set 0,(hl)
 419+ 8FF6
 420+ 8FF6 DD E5        	push ix
 421+ 8FF8 E1               pop hl
 422+ 8FF9 F5               push af
 423+ 8FFA DD E1            pop ix
 424+ 8FFC
 425+ 8FFC CD A0 7F     	call Guarda_foto_registros
 426+ 8FFF
 427+ 8FFF 21 E6 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9002 CB 86        	res 0,(hl)
 429+ 9004
 430+ 9004              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9004              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9004
 433+ 9004 CD 2D 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9007 CD 26 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 900A
 436+ 900A C9           4 ret
 437+ 900B
 438+ 900B              ; ----------------------------------------------------------------
 439+ 900B              ;
 440+ 900B              ;   4/3/23
 441+ 900B              ;
 442+ 900B              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 900B              ;   _ al generarse el disparo.
 444+ 900B              ;
 445+ 900B              ;       "$80" ..... No se produce colisión.
 446+ 900B              ;       "$81" ..... Se produce colisión.
 447+ 900B              ;
 448+ 900B              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 900B              ;         _ que forman el disparo.
 450+ 900B
 451+ 900B
 452+ 900B              Comprueba_Colision
 453+ 900B
 454+ 900B              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 900B
 456+ 900B FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 900D E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 900E
 459+ 900E CD 44 90         call Modifica_H_Velocidad_disparo
 460+ 9011
 461+ 9011 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9012 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9014 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9016
 465+ 9016 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9018 CD 34 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 901B
 468+ 901B 7B               ld a,e
 469+ 901C E6 01            and 1
 470+ 901E 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9020              ;                                                  ; _ para activar IMPACTO.
 472+ 9020 E1               pop hl
 473+ 9021 E5               push hl
 474+ 9022 CD 95 96         call NextScan
 475+ 9025
 476+ 9025 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9026 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9028 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 902A              ;                                                  ; _ 2º scanline si esto es así.
 480+ 902A 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 902C CD 34 90         call Bucle_2
 482+ 902F
 483+ 902F 43           1 ld b,e
 484+ 9030 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9031 FD E1            pop iy
 486+ 9033 C9               ret
 487+ 9034
 488+ 9034              ; ---------- ----------
 489+ 9034
 490+ 9034 06 02        Bucle_2 ld b,2
 491+ 9036 FD 7E 00     2 ld a,(iy)
 492+ 9039 A6               and (hl)
 493+ 903A 28 02            jr z,1F
 494+ 903C 1E 81            ld e,$81
 495+ 903E 23           1 inc hl
 496+ 903F FD 23            inc iy
 497+ 9041 10 F3            djnz 2B
 498+ 9043 C9               ret
 499+ 9044
 500+ 9044              ; ---------- ----------
 501+ 9044              ;
 502+ 9044              ;   21/7/23
 503+ 9044
 504+ 9044              Modifica_H_Velocidad_disparo
 505+ 9044
 506+ 9044 3A 29 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9047 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9049 D0               ret nc                                         ; _ incrementamos H.
 509+ 904A 24               inc h
 510+ 904B
 511+ 904B C9               ret
 512+ 904C
 513+ 904C              ; -------------------------------------------------------------------------------------------------------------
 514+ 904C              ;
 515+ 904C              ;   11/04/23
 516+ 904C              ;
 517+ 904C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 904C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 904C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 904C              ;
 521+ 904C              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 904C
 523+ 904C              Compara_coordenadas_X
 524+ 904C
 525+ 904C              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 904C              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 904C
 528+ 904C              ; Preparamos registros:
 529+ 904C
 530+ 904C 21 A9 89         ld hl,Filas+6
 531+ 904F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9050 23               inc hl
 533+ 9051 23               inc hl
 534+ 9052 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9053 43               ld b,e
 536+ 9054
 537+ 9054 21 B7 89         ld hl,Filas+20
 538+ 9057 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9058 21 24 8A         ld hl,Coordenadas_X_Entidad
 540+ 905B CD 77 92         call Guarda_coordenadas_X
 541+ 905E
 542+ 905E              ; Preparamos registros:
 543+ 905E
 544+ 905E 21 9A 85         ld hl,Amadeus_db+6
 545+ 9061 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9062 23               inc hl
 547+ 9063 23               inc hl
 548+ 9064 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9065 7B               ld a,e
 550+ 9066 08               ex af,af'
 551+ 9067 21 A8 85         ld hl,Amadeus_db+20
 552+ 906A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 906B 21 21 8A         ld hl,Coordenadas_X_Amadeus
 554+ 906E CD 77 92         call Guarda_coordenadas_X
 555+ 9071
 556+ 9071              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9071              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9071
 559+ 9071 04               inc b
 560+ 9072 05               dec b
 561+ 9073 28 04            jr z,1F
 562+ 9075 06 03            ld b,3
 563+ 9077 18 02            jr 2F
 564+ 9079 06 02        1 ld b,2
 565+ 907B 08           2 ex af,af'
 566+ 907C 3C               inc a
 567+ 907D 3D               dec a
 568+ 907E 28 04            jr z,5F
 569+ 9080 0E 03            ld c,3
 570+ 9082 18 02            jr 6F
 571+ 9084 0E 02        5 ld c,2
 572+ 9086 79           6 ld a,c
 573+ 9087 08               ex af,af'
 574+ 9088 11 24 8A         ld de,Coordenadas_X_Entidad
 575+ 908B 1A           4 ld a,(de)
 576+ 908C 21 21 8A         ld hl,Coordenadas_X_Amadeus
 577+ 908F BE           3 cp (hl)
 578+ 9090 28 0E            jr z,7F
 579+ 9092 23               inc hl
 580+ 9093 0D               dec c
 581+ 9094 20 F9            jr nz,3B
 582+ 9096 13               inc de
 583+ 9097 08               ex af,af'
 584+ 9098 4F               ld c,a
 585+ 9099 08               ex af,af'
 586+ 909A 10 EF            djnz 4B
 587+ 909C
 588+ 909C              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 909C
 590+ 909C CD B3 92     8 call Limpia_Coordenadas_X
 591+ 909F C9               ret
 592+ 90A0
 593+ 90A0 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90A2 32 BC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90A5 21 1C 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90A8 CB D6            set 2,(hl)
 597+ 90AA 18 F0            jr 8B
 598+ 90AC
 599+ 90AC              ; -----------------------------------------------------------------------
 600+ 90AC              ;
 601+ 90AC              ;   17/04/23
 602+ 90AC              ;
 603+ 90AC
 604+ 90AC              Detecta_colision_nave_entidad
 605+ 90AC
 606+ 90AC              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90AC
 608+ 90AC 2A A5 89         ld hl,(Posicion_actual)
 609+ 90AF CD F0 95         call Calcula_puntero_de_impresion
 610+ 90B2
 611+ 90B2              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90B2              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90B2
 614+ 90B2 DD E5            push ix
 615+ 90B4 E1               pop hl
 616+ 90B5 E5               push hl
 617+ 90B6
 618+ 90B6              ; ----- ----- -----
 619+ 90B6 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90B8 06 0A            ld b,10
 621+ 90BA CD EA 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90BD 7B               ld a,e
 623+ 90BE FE 05            cp 5
 624+ 90C0 38 0E            jr c,3F
 625+ 90C2
 626+ 90C2              ; LLegados a este punto:
 627+ 90C2              ;
 628+ 90C2              ;   HAY COLISIÓN !!!!!.
 629+ 90C2              ;
 630+ 90C2              ;   .db (Impacto) de Amadeus a "1".
 631+ 90C2              ;   SET el bit3 de (Impacto2).
 632+ 90C2              ;
 633+ 90C2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90C2
 635+ 90C2 21 AD 85         ld hl,Amadeus_db+25
 636+ 90C5 36 01            ld (hl),1
 637+ 90C7 21 1C 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90CA CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90CC CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90CE 18 18            jr 1F
 641+ 90D0
 642+ 90D0              ; -----
 643+ 90D0
 644+ 90D0 E1           3 pop hl
 645+ 90D1 CD 95 96         call NextScan
 646+ 90D4 E5               push hl
 647+ 90D5 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90D6 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90D8 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90DA 30 0C            jr nc,1F
 651+ 90DC              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90DC 10 DC            djnz 2B
 653+ 90DE
 654+ 90DE              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90DE
 656+ 90DE              ; LLegados a este punto:
 657+ 90DE              ;
 658+ 90DE              ;   NO HAY COLISIÓN !!!!!.
 659+ 90DE              ;
 660+ 90DE              ;   .db (Impacto) de Amadeus a "0".
 661+ 90DE              ;   RES el bit2 de (Impacto2).
 662+ 90DE              ;
 663+ 90DE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90DE              ;   Lo colocamos a "0".
 665+ 90DE
 666+ 90DE 21 1C 8A         ld hl,Impacto2
 667+ 90E1 CB 96            res 2,(hl)
 668+ 90E3 2A 1D 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90E6 36 00            ld (hl),0
 670+ 90E8
 671+ 90E8 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90E9 C9               ret
 673+ 90EA
 674+ 90EA               ; ---------- ----------
 675+ 90EA
 676+ 90EA C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90EB 3A A4 89         ld a,(Columns)
 678+ 90EE 47               ld b,a
 679+ 90EF FD 7E 00     2 ld a,(iy)
 680+ 90F2 BE               cp (hl)
 681+ 90F3 28 01            jr z,1F
 682+ 90F5
 683+ 90F5 1C               inc e
 684+ 90F6
 685+ 90F6 23           1 inc hl
 686+ 90F7 FD 23            inc iy
 687+ 90F9 10 F4            djnz 2B
 688+ 90FB C1               pop bc
 689+ 90FC C9               ret
 690+ 90FD
 691+ 90FD              ; -------------------------------------------------------------------------------------------------------------
 692+ 90FD              ;
 693+ 90FD              ;   13/03/23
 694+ 90FD              ;
 695+ 90FD              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90FD              ;
 697+ 90FD              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90FD
 699+ 90FD 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9100 7E               ld a,(hl)
 701+ 9101 A7               and a
 702+ 9102 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9103
 704+ 9103 44               ld b,h
 705+ 9104 4D               ld c,l
 706+ 9105 2A FD 89         ld hl,(Stack_snapshot_disparos)
 707+ 9108 E5               push hl
 708+ 9109 A7               and a
 709+ 910A ED 42            sbc hl,bc
 710+ 910C E5               push hl
 711+ 910D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 910E
 713+ 910E E1               pop hl
 714+ 910F 54               ld d,h
 715+ 9110 5D               ld e,l
 716+ 9111 1B               dec de
 717+ 9112 ED B8            lddr                                                ; Limpiamos.
 718+ 9114
 719+ 9114 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 9117 22 FD 89         ld (Stack_snapshot_disparos),hl
 721+ 911A
 722+ 911A C9               ret
 723+ 911B
 724+ 911B              ; -------------------------------------------------------------------------------------------------------------
 725+ 911B              ;
 726+ 911B              ;   18/07/23
 727+ 911B              ;
 728+ 911B
 729+ 911B              Motor_de_disparos
 730+ 911B
 731+ 911B              ; Gestiona DISPAROS DE AMADEUS.
 732+ 911B
 733+ 911B 01 12 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 911E 2A 1A 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9121
 736+ 9121 CD 66 8D     2 call Extrae_address
 737+ 9124 7E               ld a,(hl)
 738+ 9125 A7               and a
 739+ 9126 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9128
 741+ 9128              ; ----- ----- ----- ----- ----- -----
 742+ 9128
 743+ 9128 C5               push bc
 744+ 9129 CD ED 91         call foto_disparo_a_borrar
 745+ 912C
 746+ 912C              ; Existe colisión con este disparo???
 747+ 912C
 748+ 912C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 912D 7E               ld a,(hl)
 750+ 912E 2B               dec hl
 751+ 912F E6 01            and 1
 752+ 9131 28 1D            jr z,9F
 753+ 9133
 754+ 9133              ;   En este punto:
 755+ 9133              ;
 756+ 9133              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9133              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9133              ;   _con la entidad).
 759+ 9133              ;
 760+ 9133              ;   Disparo_2A defw 0                                ; Control.
 761+ 9133              ;    defw 0                                          ; Puntero objeto.
 762+ 9133              ;    defw 0                                          ; Puntero de impresión.
 763+ 9133              ;    defw 0                                          ; Rutina de impresión.
 764+ 9133
 765+ 9133 E5               push hl
 766+ 9134
 767+ 9134 06 04            ld b,4
 768+ 9136 23           19 inc hl
 769+ 9137 10 FD            djnz 19B
 770+ 9139
 771+ 9139 CD 66 8D         call Extrae_address
 772+ 913C CD 17 9D         call Genera_coordenadas_disparo
 773+ 913F
 774+ 913F              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 913F
 776+ 913F 21 1F 8A         ld hl,Coordenadas_disparo_certero
 777+ 9142 72               ld (hl),d
 778+ 9143 23               inc hl
 779+ 9144 73               ld (hl),e
 780+ 9145
 781+ 9145              ; Elimino el disparo de la base de datos.
 782+ 9145
 783+ 9145 E1               pop hl
 784+ 9146 CD 6C 92         call Elimina_disparo_de_base_de_datos
 785+ 9149 21 1C 8A         ld hl,Impacto2
 786+ 914C CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 914E
 788+ 914E 18 06            jr 11F
 789+ 9150
 790+ 9150 CD 16 92     9 call Mueve_disparo
 791+ 9153 CD ED 91         call foto_disparo_a_borrar
 792+ 9156
 793+ 9156 C1           11 pop bc
 794+ 9157 18 04            jr 7F
 795+ 9159
 796+ 9159              ; ----- ----- ----- ----- ----- -----
 797+ 9159
 798+ 9159 ED 42        1 sbc hl,bc
 799+ 915B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 915D
 801+ 915D 2A 1A 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9160 23               inc hl
 803+ 9161 23               inc hl
 804+ 9162 22 1A 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9165 18 BA            jr 2B
 806+ 9167
 807+ 9167 CD 2D 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 916A              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 916A
 810+ 916A              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 916A
 812+ 916A 01 7A 85         ld bc,Disparo_11
 813+ 916D 2A 18 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9170
 815+ 9170 CD 66 8D     5 call Extrae_address
 816+ 9173 7E               ld a,(hl)
 817+ 9174 A7               and a
 818+ 9175 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9177
 820+ 9177              ; ----- ----- ----- ----- ----- -----
 821+ 9177
 822+ 9177 C5               push bc
 823+ 9178 CD ED 91         call foto_disparo_a_borrar
 824+ 917B
 825+ 917B              ; Existe colisión con este disparo???
 826+ 917B
 827+ 917B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 917C 7E               ld a,(hl)
 829+ 917D 2B               dec hl
 830+ 917E E6 01            and 1
 831+ 9180 28 4D            jr z,10F
 832+ 9182
 833+ 9182              ;! La colisión se produce con Amadeus???
 834+ 9182              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9182
 836+ 9182 E5               push hl
 837+ 9183
 838+ 9183 06 04            ld b,4
 839+ 9185 23           16 inc hl
 840+ 9186 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9188
 842+ 9188 CD 66 8D         call Extrae_address
 843+ 918B CD 17 9D         call Genera_coordenadas_disparo
 844+ 918E
 845+ 918E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 918F FE 16            cp $16
 847+ 9191 38 2A            jr c,15F
 848+ 9193
 849+ 9193
 850+ 9193              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9193
 852+ 9193 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9194
 854+ 9194              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9194
 856+ 9194
 857+ 9194 2A 27 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9197
 859+ 9197              ; Coordenada X de Amadeus en D.
 860+ 9197
 861+ 9197 7D               ld a,l
 862+ 9198 E6 1F            and $1F
 863+ 919A 57               ld d,a
 864+ 919B
 865+ 919B 21 9C 85         ld hl,Amadeus_db+8
 866+ 919E 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 919F
 868+ 919F 21 21 8A         ld hl,Coordenadas_X_Amadeus
 869+ 91A2 CD 77 92         call Guarda_coordenadas_X
 870+ 91A5
 871+ 91A5 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91A6
 873+ 91A6              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91A6
 875+ 91A6 06 02            ld b,2
 876+ 91A8 C5           20 push bc
 877+ 91A9
 878+ 91A9 06 03            ld b,3
 879+ 91AB 21 21 8A         ld hl,Coordenadas_X_Amadeus
 880+ 91AE 7E           18 ld a,(hl)
 881+ 91AF BA               cp d
 882+ 91B0 20 04            jr nz,17F
 883+ 91B2
 884+ 91B2              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91B2
 886+ 91B2 C1               pop bc
 887+ 91B3 E1               pop hl
 888+ 91B4 18 0D            jr 14F
 889+ 91B6
 890+ 91B6 23           17 inc hl
 891+ 91B7 10 F5            djnz 18B
 892+ 91B9
 893+ 91B9 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91BA
 895+ 91BA C1               pop bc
 896+ 91BB 10 EB            djnz 20B
 897+ 91BD
 898+ 91BD
 899+ 91BD              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91BD              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91BD
 902+ 91BD E1           15 pop hl
 903+ 91BE 23               inc hl
 904+ 91BF 35               dec (hl)
 905+ 91C0 2B               dec hl
 906+ 91C1 18 0C            jr 10F
 907+ 91C3
 908+ 91C3              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91C3              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91C3
 911+ 91C3 E5           14 push hl
 912+ 91C4 CD 6C 92         call Elimina_disparo_de_base_de_datos
 913+ 91C7 21 1C 8A         ld hl,Impacto2
 914+ 91CA CB CE            set 1,(hl)
 915+ 91CC E1               pop hl
 916+ 91CD 18 06            jr 12F
 917+ 91CF
 918+ 91CF              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91CF
 920+ 91CF CD 16 92     10 call Mueve_disparo
 921+ 91D2 CD ED 91         call foto_disparo_a_borrar
 922+ 91D5 C1           12 pop bc
 923+ 91D6
 924+ 91D6 18 04            jr 8F
 925+ 91D8
 926+ 91D8              ; ----- ----- ----- ----- ----- -----
 927+ 91D8
 928+ 91D8 ED 42        4 sbc hl,bc
 929+ 91DA 28 0A            jr z,6F
 930+ 91DC
 931+ 91DC 2A 18 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91DF 23               inc hl
 933+ 91E0 23               inc hl
 934+ 91E1 22 18 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91E4 18 8A            jr 5B
 936+ 91E6
 937+ 91E6 CD 26 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91E9 CD B3 92         call Limpia_Coordenadas_X
 939+ 91EC C9               ret
 940+ 91ED
 941+ 91ED              ; ------------------------------------------------------------------
 942+ 91ED
 943+ 91ED              foto_disparo_a_borrar
 944+ 91ED
 945+ 91ED 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91EE A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91EF C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91F0
 949+ 91F0 E5               push hl
 950+ 91F1 23               inc hl
 951+ 91F2 23               inc hl
 952+ 91F3 ED 73 F7 89      ld (Stack),sp
 953+ 91F7 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91F8 FD E1            pop iy
 955+ 91FA DD E1            pop ix
 956+ 91FC E1               pop hl
 957+ 91FD ED 7B F7 89      ld sp,(Stack)
 958+ 9201 3A E6 89         ld a,(Ctrl_1)
 959+ 9204 CB C7            set 0,a
 960+ 9206 32 E6 89         ld (Ctrl_1),a
 961+ 9209 CD A0 7F         call Guarda_foto_registros
 962+ 920C 3A E6 89         ld a,(Ctrl_1)
 963+ 920F CB 87            res 0,a
 964+ 9211 32 E6 89         ld (Ctrl_1),a
 965+ 9214 E1               pop hl
 966+ 9215 C9               ret
 967+ 9216
 968+ 9216              ;---------------------------------------------------
 969+ 9216              ;
 970+ 9216              ;   18/07/23
 971+ 9216              ;
 972+ 9216
 973+ 9216              Mueve_disparo
 974+ 9216
 975+ 9216              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9216              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9216              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9216
 979+ 9216 E5               push hl
 980+ 9217
 981+ 9217 7E               ld a,(hl)
 982+ 9218
 983+ 9218 06 04            ld b,4
 984+ 921A 23           1 inc hl
 985+ 921B 10 FD            djnz 1B
 986+ 921D
 987+ 921D              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 921D
 989+ 921D CD 66 8D         call Extrae_address
 990+ 9220
 991+ 9220 E6 01            and 1
 992+ 9222 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9224
 994+ 9224              ; Disparo hacia arriba, (Amadeus).
 995+ 9224
 996+ 9224              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9224              ; _ de la dificultad.
 998+ 9224
 999+ 9224 CD A4 96         call PreviousScan
1000+ 9227 CD A4 96         call PreviousScan
1001+ 922A CD A4 96         call PreviousScan
1002+ 922D CD A4 96         call PreviousScan
1003+ 9230
1004+ 9230              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9230
1006+ 9230 7C               ld a,h
1007+ 9231 FE 40            cp $40
1008+ 9233 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9235
1010+ 9235              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9235
1012+ 9235 EB               ex de,hl
1013+ 9236 06 04            ld b,4
1014+ 9238 2B           6 dec hl
1015+ 9239 10 FD            djnz 6B
1016+ 923B
1017+ 923B CD 6C 92         call Elimina_disparo_de_base_de_datos
1018+ 923E E1               pop hl
1019+ 923F 18 10            jr 7F
1020+ 9241
1021+ 9241              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9241              ; HL contiene el puntero de impresión del disparo.
1023+ 9241              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9241
1025+ 9241 D5           3 push de
1026+ 9242 C5               push bc
1027+ 9243
1028+ 9243 CD 0B 90         call Comprueba_Colision
1029+ 9246
1030+ 9246              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9246
1032+ 9246 78               ld a,b
1033+ 9247
1034+ 9247 C1               pop bc
1035+ 9248 D1               pop de
1036+ 9249
1037+ 9249 EB               ex de,hl
1038+ 924A
1039+ 924A 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 924B 23               inc hl                                      ; _ movimiento.
1041+ 924C 72               ld (hl),d
1042+ 924D
1043+ 924D E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 924E
1045+ 924E 23               inc hl                                      ; _ en curso.
1046+ 924F 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9250 2B               dec hl
1048+ 9251
1049+ 9251 C9           7 ret
1050+ 9252
1051+ 9252              ; Disparo hacia abajo, (Entidad).
1052+ 9252
1053+ 9252 3A 29 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 9255 47               ld b,a
1055+ 9256
1056+ 9256 CD 95 96     4 call NextScan
1057+ 9259 10 FB            djnz 4B
1058+ 925B
1059+ 925B              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 925B
1061+ 925B 7C               ld a,h
1062+ 925C FE 58            cp $58
1063+ 925E 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9260
1065+ 9260 EB               ex de,hl
1066+ 9261 06 04            ld b,4
1067+ 9263 2B           5 dec hl
1068+ 9264 10 FD            djnz 5B
1069+ 9266
1070+ 9266 CD 6C 92         call Elimina_disparo_de_base_de_datos
1071+ 9269 E1               pop hl
1072+ 926A 18 E5            jr 7B
1073+ 926C
1074+ 926C              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 926C
1076+ 926C 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 926F AF               xor a
1078+ 9270 77               ld (hl),a
1079+ 9271 54               ld d,h
1080+ 9272 5D               ld e,l
1081+ 9273 13               inc de
1082+ 9274 ED B0            ldir
1083+ 9276 C9               ret
1084+ 9277
1085+ 9277              ; -----------------------------------------------------------------
1086+ 9277              ;
1087+ 9277              ;   19/7/23
1088+ 9277              ;
1089+ 9277              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9277              ;
1091+ 9277              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9277              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9277              ;
1094+ 9277              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9277              ;
1096+ 9277              ;   INPUTS:
1097+ 9277              ;
1098+ 9277              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9277              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9277
1101+ 9277              ;   MODIFICA: A, HL, BC y DE.
1102+ 9277
1103+ 9277              Guarda_coordenadas_X
1104+ 9277
1105+ 9277 7B               ld a,e
1106+ 9278 A7               and a
1107+ 9279 20 04            jr nz,1F
1108+ 927B
1109+ 927B 06 02            ld b,2
1110+ 927D 18 02            jr 2F
1111+ 927F
1112+ 927F 06 03        1 ld b,3
1113+ 9281 72           2 ld (hl),d
1114+ 9282 23               inc hl
1115+ 9283 14               inc d
1116+ 9284 10 FB            djnz 2B
1117+ 9286
1118+ 9286 C9               ret
1119+ 9287
1120+ 9287              ; -----------------------------------------------------------------
1121+ 9287              ;
1122+ 9287              ;   12/04/23
1123+ 9287              ;
1124+ 9287
1125+ 9287 3A 1C 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 928A A7               and a
1127+ 928B C8               ret z
1128+ 928C
1129+ 928C FE 04            cp 4
1130+ 928E 20 09            jr nz,1F
1131+ 9290
1132+ 9290
1133+ 9290              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9290
1135+ 9290 CD AC 90         call Detecta_colision_nave_entidad
1136+ 9293
1137+ 9293 21 1C 8A         ld hl,Impacto2
1138+ 9296 CB 5E            bit 3,(hl)
1139+ 9298 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9299
1141+ 9299              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9299              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9299
1144+ 9299 21 1C 8A     1 ld hl,Impacto2
1145+ 929C CB 4E            bit 1,(hl)
1146+ 929E 28 07            jr z,2F
1147+ 92A0
1148+ 92A0 21 AD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92A3 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92A5 18 0B            jr 3F
1151+ 92A7
1152+ 92A7 21 1C 8A     2 ld hl,Impacto2
1153+ 92AA CB 46            bit 0,(hl)
1154+ 92AC C8               ret z
1155+ 92AD
1156+ 92AD              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92AD
1158+ 92AD 21 E6 89         ld hl,Ctrl_1
1159+ 92B0 CB D6            set 2,(hl)
1160+ 92B2
1161+ 92B2 C9           3 ret
1162+ 92B3
1163+ 92B3              ; -----------------------------------------------------------------
1164+ 92B3              ;
1165+ 92B3              ;   19/7/23
1166+ 92B3              ;
1167+ 92B3              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92B3
1169+ 92B3 AF           Limpia_Coordenadas_X xor a
1170+ 92B4 06 06            ld b,6
1171+ 92B6 21 21 8A         ld hl,Coordenadas_X_Amadeus
1172+ 92B9 77           1 ld (hl),a
1173+ 92BA 23               inc hl
1174+ 92BB 10 FC            djnz 1B
1175+ 92BD C9               ret
1176+ 92BE
1177+ 92BE              ; -----------------------------------------------------------------
1178+ 92BE              ;
1179+ 92BE              ;   25/04/23
1180+ 92BE              ;
1181+ 92BE
1182+ 92BE              Determina_resultado_comparativa
1183+ 92BE
1184+ 92BE              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92BE              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92BE              ;
1187+ 92BE              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92BE              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92BE              ;
1190+ 92BE              ;   SBC HL,DE
1191+ 92BE
1192+ 92BE              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92BE              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92BE
1195+ 92BE              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92BE              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92BE
1198+ 92BE
1199+ 92BE 3A B7 89         ld a,(Cuad_objeto)
1200+ 92C1 FE 02            cp 2
1201+ 92C3 28 26            jr z,2F
1202+ 92C5 38 24            jr c,2F
1203+ 92C7
1204+ 92C7              ; Cuadrantes 3º y 4º
1205+ 92C7
1206+ 92C7 E6 01            and 1
1207+ 92C9 28 10            jr z,4F
1208+ 92CB
1209+ 92CB              ; Cuadrante 3º
1210+ 92CB
1211+ 92CB 7C               ld a,h
1212+ 92CC 06 00            ld b,0
1213+ 92CE
1214+ 92CE CD 59 93         call Compara_cositas_H3
1215+ 92D1
1216+ 92D1 04               inc b
1217+ 92D2 05               dec b
1218+ 92D3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92D4
1220+ 92D4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92D5 06 00            ld b,0
1222+ 92D7
1223+ 92D7 CD 6B 93         call Compara_cositas_L3
1224+ 92DA C9               ret
1225+ 92DB
1226+ 92DB              ; Cuadrante 4º
1227+ 92DB
1228+ 92DB 7C           4 ld a,h
1229+ 92DC 06 00            ld b,0
1230+ 92DE
1231+ 92DE CD 7D 93         call Compara_cositas_H4
1232+ 92E1
1233+ 92E1 04               inc b
1234+ 92E2 05               dec b
1235+ 92E3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92E4
1237+ 92E4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92E5 06 00            ld b,0
1239+ 92E7
1240+ 92E7 CD 93 93         call Compara_cositas_L4
1241+ 92EA C9               ret
1242+ 92EB
1243+ 92EB              ; Cuadrantes 1º y 2º.
1244+ 92EB
1245+ 92EB 28 10        2 jr z,3F
1246+ 92ED
1247+ 92ED              ; 1er Cuadrante
1248+ 92ED
1249+ 92ED 7C               ld a,h
1250+ 92EE 06 00            ld b,0
1251+ 92F0
1252+ 92F0 CD 31 93         call Compara_cositas_H1
1253+ 92F3
1254+ 92F3 04               inc b
1255+ 92F4 05               dec b
1256+ 92F5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92F6
1258+ 92F6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92F7 06 00            ld b,0
1260+ 92F9
1261+ 92F9 CD 47 93         call Compara_cositas_L1
1262+ 92FC C9               ret
1263+ 92FD
1264+ 92FD
1265+ 92FD              ; 2º Cuadrante
1266+ 92FD
1267+ 92FD 7C           3 ld a,h
1268+ 92FE 06 00            ld b,0
1269+ 9300
1270+ 9300 CD 0D 93         call Compara_cositas_H2
1271+ 9303
1272+ 9303 04               inc b
1273+ 9304 05               dec b
1274+ 9305 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9306
1276+ 9306 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9307 06 00            ld b,0
1278+ 9309
1279+ 9309 CD 1F 93         call Compara_cositas_L2
1280+ 930C C9               ret
1281+ 930D
1282+ 930D A7           Compara_cositas_H2 and a
1283+ 930E 28 0D            jr z,1F
1284+ 9310              ;    cp $fd
1285+ 9310              ;    jr z,1F
1286+ 9310              ;    cp $fe
1287+ 9310              ;    jr z,1F
1288+ 9310 FE FF            cp $ff
1289+ 9312 28 09            jr z,1F
1290+ 9314 FE 01            cp $01
1291+ 9316 28 05            jr z,1F
1292+ 9318 FE 02            cp $02
1293+ 931A 28 01            jr z,1F
1294+ 931C C0               ret nz
1295+ 931D 04           1 inc b
1296+ 931E C9               ret
1297+ 931F
1298+ 931F A7           Compara_cositas_L2 and a
1299+ 9320 28 0D            jr z,1F
1300+ 9322              ;    cp $fd
1301+ 9322              ;    jr z,1F
1302+ 9322 FE FE            cp $fe
1303+ 9324 28 09            jr z,1F
1304+ 9326 FE FF            cp $ff
1305+ 9328 28 05            jr z,1F
1306+ 932A FE 01            cp $01
1307+ 932C 28 01            jr z,1F
1308+ 932E              ;    cp $02
1309+ 932E              ;    jr z,1F
1310+ 932E C0               ret nz
1311+ 932F 04           1 inc b
1312+ 9330 C9               ret
1313+ 9331
1314+ 9331 A7           Compara_cositas_H1 and a
1315+ 9332 28 11            jr z,1F
1316+ 9334              ;    cp $fd
1317+ 9334              ;    jr z,1F
1318+ 9334              ;    cp $fe
1319+ 9334              ;    jr z,1F
1320+ 9334 FE FF            cp $ff
1321+ 9336 28 0D            jr z,1F
1322+ 9338 FE 01            cp $01
1323+ 933A 28 09            jr z,1F
1324+ 933C FE 02            cp $02
1325+ 933E 28 05            jr z,1F
1326+ 9340 FE 03            cp $03
1327+ 9342 28 01            jr z,1F
1328+ 9344 C0               ret nz
1329+ 9345 04           1 inc b
1330+ 9346 C9               ret
1331+ 9347
1332+ 9347 A7           Compara_cositas_L1 and a
1333+ 9348 28 0D            jr z,1F
1334+ 934A              ;    cp $fd
1335+ 934A              ;    jr z,1F
1336+ 934A              ;    cp $fe
1337+ 934A              ;    jr z,1F
1338+ 934A              ;    cp $ff
1339+ 934A              ;    jr z,1F
1340+ 934A FE 01            cp $01
1341+ 934C 28 09            jr z,1F
1342+ 934E FE 02            cp $02
1343+ 9350 28 05            jr z,1F
1344+ 9352 FE 03            cp $03
1345+ 9354 28 01            jr z,1F
1346+ 9356 C0               ret nz
1347+ 9357 04           1 inc b
1348+ 9358 C9               ret
1349+ 9359
1350+ 9359 A7           Compara_cositas_H3 and a
1351+ 935A 28 0D            jr z,1F
1352+ 935C              ;    cp $fd
1353+ 935C              ;    jr z,1F
1354+ 935C FE FE            cp $fe
1355+ 935E 28 09            jr z,1F
1356+ 9360 FE FF            cp $ff
1357+ 9362 28 05            jr z,1F
1358+ 9364 FE 01            cp $01
1359+ 9366 28 01            jr z,1F
1360+ 9368              ;    cp $02
1361+ 9368              ;    jr z,1F
1362+ 9368              ;    cp $03
1363+ 9368              ;    jr z,1F
1364+ 9368 C0               ret nz
1365+ 9369 04           1 inc b
1366+ 936A C9               ret
1367+ 936B
1368+ 936B A7           Compara_cositas_L3 and a
1369+ 936C 28 0D            jr z,1F
1370+ 936E              ;    cp $fd
1371+ 936E              ;    jr z,1F
1372+ 936E              ;    cp $fe
1373+ 936E              ;    jr z,1F
1374+ 936E              ;    cp $ff
1375+ 936E              ;    jr z,1F
1376+ 936E FE 01            cp $01
1377+ 9370 28 09            jr z,1F
1378+ 9372 FE 02            cp $02
1379+ 9374 28 05            jr z,1F
1380+ 9376 FE 03            cp $03
1381+ 9378 28 01            jr z,1F
1382+ 937A C0               ret nz
1383+ 937B 04           1 inc b
1384+ 937C C9               ret
1385+ 937D
1386+ 937D A7           Compara_cositas_H4 and a
1387+ 937E 28 11            jr z,1F
1388+ 9380 FE FD            cp $fd
1389+ 9382 28 0D            jr z,1F
1390+ 9384 FE FE            cp $fe
1391+ 9386 28 09            jr z,1F
1392+ 9388 FE FF            cp $ff
1393+ 938A 28 05            jr z,1F
1394+ 938C FE 01            cp $01
1395+ 938E 28 01            jr z,1F
1396+ 9390              ;    cp $02
1397+ 9390              ;    jr z,1F
1398+ 9390              ;    cp $03
1399+ 9390              ;    jr z,1F
1400+ 9390 C0               ret nz
1401+ 9391 04           1 inc b
1402+ 9392 C9               ret
1403+ 9393
1404+ 9393 A7           Compara_cositas_L4 and a
1405+ 9394 28 0D            jr z,1F
1406+ 9396              ;    cp $fd
1407+ 9396              ;    jr z,1F
1408+ 9396 FE FE            cp $fe
1409+ 9398 28 09            jr z,1F
1410+ 939A FE FF            cp $ff
1411+ 939C 28 05            jr z,1F
1412+ 939E FE 01            cp $01
1413+ 93A0 28 01            jr z,1F
1414+ 93A2              ;    cp $02
1415+ 93A2              ;    jr z,1F
1416+ 93A2              ;    cp $03
1417+ 93A2              ;    jr z,1F
1418+ 93A2 C0               ret nz
1419+ 93A3 04           1 inc b
1420+ 93A4 C9               ret
# file closed: Disparo.asm
1385  93A5              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93A5              ; ******************************************************************************************************************************************************************************************
   2+ 93A5              ;
   3+ 93A5              ; 26/06/23
   4+ 93A5              ;
   5+ 93A5              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93A5
   7+ 93A5 CD 89 96     Draw call Prepara_draw
   8+ 93A8 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93A9 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93AA 28 05        	jr z,2F
  11+ 93AC
  12+ 93AC 3A B7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93AF 18 0C        	jr 1F
  14+ 93B1
  15+ 93B1 2A B5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93B4 22 A5 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93B7 CD 46 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93BA              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93BA CD 93 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93BD
  21+ 93BD 3A D1 89     1 ld a,(Ctrl_0)
  22+ 93C0 CB 6F        	bit 5,a
  23+ 93C2 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93C4
  25+ 93C4 CD DC 93     	call Comprueba_limite_horizontal
  26+ 93C7 CD 6C 94     	call Comprueba_limite_vertical
  27+ 93CA
  28+ 93CA              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93CA              ; -----------------------
  30+ 93CA              ; -----------------------
  31+ 93CA              ; -----------------------
  32+ 93CA
  33+ 93CA CD B9 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93CD CD F0 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93D0 CD 4F 96     	call Define_rutina_de_impresion
  36+ 93D3
  37+ 93D3 3A D1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93D6 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93D8 32 D1 89     	ld (Ctrl_0),a
  40+ 93DB
  41+ 93DB C9           	ret
  42+ 93DC
  43+ 93DC              ; *******************************************************************************************************************************************************************************************
  44+ 93DC              ;	21/01/23
  45+ 93DC              ;
  46+ 93DC              ; 	Comprueba_limite_horizontal.
  47+ 93DC              ;
  48+ 93DC              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93DC              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93DC              ;
  51+ 93DC              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93DC              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93DC              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93DC              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93DC
  56+ 93DC
  57+ 93DC
  58+ 93DC 3A D1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93DF CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93E1 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93E3 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93E5 32 D1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93E8 18 09            jr 6F
  64+ 93EA CB 5F        1 bit 3,a
  65+ 93EC 28 0A            jr z,2F
  66+ 93EE E6 F7            and $f7
  67+ 93F0 32 D1 89         ld (Ctrl_0),a
  68+ 93F3 CD 46 95     6 call Inicializacion
  69+ 93F6 18 5B            jr 5F
  70+ 93F8 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93F9
  72+ 93F9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93F9              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93F9
  75+ 93F9 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93FA 2A E1 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93FD CD 61 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9400 67           	ld h,a
  79+ 9401 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9402 CD 61 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9405 67           	ld h,a
  82+ 9406 A7           	and a
  83+ 9407 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9409 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 940A 3A B7 89     	ld a,(Cuad_objeto)
  86+ 940D FE 02        	cp 2
  87+ 940F 38 1E        	jr c,3F
  88+ 9411 28 1C        	jr z,3F
  89+ 9413 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9414 28 23            jr z,7F
  91+ 9416 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9418 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 941A E1           	pop hl
  94+ 941B
  95+ 941B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 941B              ; _para indicar con E="2" en caso necesario.
  97+ 941B
  98+ 941B E5               push hl
  99+ 941C C5               push bc
 100+ 941D CD 61 99     	call calcula_tercio
 101+ 9420 FE 01        	cp 1
 102+ 9422 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9424 CD 54 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9427 28 26            jr z,9F
 105+ 9429 38 24            jr c,9F
 106+ 942B 1E 00        11 ld e,0
 107+ 942D 18 22            jr 8F
 108+ 942F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9430 28 07        	jr z, 7F
 110+ 9432 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9434 1E 00         	ld e,0
 112+ 9436 E1           	pop hl
 113+ 9437 18 04        	jr 4F
 114+ 9439 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 943B 18 15            jr 10F
 116+ 943D
 117+ 943D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 943D              ; _para indicar con E="2" en caso necesario.
 119+ 943D
 120+ 943D E5           4 push hl
 121+ 943E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 943F CD 61 99     	call calcula_tercio
 123+ 9442 FE 01        	cp 1
 124+ 9444 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9446 CD 54 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9449 28 04            jr z,9F
 127+ 944B 30 02            jr nc,9F
 128+ 944D 18 02        	jr 8F
 129+ 944F 1E 02        9 ld e,2
 130+ 9451 C1           8 pop bc
 131+ 9452 E1           10 pop hl
 132+ 9453 C9           5 ret
 133+ 9454
 134+ 9454              ; --------------------
 135+ 9454              ;
 136+ 9454              ; 25/08/22
 137+ 9454
 138+ 9454 CD 61 99     Comprueba_centro call calcula_tercio
 139+ 9457 67               ld h,a
 140+ 9458 08           	ex af,af
 141+ 9459 FE 02        	cp 2
 142+ 945B 38 07        	jr c,1F
 143+ 945D 28 05        	jr z,1F
 144+ 945F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9462 18 03        	jr 2F
 146+ 9464 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9467 08           2 ex af,af
 148+ 9468 A7               and a
 149+ 9469 ED 42            sbc hl,bc
 150+ 946B C9               ret
 151+ 946C
 152+ 946C              ; *********************************************************************************************************************************************************************************************
 153+ 946C              ;
 154+ 946C              ;   16/8/22
 155+ 946C              ;
 156+ 946C              ;	Comprueba_limite_vertical
 157+ 946C              ;
 158+ 946C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 946C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 946C              ;
 161+ 946C
 162+ 946C 2A A5 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 946F 7D           	ld a,l
 164+ 9470 E6 1F        	and $1F
 165+ 9472 57           	ld d,a
 166+ 9473 3A E3 89     	ld a,(Limite_vertical)
 167+ 9476 BA           	cp d 											; Límite - Posición.
 168+ 9477 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9478 3A B7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 947B CB 47        	bit 0,a
 171+ 947D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 947F
 173+ 947F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 947F
 175+ 947F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9480 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9482
 178+ 9482              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9482              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9482
 181+ 9482 3A A9 89         ld a,(Coordenada_X)
 182+ 9485 16 0F            ld d,Centro_izquierda
 183+ 9487 A7               and a
 184+ 9488 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9489 28 1E            jr z,3F
 186+ 948B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 948D              ;                                                    ; _salimos sin modificar nada.
 188+ 948D 18 0E            jr 2F
 189+ 948F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9490 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9492
 192+ 9492              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9492              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9492
 195+ 9492 3A A9 89         ld a,(Coordenada_X)
 196+ 9495 16 10            ld d,Centro_derecha
 197+ 9497 A7               and a
 198+ 9498 92               sub d
 199+ 9499 28 0E            jr z,3F
 200+ 949B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 949D              ;                                                    ; _salimos sin modificar nada.
 202+ 949D CB 43        2 bit 0,e
 203+ 949F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94A1 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94A2 CD 36 95         call Modificaccionne
 206+ 94A5 C1           	pop bc
 207+ 94A6 CD 46 95         call Inicializacion
 208+ 94A9 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94AA
 210+ 94AA              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94AA
 212+ 94AA C5           4 push bc
 213+ 94AB 01 A4 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94AE 0A           	ld a,(bc)
 215+ 94AF 3D           	dec a
 216+ 94B0 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94B1 7D           	ld a,l
 218+ 94B2 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94B3 CB 47        	bit 0,a
 220+ 94B5 28 03        	jr z,5F
 221+ 94B7 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94B8 18 2E        	jr 7F
 223+ 94BA
 224+ 94BA              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94BA
 226+ 94BA 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94BB F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94BC 3A D1 89     	ld a,(Ctrl_0)
 229+ 94BF CB 4F        	bit 1,a
 230+ 94C1 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94C3 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94C4
 233+ 94C4              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94C4
 235+ 94C4 1C               inc e
 236+ 94C5 1D               dec e
 237+ 94C6 20 07            jr nz,12F
 238+ 94C8 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94C9 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94CA 22 A5 89     	ld (Posicion_actual),hl
 241+ 94CD 18 44        13 jr 9F
 242+ 94CF CB 43        12 bit 0,e
 243+ 94D1 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94D3              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94D3 C1           	pop bc
 246+ 94D4 18 D3        	jr 3B
 247+ 94D6 80           14 add b
 248+ 94D7 6F               ld l,a
 249+ 94D8 22 A5 89     	ld (Posicion_actual),hl
 250+ 94DB CD 36 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94DE 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94E0 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94E2 32 D1 89         ld (Ctrl_0),a
 254+ 94E5 F1           	pop af
 255+ 94E6 18 2B        	jr 9F
 256+ 94E8
 257+ 94E8              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94E8
 259+ 94E8 F5           7 push af
 260+ 94E9 3A D1 89     	ld a,(Ctrl_0)
 261+ 94EC CB 47        	bit 0,a
 262+ 94EE 20 1D        	jr nz,8F
 263+ 94F0 F1           	pop af
 264+ 94F1
 265+ 94F1              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94F1
 267+ 94F1 1C           	inc e
 268+ 94F2 1D               dec e
 269+ 94F3 20 07            jr nz,10F
 270+ 94F5 90           	sub b
 271+ 94F6 6F               ld l,a
 272+ 94F7 22 A5 89     	ld (Posicion_actual),hl
 273+ 94FA 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94FC              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94FC CB 43        10 bit 0,e
 276+ 94FE 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9500              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9500 C1           	pop bc
 279+ 9501 18 A6        	jr 3B
 280+ 9503 90           16 sub b
 281+ 9504 6F               ld l,a
 282+ 9505 22 A5 89     	ld (Posicion_actual),hl
 283+ 9508 CD 36 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 950B 18 06            jr 9F
 285+ 950D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 950F 32 D1 89         ld (Ctrl_0),a
 287+ 9512 F1           	pop af
 288+ 9513 C1           9 pop bc
 289+ 9514 1E 00        	ld e,0
 290+ 9516 CD 46 95         call Inicializacion
 291+ 9519 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 951A 08           	ex af,af
 293+ 951B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 951C 18 8B            jr 3B
 295+ 951E
 296+ 951E              ; --------------------
 297+ 951E
 298+ 951E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9520 CD A4 96     1 call PreviousScan
 300+ 9523 10 FB            djnz 1B
 301+ 9525 22 A5 89     	ld (Posicion_actual),hl
 302+ 9528 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9529 C9           	ret
 304+ 952A
 305+ 952A              ; --------------------
 306+ 952A
 307+ 952A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 952C CD 95 96     1 call NextScan
 309+ 952F 10 FB            djnz 1B
 310+ 9531 22 A5 89     	ld (Posicion_actual),hl
 311+ 9534 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9535 C9           	ret
 313+ 9536
 314+ 9536              ; --------------------
 315+ 9536              ;
 316+ 9536              ;	22/01/23
 317+ 9536              ;
 318+ 9536              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9536              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9536              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9536
 322+ 9536
 323+ 9536              Modificaccionne
 324+ 9536
 325+ 9536 3A B7 89     	ld a,(Cuad_objeto)
 326+ 9539 FE 02        	cp 2
 327+ 953B CC 1E 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 953E DC 1E 95         call c,Modifica_Pos_actual
 329+ 9541 C8           	ret z
 330+ 9542 CD 2A 95         call Modifica_Pos_actual2
 331+ 9545 C9               ret
 332+ 9546
 333+ 9546              ; *************************************************************************************************************************************************************************************************
 334+ 9546              ;
 335+ 9546              ;	13/8/22
 336+ 9546              ;
 337+ 9546              ;	Inicializacion
 338+ 9546              ;
 339+ 9546              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9546              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9546              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9546              ;
 343+ 9546              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9546              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9546              ;	_ desaparece/aparece.
 346+ 9546
 347+ 9546              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9546              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9546              ;
 350+ 9546              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9546              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9546              ; 		   [E] ="0"
 353+ 9546
 354+ 9546              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9546
 356+ 9546 CD 61 99     Inicializacion call calcula_tercio
 357+ 9549 28 36        	jr z,primit
 358+ 954B E6 02        	and 2
 359+ 954D 20 07        	jr nz,segmit
 360+ 954F 7D           	ld a,l
 361+ 9550 FE 7F        	cp $7f
 362+ 9552 38 2D        	jr c,primit
 363+ 9554 28 2B        	jr z,primit
 364+ 9556 CD B3 95     segmit call column
 365+ 9559 38 13        	jr c,tercuad
 366+ 955B 3E 04        cuarcuad ld a,4
 367+ 955D 32 B7 89     	ld (Cuad_objeto),a
 368+ 9560 21 20 48     	ld hl,$4820
 369+ 9563 22 E1 89     	ld (Limite_horizontal),hl
 370+ 9566 21 E3 89     	ld hl,Limite_vertical
 371+ 9569 36 0D        	ld (hl),$0d
 372+ 956B 08           	ex af,af
 373+ 956C 18 3C        	jr 1F
 374+ 956E              tercuad
 375+ 956E 3E 03        	ld a,3
 376+ 9570 32 B7 89     	ld (Cuad_objeto),a
 377+ 9573 21 20 48     	ld hl,$4820
 378+ 9576 22 E1 89     	ld (Limite_horizontal),hl
 379+ 9579 21 E3 89     	ld hl,Limite_vertical
 380+ 957C 36 12        	ld (hl),$12
 381+ 957E 08           	ex af,af
 382+ 957F 18 29        	jr 1F
 383+ 9581 CD B3 95     primit call column
 384+ 9584 38 13        	jr c, primcuad
 385+ 9586              segcuad
 386+ 9586 3E 02        	ld a,2
 387+ 9588 32 B7 89     	ld (Cuad_objeto),a
 388+ 958B 21 C0 4F     	ld hl,$4fc0
 389+ 958E 22 E1 89     	ld (Limite_horizontal),hl
 390+ 9591 21 E3 89     	ld hl,Limite_vertical
 391+ 9594 36 0D        	ld (hl),$0d
 392+ 9596 08           	ex af,af
 393+ 9597 18 11        	jr 1F
 394+ 9599              primcuad
 395+ 9599 3E 01        	ld a,1
 396+ 959B 32 B7 89     	ld (Cuad_objeto),a
 397+ 959E 21 C0 4F     	ld hl,$4fc0
 398+ 95A1 22 E1 89     	ld (Limite_horizontal),hl
 399+ 95A4 21 E3 89     	ld hl,Limite_vertical
 400+ 95A7 36 12        	ld (hl),$12
 401+ 95A9 08           	ex af,af
 402+ 95AA CD EC 9C     1 call Genera_coordenadas
 403+ 95AD 21 D1 89     	ld hl,Ctrl_0
 404+ 95B0 CB EE        	set 5,(hl)
 405+ 95B2 C9           	ret
 406+ 95B3
 407+ 95B3              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95B3
 409+ 95B3              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95B3              ;
 411+ 95B3              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95B3
 413+ 95B3 7D           column ld a,l
 414+ 95B4 E6 1F        	and $1f
 415+ 95B6 FE 10         	cp $10
 416+ 95B8 C9            	ret
 417+ 95B9
 418+ 95B9              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95B9              ;
 420+ 95B9              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95B9              ;
 422+ 95B9              ; 14/12/22
 423+ 95B9              ;
 424+ 95B9              ;	Modifica: A y BC.
 425+ 95B9
 426+ 95B9 3A B7 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95BC E6 01        	and 1
 428+ 95BE 28 17        	jr z,1F
 429+ 95C0
 430+ 95C0              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95C0
 432+ 95C0 3A A9 89     	ld a,(Coordenada_X)
 433+ 95C3 47           	ld b,a
 434+ 95C4 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95C5 79           	ld a,c
 436+ 95C6 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95C7 38 08        	jr c,2F
 438+ 95C9 47           	ld b,a
 439+ 95CA 79           	ld a,c
 440+ 95CB 90           	sub b
 441+ 95CC 32 E0 89     	ld (Columnas),a
 442+ 95CF 18 1B        	jr 4F
 443+ 95D1 79           2 ld a,c
 444+ 95D2 32 E0 89     	ld (Columnas),a
 445+ 95D5 18 15        	jr 4F
 446+ 95D7
 447+ 95D7              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95D7
 449+ 95D7 3A A9 89     1 ld a,(Coordenada_X)
 450+ 95DA 81           	add c
 451+ 95DB 3D           	dec a
 452+ 95DC D6 1F        	sub $1f
 453+ 95DE 38 08        	jr c,3F
 454+ 95E0 47           	ld b,a
 455+ 95E1 79           	ld a,c
 456+ 95E2 90           	sub b
 457+ 95E3 32 E0 89     	ld (Columnas),a
 458+ 95E6 18 04        	jr 4F
 459+ 95E8 79           3 ld a,c
 460+ 95E9 32 E0 89     	ld (Columnas),a
 461+ 95EC D9           4 exx
 462+ 95ED 4F           	ld c,a
 463+ 95EE D9           	exx
 464+ 95EF C9            ret
 465+ 95F0
 466+ 95F0              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95F0              ;
 468+ 95F0              ;   19/7/23
 469+ 95F0              ;
 470+ 95F0              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95F0              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95F0              ;
 473+ 95F0              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95F0              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95F0              ;
 476+ 95F0              ;	DESTRUYE: HL,B Y A.
 477+ 95F0
 478+ 95F0 3A B7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95F3 FE 02        	cp 2
 480+ 95F5 38 18        	jr c,1F
 481+ 95F7 28 16        	jr z,1F
 482+ 95F9 E6 01        	and 1
 483+ 95FB 28 0D        	jr z,3F
 484+ 95FD
 485+ 95FD              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95FD
 487+ 95FD CD 43 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9600
 489+ 9600 7D           9 ld a,l
 490+ 9601 E6 1F        	and $1f
 491+ 9603 28 2A        	jr z,7F
 492+ 9605 2B           	dec hl
 493+ 9606 10 F8        	djnz 9B
 494+ 9608 18 25        	jr 7F
 495+ 960A
 496+ 960A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 960A
 498+ 960A 2A A5 89     3 ld hl,(Posicion_actual)
 499+ 960D 18 20        	jr 7F
 500+ 960F
 501+ 960F 28 14        1 jr z,2F
 502+ 9611
 503+ 9611              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9611
 505+ 9611 CD 43 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9614
 507+ 9614 7D           4 ld a,l
 508+ 9615 E6 1F        	and $1f
 509+ 9617 28 03        	jr z,6F
 510+ 9619 2B           	dec hl
 511+ 961A 10 F8        	djnz 4B
 512+ 961C 06 0F        6 ld b,15
 513+ 961E CD A4 96     5 call PreviousScan
 514+ 9621 10 FB        	djnz 5B
 515+ 9623 18 0A        	jr 7F
 516+ 9625
 517+ 9625              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9625
 519+ 9625 CD 43 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9628 06 0F        	ld b,15
 521+ 962A CD A4 96     8 call PreviousScan
 522+ 962D 10 FB        	djnz 8B
 523+ 962F
 524+ 962F E5           7 push hl
 525+ 9630 DD E1        	pop ix
 526+ 9632
 527+ 9632 2A A7 89     	ld hl,(Puntero_objeto)
 528+ 9635 E5           	push hl
 529+ 9636 FD E1        	pop iy
 530+ 9638
 531+ 9638              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9638
 533+ 9638 3A D1 89     	ld a,(Ctrl_0)
 534+ 963B CB 77        	bit 6,a
 535+ 963D C8           	ret z
 536+ 963E
 537+ 963E              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 963E              ; _ entidad / Amadeus´.
 539+ 963E
 540+ 963E DD 22 27 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9642
 542+ 9642 C9           	ret
 543+ 9643
 544+ 9643              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9643              ;
 546+ 9643              ;	2/1/23
 547+ 9643              ;
 548+ 9643              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9643              ;
 550+ 9643              ;	Tras esta rutina tenemos:
 551+ 9643              ;
 552+ 9643              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9643              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9643              ;
 555+ 9643              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9643
 557+ 9643 2A A5 89     Operandos ld hl,(Posicion_actual)
 558+ 9646 3A E0 89     	ld a,(Columnas)
 559+ 9649 3D           	dec a
 560+ 964A 20 01        	jr nz,1F
 561+ 964C 3C           	inc a
 562+ 964D 47           1 ld b,a
 563+ 964E C9           	ret
 564+ 964F
 565+ 964F              ; --------------------------------------------------------------------------------------------------------------------
 566+ 964F              ;
 567+ 964F              ;	3/1/23
 568+ 964F              ;
 569+ 964F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 964F              ;
 571+ 964F              ;	Destruye: A,B,HL y DE.
 572+ 964F
 573+ 964F              Define_rutina_de_impresion
 574+ 964F
 575+ 964F 3A A4 89     	ld a,(Columns)
 576+ 9652 47           	ld b,a
 577+ 9653 3A E0 89     	ld a,(Columnas)
 578+ 9656 B8           	cp b
 579+ 9657 20 0D        	jr nz,2f
 580+ 9659
 581+ 9659              ;	La entidad se imprime entera.
 582+ 9659
 583+ 9659 21 31 97     	ld hl, Indice_entidades_completas
 584+ 965C E6 01        	and 1
 585+ 965E 28 02        	jr z,1F
 586+ 9660
 587+ 9660 23           	inc hl
 588+ 9661 23           	inc hl
 589+ 9662
 590+ 9662 CD 66 8D     1 call Extrae_address
 591+ 9665 C9           	ret		;	ret
 592+ 9666
 593+ 9666              ;	La entidad no se imprime entera en pantalla.
 594+ 9666
 595+ 9666 3A B7 89     2 ld a,(Cuad_objeto)
 596+ 9669 E6 01        	and 1
 597+ 966B 28 17        	jr z,3F
 598+ 966D
 599+ 966D              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 966D
 601+ 966D 21 35 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9670 3A A4 89     4 ld a,(Columns)
 603+ 9673 E6 01        	and 1
 604+ 9675 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9677
 606+ 9677 23           	inc hl
 607+ 9678 23           	inc hl
 608+ 9679
 609+ 9679 3A E0 89     	ld a,(Columnas)
 610+ 967C E6 01        	and 1
 611+ 967E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9680
 613+ 9680 23           	inc hl
 614+ 9681 23           	inc hl
 615+ 9682
 616+ 9682 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9684
 618+ 9684 21 3B 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9687 18 E7        	jr 4B
 620+ 9689
 621+ 9689              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9689              ;
 623+ 9689              ;	Prepara_draw
 624+ 9689              ;
 625+ 9689              ;	Es una rutina de carga.
 626+ 9689              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9689              ;
 628+ 9689              ;	FUNCIONAMIENTO:
 629+ 9689              ;
 630+ 9689              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9689              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9689              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9689              ;
 634+ 9689              ;	DESTRUYE:
 635+ 9689              ;
 636+ 9689              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9689
 638+ 9689 21 A3 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 968C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 968D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 968E 4E           	ld c,(hl)
 642+ 968F 2A A5 89     	ld hl,(Posicion_actual)
 643+ 9692 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9694 C9           	ret
 645+ 9695
 646+ 9695              ;----------------------------------------------------------------------------------------------------------------
 647+ 9695              ;
 648+ 9695              ;	5/08/22
 649+ 9695              ;
 650+ 9695              ;   NextScan.
 651+ 9695              ;
 652+ 9695              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9695              ;
 654+ 9695              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9695              ;
 656+ 9695              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9695              ;
 658+ 9695              ;       DESTRUIDOS: AF y HL !!!
 659+ 9695              ;
 660+ 9695              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9695              ;
 662+ 9695
 663+ 9695 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9696 7C               ld a,h
 665+ 9697 E6 07            and 7
 666+ 9699 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 969A
 668+ 969A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 969B C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 969D 6F               ld l,a
 671+ 969E D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 969F
 673+ 969F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96A0 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96A2 67               ld h,a
 676+ 96A3 C9               ret
 677+ 96A4
 678+ 96A4              ;----------------------------------------------------------------------------------------------------------------
 679+ 96A4              ;
 680+ 96A4              ;	5/08/22
 681+ 96A4              ;
 682+ 96A4              ;   PreviousScan.
 683+ 96A4              ;
 684+ 96A4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96A4              ;
 686+ 96A4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96A4              ;
 688+ 96A4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96A4              ;
 690+ 96A4              ;       DESTRUIDOS: AF y HL !!!
 691+ 96A4              ;
 692+ 96A4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96A4              ;
 694+ 96A4
 695+ 96A4 7C           PreviousScan ld a,h
 696+ 96A5 25               dec h               ; Dec H.
 697+ 96A6 E6 07            and 7
 698+ 96A8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96A9
 700+ 96A9 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96AA D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96AC 6F               ld l,a
 703+ 96AD D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96AE
 705+ 96AE 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96AF C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96B1 67               ld h,a
 708+ 96B2 C9               ret
 709+ 96B3
 710+ 96B3              ; -----------------------------------------------------------------------------------
 711+ 96B3              ;
 712+ 96B3              ;	31/7/23
 713+ 96B3              ;
 714+ 96B3              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96B3              ;	Extrae fotos de Album_de_fotos.
 716+ 96B3
 717+ 96B3              Extrae_foto_entidades
 718+ 96B3
 719+ 96B3 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96B6 7E           	ld a,(hl)
 721+ 96B7 A7           	and a
 722+ 96B8 C8           	ret z 																	; Salimos si no hay datos en el álbum.
 723+ 96B9
 724+ 96B9 3A F2 89     	ld a,(Numero_de_malotes)												; Salimos si no hay MOVIMIENTO.
 725+ 96BC A7           	and a
 726+ 96BD C8           	ret z
 727+ 96BE
 728+ 96BE              ; -----------------------------------
 729+ 96BE
 730+ 96BE ED 73 F7 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96C2 31 00 70     	ld sp,Album_de_fotos
 732+ 96C5
 733+ 96C5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96C7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96C8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96C9
 737+ 96C9 ED 73 F9 89  	ld (Stack_2),sp
 738+ 96CD ED 7B F7 89  	ld sp,(Stack)
 739+ 96D1
 740+ 96D1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96D1
 742+ 96D1 3E CD        	ld a,$cd
 743+ 96D3 32 DB 96     	ld (Imprime),a
 744+ 96D6 EB           	ex de,hl
 745+ 96D7 22 DC 96     	ld (Imprime+1),hl
 746+ 96DA EB           	ex de,hl
 747+ 96DB
 748+ 96DB              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96DB
 750+ 96DB 00 00 00     Imprime db 0,0,0
 751+ 96DE
 752+ 96DE 3A F2 89     	ld a,(Numero_de_malotes)
 753+ 96E1 3D           	dec a
 754+ 96E2 28 09        	jr z,1F
 755+ 96E4 32 F2 89      	ld (Numero_de_malotes),a
 756+ 96E7
 757+ 96E7 ED 7B F9 89   	ld sp,(Stack_2)
 758+ 96EB 18 D8        	jr 2B
 759+ 96ED
 760+ 96ED AF           1 xor a
 761+ 96EE 32 F9 89     	ld (Stack_2),a
 762+ 96F1 C9           	ret
 763+ 96F2
 764+ 96F2              ; -----------------------------------------------------------------------------------
 765+ 96F2              ;
 766+ 96F2              ;	28/2/23
 767+ 96F2              ;
 768+ 96F2              ;	Pinta los disparos generados.
 769+ 96F2
 770+ 96F2              Extrae_foto_disparos
 771+ 96F2
 772+ 96F2 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 773+ 96F5 7E               ld a,(hl)
 774+ 96F6 A7               and a
 775+ 96F7 C8               ret z
 776+ 96F8
 777+ 96F8 3A 17 8A     	ld a,(Numero_de_disparotes)
 778+ 96FB A7           	and a
 779+ 96FC C8           	ret z
 780+ 96FD ED 73 F7 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 781+ 9701 31 0D 72     	ld sp,Album_de_fotos_disparos
 782+ 9704
 783+ 9704 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 784+ 9706 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 785+ 9707 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 786+ 9708
 787+ 9708 ED 73 F9 89  	ld (Stack_2),sp
 788+ 970C ED 7B F7 89  	ld sp,(Stack)
 789+ 9710
 790+ 9710              ; Fabrica la llamada a la correspondiente rutina de impresión.
 791+ 9710
 792+ 9710 3E CD        	ld a,$cd
 793+ 9712 32 1A 97     	ld (Imprime2),a
 794+ 9715 EB           	ex de,hl
 795+ 9716 22 1B 97     	ld (Imprime2+1),hl
 796+ 9719 EB           	ex de,hl
 797+ 971A
 798+ 971A              ; Ejecuta la llamada:	CALL $xx,xx
 799+ 971A
 800+ 971A 00 00 00     Imprime2 db 0,0,0
 801+ 971D
 802+ 971D 3A 17 8A     	ld a,(Numero_de_disparotes)
 803+ 9720 3D           	dec a
 804+ 9721 28 09        	jr z,1F
 805+ 9723 32 17 8A      	ld (Numero_de_disparotes),a
 806+ 9726
 807+ 9726 ED 7B F9 89  	ld sp,(Stack_2)
 808+ 972A 18 D8        	jr 2B
 809+ 972C
 810+ 972C AF           1 xor a
 811+ 972D 32 F9 89     	ld (Stack_2),a
 812+ 9730 C9           	ret
 813+ 9731
# file closed: Draw_XOR.asm
1386  9731              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9731              ;   índices de Rutinas de impresión.
   2+ 9731
   3+ 9731 41 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9733 6E 97            defw Pinta_Amadeus_3x2
   5+ 9735
   6+ 9735 C4 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9737 64 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9739 18 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 973B
  10+ 973B EE 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 973D F2 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 973F A6 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9741
  14+ 9741
  15+ 9741              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9741              ;
  17+ 9741              ;   12/12/22
  18+ 9741              ;
  19+ 9741              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9741              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9741              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9741              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9741              ;
  24+ 9741              ;   Modifica: DE y HL.
  25+ 9741
  26+ 9741 ED 73 F7 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9745 FD F9        	ld sp,iy
  28+ 9747 06 10            ld b,16
  29+ 9749 D1           1 pop de
  30+ 974A 7B               ld a,e
  31+ 974B AE               xor (hl)
  32+ 974C 77           	ld (hl),a
  33+ 974D 23           	inc hl
  34+ 974E 7A               ld a,d
  35+ 974F AE               xor (hl)
  36+ 9750 77           	ld (hl),a
  37+ 9751 2B           	dec hl
  38+ 9752 24           	inc h
  39+ 9753 7C               ld a,h
  40+ 9754 E6 07            and 7
  41+ 9756 20 0A            jr nz,2F
  42+ 9758 7D               ld a,l
  43+ 9759 C6 20            add a,$20
  44+ 975B 6F               ld l,a
  45+ 975C 38 04            jr c,2F
  46+ 975E 7C               ld a,h
  47+ 975F D6 08            sub 8
  48+ 9761 67               ld h,a
  49+ 9762 7C           2 ld a,h
  50+ 9763 FE 58            cp $58
  51+ 9765 28 02            jr z,3F
  52+ 9767 10 E0            djnz 1B
  53+ 9769 ED 7B F7 89  3 ld sp,(Stack)
  54+ 976D C9           	ret
  55+ 976E
  56+ 976E ED 73 F7 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9772 FD F9        	ld sp,iy
  58+ 9774 06 08            ld b,8
  59+ 9776 D1           1 pop de
  60+ 9777 7B               ld a,e
  61+ 9778 AE               xor (hl)
  62+ 9779 77           	ld (hl),a
  63+ 977A 23           	inc hl
  64+ 977B 7A               ld a,d
  65+ 977C AE               xor (hl)
  66+ 977D 77           	ld (hl),a
  67+ 977E 23           	inc hl
  68+ 977F D1           	pop de
  69+ 9780 7B               ld a,e
  70+ 9781 AE               xor (hl)
  71+ 9782 77           	ld (hl),a
  72+ 9783 2B           	dec hl
  73+ 9784 2B           	dec hl
  74+ 9785 24           	inc h
  75+ 9786 7C               ld a,h
  76+ 9787 E6 07            and 7
  77+ 9789 20 0A            jr nz,2F
  78+ 978B 7D               ld a,l
  79+ 978C C6 20            add a,$20
  80+ 978E 6F               ld l,a
  81+ 978F 38 04            jr c,2F
  82+ 9791 7C               ld a,h
  83+ 9792 D6 08            sub 8
  84+ 9794 67               ld h,a
  85+ 9795 7C           2 ld a,h
  86+ 9796 FE 58            cp $58
  87+ 9798 28 25            jr z,4F
  88+ 979A 7A               ld a,d
  89+ 979B AE               xor (hl)
  90+ 979C 77               ld (hl),a
  91+ 979D D1           	pop de
  92+ 979E 23           	inc hl
  93+ 979F 7B               ld a,e
  94+ 97A0 AE               xor (hl)
  95+ 97A1 77           	ld (hl),a
  96+ 97A2 23           	inc hl
  97+ 97A3 7A               ld a,d
  98+ 97A4 AE               xor (hl)
  99+ 97A5 77           	ld (hl),a
 100+ 97A6 2B           	dec hl
 101+ 97A7 2B           	dec hl
 102+ 97A8 24           	inc h
 103+ 97A9 7C               ld a,h
 104+ 97AA E6 07            and 7
 105+ 97AC 20 0A            jr nz,3F
 106+ 97AE 7D               ld a,l
 107+ 97AF C6 20            add a,$20
 108+ 97B1 6F               ld l,a
 109+ 97B2 38 04            jr c,3F
 110+ 97B4 7C               ld a,h
 111+ 97B5 D6 08            sub 8
 112+ 97B7 67               ld h,a
 113+ 97B8 7C           3 ld a,h
 114+ 97B9 FE 58            cp $58
 115+ 97BB 28 02            jr z,4F
 116+ 97BD 10 B7            djnz 1B
 117+ 97BF ED 7B F7 89  4 ld sp,(Stack)
 118+ 97C3 C9           	ret
 119+ 97C4
 120+ 97C4              ; ---------------------------------------------------
 121+ 97C4
 122+ 97C4 ED 73 F7 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97C8 FD F9        	ld sp,iy
 124+ 97CA
 125+ 97CA              ; >>>
 126+ 97CA
 127+ 97CA 06 10            ld b,16
 128+ 97CC D1           1 pop de
 129+ 97CD 7A           	ld a,d
 130+ 97CE AE           	xor (hl)
 131+ 97CF 77           	ld (hl),a
 132+ 97D0 24           	inc h
 133+ 97D1 7C               ld a,h
 134+ 97D2 E6 07            and 7
 135+ 97D4 20 0C            jr nz,2F
 136+ 97D6 7D               ld a,l
 137+ 97D7 C6 20            add a,$20
 138+ 97D9 6F               ld l,a
 139+ 97DA 38 06            jr c,2F
 140+ 97DC 7C               ld a,h
 141+ 97DD D6 08            sub 8
 142+ 97DF 67               ld h,a
 143+ 97E0 18 00            jr 2F
 144+ 97E2 7C           2 ld a,h
 145+ 97E3 FE 58            cp $58
 146+ 97E5 28 02            jr z,3F
 147+ 97E7 10 E3            djnz 1B
 148+ 97E9 ED 7B F7 89  3 ld sp,(Stack)
 149+ 97ED C9           	ret
 150+ 97EE
 151+ 97EE ED 73 F7 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97F2 FD F9        	ld sp,iy
 153+ 97F4
 154+ 97F4              ; >>>
 155+ 97F4
 156+ 97F4 06 10            ld b,16
 157+ 97F6 D1           1 pop de
 158+ 97F7 7B           	ld a,e
 159+ 97F8 AE           	xor (hl)
 160+ 97F9 77           	ld (hl),a
 161+ 97FA 24           	inc h
 162+ 97FB 7C               ld a,h
 163+ 97FC E6 07            and 7
 164+ 97FE 20 0C            jr nz,2F
 165+ 9800 7D               ld a,l
 166+ 9801 C6 20            add a,$20
 167+ 9803 6F               ld l,a
 168+ 9804 38 06            jr c,2F
 169+ 9806 7C               ld a,h
 170+ 9807 D6 08            sub 8
 171+ 9809 67               ld h,a
 172+ 980A 18 00            jr 2F
 173+ 980C 7C           2 ld a,h
 174+ 980D FE 58            cp $58
 175+ 980F 28 02            jr z,3F
 176+ 9811 10 E3            djnz 1B
 177+ 9813 ED 7B F7 89  3 ld sp,(Stack)
 178+ 9817 C9           	ret
 179+ 9818
 180+ 9818              ; ---------------------------------------------------
 181+ 9818
 182+ 9818 ED 73 F7 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 981C FD F9        	ld sp,iy
 184+ 981E 06 08            ld b,8
 185+ 9820 D1           1 pop de
 186+ 9821 7A           	ld a,d
 187+ 9822 AE           	xor (hl)
 188+ 9823 77           	ld (hl),a
 189+ 9824 23           	inc hl
 190+ 9825 D1           	pop de
 191+ 9826 7B           	ld a,e
 192+ 9827 AE           	xor (hl)
 193+ 9828 77           	ld (hl),a
 194+ 9829 2B           	dec hl
 195+ 982A 24            	inc h
 196+ 982B 7C               ld a,h
 197+ 982C E6 07            and 7
 198+ 982E 20 0A            jr nz,2F
 199+ 9830 7D               ld a,l
 200+ 9831 C6 20            add a,$20
 201+ 9833 6F               ld l,a
 202+ 9834 38 04            jr c,2F
 203+ 9836 7C               ld a,h
 204+ 9837 D6 08            sub 8
 205+ 9839 67               ld h,a
 206+ 983A 7C           2 ld a,h
 207+ 983B FE 58            cp $58
 208+ 983D 28 20            jr z,4F
 209+ 983F D1               pop de
 210+ 9840 7B           	ld a,e
 211+ 9841 AE           	xor (hl)
 212+ 9842 77           	ld (hl),a
 213+ 9843 23           	inc hl
 214+ 9844 7A           	ld a,d
 215+ 9845 AE           	xor (hl)
 216+ 9846 77           	ld (hl),a
 217+ 9847 2B           	dec hl
 218+ 9848 24           	inc h
 219+ 9849 7C               ld a,h
 220+ 984A E6 07            and 7
 221+ 984C 20 0A            jr nz,3F
 222+ 984E 7D               ld a,l
 223+ 984F C6 20            add a,$20
 224+ 9851 6F               ld l,a
 225+ 9852 38 04            jr c,3F
 226+ 9854 7C               ld a,h
 227+ 9855 D6 08            sub 8
 228+ 9857 67               ld h,a
 229+ 9858 7C           3 ld a,h
 230+ 9859 FE 58            cp $58
 231+ 985B 28 02            jr z,4F
 232+ 985D 10 C1            djnz 1B
 233+ 985F ED 7B F7 89  4 ld sp,(Stack)
 234+ 9863 C9           	ret
 235+ 9864
 236+ 9864 ED 73 F7 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9868 FD F9        	ld sp,iy
 238+ 986A 06 08            ld b,8
 239+ 986C D1           1 pop de
 240+ 986D D1           	pop de
 241+ 986E 7B           	ld a,e
 242+ 986F AE           	xor (hl)
 243+ 9870 77           	ld (hl),a
 244+ 9871 24            	inc h
 245+ 9872 7C               ld a,h
 246+ 9873 E6 07            and 7
 247+ 9875 20 0A            jr nz,2F
 248+ 9877 7D               ld a,l
 249+ 9878 C6 20            add a,$20
 250+ 987A 6F               ld l,a
 251+ 987B 38 04            jr c,2F
 252+ 987D 7C               ld a,h
 253+ 987E D6 08            sub 8
 254+ 9880 67               ld h,a
 255+ 9881 7C           2 ld a,h
 256+ 9882 FE 58            cp $58
 257+ 9884 28 1B            jr z,4F
 258+ 9886 D1               pop de
 259+ 9887 7A           	ld a,d
 260+ 9888 AE           	xor (hl)
 261+ 9889 77           	ld (hl),a
 262+ 988A 24           	inc h
 263+ 988B 7C               ld a,h
 264+ 988C E6 07            and 7
 265+ 988E 20 0A            jr nz,3F
 266+ 9890 7D               ld a,l
 267+ 9891 C6 20            add a,$20
 268+ 9893 6F               ld l,a
 269+ 9894 38 04            jr c,3F
 270+ 9896 7C               ld a,h
 271+ 9897 D6 08            sub 8
 272+ 9899 67               ld h,a
 273+ 989A 7C           3 ld a,h
 274+ 989B FE 58            cp $58
 275+ 989D 28 02            jr z,4F
 276+ 989F 10 CB            djnz 1B
 277+ 98A1 ED 7B F7 89  4 ld sp,(Stack)
 278+ 98A5 C9           	ret
 279+ 98A6
 280+ 98A6 ED 73 F7 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98AA FD F9        	ld sp,iy
 282+ 98AC 06 08            ld b,8
 283+ 98AE D1           1 pop de
 284+ 98AF 7B           	ld a,e
 285+ 98B0 AE           	xor (hl)
 286+ 98B1 77           	ld (hl),a
 287+ 98B2 23           	inc hl
 288+ 98B3 7A           	ld a,d
 289+ 98B4 AE           	xor (hl)
 290+ 98B5 77           	ld (hl),a
 291+ 98B6 2B           	dec hl
 292+ 98B7 24             	inc h
 293+ 98B8 7C               ld a,h
 294+ 98B9 E6 07            and 7
 295+ 98BB 20 0A            jr nz,2F
 296+ 98BD 7D               ld a,l
 297+ 98BE C6 20            add a,$20
 298+ 98C0 6F               ld l,a
 299+ 98C1 38 04            jr c,2F
 300+ 98C3 7C               ld a,h
 301+ 98C4 D6 08            sub 8
 302+ 98C6 67               ld h,a
 303+ 98C7 7C           2 ld a,h
 304+ 98C8 FE 58            cp $58
 305+ 98CA 28 21            jr z,4F
 306+ 98CC D1               pop de
 307+ 98CD 7A           	ld a,d
 308+ 98CE AE           	xor (hl)
 309+ 98CF 77           	ld (hl),a
 310+ 98D0 23           	inc hl
 311+ 98D1 D1               pop de
 312+ 98D2 7B           	ld a,e
 313+ 98D3 AE           	xor (hl)
 314+ 98D4 77           	ld (hl),a
 315+ 98D5 2B           	dec hl
 316+ 98D6 24           	inc h
 317+ 98D7 7C               ld a,h
 318+ 98D8 E6 07            and 7
 319+ 98DA 20 0A            jr nz,3F
 320+ 98DC 7D               ld a,l
 321+ 98DD C6 20            add a,$20
 322+ 98DF 6F               ld l,a
 323+ 98E0 38 04            jr c,3F
 324+ 98E2 7C               ld a,h
 325+ 98E3 D6 08            sub 8
 326+ 98E5 67               ld h,a
 327+ 98E6 7C           3 ld a,h
 328+ 98E7 FE 58            cp $58
 329+ 98E9 28 02            jr z,4F
 330+ 98EB 10 C1            djnz 1B
 331+ 98ED ED 7B F7 89  4 ld sp,(Stack)
 332+ 98F1 C9           	ret
 333+ 98F2
 334+ 98F2 ED 73 F7 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98F6 FD F9        	ld sp,iy
 336+ 98F8 06 08            ld b,8
 337+ 98FA D1           1 pop de
 338+ 98FB 7B           	ld a,e
 339+ 98FC AE           	xor (hl)
 340+ 98FD 77           	ld (hl),a
 341+ 98FE 24            	inc h
 342+ 98FF 7C               ld a,h
 343+ 9900 E6 07            and 7
 344+ 9902 20 0A            jr nz,2F
 345+ 9904 7D               ld a,l
 346+ 9905 C6 20            add a,$20
 347+ 9907 6F               ld l,a
 348+ 9908 38 04            jr c,2F
 349+ 990A 7C               ld a,h
 350+ 990B D6 08            sub 8
 351+ 990D 67               ld h,a
 352+ 990E 7C           2 ld a,h
 353+ 990F FE 58            cp $58
 354+ 9911 28 1C            jr z,4F
 355+ 9913 D1               pop de
 356+ 9914 7A           	ld a,d
 357+ 9915 AE           	xor (hl)
 358+ 9916 77           	ld (hl),a
 359+ 9917 24           	inc h
 360+ 9918 7C               ld a,h
 361+ 9919 E6 07            and 7
 362+ 991B 20 0A            jr nz,3F
 363+ 991D 7D               ld a,l
 364+ 991E C6 20            add a,$20
 365+ 9920 6F               ld l,a
 366+ 9921 38 04            jr c,3F
 367+ 9923 7C               ld a,h
 368+ 9924 D6 08            sub 8
 369+ 9926 67               ld h,a
 370+ 9927 7C           3 ld a,h
 371+ 9928 FE 58            cp $58
 372+ 992A 28 03            jr z,4F
 373+ 992C D1               pop de
 374+ 992D 10 CB            djnz 1B
 375+ 992F ED 7B F7 89  4 ld sp,(Stack)
 376+ 9933 C9           	ret
 377+ 9934
 378+ 9934              ; ---------------------------------------------------
 379+ 9934              ;
 380+ 9934              ;   27/02/23
 381+ 9934              ;
 382+ 9934              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9934              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9934              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9934
 386+ 9934 ED 73 F7 89  Pinta_Disparo ld (Stack),sp
 387+ 9938 FD F9            ld sp,iy
 388+ 993A 06 03            ld b,3
 389+ 993C D1           1 pop de
 390+ 993D 7B               ld a,e
 391+ 993E AE               xor (hl)
 392+ 993F 77               ld (hl),a
 393+ 9940 23               inc hl
 394+ 9941 7A               ld a,d
 395+ 9942 AE               xor (hl)
 396+ 9943 77               ld (hl),a
 397+ 9944 2B               dec hl
 398+ 9945
 399+ 9945 24               inc h
 400+ 9946 7C               ld a,h
 401+ 9947 E6 07            and 7
 402+ 9949 20 0A            jr nz,2F
 403+ 994B 7D               ld a,l
 404+ 994C C6 20            add a,$20
 405+ 994E 6F               ld l,a
 406+ 994F 38 04            jr c,2F
 407+ 9951 7C               ld a,h
 408+ 9952 D6 08            sub 8
 409+ 9954 67               ld h,a
 410+ 9955 7C           2 ld a,h
 411+ 9956 FE 58            cp $58
 412+ 9958 28 02            jr z,3F
 413+ 995A
 414+ 995A 10 E0            djnz 1B
 415+ 995C ED 7B F7 89  3 ld sp,(Stack)
 416+ 9960 C9               ret
 417+ 9961
# file closed: Rutinas_de_impresion_sprites.asm
1387  9961              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9961              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9961              ;
   3+ 9961              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9961              ;
   5+ 9961              ; *****************************************************************************************************************************************************************************************
   6+ 9961              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9961
   8+ 9961 7C           calcula_tercio ld a,h
   9+ 9962 E6 18        	and $18
  10+ 9964 CB 2F        	sra a
  11+ 9966 CB 2F        	sra a
  12+ 9968 CB 2F        	sra a
  13+ 996A C9           	ret
  14+ 996B
# file closed: calcula_tercio.asm
1388  996B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 996B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 996B              ;
   3+ 996B              ;
   4+ 996B              ;	CLS.
   5+ 996B              ;
   6+ 996B              ;	Limpia la pantalla y define sus atributos.
   7+ 996B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 996B              ;
   9+ 996B              ;	COLORES: 0 ..... NEGRO
  10+ 996B              ;    		 1 ..... AZUL
  11+ 996B              ; 			 2 ..... ROJO
  12+ 996B              ;			 3 ..... MAGENTA
  13+ 996B              ; 			 4 ..... VERDE
  14+ 996B              ; 			 5 ..... CIAN
  15+ 996B              ;			 6 ..... AMARILLO
  16+ 996B              ; 			 7 ..... BLANCO
  17+ 996B              ;
  18+ 996B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 996B              ;
  20+ 996B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 996B
  22+ 996B
  23+ 996B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 996E 11 01 40     	LD DE,$4001
  25+ 9971 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9974 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9976 ED B0        	LDIR
  28+ 9978 01 FF 02     	LD BC,767
  29+ 997B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 997C ED B0        	LDIR
  31+ 997E C9           	ret
  32+ 997F
# file closed: Cls.asm
1389  997F              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 997F              ; ******************************************************************************************************************************************************************************************
   2+ 997F              ;
   3+ 997F              ;   20/05/23
   4+ 997F              ;
   5+ 997F              ;	Recompone_posicion_inicio
   6+ 997F              ;
   7+ 997F              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 997F              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 997F              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 997F              ;	_ a una u otra rutina.
  11+ 997F
  12+ 997F              Recompone_posicion_inicio
  13+ 997F
  14+ 997F 2A B5 89     	ld hl,(Posicion_inicio)
  15+ 9982 7D           	ld a,l
  16+ 9983 E6 1F        	and $1f
  17+ 9985 28 16        	jr z,1F
  18+ 9987
  19+ 9987 FE 1F        	cp $1f
  20+ 9989 28 0D        	jr z,3F
  21+ 998B
  22+ 998B 21 E4 89     	ld hl,Ctrl_2
  23+ 998E CB C6        	set 0,(hl)
  24+ 9990 2A A7 89     	ld hl,(Puntero_objeto)
  25+ 9993 22 E7 89     	ld (Repone_puntero_objeto),hl
  26+ 9996 18 08        	jr 2F
  27+ 9998
  28+ 9998 CD 39 9B     3 call Mov_left
  29+ 999B 18 03        	jr 2F
  30+ 999D
  31+ 999D CD 1B 9A     1 call Mov_right
  32+ 99A0 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99A3 22 A7 89     	ld (Puntero_objeto),hl
  34+ 99A6 C9           	ret
  35+ 99A7
  36+ 99A7              ; ******************************************************************************************************************************************************************************************
  37+ 99A7              ;
  38+ 99A7              ;   27/05/23
  39+ 99A7              ;
  40+ 99A7              ;	Mov_down
  41+ 99A7              ;
  42+ 99A7              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99A7              ;
  44+ 99A7              ;
  45+ 99A7              Mov_down
  46+ 99A7
  47+ 99A7 CD 09 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99AA              ;																	; _ repone (Puntero_objeto).
  49+ 99AA 21 D1 89     	ld hl,Ctrl_0
  50+ 99AD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99AF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99AF              ; 																	; _ en el caso de que no lo haya.
  53+ 99AF 3A BB 89     	ld a,(Vel_down)
  54+ 99B2 47           	ld b,a
  55+ 99B3 2A A5 89         ld hl,(Posicion_actual)
  56+ 99B6 CD 61 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99B9 E6 02        	and 2
  58+ 99BB 28 0F        	jr z,1F
  59+ 99BD
  60+ 99BD              ; Nos encontramos en el último tercio de pantalla.
  61+ 99BD              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99BD
  63+ 99BD 7C           	ld a,h
  64+ 99BE FE 57        	cp $57
  65+ 99C0 20 0A        	jr nz,1F
  66+ 99C2
  67+ 99C2 7D           	ld a,l
  68+ 99C3 C6 20        	add $20
  69+ 99C5 30 05        	jr nc,1F
  70+ 99C7
  71+ 99C7              ; ------------------------------
  72+ 99C7              ;	call Reaparece_arriba
  73+ 99C7 CD C6 9C     	call Reinicio
  74+ 99CA              ; ------------------------------
  75+ 99CA
  76+ 99CA 18 08        	jr 3F
  77+ 99CC CD 95 96     1 call NextScan
  78+ 99CF 22 A5 89     	ld (Posicion_actual),hl
  79+ 99D2 10 E2            djnz 2B
  80+ 99D4 CD EC 9C     3 call Genera_coordenadas
  81+ 99D7 C9           	ret
  82+ 99D8
  83+ 99D8              ; ******************************************************************************************************************************************************************************************
  84+ 99D8              ;
  85+ 99D8              ;   27/05/23
  86+ 99D8              ;
  87+ 99D8              ;	Mov_up
  88+ 99D8              ;
  89+ 99D8              ; 	Mueve el Sprite hacia arriba.
  90+ 99D8              ;
  91+ 99D8              ;
  92+ 99D8              Mov_up
  93+ 99D8
  94+ 99D8 CD 09 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99DB              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99DB 21 D1 89     	ld hl,Ctrl_0
  97+ 99DE CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99E0              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99E0              ; 																		; _ en el caso de que no lo haya.
 100+ 99E0 3A BA 89     	ld a,(Vel_up)
 101+ 99E3 47           	ld b,a
 102+ 99E4 2A A5 89     	ld hl,(Posicion_actual)
 103+ 99E7 CD 61 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99EA A7           	and a
 105+ 99EB 20 10        	jr nz,1F
 106+ 99ED
 107+ 99ED              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99ED              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99ED
 110+ 99ED 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99EE FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99F0 20 0B            jr nz,1F
 113+ 99F2 7D               ld a,l
 114+ 99F3 D6 20            sub $20
 115+ 99F5 30 06            jr nc,1F
 116+ 99F7 25               dec h
 117+ 99F8
 118+ 99F8              ; -----------------------------
 119+ 99F8 CD A7 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99FB              ;	call Reinicio
 121+ 99FB              ; -----------------------------
 122+ 99FB
 123+ 99FB 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99FD CD A4 96     1 call PreviousScan
 125+ 9A00 22 A5 89     	ld (Posicion_actual),hl
 126+ 9A03 10 E2            djnz 3B
 127+ 9A05 CD EC 9C     2 call Genera_coordenadas
 128+ 9A08 C9           	ret
 129+ 9A09
 130+ 9A09              ; -----------------------------
 131+ 9A09              ;
 132+ 9A09              ;	27/5/23
 133+ 9A09              ;
 134+ 9A09              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A09              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A09              ;
 137+ 9A09              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A09              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A09              ;
 140+ 9A09              ;	Modifica: A y (Puntero_objeto).
 141+ 9A09
 142+ 9A09 3A E4 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A0C CB 47        	bit 0,a
 144+ 9A0E C8           	ret z
 145+ 9A0F CB 87        	res 0,a
 146+ 9A11 32 E4 89     	ld (Ctrl_2),a
 147+ 9A14 2A E7 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A17 22 A7 89     	ld (Puntero_objeto),hl
 149+ 9A1A C9           	ret
 150+ 9A1B
 151+ 9A1B              ; ******************************************************************************************************************************************************************************************
 152+ 9A1B              ;
 153+ 9A1B              ;	19/10/22
 154+ 9A1B              ;
 155+ 9A1B              ;	Mov_right.
 156+ 9A1B              ;
 157+ 9A1B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A1B              ;
 159+ 9A1B
 160+ 9A1B 21 D1 89     Mov_right ld hl,Ctrl_0
 161+ 9A1E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A20              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A20              ; 																	; _ en el caso de que no lo haya.
 164+ 9A20 3A D1 89     	ld a,(Ctrl_0)
 165+ 9A23 CB 77        	bit 6,a
 166+ 9A25 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A27
 168+ 9A27 CD 55 9C     	call Stop_Amadeus_right
 169+ 9A2A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A2B 18 4D        	jr 8F
 171+ 9A2D
 172+ 9A2D 3A A9 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A30 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A32 20 46        	jr nz,8F
 175+ 9A34
 176+ 9A34 3A AB 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A37 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A38 28 40        	jr z,8F
 179+ 9A3A
 180+ 9A3A              ; ---------- ---------- ----------
 181+ 9A3A              ;
 182+ 9A3A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A3A
 184+ 9A3A 3A B9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A3D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A3F 28 11        	jr z,1F
 187+ 9A41 38 06        	jr c,6F
 188+ 9A43 FE 04        	cp 4
 189+ 9A45 28 14        	jr z,7F
 190+ 9A47 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A49
 192+ 9A49              ; ---------- ---------- ----------
 193+ 9A49              ;
 194+ 9A49              ; Perfiles de velocidad
 195+ 9A49              ;
 196+ 9A49
 197+ 9A49 3A AB 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A4C FE FE        	cp $fe
 199+ 9A4E 20 2A        	jr nz,8F
 200+ 9A50 18 10        	jr 3F
 201+ 9A52 3A AB 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A55 FE FD        	cp $fd
 203+ 9A57 20 21        	jr nz,8F
 204+ 9A59 18 07        	jr 3F
 205+ 9A5B 3A AB 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A5E FE FB        	cp $fb
 207+ 9A60 20 18        	jr nz,8F
 208+ 9A62
 209+ 9A62              ; ---------- ---------- ----------
 210+ 9A62
 211+ 9A62              3
 212+ 9A62 CD 95 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A65              ;	call Reinicio
 214+ 9A65
 215+ 9A65              ; ---------- ---------- ----------
 216+ 9A65              ;
 217+ 9A65              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A65
 219+ 9A65 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A67 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A68 CD 81 9A     	call DESPLZ_DER
 222+ 9A6B C1           	pop bc
 223+ 9A6C 10 F9        	djnz 5B
 224+ 9A6E 2A A5 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A71 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A72 22 A5 89     	ld (Posicion_actual),hl
 227+ 9A75 CD EC 9C     	call Genera_coordenadas
 228+ 9A78 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A7A
 230+ 9A7A              ; ---------- ---------- ----------
 231+ 9A7A
 232+ 9A7A 2A A5 89     8 ld hl,(Posicion_actual)
 233+ 9A7D CD 81 9A     	call DESPLZ_DER
 234+ 9A80 C9           2 ret
 235+ 9A81
 236+ 9A81              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A81              ;
 238+ 9A81              ;	22/9/22
 239+ 9A81              ;
 240+ 9A81
 241+ 9A81 CD 90 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A84 CD DC 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A87 CD 05 9B         call Ciclo_completo
 244+ 9A8A 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A8D CB FE        	set 7,(hl)
 246+ 9A8F C9           	ret
 247+ 9A90
 248+ 9A90              ; ******************************************************************************************************************************************************************************************
 249+ 9A90              ;	15/02/23
 250+ 9A90              ;
 251+ 9A90
 252+ 9A90 3A B9 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A93 47           	ld b,a
 254+ 9A94 2A B1 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A97 23           1 inc hl
 256+ 9A98 23           	inc hl
 257+ 9A99 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A9B 22 B1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A9E CD 66 8D     	call Extrae_address
 260+ 9AA1 22 A7 89     	ld (Puntero_objeto),hl
 261+ 9AA4
 262+ 9AA4              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AA4
 264+ 9AA4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AA4              ; Cuántos movimientos hemos hecho ??
 266+ 9AA4              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AA4
 268+ 9AA4 2A AD 89     7 ld hl,(Indice_Sprite_der)
 269+ 9AA7 EB           	ex de,hl
 270+ 9AA8 A7           	and a
 271+ 9AA9 ED 52        	sbc hl,de
 272+ 9AAB CB 3D        	srl l
 273+ 9AAD 3E 08        6 ld a,8
 274+ 9AAF 95           	sub l
 275+ 9AB0 30 1E        	jr nc,3F
 276+ 9AB2
 277+ 9AB2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AB2              ; B="0".
 279+ 9AB2
 280+ 9AB2 04           4 inc b
 281+ 9AB3 3C           	inc a
 282+ 9AB4 20 FC        	jr nz,4B
 283+ 9AB6 78           	ld a,b
 284+ 9AB7 08           	ex af,af
 285+ 9AB8 2A AD 89     	ld hl,(Indice_Sprite_der)
 286+ 9ABB 23           5 inc hl
 287+ 9ABC 23           	inc hl
 288+ 9ABD 10 FC        	djnz 5B
 289+ 9ABF 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9AC2 CD 66 8D     	call Extrae_address
 291+ 9AC5 22 A7 89     	ld (Puntero_objeto),hl
 292+ 9AC8
 293+ 9AC8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AC8              ; _(Posicion_actual).
 295+ 9AC8
 296+ 9AC8 21 A5 89     	ld hl,Posicion_actual
 297+ 9ACB 34           	inc (hl)
 298+ 9ACC 08               ex af,af
 299+ 9ACD 6F           	ld l,a
 300+ 9ACE 18 DD        	jr 6B
 301+ 9AD0
 302+ 9AD0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AD0
 304+ 9AD0 47           3 ld b,a
 305+ 9AD1 2A AF 89     	ld hl,(Indice_Sprite_izq)
 306+ 9AD4 23           2 inc hl
 307+ 9AD5 23           	inc hl
 308+ 9AD6 10 FC        	djnz 2B
 309+ 9AD8 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9ADB C9           8 ret
 311+ 9ADC
 312+ 9ADC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9ADC              ;
 314+ 9ADC              ;	24/7/22
 315+ 9ADC              ;
 316+ 9ADC              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9ADC              ;
 318+ 9ADC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9ADC              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9ADC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9ADC
 322+ 9ADC 3A AB 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9ADF A7           	and a
 324+ 9AE0 20 1F        	jr nz,1F
 325+ 9AE2 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AE4 32 AB 89         ld (CTRL_DESPLZ),a
 327+ 9AE7
 328+ 9AE7 21 A4 89     	ld hl,Columns
 329+ 9AEA 34           	inc (hl)
 330+ 9AEB 3A B7 89     	ld a,(Cuad_objeto)
 331+ 9AEE E6 01        	and 1
 332+ 9AF0 28 0F        	jr z,1F
 333+ 9AF2 2A A5 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AF5 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AF6 22 A5 89     	ld (Posicion_actual),hl
 336+ 9AF9 CD EC 9C     	call Genera_coordenadas
 337+ 9AFC CD 61 9C     	call Inc_CTRL_DESPLZ
 338+ 9AFF 18 03        	jr 2F
 339+ 9B01 CD 61 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B04 C9           2 ret
 341+ 9B05
 342+ 9B05              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B05              ;
 344+ 9B05              ;	24/7/22
 345+ 9B05              ;
 346+ 9B05              ;	Ciclo_completo.
 347+ 9B05              ;
 348+ 9B05              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B05              ;
 350+ 9B05              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B05              ; 	Decrementamos (Columns).
 352+ 9B05              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B05              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B05
 355+ 9B05
 356+ 9B05 3A AB 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B08 FE FF        	cp $ff
 358+ 9B0A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B0C E6 F0        	and $f0
 360+ 9B0E 20 28        	jr nz,3F
 361+ 9B10
 362+ 9B10              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B10
 364+ 9B10 3A AB 89     	ld a,(CTRL_DESPLZ)
 365+ 9B13 47           	ld b,a
 366+ 9B14 3E F8        	ld a,$f8
 367+ 9B16 80           	add b
 368+ 9B17 32 AB 89     	ld (CTRL_DESPLZ),a
 369+ 9B1A 18 1C        	jr 3F
 370+ 9B1C 21 A4 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B1F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B20 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B21 32 AB 89     	ld (CTRL_DESPLZ),a
 374+ 9B24 3A B7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B27 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B29 20 0A        	jr nz,2F
 377+ 9B2B 2A A5 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B2E 23           	inc hl
 379+ 9B2F 22 A5 89     	ld (Posicion_actual),hl
 380+ 9B32 CD EC 9C     	call Genera_coordenadas
 381+ 9B35
 382+ 9B35              ; Inicia el puntero de Sprite.
 383+ 9B35
 384+ 9B35 CD 7D 8D     2 call Inicia_puntero_objeto_der
 385+ 9B38 C9           3 ret
 386+ 9B39
 387+ 9B39              ; ******************************************************************************************************************************************************************************************
 388+ 9B39              ;
 389+ 9B39              ;	15/02/23
 390+ 9B39              ;
 391+ 9B39              ;	Mov_left.
 392+ 9B39              ;
 393+ 9B39              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B39              ;
 395+ 9B39 21 D1 89     Mov_left ld hl,Ctrl_0
 396+ 9B3C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B3E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B3E              ; 																	; _ en el caso de que no lo haya.
 399+ 9B3E 3A D1 89     	ld a,(Ctrl_0)
 400+ 9B41 CB 77        	bit 6,a
 401+ 9B43 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B45
 403+ 9B45 CD 5B 9C     	call Stop_Amadeus_left
 404+ 9B48 C8           	ret z
 405+ 9B49 20 4A        	jr nz,8F
 406+ 9B4B
 407+ 9B4B 3A A9 89     11 ld a,(Coordenada_X)
 408+ 9B4E A7           	and a
 409+ 9B4F 20 44        	jr nz,8F
 410+ 9B51
 411+ 9B51 3A AB 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B54 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B55 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B57
 415+ 9B57              ; ---------- ---------- ----------
 416+ 9B57
 417+ 9B57 3A B8 89     	ld a,(Vel_left)
 418+ 9B5A FE 02        	cp 2
 419+ 9B5C 28 0F        	jr z,1F
 420+ 9B5E 38 04        	jr c,6F
 421+ 9B60 FE 04        	cp 4
 422+ 9B62 28 12        	jr z,7F
 423+ 9B64
 424+ 9B64              ; ---------- ---------- ----------
 425+ 9B64
 426+ 9B64 3A AB 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B67 FE F8        	cp $f8
 428+ 9B69 20 2A        	jr nz,8F
 429+ 9B6B 18 10        	jr 4F
 430+ 9B6D 3A AB 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B70 FE F9        	cp $f9
 432+ 9B72 20 21        	jr nz,8F
 433+ 9B74 18 07        	jr 4F
 434+ 9B76 3A AB 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B79 FE FB        	cp $fb
 436+ 9B7B 20 18        	jr nz,8F
 437+ 9B7D
 438+ 9B7D              ; ---------- ---------- ----------
 439+ 9B7D
 440+ 9B7D              4
 441+ 9B7D CD 83 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B80              ;	call Reinicio
 443+ 9B80
 444+ 9B80              ; ---------- ---------- ----------
 445+ 9B80
 446+ 9B80 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B82 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B83
 449+ 9B83              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B83              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B83
 452+ 9B83 CD 9C 9B     	call DESPLZ_IZQ
 453+ 9B86 C1           	pop bc
 454+ 9B87 10 F9        	djnz 5B
 455+ 9B89 2A A5 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B8C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B8D 22 A5 89     	ld (Posicion_actual),hl
 458+ 9B90 CD EC 9C     	call Genera_coordenadas
 459+ 9B93 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B95
 461+ 9B95              ; ---------- ---------- ----------
 462+ 9B95
 463+ 9B95              ; Movemos, no hay recolocación.
 464+ 9B95
 465+ 9B95 2A A5 89     8 ld hl,(Posicion_actual)
 466+ 9B98 CD 9C 9B     	call DESPLZ_IZQ
 467+ 9B9B C9           2 ret
 468+ 9B9C
 469+ 9B9C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B9C              ;
 471+ 9B9C              ;	22/9/22
 472+ 9B9C
 473+ 9B9C              DESPLZ_IZQ
 474+ 9B9C
 475+ 9B9C CD AB 9B     	call Desplaza_izquierda
 476+ 9B9F CD F7 9B         call modifica_parametros_1er_DESPLZ
 477+ 9BA2 CD 1F 9C     	call Ciclo_completo_2
 478+ 9BA5 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9BA8 CB BE        	res 7,(hl)
 480+ 9BAA C9           	ret
 481+ 9BAB
 482+ 9BAB              Desplaza_izquierda
 483+ 9BAB
 484+ 9BAB 3A B8 89     	ld a,(Vel_left)
 485+ 9BAE 47           	ld b,a
 486+ 9BAF 2A B3 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9BB2 23           1 inc hl
 488+ 9BB3 23           	inc hl
 489+ 9BB4 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9BB6 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9BB9 CD 66 8D     	call Extrae_address
 492+ 9BBC 22 A7 89     	ld (Puntero_objeto),hl
 493+ 9BBF
 494+ 9BBF              ; Modifica (Puntero_DESPLZ_der).
 495+ 9BBF
 496+ 9BBF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9BBF              ; Cuántos movimientos hemos hecho ??
 498+ 9BBF              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9BBF
 500+ 9BBF 2A AF 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9BC2 EB           	ex de,hl
 502+ 9BC3 A7           	and a
 503+ 9BC4 ED 52        	sbc hl,de
 504+ 9BC6 CB 3D        	srl l
 505+ 9BC8 3E 08        6 ld a,8
 506+ 9BCA 95           	sub l
 507+ 9BCB 30 1E        	jr nc,3F
 508+ 9BCD
 509+ 9BCD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9BCD              ; B="0".
 511+ 9BCD
 512+ 9BCD 04           4 inc b
 513+ 9BCE 3C           	inc a
 514+ 9BCF 20 FC        	jr nz,4B
 515+ 9BD1 78           	ld a,b
 516+ 9BD2 08           	ex af,af
 517+ 9BD3 2A AF 89     	ld hl,(Indice_Sprite_izq)
 518+ 9BD6 23           5 inc hl
 519+ 9BD7 23           	inc hl
 520+ 9BD8 10 FC        	djnz 5B
 521+ 9BDA 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9BDD CD 66 8D     	call Extrae_address
 523+ 9BE0 22 A7 89     	ld (Puntero_objeto),hl
 524+ 9BE3
 525+ 9BE3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9BE3              ; _(Posicion_actual).
 527+ 9BE3
 528+ 9BE3 21 A5 89     	ld hl,Posicion_actual
 529+ 9BE6 35           	dec (hl)
 530+ 9BE7 08           	ex af,af
 531+ 9BE8 6F           	ld l,a
 532+ 9BE9 18 DD        	jr 6B
 533+ 9BEB
 534+ 9BEB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9BEB
 536+ 9BEB 47           3 ld b,a
 537+ 9BEC 2A AD 89     	ld hl,(Indice_Sprite_der)
 538+ 9BEF 23           2 inc hl
 539+ 9BF0 23           	inc hl
 540+ 9BF1 10 FC        	djnz 2B
 541+ 9BF3 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9BF6 C9           8 ret
 543+ 9BF7
 544+ 9BF7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9BF7              ;
 546+ 9BF7              ;	modifica_parametros_1er_DESPLZ
 547+ 9BF7              ;
 548+ 9BF7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9BF7              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9BF7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9BF7
 552+ 9BF7 3A AB 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9BFA A7           	and a
 554+ 9BFB 20 1E        	jr nz,1F
 555+ 9BFD 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9BFE 32 AB 89         ld (CTRL_DESPLZ),a
 557+ 9C01 21 A4 89     	ld hl,Columns
 558+ 9C04 34           	inc (hl)
 559+ 9C05 3A B7 89     	ld a,(Cuad_objeto)
 560+ 9C08 E6 01        	and 1
 561+ 9C0A 20 0F        	jr nz,1F
 562+ 9C0C 2A A5 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C0F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C10 22 A5 89     	ld (Posicion_actual),hl
 565+ 9C13 CD EC 9C     	call Genera_coordenadas
 566+ 9C16 CD 72 9C     	call Dec_CTRL_DESPLZ
 567+ 9C19 18 03        	jr 2F
 568+ 9C1B CD 72 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C1E C9           2 ret
 570+ 9C1F
 571+ 9C1F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C1F
 573+ 9C1F 3A AB 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C22 FE F7        	cp $f7
 575+ 9C24 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C26 30 2C        	jr nc,3F
 577+ 9C28
 578+ 9C28              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C28
 580+ 9C28 06 00        	ld b,0
 581+ 9C2A 04           4 inc b
 582+ 9C2B 3C           	inc a
 583+ 9C2C FE F7        	cp $f7
 584+ 9C2E 20 FA        	jr nz,4B
 585+ 9C30 3E FF        	ld a,$ff
 586+ 9C32 90           	sub b
 587+ 9C33 32 AB 89     	ld (CTRL_DESPLZ),a
 588+ 9C36 18 1C        	jr 3F
 589+ 9C38
 590+ 9C38              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C38
 592+ 9C38 21 A4 89     1 ld hl,Columns
 593+ 9C3B 35           	dec (hl)
 594+ 9C3C AF           	xor a
 595+ 9C3D 32 AB 89     	ld (CTRL_DESPLZ),a
 596+ 9C40 3A B7 89     	ld a,(Cuad_objeto)
 597+ 9C43 E6 01        	and 1
 598+ 9C45 28 0A        	jr z,2F
 599+ 9C47 2A A5 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C4A 2B           	dec hl
 601+ 9C4B 22 A5 89     	ld (Posicion_actual),hl
 602+ 9C4E CD EC 9C     	call Genera_coordenadas
 603+ 9C51
 604+ 9C51              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C51
 606+ 9C51 CD 90 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C54 C9           3 ret
 608+ 9C55
 609+ 9C55              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C55              ;
 611+ 9C55              ;	19/10/22
 612+ 9C55              ;
 613+ 9C55              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C55              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C55
 616+ 9C55 3A A9 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C58 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C5A C9           	ret
 619+ 9C5B
 620+ 9C5B              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C5B              ;
 622+ 9C5B              ;	19/10/22
 623+ 9C5B              ;
 624+ 9C5B              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C5B              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C5B
 627+ 9C5B 3A A9 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C5E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C60 C9           	ret
 630+ 9C61
 631+ 9C61              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C61              ;
 633+ 9C61              ;	24/7/22
 634+ 9C61              ;
 635+ 9C61              ;	Inc_CTRL_DESPLZ
 636+ 9C61              ;
 637+ 9C61              ;
 638+ 9C61              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C61
 640+ 9C61 21 AB 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C64 3A B9 89     	ld a,(Vel_right)
 642+ 9C67 A7           	and a
 643+ 9C68 28 06        	jr z,1F
 644+ 9C6A 47           	ld b,a
 645+ 9C6B 34           3 inc (hl)
 646+ 9C6C 10 FD        	djnz 3B
 647+ 9C6E 18 01        	jr 2F
 648+ 9C70 34           1 inc (hl)
 649+ 9C71 C9           2 ret
 650+ 9C72
 651+ 9C72              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C72              ;
 653+ 9C72              ;	5/2/23
 654+ 9C72              ;
 655+ 9C72              ;	Dec_CTRL_DESPLZ
 656+ 9C72              ;
 657+ 9C72              ;
 658+ 9C72              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C72
 660+ 9C72 21 AB 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C75 3A B8 89     	ld a,(Vel_left)
 662+ 9C78 A7           	and a
 663+ 9C79 28 06        	jr z,1F
 664+ 9C7B 47           	ld b,a
 665+ 9C7C 35           3 dec (hl)
 666+ 9C7D 10 FD        	djnz 3B
 667+ 9C7F 18 01        	jr 2F
 668+ 9C81 35           1 dec (hl)
 669+ 9C82 C9           2 ret
 670+ 9C83
 671+ 9C83              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C83
 673+ 9C83 2A A5 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C86 01 1F 00     	ld bc,31
 675+ 9C89 A7           	and a
 676+ 9C8A ED 4A        	adc hl,bc
 677+ 9C8C 22 A5 89     	ld (Posicion_actual),hl
 678+ 9C8F 21 D1 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C92 CB C6        	set 0,(hl)
 680+ 9C94 C9           	ret
 681+ 9C95
 682+ 9C95              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C95
 684+ 9C95 2A A5 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C98 01 1F 00     	ld bc,31
 686+ 9C9B A7           	and a
 687+ 9C9C ED 42        	sbc hl,bc
 688+ 9C9E 22 A5 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9CA1 21 D1 89     	ld hl,Ctrl_0
 690+ 9CA4 CB CE        	set 1,(hl)
 691+ 9CA6 C9           	ret
 692+ 9CA7
 693+ 9CA7              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9CA7
 695+ 9CA7 24           Reaparece_abajo inc h
 696+ 9CA8 01 E0 17     	ld bc,$17e0
 697+ 9CAB A7           	and a
 698+ 9CAC ED 4A        	adc hl,bc
 699+ 9CAE 22 A5 89     	ld (Posicion_actual),hl
 700+ 9CB1 21 D1 89     	ld hl,Ctrl_0
 701+ 9CB4 CB D6        	set 2,(hl)
 702+ 9CB6 C9           	ret
 703+ 9CB7
 704+ 9CB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9CB7
 706+ 9CB7 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9CBA A7           	and a
 708+ 9CBB ED 42        	sbc hl,bc
 709+ 9CBD 22 A5 89     	ld (Posicion_actual),hl
 710+ 9CC0 21 D1 89     	ld hl,Ctrl_0
 711+ 9CC3 CB DE        	set 3,(hl)
 712+ 9CC5 C9           	ret
 713+ 9CC6
 714+ 9CC6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9CC6              ;
 716+ 9CC6              ;	15/07/23
 717+ 9CC6
 718+ 9CC6              Reinicio
 719+ 9CC6
 720+ 9CC6              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9CC6
 722+ 9CC6 AF           	xor a
 723+ 9CC7 21 D8 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9CCA CD E8 9C     	call Limpia_contenido_hl
 725+ 9CCD
 726+ 9CCD 21 A5 89     	ld hl,Posicion_actual
 727+ 9CD0 CD E8 9C     	call Limpia_contenido_hl
 728+ 9CD3
 729+ 9CD3 CD 09 A0     	call Inicializa_Puntero_indice_mov
 730+ 9CD6 CD 93 9F     	call Inicia_Puntero_mov
 731+ 9CD9
 732+ 9CD9 21 DA 89     	ld hl,Incrementa_puntero
 733+ 9CDC 06 05        	ld b,5
 734+ 9CDE 77           1 ld (hl),a
 735+ 9CDF 23           	inc hl
 736+ 9CE0 10 FC        	djnz 1B
 737+ 9CE2
 738+ 9CE2 21 E4 89     	ld hl,Ctrl_2
 739+ 9CE5 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9CE7
 741+ 9CE7 C9           	ret
 742+ 9CE8
 743+ 9CE8 77           Limpia_contenido_hl	ld (hl),a
 744+ 9CE9 23           	inc hl
 745+ 9CEA 77           	ld (hl),a
 746+ 9CEB C9           	ret
 747+ 9CEC
 748+ 9CEC
# file closed: Direcciones.asm
1390  9CEC              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CEC              ; ------------------------------------------------------------------------
   2+ 9CEC              ;
   3+ 9CEC              ;	02/04/23
   4+ 9CEC              ;
   5+ 9CEC              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CEC              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CEC              ;
   8+ 9CEC              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CEC              ;
  10+ 9CEC              ;	Modifica: A,BC y DE.
  11+ 9CEC
  12+ 9CEC C5           Genera_coordenadas push bc
  13+ 9CED E5           	push hl
  14+ 9CEE D5           	push de
  15+ 9CEF
  16+ 9CEF 2A A5 89     	ld hl,(Posicion_actual)
  17+ 9CF2
  18+ 9CF2 7D           	ld a,l
  19+ 9CF3 E6 1F        	and $1f
  20+ 9CF5 32 A9 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CF8
  22+ 9CF8 CD 61 99     	call calcula_tercio
  23+ 9CFB 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CFC
  25+ 9CFC 1E 00        	ld e,0
  26+ 9CFE 7D           	ld a,l
  27+ 9CFF E6 E0        	and $e0
  28+ 9D01 28 01        	jr z,1F
  29+ 9D03 04           	inc b
  30+ 9D04
  31+ 9D04 04           1 inc b
  32+ 9D05 05           	dec b
  33+ 9D06 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D08              ;														; _ , salimos.
  35+ 9D08 1C           3 inc e
  36+ 9D09 D6 20        	sub 32
  37+ 9D0B 20 FB        	jr nz,3B
  38+ 9D0D 10 F5        	djnz 1B
  39+ 9D0F
  40+ 9D0F 7B           2 ld a,e
  41+ 9D10 32 AA 89     	ld (Coordenada_y),a
  42+ 9D13
  43+ 9D13 D1           	pop de
  44+ 9D14 E1           	pop hl
  45+ 9D15 C1           	pop bc
  46+ 9D16
  47+ 9D16 C9           	ret
  48+ 9D17
  49+ 9D17              ; ------------------------------------------------------------------------
  50+ 9D17              ;	28/05/23
  51+ 9D17              ;
  52+ 9D17              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D17              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D17              ;
  55+ 9D17              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D17              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D17              ;
  58+ 9D17              ;		DE="$120d"
  59+ 9D17              ;
  60+ 9D17              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D17              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D17              ;
  63+ 9D17              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D17
  65+ 9D17              ;	Modifica: A,BC y DE.
  66+ 9D17
  67+ 9D17
  68+ 9D17              Genera_coordenadas_disparo
  69+ 9D17
  70+ 9D17              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D17
  72+ 9D17 7D           	ld a,l
  73+ 9D18 E6 1F        	and $1f
  74+ 9D1A 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D1B CD 61 99     	call calcula_tercio
  76+ 9D1E 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D1F 1E 00        	ld e,0
  78+ 9D21 7D           	ld a,l
  79+ 9D22 E6 E0        	and $e0
  80+ 9D24 28 01        	jr z,1F
  81+ 9D26 04           	inc b
  82+ 9D27 1C           1 inc e
  83+ 9D28 D6 20        	sub 32
  84+ 9D2A 20 FB        	jr nz,1B
  85+ 9D2C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D2E C9           	ret
  87+ 9D2F
# file closed: Genera_coordenadas.asm
1391  9D2F              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D2F
   2+ 9D2F
   3+ 9D2F              ;   07/07/23
   4+ 9D2F              ;
   5+ 9D2F              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D2F              ;
   7+ 9D2F              ;   Codificación:
   8+ 9D2F              ;
   9+ 9D2F              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D2F              ;
  11+ 9D2F              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D2F              ;
  13+ 9D2F              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D2F              ;
  15+ 9D2F              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D2F              ;
  17+ 9D2F              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D2F              ;                               ..... %01000010 Vel_up 4
  19+ 9D2F              ;                                               Vel_down 2
  20+ 9D2F              ;                               ..... $42
  21+ 9D2F              ;
  22+ 9D2F              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D2F              ;
  24+ 9D2F              ;                               ..... %01000010 Vel_left 4
  25+ 9D2F              ;                                               Vel_right 2
  26+ 9D2F              ;                               ..... $42
  27+ 9D2F              ;
  28+ 9D2F              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D2F              ;
  30+ 9D2F              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D2F              ;
  32+ 9D2F              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D2F              ;
  34+ 9D2F              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D2F              ;                                     $53
  36+ 9D2F              ;
  37+ 9D2F              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D2F              ;
  39+ 9D2F              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D2F              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D2F              ;
  42+ 9D2F              ;                       Arriba ..... $81
  43+ 9D2F              ;                       Arriba - izquierda ..... $a1
  44+ 9D2F              ;                       Arriba - derecha ..... $91
  45+ 9D2F              ;
  46+ 9D2F              ;                       Abajo ..... $41
  47+ 9D2F              ;                       Abajo - izquierda ..... $61
  48+ 9D2F              ;                       Abajo - derecha ..... $51
  49+ 9D2F              ;
  50+ 9D2F              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D2F              ;
  52+ 9D2F              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D2F              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D2F              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D2F              ;
  56+ 9D2F              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D2F              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D2F              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D2F              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D2F              ;
  61+ 9D2F              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D2F              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D2F              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D2F              ;
  65+ 9D2F              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D2F              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D2F              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D2F              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D2F
  70+ 9D2F              ; ----- ----- ----- ----- -----
  71+ 9D2F
  72+ 9D2F 5B 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D31 63 9D            defw F_1
  74+ 9D33 6D 9D            defw F_2
  75+ 9D35 77 9D            defw Codo_abajo_derecha
  76+ 9D37 AB 9D            defw Derecha_y_subiendo
  77+ 9D39 B5 9D            defw Derecha_y_subiendo_1
  78+ 9D3B BF 9D            defw F_3
  79+ 9D3D C9 9D            defw F_4
  80+ 9D3F D3 9D            defw Derecha_y_bajando
  81+ 9D41 DD 9D            defw Derecha_y_bajando_1
  82+ 9D43 E7 9D            defw Derecha_y_bajando_2
  83+ 9D45 F1 9D            defw Codo_derecha_abajo
  84+ 9D47 21 9E            defw Codo_abajo_izq.
  85+ 9D49 55 9E            defw Izquierda_y_subiendo
  86+ 9D4B 5F 9E            defw Izquierda_y_subiendo_1
  87+ 9D4D 69 9E            defw F_5
  88+ 9D4F 73 9E            defw F_6
  89+ 9D51 7D 9E            defw Izquierda_y_bajando
  90+ 9D53 87 9E            defw Izquierda_y_bajando_1
  91+ 9D55 91 9E            defw Izquierda_y_bajando_2
  92+ 9D57 9B 9E            defw Codo_izquierda_abajo
  93+ 9D59 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D5B
  95+ 9D5B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D5F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D63
  98+ 9D63 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D67 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D6B 08 00
 100+ 9D6D 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D71 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D75 0F FE
 102+ 9D77
 103+ 9D77 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D7B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D7F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D83 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D8B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D93 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D97 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D9B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D9F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DA7 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DAB
 117+ 9DAB 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DAF 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DB3 06 00
 119+ 9DB5
 120+ 9DB5 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DB9 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DBD 02 00
 122+ 9DBF
 123+ 9DBF 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DC3 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DC7 04 00
 125+ 9DC9 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DCD 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DD1 08 00
 127+ 9DD3
 128+ 9DD3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DD7 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DDB 02 00
 130+ 9DDD
 131+ 9DDD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DE1 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DE5 06 00
 133+ 9DE7
 134+ 9DE7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DEB 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DEF 06 00
 136+ 9DF1
 137+ 9DF1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DF1
 139+ 9DF1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DF5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DF9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E01 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E05 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E0D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E15 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E19 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E1D 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E21
 152+ 9E21 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E25 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E29 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E2D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E35 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E3D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E41 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E45 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E49 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E51 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E55
 166+ 9E55 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E59 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E5D 06 00
 168+ 9E5F
 169+ 9E5F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E63 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E67 02 00
 171+ 9E69
 172+ 9E69 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E6D 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E71 04 00
 174+ 9E73 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E77 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E7B 08 00
 176+ 9E7D
 177+ 9E7D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E81 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E85 02 00
 179+ 9E87
 180+ 9E87 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E8B 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E8F 06 00
 182+ 9E91
 183+ 9E91 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E95 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E99 06 00
 185+ 9E9B
 186+ 9E9B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E9F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EA3 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EAB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EAF 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EB7 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EBF 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EC3 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EC7 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9ECB
 199+ 9ECB              ; ----- ----- ----- ----- -----
 200+ 9ECB              ;
 201+ 9ECB              ;   27/06/23
 202+ 9ECB
 203+ 9ECB              Movimiento
 204+ 9ECB
 205+ 9ECB              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9ECB
 207+ 9ECB              ;    ld hl,(Posicion_actual)
 208+ 9ECB
 209+ 9ECB 3A E4 89         ld a,(Ctrl_2)
 210+ 9ECE CB 57            bit 2,a
 211+ 9ED0 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9ED2
 213+ 9ED2 2A D6 89         ld hl,(Puntero_mov)
 214+ 9ED5 7E               ld a,(hl)
 215+ 9ED6
 216+ 9ED6              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9ED6
 218+ 9ED6              Inicia_desplazamiento.
 219+ 9ED6
 220+ 9ED6              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9ED6
 222+ 9ED6 CD CA 9F         call Ajusta_velocidad_desplazamiento
 223+ 9ED9
 224+ 9ED9              ; Iniciamos (Repetimos_mov).
 225+ 9ED9
 226+ 9ED9 7E               ld a,(hl)
 227+ 9EDA E6 0F            and $0f
 228+ 9EDC 32 DC 89         ld (Repetimos_desplazamiento),a
 229+ 9EDF 32 DD 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9EE2
 231+ 9EE2              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EE2
 233+ 9EE2 23               inc hl
 234+ 9EE3 7E               ld a,(hl)
 235+ 9EE4 32 DF 89         ld (Cola_de_desplazamiento),a
 236+ 9EE7 2B               dec hl
 237+ 9EE8
 238+ 9EE8 21 E4 89         ld hl,Ctrl_2
 239+ 9EEB CB D6            set 2,(hl)
 240+ 9EED
 241+ 9EED              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EED              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EED
 244+ 9EED              Desplazamiento_iniciado
 245+ 9EED
 246+ 9EED CD 9E 9F         call Aplica_desplazamiento
 247+ 9EF0
 248+ 9EF0 3A E4 89         ld a,(Ctrl_2)
 249+ 9EF3 CB 67            bit 4,a
 250+ 9EF5 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EF6
 252+ 9EF6 21 DC 89     3 ld hl,Repetimos_desplazamiento
 253+ 9EF9 35               dec (hl)
 254+ 9EFA C0               ret nz
 255+ 9EFB
 256+ 9EFB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EFB              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EFB              ; Analiza (Cola_de_desplazamiento).
 259+ 9EFB
 260+ 9EFB 3A DF 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EFE A7               and a
 262+ 9EFF CC F3 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F02 28 30            jr z,Reinicia_el_movimiento
 264+ 9F04
 265+ 9F04 FE FF            cp $ff
 266+ 9F06 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F08
 268+ 9F08 FE FE            cp $fe
 269+ 9F0A CC 77 9F         call z,Fijamos_bucle
 270+ 9F0D 28 25            jr z,Reinicia_el_movimiento
 271+ 9F0F
 272+ 9F0F FE FD            cp $fd
 273+ 9F11 20 11            jr nz,1F
 274+ 9F13
 275+ 9F13              ; ---
 276+ 9F13              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F13
 278+ 9F13 3A E4 89         ld a,(Ctrl_2)
 279+ 9F16 CB 5F            bit 3,a
 280+ 9F18 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F1A
 282+ 9F1A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F1A
 284+ 9F1A 21 E4 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F1D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F1F
 287+ 9F1F CD 88 9F         call Inicia_Repetimos_movimiento
 288+ 9F22 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F24              ; ---
 290+ 9F24
 291+ 9F24 FE 01        1 cp 1
 292+ 9F26 CA 61 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F29
 294+ 9F29 3D               dec a
 295+ 9F2A 32 DF 89         ld (Cola_de_desplazamiento),a
 296+ 9F2D
 297+ 9F2D 3A DD 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F30 32 DC 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F33              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F33 C9               ret
 301+ 9F34
 302+ 9F34              Reinicia_el_movimiento
 303+ 9F34
 304+ 9F34 3A E4 89         ld a,(Ctrl_2)
 305+ 9F37 CB 5F            bit 3,a
 306+ 9F39 28 1B            jr z,2F
 307+ 9F3B
 308+ 9F3B              ; (Cola_de_desplazamiento)="254".
 309+ 9F3B
 310+ 9F3B 21 DE 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F3E 35               dec (hl)
 312+ 9F3F 20 15            jr nz,2F
 313+ 9F41
 314+ 9F41              ; Fin de las repeticiones del último movimiento.
 315+ 9F41
 316+ 9F41 21 E4 89         ld hl,Ctrl_2
 317+ 9F44 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F46
 319+ 9F46 2A D6 89         ld hl,(Puntero_mov)
 320+ 9F49 23               inc hl
 321+ 9F4A 23               inc hl
 322+ 9F4B 23               inc hl
 323+ 9F4C 22 D6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F4F              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F4F 7E               ld a,(hl)
 326+ 9F50 32 DF 89         ld (Cola_de_desplazamiento),a
 327+ 9F53
 328+ 9F53 C3 FB 9E         jp Cola
 329+ 9F56
 330+ 9F56
 331+ 9F56 CD 93 9F     2 call Inicia_Puntero_mov
 332+ 9F59
 333+ 9F59 21 E4 89         ld hl,Ctrl_2
 334+ 9F5C CB 96            res 2,(hl)
 335+ 9F5E
 336+ 9F5E C3 CB 9E         jp Movimiento
 337+ 9F61
 338+ 9F61              Siguiente_desplazamiento
 339+ 9F61
 340+ 9F61              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F61              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F61
 343+ 9F61 21 E4 89         ld hl,Ctrl_2
 344+ 9F64 CB 96            res 2,(hl)
 345+ 9F66
 346+ 9F66 2A D6 89         ld hl,(Puntero_mov)
 347+ 9F69 23               inc hl
 348+ 9F6A 23               inc hl
 349+ 9F6B 22 D6 89         ld (Puntero_mov),hl
 350+ 9F6E
 351+ 9F6E 7E               ld a,(hl)
 352+ 9F6F A7               and a
 353+ 9F70 CC F3 9F         call z,Incrementa_Puntero_indice_mov
 354+ 9F73 CA 34 9F         jp z,Reinicia_el_movimiento
 355+ 9F76
 356+ 9F76 C9               ret
 357+ 9F77              ; Subrutinas -----------------------------------------
 358+ 9F77              ; ---------- --------- --------- ---------- ----------
 359+ 9F77              ;
 360+ 9F77              ;   24/07/23
 361+ 9F77              ;
 362+ 9F77              ;   Fijamos_bucle
 363+ 9F77              ;
 364+ 9F77              ;
 365+ 9F77
 366+ 9F77              Fijamos_bucle
 367+ 9F77
 368+ 9F77 3A DA 89         ld a,(Incrementa_puntero)
 369+ 9F7A 3C               inc a
 370+ 9F7B 32 DB 89         ld (Incrementa_puntero_backup),a
 371+ 9F7E
 372+ 9F7E CD F3 9F         call Incrementa_Puntero_indice_mov
 373+ 9F81 2A D4 89         ld hl,(Puntero_indice_mov)
 374+ 9F84 22 D8 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9F87 C9               ret
 376+ 9F88
 377+ 9F88              ; ---------- --------- --------- ---------- ----------
 378+ 9F88              ;
 379+ 9F88              ;   07/7/23
 380+ 9F88              ;
 381+ 9F88              ;   Inicia_Repetimos_movimiento
 382+ 9F88              ;
 383+ 9F88              ;
 384+ 9F88
 385+ 9F88              Inicia_Repetimos_movimiento
 386+ 9F88
 387+ 9F88              ; Iniciamos (Repetimos_movimiento).
 388+ 9F88
 389+ 9F88 DD 2A D6 89      ld ix,(Puntero_mov)
 390+ 9F8C DD 7E 02         ld a,(ix+2)
 391+ 9F8F 32 DE 89         ld (Repetimos_movimiento),a
 392+ 9F92
 393+ 9F92 C9               ret
 394+ 9F93
 395+ 9F93              ; ---------- --------- --------- ---------- ----------
 396+ 9F93              ;
 397+ 9F93              ;   26/6/23
 398+ 9F93              ;
 399+ 9F93              ;   Inicia_Puntero_mov
 400+ 9F93              ;
 401+ 9F93              ;
 402+ 9F93
 403+ 9F93 2A D4 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F96 5E               ld e,(hl)
 405+ 9F97 23               inc hl
 406+ 9F98 56               ld d,(hl)
 407+ 9F99 EB               ex de,hl
 408+ 9F9A 22 D6 89         ld (Puntero_mov),hl
 409+ 9F9D C9               ret
 410+ 9F9E
 411+ 9F9E              ; ---------- --------- --------- ---------- ----------
 412+ 9F9E              ;
 413+ 9F9E              ;   27/06/23
 414+ 9F9E              ;
 415+ 9F9E              ;   Aplica_movimiento.
 416+ 9F9E
 417+ 9F9E              Aplica_desplazamiento
 418+ 9F9E
 419+ 9F9E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F9E
 421+ 9F9E 2A D6 89         ld hl, (Puntero_mov)
 422+ 9FA1
 423+ 9FA1 7E               ld a,(hl)
 424+ 9FA2 E6 F0            and $f0
 425+ 9FA4 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9FA5
 427+ 9FA5 CB 7E            bit 7,(hl)
 428+ 9FA7 28 03            jr z,1F
 429+ 9FA9 CD D8 99         call Mov_up
 430+ 9FAC 2A D6 89     1 ld hl, (Puntero_mov)
 431+ 9FAF CB 76            bit 6,(hl)
 432+ 9FB1 28 03            jr z,2F
 433+ 9FB3 CD A7 99         call Mov_down
 434+ 9FB6 2A D6 89     2 ld hl, (Puntero_mov)
 435+ 9FB9 CB 6E            bit 5,(hl)
 436+ 9FBB 28 03            jr z,3F
 437+ 9FBD CD 39 9B         call Mov_left
 438+ 9FC0 2A D6 89     3 ld hl, (Puntero_mov)
 439+ 9FC3 CB 66            bit 4,(hl)
 440+ 9FC5 C8               ret z
 441+ 9FC6 CD 1B 9A         call Mov_right
 442+ 9FC9 C9               ret
 443+ 9FCA
 444+ 9FCA              ; ---------- --------- --------- ---------- ----------
 445+ 9FCA              ;
 446+ 9FCA              ;   26/06/23
 447+ 9FCA              ;
 448+ 9FCA              ;   Ajusta_velocidad_desplazamiento.
 449+ 9FCA
 450+ 9FCA              Ajusta_velocidad_desplazamiento
 451+ 9FCA
 452+ 9FCA              ; 1er byte de la cadena de movimiento.
 453+ 9FCA              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9FCA
 455+ 9FCA CD E8 9F         call Extrae_nibble_alto
 456+ 9FCD
 457+ 9FCD 32 BA 89         ld (Vel_up),a
 458+ 9FD0 79               ld a,c
 459+ 9FD1 E6 0F            and $0f
 460+ 9FD3 32 BB 89         ld (Vel_down),a
 461+ 9FD6
 462+ 9FD6              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9FD6              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9FD6
 465+ 9FD6 23               inc hl
 466+ 9FD7 CD E8 9F         call Extrae_nibble_alto
 467+ 9FDA
 468+ 9FDA 32 B8 89         ld (Vel_left),a
 469+ 9FDD 79               ld a,c
 470+ 9FDE E6 0F            and $0f
 471+ 9FE0 32 B9 89         ld (Vel_right),a
 472+ 9FE3
 473+ 9FE3              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9FE3
 475+ 9FE3 23               inc hl
 476+ 9FE4 22 D6 89         ld (Puntero_mov),hl
 477+ 9FE7 C9               ret
 478+ 9FE8
 479+ 9FE8 06 04        Extrae_nibble_alto ld b,4
 480+ 9FEA 7E               ld a,(hl)
 481+ 9FEB 4F               ld c,a
 482+ 9FEC E6 F0            and $f0
 483+ 9FEE CB 3F        1 srl a
 484+ 9FF0 10 FC            djnz 1B
 485+ 9FF2 C9               ret
 486+ 9FF3
 487+ 9FF3              ; ---------- --------- --------- ---------- ----------
 488+ 9FF3              ;
 489+ 9FF3              ;   5/7/23
 490+ 9FF3              ;
 491+ 9FF3              ;   Incrementa_Puntero_indice_mov
 492+ 9FF3
 493+ 9FF3              Incrementa_Puntero_indice_mov
 494+ 9FF3
 495+ 9FF3 21 DA 89         ld hl,Incrementa_puntero
 496+ 9FF6 34               inc (hl)
 497+ 9FF7
 498+ 9FF7 2A D4 89         ld hl,(Puntero_indice_mov)
 499+ 9FFA 01 02 00         ld bc,2
 500+ 9FFD A7               and a
 501+ 9FFE 09               add hl,bc
 502+ 9FFF 22 D4 89         ld (Puntero_indice_mov),hl
 503+ A002
 504+ A002 7E               ld a,(hl)
 505+ A003 A7               and a
 506+ A004
 507+ A004              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A004
 509+ A004              ;    jr z,$
 510+ A004
 511+ A004              ;! Reinicia el Patrón de movimiento.
 512+ A004
 513+ A004 CC 09 A0         call z,Inicializa_Puntero_indice_mov
 514+ A007
 515+ A007 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A008
 517+ A008 C9               ret
 518+ A009
 519+ A009
 520+ A009              ; ---------- --------- --------- ---------- ----------
 521+ A009              ;
 522+ A009              ;   24/07/23
 523+ A009              ;
 524+ A009              ;   Inicializa_Puntero_indice_mov
 525+ A009
 526+ A009              Inicializa_Puntero_indice_mov
 527+ A009
 528+ A009              ; Existe etiqueta de bucle principal???
 529+ A009
 530+ A009 2A D8 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A00C 24               inc h
 532+ A00D 25               dec h
 533+ A00E 28 05            jr z,2F
 534+ A010
 535+ A010 22 D4 89         ld (Puntero_indice_mov),hl
 536+ A013 18 14            jr 3F
 537+ A015
 538+ A015              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A015
 540+ A015 3A DA 89     2 ld a,(Incrementa_puntero)
 541+ A018 47               ld b,a
 542+ A019
 543+ A019 2A D4 89         ld hl,(Puntero_indice_mov)
 544+ A01C 2B           1 dec hl
 545+ A01D 2B               dec hl
 546+ A01E 10 FC            djnz 1B
 547+ A020 22 D4 89         ld (Puntero_indice_mov),hl
 548+ A023
 549+ A023 AF               xor a
 550+ A024 32 DA 89         ld (Incrementa_puntero),a
 551+ A027 18 06            jr 4F
 552+ A029
 553+ A029 3A DB 89     3 ld a,(Incrementa_puntero_backup)
 554+ A02C 32 DA 89         ld (Incrementa_puntero),a
 555+ A02F C9           4 ret
 556+ A030
 557+ A030
 558+ A030
# file closed: Patrones_de_mov.asm
1392  A030              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A030              ; Relojes y temporizaciones.
   2+ A030
   3+ A030              ; ------------------------------------------------------
   4+ A030              ;
   5+ A030              ;	16/7/23
   6+ A030              ;
   7+ A030              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A030              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A030              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A030              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A030              ;
  12+ A030              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A030              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A030
  15+ A030              ; Disparo_entidad db 1
  16+ A030              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A030              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A030
  19+ A030              Habilita_disparos
  20+ A030
  21+ A030 7E           	ld a,(hl)
  22+ A031 A7           	and a
  23+ A032 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A033
  25+ A033 EB           	ex de,hl
  26+ A034
  27+ A034 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A035 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A036
  30+ A036              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A036
  32+ A036 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A037 7E           	ld a,(hl)
  34+ A038 23           	inc hl
  35+ A039 77           	ld (hl),a
  36+ A03A
  37+ A03A EB           	ex de,hl						; Habilitamos disparo.
  38+ A03B 3E 01        	ld a,1
  39+ A03D 77           	ld (hl),a
  40+ A03E C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1393  A03F              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A03F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A03F              ;
   3+ A03F              ;	3/1/23
   4+ A03F              ;
   5+ A03F              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A03F
   7+ A03F              ;	ADC HL,SP	LD (addr),SP
   8+ A03F              ;	ADD HL,SP	LD SP,(addr)
   9+ A03F              ;	ADD IX,SP	LD SP,nn
  10+ A03F              ; 	ADD IY,SP	LD SP,HL
  11+ A03F              ;				LD SP,IX
  12+ A03F              ;	DEC SP		LD SP,IY
  13+ A03F
  14+ A03F              ;	EX (SP),HL
  15+ A03F              ;	EX (SP),IX
  16+ A03F              ;	EX (SP),IY
  17+ A03F
  18+ A03F              ;	INC SP
  19+ A03F
  20+ A03F                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 F7 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  33+ 7FA7
  34+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  35+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  36+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  37+ 7FAC
  38+ 7FAC 3A E6 89         ld a,(Ctrl_1)
  39+ 7FAF CB 47            bit 0,a
  40+ 7FB1 28 05            jr z,2F
  41+ 7FB3
  42+ 7FB3 2A FD 89         ld hl,(Stack_snapshot_disparos)
  43+ 7FB6
  44+ 7FB6 18 03            jr 4F
  45+ 7FB8
  46+ 7FB8 2A FB 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  47+ 7FBB
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 FD 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 FB 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B F7 89  6 ld sp,(Stack)
  65+ 7FD4
  66+ 7FD4 C9               ret
  67+ 7FD5
  68+ 7FD5              ; ------------------------------------------------
  69+ 7FD5              ;
  70+ 7FD5              ;   3/08/23
  71+ 7FD5              ;
  72+ 7FD5              ;   La rutina estará situada justo después de la Caja_de_disparotes.
  73+ 7FD5
  74+ 7FD5                  org $7421
  75+ 7421
  76+ 7421              Gestiona_cajas_de_malotes
  77+ 7421
  78+ 7421              ; Desplazamos cajas.
  79+ 7421
  80+ 7421              ;   Byte1 - Byte0
  81+ 7421
  82+ 7421 21 1A 74         ld hl,Caja_de_malotes+1
  83+ 7424 7E               ld a,(hl)
  84+ 7425 A7               and a
  85+ 7426 28 04            jr z,1F
  86+ 7428
  87+ 7428              ;   El Byte1 contiene datos. Transferimos al byte0.
  88+ 7428
  89+ 7428 2B               dec hl
  90+ 7429 77               ld (hl),a
  91+ 742A 18 09            jr 2F
  92+ 742C
  93+ 742C              ; Byte1="0".
  94+ 742C              ; Byte0 contiene datos?.
  95+ 742C
  96+ 742C 21 19 74     1 ld hl,Caja_de_malotes
  97+ 742F 7E               ld a,(hl)
  98+ 7430 A7               and a
  99+ 7431 28 02            jr z,2F
 100+ 7433
 101+ 7433              ; Limpiamos Byte0 si contiene datos.
 102+ 7433
 103+ 7433 36 00            ld (hl),0
 104+ 7435
 105+ 7435              ;   Byte2 - Byte1
 106+ 7435
 107+ 7435              ;   El byte2 contiene datos?
 108+ 7435
 109+ 7435 21 1B 74     2 ld hl,Caja_de_malotes+2
 110+ 7438 7E               ld a,(hl)
 111+ 7439 A7               and a
 112+ 743A 28 04            jr z,3F
 113+ 743C
 114+ 743C              ;   El Byte2 contiene datos. Transferimos al byte1.
 115+ 743C
 116+ 743C 2B               dec hl
 117+ 743D 77               ld (hl),a
 118+ 743E 18 09            jr 4F
 119+ 7440
 120+ 7440              ; Byte2="0".
 121+ 7440              ; Byte1 contiene datos?.
 122+ 7440
 123+ 7440 21 1A 74     3 ld hl,Caja_de_malotes+1
 124+ 7443 7E               ld a,(hl)
 125+ 7444 A7               and a
 126+ 7445 28 02            jr z,4F
 127+ 7447
 128+ 7447              ; Limpiamos Byte1 si contiene datos.
 129+ 7447
 130+ 7447 36 00            ld (hl),0
 131+ 7449
 132+ 7449              ;   Byte3 - Byte2
 133+ 7449
 134+ 7449              ;   El byte3 contiene datos?
 135+ 7449
 136+ 7449 21 1C 74     4 ld hl,Caja_de_malotes+3
 137+ 744C 7E               ld a,(hl)
 138+ 744D A7               and a
 139+ 744E 28 04            jr z,5F
 140+ 7450
 141+ 7450              ;   El Byte3 contiene datos. Transferimos al byte2.
 142+ 7450
 143+ 7450 2B               dec hl
 144+ 7451 77               ld (hl),a
 145+ 7452 18 08            jr 6F
 146+ 7454
 147+ 7454              ; Byte3="0".
 148+ 7454              ; Byte2 contiene datos?.
 149+ 7454
 150+ 7454 21 1B 74     5 ld hl,Caja_de_malotes+2
 151+ 7457 7E               ld a,(hl)
 152+ 7458 A7               and a
 153+ 7459 C8               ret z
 154+ 745A
 155+ 745A              ; Limpiamos Byte2 si contiene datos.
 156+ 745A
 157+ 745A 36 00            ld (hl),0
 158+ 745C
 159+ 745C C9           6 ret
 160+ 745D
 161+ 745D              ; ------------------------------------------------
 162+ 745D              ;
 163+ 745D              ;   31/07/23
 164+ 745D              ;
 165+ 745D              ;   La rutina estará situada justo después de la Caja_de_disparotes.
 166+ 745D
 167+ 745D              Gestiona_albumes_de_fotos
 168+ 745D
 169+ 745D              ; Desplazamos álbumes.
 170+ 745D
 171+ 745D              ; (Album_de_fotos_1) --- (Album_de_fotos).
 172+ 745D
 173+ 745D              ;   El álbum_1 contiene datos?
 174+ 745D
 175+ 745D 18 FE            jr $
 176+ 745F
 177+ 745F 21 85 70         ld hl,Album_de_fotos_1+1
 178+ 7462 7E               ld a,(hl)
 179+ 7463 A7               and a
 180+ 7464 28 05            jr z,1F
 181+ 7466
 182+ 7466              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 183+ 7466
 184+ 7466 CD 30 75         call Album_1_a_Album_de_fotos
 185+ 7469 18 1A            jr 2F
 186+ 746B
 187+ 746B              ; El álbum_1 está vacío.
 188+ 746B              ; Album_de_fotos contiene datos?
 189+ 746B
 190+ 746B 21 01 70     1 ld hl,Album_de_fotos+1
 191+ 746E 7E               ld a,(hl)
 192+ 746F A7               and a
 193+ 7470 28 13            jr z,2F
 194+ 7472
 195+ 7472              ; Limpiamos Album_de_fotos.
 196+ 7472
 197+ 7472 21 00 70         ld hl,Album_de_fotos
 198+ 7475 36 00            ld (hl),0
 199+ 7477 11 01 70         ld de,Album_de_fotos+1
 200+ 747A 01 83 00         ld bc,$83
 201+ 747D ED B0            ldir
 202+ 747F 21 00 70         ld hl,Album_de_fotos
 203+ 7482 22 FB 89         ld (Stack_snapshot),hl
 204+ 7485
 205+ 7485              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 206+ 7485
 207+ 7485              ;   El álbum_2 contiene datos?
 208+ 7485
 209+ 7485 21 08 71     2 ld hl,Album_de_fotos_2+1
 210+ 7488 7E               ld a,(hl)
 211+ 7489 A7               and a
 212+ 748A 28 05            jr z,3F
 213+ 748C
 214+ 748C              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 215+ 748C
 216+ 748C CD 15 75         call Album_2_a_Album_1
 217+ 748F 18 1A            jr 4F
 218+ 7491
 219+ 7491              ; El álbum_2 está vacío.
 220+ 7491              ; álbum_1 contiene datos?
 221+ 7491
 222+ 7491 21 85 70     3 ld hl,Album_de_fotos_1+1
 223+ 7494 7E               ld a,(hl)
 224+ 7495 A7               and a
 225+ 7496 28 13            jr z,4F
 226+ 7498
 227+ 7498              ; Limpiamos Album_de_fotos_1.
 228+ 7498
 229+ 7498 21 84 70         ld hl,Album_de_fotos_1
 230+ 749B 36 00            ld (hl),0
 231+ 749D 11 85 70         ld de,Album_de_fotos_1+1
 232+ 74A0 01 83 00         ld bc,$83
 233+ 74A3 ED B0            ldir
 234+ 74A5 21 84 70         ld hl,Album_de_fotos_1
 235+ 74A8 22 FF 89         ld (Stack_snapshot_1),hl
 236+ 74AB
 237+ 74AB              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 238+ 74AB
 239+ 74AB              ;   El álbum_3 contiene datos?
 240+ 74AB
 241+ 74AB 21 8B 71     4 ld hl,Album_de_fotos_3+1
 242+ 74AE 7E               ld a,(hl)
 243+ 74AF A7               and a
 244+ 74B0 28 05            jr z,5F
 245+ 74B2
 246+ 74B2              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 247+ 74B2
 248+ 74B2 CD FA 74         call Album_3_a_Album_2
 249+ 74B5 18 1A            jr 6F
 250+ 74B7
 251+ 74B7              ; El álbum_3 está vacío.
 252+ 74B7              ; álbum_2 contiene datos?
 253+ 74B7
 254+ 74B7 21 08 71     5 ld hl,Album_de_fotos_2+1
 255+ 74BA 7E               ld a,(hl)
 256+ 74BB A7               and a
 257+ 74BC 28 13            jr z,6F
 258+ 74BE
 259+ 74BE              ; Limpiamos Album_de_fotos_2.
 260+ 74BE
 261+ 74BE 21 07 71         ld hl,Album_de_fotos_2
 262+ 74C1 36 00            ld (hl),0
 263+ 74C3 11 08 71         ld de,Album_de_fotos_2+1
 264+ 74C6 01 83 00         ld bc,$83
 265+ 74C9 ED B0            ldir
 266+ 74CB 21 07 71         ld hl,Album_de_fotos_2
 267+ 74CE 22 03 8A         ld (Stack_snapshot_2),hl
 268+ 74D1
 269+ 74D1 C9           6 ret
 270+ 74D2
 271+ 74D2              ; ----------------------------------------------
 272+ 74D2              ;
 273+ 74D2              ;   31/7/23
 274+ 74D2              ;
 275+ 74D2              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 276+ 74D2              ;
 277+ 74D2              ;   Para pasar datos de un album a otro:
 278+ 74D2              ;
 279+ 74D2              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 280+ 74D2              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 281+ 74D2              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 282+ 74D2
 283+ 74D2 C5           Trasbase_de_datos push bc
 284+ 74D3 A7               and a
 285+ 74D4 ED 42            sbc hl,bc
 286+ 74D6 E5               push hl
 287+ 74D7 C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 288+ 74D8 E1               pop hl
 289+ 74D9 ED B0            ldir
 290+ 74DB C9               ret
 291+ 74DC
 292+ 74DC              ; Paquetitos.
 293+ 74DC
 294+ 74DC 2A 07 8A     Trasbase_3a2 ld hl,(Stack_snapshot_3)
 295+ 74DF 01 8A 71         ld bc,Album_de_fotos_3
 296+ 74E2 CD D2 74         call Trasbase_de_datos
 297+ 74E5 C9               ret
 298+ 74E6
 299+ 74E6 2A 03 8A     Trasbase_2a1 ld hl,(Stack_snapshot_2)
 300+ 74E9 01 07 71         ld bc,Album_de_fotos_2
 301+ 74EC CD D2 74         call Trasbase_de_datos
 302+ 74EF C9               ret
 303+ 74F0
 304+ 74F0 2A FF 89     Trasbase_1a0 ld hl,(Stack_snapshot_1)
 305+ 74F3 01 84 70         ld bc,Album_de_fotos_1
 306+ 74F6 CD D2 74         call Trasbase_de_datos
 307+ 74F9 C9               ret
 308+ 74FA
 309+ 74FA              ; ----------------------------------------------
 310+ 74FA
 311+ 74FA              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 312+ 74FA              ; _ limpiamos (Album_de_fotos_3).
 313+ 74FA              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 314+ 74FA
 315+ 74FA              ;   Datos de álbum_3 a álbum_2.
 316+ 74FA
 317+ 74FA 11 07 71     Album_3_a_Album_2 ld de,Album_de_fotos_2
 318+ 74FD CD DC 74         call Trasbase_3a2
 319+ 7500
 320+ 7500              ;   Actualizamos (Stack_snapshot_2).
 321+ 7500
 322+ 7500 EB               ex de,hl
 323+ 7501 22 03 8A         ld (Stack_snapshot_2),hl
 324+ 7504
 325+ 7504              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 326+ 7504
 327+ 7504 AF               xor a
 328+ 7505 32 8A 71         ld (Album_de_fotos_3),a
 329+ 7508 11 8B 71         ld de,Album_de_fotos_3+1
 330+ 750B CD DC 74         call Trasbase_3a2
 331+ 750E
 332+ 750E 21 8A 71         ld hl,Album_de_fotos_3
 333+ 7511 22 07 8A         ld (Stack_snapshot_3),hl
 334+ 7514 C9               ret
 335+ 7515
 336+ 7515 11 84 70     Album_2_a_Album_1 ld de,Album_de_fotos_1
 337+ 7518 CD E6 74         call Trasbase_2a1
 338+ 751B
 339+ 751B              ;   Actualizamos (Stack_snapshot_1).
 340+ 751B
 341+ 751B EB               ex de,hl
 342+ 751C 22 FF 89         ld (Stack_snapshot_1),hl
 343+ 751F
 344+ 751F              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 345+ 751F
 346+ 751F AF               xor a
 347+ 7520 32 07 71         ld (Album_de_fotos_2),a
 348+ 7523 11 08 71         ld de,Album_de_fotos_2+1
 349+ 7526 CD E6 74         call Trasbase_2a1
 350+ 7529
 351+ 7529 21 07 71         ld hl,Album_de_fotos_2
 352+ 752C 22 03 8A         ld (Stack_snapshot_2),hl
 353+ 752F C9               ret
 354+ 7530
 355+ 7530 11 00 70     Album_1_a_Album_de_fotos ld de,Album_de_fotos
 356+ 7533 CD F0 74         call Trasbase_1a0
 357+ 7536
 358+ 7536              ;   Actualizamos (Stack_snapshot).
 359+ 7536
 360+ 7536 EB               ex de,hl
 361+ 7537 22 FB 89         ld (Stack_snapshot),hl
 362+ 753A
 363+ 753A               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 364+ 753A
 365+ 753A AF               xor a
 366+ 753B 32 84 70         ld (Album_de_fotos_1),a
 367+ 753E 11 85 70         ld de,Album_de_fotos_1+1
 368+ 7541 CD F0 74         call Trasbase_1a0
 369+ 7544
 370+ 7544 21 84 70         ld hl,Album_de_fotos_1
 371+ 7547 22 FF 89         ld (Stack_snapshot_1),hl
 372+ 754A C9               ret
 373+ 754B
 374+ 754B              ; -------------------- ------------------------------------
 375+ 754B
 376+ 754B              Gestiona_albumes_de_fotos_disparos
 377+ 754B
 378+ 754B              ; Desplazamos álbumes.
 379+ 754B
 380+ 754B              ; (Album_de_fotos_1) --- (Album_de_fotos).
 381+ 754B
 382+ 754B              ;   El álbum_1 contiene datos?
 383+ 754B
 384+ 754B 21 91 72         ld hl,Album_de_fotos_disparos_1+1
 385+ 754E 7E               ld a,(hl)
 386+ 754F A7               and a
 387+ 7550 28 05            jr z,1F
 388+ 7552
 389+ 7552              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 390+ 7552
 391+ 7552 CD 1C 76         call Album_1_a_Album_de_fotos_disparos
 392+ 7555 18 1A            jr 2F
 393+ 7557
 394+ 7557              ; El álbum_1 está vacío.
 395+ 7557              ; Album_de_fotos contiene datos?
 396+ 7557
 397+ 7557 21 0E 72     1 ld hl,Album_de_fotos_disparos+1
 398+ 755A 7E               ld a,(hl)
 399+ 755B A7               and a
 400+ 755C 28 13            jr z,2F
 401+ 755E
 402+ 755E              ; Limpiamos Album_de_fotos.
 403+ 755E
 404+ 755E 21 0D 72         ld hl,Album_de_fotos_disparos
 405+ 7561 36 00            ld (hl),0
 406+ 7563 11 0E 72         ld de,Album_de_fotos_disparos+1
 407+ 7566 01 83 00         ld bc,$83
 408+ 7569 ED B0            ldir
 409+ 756B 21 0D 72         ld hl,Album_de_fotos_disparos
 410+ 756E 22 FD 89         ld (Stack_snapshot_disparos),hl
 411+ 7571
 412+ 7571              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 413+ 7571
 414+ 7571              ;   El álbum_2 contiene datos?
 415+ 7571
 416+ 7571 21 1A 73     2 ld hl,Album_de_fotos_disparos_2+1
 417+ 7574 7E               ld a,(hl)
 418+ 7575 A7               and a
 419+ 7576 28 05            jr z,3F
 420+ 7578
 421+ 7578              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 422+ 7578
 423+ 7578 CD 01 76         call Album_2_a_Album_1_disparos
 424+ 757B 18 1A            jr 4F
 425+ 757D
 426+ 757D              ; El álbum_2 está vacío.
 427+ 757D              ; álbum_1 contiene datos?
 428+ 757D
 429+ 757D 21 91 72     3 ld hl,Album_de_fotos_disparos_1+1
 430+ 7580 7E               ld a,(hl)
 431+ 7581 A7               and a
 432+ 7582 28 13            jr z,4F
 433+ 7584
 434+ 7584              ; Limpiamos Album_de_fotos_1.
 435+ 7584
 436+ 7584 21 90 72         ld hl,Album_de_fotos_disparos_1
 437+ 7587 36 00            ld (hl),0
 438+ 7589 11 91 72         ld de,Album_de_fotos_disparos_1+1
 439+ 758C 01 83 00         ld bc,$83
 440+ 758F ED B0            ldir
 441+ 7591 21 90 72         ld hl,Album_de_fotos_disparos_1
 442+ 7594 22 01 8A         ld (Stack_snapshot_disparos_1),hl
 443+ 7597
 444+ 7597              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 445+ 7597
 446+ 7597              ;   El álbum_3 contiene datos?
 447+ 7597
 448+ 7597 21 97 73     4 ld hl,Album_de_fotos_disparos_3+1
 449+ 759A 7E               ld a,(hl)
 450+ 759B A7               and a
 451+ 759C 28 05            jr z,5F
 452+ 759E
 453+ 759E              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 454+ 759E
 455+ 759E CD E6 75         call Album_3_a_Album_2_disparos
 456+ 75A1 18 1A            jr 6F
 457+ 75A3
 458+ 75A3              ; El álbum_3 está vacío.
 459+ 75A3              ; álbum_2 contiene datos?
 460+ 75A3
 461+ 75A3 21 1A 73     5 ld hl,Album_de_fotos_disparos_2+1
 462+ 75A6 7E               ld a,(hl)
 463+ 75A7 A7               and a
 464+ 75A8 28 13            jr z,6F
 465+ 75AA
 466+ 75AA              ; Limpiamos Album_de_fotos_2.
 467+ 75AA
 468+ 75AA 21 19 73         ld hl,Album_de_fotos_disparos_2
 469+ 75AD 36 00            ld (hl),0
 470+ 75AF 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 471+ 75B2 01 83 00         ld bc,$83
 472+ 75B5 ED B0            ldir
 473+ 75B7 21 19 73         ld hl,Album_de_fotos_disparos_2
 474+ 75BA 22 05 8A         ld (Stack_snapshot_disparos_2),hl
 475+ 75BD
 476+ 75BD C9           6 ret
 477+ 75BE
 478+ 75BE              ; ----------------------------------------------
 479+ 75BE              ;
 480+ 75BE              ;   31/7/23
 481+ 75BE              ;
 482+ 75BE              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 483+ 75BE              ;
 484+ 75BE              ;   Para pasar datos de un album a otro:
 485+ 75BE              ;
 486+ 75BE              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 487+ 75BE              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 488+ 75BE              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 489+ 75BE
 490+ 75BE C5           Trasbase_de_datos_disparos push bc
 491+ 75BF A7               and a
 492+ 75C0 ED 42            sbc hl,bc
 493+ 75C2 E5               push hl
 494+ 75C3 C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 495+ 75C4 E1               pop hl
 496+ 75C5 ED B0            ldir
 497+ 75C7 C9               ret
 498+ 75C8
 499+ 75C8              ; Paquetitos.
 500+ 75C8
 501+ 75C8 2A 09 8A     Trasbase_3a2_disparos ld hl,(Stack_snapshot_disparos_3)
 502+ 75CB 01 96 73         ld bc,Album_de_fotos_disparos_3
 503+ 75CE CD BE 75         call Trasbase_de_datos_disparos
 504+ 75D1 C9               ret
 505+ 75D2
 506+ 75D2 2A 05 8A     Trasbase_2a1_disparos ld hl,(Stack_snapshot_disparos_2)
 507+ 75D5 01 19 73         ld bc,Album_de_fotos_disparos_2
 508+ 75D8 CD BE 75         call Trasbase_de_datos_disparos
 509+ 75DB C9               ret
 510+ 75DC
 511+ 75DC 2A 01 8A     Trasbase_1a0_disparos ld hl,(Stack_snapshot_disparos_1)
 512+ 75DF 01 90 72         ld bc,Album_de_fotos_disparos_1
 513+ 75E2 CD BE 75         call Trasbase_de_datos_disparos
 514+ 75E5 C9               ret
 515+ 75E6
 516+ 75E6              ; ----------------------------------------------
 517+ 75E6
 518+ 75E6              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 519+ 75E6              ; _ limpiamos (Album_de_fotos_3).
 520+ 75E6              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 521+ 75E6
 522+ 75E6              ;   Datos de álbum_3 a álbum_2.
 523+ 75E6
 524+ 75E6 11 19 73     Album_3_a_Album_2_disparos ld de,Album_de_fotos_disparos_2
 525+ 75E9 CD C8 75         call Trasbase_3a2_disparos
 526+ 75EC
 527+ 75EC              ;   Actualizamos (Stack_snapshot_2).
 528+ 75EC
 529+ 75EC EB               ex de,hl
 530+ 75ED 22 05 8A         ld (Stack_snapshot_disparos_2),hl
 531+ 75F0
 532+ 75F0              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 533+ 75F0
 534+ 75F0 AF               xor a
 535+ 75F1 32 96 73         ld (Album_de_fotos_disparos_3),a
 536+ 75F4 11 97 73         ld de,Album_de_fotos_disparos_3+1
 537+ 75F7 CD C8 75         call Trasbase_3a2_disparos
 538+ 75FA
 539+ 75FA 21 96 73         ld hl,Album_de_fotos_disparos_3
 540+ 75FD 22 09 8A         ld (Stack_snapshot_disparos_3),hl
 541+ 7600 C9               ret
 542+ 7601
 543+ 7601 11 90 72     Album_2_a_Album_1_disparos ld de,Album_de_fotos_disparos_1
 544+ 7604 CD D2 75         call Trasbase_2a1_disparos
 545+ 7607
 546+ 7607              ;   Actualizamos (Stack_snapshot_1).
 547+ 7607
 548+ 7607 EB               ex de,hl
 549+ 7608 22 01 8A         ld (Stack_snapshot_disparos_1),hl
 550+ 760B
 551+ 760B              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 552+ 760B
 553+ 760B AF               xor a
 554+ 760C 32 19 73         ld (Album_de_fotos_disparos_2),a
 555+ 760F 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 556+ 7612 CD D2 75         call Trasbase_2a1_disparos
 557+ 7615
 558+ 7615 21 19 73         ld hl,Album_de_fotos_disparos_2
 559+ 7618 22 05 8A         ld (Stack_snapshot_disparos_2),hl
 560+ 761B C9               ret
 561+ 761C
 562+ 761C 11 0D 72     Album_1_a_Album_de_fotos_disparos ld de,Album_de_fotos_disparos
 563+ 761F CD DC 75         call Trasbase_1a0_disparos
 564+ 7622
 565+ 7622              ;   Actualizamos (Stack_snapshot).
 566+ 7622
 567+ 7622 EB               ex de,hl
 568+ 7623 22 FD 89         ld (Stack_snapshot_disparos),hl
 569+ 7626
 570+ 7626               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 571+ 7626
 572+ 7626 AF               xor a
 573+ 7627 32 90 72         ld (Album_de_fotos_disparos_1),a
 574+ 762A 11 91 72         ld de,Album_de_fotos_disparos_1+1
 575+ 762D CD DC 75         call Trasbase_1a0_disparos
 576+ 7630
 577+ 7630 21 90 72         ld hl,Album_de_fotos_disparos_1
 578+ 7633 22 01 8A         ld (Stack_snapshot_disparos_1),hl
 579+ 7636 C9               ret
# file closed: Guarda_foto_registros.asm
1394  7637
1395  7637              	SAVESNA "Pruebas.sna", START
1396  7637
1397  7637
1398  7637
1399  7637
# file closed: Banco_de_pruebas.asm
