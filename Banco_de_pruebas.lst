# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 0A 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15              ;	ld a,(Contador_de_frames)
  43  AA15              ;	cp $70	; 	$51 ok.
  44  AA15              ;	jr z,$
  45  AA15              ;	jr nc,$
  46  AA15
  47  AA15 3E 01        	ld a,1
  48  AA17 D3 FE        	out ($fe),a
  49  AA19 CD 80 8D     	call Pinta_entidades
  50  AA1C CD 72 8D     	call Pinta_Amadeus
  51  AA1F 3E 02        	ld a,2
  52  AA21 D3 FE        	out ($fe),a
  53  AA23
  54  AA23 CD 9C 8D     	call Guarda_parametros_DRAW
  55  AA26 CD C2 8C     	call Restore_Amadeus
  56  AA29 CD C4 8A     	call Gestiona_Amadeus
  57  AA2C 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  58  AA2F CD D4 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  59  AA32
  60  AA32              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA32
  62  AA32 CD A8 8D     	call Recupera_parametros_DRAW
  63  AA35 CD 90 8D     	call Actualiza_relojes
  64  AA38 3E 00        	ld a,0
  65  AA3A D3 FE        	out ($fe),a
  66  AA3C
  67  AA3C 21 14 89     	ld hl,Ctrl_3
  68  AA3F CB 86        	res 0,(hl)
  69  AA41
  70  AA41 FD E1        	pop iy
  71  AA43 DD E1        	pop ix
  72  AA45 F1           	pop af
  73  AA46 C1           	pop bc
  74  AA47 D1           	pop de
  75  AA48 E1           	pop hl
  76  AA49 D9           	exx
  77  AA4A C1           	pop bc
  78  AA4B D1           	pop de
  79  AA4C E1           	pop hl
  80  AA4D 08           	ex af,af'
  81  AA4E F1           	pop af
  82  AA4F 08           	ex af,af'
  83  AA50 D9           	exx
  84  AA51
  85  AA51 ED 7B 0A 89  	ld sp,(Stack_3)
  86  AA55
  87  AA55 FB           	ei
  88  AA56 C9           	ret
  89  AA57
  90  AA57              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  91  AA57
  92  AA57              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA57              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA57              ;
   3+ AA57              ;	17/02/23
   4+ AA57              ;
   5+ AA57              ;	Sprites e índices.
   6+ AA57
   7+ AA57              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  93  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BF 85        	defw Caja_1
 100+ 856E 00 86        	defw Caja_2
 101+ 8570 41 86        	defw Caja_3
 102+ 8572 82 86        	defw Caja_4
 103+ 8574 C3 86        	defw Caja_5
 104+ 8576 04 87        	defw Caja_6
 105+ 8578 45 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 116+ 8586
 117+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 118+ 8587
 119+ 8587 05           	db %00000101									; (Attr).
 120+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 121+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 122+ 858C
 123+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 124+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 125+ 8590
 126+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 127+ 8592 04           	db 4 											; (Cuad_objeto).
 128+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 129+ 8597
 130+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 131+ 8598
 132+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 133+ 859E
 134+ 859E 00 00        	db 0,0											; Variables_de_pintado
 135+ 85A0 00 00        	defw 0											;	" " " " " " "
 136+ 85A2 00 00        	defw 0											;	" " " " " " "
 137+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 85A8
 139+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 140+ 85AA
 141+ 85AA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 142+ 85AC
 143+ 85AC 00           	db 0											; (Autoriza_movimiento).
 144+ 85AD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 85B1 00 00
 145+ 85B3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 85B6
 147+ 85B6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 148+ 85B8 00           	db 0											; (Cola_de_desplazamiento).
 149+ 85B9
 150+ 85B9 00           	db 0 											; (Columnas).
 151+ 85BA 00 00        	defw 0											; (Limite_horizontal).
 152+ 85BC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 153+ 85BF
 154+ 85BF              ; ---------- ---------- ---------- ---------- ----------
 155+ 85BF
 156+ 85BF 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 157+ 85C1 00 00        	defw 0											; (Posicion_actual).
 158+ 85C3 00 00        	defw 0 											; (Puntero_objeto).
 159+ 85C5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 160+ 85C8
 161+ 85C8 00           	db %00000000 									; (Attr).
 162+ 85C9
 163+ 85C9 00 00        	defw 0											; (Indice_Sprite_der).
 164+ 85CB 00 00        	defw 0											; (Indice_Sprite_izq).
 165+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 166+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 167+ 85D1
 168+ 85D1 00 00        	defw 0											; (Posicion_inicio).
 169+ 85D3 00           	db 0											; (Cuad_objeto).
 170+ 85D4
 171+ 85D4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 172+ 85D8
 173+ 85D8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 174+ 85D9
 175+ 85D9 00 00 00...  	ds 6											; Variables_de_borrado
 176+ 85DF
 177+ 85DF 00 00        	db 0,0											; Variables_de_pintado
 178+ 85E1 00 00        	defw 0											;	" " " " " " "
 179+ 85E3 00 00        	defw 0											;	" " " " " " "
 180+ 85E5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85E9
 182+ 85E9 00 00        	defw 0 											; Puntero_de_impresion.
 183+ 85EB
 184+ 85EB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 185+ 85ED
 186+ 85ED 00           	db 0											; (Autoriza_movimiento).
 187+ 85EE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 187+ 85F2 00 00
 188+ 85F4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 189+ 85F7
 190+ 85F7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 191+ 85F9 00           	db 0											; (Cola_de_desplazamiento).
 192+ 85FA
 193+ 85FA 00           	db 0 											; (Columnas).
 194+ 85FB 00 00        	defw 0											; (Limite_horizontal).
 195+ 85FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 196+ 8600
 197+ 8600              ; ---------- ---------- ---------- ---------- ----------
 198+ 8600
 199+ 8600 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 200+ 8602 00 00        	defw 0											; (Posicion_actual).
 201+ 8604 00 00        	defw 0 											; (Puntero_objeto).
 202+ 8606 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 203+ 8609
 204+ 8609 00           	db %00000000 									; (Attr).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Indice_Sprite_der).
 207+ 860C 00 00        	defw 0											; (Indice_Sprite_izq).
 208+ 860E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 209+ 8610 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 210+ 8612
 211+ 8612 00 00        	defw 0											; (Posicion_inicio).
 212+ 8614 00           	db 0											; (Cuad_objeto).
 213+ 8615
 214+ 8615 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 215+ 8619
 216+ 8619 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 217+ 861A
 218+ 861A 00 00 00...  	ds 6											; Variables_de_borrado
 219+ 8620
 220+ 8620 00 00        	db 0,0											; Variables_de_pintado
 221+ 8622 00 00        	defw 0											;	" " " " " " "
 222+ 8624 00 00        	defw 0											;	" " " " " " "
 223+ 8626 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 224+ 862A
 225+ 862A 00 00        	defw 0 											; Puntero_de_impresion.
 226+ 862C
 227+ 862C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 228+ 862E
 229+ 862E 00           	db 0											; (Autoriza_movimiento).
 230+ 862F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 230+ 8633 00 00
 231+ 8635 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 232+ 8638
 233+ 8638 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 234+ 863A 00           	db 0											; (Cola_de_desplazamiento).
 235+ 863B
 236+ 863B 00           	db 0 											; (Columnas).
 237+ 863C 00 00        	defw 0											; (Limite_horizontal).
 238+ 863E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 239+ 8641
 240+ 8641              ; ---------- ---------- ---------- ---------- ----------
 241+ 8641
 242+ 8641 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 243+ 8643 00 00        	defw 0											; (Posicion_actual).
 244+ 8645 00 00        	defw 0 											; (Puntero_objeto).
 245+ 8647 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 246+ 864A
 247+ 864A 00           	db %00000000 									; (Attr).
 248+ 864B
 249+ 864B 00 00        	defw 0											; (Indice_Sprite_der).
 250+ 864D 00 00        	defw 0											; (Indice_Sprite_izq).
 251+ 864F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 252+ 8651 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 253+ 8653
 254+ 8653 00 00        	defw 0											; (Posicion_inicio).
 255+ 8655 00           	db 0											; (Cuad_objeto).
 256+ 8656
 257+ 8656 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 258+ 865A
 259+ 865A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 260+ 865B
 261+ 865B 00 00 00...  	ds 6											; Variables_de_borrado
 262+ 8661
 263+ 8661 00 00        	db 0,0											; Variables_de_pintado
 264+ 8663 00 00        	defw 0											;	" " " " " " "
 265+ 8665 00 00        	defw 0											;	" " " " " " "
 266+ 8667 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 267+ 866B
 268+ 866B 00 00        	defw 0 											; Puntero_de_impresion.
 269+ 866D
 270+ 866D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 866F
 272+ 866F 00           	db 0											; (Autoriza_movimiento).
 273+ 8670 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 8674 00 00
 274+ 8676 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 8679
 276+ 8679 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 867B 00           	db 0											; (Cola_de_desplazamiento).
 278+ 867C
 279+ 867C 00           	db 0 											; (Columnas).
 280+ 867D 00 00        	defw 0											; (Limite_horizontal).
 281+ 867F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 8682
 283+ 8682              ; ---------- ---------- ---------- ---------- ----------
 284+ 8682
 285+ 8682 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 8684 00 00        	defw 0											; (Posicion_actual).
 287+ 8686 00 00        	defw 0 											; (Puntero_objeto).
 288+ 8688 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 868B
 290+ 868B 00           	db %00000000 									; (Attr).
 291+ 868C
 292+ 868C 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 868E 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 8690 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 8694
 297+ 8694 00 00        	defw 0											; (Posicion_inicio).
 298+ 8696 00           	db 0											; (Cuad_objeto).
 299+ 8697
 300+ 8697 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 869B
 302+ 869B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 869C
 304+ 869C 00 00 00...  	ds 6											; Variables_de_borrado
 305+ 86A2
 306+ 86A2 00 00        	db 0,0											; Variables_de_pintado
 307+ 86A4 00 00        	defw 0											;	" " " " " " "
 308+ 86A6 00 00        	defw 0											;	" " " " " " "
 309+ 86A8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 310+ 86AC
 311+ 86AC 00 00        	defw 0 											; Puntero_de_impresion.
 312+ 86AE
 313+ 86AE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 314+ 86B0
 315+ 86B0 00           	db 0											; (Autoriza_movimiento).
 316+ 86B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 316+ 86B5 00 00
 317+ 86B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 318+ 86BA
 319+ 86BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 320+ 86BC 00           	db 0											; (Cola_de_desplazamiento).
 321+ 86BD
 322+ 86BD 00           	db 0 											; (Columnas).
 323+ 86BE 00 00        	defw 0											; (Limite_horizontal).
 324+ 86C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 325+ 86C3
 326+ 86C3              ; ---------- ---------- ---------- ---------- ----------
 327+ 86C3
 328+ 86C3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 329+ 86C5 00 00        	defw 0											; (Posicion_actual).
 330+ 86C7 00 00        	defw 0 											; (Puntero_objeto).
 331+ 86C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 332+ 86CC
 333+ 86CC 00           	db %00000000 									; (Attr).
 334+ 86CD
 335+ 86CD 00 00        	defw 0											; (Indice_Sprite_der).
 336+ 86CF 00 00        	defw 0											; (Indice_Sprite_izq).
 337+ 86D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 338+ 86D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 339+ 86D5
 340+ 86D5 00 00        	defw 0											; (Posicion_inicio).
 341+ 86D7 00           	db 0											; (Cuad_objeto).
 342+ 86D8
 343+ 86D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 344+ 86DC
 345+ 86DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 346+ 86DD
 347+ 86DD 00 00 00...  	ds 6											; Variables_de_borrado
 348+ 86E3
 349+ 86E3 00 00        	db 0,0											; Variables_de_pintado
 350+ 86E5 00 00        	defw 0											;	" " " " " " "
 351+ 86E7 00 00        	defw 0											;	" " " " " " "
 352+ 86E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 353+ 86ED
 354+ 86ED 00 00        	defw 0 											; Puntero_de_impresion.
 355+ 86EF
 356+ 86EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 357+ 86F1
 358+ 86F1 00           	db 0											; (Autoriza_movimiento).
 359+ 86F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 359+ 86F6 00 00
 360+ 86F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 361+ 86FB
 362+ 86FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 363+ 86FD 00           	db 0											; (Cola_de_desplazamiento).
 364+ 86FE
 365+ 86FE 00           	db 0 											; (Columnas).
 366+ 86FF 00 00        	defw 0											; (Limite_horizontal).
 367+ 8701 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 368+ 8704
 369+ 8704              ; ---------- ---------- ---------- ---------- ----------
 370+ 8704
 371+ 8704 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 372+ 8706 00 00        	defw 0											; (Posicion_actual).
 373+ 8708 00 00        	defw 0 											; (Puntero_objeto).
 374+ 870A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 375+ 870D
 376+ 870D 00           	db %00000000 									; (Attr).
 377+ 870E
 378+ 870E 00 00        	defw 0											; (Indice_Sprite_der).
 379+ 8710 00 00        	defw 0											; (Indice_Sprite_izq).
 380+ 8712 00 00        	defw 0											; (Puntero_DESPLZ_der).
 381+ 8714 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 382+ 8716
 383+ 8716 00 00        	defw 0											; (Posicion_inicio).
 384+ 8718 00           	db 0											; (Cuad_objeto).
 385+ 8719
 386+ 8719 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 387+ 871D
 388+ 871D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 389+ 871E
 390+ 871E 00 00 00...  	ds 6											; Variables_de_borrado
 391+ 8724
 392+ 8724 00 00        	db 0,0											; Variables_de_pintado
 393+ 8726 00 00        	defw 0											;	" " " " " " "
 394+ 8728 00 00        	defw 0											;	" " " " " " "
 395+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 872E
 397+ 872E 00 00        	defw 0 											; Puntero_de_impresion.
 398+ 8730
 399+ 8730 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 400+ 8732
 401+ 8732 00           	db 0											; (Autoriza_movimiento).
 402+ 8733 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 402+ 8737 00 00
 403+ 8739 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 404+ 873C
 405+ 873C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 406+ 873E 00           	db 0											; (Cola_de_desplazamiento).
 407+ 873F
 408+ 873F 00           	db 0 											; (Columnas).
 409+ 8740 00 00        	defw 0											; (Limite_horizontal).
 410+ 8742 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 411+ 8745
 412+ 8745              ; ---------- ---------- ---------- ---------- ----------
 413+ 8745
 414+ 8745 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 415+ 8747 00 00        	defw 0											; (Posicion_actual).
 416+ 8749 00 00        	defw 0 											; (Puntero_objeto).
 417+ 874B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 418+ 874E
 419+ 874E 00           	db %00000000 									; (Attr).
 420+ 874F
 421+ 874F 00 00        	defw 0											; (Indice_Sprite_der).
 422+ 8751 00 00        	defw 0											; (Indice_Sprite_izq).
 423+ 8753 00 00        	defw 0											; (Puntero_DESPLZ_der).
 424+ 8755 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 425+ 8757
 426+ 8757 00 00        	defw 0											; (Posicion_inicio).
 427+ 8759 00           	db 0											; (Cuad_objeto).
 428+ 875A
 429+ 875A 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 430+ 875E
 431+ 875E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 432+ 875F
 433+ 875F 00 00 00...  	ds 6											; Variables_de_borrado
 434+ 8765
 435+ 8765 00 00        	db 0,0											; Variables_de_pintado
 436+ 8767 00 00        	defw 0											;	" " " " " " "
 437+ 8769 00 00        	defw 0											;	" " " " " " "
 438+ 876B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 439+ 876F
 440+ 876F 00 00        	defw 0 											; Puntero_de_impresion.
 441+ 8771
 442+ 8771 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 443+ 8773
 444+ 8773 00           	db 0											; (Autoriza_movimiento).
 445+ 8774 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 445+ 8778 00 00
 446+ 877A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 447+ 877D
 448+ 877D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 449+ 877F 00           	db 0											; (Cola_de_desplazamiento).
 450+ 8780
 451+ 8780 00           	db 0 											; (Columnas).
 452+ 8781 00 00        	defw 0											; (Limite_horizontal).
 453+ 8783 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 454+ 8786
 455+ 8786              ; -------------------------------------------------------------------------------------
 456+ 8786              ;
 457+ 8786              ;	20/05/23
 458+ 8786              ;
 459+ 8786              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 460+ 8786              ;
 461+ 8786              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 462+ 8786              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 463+ 8786              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 464+ 8786              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 465+ 8786
 466+ 8786              Indice_de_entidades
 467+ 8786
 468+ 8786 8A 87        	defw Entidad_1
 469+ 8788 9A 87        	defw Entidad_2
 470+ 878A
 471+ 878A              ;	BADSAT, (Satélite malvado).
 472+ 878A
 473+ 878A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 474+ 878C 04           	db %00000100									; (Attr).
 475+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 476+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 477+ 8791 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 478+ 8793 01           	db 1											; (Cuad_objeto).
 479+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 480+ 8798 84 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 481+ 879A
 482+ 879A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 483+ 879C 02           	db %00000010									; (Attr).
 484+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 485+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 486+ 87A1 40 50        	defw $5040                                      ; (Posicion_inicio).
 487+ 87A3 01           	db 1											; (Cuad_objeto).
 488+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 489+ 87A8 84 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 490+ 87AA
# file closed: Cajas_y_disparos.asm
  94  87AA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87AA              ; 13/05/23
   2+ 87AA
   3+ 87AA              Indice_de_niveles
   4+ 87AA
   5+ 87AA B8 87        	defw Nivel_1
   6+ 87AC BC 87        	defw Nivel_2
   7+ 87AE C9 87        	defw Nivel_3
   8+ 87B0 D9 87        	defw Nivel_4
   9+ 87B2 EB 87        	defw Nivel_5
  10+ 87B4              ;	...
  11+ 87B4              ;	...
  12+ 87B4              ;	+ Niveles ...
  13+ 87B4
  14+ 87B4 00 00        	defw 0
  15+ 87B6 00 00        	defw 0
  16+ 87B8
  17+ 87B8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87B9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87BC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87C1 01 02
  21+ 87C3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87C7 01 02
  22+ 87C9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87CE 01
  24+ 87CF 03 01 01 01  	db 3,1,1,1,1
  24+ 87D3 01
  25+ 87D4 03 01 01 01  	db 3,1,1,1,1
  25+ 87D8 01
  26+ 87D9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87DE 01
  28+ 87DF 04 01 01 01  	db 4,1,1,1,1
  28+ 87E3 01
  29+ 87E4 04 01 01 01  	db 4,1,1,1,1
  29+ 87E8 01
  30+ 87E9 02 03        	db 2,3
  31+ 87EB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87F0 01
  33+ 87F1 05 01 01 01  	db 5,1,1,1,1
  33+ 87F5 01
  34+ 87F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87FA 01
  35+ 87FB 05 01 01 01  	db 5,1,1,1,1
  35+ 87FF 01
  36+ 8800
  37+ 8800              ;---------------------------------------------------------------------------------------------------------------
  38+ 8800              ;
  39+ 8800              ;   3/9/23
  40+ 8800              ;
  41+ 8800              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8800              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8800              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8800              ;	_en la caja DRAW correspondiente.
  45+ 8800              ;
  46+ 8800              ;	MODIFICA: HL,DE y A.
  47+ 8800              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8800
  49+ 8800              Inicializa_Punteros_de_nivel
  50+ 8800
  51+ 8800 21 AA 87     	ld hl,Indice_de_niveles
  52+ 8803 22 34 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8806 CD 12 8C     	call Extrae_address
  54+ 8809 7E           	ld a,(hl)
  55+ 880A 32 FE 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 880D 23           	inc hl
  57+ 880E 22 36 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8811 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8812
  60+ 8812              ;---------------------------------------------------------------------------------------------------------------
  61+ 8812              ;
  62+ 8812              ;   13/5/23
  63+ 8812              ;
  64+ 8812              ;	Destruye A,BC,HL,DE
  65+ 8812
  66+ 8812              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8812              ;	_del juego.
  68+ 8812
  69+ 8812              Prepara_cajas
  70+ 8812
  71+ 8812              ; Preparamos los punteros de las cajas.
  72+ 8812
  73+ 8812 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8815 CD 12 8C     	call Extrae_address
  75+ 8818 CD 55 88     	call Avanza_caja
  76+ 881B
  77+ 881B CD 99 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 881E
  79+ 881E 2A 36 89     	ld hl,(Datos_de_nivel)
  80+ 8821
  81+ 8821              ; HL está en los datos del nivel correspondiente.
  82+ 8821              ; B actuará como contador de cajas.
  83+ 8821
  84+ 8821 C5           1 push bc
  85+ 8822
  86+ 8822 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8823 CD 46 88     	call PreparaBC
  88+ 8826
  89+ 8826 21 86 87     	ld hl,Indice_de_entidades
  90+ 8829 CD 4E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 882C 22 04 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 882F
  93+ 882F CD 5F 88     	call Datos_de_entidad_a_caja
  94+ 8832
  95+ 8832 2A FC 88     	ld hl,(Indice_restore_caja)
  96+ 8835 CD 12 8C     	call Extrae_address
  97+ 8838 CD 55 88     	call Avanza_caja
  98+ 883B
  99+ 883B 2A 36 89     	ld hl,(Datos_de_nivel)
 100+ 883E 23           	inc hl
 101+ 883F 22 36 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8842
 103+ 8842 C1           	pop bc
 104+ 8843 10 DC        	djnz 1B
 105+ 8845 C9           	ret
 106+ 8846
 107+ 8846 CB 27        PreparaBC sla a
 108+ 8848 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 884A 4F           	ld c,a
 110+ 884B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 884D C9           	ret
 112+ 884E
 113+ 884E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 884F ED 4A        	adc hl,bc
 115+ 8851 CD 12 8C     	call Extrae_address
 116+ 8854 C9           	ret
 117+ 8855
 118+ 8855 22 F8 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8858 13           	inc de
 120+ 8859 13           	inc de
 121+ 885A EB           	ex de,hl
 122+ 885B 22 FC 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 885E C9           	ret
 124+ 885F
 125+ 885F              Datos_de_entidad_a_caja
 126+ 885F
 127+ 885F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 885F
 129+ 885F
 130+ 885F ED 5B F8 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8863
 132+ 8863 01 02 00     	ld bc,2
 133+ 8866 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8868
 135+ 8868 01 07 00     	ld bc,7
 136+ 886B CD 93 88     	call Situa_DE
 137+ 886E
 138+ 886E 01 05 00     	ld bc,5
 139+ 8871 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8873
 141+ 8873 01 04 00     	ld bc,4
 142+ 8876 CD 93 88     	call Situa_DE
 143+ 8879
 144+ 8879 01 07 00     	ld bc,7
 145+ 887C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 887E
 147+ 887E 01 14 00     	ld bc,20
 148+ 8881 CD 93 88     	call Situa_DE
 149+ 8884
 150+ 8884 01 02 00     	ld bc,2
 151+ 8887 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8889
 153+ 8889              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8889              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8889
 156+ 8889 01 0F 00     	ld bc,15									; *****
 157+ 888C CD 93 88     	call Situa_DE
 158+ 888F
 159+ 888F 3E 03        	ld a,3
 160+ 8891 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8892
 162+ 8892 C9           	ret
 163+ 8893
 164+ 8893 EB           Situa_DE ex de,hl
 165+ 8894 A7           	and a
 166+ 8895 ED 4A        	adc hl,bc
 167+ 8897 EB           	ex de,hl
 168+ 8898 C9           	ret
 169+ 8899
 170+ 8899              ;---------------------------------------------------------------------------------------------------------------
 171+ 8899              ;
 172+ 8899              ;	21/5/23
 173+ 8899              ;
 174+ 8899              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8899              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8899              ;
 177+ 8899              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8899              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8899              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8899              ;
 181+ 8899              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8899              ;	MODIFICA: A y B.
 183+ 8899              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8899
 185+ 8899              Admin_num_entidades
 186+ 8899
 187+ 8899              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8899
 189+ 8899 3A FE 88     	ld a,(Numero_de_entidades)
 190+ 889C A7           	and a
 191+ 889D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 889D              ;	jr z,$
 193+ 889D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 889D
 195+ 889D 20 03        	jr nz,3F
 196+ 889F
 197+ 889F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 889F
 199+ 889F CD 00 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88A2
 201+ 88A2 3A FE 88     3 ld a,(Numero_de_entidades)
 202+ 88A5 FE 0A        	cp 10
 203+ 88A7 38 08        	jr c,1F
 204+ 88A9
 205+ 88A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88A9              ; Actualizamos variables.
 207+ 88A9
 208+ 88A9 3E 0A        	ld a,10
 209+ 88AB 32 FF 88     	ld (Numero_parcial_de_entidades),a
 210+ 88AE 47           	ld b,a
 211+ 88AF 18 04        	jr 2F
 212+ 88B1
 213+ 88B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88B1              ; (Numero_de_entidades)="0".
 215+ 88B1
 216+ 88B1 32 FF 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88B4 47           	ld b,a
 218+ 88B5 C9           2 ret
# file closed: Niveles.asm
  95  88B6
  96  88B6              ; ******************************************************************************************************************************************************************************************
  97  88B6              ; Constantes.
  98  88B6              ; ******************************************************************************************************************************************************************************************
  99  88B6              ;
 100  88B6              ; 10/11/23
 101  88B6
 102  88B6              ;
 103  88B6              ; Constantes generales.
 104  88B6              ;
 105  88B6
 106  88B6              Sprite_vacio equ $f000
 107  88B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 108  88B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 109  88B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 110  88B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 111  88B6
 112  88B6              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 113  88B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 114  88B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 115  88B6              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 116  88B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 117  88B6
 118  88B6              ;														; 55 Bytes.
 119  88B6
 120  88B6              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 121  88B6              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 122  88B6
 123  88B6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 124  88B6
 125  88B6              ; ******************************************************************************************************************************************************************************************
 126  88B6              ; Variables.
 127  88B6              ; ******************************************************************************************************************************************************************************************
 128  88B6              ;
 129  88B6              ; 10/11//23
 130  88B6              ;
 131  88B6              ; Variables de DRAW. (Motor principal).
 132  88B6              ;
 133  88B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 134  88B6
 135  88B6 00           Filas db 0												; Filas. [DRAW]
 136  88B7 00           Columns db 0  											; Nº de columnas. [DRAW]
 137  88B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 138  88BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 139  88BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 140  88BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 141  88BE
 142  88BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 143  88BE
 144  88BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 145  88BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 146  88BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 147  88BF 00           Attr db 0												; Atributos de la entidad:
 148  88C0
 149  88C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 150  88C0              ;
 151  88C0              ;	COLORES: 0 ..... NEGRO
 152  88C0              ;    		 1 ..... AZUL
 153  88C0              ; 			 2 ..... ROJO
 154  88C0              ;			 3 ..... MAGENTA
 155  88C0              ; 			 4 ..... VERDE
 156  88C0              ; 			 5 ..... CIAN
 157  88C0              ;			 6 ..... AMARILLO
 158  88C0              ; 			 7 ..... BLANCO
 159  88C0
 160  88C0 00 00        Indice_Sprite_der defw 0
 161  88C2 00 00        Indice_Sprite_izq defw 0
 162  88C4 00 00        Puntero_DESPLZ_der defw 0
 163  88C6 00 00        Puntero_DESPLZ_izq defw 0
 164  88C8
 165  88C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 166  88CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 167  88CB
 168  88CB              ; Variables de objeto. (Características).
 169  88CB
 170  88CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 171  88CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 172  88CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 173  88CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 174  88CF
 175  88CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 176  88D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 177  88D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 178  88D0 00 00 00...  Variables_de_borrado ds 6
 179  88D6
 180  88D6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 181  88D8 00 00        	defw 0
 182  88DA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 183  88DC 00 00 00 00  	db 0,0,0,0
 184  88E0
 185  88E0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 186  88E2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 187  88E2
 188  88E2              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88E2
 190  88E2 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88E3              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88E3              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88E3              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88E3              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88E3              ;
 196  88E3              ; 														DESCRIPCIÖN:
 197  88E3              ;
 198  88E3              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88E3              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88E3              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88E3              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88E3              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88E3              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88E3              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88E3              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88E3              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88E3              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88E3              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88E3              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88E3              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88E3              ;
 212  88E3              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88E3              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88E3              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88E3
 216  88E3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88E3
 218  88E3 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88E5 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88E7 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88E9              ;
 222  88E9              ;
 223  88E9 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88EA              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88EA              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88EA 00           Incrementa_puntero_backup db 0
 227  88EB 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88EC              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88EC 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88ED 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88EE 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88EF              ;
 233  88EF              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88EF              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88EF              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88EF              ;
 237  88EF              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88EF              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88EF              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88EF              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88EF              ;
 242  88EF              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88EF              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88EF              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88EF
 246  88EF
 247  88EF              ; Variables de funcionamiento. [DRAW].
 248  88EF
 249  88EF 00           Columnas db 0
 250  88F0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  88F2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88F2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  88F3
 254  88F3              ; variables de control general.
 255  88F3
 256  88F3 00           Ctrl_2 db 0
 257  88F4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  88F4              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  88F4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  88F4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  88F4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  88F4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  88F4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  88F4              ;
 265  88F4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  88F4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  88F4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  88F4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  88F4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  88F4
 271  88F4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  88F5
 273  88F5              ;! 63; Bytes por entidad.
 274  88F5
 275  88F5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  88F5              ;					         		---------;      ;---------
 277  88F5
 278  88F5
 279  88F5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  88F5
 281  88F5 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  88F6
 283  88F6              ;														DESCRIPCIÓN:
 284  88F6              ;
 285  88F6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  88F6              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  88F6              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  88F6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  88F6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  88F6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  88F6
 292  88F6              ;														BIT 3, Recarga de nueva oleada.
 293  88F6              ;														BIT 4, Recarga de nueva oleada.
 294  88F6              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  88F6              ;														BIT 6, **** Frame completo.
 296  88F6              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  88F6
 298  88F6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  88F8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  88F8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  88F8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  88F8
 303  88F8              ; Gestión de ENTIDADES y CAJAS.
 304  88F8
 305  88F8 00 00        Puntero_store_caja defw 0
 306  88FA 00 00        Puntero_restore_caja defw 0
 307  88FC 00 00        Indice_restore_caja defw 0
 308  88FE 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 309  88FF 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 310  8900 00           Entidades_en_curso db 0									; ..... ..... .....
 311  8901 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 312  8902              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 313  8902              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 314  8902              ;														; _ (Numero_de_malotes)="0".
 315  8902 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 316  8904 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 317  8906              ;														; _ puntero (Indice_entidades).
 318  8906
 319  8906
 320  8906              ;---------------------------------------------------------------------------------------------------------------
 321  8906              ;
 322  8906              ;	18/11/23
 323  8906              ;
 324  8906              ;	Álbumes.
 325  8906
 326  8906 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 327  8908              ;														; _variable para almacenar lo posición del puntero_
 328  8908              ; 														; _de pila, SP.
 329  8908 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 330  890A              ;														; La utiliza la rutina [Extrae_foto_registros].
 331  890A 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 332  890C 00 70        Stack_snapshot defw Album_de_fotos
 333  890E 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 334  8910
 335  8910              ;End_Snapshot defw Album_de_fotos
 336  8910              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 337  8910 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 338  8912              ;														; _el snapshot de los registros del siguiente disparo.
 339  8912              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 340  8912 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 341  8914
 342  8914 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 343  8915              ;
 344  8915              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 345  8915              ; Gestión de Disparos.
 346  8915
 347  8915 00           Numero_de_disparotes db 0
 348  8916 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 349  8918 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 350  891A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 351  891B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 352  891B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 353  891B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 354  891D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 355  891D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 356  891D              ;														; _produzca colisión.
 357  891D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 358  891F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 359  891F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 360  8922              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 361  8922 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 362  8925              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 363  8925 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 364  8927 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 365  8928
 366  8928              ;---------------------------------------------------------------------------------------------------------------
 367  8928
 368  8928              ; Relojes y temporizaciones.
 369  8928
 370  8928 00           Contador_de_frames db 0
 371  8929 00           Contador_de_frames_2 db 0
 372  892A
 373  892A 04           Clock_explosion db 4
 374  892B 1E           Clock_Entidades_en_curso db 30
 375  892C 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 376  892D              ;														; Repite la oleada de entidades.
 377  892D 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 378  892E 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 379  892F 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 380  8930
 381  8930 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 382  8931 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 383  8932 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 384  8933
 385  8933              ;---------------------------------------------------------------------------------------------------------------
 386  8933
 387  8933              ; Gestión de NIVELES.
 388  8933
 389  8933 00           Nivel db 0												; Nivel actual del juego.
 390  8934 00 00        Puntero_indice_NIVELES defw 0
 391  8936 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 392  8938              ; 														; _ que definen el NIVEL.
 393  8938              ; Y todo comienza aquí .....
 394  8938              ;
 395  8938              ; Rutina principal *************************************************************************************************************************************************************************
 396  8938              ;
 397  8938              ;	16/11/22
 398  8938
 399  8938              START
 400  8938
 401  8938 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 402  893B 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 403  893D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 404  893F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 405  8941 F3           	DI
 406  8942
 407  8942 3E 07        	ld a,%00000111
 408  8944 CD B1 98     	call Cls
 409  8947
 410  8947 CD EB 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 411  894A
 412  894A              ; INICIALIZACIÓN.
 413  894A
 414  894A CD 00 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 415  894D CD 12 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 416  8950 CD 7A 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 417  8953              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 418  8953 CD 9B 8C     	call Restore_entidad
 419  8956
 420  8956 21 FF 88     	ld hl,Numero_parcial_de_entidades
 421  8959 46           	ld b,(hl)
 422  895A 04           	inc b
 423  895B 05           	dec b
 424  895C 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 425  895E
 426  895E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 427  895E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 428  895E              ;	Pintamos el resto de entidades:
 429  895E
 430  895E              ;	INICIA ENTIDADES !!!!!
 431  895E
 432  895E C5           1 push bc  												; Guardo el contador de entidades.
 433  895F CD 4A 8B     	call Inicia_entidad
 434  8962 C1           	pop bc
 435  8963 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 436  8965
 437  8965              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 438  8965              ; (Esto se dá cuando se inicia una nueva oleada).
 439  8965
 440  8965 3A F5 88     	ld a,(Ctrl_1)
 441  8968 CB 5F        	bit 3,a
 442  896A 20 1B        	jr nz,5F											; Loop
 443  896C
 444  896C              ; 	INICIA AMADEUS !!!!!
 445  896C
 446  896C CD C2 8C     3 call Restore_Amadeus
 447  896F CD 18 8C     	call Inicia_Puntero_objeto
 448  8972 CD A4 92     	call Draw
 449  8975 CD A0 7F     	call Guarda_foto_registros
 450  8978 CD 3F 8D     	call Guarda_datos_de_borrado_Amadeus
 451  897B
 452  897B 11 7E 85     	ld de,Amadeus_db
 453  897E CD D4 8C     	call Store_Amadeus
 454  8981
 455  8981              ; 	INICIA DISPAROS !!!!!
 456  8981
 457  8981 CD 90 8B     	call Inicia_Puntero_Disparo_Entidades
 458  8984 CD 97 8B     	call Inicia_Puntero_Disparo_Amadeus
 459  8987
 460  8987              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 461  8987
 462  8987 CD 7A 8B     5 call Inicia_punteros_de_cajas
 463  898A CD 9B 8C     	call Restore_entidad
 464  898D
 465  898D 3A F5 88     	ld a,(Ctrl_1)
 466  8990 CB 5F        	bit 3,a
 467  8992 28 07        	jr z,6F
 468  8994
 469  8994              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 470  8994
 471  8994 21 F5 88     	ld hl,Ctrl_1
 472  8997 CB 9E        	res 3,(hl)
 473  8999 18 07        	jr Main
 474  899B
 475  899B              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 476  899B
 477  899B 21 14 89     6 ld hl,Ctrl_3
 478  899E CB C6        	set 0,(hl)											; Frame completo.
 479  89A0 FB           	ei
 480  89A1 76           	halt
 481  89A2
 482  89A2              ; ------------------------------------
 483  89A2
 484  89A2              Main
 485  89A2              ;
 486  89A2              ;	12/11/23
 487  89A2
 488  89A2              ; Aparece nueva entidad ???
 489  89A2
 490  89A2              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 491  89A2              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 492  89A2              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 493  89A2              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 494  89A2              ;														; _un 2º bloque.
 495  89A2
 496  89A2 3A 2B 89     	ld a,(Clock_Entidades_en_curso)
 497  89A5 47           	ld b,a
 498  89A6 3A 28 89     	ld a,(Contador_de_frames)
 499  89A9 B8           	cp b
 500  89AA 28 07        	jr z,21F
 501  89AC
 502  89AC              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 503  89AC              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 504  89AC              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 505  89AC              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 506  89AC
 507  89AC 3C           	inc a
 508  89AD B8           	cp b
 509  89AE 20 1B        	jr nz,13F
 510  89B0
 511  89B0 32 28 89     	ld (Contador_de_frames),a
 512  89B3
 513  89B3              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 514  89B3              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 515  89B3
 516  89B3 3A FF 88     21 ld a,(Numero_parcial_de_entidades)
 517  89B6 47           	ld b,a
 518  89B7 3A 00 89     	ld a,(Entidades_en_curso)
 519  89BA B8           	cp b
 520  89BB 28 0E        	jr z,13F
 521  89BD 30 0C        	jr nc,13F
 522  89BF
 523  89BF              ; --- --- --- --- ---
 524  89BF
 525  89BF 3C           	inc a
 526  89C0 32 00 89     	ld (Entidades_en_curso),a
 527  89C3
 528  89C3              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 529  89C3
 530  89C3 3A 2B 89     	ld a,(Clock_Entidades_en_curso)
 531  89C6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 532  89C6              ;! _ IMPREDECIBLE !!!!
 533  89C6 C6 32        	add 50
 534  89C8 32 2B 89     	ld (Clock_Entidades_en_curso),a
 535  89CB
 536  89CB              ; -------------------------------------------------------------------------------------------------------------
 537  89CB
 538  89CB              ; Habilita disparos.
 539  89CB
 540  89CB 21 2D 89     13 ld hl,Disparo_Amadeus
 541  89CE 11 2F 89     	ld de,CLOCK_repone_disparo_Amadeus
 542  89D1 CD 75 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 543  89D4
 544  89D4 21 30 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 545  89D7 11 32 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 546  89DA CD 75 9C     	call Habilita_disparos
 547  89DD
 548  89DD              ; COLISIONES.
 549  89DD
 550  89DD CD 91 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 551  89E0
 552  89E0              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 553  89E0              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 554  89E0              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 555  89E0
 556  89E0 AF           	xor a
 557  89E1 32 1A 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 558  89E4
 559  89E4 CD 7A 8B     	call Inicia_punteros_de_cajas
 560  89E7 CD 9B 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 561  89EA              ; 														; _ en DRAW.
 562  89EA 3A B6 88     	ld a,(Filas)
 563  89ED A7           	and a
 564  89EE 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 565  89F0 CD AD 8C     	call Incrementa_punteros_de_cajas
 566  89F3 18 F2        	jr 12B
 567  89F5
 568  89F5              ; ---------------------------------------------------------------------------------------
 569  89F5
 570  89F5 3A FF 88     10 ld a,(Numero_parcial_de_entidades)
 571  89F8 47               ld b,a
 572  89F9 A7           	and a
 573  89FA 20 14        	jr nz,11F
 574  89FC
 575  89FC 21 F5 88     	ld hl,Ctrl_1
 576  89FF CB 66        	bit 4,(hl)
 577  8A01 C2 8F 8A     	jp nz,16F
 578  8A04
 579  8A04              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 580  8A04
 581  8A04 21 F5 88     	ld hl,Ctrl_1
 582  8A07 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 583  8A09
 584  8A09 3A 28 89     	ld a,(Contador_de_frames)
 585  8A0C 3C           	inc a
 586  8A0D 32 2C 89     	ld (Activa_recarga_cajas),a
 587  8A10
 588  8A10              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 589  8A10
 590  8A10 3A 00 89     11 ld a,(Entidades_en_curso)
 591  8A13 A7           	and a
 592  8A14 CA 8F 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 593  8A17 47           	ld b,a												; No hay entidades que gestionar.
 594  8A18
 595  8A18              ; Código que ejecutamos con cada entidad:
 596  8A18              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 597  8A18
 598  8A18 C5           15 push bc 												; Nº de entidades en curso.
 599  8A19
 600  8A19              ; Impacto ???
 601  8A19
 602  8A19 3A CF 88     22 ld a,(Impacto)
 603  8A1C A7           	and a
 604  8A1D 28 31        	jr z,8F
 605  8A1F
 606  8A1F              ; Hay Impacto en esta entidad.
 607  8A1F
 608  8A1F 21 2A 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 609  8A22 35           	dec (hl)
 610  8A23 C2 84 8A     	jp nz,17F
 611  8A26
 612  8A26              ;! Velocidad de la animación de la explosión.
 613  8A26
 614  8A26 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 615  8A28              ;														; _,(velocidad de la explosión).
 616  8A28
 617  8A28              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 618  8A28
 619  8A28 CD 5F 8D     	call Repone_datos_de_borrado
 620  8A2B CD B8 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 621  8A2E
 622  8A2E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 623  8A2E
 624  8A2E 3A F3 88     	ld a,(Ctrl_2)
 625  8A31 CB 4F        	bit 1,a
 626  8A33 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 627  8A35
 628  8A35              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 629  8A35
 630  8A35 3A BE 88     	ld a,(CTRL_DESPLZ)
 631  8A38 A7           	and a
 632  8A39 20 08        	jr nz,18F
 633  8A3B
 634  8A3B 21 84 84     	ld hl,Indice_Explosion_2x2-2
 635  8A3E 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 636  8A41 18 06        	jr 19F
 637  8A43
 638  8A43 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 639  8A46 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 640  8A49
 641  8A49 21 F3 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 642  8A4C CB CE        	set 1,(hl)
 643  8A4E 18 22        	jr 7F
 644  8A50
 645  8A50              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 646  8A50              ; _con las coordenadas de la entidad almacenada en DRAW.
 647  8A50
 648  8A50 3A F5 88     8 ld a,(Ctrl_1)
 649  8A53 CB 57        	bit 2,a
 650  8A55 28 1B        	jr z,7F
 651  8A57
 652  8A57 2A 1D 89     	ld hl,(Coordenadas_disparo_certero)
 653  8A5A EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 654  8A5B              ;														; E contiene la coordenada_X del disparo.
 655  8A5B 2A BC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 656  8A5E              ;														; H FILA, (Coordenada_y de la entidad).
 657  8A5E A7           	and a
 658  8A5F ED 52        	sbc hl,de
 659  8A61
 660  8A61 CD BD 91     	call Determina_resultado_comparativa
 661  8A64
 662  8A64 78           	ld a,b
 663  8A65 A7           	and a
 664  8A66 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 665  8A68
 666  8A68              ; ----- ----- -----
 667  8A68
 668  8A68 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 669  8A6A 32 CF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 670  8A6D
 671  8A6D 21 F5 88     	ld hl,Ctrl_1
 672  8A70 CB 96        	res 2,(hl)
 673  8A72
 674  8A72 CD E6 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 675  8A75
 676  8A75 3A E2 88     	ld a,(Ctrl_0)
 677  8A78 CB 67        	bit 4,a
 678  8A7A 28 08        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 679  8A7C
 680  8A7C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 681  8A7C              ; [[[
 682  8A7C              ;	call Detecta_disparo_entidad
 683  8A7C              ; ]]]
 684  8A7C CD 5B 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 685  8A7F
 686  8A7F 21 E2 88     	ld hl,Ctrl_0
 687  8A82 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 688  8A84
 689  8A84 CD 60 8C     17 call Store_Restore_cajas
 690  8A87
 691  8A87 C1           	pop bc
 692  8A88 10 8E        	djnz 15B
 693  8A8A
 694  8A8A              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 695  8A8A              ; Hemos gestionado todas las unidades.
 696  8A8A              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 697  8A8A
 698  8A8A 21 F5 88     	ld hl,Ctrl_1
 699  8A8D CB 96        	res 2,(hl)
 700  8A8F
 701  8A8F 21 14 89     16 ld hl,Ctrl_3
 702  8A92 CB C6        	set 0,(hl)											; Frame completo.
 703  8A94 AF           	xor a
 704  8A95 D3 FE        	out ($fe),a
 705  8A97 FB           	ei
 706  8A98 76           	halt
 707  8A99
 708  8A99              ; ----------------------------------------
 709  8A99
 710  8A99 3A F5 88     	ld a,(Ctrl_1) 										; Existe Loop?
 711  8A9C CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 712  8A9E CA A2 89     	jp z,Main
 713  8AA1
 714  8AA1              ; RECARGA DE NUEVA OLEADA.
 715  8AA1
 716  8AA1 3A 28 89     	ld a,(Contador_de_frames)
 717  8AA4 47           	ld b,a
 718  8AA5 3A 2C 89     	ld a,(Activa_recarga_cajas)
 719  8AA8 B8           	cp b
 720  8AA9 28 08        	jr z,20F
 721  8AAB
 722  8AAB 21 F5 88     	ld hl,Ctrl_1
 723  8AAE CB E6        	set 4,(hl)
 724  8AB0 C3 A2 89     	jp Main
 725  8AB3
 726  8AB3 21 F5 88     20 ld hl,Ctrl_1
 727  8AB6 CB A6        	res 4,(hl)
 728  8AB8
 729  8AB8 3A 28 89     	ld a,(Contador_de_frames)
 730  8ABB
 731  8ABB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 732  8ABB              ;! _ IMPREDECIBLE !!!!
 733  8ABB
 734  8ABB C6 0A        	add 10
 735  8ABD 32 2B 89     	ld (Clock_Entidades_en_curso),a
 736  8AC0
 737  8AC0 C3 4D 89     	jp 4B
 738  8AC3
 739  8AC3 C9           	ret
 740  8AC4
 741  8AC4              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 742  8AC4              ;
 743  8AC4              ;	16/11/23
 744  8AC4
 745  8AC4              Gestiona_Amadeus
 746  8AC4
 747  8AC4              ;! Activa/desactiva impacto con Amadeus.
 748  8AC4
 749  8AC4 3A CF 88     	ld a,(Impacto)
 750  8AC7 A7           	and a
 751  8AC8 20 FE        	jr nz,$
 752  8ACA
 753  8ACA CD 37 8B     	call Mov_Amadeus
 754  8ACD
 755  8ACD 3A E2 88     	ld a,(Ctrl_0)
 756  8AD0 CB 67        	bit 4,a
 757  8AD2 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 758  8AD4
 759  8AD4 CD 5B 8B     	call Guarda_foto_entidad_a_pintar
 760  8AD7 CD 3F 8D     	call Guarda_datos_de_borrado_Amadeus
 761  8ADA
 762  8ADA 21 E2 88     14 ld hl,Ctrl_0
 763  8ADD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 764  8ADF
 765  8ADF CD 35 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 766  8AE2
 767  8AE2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 768  8AE2
 769  8AE2 CD FA 8B     	call Calcula_numero_de_disparotes
 770  8AE5
 771  8AE5 C9           	ret
 772  8AE6
 773  8AE6              ; --------------------------------------------------------------------------------------------------------------
 774  8AE6              ;
 775  8AE6              ;	27/05/23
 776  8AE6
 777  8AE6              Mov_obj
 778  8AE6
 779  8AE6 3A F3 88     	ld a,(Ctrl_2)
 780  8AE9 CB 4F        	bit 1,a
 781  8AEB 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 782  8AED
 783  8AED              ; Explosión:
 784  8AED
 785  8AED 3A F4 88     	ld a,(Frames_explosion)
 786  8AF0 A7           	and a
 787  8AF1 20 11        	jr nz,4F
 788  8AF3
 789  8AF3              ; Una alimaña menos!!!!!!!!!1
 790  8AF3
 791  8AF3 CD DD 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 792  8AF6 21 FF 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 793  8AF9 35           	dec (hl)
 794  8AFA 21 00 89     	ld hl,Entidades_en_curso
 795  8AFD 35           	dec (hl)
 796  8AFE 21 FE 88     	ld hl,Numero_de_entidades
 797  8B01 35           	dec (hl)
 798  8B02 18 32        	jr 3F
 799  8B04
 800  8B04              ; -----
 801  8B04
 802  8B04              ;	`Movemos´ la explosión.
 803  8B04
 804  8B04 2A C4 88     4 ld hl,(Puntero_DESPLZ_der)
 805  8B07 23           	inc hl
 806  8B08 23           	inc hl
 807  8B09 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 808  8B0C CD 12 8C     	call Extrae_address
 809  8B0F 22 BA 88     	ld (Puntero_objeto),hl
 810  8B12
 811  8B12 21 F4 88     	ld hl,Frames_explosion
 812  8B15 35           	dec (hl)
 813  8B16 18 1E        	jr 3F
 814  8B18
 815  8B18 AF           2 xor a
 816  8B19 32 E2 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 817  8B1C
 818  8B1C              ; Movemos Entidades malignas.
 819  8B1C
 820  8B1C CD 20 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 821  8B1F
 822  8B1F 3A E2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 823  8B22 CB 67        	bit 4,a
 824  8B24 C8           	ret z
 825  8B25
 826  8B25              ; Ha habido desplazamiento de la entidad maligna.
 827  8B25              ; Ha llegado a zona de AMADEUS ???
 828  8B25
 829  8B25 3A BD 88     	ld a,(Coordenada_y)
 830  8B28 FE 14        	cp $14
 831  8B2A D4 51 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 832  8B2D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 833  8B2D              ; ---------
 834  8B2D
 835  8B2D CD 62 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 836  8B30 CD 5F 8D     	call Repone_datos_de_borrado
 837  8B33 CD B8 8B     	call Limpia_Variables_de_borrado
 838  8B36
 839  8B36 C9           3 ret													; _de la misma.
 840  8B37
 841  8B37              ; --------------------------------------------------------------------------------------------------------------
 842  8B37              ;
 843  8B37              ;	29/1/23
 844  8B37
 845  8B37              Mov_Amadeus
 846  8B37
 847  8B37 CD FF 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 848  8B3A
 849  8B3A 3A E2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 850  8B3D CB 67        	bit 4,a
 851  8B3F C8           	ret z
 852  8B40
 853  8B40              ; ---------
 854  8B40
 855  8B40 CD 62 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 856  8B43 CD 4F 8D     	call Repone_datos_de_borrado_Amadeus
 857  8B46 CD B8 8B     	call Limpia_Variables_de_borrado
 858  8B49
 859  8B49 C9           	ret
 860  8B4A
 861  8B4A              ; -----------------------------------------------------------------------------------
 862  8B4A              ;
 863  8B4A              ;	16/11/23
 864  8B4A
 865  8B4A CD 18 8C     Inicia_entidad	call Inicia_Puntero_objeto
 866  8B4D CD C5 98     	call Recompone_posicion_inicio
 867  8B50 CD A4 92     	call Draw
 868  8B53 CD A0 7F     	call Guarda_foto_registros
 869  8B56 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 870  8B57              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 871  8B57 CD 60 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 872  8B5A C9           	ret
 873  8B5B
 874  8B5B              ; --------------------------------------------------------------------------------------------------------------
 875  8B5B              ;
 876  8B5B              ;	31/08/23
 877  8B5B              ;
 878  8B5B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 879  8B5B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 880  8B5B
 881  8B5B              Guarda_foto_entidad_a_pintar
 882  8B5B
 883  8B5B              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 884  8B5B
 885  8B5B CD A4 92     	call Draw
 886  8B5E CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 887  8B61 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 888  8B62
 889  8B62              ; --------------------------------------------------------------------------------------------------------------
 890  8B62              ;
 891  8B62              ;	19/9/23
 892  8B62
 893  8B62 21 B6 88     Prepara_var_pintado ld hl,Filas
 894  8B65 11 D6 88     	ld de,Variables_de_pintado
 895  8B68 01 08 00     	ld bc,8
 896  8B6B ED B0        	ldir
 897  8B6D C9           	ret
 898  8B6E
 899  8B6E              ; --------------------------------------------------------------------------------------------------------------
 900  8B6E
 901  8B6E 21 D6 88     Repone_pintar ld hl,Variables_de_pintado
 902  8B71 11 B6 88     	ld de,Filas
 903  8B74 01 08 00     	ld bc,8
 904  8B77 ED B0        	ldir
 905  8B79 C9           	ret
 906  8B7A
 907  8B7A              ; *************************************************************************************************************************************************************
 908  8B7A              ;
 909  8B7A              ; 8/1/23
 910  8B7A              ;
 911  8B7A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 912  8B7A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 913  8B7A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 914  8B7A
 915  8B7A              ; Destruye HL y DE !!!!!
 916  8B7A
 917  8B7A              Inicia_punteros_de_cajas
 918  8B7A
 919  8B7A 21 6C 85     	ld hl,Indice_de_cajas
 920  8B7D CD 12 8C         call Extrae_address
 921  8B80 22 F8 88         ld (Puntero_store_caja),hl
 922  8B83 21 6E 85     	ld hl,Indice_de_cajas+2
 923  8B86 22 FC 88     	ld (Indice_restore_caja),hl
 924  8B89 CD 12 8C     	call Extrae_address
 925  8B8C 22 FA 88     	ld (Puntero_restore_caja),hl
 926  8B8F C9               ret
 927  8B90
 928  8B90              ; *************************************************************************************************************************************************************
 929  8B90              ;
 930  8B90              ; 8/1/23
 931  8B90              ;
 932  8B90              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 933  8B90
 934  8B90 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 935  8B93 22 16 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 936  8B96 C9           	ret
 937  8B97 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 938  8B9A 22 18 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 939  8B9D C9           	ret
 940  8B9E
 941  8B9E              ; -------------------------------------------------------------------------------------------------------------
 942  8B9E              ;
 943  8B9E              ; 21/9/23
 944  8B9E              ;
 945  8B9E
 946  8B9E              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 947  8B9E
 948  8B9E              Limpia_album_Amadeus
 949  8B9E
 950  8B9E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 951  8BA1 7E           	ld a,(hl)
 952  8BA2 A7           	and a
 953  8BA3 C8           	ret z
 954  8BA4
 955  8BA4 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 956  8BA7 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 957  8BAA 01 0B 00     	ld bc,11
 958  8BAD AF           	xor a
 959  8BAE 77           	ld (hl),a
 960  8BAF ED B0        	ldir
 961  8BB1
 962  8BB1 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 963  8BB4 22 12 89     	ld (End_Snapshot_Amadeus),hl
 964  8BB7
 965  8BB7 C9           	ret
 966  8BB8
 967  8BB8 21 D0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 968  8BBB 11 D1 88     	ld de,Variables_de_borrado+1
 969  8BBE 01 05 00     	ld bc,5
 970  8BC1 AF           	xor a
 971  8BC2 77           	ld (hl),a
 972  8BC3 ED B0        	ldir
 973  8BC5 C9           	ret
 974  8BC6
 975  8BC6              ; -------------------------------------------------------------------------------------------------------------
 976  8BC6              ;
 977  8BC6              ; 8/9/23
 978  8BC6              ;
 979  8BC6
 980  8BC6              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
 981  8BC6              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
 982  8BC6
 983  8BC6              Calcula_numero_de_malotes
 984  8BC6
 985  8BC6 21 00 70     	ld hl,Album_de_fotos
 986  8BC9 EB           	ex de,hl
 987  8BCA 2A 0C 89     	ld hl,(Stack_snapshot)
 988  8BCD
 989  8BCD 06 00        	ld b,0
 990  8BCF 7D           	ld a,l
 991  8BD0 93           	sub e
 992  8BD1 28 07        	jr z,1F
 993  8BD3
 994  8BD3              ; Nº de malotes no es "0".
 995  8BD3
 996  8BD3 D6 06        2 sub 6
 997  8BD5 04           	inc b
 998  8BD6 A7           	and a
 999  8BD7 20 FA        	jr nz,2B
1000  8BD9 78           	ld a,b
1001  8BDA
1002  8BDA 32 01 89     1 ld (Numero_de_malotes),a
1003  8BDD C9           	ret
1004  8BDE
1005  8BDE              ; -------------------------------------------------------------------------------------------------------------
1006  8BDE              ;
1007  8BDE              ; 8/9/23
1008  8BDE              ;
1009  8BDE
1010  8BDE              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1011  8BDE              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1012  8BDE
1013  8BDE              Calcula_malotes_Amadeus
1014  8BDE
1015  8BDE 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1016  8BE1 EB           	ex de,hl
1017  8BE2 2A 12 89     	ld hl,(End_Snapshot_Amadeus)
1018  8BE5
1019  8BE5 7C           	ld a,h
1020  8BE6 A7           	and a
1021  8BE7 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1022  8BE9
1023  8BE9 06 00        	ld b,0
1024  8BEB 7D           	ld a,l
1025  8BEC 93           	sub e
1026  8BED 28 07        	jr z,1F
1027  8BEF
1028  8BEF              ; Nº de malotes no es "0".
1029  8BEF
1030  8BEF D6 06        2 sub 6
1031  8BF1 04           	inc b
1032  8BF2 A7           	and a
1033  8BF3 20 FA        	jr nz,2B
1034  8BF5 78           	ld a,b
1035  8BF6
1036  8BF6 32 01 89     1 ld (Numero_de_malotes),a
1037  8BF9 C9           	ret
1038  8BFA
1039  8BFA              ; -------------------------------------------------------------------------------------------------------------
1040  8BFA              ;
1041  8BFA              ; 28/2/23
1042  8BFA              ;
1043  8BFA
1044  8BFA              Calcula_numero_de_disparotes
1045  8BFA
1046  8BFA 21 56 70     	ld hl,Album_de_fotos_disparos
1047  8BFD EB           	ex de,hl
1048  8BFE 2A 10 89     	ld hl,(End_Snapshot_disparos)
1049  8C01
1050  8C01 06 00        	ld b,0
1051  8C03 7D           	ld a,l
1052  8C04 93           	sub e
1053  8C05 28 07        	jr z,1F
1054  8C07
1055  8C07              ; Nº de malotes no es "0".
1056  8C07
1057  8C07 D6 06        2 sub 6
1058  8C09 04           	inc b
1059  8C0A A7           	and a
1060  8C0B 20 FA        	jr nz,2B
1061  8C0D 78           	ld a,b
1062  8C0E
1063  8C0E 32 15 89     1 ld (Numero_de_disparotes),a
1064  8C11 C9           	ret
1065  8C12
1066  8C12              ; *************************************************************************************************************************************************************
1067  8C12              ;
1068  8C12              ; 20/10/22
1069  8C12              ;
1070  8C12              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1071  8C12              ;
1072  8C12              ; Destruye el puntero y DE !!!!!
1073  8C12
1074  8C12 5E           Extrae_address ld e,(hl)
1075  8C13 23           	inc hl
1076  8C14 56           	ld d,(hl)
1077  8C15 2B           	dec hl
1078  8C16 EB           	ex de,hl
1079  8C17 C9           	ret
1080  8C18
1081  8C18              ; *************************************************************************************************************************************************************
1082  8C18              ;
1083  8C18              ;	7/2/23
1084  8C18              ;
1085  8C18              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1086  8C18              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1087  8C18              ;
1088  8C18              ;   Destruye HL y BC !!!!!,
1089  8C18              ;
1090  8C18              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1091  8C18              ;					"0" ..... Izquierda.
1092  8C18
1093  8C18              Inicia_Puntero_objeto
1094  8C18
1095  8C18 3A CA 88     	ld a,(Cuad_objeto)
1096  8C1B E6 01        	and 1
1097  8C1D F5           	push af
1098  8C1E CC 3C 8C     	call z,Inicia_puntero_objeto_izq
1099  8C21 F1           	pop af
1100  8C22 28 2B        	jr z,1F
1101  8C24 CD 29 8C     	call Inicia_puntero_objeto_der
1102  8C27 18 26        	jr 1F
1103  8C29
1104  8C29              ; Arrancamos desde la parte izquierda de la pantalla.
1105  8C29              ; Iniciamos (Indice_Sprite_der).
1106  8C29
1107  8C29 2A C0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1108  8C2C 22 C4 88     	ld (Puntero_DESPLZ_der),hl
1109  8C2F CD 12 8C     	call Extrae_address
1110  8C32 22 BA 88     	ld (Puntero_objeto),hl
1111  8C35
1112  8C35 2A C2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1113  8C38 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
1114  8C3B C9           	ret
1115  8C3C
1116  8C3C              ; Arrancamos desde la parte derecha de la pantalla.
1117  8C3C              ; Iniciamos (Indice_Sprite_izq).
1118  8C3C
1119  8C3C 2A C2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1120  8C3F 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
1121  8C42 CD 12 8C     	call Extrae_address
1122  8C45 22 BA 88     	ld (Puntero_objeto),hl
1123  8C48
1124  8C48 2A C0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1125  8C4B 22 C4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1126  8C4E C9           	ret
1127  8C4F
1128  8C4F              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1129  8C4F
1130  8C4F 21 40 83     1 ld hl,Amadeus
1131  8C52 ED 4B BA 88  	ld bc,(Puntero_objeto)
1132  8C56 B7 ED 42     	sub hl,bc
1133  8C59 C0           	ret nz
1134  8C5A 21 E2 88     	ld hl,Ctrl_0
1135  8C5D CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1136  8C5F C9           	ret 												; _de nuestra nave en los extremos.
1137  8C60
1138  8C60              ; *************************************************************************************************************************************************************
1139  8C60              ;
1140  8C60              ;	14/5/23
1141  8C60              ;
1142  8C60              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1143  8C60              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1144  8C60
1145  8C60              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1146  8C60              ;	_de la 2ª y 3ª entidad respectivamente.
1147  8C60
1148  8C60              Store_Restore_cajas
1149  8C60
1150  8C60 E5           	push hl
1151  8C61 D5           	push de
1152  8C62 C5            	push bc
1153  8C63
1154  8C63              ;	STORE !!!!!
1155  8C63              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1156  8C63
1157  8C63 21 B6 88     	ld hl,Filas
1158  8C66 ED 5B F8 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1159  8C6A 01 3F 00     	ld bc,63
1160  8C6D ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1161  8C6F
1162  8C6F              ; 	Entidad_sospechosa. 20/4/23
1163  8C6F
1164  8C6F 3A CF 88     	ld a,(Impacto)
1165  8C72 A7           	and a
1166  8C73 28 0C        	jr z,1F
1167  8C75
1168  8C75 2A F8 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1169  8C78 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1170  8C7B A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1171  8C7C ED 4A        	adc hl,bc 											; _ "0" más adelante.
1172  8C7E 22 1B 89     	ld (Entidad_sospechosa_de_colision),hl
1173  8C81
1174  8C81              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1175  8C81
1176  8C81 2A FA 88     1 ld hl,(Puntero_restore_caja)
1177  8C84 7E           	ld a,(hl)
1178  8C85 A7           	and a
1179  8C86 F5           	push af
1180  8C87 28 08        	jr z,2F
1181  8C89
1182  8C89 11 B6 88     	ld de,Filas
1183  8C8C 01 3F 00     	ld bc,63
1184  8C8F ED B0        	ldir
1185  8C91
1186  8C91 CD AD 8C     2 call Incrementa_punteros_de_cajas
1187  8C94
1188  8C94 F1           	pop af
1189  8C95 28 EA        	jr z,1B
1190  8C97
1191  8C97 C1           	pop bc
1192  8C98 D1           	pop de
1193  8C99 E1           	pop hl
1194  8C9A
1195  8C9A C9           	ret
1196  8C9B
1197  8C9B              ; **************************************************************************************************
1198  8C9B              ;
1199  8C9B              ;	12/05/23
1200  8C9B              ;
1201  8C9B              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1202  8C9B
1203  8C9B E5           Restore_entidad push hl
1204  8C9C D5           	push de
1205  8C9D C5            	push bc
1206  8C9E
1207  8C9E 2A F8 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1208  8CA1 11 B6 88     	ld de,Filas
1209  8CA4 01 3F 00     	ld bc,63
1210  8CA7 ED B0        	ldir
1211  8CA9
1212  8CA9 C1           	pop bc
1213  8CAA D1           	pop de
1214  8CAB E1           	pop hl
1215  8CAC C9           	ret
1216  8CAD
1217  8CAD              ; **************************************************************************************************
1218  8CAD              ;
1219  8CAD              ;	08/05/23
1220  8CAD              ;
1221  8CAD              ;	Incrementamos los dos punteros de entidades. (+1).
1222  8CAD
1223  8CAD              Incrementa_punteros_de_cajas
1224  8CAD
1225  8CAD 2A FA 88     	ld hl,(Puntero_restore_caja)
1226  8CB0 22 F8 88     	ld (Puntero_store_caja),hl
1227  8CB3 2A FC 88     	ld hl,(Indice_restore_caja)
1228  8CB6 23           	inc hl
1229  8CB7 23           	inc hl
1230  8CB8 22 FC 88     	ld (Indice_restore_caja),hl
1231  8CBB CD 12 8C         call Extrae_address
1232  8CBE 22 FA 88         ld (Puntero_restore_caja),hl
1233  8CC1 C9               ret
1234  8CC2
1235  8CC2              ; **************************************************************************************************
1236  8CC2              ;
1237  8CC2              ;	25/01/23
1238  8CC2              ;
1239  8CC2              ;	Restore_Amadeus
1240  8CC2              ;
1241  8CC2              ;	Cargamos en DRAW los parámetros de Amadeus.
1242  8CC2              ;
1243  8CC2
1244  8CC2 E5           Restore_Amadeus	push hl
1245  8CC3 D5           	push de
1246  8CC4 C5            	push bc
1247  8CC5 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1248  8CC8 11 B6 88     	ld de,Filas
1249  8CCB 01 3F 00     	ld bc,63
1250  8CCE ED B0        	ldir
1251  8CD0 C1           	pop bc
1252  8CD1 D1           	pop de
1253  8CD2 E1           	pop hl
1254  8CD3 C9           	ret
1255  8CD4
1256  8CD4              ; *************************************************************************************************************************************************************
1257  8CD4              ;
1258  8CD4              ;	29/04/23
1259  8CD4              ;
1260  8CD4              ;	Store_Amadeus
1261  8CD4              ;
1262  8CD4              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1263  8CD4              ;
1264  8CD4              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1265  8CD4              ;
1266  8CD4              ;	DESTRUYE: HL y BC y DE.
1267  8CD4
1268  8CD4 21 B6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1269  8CD7 01 3F 00     	ld bc,63
1270  8CDA ED B0        	ldir
1271  8CDC C9           	ret
1272  8CDD
1273  8CDD              ; -----------------------------------------------------------
1274  8CDD              ;
1275  8CDD              ;	27/04/23
1276  8CDD              ;
1277  8CDD              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1278  8CDD              ;
1279  8CDD              ;	Destruye: HL,BC,DE,A
1280  8CDD
1281  8CDD 21 B6 88     Borra_datos_entidad ld hl,Filas
1282  8CE0 01 3E 00     	ld bc,62
1283  8CE3 AF           	xor a
1284  8CE4 77           	ld (hl),a
1285  8CE5 11 B7 88     	ld de,Filas+1
1286  8CE8 ED B0        	ldir
1287  8CEA C9           	ret
1288  8CEB
1289  8CEB              ; -----------------------------------------------------------
1290  8CEB
1291  8CEB              ; Teclado.
1292  8CEB
1293  8CEB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1294  8CED DB FE        	in a,($fe)
1295  8CEF E6 01        	and $01
1296  8CF1 28 02        	jr z,1f
1297  8CF3 18 F6        	jr Pulsa_ENTER
1298  8CF5 C9           1 ret
1299  8CF6
1300  8CF6              ; **************************************************************************************************
1301  8CF6              ;
1302  8CF6              ; Temporización.
1303  8CF6
1304  8CF6              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1305  8CF6              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1306  8CF6              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1307  8CF6              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1308  8CF6
1309  8CF6              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1310  8CF6              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1311  8CF6              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1312  8CF6
1313  8CF6              ; A partir de $4f61 no hace falta DELAY.
1314  8CF6
1315  8CF6              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1316  8CF6
1317  8CF6 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1318  8CF9 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1319  8CFA 78           	LD A,B
1320  8CFB A7           	AND A
1321  8CFC 20 FB        	JR NZ,wait
1322  8CFE C9           	RET
1323  8CFF
1324  8CFF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1325  8CFF              ;
1326  8CFF              ;	5/3/23
1327  8CFF              ;
1328  8CFF              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1329  8CFF
1330  8CFF              Movimiento_Amadeus
1331  8CFF
1332  8CFF              ; Disparo.
1333  8CFF
1334  8CFF 3A 2D 89     	ld a,(Disparo_Amadeus)
1335  8D02 A7           	and a
1336  8D03 20 02        	jr nz,1F
1337  8D05 18 15        	jr 2F
1338  8D07
1339  8D07 3E F7        1 ld a,$f7													; "5" para disparar.
1340  8D09 DB FE        	in a,($fe)
1341  8D0B E6 10        	and $10
1342  8D0D
1343  8D0D F5           	push af
1344  8D0E CC B4 8D     	call z,Genera_disparo
1345  8D11 F1           	pop af
1346  8D12 20 08        	jr nz,2F
1347  8D14
1348  8D14 3A 2D 89     	ld a,(Disparo_Amadeus)
1349  8D17 EE 01        	xor 1
1350  8D19 32 2D 89     	ld (Disparo_Amadeus),a
1351  8D1C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1352  8D1E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1353  8D20 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1354  8D22 CC 7F 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1355  8D25
1356  8D25 3E F7        	ld a,$f7
1357  8D27 DB FE        	in a,($fe)
1358  8D29 E6 01        	and $01
1359  8D2B C8           	ret z
1360  8D2C
1361  8D2C 3E F7        	ld a,$f7
1362  8D2E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1363  8D30 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1364  8D32 CC 61 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1365  8D35 C9           	ret
1366  8D36
1367  8D36              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1368  8D36              ;
1369  8D36              ;	Rutina provisional para que los malotes cagen balas.
1370  8D36
1371  8D36              Detecta_disparo_entidad
1372  8D36
1373  8D36 3A 30 89     	ld a,(Disparo_entidad)
1374  8D39 A7           	and a
1375  8D3A C8           	ret z
1376  8D3B
1377  8D3B              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1378  8D3B
1379  8D3B              ;	ld a,$7f				; Detecta SPACE.
1380  8D3B              ;	in a,($fe)
1381  8D3B              ;	and 1
1382  8D3B              ;	ret nz
1383  8D3B
1384  8D3B CD B4 8D     	call Genera_disparo
1385  8D3E C9           	ret
1386  8D3F
1387  8D3F              ; ----------------------------------------------------------------------
1388  8D3F              ;
1389  8D3F              ;	8/9/23
1390  8D3F
1391  8D3F 2A 12 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1392  8D42 2B            	dec hl
1393  8D43 7E           	ld a,(hl)
1394  8D44 A7           	and a
1395  8D45 C8           	ret z										; Salimos si es álbum está vacío.
1396  8D46
1397  8D46 11 D5 88     	ld de,Variables_de_borrado+5
1398  8D49 01 06 00     	ld bc,6
1399  8D4C ED B8        	lddr
1400  8D4E C9           	ret
1401  8D4F
1402  8D4F              ; ----------------------------------------------------------------------
1403  8D4F              ;
1404  8D4F              ;	9/9/23
1405  8D4F
1406  8D4F              Repone_datos_de_borrado_Amadeus
1407  8D4F
1408  8D4F 21 D0 88     	ld hl,Variables_de_borrado
1409  8D52 11 AC 70     	ld de,Album_de_fotos_Amadeus
1410  8D55 01 06 00     	ld bc,6
1411  8D58 ED B0        	ldir
1412  8D5A
1413  8D5A EB           	ex de,hl
1414  8D5B 22 12 89     	ld (End_Snapshot_Amadeus),hl
1415  8D5E
1416  8D5E C9           	ret
1417  8D5F
1418  8D5F              ; ----------------------------------------------------------------------
1419  8D5F              ;
1420  8D5F              ;	27/10/23
1421  8D5F              ;
1422  8D5F
1423  8D5F              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1424  8D5F              ;	_ Album_de_fotos correspondiente.
1425  8D5F
1426  8D5F              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1427  8D5F              ;	_ durante el proceso de escritura.
1428  8D5F
1429  8D5F              Repone_datos_de_borrado
1430  8D5F
1431  8D5F F3           	di
1432  8D60
1433  8D60 ED 5B 0C 89  	ld de,(Stack_snapshot)
1434  8D64 21 D0 88     	ld hl,Variables_de_borrado
1435  8D67 01 06 00     	ld bc,6
1436  8D6A ED B0        	ldir
1437  8D6C FB           	ei
1438  8D6D
1439  8D6D EB           	ex de,hl
1440  8D6E 22 0C 89     	ld (Stack_snapshot),hl
1441  8D71
1442  8D71 C9           	ret
1443  8D72
1444  8D72              ; -----------------------------------------------------------------------------------
1445  8D72
1446  8D72              Pinta_Amadeus
1447  8D72
1448  8D72 3E 06        	ld a,6
1449  8D74 D3 FE            out ($fe),a										; Amarillo
1450  8D76
1451  8D76 CD DE 8B        	call Calcula_malotes_Amadeus
1452  8D79 CD 34 96     	call Extrae_foto_Amadeus
1453  8D7C CD 9E 8B     	call Limpia_album_Amadeus
1454  8D7F
1455  8D7F C9           	ret
1456  8D80
1457  8D80              Pinta_entidades
1458  8D80
1459  8D80              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1460  8D80
1461  8D80 3A 14 89     	ld a,(Ctrl_3)
1462  8D83 CB 47        	bit 0,a
1463  8D85 C8           	ret z
1464  8D86
1465  8D86 CD C6 8B     	call Calcula_numero_de_malotes
1466  8D89 CD B2 95     	call Extrae_foto_entidades
1467  8D8C CD 03 80     	call Limpia_y_reinicia_Stack_Snapshot
1468  8D8F
1469  8D8F C9           	ret
1470  8D90
1471  8D90              ; -----------------------------------------------------------------------------------
1472  8D90              ;
1473  8D90              ;	12/11/23
1474  8D90              ;
1475  8D90              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1476  8D90
1477  8D90              Actualiza_relojes
1478  8D90
1479  8D90 21 28 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1480  8D93 34           	inc (hl)
1481  8D94
1482  8D94 34           	inc (hl)
1483  8D95 35           	dec (hl)
1484  8D96 C0           	ret nz
1485  8D97
1486  8D97 21 29 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1487  8D9A 34           	inc (hl)
1488  8D9B C9           	ret
1489  8D9C
1490  8D9C              ; ---------------------------------------------------------------
1491  8D9C              ;
1492  8D9C              ;	27/9/23
1493  8D9C
1494  8D9C              Guarda_parametros_DRAW
1495  8D9C
1496  8D9C 21 B6 88     	ld hl,Filas
1497  8D9F 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1498  8DA2 01 3F 00     	ld bc,63
1499  8DA5 ED B0        	ldir
1500  8DA7 C9           	ret
1501  8DA8
1502  8DA8              Recupera_parametros_DRAW
1503  8DA8
1504  8DA8 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1505  8DAB 11 B6 88     	ld de,Filas
1506  8DAE 01 3F 00     	ld bc,63
1507  8DB1 ED B0        	ldir
1508  8DB3 C9           	ret
1509  8DB4
1510  8DB4              ; ---------------------------------------------------------------
1511  8DB4
1512  8DB4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DB4              ; ******************************************************************************************************************************************************************************************
   2+ 8DB4              ;
   3+ 8DB4              ;   21/07/23
   4+ 8DB4              ;
   5+ 8DB4              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DB4              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DB4              ;
   8+ 8DB4              ;
   9+ 8DB4              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DB4              ;
  11+ 8DB4              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DB4              ;               _ hacen las entidades hacia abajo.
  13+ 8DB4              ;
  14+ 8DB4              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DB4              ;
  16+ 8DB4              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DB4              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DB4              ;
  19+ 8DB4              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DB4              ;           _ la bala.
  21+ 8DB4              ;
  22+ 8DB4              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DB4              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DB4              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DB4              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DB4              ;           _ en el momento de generarse la bala)).
  27+ 8DB4
  28+ 8DB4              Genera_disparo
  29+ 8DB4
  30+ 8DB4              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DB4              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DB4              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DB4              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DB4              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DB4              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DB4              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DB4
  38+ 8DB4              ; Exclusiones:
  39+ 8DB4
  40+ 8DB4 3A CE 88         ld a,(Vel_down)
  41+ 8DB7 47               ld b,a
  42+ 8DB8 3A 27 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8DBB B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8DBC D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8DBD 3A EF 88         ld a,(Columnas)
  46+ 8DC0 47               ld b,a
  47+ 8DC1 3A B7 88         ld a,(Columns)
  48+ 8DC4 B8               cp b
  49+ 8DC5 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8DC6
  51+ 8DC6              ; ----- ----- -----
  52+ 8DC6
  53+ 8DC6 3A E2 88         ld a,(Ctrl_0)
  54+ 8DC9 CB 77            bit 6,a
  55+ 8DCB 20 06            jr nz,14F
  56+ 8DCD
  57+ 8DCD 3A BD 88         ld a,(Coordenada_y)
  58+ 8DD0 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8DD2 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8DD3
  61+ 8DD3 21 00 80     14 ld hl,Indice_disparo
  62+ 8DD6 3A BE 88         ld a,(CTRL_DESPLZ)
  63+ 8DD9 4F               ld c,a
  64+ 8DDA 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8DDC              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8DDC              ;                                            ""        ""       "f9", B="1"
  67+ 8DDC              ;                                            ""        ""       "fb", B="2"
  68+ 8DDC              ;                                            ""        ""       "fb", B="3"
  69+ 8DDC A7               and a
  70+ 8DDD 28 10            jr z,1F
  71+ 8DDF E6 01            and 1
  72+ 8DE1 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8DE2
  74+ 8DE2 79               ld a,c
  75+ 8DE3 16 F9            ld d,$f9
  76+ 8DE5 23           2 inc hl
  77+ 8DE6 23               inc hl
  78+ 8DE7 04               inc b
  79+ 8DE8 BA               cp d
  80+ 8DE9 28 04            jr z,1F
  81+ 8DEB 14               inc d
  82+ 8DEC 14               inc d
  83+ 8DED 18 F6            jr 2B
  84+ 8DEF
  85+ 8DEF CD 12 8C     1 call Extrae_address
  86+ 8DF2 E5               push hl
  87+ 8DF3 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8DF5 DD 21 7A 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8DF9
  90+ 8DF9              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8DF9              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8DF9
  93+ 8DF9 3A E2 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8DFC CB 77            bit 6,a
  95+ 8DFE 20 04            jr nz,19F
  96+ 8E00
  97+ 8E00 AF               xor a
  98+ 8E01 32 30 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E04
 100+ 8E04 3A CA 88     19 ld a,(Cuad_objeto)
 101+ 8E07 FE 02            cp 2
 102+ 8E09 38 66            jr c,3F
 103+ 8E0B 28 64            jr z,3F
 104+ 8E0D
 105+ 8E0D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E0D
 107+ 8E0D E6 01            and 1
 108+ 8E0F 28 30            jr z,4F
 109+ 8E11
 110+ 8E11              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E11              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E11              ;
 113+ 8E11              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E11              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E11              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E11
 117+ 8E11 2A B8 88     	ld hl,(Posicion_actual)
 118+ 8E14
 119+ 8E14              ;   Amadeus o entidad ???.
 120+ 8E14
 121+ 8E14 3A E2 88         ld a,(Ctrl_0)
 122+ 8E17 CB 77            bit 6,a
 123+ 8E19 28 0A            jr z,8F
 124+ 8E1B
 125+ 8E1B              ; 	Dispara Amadeus.
 126+ 8E1B
 127+ 8E1B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E1D CD A3 95         call PreviousScan
 129+ 8E20 CD A3 95         call PreviousScan
 130+ 8E23
 131+ 8E23              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E23              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E23              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E23              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E23
 136+ 8E23 18 11            jr 10F
 137+ 8E25
 138+ 8E25              ; 	Dispara Entidad.
 139+ 8E25
 140+ 8E25 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E28              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E28
 143+ 8E28              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E28              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E28
 146+ 8E28 C5               push bc
 147+ 8E29 06 10            ld b,16
 148+ 8E2B CD 94 95     9 call NextScan
 149+ 8E2E 10 FB            djnz 9B
 150+ 8E30 C1               pop bc
 151+ 8E31 CD 9B 8E         call Ajusta_disparo_parte_izquierda
 152+ 8E34 18 06            jr 17F
 153+ 8E36
 154+ 8E36              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8E36              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8E36              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8E36              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8E36
 159+ 8E36 CD 9B 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8E39 CD 10 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8E3C              ;                                                      ; _al generar el disparo.
 162+ 8E3C
 163+ 8E3C              ; 	LLegados a este punto tendremos:
 164+ 8E3C              ;
 165+ 8E3C              ;       Puntero_objeto_disparo en IY.
 166+ 8E3C              ;       Rutinas_de_impresion en IX.
 167+ 8E3C              ;       Puntero_de_impresion en HL.
 168+ 8E3C              ;       Impacto/Dirección en BC.
 169+ 8E3C
 170+ 8E3C CD A3 8E     17 call Almacena_disparo
 171+ 8E3F 18 52            jr 6F                                             ; RET.
 172+ 8E41
 173+ 8E41              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8E41              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8E41              ;
 176+ 8E41              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8E41              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8E41              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8E41
 180+ 8E41 2A B8 88     4 ld hl,(Posicion_actual)
 181+ 8E44
 182+ 8E44              ;   Amadeus o entidad ???.
 183+ 8E44
 184+ 8E44 3A E2 88         ld a,(Ctrl_0)
 185+ 8E47 CB 77            bit 6,a
 186+ 8E49 28 0A            jr z,11F
 187+ 8E4B
 188+ 8E4B              ; 	Dispara Amadeus.
 189+ 8E4B
 190+ 8E4B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8E4D CD A3 95         call PreviousScan
 192+ 8E50 CD A3 95         call PreviousScan
 193+ 8E53
 194+ 8E53              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E53              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E53              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E53              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E53
 199+ 8E53 18 11            jr 13F
 200+ 8E55
 201+ 8E55              ; 	Dispara Entidad.
 202+ 8E55
 203+ 8E55 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E58              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E58
 206+ 8E58              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E58              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E58
 209+ 8E58 C5               push bc
 210+ 8E59 06 10            ld b,16
 211+ 8E5B CD 94 95     12 call NextScan
 212+ 8E5E 10 FB            djnz 12B
 213+ 8E60 C1               pop bc
 214+ 8E61
 215+ 8E61 CD 94 8E         call Ajusta_disparo_parte_derecha
 216+ 8E64 18 06            jr 18F
 217+ 8E66
 218+ 8E66              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E66              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E66              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E66              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E66
 223+ 8E66 CD 94 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E69 CD 10 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E6C              ;                                                       ; _al generar el disparo.
 226+ 8E6C
 227+ 8E6C              ; LLegados a este punto tendremos:
 228+ 8E6C              ;
 229+ 8E6C              ;       Puntero_objeto_disparo en IY.
 230+ 8E6C              ;       Rutinas_de_impresion en IX.
 231+ 8E6C              ;       Puntero_de_impresion en HL.
 232+ 8E6C              ;       Impacto/Dirección en BC.
 233+ 8E6C
 234+ 8E6C CD A3 8E     18 call Almacena_disparo
 235+ 8E6F 18 22            jr 6F                                               ; RET.
 236+ 8E71
 237+ 8E71              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E71
 239+ 8E71 28 11        3 jr z,5F
 240+ 8E73
 241+ 8E73              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E73              ;
 243+ 8E73              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E73              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E73              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E73              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E73
 248+ 8E73              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E73              ;	   ""        ""       "f9", B="1"
 250+ 8E73              ;	   ""        ""       "fb", B="2"
 251+ 8E73              ; 	   ""        ""       "fb", B="3"
 252+ 8E73
 253+ 8E73 2A B8 88     	ld hl,(Posicion_actual)
 254+ 8E76 CD 94 95     	call NextScan
 255+ 8E79
 256+ 8E79              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E79              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E79              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E79              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E79
 261+ 8E79 CD 9B 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E7C
 263+ 8E7C              ; 	No se produce impacto. B="$80"
 264+ 8E7C              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E7C
 266+ 8E7C 01 80 80         ld bc,$8080
 267+ 8E7F
 268+ 8E7F              ; 	LLegados a este punto tendremos:
 269+ 8E7F              ;
 270+ 8E7F              ;       Puntero_objeto_disparo en IY.
 271+ 8E7F              ;       Rutinas_de_impresion en IX.
 272+ 8E7F              ;       Puntero_de_impresion en HL.
 273+ 8E7F              ;       Impacto/Dirección en BC.
 274+ 8E7F
 275+ 8E7F CD A3 8E         call Almacena_disparo
 276+ 8E82 18 0F            jr 6F                                           ; RET.
 277+ 8E84
 278+ 8E84              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E84              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E84              ;
 281+ 8E84              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E84              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E84              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E84              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E84
 286+ 8E84 2A B8 88     5 ld hl,(Posicion_actual)
 287+ 8E87 CD 94 95     	call NextScan
 288+ 8E8A
 289+ 8E8A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E8A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E8A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E8A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E8A
 294+ 8E8A CD 94 8E         call Ajusta_disparo_parte_derecha
 295+ 8E8D
 296+ 8E8D              ; 	No se produce impacto. B="$80"
 297+ 8E8D              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E8D
 299+ 8E8D 01 80 80     15 ld bc,$8080
 300+ 8E90
 301+ 8E90              ; 	LLegados a este punto tendremos:
 302+ 8E90              ;
 303+ 8E90              ;       Puntero_objeto_disparo en IY.
 304+ 8E90              ;       Rutinas_de_impresion en IX.
 305+ 8E90              ;       Puntero_de_impresion en HL.
 306+ 8E90              ;       Impacto/Dirección en BC.
 307+ 8E90
 308+ 8E90 CD A3 8E         call Almacena_disparo
 309+ 8E93
 310+ 8E93 C9           6 ret
 311+ 8E94
 312+ 8E94              ; ----------------------------------------------------------------
 313+ 8E94              ;
 314+ 8E94              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E94              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E94              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E94
 318+ 8E94 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E95 FE 02            cp 2
 320+ 8E97 38 01            jr c,1F
 321+ 8E99 23               inc hl
 322+ 8E9A C9           1 ret
 323+ 8E9B
 324+ 8E9B 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E9C FE 01        	cp 1
 326+ 8E9E 20 01        	jr nz,1F
 327+ 8EA0 2B           	dec hl
 328+ 8EA1 2B           1 dec hl
 329+ 8EA2 C9               ret
 330+ 8EA3
 331+ 8EA3              ; ----------------------------------------------------------------
 332+ 8EA3              ;
 333+ 8EA3              ;   25/02/23
 334+ 8EA3              ;
 335+ 8EA3              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8EA3              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8EA3              ;
 338+ 8EA3              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8EA3              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8EA3
 341+ 8EA3              Almacena_disparo
 342+ 8EA3
 343+ 8EA3 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8EA4 F1               pop af
 345+ 8EA5 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8EA6
 347+ 8EA6 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8EA7 E6 01            and 1
 349+ 8EA9 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8EAB              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8EAB              ; 	Dispara AMADEUS.
 352+ 8EAB
 353+ 8EAB              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8EAB              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8EAB              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8EAB              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8EAB
 358+ 8EAB C5               push bc
 359+ 8EAC 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8EAF 2A 18 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8EB2 A7               and a
 362+ 8EB3 ED 42            sbc hl,bc
 363+ 8EB5 CC 97 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8EB8 C1               pop bc
 365+ 8EB9 28 54            jr z,4F
 366+ 8EBB
 367+ 8EBB 2A 18 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8EBE 23               inc hl
 369+ 8EBF 23               inc hl
 370+ 8EC0 22 18 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8EC3              ;                                                   ; _ Disparo_(+1).
 372+ 8EC3 18 18            jr 2F
 373+ 8EC5
 374+ 8EC5              ; Dispara una entidad.
 375+ 8EC5
 376+ 8EC5 C5           1 push bc
 377+ 8EC6 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8EC9 2A 16 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8ECC A7               and a
 380+ 8ECD ED 42            sbc hl,bc
 381+ 8ECF CC 90 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8ED2 C1               pop bc
 383+ 8ED3 28 3A            jr z,4F
 384+ 8ED5
 385+ 8ED5 2A 16 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8ED8 23               inc hl
 387+ 8ED9 23               inc hl
 388+ 8EDA 22 16 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8EDD              ;                                                   ; _ Disparo_(+1).
 390+ 8EDD CD 12 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8EE0              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8EE0              ;
 393+ 8EE0              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8EE0              ;                                                     Rutinas_de_impresion en IX.
 395+ 8EE0              ;                                                     Puntero_de_impresion en HL.
 396+ 8EE0              ;                                                     Impacto/Dirección en BC.
 397+ 8EE0
 398+ 8EE0 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8EE1 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8EE2 23               inc hl                                          ; _ al siguiente.
 401+ 8EE3 A7               and a
 402+ 8EE4 20 C0            jr nz,3B
 403+ 8EE6
 404+ 8EE6 08               ex af,af
 405+ 8EE7 ED 73 06 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8EEB F9               ld sp,hl
 407+ 8EEC
 408+ 8EEC DD E5            push ix                                         ; Rutina de impresión.
 409+ 8EEE F5               push af                                         ; Puntero de impresión.
 410+ 8EEF FD E5            push iy                                         ; Puntero objeto.
 411+ 8EF1 C5               push bc                                         ; Control.
 412+ 8EF2
 413+ 8EF2 ED 7B 06 89      ld sp,(Stack)
 414+ 8EF6
 415+ 8EF6              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8EF6
 417+ 8EF6 21 F5 88     	ld hl,Ctrl_1
 418+ 8EF9 CB C6        	set 0,(hl)
 419+ 8EFB
 420+ 8EFB DD E5        	push ix
 421+ 8EFD E1               pop hl
 422+ 8EFE F5               push af
 423+ 8EFF DD E1            pop ix
 424+ 8F01
 425+ 8F01 CD A0 7F     	call Guarda_foto_registros
 426+ 8F04
 427+ 8F04 21 F5 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F07 CB 86        	res 0,(hl)
 429+ 8F09
 430+ 8F09              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F09              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F09
 433+ 8F09 CD 97 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F0C CD 90 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F0F
 436+ 8F0F C9           4 ret
 437+ 8F10
 438+ 8F10              ; ----------------------------------------------------------------
 439+ 8F10              ;
 440+ 8F10              ;   4/3/23
 441+ 8F10              ;
 442+ 8F10              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F10              ;   _ al generarse el disparo.
 444+ 8F10              ;
 445+ 8F10              ;       "$80" ..... No se produce colisión.
 446+ 8F10              ;       "$81" ..... Se produce colisión.
 447+ 8F10              ;
 448+ 8F10              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F10              ;         _ que forman el disparo.
 450+ 8F10
 451+ 8F10
 452+ 8F10              Comprueba_Colision
 453+ 8F10
 454+ 8F10              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F10
 456+ 8F10 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F12 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F13
 459+ 8F13 CD 49 8F         call Modifica_H_Velocidad_disparo
 460+ 8F16
 461+ 8F16 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F17 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F19 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F1B
 465+ 8F1B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F1D CD 39 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F20
 468+ 8F20 7B               ld a,e
 469+ 8F21 E6 01            and 1
 470+ 8F23 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F25              ;                                                  ; _ para activar IMPACTO.
 472+ 8F25 E1               pop hl
 473+ 8F26 E5               push hl
 474+ 8F27 CD 94 95         call NextScan
 475+ 8F2A
 476+ 8F2A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F2B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F2D 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F2F              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F2F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8F31 CD 39 8F         call Bucle_2
 482+ 8F34
 483+ 8F34 43           1 ld b,e
 484+ 8F35 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8F36 FD E1            pop iy
 486+ 8F38 C9               ret
 487+ 8F39
 488+ 8F39              ; ---------- ----------
 489+ 8F39
 490+ 8F39 06 02        Bucle_2 ld b,2
 491+ 8F3B FD 7E 00     2 ld a,(iy)
 492+ 8F3E A6               and (hl)
 493+ 8F3F 28 02            jr z,1F
 494+ 8F41 1E 81            ld e,$81
 495+ 8F43 23           1 inc hl
 496+ 8F44 FD 23            inc iy
 497+ 8F46 10 F3            djnz 2B
 498+ 8F48 C9               ret
 499+ 8F49
 500+ 8F49              ; ---------- ----------
 501+ 8F49              ;
 502+ 8F49              ;   21/7/23
 503+ 8F49
 504+ 8F49              Modifica_H_Velocidad_disparo
 505+ 8F49
 506+ 8F49 3A 27 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8F4C FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8F4E D0               ret nc                                         ; _ incrementamos H.
 509+ 8F4F 24               inc h
 510+ 8F50
 511+ 8F50 C9               ret
 512+ 8F51
 513+ 8F51              ; -------------------------------------------------------------------------------------------------------------
 514+ 8F51              ;
 515+ 8F51              ;   04/12/23
 516+ 8F51              ;
 517+ 8F51              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8F51              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8F51              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8F51              ;
 521+ 8F51              ;   MODIFICA: HL,DE,B y A.
 522+ 8F51
 523+ 8F51              Compara_coordenadas_X
 524+ 8F51
 525+ 8F51              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8F51              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8F51
 528+ 8F51              ;   Limpiamos almacenes.
 529+ 8F51
 530+ 8F51 CD 85 8F         call Limpia_Coordenadas_X
 531+ 8F54
 532+ 8F54
 533+ 8F54              ;   Almacenamos coordenadas X.
 534+ 8F54
 535+ 8F54              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 536+ 8F54
 537+ 8F54 2A E0 88         ld hl,(Puntero_de_impresion)
 538+ 8F57 11 22 89         ld de,Coordenadas_X_Entidad
 539+ 8F5A 06 02            ld b,2
 540+ 8F5C
 541+ 8F5C 3A BE 88         ld a,(CTRL_DESPLZ)
 542+ 8F5F A7               and a
 543+ 8F60 28 01            jr z,1F
 544+ 8F62 04               inc b
 545+ 8F63
 546+ 8F63 CD 7C 8F     1 call Guarda_coordenadas_X
 547+ 8F66
 548+ 8F66              ;   Almacenamos las coordenadas X de Amadeus.
 549+ 8F66
 550+ 8F66 21 A8 85         ld hl,p.imp.amadeus
 551+ 8F69 11 1F 89         ld de,Coordenadas_X_Amadeus
 552+ 8F6C 06 02            ld b,2
 553+ 8F6E
 554+ 8F6E 3A 86 85         ld a,(ctrl_desplz_amadeus)
 555+ 8F71 A7               and a
 556+ 8F72 28 01            jr z,2F
 557+ 8F74 04               inc b
 558+ 8F75
 559+ 8F75 CD 7C 8F     2 call Guarda_coordenadas_X
 560+ 8F78
 561+ 8F78              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 562+ 8F78
 563+ 8F78 CD 90 8F         call Comparamos_coordenadas_X
 564+ 8F7B
 565+ 8F7B C9               ret
 566+ 8F7C
 567+ 8F7C              ; ----- ----- ----- ----- -----
 568+ 8F7C
 569+ 8F7C 7D           Guarda_coordenadas_X  ld a,l
 570+ 8F7D E6 1F            and $1f
 571+ 8F7F 12           1 ld (de),a
 572+ 8F80 3C               inc a
 573+ 8F81 13               inc de
 574+ 8F82 10 FB            djnz 1B
 575+ 8F84 C9               ret
 576+ 8F85
 577+ 8F85 AF           Limpia_Coordenadas_X xor a
 578+ 8F86 06 06            ld b,6
 579+ 8F88 21 1F 89         ld hl,Coordenadas_X_Amadeus
 580+ 8F8B 77           1 ld (hl),a
 581+ 8F8C 23               inc hl
 582+ 8F8D 10 FC            djnz 1B
 583+ 8F8F C9               ret
 584+ 8F90
 585+ 8F90              ; ----- ----- ----- ----- -----
 586+ 8F90
 587+ 8F90              Comparamos_coordenadas_X
 588+ 8F90
 589+ 8F90 F3               di
 590+ 8F91
 591+ 8F91 06 03            ld b,3
 592+ 8F93 11 24 89         ld de,Coordenadas_X_Entidad+2
 593+ 8F96
 594+ 8F96 1A               ld a,(de)
 595+ 8F97 A7               and a
 596+ 8F98 20 01            jr nz,2F
 597+ 8F9A 05               dec b
 598+ 8F9B
 599+ 8F9B 1B           2 dec de
 600+ 8F9C 1B               dec de
 601+ 8F9D 21 1F 89         ld hl,Coordenadas_X_Amadeus
 602+ 8FA0
 603+ 8FA0 D5           1 push de
 604+ 8FA1 E5               push hl
 605+ 8FA2 C5               push bc
 606+ 8FA3
 607+ 8FA3 CD AE 8F         call Comparando
 608+ 8FA6
 609+ 8FA6 C1               pop bc
 610+ 8FA7 E1               pop hl
 611+ 8FA8 D1               pop de
 612+ 8FA9
 613+ 8FA9 13               inc de
 614+ 8FAA 10 F4            djnz 1B
 615+ 8FAC
 616+ 8FAC FB               ei
 617+ 8FAD
 618+ 8FAD C9               ret
 619+ 8FAE
 620+ 8FAE 06 03        Comparando ld b,3
 621+ 8FB0 1A               ld a,(de)
 622+ 8FB1 4E           2 ld c,(hl)
 623+ 8FB2 B9               cp c
 624+ 8FB3 28 04            jr z,1F
 625+ 8FB5 23               inc hl
 626+ 8FB6 10 F9            djnz 2B
 627+ 8FB8 C9               ret
 628+ 8FB9
 629+ 8FB9              1
 630+ 8FB9 18 FE            jr $
 631+ 8FBB
 632+ 8FBB 3E 01            ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 633+ 8FBD 32 CF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 634+ 8FC0 21 1A 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 635+ 8FC3 CB D6            set 2,(hl)
 636+ 8FC5 C9               ret
 637+ 8FC6
 638+ 8FC6              ; -----------------------------------------------------------------------
 639+ 8FC6              ;
 640+ 8FC6              ;   17/04/23
 641+ 8FC6              ;
 642+ 8FC6
 643+ 8FC6              Detecta_colision_nave_entidad
 644+ 8FC6
 645+ 8FC6              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 646+ 8FC6
 647+ 8FC6 2A B8 88         ld hl,(Posicion_actual)
 648+ 8FC9 CD EF 94         call Calcula_puntero_de_impresion
 649+ 8FCC
 650+ 8FCC              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 651+ 8FCC              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 652+ 8FCC
 653+ 8FCC DD E5            push ix
 654+ 8FCE E1               pop hl
 655+ 8FCF E5               push hl
 656+ 8FD0
 657+ 8FD0              ; ----- ----- -----
 658+ 8FD0 1E 00            ld e,0                                         ; Indica impacto.
 659+ 8FD2 06 0A            ld b,10
 660+ 8FD4 CD 04 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 661+ 8FD7 7B               ld a,e
 662+ 8FD8 FE 05            cp 5
 663+ 8FDA 38 0E            jr c,3F
 664+ 8FDC
 665+ 8FDC              ; LLegados a este punto:
 666+ 8FDC              ;
 667+ 8FDC              ;   HAY COLISIÓN !!!!!.
 668+ 8FDC              ;
 669+ 8FDC              ;   .db (Impacto) de Amadeus a "1".
 670+ 8FDC              ;   SET el bit3 de (Impacto2).
 671+ 8FDC              ;
 672+ 8FDC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 673+ 8FDC
 674+ 8FDC 21 97 85         ld hl,Amadeus_db+25
 675+ 8FDF 36 01            ld (hl),1
 676+ 8FE1 21 1A 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 677+ 8FE4 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 678+ 8FE6 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 679+ 8FE8 18 18            jr 1F
 680+ 8FEA
 681+ 8FEA              ; -----
 682+ 8FEA
 683+ 8FEA E1           3 pop hl
 684+ 8FEB CD 94 95         call NextScan
 685+ 8FEE E5               push hl
 686+ 8FEF 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 687+ 8FF0 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 688+ 8FF2 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 689+ 8FF4 30 0C            jr nc,1F
 690+ 8FF6              ;                                                  ; _ 2º scanline si esto es así.
 691+ 8FF6 10 DC            djnz 2B
 692+ 8FF8
 693+ 8FF8              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 694+ 8FF8
 695+ 8FF8              ; LLegados a este punto:
 696+ 8FF8              ;
 697+ 8FF8              ;   NO HAY COLISIÓN !!!!!.
 698+ 8FF8              ;
 699+ 8FF8              ;   .db (Impacto) de Amadeus a "0".
 700+ 8FF8              ;   RES el bit2 de (Impacto2).
 701+ 8FF8              ;
 702+ 8FF8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 703+ 8FF8              ;   Lo colocamos a "0".
 704+ 8FF8
 705+ 8FF8 21 1A 89         ld hl,Impacto2
 706+ 8FFB CB 96            res 2,(hl)
 707+ 8FFD 2A 1B 89         ld hl,(Entidad_sospechosa_de_colision)
 708+ 9000 36 00            ld (hl),0
 709+ 9002
 710+ 9002 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 711+ 9003 C9               ret
 712+ 9004
 713+ 9004               ; ---------- ----------
 714+ 9004
 715+ 9004 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 716+ 9005 3A B7 88         ld a,(Columns)
 717+ 9008 47               ld b,a
 718+ 9009 FD 7E 00     2 ld a,(iy)
 719+ 900C BE               cp (hl)
 720+ 900D 28 01            jr z,1F
 721+ 900F
 722+ 900F 1C               inc e
 723+ 9010
 724+ 9010 23           1 inc hl
 725+ 9011 FD 23            inc iy
 726+ 9013 10 F4            djnz 2B
 727+ 9015 C1               pop bc
 728+ 9016 C9               ret
 729+ 9017
 730+ 9017              ; -------------------------------------------------------------------------------------------------------------
 731+ 9017              ;
 732+ 9017              ;   13/03/23
 733+ 9017              ;
 734+ 9017              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 735+ 9017              ;
 736+ 9017              ;   DESTRUYE: HL,BC,DE y A.
 737+ 9017
 738+ 9017 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 739+ 901A 7E               ld a,(hl)
 740+ 901B A7               and a
 741+ 901C C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 742+ 901D
 743+ 901D 44               ld b,h
 744+ 901E 4D               ld c,l
 745+ 901F 2A 0E 89         ld hl,(Stack_snapshot_disparos)
 746+ 9022 E5               push hl
 747+ 9023 A7               and a
 748+ 9024 ED 42            sbc hl,bc
 749+ 9026 E5               push hl
 750+ 9027 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 751+ 9028
 752+ 9028 E1               pop hl
 753+ 9029 54               ld d,h
 754+ 902A 5D               ld e,l
 755+ 902B 1B               dec de
 756+ 902C ED B8            lddr                                                ; Limpiamos.
 757+ 902E
 758+ 902E 21 56 70         ld hl,Album_de_fotos_disparos
 759+ 9031 22 0E 89         ld (Stack_snapshot_disparos),hl
 760+ 9034
 761+ 9034 C9               ret
 762+ 9035
 763+ 9035              ; -------------------------------------------------------------------------------------------------------------
 764+ 9035              ;
 765+ 9035              ;   18/07/23
 766+ 9035              ;
 767+ 9035
 768+ 9035              Motor_de_disparos
 769+ 9035
 770+ 9035              ; Gestiona DISPAROS DE AMADEUS.
 771+ 9035
 772+ 9035 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 773+ 9038 2A 18 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 774+ 903B
 775+ 903B CD 12 8C     2 call Extrae_address
 776+ 903E 7E               ld a,(hl)
 777+ 903F A7               and a
 778+ 9040 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 779+ 9042
 780+ 9042              ; ----- ----- ----- ----- ----- -----
 781+ 9042
 782+ 9042 C5               push bc
 783+ 9043 CD 07 91         call foto_disparo_a_borrar
 784+ 9046
 785+ 9046              ; Existe colisión con este disparo???
 786+ 9046
 787+ 9046 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 788+ 9047 7E               ld a,(hl)
 789+ 9048 2B               dec hl
 790+ 9049 E6 01            and 1
 791+ 904B 28 1D            jr z,9F
 792+ 904D
 793+ 904D              ;   En este punto:
 794+ 904D              ;
 795+ 904D              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 796+ 904D              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 797+ 904D              ;   _con la entidad).
 798+ 904D              ;
 799+ 904D              ;   Disparo_2A defw 0                                ; Control.
 800+ 904D              ;    defw 0                                          ; Puntero objeto.
 801+ 904D              ;    defw 0                                          ; Puntero de impresión.
 802+ 904D              ;    defw 0                                          ; Rutina de impresión.
 803+ 904D
 804+ 904D E5               push hl
 805+ 904E
 806+ 904E 06 04            ld b,4
 807+ 9050 23           19 inc hl
 808+ 9051 10 FD            djnz 19B
 809+ 9053
 810+ 9053 CD 12 8C         call Extrae_address
 811+ 9056 CD 5D 9C         call Genera_coordenadas_disparo
 812+ 9059
 813+ 9059              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 814+ 9059
 815+ 9059 21 1D 89         ld hl,Coordenadas_disparo_certero
 816+ 905C 72               ld (hl),d
 817+ 905D 23               inc hl
 818+ 905E 73               ld (hl),e
 819+ 905F
 820+ 905F              ; Elimino el disparo de la base de datos.
 821+ 905F
 822+ 905F E1               pop hl
 823+ 9060 CD 86 91         call Elimina_disparo_de_base_de_datos
 824+ 9063 21 1A 89         ld hl,Impacto2
 825+ 9066 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 826+ 9068
 827+ 9068 18 06            jr 11F
 828+ 906A
 829+ 906A CD 30 91     9 call Mueve_disparo
 830+ 906D CD 07 91         call foto_disparo_a_borrar
 831+ 9070
 832+ 9070 C1           11 pop bc
 833+ 9071 18 04            jr 7F
 834+ 9073
 835+ 9073              ; ----- ----- ----- ----- ----- -----
 836+ 9073
 837+ 9073 ED 42        1 sbc hl,bc
 838+ 9075 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 839+ 9077
 840+ 9077 2A 18 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 841+ 907A 23               inc hl
 842+ 907B 23               inc hl
 843+ 907C 22 18 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 844+ 907F 18 BA            jr 2B
 845+ 9081
 846+ 9081 CD 97 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 847+ 9084              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 848+ 9084
 849+ 9084              ; Gestiona DISPAROS DE ENTIDADES.
 850+ 9084
 851+ 9084 01 6A 85         ld bc,Disparo_11
 852+ 9087 2A 16 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 853+ 908A
 854+ 908A CD 12 8C     5 call Extrae_address
 855+ 908D 7E               ld a,(hl)
 856+ 908E A7               and a
 857+ 908F 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 858+ 9091
 859+ 9091              ; ----- ----- ----- ----- ----- -----
 860+ 9091
 861+ 9091 C5               push bc
 862+ 9092 CD 07 91         call foto_disparo_a_borrar
 863+ 9095
 864+ 9095              ; Existe colisión con este disparo???
 865+ 9095
 866+ 9095 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 867+ 9096 7E               ld a,(hl)
 868+ 9097 2B               dec hl
 869+ 9098 E6 01            and 1
 870+ 909A 28 4D            jr z,10F
 871+ 909C
 872+ 909C              ;! La colisión se produce con Amadeus???
 873+ 909C              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 874+ 909C
 875+ 909C E5               push hl
 876+ 909D
 877+ 909D 06 04            ld b,4
 878+ 909F 23           16 inc hl
 879+ 90A0 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 880+ 90A2
 881+ 90A2 CD 12 8C         call Extrae_address
 882+ 90A5 CD 5D 9C         call Genera_coordenadas_disparo
 883+ 90A8
 884+ 90A8 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 885+ 90A9 FE 16            cp $16
 886+ 90AB 38 2A            jr c,15F
 887+ 90AD
 888+ 90AD
 889+ 90AD              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 890+ 90AD
 891+ 90AD D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 892+ 90AE
 893+ 90AE              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 894+ 90AE
 895+ 90AE
 896+ 90AE 2A 25 89         ld hl,(Puntero_de_impresion_Amadeus)
 897+ 90B1
 898+ 90B1              ; Coordenada X de Amadeus en D.
 899+ 90B1
 900+ 90B1 7D               ld a,l
 901+ 90B2 E6 1F            and $1F
 902+ 90B4 57               ld d,a
 903+ 90B5
 904+ 90B5 21 86 85         ld hl,Amadeus_db+8
 905+ 90B8 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 906+ 90B9
 907+ 90B9 21 1F 89         ld hl,Coordenadas_X_Amadeus
 908+ 90BC CD 7C 8F         call Guarda_coordenadas_X
 909+ 90BF
 910+ 90BF D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 911+ 90C0
 912+ 90C0              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 913+ 90C0
 914+ 90C0 06 02            ld b,2
 915+ 90C2 C5           20 push bc
 916+ 90C3
 917+ 90C3 06 03            ld b,3
 918+ 90C5 21 1F 89         ld hl,Coordenadas_X_Amadeus
 919+ 90C8 7E           18 ld a,(hl)
 920+ 90C9 BA               cp d
 921+ 90CA 20 04            jr nz,17F
 922+ 90CC
 923+ 90CC              ;! Colisión Amadeus !!!!!!!!!!
 924+ 90CC
 925+ 90CC C1               pop bc
 926+ 90CD E1               pop hl
 927+ 90CE 18 0D            jr 14F
 928+ 90D0
 929+ 90D0 23           17 inc hl
 930+ 90D1 10 F5            djnz 18B
 931+ 90D3
 932+ 90D3 14               inc d                       ; 2ª Coordenada_X del disparo.
 933+ 90D4
 934+ 90D4 C1               pop bc
 935+ 90D5 10 EB            djnz 20B
 936+ 90D7
 937+ 90D7
 938+ 90D7              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 939+ 90D7              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 940+ 90D7
 941+ 90D7 E1           15 pop hl
 942+ 90D8 23               inc hl
 943+ 90D9 35               dec (hl)
 944+ 90DA 2B               dec hl
 945+ 90DB 18 0C            jr 10F
 946+ 90DD
 947+ 90DD              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 948+ 90DD              ; _ almacén de coordenadas_X de Amadeus.
 949+ 90DD
 950+ 90DD E5           14 push hl
 951+ 90DE CD 86 91         call Elimina_disparo_de_base_de_datos
 952+ 90E1 21 1A 89         ld hl,Impacto2
 953+ 90E4 CB CE            set 1,(hl)
 954+ 90E6 E1               pop hl
 955+ 90E7 18 06            jr 12F
 956+ 90E9
 957+ 90E9              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 958+ 90E9
 959+ 90E9 CD 30 91     10 call Mueve_disparo
 960+ 90EC CD 07 91         call foto_disparo_a_borrar
 961+ 90EF C1           12 pop bc
 962+ 90F0
 963+ 90F0 18 04            jr 8F
 964+ 90F2
 965+ 90F2              ; ----- ----- ----- ----- ----- -----
 966+ 90F2
 967+ 90F2 ED 42        4 sbc hl,bc
 968+ 90F4 28 0A            jr z,6F
 969+ 90F6
 970+ 90F6 2A 16 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 971+ 90F9 23               inc hl
 972+ 90FA 23               inc hl
 973+ 90FB 22 16 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 974+ 90FE 18 8A            jr 5B
 975+ 9100
 976+ 9100 CD 90 8B     6 call Inicia_Puntero_Disparo_Entidades
 977+ 9103 CD 85 8F         call Limpia_Coordenadas_X
 978+ 9106 C9               ret
 979+ 9107
 980+ 9107              ; ------------------------------------------------------------------
 981+ 9107
 982+ 9107              foto_disparo_a_borrar
 983+ 9107
 984+ 9107 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 985+ 9108 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 986+ 9109 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 987+ 910A
 988+ 910A E5               push hl
 989+ 910B 23               inc hl
 990+ 910C 23               inc hl
 991+ 910D ED 73 06 89      ld (Stack),sp
 992+ 9111 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 993+ 9112 FD E1            pop iy
 994+ 9114 DD E1            pop ix
 995+ 9116 E1               pop hl
 996+ 9117 ED 7B 06 89      ld sp,(Stack)
 997+ 911B 3A F5 88         ld a,(Ctrl_1)
 998+ 911E CB C7            set 0,a
 999+ 9120 32 F5 88         ld (Ctrl_1),a
1000+ 9123 CD A0 7F         call Guarda_foto_registros
1001+ 9126 3A F5 88         ld a,(Ctrl_1)
1002+ 9129 CB 87            res 0,a
1003+ 912B 32 F5 88         ld (Ctrl_1),a
1004+ 912E E1               pop hl
1005+ 912F C9               ret
1006+ 9130
1007+ 9130              ;---------------------------------------------------
1008+ 9130              ;
1009+ 9130              ;   18/07/23
1010+ 9130              ;
1011+ 9130
1012+ 9130              Mueve_disparo
1013+ 9130
1014+ 9130              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1015+ 9130              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1016+ 9130              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1017+ 9130
1018+ 9130 E5               push hl
1019+ 9131
1020+ 9131 7E               ld a,(hl)
1021+ 9132
1022+ 9132 06 04            ld b,4
1023+ 9134 23           1 inc hl
1024+ 9135 10 FD            djnz 1B
1025+ 9137
1026+ 9137              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1027+ 9137
1028+ 9137 CD 12 8C         call Extrae_address
1029+ 913A
1030+ 913A E6 01            and 1
1031+ 913C 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1032+ 913E
1033+ 913E              ; Disparo hacia arriba, (Amadeus).
1034+ 913E
1035+ 913E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1036+ 913E              ; _ de la dificultad.
1037+ 913E
1038+ 913E CD A3 95         call PreviousScan
1039+ 9141 CD A3 95         call PreviousScan
1040+ 9144 CD A3 95         call PreviousScan
1041+ 9147 CD A3 95         call PreviousScan
1042+ 914A
1043+ 914A              ; Detecta si el disparo de Amadeus sale de pantalla:
1044+ 914A
1045+ 914A 7C               ld a,h
1046+ 914B FE 40            cp $40
1047+ 914D 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1048+ 914F
1049+ 914F              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1050+ 914F
1051+ 914F EB               ex de,hl
1052+ 9150 06 04            ld b,4
1053+ 9152 2B           6 dec hl
1054+ 9153 10 FD            djnz 6B
1055+ 9155
1056+ 9155 CD 86 91         call Elimina_disparo_de_base_de_datos
1057+ 9158 E1               pop hl
1058+ 9159 18 10            jr 7F
1059+ 915B
1060+ 915B              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1061+ 915B              ; HL contiene el puntero de impresión del disparo.
1062+ 915B              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1063+ 915B
1064+ 915B D5           3 push de
1065+ 915C C5               push bc
1066+ 915D
1067+ 915D CD 10 8F         call Comprueba_Colision
1068+ 9160
1069+ 9160              ; B="$80", no hay colisión. B="$81", existe colisión.
1070+ 9160
1071+ 9160 78               ld a,b
1072+ 9161
1073+ 9161 C1               pop bc
1074+ 9162 D1               pop de
1075+ 9163
1076+ 9163 EB               ex de,hl
1077+ 9164
1078+ 9164 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1079+ 9165 23               inc hl                                      ; _ movimiento.
1080+ 9166 72               ld (hl),d
1081+ 9167
1082+ 9167 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1083+ 9168
1084+ 9168 23               inc hl                                      ; _ en curso.
1085+ 9169 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1086+ 916A 2B               dec hl
1087+ 916B
1088+ 916B C9           7 ret
1089+ 916C
1090+ 916C              ; Disparo hacia abajo, (Entidad).
1091+ 916C
1092+ 916C 3A 27 89     2 ld a,(Velocidad_disparo_entidades)
1093+ 916F 47               ld b,a
1094+ 9170
1095+ 9170 CD 94 95     4 call NextScan
1096+ 9173 10 FB            djnz 4B
1097+ 9175
1098+ 9175              ; Detecta si el disparo de la entidad sale de la pantalla.
1099+ 9175
1100+ 9175 7C               ld a,h
1101+ 9176 FE 58            cp $58
1102+ 9178 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1103+ 917A
1104+ 917A EB               ex de,hl
1105+ 917B 06 04            ld b,4
1106+ 917D 2B           5 dec hl
1107+ 917E 10 FD            djnz 5B
1108+ 9180
1109+ 9180 CD 86 91         call Elimina_disparo_de_base_de_datos
1110+ 9183 E1               pop hl
1111+ 9184 18 E5            jr 7B
1112+ 9186
1113+ 9186              ; HL apunta al primer byte de la base de datos del disparo.
1114+ 9186
1115+ 9186 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1116+ 9189 AF               xor a
1117+ 918A 77               ld (hl),a
1118+ 918B 54               ld d,h
1119+ 918C 5D               ld e,l
1120+ 918D 13               inc de
1121+ 918E ED B0            ldir
1122+ 9190 C9               ret
1123+ 9191
1124+ 9191              ; -----------------------------------------------------------------
1125+ 9191              ;
1126+ 9191              ;   12/04/23
1127+ 9191              ;
1128+ 9191
1129+ 9191 3A 1A 89     Selector_de_impactos ld a,(Impacto2)
1130+ 9194 A7               and a
1131+ 9195 C8               ret z
1132+ 9196
1133+ 9196 FE 04            cp 4
1134+ 9198 20 09            jr nz,1F
1135+ 919A
1136+ 919A
1137+ 919A              ; La colisión se produce por contacto entre Amadeus y una entidad.
1138+ 919A
1139+ 919A CD C6 8F         call Detecta_colision_nave_entidad
1140+ 919D
1141+ 919D 21 1A 89         ld hl,Impacto2
1142+ 91A0 CB 5E            bit 3,(hl)
1143+ 91A2 C0               ret nz                                               ; Existe colisión, RET.
1144+ 91A3
1145+ 91A3              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1146+ 91A3              ; Primero analizamos si algún disparo impacta en Amadeus.
1147+ 91A3
1148+ 91A3 21 1A 89     1 ld hl,Impacto2
1149+ 91A6 CB 4E            bit 1,(hl)
1150+ 91A8 28 07            jr z,2F
1151+ 91AA
1152+ 91AA 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1153+ 91AD 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1154+ 91AF 18 0B            jr 3F
1155+ 91B1
1156+ 91B1 21 1A 89     2 ld hl,Impacto2
1157+ 91B4 CB 46            bit 0,(hl)
1158+ 91B6 C8               ret z
1159+ 91B7
1160+ 91B7              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1161+ 91B7
1162+ 91B7 21 F5 88         ld hl,Ctrl_1
1163+ 91BA CB D6            set 2,(hl)
1164+ 91BC
1165+ 91BC C9           3 ret
1166+ 91BD
1167+ 91BD              ; -----------------------------------------------------------------
1168+ 91BD              ;
1169+ 91BD              ;   25/04/23
1170+ 91BD              ;
1171+ 91BD
1172+ 91BD              Determina_resultado_comparativa
1173+ 91BD
1174+ 91BD              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1175+ 91BD              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1176+ 91BD              ;
1177+ 91BD              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1178+ 91BD              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1179+ 91BD              ;
1180+ 91BD              ;   SBC HL,DE
1181+ 91BD
1182+ 91BD              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1183+ 91BD              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1184+ 91BD
1185+ 91BD              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1186+ 91BD              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1187+ 91BD
1188+ 91BD
1189+ 91BD 3A CA 88         ld a,(Cuad_objeto)
1190+ 91C0 FE 02            cp 2
1191+ 91C2 28 26            jr z,2F
1192+ 91C4 38 24            jr c,2F
1193+ 91C6
1194+ 91C6              ; Cuadrantes 3º y 4º
1195+ 91C6
1196+ 91C6 E6 01            and 1
1197+ 91C8 28 10            jr z,4F
1198+ 91CA
1199+ 91CA              ; Cuadrante 3º
1200+ 91CA
1201+ 91CA 7C               ld a,h
1202+ 91CB 06 00            ld b,0
1203+ 91CD
1204+ 91CD CD 58 92         call Compara_cositas_H3
1205+ 91D0
1206+ 91D0 04               inc b
1207+ 91D1 05               dec b
1208+ 91D2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1209+ 91D3
1210+ 91D3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1211+ 91D4 06 00            ld b,0
1212+ 91D6
1213+ 91D6 CD 6A 92         call Compara_cositas_L3
1214+ 91D9 C9               ret
1215+ 91DA
1216+ 91DA              ; Cuadrante 4º
1217+ 91DA
1218+ 91DA 7C           4 ld a,h
1219+ 91DB 06 00            ld b,0
1220+ 91DD
1221+ 91DD CD 7C 92         call Compara_cositas_H4
1222+ 91E0
1223+ 91E0 04               inc b
1224+ 91E1 05               dec b
1225+ 91E2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1226+ 91E3
1227+ 91E3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1228+ 91E4 06 00            ld b,0
1229+ 91E6
1230+ 91E6 CD 92 92         call Compara_cositas_L4
1231+ 91E9 C9               ret
1232+ 91EA
1233+ 91EA              ; Cuadrantes 1º y 2º.
1234+ 91EA
1235+ 91EA 28 10        2 jr z,3F
1236+ 91EC
1237+ 91EC              ; 1er Cuadrante
1238+ 91EC
1239+ 91EC 7C               ld a,h
1240+ 91ED 06 00            ld b,0
1241+ 91EF
1242+ 91EF CD 30 92         call Compara_cositas_H1
1243+ 91F2
1244+ 91F2 04               inc b
1245+ 91F3 05               dec b
1246+ 91F4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1247+ 91F5
1248+ 91F5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1249+ 91F6 06 00            ld b,0
1250+ 91F8
1251+ 91F8 CD 46 92         call Compara_cositas_L1
1252+ 91FB C9               ret
1253+ 91FC
1254+ 91FC
1255+ 91FC              ; 2º Cuadrante
1256+ 91FC
1257+ 91FC 7C           3 ld a,h
1258+ 91FD 06 00            ld b,0
1259+ 91FF
1260+ 91FF CD 0C 92         call Compara_cositas_H2
1261+ 9202
1262+ 9202 04               inc b
1263+ 9203 05               dec b
1264+ 9204 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1265+ 9205
1266+ 9205 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1267+ 9206 06 00            ld b,0
1268+ 9208
1269+ 9208 CD 1E 92         call Compara_cositas_L2
1270+ 920B C9               ret
1271+ 920C
1272+ 920C A7           Compara_cositas_H2 and a
1273+ 920D 28 0D            jr z,1F
1274+ 920F              ;    cp $fd
1275+ 920F              ;    jr z,1F
1276+ 920F              ;    cp $fe
1277+ 920F              ;    jr z,1F
1278+ 920F FE FF            cp $ff
1279+ 9211 28 09            jr z,1F
1280+ 9213 FE 01            cp $01
1281+ 9215 28 05            jr z,1F
1282+ 9217 FE 02            cp $02
1283+ 9219 28 01            jr z,1F
1284+ 921B C0               ret nz
1285+ 921C 04           1 inc b
1286+ 921D C9               ret
1287+ 921E
1288+ 921E A7           Compara_cositas_L2 and a
1289+ 921F 28 0D            jr z,1F
1290+ 9221              ;    cp $fd
1291+ 9221              ;    jr z,1F
1292+ 9221 FE FE            cp $fe
1293+ 9223 28 09            jr z,1F
1294+ 9225 FE FF            cp $ff
1295+ 9227 28 05            jr z,1F
1296+ 9229 FE 01            cp $01
1297+ 922B 28 01            jr z,1F
1298+ 922D              ;    cp $02
1299+ 922D              ;    jr z,1F
1300+ 922D C0               ret nz
1301+ 922E 04           1 inc b
1302+ 922F C9               ret
1303+ 9230
1304+ 9230 A7           Compara_cositas_H1 and a
1305+ 9231 28 11            jr z,1F
1306+ 9233              ;    cp $fd
1307+ 9233              ;    jr z,1F
1308+ 9233              ;    cp $fe
1309+ 9233              ;    jr z,1F
1310+ 9233 FE FF            cp $ff
1311+ 9235 28 0D            jr z,1F
1312+ 9237 FE 01            cp $01
1313+ 9239 28 09            jr z,1F
1314+ 923B FE 02            cp $02
1315+ 923D 28 05            jr z,1F
1316+ 923F FE 03            cp $03
1317+ 9241 28 01            jr z,1F
1318+ 9243 C0               ret nz
1319+ 9244 04           1 inc b
1320+ 9245 C9               ret
1321+ 9246
1322+ 9246 A7           Compara_cositas_L1 and a
1323+ 9247 28 0D            jr z,1F
1324+ 9249              ;    cp $fd
1325+ 9249              ;    jr z,1F
1326+ 9249              ;    cp $fe
1327+ 9249              ;    jr z,1F
1328+ 9249              ;    cp $ff
1329+ 9249              ;    jr z,1F
1330+ 9249 FE 01            cp $01
1331+ 924B 28 09            jr z,1F
1332+ 924D FE 02            cp $02
1333+ 924F 28 05            jr z,1F
1334+ 9251 FE 03            cp $03
1335+ 9253 28 01            jr z,1F
1336+ 9255 C0               ret nz
1337+ 9256 04           1 inc b
1338+ 9257 C9               ret
1339+ 9258
1340+ 9258 A7           Compara_cositas_H3 and a
1341+ 9259 28 0D            jr z,1F
1342+ 925B              ;    cp $fd
1343+ 925B              ;    jr z,1F
1344+ 925B FE FE            cp $fe
1345+ 925D 28 09            jr z,1F
1346+ 925F FE FF            cp $ff
1347+ 9261 28 05            jr z,1F
1348+ 9263 FE 01            cp $01
1349+ 9265 28 01            jr z,1F
1350+ 9267              ;    cp $02
1351+ 9267              ;    jr z,1F
1352+ 9267              ;    cp $03
1353+ 9267              ;    jr z,1F
1354+ 9267 C0               ret nz
1355+ 9268 04           1 inc b
1356+ 9269 C9               ret
1357+ 926A
1358+ 926A A7           Compara_cositas_L3 and a
1359+ 926B 28 0D            jr z,1F
1360+ 926D              ;    cp $fd
1361+ 926D              ;    jr z,1F
1362+ 926D              ;    cp $fe
1363+ 926D              ;    jr z,1F
1364+ 926D              ;    cp $ff
1365+ 926D              ;    jr z,1F
1366+ 926D FE 01            cp $01
1367+ 926F 28 09            jr z,1F
1368+ 9271 FE 02            cp $02
1369+ 9273 28 05            jr z,1F
1370+ 9275 FE 03            cp $03
1371+ 9277 28 01            jr z,1F
1372+ 9279 C0               ret nz
1373+ 927A 04           1 inc b
1374+ 927B C9               ret
1375+ 927C
1376+ 927C A7           Compara_cositas_H4 and a
1377+ 927D 28 11            jr z,1F
1378+ 927F FE FD            cp $fd
1379+ 9281 28 0D            jr z,1F
1380+ 9283 FE FE            cp $fe
1381+ 9285 28 09            jr z,1F
1382+ 9287 FE FF            cp $ff
1383+ 9289 28 05            jr z,1F
1384+ 928B FE 01            cp $01
1385+ 928D 28 01            jr z,1F
1386+ 928F              ;    cp $02
1387+ 928F              ;    jr z,1F
1388+ 928F              ;    cp $03
1389+ 928F              ;    jr z,1F
1390+ 928F C0               ret nz
1391+ 9290 04           1 inc b
1392+ 9291 C9               ret
1393+ 9292
1394+ 9292 A7           Compara_cositas_L4 and a
1395+ 9293 28 0D            jr z,1F
1396+ 9295              ;    cp $fd
1397+ 9295              ;    jr z,1F
1398+ 9295 FE FE            cp $fe
1399+ 9297 28 09            jr z,1F
1400+ 9299 FE FF            cp $ff
1401+ 929B 28 05            jr z,1F
1402+ 929D FE 01            cp $01
1403+ 929F 28 01            jr z,1F
1404+ 92A1              ;    cp $02
1405+ 92A1              ;    jr z,1F
1406+ 92A1              ;    cp $03
1407+ 92A1              ;    jr z,1F
1408+ 92A1 C0               ret nz
1409+ 92A2 04           1 inc b
1410+ 92A3 C9               ret
# file closed: Disparo.asm
1513  92A4              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92A4              ; ******************************************************************************************************************************************************************************************
   2+ 92A4              ;
   3+ 92A4              ; 26/06/23
   4+ 92A4              ;
   5+ 92A4              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92A4
   7+ 92A4 CD 88 95     Draw call Prepara_draw
   8+ 92A7 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92A8 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92A9 28 05        	jr z,2F
  11+ 92AB
  12+ 92AB 3A CA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92AE 18 0C        	jr 1F
  14+ 92B0
  15+ 92B0 2A C8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 92B3 22 B8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 92B6 CD 45 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 92B9              ;													; _la esquina superior izquierda de la pantalla.
  19+ 92B9 CD E8 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 92BC
  21+ 92BC 3A E2 88     1 ld a,(Ctrl_0)
  22+ 92BF CB 6F        	bit 5,a
  23+ 92C1 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 92C3
  25+ 92C3 CD DB 92     	call Comprueba_limite_horizontal
  26+ 92C6 CD 6B 93     	call Comprueba_limite_vertical
  27+ 92C9
  28+ 92C9              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 92C9              ; -----------------------
  30+ 92C9              ; -----------------------
  31+ 92C9              ; -----------------------
  32+ 92C9
  33+ 92C9 CD B8 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 92CC CD EF 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 92CF CD 4E 95     	call Define_rutina_de_impresion
  36+ 92D2
  37+ 92D2 3A E2 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 92D5 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 92D7 32 E2 88     	ld (Ctrl_0),a
  40+ 92DA
  41+ 92DA C9           	ret
  42+ 92DB
  43+ 92DB              ; *******************************************************************************************************************************************************************************************
  44+ 92DB              ;	21/01/23
  45+ 92DB              ;
  46+ 92DB              ; 	Comprueba_limite_horizontal.
  47+ 92DB              ;
  48+ 92DB              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 92DB              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 92DB              ;
  51+ 92DB              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 92DB              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 92DB              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 92DB              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 92DB
  56+ 92DB
  57+ 92DB
  58+ 92DB 3A E2 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 92DE CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 92E0 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 92E2 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 92E4 32 E2 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 92E7 18 09            jr 6F
  64+ 92E9 CB 5F        1 bit 3,a
  65+ 92EB 28 0A            jr z,2F
  66+ 92ED E6 F7            and $f7
  67+ 92EF 32 E2 88         ld (Ctrl_0),a
  68+ 92F2 CD 45 94     6 call Inicializacion
  69+ 92F5 18 5B            jr 5F
  70+ 92F7 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92F8
  72+ 92F8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92F8              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92F8
  75+ 92F8 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92F9 2A F0 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92FC CD A7 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 92FF 67           	ld h,a
  79+ 9300 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9301 CD A7 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9304 67           	ld h,a
  82+ 9305 A7           	and a
  83+ 9306 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9308 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9309 3A CA 88     	ld a,(Cuad_objeto)
  86+ 930C FE 02        	cp 2
  87+ 930E 38 1E        	jr c,3F
  88+ 9310 28 1C        	jr z,3F
  89+ 9312 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9313 28 23            jr z,7F
  91+ 9315 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9317 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9319 E1           	pop hl
  94+ 931A
  95+ 931A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 931A              ; _para indicar con E="2" en caso necesario.
  97+ 931A
  98+ 931A E5               push hl
  99+ 931B C5               push bc
 100+ 931C CD A7 98     	call calcula_tercio
 101+ 931F FE 01        	cp 1
 102+ 9321 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9323 CD 53 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9326 28 26            jr z,9F
 105+ 9328 38 24            jr c,9F
 106+ 932A 1E 00        11 ld e,0
 107+ 932C 18 22            jr 8F
 108+ 932E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 932F 28 07        	jr z, 7F
 110+ 9331 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9333 1E 00         	ld e,0
 112+ 9335 E1           	pop hl
 113+ 9336 18 04        	jr 4F
 114+ 9338 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 933A 18 15            jr 10F
 116+ 933C
 117+ 933C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 933C              ; _para indicar con E="2" en caso necesario.
 119+ 933C
 120+ 933C E5           4 push hl
 121+ 933D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 933E CD A7 98     	call calcula_tercio
 123+ 9341 FE 01        	cp 1
 124+ 9343 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9345 CD 53 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9348 28 04            jr z,9F
 127+ 934A 30 02            jr nc,9F
 128+ 934C 18 02        	jr 8F
 129+ 934E 1E 02        9 ld e,2
 130+ 9350 C1           8 pop bc
 131+ 9351 E1           10 pop hl
 132+ 9352 C9           5 ret
 133+ 9353
 134+ 9353              ; --------------------
 135+ 9353              ;
 136+ 9353              ; 25/08/22
 137+ 9353
 138+ 9353 CD A7 98     Comprueba_centro call calcula_tercio
 139+ 9356 67               ld h,a
 140+ 9357 08           	ex af,af
 141+ 9358 FE 02        	cp 2
 142+ 935A 38 07        	jr c,1F
 143+ 935C 28 05        	jr z,1F
 144+ 935E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9361 18 03        	jr 2F
 146+ 9363 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9366 08           2 ex af,af
 148+ 9367 A7               and a
 149+ 9368 ED 42            sbc hl,bc
 150+ 936A C9               ret
 151+ 936B
 152+ 936B              ; *********************************************************************************************************************************************************************************************
 153+ 936B              ;
 154+ 936B              ;   16/8/22
 155+ 936B              ;
 156+ 936B              ;	Comprueba_limite_vertical
 157+ 936B              ;
 158+ 936B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 936B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 936B              ;
 161+ 936B
 162+ 936B 2A B8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 936E 7D           	ld a,l
 164+ 936F E6 1F        	and $1F
 165+ 9371 57           	ld d,a
 166+ 9372 3A F2 88     	ld a,(Limite_vertical)
 167+ 9375 BA           	cp d 											; Límite - Posición.
 168+ 9376 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9377 3A CA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 937A CB 47        	bit 0,a
 171+ 937C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 937E
 173+ 937E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 937E
 175+ 937E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 937F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9381
 178+ 9381              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9381              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9381
 181+ 9381 3A BC 88         ld a,(Coordenada_X)
 182+ 9384 16 0F            ld d,Centro_izquierda
 183+ 9386 A7               and a
 184+ 9387 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9388 28 1E            jr z,3F
 186+ 938A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 938C              ;                                                    ; _salimos sin modificar nada.
 188+ 938C 18 0E            jr 2F
 189+ 938E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 938F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9391
 192+ 9391              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9391              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9391
 195+ 9391 3A BC 88         ld a,(Coordenada_X)
 196+ 9394 16 10            ld d,Centro_derecha
 197+ 9396 A7               and a
 198+ 9397 92               sub d
 199+ 9398 28 0E            jr z,3F
 200+ 939A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 939C              ;                                                    ; _salimos sin modificar nada.
 202+ 939C CB 43        2 bit 0,e
 203+ 939E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 93A0 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 93A1 CD 35 94         call Modificaccionne
 206+ 93A4 C1           	pop bc
 207+ 93A5 CD 45 94         call Inicializacion
 208+ 93A8 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 93A9
 210+ 93A9              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 93A9
 212+ 93A9 C5           4 push bc
 213+ 93AA 01 B7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 93AD 0A           	ld a,(bc)
 215+ 93AE 3D           	dec a
 216+ 93AF 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 93B0 7D           	ld a,l
 218+ 93B1 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 93B2 CB 47        	bit 0,a
 220+ 93B4 28 03        	jr z,5F
 221+ 93B6 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 93B7 18 2E        	jr 7F
 223+ 93B9
 224+ 93B9              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 93B9
 226+ 93B9 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 93BA F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 93BB 3A E2 88     	ld a,(Ctrl_0)
 229+ 93BE CB 4F        	bit 1,a
 230+ 93C0 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 93C2 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 93C3
 233+ 93C3              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 93C3
 235+ 93C3 1C               inc e
 236+ 93C4 1D               dec e
 237+ 93C5 20 07            jr nz,12F
 238+ 93C7 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 93C8 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 93C9 22 B8 88     	ld (Posicion_actual),hl
 241+ 93CC 18 44        13 jr 9F
 242+ 93CE CB 43        12 bit 0,e
 243+ 93D0 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 93D2              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 93D2 C1           	pop bc
 246+ 93D3 18 D3        	jr 3B
 247+ 93D5 80           14 add b
 248+ 93D6 6F               ld l,a
 249+ 93D7 22 B8 88     	ld (Posicion_actual),hl
 250+ 93DA CD 35 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 93DD 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 93DF E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 93E1 32 E2 88         ld (Ctrl_0),a
 254+ 93E4 F1           	pop af
 255+ 93E5 18 2B        	jr 9F
 256+ 93E7
 257+ 93E7              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 93E7
 259+ 93E7 F5           7 push af
 260+ 93E8 3A E2 88     	ld a,(Ctrl_0)
 261+ 93EB CB 47        	bit 0,a
 262+ 93ED 20 1D        	jr nz,8F
 263+ 93EF F1           	pop af
 264+ 93F0
 265+ 93F0              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93F0
 267+ 93F0 1C           	inc e
 268+ 93F1 1D               dec e
 269+ 93F2 20 07            jr nz,10F
 270+ 93F4 90           	sub b
 271+ 93F5 6F               ld l,a
 272+ 93F6 22 B8 88     	ld (Posicion_actual),hl
 273+ 93F9 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93FB              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93FB CB 43        10 bit 0,e
 276+ 93FD 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 93FF              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 93FF C1           	pop bc
 279+ 9400 18 A6        	jr 3B
 280+ 9402 90           16 sub b
 281+ 9403 6F               ld l,a
 282+ 9404 22 B8 88     	ld (Posicion_actual),hl
 283+ 9407 CD 35 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 940A 18 06            jr 9F
 285+ 940C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 940E 32 E2 88         ld (Ctrl_0),a
 287+ 9411 F1           	pop af
 288+ 9412 C1           9 pop bc
 289+ 9413 1E 00        	ld e,0
 290+ 9415 CD 45 94         call Inicializacion
 291+ 9418 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9419 08           	ex af,af
 293+ 941A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 941B 18 8B            jr 3B
 295+ 941D
 296+ 941D              ; --------------------
 297+ 941D
 298+ 941D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 941F CD A3 95     1 call PreviousScan
 300+ 9422 10 FB            djnz 1B
 301+ 9424 22 B8 88     	ld (Posicion_actual),hl
 302+ 9427 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9428 C9           	ret
 304+ 9429
 305+ 9429              ; --------------------
 306+ 9429
 307+ 9429 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 942B CD 94 95     1 call NextScan
 309+ 942E 10 FB            djnz 1B
 310+ 9430 22 B8 88     	ld (Posicion_actual),hl
 311+ 9433 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9434 C9           	ret
 313+ 9435
 314+ 9435              ; --------------------
 315+ 9435              ;
 316+ 9435              ;	22/01/23
 317+ 9435              ;
 318+ 9435              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9435              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9435              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9435
 322+ 9435
 323+ 9435              Modificaccionne
 324+ 9435
 325+ 9435 3A CA 88     	ld a,(Cuad_objeto)
 326+ 9438 FE 02        	cp 2
 327+ 943A CC 1D 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 943D DC 1D 94         call c,Modifica_Pos_actual
 329+ 9440 C8           	ret z
 330+ 9441 CD 29 94         call Modifica_Pos_actual2
 331+ 9444 C9               ret
 332+ 9445
 333+ 9445              ; *************************************************************************************************************************************************************************************************
 334+ 9445              ;
 335+ 9445              ;	13/8/22
 336+ 9445              ;
 337+ 9445              ;	Inicializacion
 338+ 9445              ;
 339+ 9445              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9445              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9445              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9445              ;
 343+ 9445              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9445              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9445              ;	_ desaparece/aparece.
 346+ 9445
 347+ 9445              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9445              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9445              ;
 350+ 9445              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9445              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9445              ; 		   [E] ="0"
 353+ 9445
 354+ 9445              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9445
 356+ 9445 CD A7 98     Inicializacion call calcula_tercio
 357+ 9448 28 36        	jr z,primit
 358+ 944A E6 02        	and 2
 359+ 944C 20 07        	jr nz,segmit
 360+ 944E 7D           	ld a,l
 361+ 944F FE 7F        	cp $7f
 362+ 9451 38 2D        	jr c,primit
 363+ 9453 28 2B        	jr z,primit
 364+ 9455 CD B2 94     segmit call column
 365+ 9458 38 13        	jr c,tercuad
 366+ 945A 3E 04        cuarcuad ld a,4
 367+ 945C 32 CA 88     	ld (Cuad_objeto),a
 368+ 945F 21 20 48     	ld hl,$4820
 369+ 9462 22 F0 88     	ld (Limite_horizontal),hl
 370+ 9465 21 F2 88     	ld hl,Limite_vertical
 371+ 9468 36 0D        	ld (hl),$0d
 372+ 946A 08           	ex af,af
 373+ 946B 18 3C        	jr 1F
 374+ 946D              tercuad
 375+ 946D 3E 03        	ld a,3
 376+ 946F 32 CA 88     	ld (Cuad_objeto),a
 377+ 9472 21 20 48     	ld hl,$4820
 378+ 9475 22 F0 88     	ld (Limite_horizontal),hl
 379+ 9478 21 F2 88     	ld hl,Limite_vertical
 380+ 947B 36 12        	ld (hl),$12
 381+ 947D 08           	ex af,af
 382+ 947E 18 29        	jr 1F
 383+ 9480 CD B2 94     primit call column
 384+ 9483 38 13        	jr c, primcuad
 385+ 9485              segcuad
 386+ 9485 3E 02        	ld a,2
 387+ 9487 32 CA 88     	ld (Cuad_objeto),a
 388+ 948A 21 C0 4F     	ld hl,$4fc0
 389+ 948D 22 F0 88     	ld (Limite_horizontal),hl
 390+ 9490 21 F2 88     	ld hl,Limite_vertical
 391+ 9493 36 0D        	ld (hl),$0d
 392+ 9495 08           	ex af,af
 393+ 9496 18 11        	jr 1F
 394+ 9498              primcuad
 395+ 9498 3E 01        	ld a,1
 396+ 949A 32 CA 88     	ld (Cuad_objeto),a
 397+ 949D 21 C0 4F     	ld hl,$4fc0
 398+ 94A0 22 F0 88     	ld (Limite_horizontal),hl
 399+ 94A3 21 F2 88     	ld hl,Limite_vertical
 400+ 94A6 36 12        	ld (hl),$12
 401+ 94A8 08           	ex af,af
 402+ 94A9 CD 32 9C     1 call Genera_coordenadas
 403+ 94AC 21 E2 88     	ld hl,Ctrl_0
 404+ 94AF CB EE        	set 5,(hl)
 405+ 94B1 C9           	ret
 406+ 94B2
 407+ 94B2              ; ------------------------------------------------------------------------------------------------------------------
 408+ 94B2
 409+ 94B2              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 94B2              ;
 411+ 94B2              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 94B2
 413+ 94B2 7D           column ld a,l
 414+ 94B3 E6 1F        	and $1f
 415+ 94B5 FE 10         	cp $10
 416+ 94B7 C9            	ret
 417+ 94B8
 418+ 94B8              ; --------------------------------------------------------------------------------------------------------------------
 419+ 94B8              ;
 420+ 94B8              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 94B8              ;
 422+ 94B8              ; 14/12/22
 423+ 94B8              ;
 424+ 94B8              ;	Modifica: A y BC.
 425+ 94B8
 426+ 94B8 3A CA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 94BB E6 01        	and 1
 428+ 94BD 28 17        	jr z,1F
 429+ 94BF
 430+ 94BF              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 94BF
 432+ 94BF 3A BC 88     	ld a,(Coordenada_X)
 433+ 94C2 47           	ld b,a
 434+ 94C3 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 94C4 79           	ld a,c
 436+ 94C5 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 94C6 38 08        	jr c,2F
 438+ 94C8 47           	ld b,a
 439+ 94C9 79           	ld a,c
 440+ 94CA 90           	sub b
 441+ 94CB 32 EF 88     	ld (Columnas),a
 442+ 94CE 18 1B        	jr 4F
 443+ 94D0 79           2 ld a,c
 444+ 94D1 32 EF 88     	ld (Columnas),a
 445+ 94D4 18 15        	jr 4F
 446+ 94D6
 447+ 94D6              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 94D6
 449+ 94D6 3A BC 88     1 ld a,(Coordenada_X)
 450+ 94D9 81           	add c
 451+ 94DA 3D           	dec a
 452+ 94DB D6 1F        	sub $1f
 453+ 94DD 38 08        	jr c,3F
 454+ 94DF 47           	ld b,a
 455+ 94E0 79           	ld a,c
 456+ 94E1 90           	sub b
 457+ 94E2 32 EF 88     	ld (Columnas),a
 458+ 94E5 18 04        	jr 4F
 459+ 94E7 79           3 ld a,c
 460+ 94E8 32 EF 88     	ld (Columnas),a
 461+ 94EB D9           4 exx
 462+ 94EC 4F           	ld c,a
 463+ 94ED D9           	exx
 464+ 94EE C9            ret
 465+ 94EF
 466+ 94EF              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94EF              ;
 468+ 94EF              ;   19/7/23
 469+ 94EF              ;
 470+ 94EF              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94EF              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94EF              ;
 473+ 94EF              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94EF              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94EF              ;
 476+ 94EF              ;	DESTRUYE: HL,B Y A.
 477+ 94EF
 478+ 94EF 3A CA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 94F2 FE 02        	cp 2
 480+ 94F4 38 18        	jr c,1F
 481+ 94F6 28 16        	jr z,1F
 482+ 94F8 E6 01        	and 1
 483+ 94FA 28 0D        	jr z,3F
 484+ 94FC
 485+ 94FC              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94FC
 487+ 94FC CD 42 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 94FF
 489+ 94FF 7D           9 ld a,l
 490+ 9500 E6 1F        	and $1f
 491+ 9502 28 2A        	jr z,7F
 492+ 9504 2B           	dec hl
 493+ 9505 10 F8        	djnz 9B
 494+ 9507 18 25        	jr 7F
 495+ 9509
 496+ 9509              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9509
 498+ 9509 2A B8 88     3 ld hl,(Posicion_actual)
 499+ 950C 18 20        	jr 7F
 500+ 950E
 501+ 950E 28 14        1 jr z,2F
 502+ 9510
 503+ 9510              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9510
 505+ 9510 CD 42 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9513
 507+ 9513 7D           4 ld a,l
 508+ 9514 E6 1F        	and $1f
 509+ 9516 28 03        	jr z,6F
 510+ 9518 2B           	dec hl
 511+ 9519 10 F8        	djnz 4B
 512+ 951B 06 0F        6 ld b,15
 513+ 951D CD A3 95     5 call PreviousScan
 514+ 9520 10 FB        	djnz 5B
 515+ 9522 18 0A        	jr 7F
 516+ 9524
 517+ 9524              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9524
 519+ 9524 CD 42 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9527 06 0F        	ld b,15
 521+ 9529 CD A3 95     8 call PreviousScan
 522+ 952C 10 FB        	djnz 8B
 523+ 952E
 524+ 952E E5           7 push hl
 525+ 952F DD E1        	pop ix
 526+ 9531
 527+ 9531 2A BA 88     	ld hl,(Puntero_objeto)
 528+ 9534 E5           	push hl
 529+ 9535 FD E1        	pop iy
 530+ 9537
 531+ 9537              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9537
 533+ 9537 3A E2 88     	ld a,(Ctrl_0)
 534+ 953A CB 77        	bit 6,a
 535+ 953C C8           	ret z
 536+ 953D
 537+ 953D              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 953D              ; _ entidad / Amadeus´.
 539+ 953D
 540+ 953D DD 22 25 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9541
 542+ 9541 C9           	ret
 543+ 9542
 544+ 9542              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9542              ;
 546+ 9542              ;	2/1/23
 547+ 9542              ;
 548+ 9542              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9542              ;
 550+ 9542              ;	Tras esta rutina tenemos:
 551+ 9542              ;
 552+ 9542              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9542              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9542              ;
 555+ 9542              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9542
 557+ 9542 2A B8 88     Operandos ld hl,(Posicion_actual)
 558+ 9545 3A EF 88     	ld a,(Columnas)
 559+ 9548 3D           	dec a
 560+ 9549 20 01        	jr nz,1F
 561+ 954B 3C           	inc a
 562+ 954C 47           1 ld b,a
 563+ 954D C9           	ret
 564+ 954E
 565+ 954E              ; --------------------------------------------------------------------------------------------------------------------
 566+ 954E              ;
 567+ 954E              ;	3/1/23
 568+ 954E              ;
 569+ 954E              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 954E              ;
 571+ 954E              ;	Destruye: A,B,HL y DE.
 572+ 954E
 573+ 954E              Define_rutina_de_impresion
 574+ 954E
 575+ 954E 3A B7 88     	ld a,(Columns)
 576+ 9551 47           	ld b,a
 577+ 9552 3A EF 88     	ld a,(Columnas)
 578+ 9555 B8           	cp b
 579+ 9556 20 0D        	jr nz,2f
 580+ 9558
 581+ 9558              ;	La entidad se imprime entera.
 582+ 9558
 583+ 9558 21 77 96     	ld hl, Indice_entidades_completas
 584+ 955B E6 01        	and 1
 585+ 955D 28 02        	jr z,1F
 586+ 955F
 587+ 955F 23           	inc hl
 588+ 9560 23           	inc hl
 589+ 9561
 590+ 9561 CD 12 8C     1 call Extrae_address
 591+ 9564 C9           	ret		;	ret
 592+ 9565
 593+ 9565              ;	La entidad no se imprime entera en pantalla.
 594+ 9565
 595+ 9565 3A CA 88     2 ld a,(Cuad_objeto)
 596+ 9568 E6 01        	and 1
 597+ 956A 28 17        	jr z,3F
 598+ 956C
 599+ 956C              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 956C
 601+ 956C 21 7B 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 956F 3A B7 88     4 ld a,(Columns)
 603+ 9572 E6 01        	and 1
 604+ 9574 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9576
 606+ 9576 23           	inc hl
 607+ 9577 23           	inc hl
 608+ 9578
 609+ 9578 3A EF 88     	ld a,(Columnas)
 610+ 957B E6 01        	and 1
 611+ 957D 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 957F
 613+ 957F 23           	inc hl
 614+ 9580 23           	inc hl
 615+ 9581
 616+ 9581 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9583
 618+ 9583 21 81 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9586 18 E7        	jr 4B
 620+ 9588
 621+ 9588              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9588              ;
 623+ 9588              ;	Prepara_draw
 624+ 9588              ;
 625+ 9588              ;	Es una rutina de carga.
 626+ 9588              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9588              ;
 628+ 9588              ;	FUNCIONAMIENTO:
 629+ 9588              ;
 630+ 9588              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9588              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9588              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9588              ;
 634+ 9588              ;	DESTRUYE:
 635+ 9588              ;
 636+ 9588              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9588
 638+ 9588 21 B6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 958B 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 958C 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 958D 4E           	ld c,(hl)
 642+ 958E 2A B8 88     	ld hl,(Posicion_actual)
 643+ 9591 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9593 C9           	ret
 645+ 9594
 646+ 9594              ;----------------------------------------------------------------------------------------------------------------
 647+ 9594              ;
 648+ 9594              ;	5/08/22
 649+ 9594              ;
 650+ 9594              ;   NextScan.
 651+ 9594              ;
 652+ 9594              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9594              ;
 654+ 9594              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9594              ;
 656+ 9594              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9594              ;
 658+ 9594              ;       DESTRUIDOS: AF y HL !!!
 659+ 9594              ;
 660+ 9594              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9594              ;
 662+ 9594
 663+ 9594 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9595 7C               ld a,h
 665+ 9596 E6 07            and 7
 666+ 9598 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9599
 668+ 9599 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 959A C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 959C 6F               ld l,a
 671+ 959D D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 959E
 673+ 959E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 959F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 95A1 67               ld h,a
 676+ 95A2 C9               ret
 677+ 95A3
 678+ 95A3              ;----------------------------------------------------------------------------------------------------------------
 679+ 95A3              ;
 680+ 95A3              ;	5/08/22
 681+ 95A3              ;
 682+ 95A3              ;   PreviousScan.
 683+ 95A3              ;
 684+ 95A3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 95A3              ;
 686+ 95A3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 95A3              ;
 688+ 95A3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 95A3              ;
 690+ 95A3              ;       DESTRUIDOS: AF y HL !!!
 691+ 95A3              ;
 692+ 95A3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 95A3              ;
 694+ 95A3
 695+ 95A3 7C           PreviousScan ld a,h
 696+ 95A4 25               dec h               ; Dec H.
 697+ 95A5 E6 07            and 7
 698+ 95A7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 95A8
 700+ 95A8 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 95A9 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 95AB 6F               ld l,a
 703+ 95AC D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 95AD
 705+ 95AD 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 95AE C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 95B0 67               ld h,a
 708+ 95B1 C9               ret
 709+ 95B2
 710+ 95B2              ; -----------------------------------------------------------------------------------
 711+ 95B2              ;
 712+ 95B2              ;	31/7/23
 713+ 95B2              ;
 714+ 95B2              ;	Rutina principal de pintado de entidades.
 715+ 95B2              ;	Extrae la foto del frame, (entidades).
 716+ 95B2
 717+ 95B2              Extrae_foto_entidades
 718+ 95B2
 719+ 95B2 21 01 70     	ld hl,Album_de_fotos+1
 720+ 95B5 7E           	ld a,(hl)
 721+ 95B6 A7           	and a
 722+ 95B7 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 95B8
 724+ 95B8              ;	No hay datos, (entidades para pintar en este frame).
 725+ 95B8
 726+ 95B8 3A 01 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 95BB A7           	and a
 728+ 95BC C8           	ret z
 729+ 95BD
 730+ 95BD              ; -----------------------------------
 731+ 95BD
 732+ 95BD ED 73 06 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 95C1 31 00 70     	ld sp,Album_de_fotos
 734+ 95C4
 735+ 95C4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 95C6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 95C7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 95C8
 739+ 95C8 ED 73 08 89  	ld (Stack_2),sp
 740+ 95CC ED 7B 06 89  	ld sp,(Stack)
 741+ 95D0
 742+ 95D0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 95D0
 744+ 95D0 3E CD        	ld a,$cd
 745+ 95D2 32 DA 95     	ld (Imprime),a
 746+ 95D5 EB           	ex de,hl
 747+ 95D6 22 DB 95     	ld (Imprime+1),hl
 748+ 95D9 EB           	ex de,hl
 749+ 95DA
 750+ 95DA              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 95DA
 752+ 95DA 00 00 00     Imprime db 0,0,0
 753+ 95DD
 754+ 95DD ED 73 06 89  	ld (Stack),sp
 755+ 95E1
 756+ 95E1 3A 01 89     	ld a,(Numero_de_malotes)
 757+ 95E4 3D           	dec a
 758+ 95E5 28 09        	jr z,1F
 759+ 95E7 32 01 89      	ld (Numero_de_malotes),a
 760+ 95EA
 761+ 95EA ED 7B 08 89  	ld sp,(Stack_2)
 762+ 95EE 18 D4        	jr 2B
 763+ 95F0
 764+ 95F0 AF           1 xor a
 765+ 95F1 32 08 89     	ld (Stack_2),a
 766+ 95F4
 767+ 95F4 C9           	ret
 768+ 95F5
 769+ 95F5              ; -----------------------------------------------------------------------------------
 770+ 95F5              ;
 771+ 95F5              ;	28/2/23
 772+ 95F5              ;
 773+ 95F5              ;	Pinta los disparos generados.
 774+ 95F5
 775+ 95F5              Extrae_foto_disparos
 776+ 95F5
 777+ 95F5 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 95F8 7E               ld a,(hl)
 779+ 95F9 A7               and a
 780+ 95FA C8               ret z
 781+ 95FB
 782+ 95FB 3A 15 89     	ld a,(Numero_de_disparotes)
 783+ 95FE A7           	and a
 784+ 95FF C8           	ret z
 785+ 9600 ED 73 06 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9604 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 9607
 788+ 9607 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9609 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 960A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 960B
 792+ 960B ED 73 08 89  	ld (Stack_2),sp
 793+ 960F ED 7B 06 89  	ld sp,(Stack)
 794+ 9613
 795+ 9613              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9613
 797+ 9613 3E CD        	ld a,$cd
 798+ 9615 32 1D 96     	ld (Imprime2),a
 799+ 9618 EB           	ex de,hl
 800+ 9619 22 1E 96     	ld (Imprime2+1),hl
 801+ 961C EB           	ex de,hl
 802+ 961D
 803+ 961D              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 961D
 805+ 961D 00 00 00     Imprime2 db 0,0,0
 806+ 9620
 807+ 9620 3A 15 89     	ld a,(Numero_de_disparotes)
 808+ 9623 3D           	dec a
 809+ 9624 28 09        	jr z,1F
 810+ 9626 32 15 89      	ld (Numero_de_disparotes),a
 811+ 9629
 812+ 9629 ED 7B 08 89  	ld sp,(Stack_2)
 813+ 962D 18 D8        	jr 2B
 814+ 962F
 815+ 962F AF           1 xor a
 816+ 9630 32 08 89     	ld (Stack_2),a
 817+ 9633 C9           	ret
 818+ 9634
 819+ 9634              ; -----------------------------------------------------------------------------------
 820+ 9634              ;
 821+ 9634              ;	4/9/23
 822+ 9634              ;
 823+ 9634              ;	Rutina principal de pintado de Amadeus.
 824+ 9634              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 9634
 826+ 9634 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 9637 7E           	ld a,(hl)
 828+ 9638 A7           	and a
 829+ 9639 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 963A
 831+ 963A 3A 01 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 963D A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 963E C8           	ret z
 834+ 963F
 835+ 963F              ; -----------------------------------
 836+ 963F
 837+ 963F ED 73 06 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9643 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 9646
 840+ 9646 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9648 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 9649 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 964A
 844+ 964A ED 73 08 89  	ld (Stack_2),sp
 845+ 964E ED 7B 06 89  	ld sp,(Stack)
 846+ 9652
 847+ 9652              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9652
 849+ 9652 3E CD        	ld a,$cd
 850+ 9654 32 5C 96     	ld (Imprime_Amadeus),a
 851+ 9657 EB           	ex de,hl
 852+ 9658 22 5D 96     	ld (Imprime_Amadeus+1),hl
 853+ 965B EB           	ex de,hl
 854+ 965C
 855+ 965C              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 965C
 857+ 965C 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 965F
 859+ 965F ED 73 06 89  	ld (Stack),sp
 860+ 9663
 861+ 9663 3A 01 89     	ld a,(Numero_de_malotes)
 862+ 9666 3D           	dec a
 863+ 9667 28 09        	jr z,1F
 864+ 9669 32 01 89      	ld (Numero_de_malotes),a
 865+ 966C
 866+ 966C ED 7B 08 89  	ld sp,(Stack_2)
 867+ 9670 18 D4        	jr 2B
 868+ 9672
 869+ 9672 AF           1 xor a
 870+ 9673 32 08 89     	ld (Stack_2),a
 871+ 9676
 872+ 9676 C9           	ret
# file closed: Draw_XOR.asm
1514  9677              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9677              ;   índices de Rutinas de impresión.
   2+ 9677
   3+ 9677 87 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9679 B4 96            defw Pinta_Amadeus_3x2
   5+ 967B
   6+ 967B 0A 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 967D AA 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 967F 5E 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9681
  10+ 9681 34 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9683 38 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9685 EC 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9687
  14+ 9687
  15+ 9687              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9687              ;
  17+ 9687              ;   12/12/22
  18+ 9687              ;
  19+ 9687              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9687              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9687              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9687              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9687              ;
  24+ 9687              ;   Modifica: DE y HL.
  25+ 9687
  26+ 9687 ED 73 06 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 968B FD F9        	ld sp,iy
  28+ 968D 06 10            ld b,16
  29+ 968F D1           1 pop de
  30+ 9690 7B               ld a,e
  31+ 9691 AE               xor (hl)
  32+ 9692 77           	ld (hl),a
  33+ 9693 23           	inc hl
  34+ 9694 7A               ld a,d
  35+ 9695 AE               xor (hl)
  36+ 9696 77           	ld (hl),a
  37+ 9697 2B           	dec hl
  38+ 9698 24           	inc h
  39+ 9699 7C               ld a,h
  40+ 969A E6 07            and 7
  41+ 969C 20 0A            jr nz,2F
  42+ 969E 7D               ld a,l
  43+ 969F C6 20            add a,$20
  44+ 96A1 6F               ld l,a
  45+ 96A2 38 04            jr c,2F
  46+ 96A4 7C               ld a,h
  47+ 96A5 D6 08            sub 8
  48+ 96A7 67               ld h,a
  49+ 96A8 7C           2 ld a,h
  50+ 96A9 FE 58            cp $58
  51+ 96AB 28 02            jr z,3F
  52+ 96AD 10 E0            djnz 1B
  53+ 96AF ED 7B 06 89  3 ld sp,(Stack)
  54+ 96B3 C9           	ret
  55+ 96B4
  56+ 96B4 ED 73 06 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96B8 FD F9        	ld sp,iy
  58+ 96BA 06 08            ld b,8
  59+ 96BC D1           1 pop de
  60+ 96BD 7B               ld a,e
  61+ 96BE AE               xor (hl)
  62+ 96BF 77           	ld (hl),a
  63+ 96C0 23           	inc hl
  64+ 96C1 7A               ld a,d
  65+ 96C2 AE               xor (hl)
  66+ 96C3 77           	ld (hl),a
  67+ 96C4 23           	inc hl
  68+ 96C5 D1           	pop de
  69+ 96C6 7B               ld a,e
  70+ 96C7 AE               xor (hl)
  71+ 96C8 77           	ld (hl),a
  72+ 96C9 2B           	dec hl
  73+ 96CA 2B           	dec hl
  74+ 96CB 24           	inc h
  75+ 96CC 7C               ld a,h
  76+ 96CD E6 07            and 7
  77+ 96CF 20 0A            jr nz,2F
  78+ 96D1 7D               ld a,l
  79+ 96D2 C6 20            add a,$20
  80+ 96D4 6F               ld l,a
  81+ 96D5 38 04            jr c,2F
  82+ 96D7 7C               ld a,h
  83+ 96D8 D6 08            sub 8
  84+ 96DA 67               ld h,a
  85+ 96DB 7C           2 ld a,h
  86+ 96DC FE 58            cp $58
  87+ 96DE 28 25            jr z,4F
  88+ 96E0 7A               ld a,d
  89+ 96E1 AE               xor (hl)
  90+ 96E2 77               ld (hl),a
  91+ 96E3 D1           	pop de
  92+ 96E4 23           	inc hl
  93+ 96E5 7B               ld a,e
  94+ 96E6 AE               xor (hl)
  95+ 96E7 77           	ld (hl),a
  96+ 96E8 23           	inc hl
  97+ 96E9 7A               ld a,d
  98+ 96EA AE               xor (hl)
  99+ 96EB 77           	ld (hl),a
 100+ 96EC 2B           	dec hl
 101+ 96ED 2B           	dec hl
 102+ 96EE 24           	inc h
 103+ 96EF 7C               ld a,h
 104+ 96F0 E6 07            and 7
 105+ 96F2 20 0A            jr nz,3F
 106+ 96F4 7D               ld a,l
 107+ 96F5 C6 20            add a,$20
 108+ 96F7 6F               ld l,a
 109+ 96F8 38 04            jr c,3F
 110+ 96FA 7C               ld a,h
 111+ 96FB D6 08            sub 8
 112+ 96FD 67               ld h,a
 113+ 96FE 7C           3 ld a,h
 114+ 96FF FE 58            cp $58
 115+ 9701 28 02            jr z,4F
 116+ 9703 10 B7            djnz 1B
 117+ 9705 ED 7B 06 89  4 ld sp,(Stack)
 118+ 9709 C9           	ret
 119+ 970A
 120+ 970A              ; ---------------------------------------------------
 121+ 970A
 122+ 970A ED 73 06 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 970E FD F9        	ld sp,iy
 124+ 9710
 125+ 9710              ; >>>
 126+ 9710
 127+ 9710 06 10            ld b,16
 128+ 9712 D1           1 pop de
 129+ 9713 7A           	ld a,d
 130+ 9714 AE           	xor (hl)
 131+ 9715 77           	ld (hl),a
 132+ 9716 24           	inc h
 133+ 9717 7C               ld a,h
 134+ 9718 E6 07            and 7
 135+ 971A 20 0C            jr nz,2F
 136+ 971C 7D               ld a,l
 137+ 971D C6 20            add a,$20
 138+ 971F 6F               ld l,a
 139+ 9720 38 06            jr c,2F
 140+ 9722 7C               ld a,h
 141+ 9723 D6 08            sub 8
 142+ 9725 67               ld h,a
 143+ 9726 18 00            jr 2F
 144+ 9728 7C           2 ld a,h
 145+ 9729 FE 58            cp $58
 146+ 972B 28 02            jr z,3F
 147+ 972D 10 E3            djnz 1B
 148+ 972F ED 7B 06 89  3 ld sp,(Stack)
 149+ 9733 C9           	ret
 150+ 9734
 151+ 9734 ED 73 06 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9738 FD F9        	ld sp,iy
 153+ 973A
 154+ 973A              ; >>>
 155+ 973A
 156+ 973A 06 10            ld b,16
 157+ 973C D1           1 pop de
 158+ 973D 7B           	ld a,e
 159+ 973E AE           	xor (hl)
 160+ 973F 77           	ld (hl),a
 161+ 9740 24           	inc h
 162+ 9741 7C               ld a,h
 163+ 9742 E6 07            and 7
 164+ 9744 20 0C            jr nz,2F
 165+ 9746 7D               ld a,l
 166+ 9747 C6 20            add a,$20
 167+ 9749 6F               ld l,a
 168+ 974A 38 06            jr c,2F
 169+ 974C 7C               ld a,h
 170+ 974D D6 08            sub 8
 171+ 974F 67               ld h,a
 172+ 9750 18 00            jr 2F
 173+ 9752 7C           2 ld a,h
 174+ 9753 FE 58            cp $58
 175+ 9755 28 02            jr z,3F
 176+ 9757 10 E3            djnz 1B
 177+ 9759 ED 7B 06 89  3 ld sp,(Stack)
 178+ 975D C9           	ret
 179+ 975E
 180+ 975E              ; ---------------------------------------------------
 181+ 975E
 182+ 975E ED 73 06 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9762 FD F9        	ld sp,iy
 184+ 9764 06 08            ld b,8
 185+ 9766 D1           1 pop de
 186+ 9767 7A           	ld a,d
 187+ 9768 AE           	xor (hl)
 188+ 9769 77           	ld (hl),a
 189+ 976A 23           	inc hl
 190+ 976B D1           	pop de
 191+ 976C 7B           	ld a,e
 192+ 976D AE           	xor (hl)
 193+ 976E 77           	ld (hl),a
 194+ 976F 2B           	dec hl
 195+ 9770 24            	inc h
 196+ 9771 7C               ld a,h
 197+ 9772 E6 07            and 7
 198+ 9774 20 0A            jr nz,2F
 199+ 9776 7D               ld a,l
 200+ 9777 C6 20            add a,$20
 201+ 9779 6F               ld l,a
 202+ 977A 38 04            jr c,2F
 203+ 977C 7C               ld a,h
 204+ 977D D6 08            sub 8
 205+ 977F 67               ld h,a
 206+ 9780 7C           2 ld a,h
 207+ 9781 FE 58            cp $58
 208+ 9783 28 20            jr z,4F
 209+ 9785 D1               pop de
 210+ 9786 7B           	ld a,e
 211+ 9787 AE           	xor (hl)
 212+ 9788 77           	ld (hl),a
 213+ 9789 23           	inc hl
 214+ 978A 7A           	ld a,d
 215+ 978B AE           	xor (hl)
 216+ 978C 77           	ld (hl),a
 217+ 978D 2B           	dec hl
 218+ 978E 24           	inc h
 219+ 978F 7C               ld a,h
 220+ 9790 E6 07            and 7
 221+ 9792 20 0A            jr nz,3F
 222+ 9794 7D               ld a,l
 223+ 9795 C6 20            add a,$20
 224+ 9797 6F               ld l,a
 225+ 9798 38 04            jr c,3F
 226+ 979A 7C               ld a,h
 227+ 979B D6 08            sub 8
 228+ 979D 67               ld h,a
 229+ 979E 7C           3 ld a,h
 230+ 979F FE 58            cp $58
 231+ 97A1 28 02            jr z,4F
 232+ 97A3 10 C1            djnz 1B
 233+ 97A5 ED 7B 06 89  4 ld sp,(Stack)
 234+ 97A9 C9           	ret
 235+ 97AA
 236+ 97AA ED 73 06 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97AE FD F9        	ld sp,iy
 238+ 97B0 06 08            ld b,8
 239+ 97B2 D1           1 pop de
 240+ 97B3 D1           	pop de
 241+ 97B4 7B           	ld a,e
 242+ 97B5 AE           	xor (hl)
 243+ 97B6 77           	ld (hl),a
 244+ 97B7 24            	inc h
 245+ 97B8 7C               ld a,h
 246+ 97B9 E6 07            and 7
 247+ 97BB 20 0A            jr nz,2F
 248+ 97BD 7D               ld a,l
 249+ 97BE C6 20            add a,$20
 250+ 97C0 6F               ld l,a
 251+ 97C1 38 04            jr c,2F
 252+ 97C3 7C               ld a,h
 253+ 97C4 D6 08            sub 8
 254+ 97C6 67               ld h,a
 255+ 97C7 7C           2 ld a,h
 256+ 97C8 FE 58            cp $58
 257+ 97CA 28 1B            jr z,4F
 258+ 97CC D1               pop de
 259+ 97CD 7A           	ld a,d
 260+ 97CE AE           	xor (hl)
 261+ 97CF 77           	ld (hl),a
 262+ 97D0 24           	inc h
 263+ 97D1 7C               ld a,h
 264+ 97D2 E6 07            and 7
 265+ 97D4 20 0A            jr nz,3F
 266+ 97D6 7D               ld a,l
 267+ 97D7 C6 20            add a,$20
 268+ 97D9 6F               ld l,a
 269+ 97DA 38 04            jr c,3F
 270+ 97DC 7C               ld a,h
 271+ 97DD D6 08            sub 8
 272+ 97DF 67               ld h,a
 273+ 97E0 7C           3 ld a,h
 274+ 97E1 FE 58            cp $58
 275+ 97E3 28 02            jr z,4F
 276+ 97E5 10 CB            djnz 1B
 277+ 97E7 ED 7B 06 89  4 ld sp,(Stack)
 278+ 97EB C9           	ret
 279+ 97EC
 280+ 97EC ED 73 06 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97F0 FD F9        	ld sp,iy
 282+ 97F2 06 08            ld b,8
 283+ 97F4 D1           1 pop de
 284+ 97F5 7B           	ld a,e
 285+ 97F6 AE           	xor (hl)
 286+ 97F7 77           	ld (hl),a
 287+ 97F8 23           	inc hl
 288+ 97F9 7A           	ld a,d
 289+ 97FA AE           	xor (hl)
 290+ 97FB 77           	ld (hl),a
 291+ 97FC 2B           	dec hl
 292+ 97FD 24             	inc h
 293+ 97FE 7C               ld a,h
 294+ 97FF E6 07            and 7
 295+ 9801 20 0A            jr nz,2F
 296+ 9803 7D               ld a,l
 297+ 9804 C6 20            add a,$20
 298+ 9806 6F               ld l,a
 299+ 9807 38 04            jr c,2F
 300+ 9809 7C               ld a,h
 301+ 980A D6 08            sub 8
 302+ 980C 67               ld h,a
 303+ 980D 7C           2 ld a,h
 304+ 980E FE 58            cp $58
 305+ 9810 28 21            jr z,4F
 306+ 9812 D1               pop de
 307+ 9813 7A           	ld a,d
 308+ 9814 AE           	xor (hl)
 309+ 9815 77           	ld (hl),a
 310+ 9816 23           	inc hl
 311+ 9817 D1               pop de
 312+ 9818 7B           	ld a,e
 313+ 9819 AE           	xor (hl)
 314+ 981A 77           	ld (hl),a
 315+ 981B 2B           	dec hl
 316+ 981C 24           	inc h
 317+ 981D 7C               ld a,h
 318+ 981E E6 07            and 7
 319+ 9820 20 0A            jr nz,3F
 320+ 9822 7D               ld a,l
 321+ 9823 C6 20            add a,$20
 322+ 9825 6F               ld l,a
 323+ 9826 38 04            jr c,3F
 324+ 9828 7C               ld a,h
 325+ 9829 D6 08            sub 8
 326+ 982B 67               ld h,a
 327+ 982C 7C           3 ld a,h
 328+ 982D FE 58            cp $58
 329+ 982F 28 02            jr z,4F
 330+ 9831 10 C1            djnz 1B
 331+ 9833 ED 7B 06 89  4 ld sp,(Stack)
 332+ 9837 C9           	ret
 333+ 9838
 334+ 9838 ED 73 06 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 983C FD F9        	ld sp,iy
 336+ 983E 06 08            ld b,8
 337+ 9840 D1           1 pop de
 338+ 9841 7B           	ld a,e
 339+ 9842 AE           	xor (hl)
 340+ 9843 77           	ld (hl),a
 341+ 9844 24            	inc h
 342+ 9845 7C               ld a,h
 343+ 9846 E6 07            and 7
 344+ 9848 20 0A            jr nz,2F
 345+ 984A 7D               ld a,l
 346+ 984B C6 20            add a,$20
 347+ 984D 6F               ld l,a
 348+ 984E 38 04            jr c,2F
 349+ 9850 7C               ld a,h
 350+ 9851 D6 08            sub 8
 351+ 9853 67               ld h,a
 352+ 9854 7C           2 ld a,h
 353+ 9855 FE 58            cp $58
 354+ 9857 28 1C            jr z,4F
 355+ 9859 D1               pop de
 356+ 985A 7A           	ld a,d
 357+ 985B AE           	xor (hl)
 358+ 985C 77           	ld (hl),a
 359+ 985D 24           	inc h
 360+ 985E 7C               ld a,h
 361+ 985F E6 07            and 7
 362+ 9861 20 0A            jr nz,3F
 363+ 9863 7D               ld a,l
 364+ 9864 C6 20            add a,$20
 365+ 9866 6F               ld l,a
 366+ 9867 38 04            jr c,3F
 367+ 9869 7C               ld a,h
 368+ 986A D6 08            sub 8
 369+ 986C 67               ld h,a
 370+ 986D 7C           3 ld a,h
 371+ 986E FE 58            cp $58
 372+ 9870 28 03            jr z,4F
 373+ 9872 D1               pop de
 374+ 9873 10 CB            djnz 1B
 375+ 9875 ED 7B 06 89  4 ld sp,(Stack)
 376+ 9879 C9           	ret
 377+ 987A
 378+ 987A              ; ---------------------------------------------------
 379+ 987A              ;
 380+ 987A              ;   27/02/23
 381+ 987A              ;
 382+ 987A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 987A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 987A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 987A
 386+ 987A ED 73 06 89  Pinta_Disparo ld (Stack),sp
 387+ 987E FD F9            ld sp,iy
 388+ 9880 06 03            ld b,3
 389+ 9882 D1           1 pop de
 390+ 9883 7B               ld a,e
 391+ 9884 AE               xor (hl)
 392+ 9885 77               ld (hl),a
 393+ 9886 23               inc hl
 394+ 9887 7A               ld a,d
 395+ 9888 AE               xor (hl)
 396+ 9889 77               ld (hl),a
 397+ 988A 2B               dec hl
 398+ 988B
 399+ 988B 24               inc h
 400+ 988C 7C               ld a,h
 401+ 988D E6 07            and 7
 402+ 988F 20 0A            jr nz,2F
 403+ 9891 7D               ld a,l
 404+ 9892 C6 20            add a,$20
 405+ 9894 6F               ld l,a
 406+ 9895 38 04            jr c,2F
 407+ 9897 7C               ld a,h
 408+ 9898 D6 08            sub 8
 409+ 989A 67               ld h,a
 410+ 989B 7C           2 ld a,h
 411+ 989C FE 58            cp $58
 412+ 989E 28 02            jr z,3F
 413+ 98A0
 414+ 98A0 10 E0            djnz 1B
 415+ 98A2 ED 7B 06 89  3 ld sp,(Stack)
 416+ 98A6 C9               ret
 417+ 98A7
# file closed: Rutinas_de_impresion_sprites.asm
1515  98A7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98A7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98A7              ;
   3+ 98A7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98A7              ;
   5+ 98A7              ; *****************************************************************************************************************************************************************************************
   6+ 98A7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98A7
   8+ 98A7 7C           calcula_tercio ld a,h
   9+ 98A8 E6 18        	and $18
  10+ 98AA CB 2F        	sra a
  11+ 98AC CB 2F        	sra a
  12+ 98AE CB 2F        	sra a
  13+ 98B0 C9           	ret
  14+ 98B1
# file closed: calcula_tercio.asm
1516  98B1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98B1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98B1              ;
   3+ 98B1              ;
   4+ 98B1              ;	CLS.
   5+ 98B1              ;
   6+ 98B1              ;	Limpia la pantalla y define sus atributos.
   7+ 98B1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98B1              ;
   9+ 98B1              ;	COLORES: 0 ..... NEGRO
  10+ 98B1              ;    		 1 ..... AZUL
  11+ 98B1              ; 			 2 ..... ROJO
  12+ 98B1              ;			 3 ..... MAGENTA
  13+ 98B1              ; 			 4 ..... VERDE
  14+ 98B1              ; 			 5 ..... CIAN
  15+ 98B1              ;			 6 ..... AMARILLO
  16+ 98B1              ; 			 7 ..... BLANCO
  17+ 98B1              ;
  18+ 98B1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98B1              ;
  20+ 98B1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98B1
  22+ 98B1
  23+ 98B1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98B4 11 01 40     	LD DE,$4001
  25+ 98B7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98BA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98BC ED B0        	LDIR
  28+ 98BE 01 FF 02     	LD BC,767
  29+ 98C1 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98C2 ED B0        	LDIR
  31+ 98C4 C9           	ret
  32+ 98C5
# file closed: Cls.asm
1517  98C5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98C5              ; ******************************************************************************************************************************************************************************************
   2+ 98C5              ;
   3+ 98C5              ;   20/05/23
   4+ 98C5              ;
   5+ 98C5              ;	Recompone_posicion_inicio
   6+ 98C5              ;
   7+ 98C5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98C5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98C5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98C5              ;	_ a una u otra rutina.
  11+ 98C5
  12+ 98C5              Recompone_posicion_inicio
  13+ 98C5
  14+ 98C5 2A C8 88     	ld hl,(Posicion_inicio)
  15+ 98C8 7D           	ld a,l
  16+ 98C9 E6 1F        	and $1f
  17+ 98CB 28 16        	jr z,1F
  18+ 98CD
  19+ 98CD FE 1F        	cp $1f
  20+ 98CF 28 0D        	jr z,3F
  21+ 98D1
  22+ 98D1 21 F3 88     	ld hl,Ctrl_2
  23+ 98D4 CB C6        	set 0,(hl)
  24+ 98D6 2A BA 88     	ld hl,(Puntero_objeto)
  25+ 98D9 22 F6 88     	ld (Repone_puntero_objeto),hl
  26+ 98DC 18 08        	jr 2F
  27+ 98DE
  28+ 98DE CD 7F 9A     3 call Mov_left
  29+ 98E1 18 03        	jr 2F
  30+ 98E3
  31+ 98E3 CD 61 99     1 call Mov_right
  32+ 98E6 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98E9 22 BA 88     	ld (Puntero_objeto),hl
  34+ 98EC C9           	ret
  35+ 98ED
  36+ 98ED              ; ******************************************************************************************************************************************************************************************
  37+ 98ED              ;
  38+ 98ED              ;   27/05/23
  39+ 98ED              ;
  40+ 98ED              ;	Mov_down
  41+ 98ED              ;
  42+ 98ED              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98ED              ;
  44+ 98ED              ;
  45+ 98ED              Mov_down
  46+ 98ED
  47+ 98ED CD 4F 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98F0              ;																	; _ repone (Puntero_objeto).
  49+ 98F0 21 E2 88     	ld hl,Ctrl_0
  50+ 98F3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98F5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98F5              ; 																	; _ en el caso de que no lo haya.
  53+ 98F5 3A CE 88     	ld a,(Vel_down)
  54+ 98F8 47           	ld b,a
  55+ 98F9 2A B8 88         ld hl,(Posicion_actual)
  56+ 98FC CD A7 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98FF E6 02        	and 2
  58+ 9901 28 0F        	jr z,1F
  59+ 9903
  60+ 9903              ; Nos encontramos en el último tercio de pantalla.
  61+ 9903              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9903
  63+ 9903 7C           	ld a,h
  64+ 9904 FE 57        	cp $57
  65+ 9906 20 0A        	jr nz,1F
  66+ 9908
  67+ 9908 7D           	ld a,l
  68+ 9909 C6 20        	add $20
  69+ 990B 30 05        	jr nc,1F
  70+ 990D
  71+ 990D              ; ------------------------------
  72+ 990D              ;	call Reaparece_arriba
  73+ 990D CD 0C 9C     	call Reinicio
  74+ 9910              ; ------------------------------
  75+ 9910
  76+ 9910 18 08        	jr 3F
  77+ 9912 CD 94 95     1 call NextScan
  78+ 9915 22 B8 88     	ld (Posicion_actual),hl
  79+ 9918 10 E2            djnz 2B
  80+ 991A CD 32 9C     3 call Genera_coordenadas
  81+ 991D C9           	ret
  82+ 991E
  83+ 991E              ; ******************************************************************************************************************************************************************************************
  84+ 991E              ;
  85+ 991E              ;   27/05/23
  86+ 991E              ;
  87+ 991E              ;	Mov_up
  88+ 991E              ;
  89+ 991E              ; 	Mueve el Sprite hacia arriba.
  90+ 991E              ;
  91+ 991E              ;
  92+ 991E              Mov_up
  93+ 991E
  94+ 991E CD 4F 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9921              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9921 21 E2 88     	ld hl,Ctrl_0
  97+ 9924 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9926              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9926              ; 																		; _ en el caso de que no lo haya.
 100+ 9926 3A CD 88     	ld a,(Vel_up)
 101+ 9929 47           	ld b,a
 102+ 992A 2A B8 88     	ld hl,(Posicion_actual)
 103+ 992D CD A7 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9930 A7           	and a
 105+ 9931 20 10        	jr nz,1F
 106+ 9933
 107+ 9933              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9933              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9933
 110+ 9933 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9934 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9936 20 0B            jr nz,1F
 113+ 9938 7D               ld a,l
 114+ 9939 D6 20            sub $20
 115+ 993B 30 06            jr nc,1F
 116+ 993D 25               dec h
 117+ 993E
 118+ 993E              ; -----------------------------
 119+ 993E CD ED 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9941              ;	call Reinicio
 121+ 9941              ; -----------------------------
 122+ 9941
 123+ 9941 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9943 CD A3 95     1 call PreviousScan
 125+ 9946 22 B8 88     	ld (Posicion_actual),hl
 126+ 9949 10 E2            djnz 3B
 127+ 994B CD 32 9C     2 call Genera_coordenadas
 128+ 994E C9           	ret
 129+ 994F
 130+ 994F              ; -----------------------------
 131+ 994F              ;
 132+ 994F              ;	27/5/23
 133+ 994F              ;
 134+ 994F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 994F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 994F              ;
 137+ 994F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 994F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 994F              ;
 140+ 994F              ;	Modifica: A y (Puntero_objeto).
 141+ 994F
 142+ 994F 3A F3 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9952 CB 47        	bit 0,a
 144+ 9954 C8           	ret z
 145+ 9955 CB 87        	res 0,a
 146+ 9957 32 F3 88     	ld (Ctrl_2),a
 147+ 995A 2A F6 88     	ld hl,(Repone_puntero_objeto)
 148+ 995D 22 BA 88     	ld (Puntero_objeto),hl
 149+ 9960 C9           	ret
 150+ 9961
 151+ 9961              ; ******************************************************************************************************************************************************************************************
 152+ 9961              ;
 153+ 9961              ;	19/10/22
 154+ 9961              ;
 155+ 9961              ;	Mov_right.
 156+ 9961              ;
 157+ 9961              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9961              ;
 159+ 9961
 160+ 9961 21 E2 88     Mov_right ld hl,Ctrl_0
 161+ 9964 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9966              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9966              ; 																	; _ en el caso de que no lo haya.
 164+ 9966 3A E2 88     	ld a,(Ctrl_0)
 165+ 9969 CB 77        	bit 6,a
 166+ 996B 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 996D
 168+ 996D CD 9B 9B     	call Stop_Amadeus_right
 169+ 9970 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9971 18 4D        	jr 8F
 171+ 9973
 172+ 9973 3A BC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9976 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9978 20 46        	jr nz,8F
 175+ 997A
 176+ 997A 3A BE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 997D A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 997E 28 40        	jr z,8F
 179+ 9980
 180+ 9980              ; ---------- ---------- ----------
 181+ 9980              ;
 182+ 9980              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9980
 184+ 9980 3A CC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9983 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9985 28 11        	jr z,1F
 187+ 9987 38 06        	jr c,6F
 188+ 9989 FE 04        	cp 4
 189+ 998B 28 14        	jr z,7F
 190+ 998D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 998F
 192+ 998F              ; ---------- ---------- ----------
 193+ 998F              ;
 194+ 998F              ; Perfiles de velocidad
 195+ 998F              ;
 196+ 998F
 197+ 998F 3A BE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9992 FE FE        	cp $fe
 199+ 9994 20 2A        	jr nz,8F
 200+ 9996 18 10        	jr 3F
 201+ 9998 3A BE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 999B FE FD        	cp $fd
 203+ 999D 20 21        	jr nz,8F
 204+ 999F 18 07        	jr 3F
 205+ 99A1 3A BE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 99A4 FE FB        	cp $fb
 207+ 99A6 20 18        	jr nz,8F
 208+ 99A8
 209+ 99A8              ; ---------- ---------- ----------
 210+ 99A8
 211+ 99A8              3
 212+ 99A8 CD DB 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 99AB              ;	call Reinicio
 214+ 99AB
 215+ 99AB              ; ---------- ---------- ----------
 216+ 99AB              ;
 217+ 99AB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 99AB
 219+ 99AB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 99AD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 99AE CD C7 99     	call DESPLZ_DER
 222+ 99B1 C1           	pop bc
 223+ 99B2 10 F9        	djnz 5B
 224+ 99B4 2A B8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 99B7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 99B8 22 B8 88     	ld (Posicion_actual),hl
 227+ 99BB CD 32 9C     	call Genera_coordenadas
 228+ 99BE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 99C0
 230+ 99C0              ; ---------- ---------- ----------
 231+ 99C0
 232+ 99C0 2A B8 88     8 ld hl,(Posicion_actual)
 233+ 99C3 CD C7 99     	call DESPLZ_DER
 234+ 99C6 C9           2 ret
 235+ 99C7
 236+ 99C7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 99C7              ;
 238+ 99C7              ;	22/9/22
 239+ 99C7              ;
 240+ 99C7
 241+ 99C7 CD D6 99     DESPLZ_DER call Desplaza_derecha
 242+ 99CA CD 22 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 99CD CD 4B 9A         call Ciclo_completo
 244+ 99D0 21 E2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 99D3 CB FE        	set 7,(hl)
 246+ 99D5 C9           	ret
 247+ 99D6
 248+ 99D6              ; ******************************************************************************************************************************************************************************************
 249+ 99D6              ;	15/02/23
 250+ 99D6              ;
 251+ 99D6
 252+ 99D6 3A CC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 99D9 47           	ld b,a
 254+ 99DA 2A C4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 99DD 23           1 inc hl
 256+ 99DE 23           	inc hl
 257+ 99DF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 99E1 22 C4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 99E4 CD 12 8C     	call Extrae_address
 260+ 99E7 22 BA 88     	ld (Puntero_objeto),hl
 261+ 99EA
 262+ 99EA              ; Modifica (Puntero_DESPLZ_izq).
 263+ 99EA
 264+ 99EA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 99EA              ; Cuántos movimientos hemos hecho ??
 266+ 99EA              ; DE contiene (Puntero_DESPLZ_der).
 267+ 99EA
 268+ 99EA 2A C0 88     7 ld hl,(Indice_Sprite_der)
 269+ 99ED EB           	ex de,hl
 270+ 99EE A7           	and a
 271+ 99EF ED 52        	sbc hl,de
 272+ 99F1 CB 3D        	srl l
 273+ 99F3 3E 08        6 ld a,8
 274+ 99F5 95           	sub l
 275+ 99F6 30 1E        	jr nc,3F
 276+ 99F8
 277+ 99F8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 99F8              ; B="0".
 279+ 99F8
 280+ 99F8 04           4 inc b
 281+ 99F9 3C           	inc a
 282+ 99FA 20 FC        	jr nz,4B
 283+ 99FC 78           	ld a,b
 284+ 99FD 08           	ex af,af
 285+ 99FE 2A C0 88     	ld hl,(Indice_Sprite_der)
 286+ 9A01 23           5 inc hl
 287+ 9A02 23           	inc hl
 288+ 9A03 10 FC        	djnz 5B
 289+ 9A05 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A08 CD 12 8C     	call Extrae_address
 291+ 9A0B 22 BA 88     	ld (Puntero_objeto),hl
 292+ 9A0E
 293+ 9A0E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A0E              ; _(Posicion_actual).
 295+ 9A0E
 296+ 9A0E 21 B8 88     	ld hl,Posicion_actual
 297+ 9A11 34           	inc (hl)
 298+ 9A12 08               ex af,af
 299+ 9A13 6F           	ld l,a
 300+ 9A14 18 DD        	jr 6B
 301+ 9A16
 302+ 9A16              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A16
 304+ 9A16 47           3 ld b,a
 305+ 9A17 2A C2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A1A 23           2 inc hl
 307+ 9A1B 23           	inc hl
 308+ 9A1C 10 FC        	djnz 2B
 309+ 9A1E 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A21 C9           8 ret
 311+ 9A22
 312+ 9A22              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A22              ;
 314+ 9A22              ;	24/7/22
 315+ 9A22              ;
 316+ 9A22              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A22              ;
 318+ 9A22              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A22              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A22              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A22
 322+ 9A22 3A BE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A25 A7           	and a
 324+ 9A26 20 1F        	jr nz,1F
 325+ 9A28 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A2A 32 BE 88         ld (CTRL_DESPLZ),a
 327+ 9A2D
 328+ 9A2D 21 B7 88     	ld hl,Columns
 329+ 9A30 34           	inc (hl)
 330+ 9A31 3A CA 88     	ld a,(Cuad_objeto)
 331+ 9A34 E6 01        	and 1
 332+ 9A36 28 0F        	jr z,1F
 333+ 9A38 2A B8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A3B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A3C 22 B8 88     	ld (Posicion_actual),hl
 336+ 9A3F CD 32 9C     	call Genera_coordenadas
 337+ 9A42 CD A7 9B     	call Inc_CTRL_DESPLZ
 338+ 9A45 18 03        	jr 2F
 339+ 9A47 CD A7 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A4A C9           2 ret
 341+ 9A4B
 342+ 9A4B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A4B              ;
 344+ 9A4B              ;	24/7/22
 345+ 9A4B              ;
 346+ 9A4B              ;	Ciclo_completo.
 347+ 9A4B              ;
 348+ 9A4B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A4B              ;
 350+ 9A4B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A4B              ; 	Decrementamos (Columns).
 352+ 9A4B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A4B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A4B
 355+ 9A4B
 356+ 9A4B 3A BE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A4E FE FF        	cp $ff
 358+ 9A50 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A52 E6 F0        	and $f0
 360+ 9A54 20 28        	jr nz,3F
 361+ 9A56
 362+ 9A56              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A56
 364+ 9A56 3A BE 88     	ld a,(CTRL_DESPLZ)
 365+ 9A59 47           	ld b,a
 366+ 9A5A 3E F8        	ld a,$f8
 367+ 9A5C 80           	add b
 368+ 9A5D 32 BE 88     	ld (CTRL_DESPLZ),a
 369+ 9A60 18 1C        	jr 3F
 370+ 9A62 21 B7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A65 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A66 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A67 32 BE 88     	ld (CTRL_DESPLZ),a
 374+ 9A6A 3A CA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A6D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A6F 20 0A        	jr nz,2F
 377+ 9A71 2A B8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A74 23           	inc hl
 379+ 9A75 22 B8 88     	ld (Posicion_actual),hl
 380+ 9A78 CD 32 9C     	call Genera_coordenadas
 381+ 9A7B
 382+ 9A7B              ; Inicia el puntero de Sprite.
 383+ 9A7B
 384+ 9A7B CD 29 8C     2 call Inicia_puntero_objeto_der
 385+ 9A7E C9           3 ret
 386+ 9A7F
 387+ 9A7F              ; ******************************************************************************************************************************************************************************************
 388+ 9A7F              ;
 389+ 9A7F              ;	15/02/23
 390+ 9A7F              ;
 391+ 9A7F              ;	Mov_left.
 392+ 9A7F              ;
 393+ 9A7F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A7F              ;
 395+ 9A7F              Mov_left
 396+ 9A7F
 397+ 9A7F 21 E2 88     	ld hl,Ctrl_0
 398+ 9A82 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A84              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A84              ; 																	; _ en el caso de que no lo haya.
 401+ 9A84 3A E2 88     	ld a,(Ctrl_0)
 402+ 9A87 CB 77        	bit 6,a
 403+ 9A89 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A8B
 405+ 9A8B CD A1 9B     	call Stop_Amadeus_left
 406+ 9A8E C8           	ret z
 407+ 9A8F 20 4A        	jr nz,8F
 408+ 9A91
 409+ 9A91 3A BC 88     11 ld a,(Coordenada_X)
 410+ 9A94 A7           	and a
 411+ 9A95 20 44        	jr nz,8F
 412+ 9A97
 413+ 9A97 3A BE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9A9A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9A9B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9A9D
 417+ 9A9D              ; ---------- ---------- ----------
 418+ 9A9D
 419+ 9A9D 3A CB 88     	ld a,(Vel_left)
 420+ 9AA0 FE 02        	cp 2
 421+ 9AA2 28 0F        	jr z,1F
 422+ 9AA4 38 04        	jr c,6F
 423+ 9AA6 FE 04        	cp 4
 424+ 9AA8 28 12        	jr z,7F
 425+ 9AAA
 426+ 9AAA              ; ---------- ---------- ----------
 427+ 9AAA
 428+ 9AAA 3A BE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9AAD FE F8        	cp $f8
 430+ 9AAF 20 2A        	jr nz,8F
 431+ 9AB1 18 10        	jr 4F
 432+ 9AB3 3A BE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9AB6 FE F9        	cp $f9
 434+ 9AB8 20 21        	jr nz,8F
 435+ 9ABA 18 07        	jr 4F
 436+ 9ABC 3A BE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9ABF FE FB        	cp $fb
 438+ 9AC1 20 18        	jr nz,8F
 439+ 9AC3
 440+ 9AC3              ; ---------- ---------- ----------
 441+ 9AC3
 442+ 9AC3              4
 443+ 9AC3 CD C9 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9AC6              ;	call Reinicio
 445+ 9AC6
 446+ 9AC6              ; ---------- ---------- ----------
 447+ 9AC6
 448+ 9AC6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9AC8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9AC9
 451+ 9AC9              ;	ld hl,(Indice_Sprite_izq)
 452+ 9AC9              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9AC9
 454+ 9AC9 CD E2 9A     	call DESPLZ_IZQ
 455+ 9ACC C1           	pop bc
 456+ 9ACD 10 F9        	djnz 5B
 457+ 9ACF 2A B8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9AD2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9AD3 22 B8 88     	ld (Posicion_actual),hl
 460+ 9AD6 CD 32 9C     	call Genera_coordenadas
 461+ 9AD9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9ADB
 463+ 9ADB              ; ---------- ---------- ----------
 464+ 9ADB
 465+ 9ADB              ; Movemos, no hay recolocación.
 466+ 9ADB
 467+ 9ADB 2A B8 88     8 ld hl,(Posicion_actual)
 468+ 9ADE CD E2 9A     	call DESPLZ_IZQ
 469+ 9AE1 C9           2 ret
 470+ 9AE2
 471+ 9AE2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9AE2              ;
 473+ 9AE2              ;	22/9/22
 474+ 9AE2
 475+ 9AE2              DESPLZ_IZQ
 476+ 9AE2
 477+ 9AE2 CD F1 9A     	call Desplaza_izquierda
 478+ 9AE5 CD 3D 9B         call modifica_parametros_1er_DESPLZ
 479+ 9AE8 CD 65 9B     	call Ciclo_completo_2
 480+ 9AEB 21 E2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9AEE CB BE        	res 7,(hl)
 482+ 9AF0 C9           	ret
 483+ 9AF1
 484+ 9AF1              Desplaza_izquierda
 485+ 9AF1
 486+ 9AF1 3A CB 88     	ld a,(Vel_left)
 487+ 9AF4 47           	ld b,a
 488+ 9AF5 2A C6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9AF8 23           1 inc hl
 490+ 9AF9 23           	inc hl
 491+ 9AFA 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9AFC 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9AFF CD 12 8C     	call Extrae_address
 494+ 9B02 22 BA 88     	ld (Puntero_objeto),hl
 495+ 9B05
 496+ 9B05              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B05
 498+ 9B05              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B05              ; Cuántos movimientos hemos hecho ??
 500+ 9B05              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B05
 502+ 9B05 2A C2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B08 EB           	ex de,hl
 504+ 9B09 A7           	and a
 505+ 9B0A ED 52        	sbc hl,de
 506+ 9B0C CB 3D        	srl l
 507+ 9B0E 3E 08        6 ld a,8
 508+ 9B10 95           	sub l
 509+ 9B11 30 1E        	jr nc,3F
 510+ 9B13
 511+ 9B13              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B13              ; B="0".
 513+ 9B13
 514+ 9B13 04           4 inc b
 515+ 9B14 3C           	inc a
 516+ 9B15 20 FC        	jr nz,4B
 517+ 9B17 78           	ld a,b
 518+ 9B18 08           	ex af,af
 519+ 9B19 2A C2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B1C 23           5 inc hl
 521+ 9B1D 23           	inc hl
 522+ 9B1E 10 FC        	djnz 5B
 523+ 9B20 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B23 CD 12 8C     	call Extrae_address
 525+ 9B26 22 BA 88     	ld (Puntero_objeto),hl
 526+ 9B29
 527+ 9B29              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B29              ; _(Posicion_actual).
 529+ 9B29
 530+ 9B29 21 B8 88     	ld hl,Posicion_actual
 531+ 9B2C 35           	dec (hl)
 532+ 9B2D 08           	ex af,af
 533+ 9B2E 6F           	ld l,a
 534+ 9B2F 18 DD        	jr 6B
 535+ 9B31
 536+ 9B31              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B31
 538+ 9B31 47           3 ld b,a
 539+ 9B32 2A C0 88     	ld hl,(Indice_Sprite_der)
 540+ 9B35 23           2 inc hl
 541+ 9B36 23           	inc hl
 542+ 9B37 10 FC        	djnz 2B
 543+ 9B39 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B3C C9           8 ret
 545+ 9B3D
 546+ 9B3D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B3D              ;
 548+ 9B3D              ;	modifica_parametros_1er_DESPLZ
 549+ 9B3D              ;
 550+ 9B3D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B3D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B3D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B3D
 554+ 9B3D 3A BE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B40 A7           	and a
 556+ 9B41 20 1E        	jr nz,1F
 557+ 9B43 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B44 32 BE 88         ld (CTRL_DESPLZ),a
 559+ 9B47 21 B7 88     	ld hl,Columns
 560+ 9B4A 34           	inc (hl)
 561+ 9B4B 3A CA 88     	ld a,(Cuad_objeto)
 562+ 9B4E E6 01        	and 1
 563+ 9B50 20 0F        	jr nz,1F
 564+ 9B52 2A B8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B55 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B56 22 B8 88     	ld (Posicion_actual),hl
 567+ 9B59 CD 32 9C     	call Genera_coordenadas
 568+ 9B5C CD B8 9B     	call Dec_CTRL_DESPLZ
 569+ 9B5F 18 03        	jr 2F
 570+ 9B61 CD B8 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B64 C9           2 ret
 572+ 9B65
 573+ 9B65              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B65
 575+ 9B65 3A BE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B68 FE F7        	cp $f7
 577+ 9B6A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B6C 30 2C        	jr nc,3F
 579+ 9B6E
 580+ 9B6E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B6E
 582+ 9B6E 06 00        	ld b,0
 583+ 9B70 04           4 inc b
 584+ 9B71 3C           	inc a
 585+ 9B72 FE F7        	cp $f7
 586+ 9B74 20 FA        	jr nz,4B
 587+ 9B76 3E FF        	ld a,$ff
 588+ 9B78 90           	sub b
 589+ 9B79 32 BE 88     	ld (CTRL_DESPLZ),a
 590+ 9B7C 18 1C        	jr 3F
 591+ 9B7E
 592+ 9B7E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B7E
 594+ 9B7E 21 B7 88     1 ld hl,Columns
 595+ 9B81 35           	dec (hl)
 596+ 9B82 AF           	xor a
 597+ 9B83 32 BE 88     	ld (CTRL_DESPLZ),a
 598+ 9B86 3A CA 88     	ld a,(Cuad_objeto)
 599+ 9B89 E6 01        	and 1
 600+ 9B8B 28 0A        	jr z,2F
 601+ 9B8D 2A B8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B90 2B           	dec hl
 603+ 9B91 22 B8 88     	ld (Posicion_actual),hl
 604+ 9B94 CD 32 9C     	call Genera_coordenadas
 605+ 9B97
 606+ 9B97              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9B97
 608+ 9B97 CD 3C 8C     2 call Inicia_puntero_objeto_izq
 609+ 9B9A C9           3 ret
 610+ 9B9B
 611+ 9B9B              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9B9B              ;
 613+ 9B9B              ;	19/10/22
 614+ 9B9B              ;
 615+ 9B9B              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9B9B              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9B9B
 618+ 9B9B 3A BC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9B9E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9BA0 C9           	ret
 621+ 9BA1
 622+ 9BA1              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9BA1              ;
 624+ 9BA1              ;	19/10/22
 625+ 9BA1              ;
 626+ 9BA1              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9BA1              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9BA1
 629+ 9BA1 3A BC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9BA4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9BA6 C9           	ret
 632+ 9BA7
 633+ 9BA7              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9BA7              ;
 635+ 9BA7              ;	24/7/22
 636+ 9BA7              ;
 637+ 9BA7              ;	Inc_CTRL_DESPLZ
 638+ 9BA7              ;
 639+ 9BA7              ;
 640+ 9BA7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9BA7
 642+ 9BA7 21 BE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9BAA 3A CC 88     	ld a,(Vel_right)
 644+ 9BAD A7           	and a
 645+ 9BAE 28 06        	jr z,1F
 646+ 9BB0 47           	ld b,a
 647+ 9BB1 34           3 inc (hl)
 648+ 9BB2 10 FD        	djnz 3B
 649+ 9BB4 18 01        	jr 2F
 650+ 9BB6 34           1 inc (hl)
 651+ 9BB7 C9           2 ret
 652+ 9BB8
 653+ 9BB8              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9BB8              ;
 655+ 9BB8              ;	5/2/23
 656+ 9BB8              ;
 657+ 9BB8              ;	Dec_CTRL_DESPLZ
 658+ 9BB8              ;
 659+ 9BB8              ;
 660+ 9BB8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9BB8
 662+ 9BB8 21 BE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9BBB 3A CB 88     	ld a,(Vel_left)
 664+ 9BBE A7           	and a
 665+ 9BBF 28 06        	jr z,1F
 666+ 9BC1 47           	ld b,a
 667+ 9BC2 35           3 dec (hl)
 668+ 9BC3 10 FD        	djnz 3B
 669+ 9BC5 18 01        	jr 2F
 670+ 9BC7 35           1 dec (hl)
 671+ 9BC8 C9           2 ret
 672+ 9BC9
 673+ 9BC9              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9BC9
 675+ 9BC9 2A B8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9BCC 01 1F 00     	ld bc,31
 677+ 9BCF A7           	and a
 678+ 9BD0 ED 4A        	adc hl,bc
 679+ 9BD2 22 B8 88     	ld (Posicion_actual),hl
 680+ 9BD5 21 E2 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9BD8 CB C6        	set 0,(hl)
 682+ 9BDA C9           	ret
 683+ 9BDB
 684+ 9BDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9BDB
 686+ 9BDB 2A B8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9BDE 01 1F 00     	ld bc,31
 688+ 9BE1 A7           	and a
 689+ 9BE2 ED 42        	sbc hl,bc
 690+ 9BE4 22 B8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9BE7 21 E2 88     	ld hl,Ctrl_0
 692+ 9BEA CB CE        	set 1,(hl)
 693+ 9BEC C9           	ret
 694+ 9BED
 695+ 9BED              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9BED
 697+ 9BED 24           Reaparece_abajo inc h
 698+ 9BEE 01 E0 17     	ld bc,$17e0
 699+ 9BF1 A7           	and a
 700+ 9BF2 ED 4A        	adc hl,bc
 701+ 9BF4 22 B8 88     	ld (Posicion_actual),hl
 702+ 9BF7 21 E2 88     	ld hl,Ctrl_0
 703+ 9BFA CB D6        	set 2,(hl)
 704+ 9BFC C9           	ret
 705+ 9BFD
 706+ 9BFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9BFD
 708+ 9BFD 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C00 A7           	and a
 710+ 9C01 ED 42        	sbc hl,bc
 711+ 9C03 22 B8 88     	ld (Posicion_actual),hl
 712+ 9C06 21 E2 88     	ld hl,Ctrl_0
 713+ 9C09 CB DE        	set 3,(hl)
 714+ 9C0B C9           	ret
 715+ 9C0C
 716+ 9C0C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C0C              ;
 718+ 9C0C              ;	15/07/23
 719+ 9C0C
 720+ 9C0C              Reinicio
 721+ 9C0C
 722+ 9C0C              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C0C
 724+ 9C0C AF           	xor a
 725+ 9C0D 21 E7 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C10 CD 2E 9C     	call Limpia_contenido_hl
 727+ 9C13
 728+ 9C13 21 B8 88     	ld hl,Posicion_actual
 729+ 9C16 CD 2E 9C     	call Limpia_contenido_hl
 730+ 9C19
 731+ 9C19 CD 5E 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C1C CD E8 9E     	call Inicia_Puntero_mov
 733+ 9C1F
 734+ 9C1F 21 E9 88     	ld hl,Incrementa_puntero
 735+ 9C22 06 05        	ld b,5
 736+ 9C24 77           1 ld (hl),a
 737+ 9C25 23           	inc hl
 738+ 9C26 10 FC        	djnz 1B
 739+ 9C28
 740+ 9C28 21 F3 88     	ld hl,Ctrl_2
 741+ 9C2B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C2D
 743+ 9C2D C9           	ret
 744+ 9C2E
 745+ 9C2E 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C2F 23           	inc hl
 747+ 9C30 77           	ld (hl),a
 748+ 9C31 C9           	ret
 749+ 9C32
 750+ 9C32
# file closed: Direcciones.asm
1518  9C32              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C32              ; ------------------------------------------------------------------------
   2+ 9C32              ;
   3+ 9C32              ;	02/04/23
   4+ 9C32              ;
   5+ 9C32              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C32              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C32              ;
   8+ 9C32              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C32              ;
  10+ 9C32              ;	Modifica: A,BC y DE.
  11+ 9C32
  12+ 9C32 C5           Genera_coordenadas push bc
  13+ 9C33 E5           	push hl
  14+ 9C34 D5           	push de
  15+ 9C35
  16+ 9C35 2A B8 88     	ld hl,(Posicion_actual)
  17+ 9C38
  18+ 9C38 7D           	ld a,l
  19+ 9C39 E6 1F        	and $1f
  20+ 9C3B 32 BC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C3E
  22+ 9C3E CD A7 98     	call calcula_tercio
  23+ 9C41 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C42
  25+ 9C42 1E 00        	ld e,0
  26+ 9C44 7D           	ld a,l
  27+ 9C45 E6 E0        	and $e0
  28+ 9C47 28 01        	jr z,1F
  29+ 9C49 04           	inc b
  30+ 9C4A
  31+ 9C4A 04           1 inc b
  32+ 9C4B 05           	dec b
  33+ 9C4C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C4E              ;														; _ , salimos.
  35+ 9C4E 1C           3 inc e
  36+ 9C4F D6 20        	sub 32
  37+ 9C51 20 FB        	jr nz,3B
  38+ 9C53 10 F5        	djnz 1B
  39+ 9C55
  40+ 9C55 7B           2 ld a,e
  41+ 9C56 32 BD 88     	ld (Coordenada_y),a
  42+ 9C59
  43+ 9C59 D1           	pop de
  44+ 9C5A E1           	pop hl
  45+ 9C5B C1           	pop bc
  46+ 9C5C
  47+ 9C5C C9           	ret
  48+ 9C5D
  49+ 9C5D              ; ------------------------------------------------------------------------
  50+ 9C5D              ;	28/05/23
  51+ 9C5D              ;
  52+ 9C5D              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C5D              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C5D              ;
  55+ 9C5D              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C5D              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C5D              ;
  58+ 9C5D              ;		DE="$120d"
  59+ 9C5D              ;
  60+ 9C5D              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C5D              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C5D              ;
  63+ 9C5D              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C5D
  65+ 9C5D              ;	Modifica: A,BC y DE.
  66+ 9C5D
  67+ 9C5D
  68+ 9C5D              Genera_coordenadas_disparo
  69+ 9C5D
  70+ 9C5D              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C5D
  72+ 9C5D 7D           	ld a,l
  73+ 9C5E E6 1F        	and $1f
  74+ 9C60 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C61 CD A7 98     	call calcula_tercio
  76+ 9C64 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C65 1E 00        	ld e,0
  78+ 9C67 7D           	ld a,l
  79+ 9C68 E6 E0        	and $e0
  80+ 9C6A 28 01        	jr z,1F
  81+ 9C6C 04           	inc b
  82+ 9C6D 1C           1 inc e
  83+ 9C6E D6 20        	sub 32
  84+ 9C70 20 FB        	jr nz,1B
  85+ 9C72 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C74 C9           	ret
  87+ 9C75
# file closed: Genera_coordenadas.asm
1519  9C75              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C75              ; Relojes y temporizaciones.
   2+ 9C75
   3+ 9C75              ; ------------------------------------------------------
   4+ 9C75              ;
   5+ 9C75              ;	16/7/23
   6+ 9C75              ;
   7+ 9C75              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C75              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C75              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C75              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C75              ;
  12+ 9C75              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C75              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C75
  15+ 9C75              ; Disparo_entidad db 1
  16+ 9C75              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C75              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C75
  19+ 9C75              Habilita_disparos
  20+ 9C75
  21+ 9C75 7E           	ld a,(hl)
  22+ 9C76 A7           	and a
  23+ 9C77 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C78
  25+ 9C78 EB           	ex de,hl
  26+ 9C79
  27+ 9C79 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C7A C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C7B
  30+ 9C7B              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C7B
  32+ 9C7B 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C7C 7E           	ld a,(hl)
  34+ 9C7D 23           	inc hl
  35+ 9C7E 77           	ld (hl),a
  36+ 9C7F
  37+ 9C7F EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C80 3E 01        	ld a,1
  39+ 9C82 77           	ld (hl),a
  40+ 9C83 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1520  9C84              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C84
   2+ 9C84
   3+ 9C84              ;   07/07/23
   4+ 9C84              ;
   5+ 9C84              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C84              ;
   7+ 9C84              ;   Codificación:
   8+ 9C84              ;
   9+ 9C84              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C84              ;
  11+ 9C84              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C84              ;
  13+ 9C84              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C84              ;
  15+ 9C84              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C84              ;
  17+ 9C84              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C84              ;                               ..... %01000010 Vel_up 4
  19+ 9C84              ;                                               Vel_down 2
  20+ 9C84              ;                               ..... $42
  21+ 9C84              ;
  22+ 9C84              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C84              ;
  24+ 9C84              ;                               ..... %01000010 Vel_left 4
  25+ 9C84              ;                                               Vel_right 2
  26+ 9C84              ;                               ..... $42
  27+ 9C84              ;
  28+ 9C84              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C84              ;
  30+ 9C84              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C84              ;
  32+ 9C84              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C84              ;
  34+ 9C84              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C84              ;                                     $53
  36+ 9C84              ;
  37+ 9C84              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C84              ;
  39+ 9C84              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C84              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C84              ;
  42+ 9C84              ;                       Arriba ..... $81
  43+ 9C84              ;                       Arriba - izquierda ..... $a1
  44+ 9C84              ;                       Arriba - derecha ..... $91
  45+ 9C84              ;
  46+ 9C84              ;                       Abajo ..... $41
  47+ 9C84              ;                       Abajo - izquierda ..... $61
  48+ 9C84              ;                       Abajo - derecha ..... $51
  49+ 9C84              ;
  50+ 9C84              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C84              ;
  52+ 9C84              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C84              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C84              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C84              ;
  56+ 9C84              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C84              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C84              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C84              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C84              ;
  61+ 9C84              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C84              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C84              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C84              ;
  65+ 9C84              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C84              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C84              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C84              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C84
  70+ 9C84              ; ----- ----- ----- ----- -----
  71+ 9C84
  72+ 9C84 B0 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C86 B8 9C            defw F_1
  74+ 9C88 C2 9C            defw F_2
  75+ 9C8A CC 9C            defw Codo_abajo_derecha
  76+ 9C8C 00 9D            defw Derecha_y_subiendo
  77+ 9C8E 0A 9D            defw Derecha_y_subiendo_1
  78+ 9C90 14 9D            defw F_3
  79+ 9C92 1E 9D            defw F_4
  80+ 9C94 28 9D            defw Derecha_y_bajando
  81+ 9C96 32 9D            defw Derecha_y_bajando_1
  82+ 9C98 3C 9D            defw Derecha_y_bajando_2
  83+ 9C9A 46 9D            defw Codo_derecha_abajo
  84+ 9C9C 76 9D            defw Codo_abajo_izq.
  85+ 9C9E AA 9D            defw Izquierda_y_subiendo
  86+ 9CA0 B4 9D            defw Izquierda_y_subiendo_1
  87+ 9CA2 BE 9D            defw F_5
  88+ 9CA4 C8 9D            defw F_6
  89+ 9CA6 D2 9D            defw Izquierda_y_bajando
  90+ 9CA8 DC 9D            defw Izquierda_y_bajando_1
  91+ 9CAA E6 9D            defw Izquierda_y_bajando_2
  92+ 9CAC F0 9D            defw Codo_izquierda_abajo
  93+ 9CAE 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9CB0
  95+ 9CB0 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9CB4 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9CB8
  98+ 9CB8 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9CBC 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9CC0 08 00
 100+ 9CC2 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9CC6 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9CCA 0F FE
 102+ 9CCC
 103+ 9CCC 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9CD0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9CD4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9CD8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9CDC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9CE0 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9CE4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9CE8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CEC 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CF0 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CF4 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CF8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CFC 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D00
 117+ 9D00 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D04 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D08 06 00
 119+ 9D0A
 120+ 9D0A 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D0E 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D12 02 00
 122+ 9D14
 123+ 9D14 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D18 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D1C 04 00
 125+ 9D1E 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D22 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D26 08 00
 127+ 9D28
 128+ 9D28 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D2C 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D30 02 00
 130+ 9D32
 131+ 9D32 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D36 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D3A 06 00
 133+ 9D3C
 134+ 9D3C 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D40 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D44 06 00
 136+ 9D46
 137+ 9D46              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D46
 139+ 9D46 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D4A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D4E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D52 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D56 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D5A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D5E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D62 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D66 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D6A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D6E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D72 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D76
 152+ 9D76 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D7A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D7E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D82 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D86 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D8A 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D8E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D92 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D96 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D9A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D9E 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9DA2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9DA6 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9DAA
 166+ 9DAA 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9DAE 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9DB2 06 00
 168+ 9DB4
 169+ 9DB4 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9DB8 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9DBC 02 00
 171+ 9DBE
 172+ 9DBE 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9DC2 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9DC6 04 00
 174+ 9DC8 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9DCC 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9DD0 08 00
 176+ 9DD2
 177+ 9DD2 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9DD6 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9DDA 02 00
 179+ 9DDC
 180+ 9DDC 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9DE0 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9DE4 06 00
 182+ 9DE6
 183+ 9DE6 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9DEA 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DEE 06 00
 185+ 9DF0
 186+ 9DF0 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DF4 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DF8 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DFC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E00 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E04 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E08 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E0C 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E10 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E14 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E18 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E1C 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E20
 199+ 9E20              ; ----- ----- ----- ----- -----
 200+ 9E20              ;
 201+ 9E20              ;   27/06/23
 202+ 9E20
 203+ 9E20              Movimiento
 204+ 9E20
 205+ 9E20              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E20
 207+ 9E20              ;    ld hl,(Posicion_actual)
 208+ 9E20
 209+ 9E20 3A F3 88         ld a,(Ctrl_2)
 210+ 9E23 CB 57            bit 2,a
 211+ 9E25 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E27
 213+ 9E27 2A E5 88         ld hl,(Puntero_mov)
 214+ 9E2A 7E               ld a,(hl)
 215+ 9E2B
 216+ 9E2B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E2B
 218+ 9E2B              Inicia_desplazamiento.
 219+ 9E2B
 220+ 9E2B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E2B
 222+ 9E2B CD 1F 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E2E
 224+ 9E2E              ; Iniciamos (Repetimos_mov).
 225+ 9E2E
 226+ 9E2E 7E               ld a,(hl)
 227+ 9E2F E6 0F            and $0f
 228+ 9E31 32 EB 88         ld (Repetimos_desplazamiento),a
 229+ 9E34 32 EC 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E37
 231+ 9E37              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E37
 233+ 9E37 23               inc hl
 234+ 9E38 7E               ld a,(hl)
 235+ 9E39 32 EE 88         ld (Cola_de_desplazamiento),a
 236+ 9E3C 2B               dec hl
 237+ 9E3D
 238+ 9E3D 21 F3 88         ld hl,Ctrl_2
 239+ 9E40 CB D6            set 2,(hl)
 240+ 9E42
 241+ 9E42              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E42              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E42
 244+ 9E42              Desplazamiento_iniciado
 245+ 9E42
 246+ 9E42 CD F3 9E         call Aplica_desplazamiento
 247+ 9E45
 248+ 9E45 3A F3 88         ld a,(Ctrl_2)
 249+ 9E48 CB 67            bit 4,a
 250+ 9E4A C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E4B
 252+ 9E4B 21 EB 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E4E 35               dec (hl)
 254+ 9E4F C0               ret nz
 255+ 9E50
 256+ 9E50              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E50              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E50              ; Analiza (Cola_de_desplazamiento).
 259+ 9E50
 260+ 9E50 3A EE 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E53 A7               and a
 262+ 9E54 CC 48 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E57 28 30            jr z,Reinicia_el_movimiento
 264+ 9E59
 265+ 9E59 FE FF            cp $ff
 266+ 9E5B 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E5D
 268+ 9E5D FE FE            cp $fe
 269+ 9E5F CC CC 9E         call z,Fijamos_bucle
 270+ 9E62 28 25            jr z,Reinicia_el_movimiento
 271+ 9E64
 272+ 9E64 FE FD            cp $fd
 273+ 9E66 20 11            jr nz,1F
 274+ 9E68
 275+ 9E68              ; ---
 276+ 9E68              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E68
 278+ 9E68 3A F3 88         ld a,(Ctrl_2)
 279+ 9E6B CB 5F            bit 3,a
 280+ 9E6D 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E6F
 282+ 9E6F              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E6F
 284+ 9E6F 21 F3 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E72 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E74
 287+ 9E74 CD DD 9E         call Inicia_Repetimos_movimiento
 288+ 9E77 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E79              ; ---
 290+ 9E79
 291+ 9E79 FE 01        1 cp 1
 292+ 9E7B CA B6 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E7E
 294+ 9E7E 3D               dec a
 295+ 9E7F 32 EE 88         ld (Cola_de_desplazamiento),a
 296+ 9E82
 297+ 9E82 3A EC 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E85 32 EB 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E88              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E88 C9               ret
 301+ 9E89
 302+ 9E89              Reinicia_el_movimiento
 303+ 9E89
 304+ 9E89 3A F3 88         ld a,(Ctrl_2)
 305+ 9E8C CB 5F            bit 3,a
 306+ 9E8E 28 1B            jr z,2F
 307+ 9E90
 308+ 9E90              ; (Cola_de_desplazamiento)="254".
 309+ 9E90
 310+ 9E90 21 ED 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E93 35               dec (hl)
 312+ 9E94 20 15            jr nz,2F
 313+ 9E96
 314+ 9E96              ; Fin de las repeticiones del último movimiento.
 315+ 9E96
 316+ 9E96 21 F3 88         ld hl,Ctrl_2
 317+ 9E99 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E9B
 319+ 9E9B 2A E5 88         ld hl,(Puntero_mov)
 320+ 9E9E 23               inc hl
 321+ 9E9F 23               inc hl
 322+ 9EA0 23               inc hl
 323+ 9EA1 22 E5 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9EA4              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9EA4 7E               ld a,(hl)
 326+ 9EA5 32 EE 88         ld (Cola_de_desplazamiento),a
 327+ 9EA8
 328+ 9EA8 C3 50 9E         jp Cola
 329+ 9EAB
 330+ 9EAB CD E8 9E     2 call Inicia_Puntero_mov
 331+ 9EAE
 332+ 9EAE 21 F3 88         ld hl,Ctrl_2
 333+ 9EB1 CB 96            res 2,(hl)
 334+ 9EB3
 335+ 9EB3 C3 20 9E         jp Movimiento
 336+ 9EB6
 337+ 9EB6              Siguiente_desplazamiento
 338+ 9EB6
 339+ 9EB6              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9EB6              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9EB6
 342+ 9EB6 21 F3 88         ld hl,Ctrl_2
 343+ 9EB9 CB 96            res 2,(hl)
 344+ 9EBB
 345+ 9EBB 2A E5 88         ld hl,(Puntero_mov)
 346+ 9EBE 23               inc hl
 347+ 9EBF 23               inc hl
 348+ 9EC0 22 E5 88         ld (Puntero_mov),hl
 349+ 9EC3
 350+ 9EC3 7E               ld a,(hl)
 351+ 9EC4 A7               and a
 352+ 9EC5 CC 48 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9EC8 CA 89 9E         jp z,Reinicia_el_movimiento
 354+ 9ECB
 355+ 9ECB C9               ret
 356+ 9ECC
 357+ 9ECC              ; Subrutinas -----------------------------------------
 358+ 9ECC              ; ---------- --------- --------- ---------- ----------
 359+ 9ECC              ;
 360+ 9ECC              ;   24/07/23
 361+ 9ECC              ;
 362+ 9ECC              ;   Fijamos_bucle
 363+ 9ECC              ;
 364+ 9ECC              ;
 365+ 9ECC
 366+ 9ECC              Fijamos_bucle
 367+ 9ECC
 368+ 9ECC 3A E9 88         ld a,(Incrementa_puntero)
 369+ 9ECF 3C               inc a
 370+ 9ED0 32 EA 88         ld (Incrementa_puntero_backup),a
 371+ 9ED3
 372+ 9ED3 CD 48 9F         call Incrementa_Puntero_indice_mov
 373+ 9ED6 2A E3 88         ld hl,(Puntero_indice_mov)
 374+ 9ED9 22 E7 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9EDC C9               ret
 376+ 9EDD
 377+ 9EDD              ; ---------- --------- --------- ---------- ----------
 378+ 9EDD              ;
 379+ 9EDD              ;   07/7/23
 380+ 9EDD              ;
 381+ 9EDD              ;   Inicia_Repetimos_movimiento
 382+ 9EDD              ;
 383+ 9EDD              ;
 384+ 9EDD
 385+ 9EDD              Inicia_Repetimos_movimiento
 386+ 9EDD
 387+ 9EDD              ; Iniciamos (Repetimos_movimiento).
 388+ 9EDD
 389+ 9EDD DD 2A E5 88      ld ix,(Puntero_mov)
 390+ 9EE1 DD 7E 02         ld a,(ix+2)
 391+ 9EE4 32 ED 88         ld (Repetimos_movimiento),a
 392+ 9EE7
 393+ 9EE7 C9               ret
 394+ 9EE8
 395+ 9EE8              ; ---------- --------- --------- ---------- ----------
 396+ 9EE8              ;
 397+ 9EE8              ;   26/6/23
 398+ 9EE8              ;
 399+ 9EE8              ;   Inicia_Puntero_mov
 400+ 9EE8              ;
 401+ 9EE8              ;
 402+ 9EE8
 403+ 9EE8 2A E3 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9EEB 5E               ld e,(hl)
 405+ 9EEC 23               inc hl
 406+ 9EED 56               ld d,(hl)
 407+ 9EEE EB               ex de,hl
 408+ 9EEF 22 E5 88         ld (Puntero_mov),hl
 409+ 9EF2 C9               ret
 410+ 9EF3
 411+ 9EF3              ; ---------- --------- --------- ---------- ----------
 412+ 9EF3              ;
 413+ 9EF3              ;   27/06/23
 414+ 9EF3              ;
 415+ 9EF3              ;   Aplica_movimiento.
 416+ 9EF3
 417+ 9EF3              Aplica_desplazamiento
 418+ 9EF3
 419+ 9EF3              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EF3
 421+ 9EF3 2A E5 88         ld hl, (Puntero_mov)
 422+ 9EF6
 423+ 9EF6 7E               ld a,(hl)
 424+ 9EF7 E6 F0            and $f0
 425+ 9EF9 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EFA
 427+ 9EFA CB 7E            bit 7,(hl)
 428+ 9EFC 28 03            jr z,1F
 429+ 9EFE CD 1E 99         call Mov_up
 430+ 9F01 2A E5 88     1 ld hl, (Puntero_mov)
 431+ 9F04 CB 76            bit 6,(hl)
 432+ 9F06 28 03            jr z,2F
 433+ 9F08 CD ED 98         call Mov_down
 434+ 9F0B 2A E5 88     2 ld hl, (Puntero_mov)
 435+ 9F0E CB 6E            bit 5,(hl)
 436+ 9F10 28 03            jr z,3F
 437+ 9F12 CD 7F 9A         call Mov_left
 438+ 9F15 2A E5 88     3 ld hl, (Puntero_mov)
 439+ 9F18 CB 66            bit 4,(hl)
 440+ 9F1A C8               ret z
 441+ 9F1B CD 61 99         call Mov_right
 442+ 9F1E C9               ret
 443+ 9F1F
 444+ 9F1F              ; ---------- --------- --------- ---------- ----------
 445+ 9F1F              ;
 446+ 9F1F              ;   26/06/23
 447+ 9F1F              ;
 448+ 9F1F              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F1F
 450+ 9F1F              Ajusta_velocidad_desplazamiento
 451+ 9F1F
 452+ 9F1F              ; 1er byte de la cadena de movimiento.
 453+ 9F1F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F1F
 455+ 9F1F CD 3D 9F         call Extrae_nibble_alto
 456+ 9F22
 457+ 9F22 32 CD 88         ld (Vel_up),a
 458+ 9F25 79               ld a,c
 459+ 9F26 E6 0F            and $0f
 460+ 9F28 32 CE 88         ld (Vel_down),a
 461+ 9F2B
 462+ 9F2B              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F2B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F2B
 465+ 9F2B 23               inc hl
 466+ 9F2C CD 3D 9F         call Extrae_nibble_alto
 467+ 9F2F
 468+ 9F2F 32 CB 88         ld (Vel_left),a
 469+ 9F32 79               ld a,c
 470+ 9F33 E6 0F            and $0f
 471+ 9F35 32 CC 88         ld (Vel_right),a
 472+ 9F38
 473+ 9F38              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F38
 475+ 9F38 23               inc hl
 476+ 9F39 22 E5 88         ld (Puntero_mov),hl
 477+ 9F3C C9               ret
 478+ 9F3D
 479+ 9F3D 06 04        Extrae_nibble_alto ld b,4
 480+ 9F3F 7E               ld a,(hl)
 481+ 9F40 4F               ld c,a
 482+ 9F41 E6 F0            and $f0
 483+ 9F43 CB 3F        1 srl a
 484+ 9F45 10 FC            djnz 1B
 485+ 9F47 C9               ret
 486+ 9F48
 487+ 9F48              ; ---------- --------- --------- ---------- ----------
 488+ 9F48              ;
 489+ 9F48              ;   5/7/23
 490+ 9F48              ;
 491+ 9F48              ;   Incrementa_Puntero_indice_mov
 492+ 9F48
 493+ 9F48              Incrementa_Puntero_indice_mov
 494+ 9F48
 495+ 9F48 21 E9 88         ld hl,Incrementa_puntero
 496+ 9F4B 34               inc (hl)
 497+ 9F4C
 498+ 9F4C 2A E3 88         ld hl,(Puntero_indice_mov)
 499+ 9F4F 01 02 00         ld bc,2
 500+ 9F52 A7               and a
 501+ 9F53 09               add hl,bc
 502+ 9F54 22 E3 88         ld (Puntero_indice_mov),hl
 503+ 9F57
 504+ 9F57 7E               ld a,(hl)
 505+ 9F58 A7               and a
 506+ 9F59
 507+ 9F59              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F59
 509+ 9F59              ;    jr z,$
 510+ 9F59
 511+ 9F59              ;! Reinicia el Patrón de movimiento.
 512+ 9F59
 513+ 9F59 CC 5E 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F5C
 515+ 9F5C AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F5D
 517+ 9F5D C9               ret
 518+ 9F5E
 519+ 9F5E
 520+ 9F5E              ; ---------- --------- --------- ---------- ----------
 521+ 9F5E              ;
 522+ 9F5E              ;   24/07/23
 523+ 9F5E              ;
 524+ 9F5E              ;   Inicializa_Puntero_indice_mov
 525+ 9F5E
 526+ 9F5E              Inicializa_Puntero_indice_mov
 527+ 9F5E
 528+ 9F5E              ; Existe etiqueta de bucle principal???
 529+ 9F5E
 530+ 9F5E 2A E7 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F61 24               inc h
 532+ 9F62 25               dec h
 533+ 9F63 28 05            jr z,2F
 534+ 9F65
 535+ 9F65 22 E3 88         ld (Puntero_indice_mov),hl
 536+ 9F68 18 14            jr 3F
 537+ 9F6A
 538+ 9F6A              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F6A
 540+ 9F6A 3A E9 88     2 ld a,(Incrementa_puntero)
 541+ 9F6D 47               ld b,a
 542+ 9F6E
 543+ 9F6E 2A E3 88         ld hl,(Puntero_indice_mov)
 544+ 9F71 2B           1 dec hl
 545+ 9F72 2B               dec hl
 546+ 9F73 10 FC            djnz 1B
 547+ 9F75 22 E3 88         ld (Puntero_indice_mov),hl
 548+ 9F78
 549+ 9F78 AF               xor a
 550+ 9F79 32 E9 88         ld (Incrementa_puntero),a
 551+ 9F7C 18 06            jr 4F
 552+ 9F7E
 553+ 9F7E 3A EA 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F81 32 E9 88         ld (Incrementa_puntero),a
 555+ 9F84 C9           4 ret
 556+ 9F85
 557+ 9F85
 558+ 9F85
# file closed: Patrones_de_mov.asm
1521  9F85              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F85              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F85              ;
   3+ 9F85              ;	4/12/23
   4+ 9F85              ;
   5+ 9F85              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F85
   7+ 9F85              ;	ADC HL,SP	LD (addr),SP
   8+ 9F85              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F85              ;	ADD IX,SP	LD SP,nn
  10+ 9F85              ; 	ADD IY,SP	LD SP,HL
  11+ 9F85              ;				LD SP,IX
  12+ 9F85              ;	DEC SP		LD SP,IY
  13+ 9F85
  14+ 9F85              ;	EX (SP),HL
  15+ 9F85              ;	EX (SP),IX
  16+ 9F85              ;	EX (SP),IY
  17+ 9F85
  18+ 9F85              ;	INC SP
  19+ 9F85
  20+ 9F85                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 06 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 D6 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 E2 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7FB0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7FB2              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7FB2
  50+ 7FB2 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 7FB5
  52+ 7FB5 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 7FB6 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 7FB8 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7FBA
  56+ 7FBA              ; Disparo o entidad?
  57+ 7FBA
  58+ 7FBA 3A F5 88         ld a,(Ctrl_1)
  59+ 7FBD CB 47            bit 0,a
  60+ 7FBF 28 05            jr z,2F
  61+ 7FC1
  62+ 7FC1 2A 0E 89         ld hl,(Stack_snapshot_disparos)
  63+ 7FC4 18 0F            jr 4F
  64+ 7FC6
  65+ 7FC6              ; No es disparo. Entidad/Amadeus ????
  66+ 7FC6
  67+ 7FC6 3A E2 88     2 ld a,(Ctrl_0)
  68+ 7FC9 CB 77            bit 6,a
  69+ 7FCB 28 05            jr z,7F
  70+ 7FCD
  71+ 7FCD              ; Guardamos foto de Amadeus.
  72+ 7FCD
  73+ 7FCD 2A 12 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7FD0 18 03            jr 4F
  75+ 7FD2
  76+ 7FD2 2A 0C 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 7FD5
  78+ 7FD5 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 7FD7
  80+ 7FD7 D1           1 pop de
  81+ 7FD8 73               ld (hl),e
  82+ 7FD9 23               inc hl
  83+ 7FDA 72               ld (hl),d
  84+ 7FDB 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7FDC 10 F9            djnz 1B
  86+ 7FDE
  87+ 7FDE              ; Disparo o entidad ?
  88+ 7FDE
  89+ 7FDE 3A F5 88         ld a,(Ctrl_1)
  90+ 7FE1 CB 47            bit 0,a
  91+ 7FE3 28 05            jr z,5F
  92+ 7FE5
  93+ 7FE5 22 0E 89         ld (Stack_snapshot_disparos),hl
  94+ 7FE8 18 13            jr 6F
  95+ 7FEA
  96+ 7FEA              ; Entidad o Amadeus ?
  97+ 7FEA
  98+ 7FEA 3A E2 88     5 ld a,(Ctrl_0)
  99+ 7FED CB 77            bit 6,a
 100+ 7FEF 28 09            jr z,8F
 101+ 7FF1
 102+ 7FF1 22 12 89         ld (End_Snapshot_Amadeus),hl
 103+ 7FF4 ED 7B 06 89      ld sp,(Stack)
 104+ 7FF8 FB               ei
 105+ 7FF9 C9               ret
 106+ 7FFA
 107+ 7FFA 22 0C 89     8 ld (Stack_snapshot),hl
 108+ 7FFD ED 7B 06 89  6 ld sp,(Stack)
 109+ 8001
 110+ 8001 FB               ei
 111+ 8002 C9               ret
 112+ 8003
 113+ 8003              ; -----------------------------------------------------------------------------
 114+ 8003              ;
 115+ 8003              ;   21/11/23
 116+ 8003
 117+ 8003              Limpia_y_reinicia_Stack_Snapshot
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos.
 120+ 8003
 121+ 8003 2A 0C 89         ld hl,(Stack_snapshot)
 122+ 8006 7D               ld a,l
 123+ 8007 A7               and a
 124+ 8008 C8               ret z   ;   Salimos si el álbum está vacío.
 125+ 8009
 126+ 8009 47               ld b,a
 127+ 800A 04               inc b
 128+ 800B
 129+ 800B 36 00        1 ld (hl),0
 130+ 800D 2D               dec l
 131+ 800E 10 FB            djnz 1B
 132+ 8010
 133+ 8010              ;   Reinicializa (Stack_snapshot).
 134+ 8010
 135+ 8010 AF               xor a
 136+ 8011 32 0C 89         ld (Stack_snapshot),a
 137+ 8014
 138+ 8014 C9               ret
# file closed: Guarda_foto_registros.asm
1522  8015
1523  8015              	SAVESNA "Pruebas.sna", START
1524  8015
1525  8015
1526  8015
1527  8015
# file closed: Banco_de_pruebas.asm
